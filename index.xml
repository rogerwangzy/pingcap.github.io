<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL at Scale</title>
    <link>https://pingcap.com/</link>
    <description>Recent content on SQL at Scale</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 17 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://pingcap.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TiDB 在知乎万亿量级业务数据下的实践和挑战</title>
      <link>https://pingcap.com/cases-cn/user-case-zhihu/</link>
      <pubDate>Wed, 26 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-zhihu/</guid>
      <description>目前已读服务的流量已达每秒 4 万行记录写入，3 万独立查询和 1200 万个文档判读，在这样的压力下已读服务响应时间的 P99 和 P999 仍然稳定的维持在 25ms 和 50ms，其实平均时间是远低于这个数据的。</description>
    </item>
    
    <item>
      <title>TiDB 在银行核心金融领域的研究与两地三中心实践</title>
      <link>https://pingcap.com/cases-cn/user-case-beijing-bank/</link>
      <pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-beijing-bank/</guid>
      <description>北京银行的架构采用两地三中心五副本的模式部署。跨城长距离的分布式数据库建设具有很大的挑战。</description>
    </item>
    
    <item>
      <title>TiDB 在西山居实时舆情监控系统中的应用</title>
      <link>https://pingcap.com/cases-cn/user-case-xishanju/</link>
      <pubDate>Sat, 09 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-xishanju/</guid>
      <description>舆情系统目前总数据量数 T，已正式上线三个月，期间从未出现过异常，系统平稳、使用效果也非常好。可以说 TiDB 给我们的体验远超预期。</description>
    </item>
    
    <item>
      <title>TiDB 在海航易建科技与香港航空研发收益支持系统过程中的实践</title>
      <link>https://pingcap.com/cases-cn/user-case-ekingtech/</link>
      <pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-ekingtech/</guid>
      <description>使用 TiDB 后，我们无需再考虑分表分库，近10 亿行数据都可复用以往 MySQL 代码，进行 OLAP 分析比上一代收益系统提速近 20 倍，还免去了数据同步可能存在的问题。</description>
    </item>
    
    <item>
      <title>TiDB 在 OPPO 准实时数据仓库中的实践</title>
      <link>https://pingcap.com/cases-cn/user-case-oppo/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-oppo/</guid>
      <description>OPPO 大数据中心在 2019 年初承接了接入某业务线核心数据的重要任务：一期目标是建立一个能提供准实时大数据查询服务的数据仓库。我们选用了之前从未在公司大规模正式使用过的 TiDB 作为核心数据库引擎。本文记录这次吃螃蟹的一些经验和教训，供大家参考。</description>
    </item>
    
    <item>
      <title>360 智能商业业务线经验分享：TiDB 写热点调优实战</title>
      <link>https://pingcap.com/cases-cn/user-case-360-business/</link>
      <pubDate>Fri, 06 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-360-business/</guid>
      <description>360 智能商业业务线从 2019 年 3 月份开始使用 TiDB，目前线上有 5 套 TiDB 集群，数据总容量 20T，主要应用在数据分析平台、广告主实时报表、物料库、实时监控平台等核心业务中。</description>
    </item>
    
    <item>
      <title>网易互娱的数据库选型和 TiDB 应用实践</title>
      <link>https://pingcap.com/cases-cn/user-case-wangyihuyu/</link>
      <pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-wangyihuyu/</guid>
      <description>TiDB 兼容 MySQL 协议，支持 TP/AP 事务且扩展性好，能很好地解决网易互娱计费组业务大容量、高可用等问题。目前我们的业务在不断深入和扩大规模使用 TiDB。</description>
    </item>
    
    <item>
      <title>TiDB 在平安核心系统的引入及应用</title>
      <link>https://pingcap.com/cases-cn/user-case-pingankeji/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-pingankeji/</guid>
      <description>这个应用场景是我们的产险的实际分析场景，表数据量不大但是 SQL 较为复杂，是典型的星型查询。在 Oracle 用了 134 秒，但是 TiDB 用了 50 分钟，我们觉得很诧异，与 TiDB 的同事咨询后，他们通过现场支持我们优化底层代码后 34 秒可以跑出来。</description>
    </item>
    
    <item>
      <title>贝壳金服 TiDB 在线跨机房迁移实践</title>
      <link>https://pingcap.com/cases-cn/user-case-beikejinfu/</link>
      <pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-beikejinfu/</guid>
      <description>现有集群已经使用 100 多个 Syncer 同步上游 MySQL 数据，目前已经达到 4.7TB 热数据，上百张离线和实时报表。我们结合 TiDB 的特性探索了一种在线不停机迁移机房的方式。</description>
    </item>
    
    <item>
      <title>美团点评携手 PingCAP 开启新一代数据库深度实践之旅</title>
      <link>https://pingcap.com/cases-cn/user-case-meituandianping/</link>
      <pubDate>Thu, 15 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-meituandianping/</guid>
      <description>美团业务线众多，我们根据业务特点及重要程度逐步推进上线，到截稿为止，已经上线 10 个集群，近 200 个物理节点。初期上线的集群，已经分别服务于配送、出行、闪付、酒旅等业务。</description>
    </item>
    
    <item>
      <title>TiDB 在威锐达 WindRDS 远程诊断及运维中心的应用</title>
      <link>https://pingcap.com/cases-cn/user-case-weiruida/</link>
      <pubDate>Wed, 16 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-weiruida/</guid>
      <description>从测试环境搭建完成到上线，TiDB 持续稳定运行中，平均 QPS 稳定在数千。TiDB 在性能、可用性、稳定性上完全超出了我们的预期。</description>
    </item>
    
    <item>
      <title>TiDB 在游族网络平台部的深度应用</title>
      <link>https://pingcap.com/cases-cn/user-case-youzu/</link>
      <pubDate>Thu, 08 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-youzu/</guid>
      <description>经过内部的实际使用后，后续已经有数个符合业务场景在评估或计划使用 TiDB 作为 OLTP 存储层的支撑。</description>
    </item>
    
    <item>
      <title>TiKV 在京东云对象存储元数据管理的实践</title>
      <link>https://pingcap.com/cases-cn/user-case-jingdongyun/</link>
      <pubDate>Mon, 23 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-jingdongyun/</guid>
      <description>目前 TiKV 在京东云对象存储业务上是 Primary 数据库，总集群数量为 10+，生产环境单集群 QPS 峰值 4 万（读写 1:1），最大的单集群数据量 200+亿，共有 50 余万个 Region，Latency 能保证在 10ms 左右。</description>
    </item>
    
    <item>
      <title>微众银行数据库架构演进及 TiDB 实践经验</title>
      <link>https://pingcap.com/cases-cn/user-case-webank/</link>
      <pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-webank/</guid>
      <description>TiDB 在微众银行的应用场景包括 OLAP、OLTP 及部分混合场景，大部分场景在 TB 级别的业务数据规模。</description>
    </item>
    
    <item>
      <title>TiDB 帮助万达网络科技集团实现高性能高质量的实时风控平台</title>
      <link>https://pingcap.com/cases-cn/user-case-wanda/</link>
      <pubDate>Tue, 05 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-wanda/</guid>
      <description>借助 TiDB 的分布式计算和存储引擎，集群对外服务的处理能力大大增强，高并发实时的风控规则计算能够轻松的处理完，并且数据库集群获得了线性提升和扩展的能力。</description>
    </item>
    
    <item>
      <title>盖娅互娱 | 日均数据量千万级，MySQL、TiDB 两种存储方案的落地对比</title>
      <link>https://pingcap.com/cases-cn/user-case-gaea-ad/</link>
      <pubDate>Thu, 09 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-gaea-ad/</guid>
      <description>TiDB 在数据规模越大的情况下，对比 MySQL 的优势就越明显，应该是 TiDB 自研的分布式 SQL 优化器带来的优势。</description>
    </item>
    
    <item>
      <title>TiDB 在华泰证券的探索与实践</title>
      <link>https://pingcap.com/cases-cn/user-case-huataizhengquan/</link>
      <pubDate>Wed, 31 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-huataizhengquan/</guid>
      <description>自上线以来，TiDB 集群运行稳定，最高 QPS 达到每秒 3.4 万笔。写入速度与原 MySQL 环境相当，kafka 端未出现数据积压，系统资源使用均衡，并且尚有余量。</description>
    </item>
    
    <item>
      <title>TiDB 在小红书从 0 到 200&#43; 节点的探索和应用</title>
      <link>https://pingcap.com/cases-cn/user-case-xiaohongshu/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-xiaohongshu/</guid>
      <description>​本文根据近两年 TiDB 在小红书的落地过程，和大家一起探讨一下，小红书在新数据库选型的考虑因素、以及 TiDB 从场景分类的角度是如何考量及逐步推广使用的。</description>
    </item>
    
    <item>
      <title>TiDB 在株式会社 FUNYOURS JAPAN 的应用</title>
      <link>https://pingcap.com/cases-cn/user-case-funyours-japan/</link>
      <pubDate>Fri, 23 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-funyours-japan/</guid>
      <description>比较原本架构与 TiDB 架构，现在运营上最直接的效益就是硬体成本的节约。</description>
    </item>
    
    <item>
      <title>TiDB 在小米的应用实践</title>
      <link>https://pingcap.com/cases-cn/user-case-xiaomi/</link>
      <pubDate>Mon, 03 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-xiaomi/</guid>
      <description>目前 TiDB 在小米主要提供 OLTP 服务，2 个业务均已上线数月，TiDB 的稳定性经受住了考验，带来了很棒的体验。</description>
    </item>
    
    <item>
      <title>TiDB 在 Ping&#43;&#43; 金融聚合支付业务中的实践</title>
      <link>https://pingcap.com/cases-cn/user-case-ping&#43;&#43;/</link>
      <pubDate>Mon, 26 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-ping&#43;&#43;/</guid>
      <description>TiDB 具备了出色的分布式事务能力，完全达到了 HTAP 的级别。TiKV 基于 Raft 协议做复制，保证多副本数据的一致性，可以秒杀当前主流的 MyCat、DRDS 分布式架构，且数据库的可用性更高。</description>
    </item>
    
    <item>
      <title>TiDB 在马上消费金融核心账务系统归档及跑批业务下的实践</title>
      <link>https://pingcap.com/cases-cn/user-case-mashangxiaofei/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-mashangxiaofei/</guid>
      <description>我们积累了账务归档、总账跑批等大数据量、高并发量的 TiDB 实践经验，还将所有 TiDB 运行到了 Kubernetes 容器云平台之上，使数据库真正获得了 Cloud-native 能力。</description>
    </item>
    
    <item>
      <title>汽车之家从 SQL Server 到 TiDB 的异构变迁</title>
      <link>https://pingcap.com/cases-cn/user-case-qichezhijia/</link>
      <pubDate>Fri, 29 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-qichezhijia/</guid>
      <description>由 SQL Server 迁移至 TiDB，从传统关系型到分布式 HTAP，从商业授权到开源社区，是汽车之家社区历史上一次重大的技术方向转型。</description>
    </item>
    
    <item>
      <title>TiDB at 丰巢：尝鲜分布式数据库</title>
      <link>https://pingcap.com/cases-cn/user-case-fengchao/</link>
      <pubDate>Fri, 09 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-fengchao/</guid>
      <description>TiDB 的改造完成之后，丰巢推送服务对大部分消息进行了落地和查询，截止目前为止，推送服务最大的日落地量已经达到了 5 千万。</description>
    </item>
    
    <item>
      <title>TiDB 在 360 金融贷款实时风控场景应用</title>
      <link>https://pingcap.com/cases-cn/user-case-360/</link>
      <pubDate>Mon, 27 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-360/</guid>
      <description>随业务量的增大，TPS 指标提升至 5000 左右，整个数据库平台的峰值计算能力提升了 10 倍左右，但平台整体吞吐量和响应时间都没有特别的抖动，一直稳定在可接受范围内。</description>
    </item>
    
    <item>
      <title>TiDB 在摩拜单车的深度实践及应用</title>
      <link>https://pingcap.com/cases-cn/user-case-mobike-2/</link>
      <pubDate>Mon, 18 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-mobike-2/</guid>
      <description>TiDB 的出现，不仅弥补了 MySQL 单机容量上限、传统 Sharding 方案查询维度单一等缺点，而且其计算存储分离的架构设计让集群水平扩展变得更容易。</description>
    </item>
    
    <item>
      <title>TiDB / TiSpark 在易果集团实时数仓中的创新实践</title>
      <link>https://pingcap.com/cases-cn/user-case-yiguo/</link>
      <pubDate>Mon, 18 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-yiguo/</guid>
      <description>同时解决 OLAP 和 OLTP 是一件相当困难的事情，TiDB 和 TiSpark 虽然推出不久，但是已经满足很多应用场景，同时在易用性和技术支持上也非常值得称赞。</description>
    </item>
    
    <item>
      <title>TiDB 在 58 集团的应用与实践</title>
      <link>https://pingcap.com/cases-cn/user-case-58/</link>
      <pubDate>Wed, 28 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-58/</guid>
      <description>TEG 目前写入量比较大，数据量在 6T 左右，数据增长 500G/月 左右，近半年 TEG 业务损坏了 8 块闪存卡，但是都没有影响业务，让我们充分感受到了 TiDB 高可用的优势。</description>
    </item>
    
    <item>
      <title>TiDB 在爱奇艺的应用及实践</title>
      <link>https://pingcap.com/cases-cn/user-case-iqiyi/</link>
      <pubDate>Tue, 18 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-iqiyi/</guid>
      <description>TiDB 可以直接替代 proxy+MySQL 的架构，完美解决了数据量增量情况下出现的很多问题。而且，TiDB 在数据量越大的情况下性能表现得比 MySQL 越惊艳。</description>
    </item>
    
    <item>
      <title>TiDB 助力东南亚领先电商 Shopee 业务升级</title>
      <link>https://pingcap.com/cases-cn/user-case-shopee/</link>
      <pubDate>Tue, 25 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-shopee/</guid>
      <description>截至目前，系统已经平稳运行了六个多月，数据量增长至 35TB，经历了两次扩容后现在集群共包含 42 个节点。</description>
    </item>
    
    <item>
      <title>TiDB 分布式数据库在转转公司的应用实践</title>
      <link>https://pingcap.com/cases-cn/user-case-zhuanzhuan/</link>
      <pubDate>Tue, 29 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-zhuanzhuan/</guid>
      <description>目前 TiDB 在转转线上已经接入消息、风控两套 OLTP 以及一套风控 OLAP 集群。</description>
    </item>
    
    <item>
      <title>TiDB 在摩拜单车在线数据业务的应用和实践</title>
      <link>https://pingcap.com/cases-cn/user-case-mobike/</link>
      <pubDate>Mon, 25 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-mobike/</guid>
      <description>部署 TiDB 近一年来，摩拜单车经历了用户数量近十倍、日骑行数据数十倍的增长，依靠其在线扩容的能力，完成了多次数据库扩容与服务器更换。</description>
    </item>
    
    <item>
      <title>TiDB 在二维火餐饮管理实时报表中的实践</title>
      <link>https://pingcap.com/cases-cn/user-case-erweihuo/</link>
      <pubDate>Wed, 31 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-erweihuo/</guid>
      <description>TiDB 不管从性能、容量还是高可用性以及可运维性来说，完全超出了我们的预期。TiDB 让我们的业务开发回到了业务本质，让简单的再简单，开发不需要再拆东墙补西墙忙于数据爆发带来的各种手忙脚乱。</description>
    </item>
    
    <item>
      <title>TiDB 助力客如云餐饮 SaaS 服务</title>
      <link>https://pingcap.com/cases-cn/user-case-keruyun/</link>
      <pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-keruyun/</guid>
      <description>目前 TiDB 线上已经存储超过 6 个月的数据，总数据量几 T，支持线上的查询和分析需求，很多一般复杂度 OLAP 查询都能够在秒级返回结果。</description>
    </item>
    
    <item>
      <title>TiDB 在今日头条的实践</title>
      <link>https://pingcap.com/cases-cn/user-case-toutiao/</link>
      <pubDate>Fri, 16 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-toutiao/</guid>
      <description>TiDB 主要应用在今日头条核心 OLTP 系统 - 对象存储系统的部分元数据存储，支持头条图片和视频相关业务，比如抖音等。</description>
    </item>
    
    <item>
      <title>支撑百亿级应用的 NewSQL——TiDB 在同程旅游的应用</title>
      <link>https://pingcap.com/cases-cn/user-case-tongcheng/</link>
      <pubDate>Thu, 12 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-tongcheng/</guid>
      <description>在同程内部，目前共有数套 TiDB 集群，部署服务器数量近百台，总数据量数十 TB。其中最大的一个集群 10 多个数据节点，近十 TB 数据，数据量过百亿，平均 QPS 在 5000，高峰 QPS 过万。</description>
    </item>
    
    <item>
      <title>TiDB 在转转的业务实战</title>
      <link>https://pingcap.com/cases-cn/user-case-zhuanzhuan-2/</link>
      <pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-zhuanzhuan-2/</guid>
      <description>TiDB 在业务开发中是值得推广和实践的，但是我们对关系型数据库的一些使用经验和积累，在 TiDB 中是存在差异的，现主要阐述“事务”和“查询”两方面的差异。</description>
    </item>
    
    <item>
      <title>Qunar 高速发展下数据库的创新与发展 - TiDB 篇</title>
      <link>https://pingcap.com/cases-cn/user-case-qunar/</link>
      <pubDate>Thu, 14 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-qunar/</guid>
      <description>目前已经上线了两个 TiDB 集群。随着产品自身的完善，集群使用量和运维经验的积累，后续我们将逐步推广到更重要的集群中，解决业务上遇到的数据存储的痛点。</description>
    </item>
    
    <item>
      <title>TiDB 在猿辅导数据快速增长及复杂查询场景下的应用实践</title>
      <link>https://pingcap.com/cases-cn/user-case-yuanfudao/</link>
      <pubDate>Tue, 01 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-yuanfudao/</guid>
      <description>TiDB 是一个很有野心的项目，从无到有的解决了 MySQL 过去遇到的扩展性问题，在很多场合下也有 OLAP 的能力，省去了很多数据仓库搭建成本和学习成本。</description>
    </item>
    
    <item>
      <title>TiDB 在特来电的实践</title>
      <link>https://pingcap.com/cases-cn/user-case-telaidian/</link>
      <pubDate>Fri, 29 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-telaidian/</guid>
      <description>目前我们单表数据量接近 20 亿，每天的增量接近 800 万左右。</description>
    </item>
    
    <item>
      <title>TiDB 在凤凰网新闻内容业务的创新实践</title>
      <link>https://pingcap.com/cases-cn/user-case-ifeng/</link>
      <pubDate>Thu, 04 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-ifeng/</guid>
      <description>TiDB 的出现，帮我们跳过了传统的 Sharding + proxy 的路线，给我们节省了巨大的技术成本，我们对 TiDB 非常的钟爱。</description>
    </item>
    
    <item>
      <title>TiDB 在零氪科技（LinkDoc）大数据医疗系统的实践</title>
      <link>https://pingcap.com/cases-cn/user-case-linkdoc/</link>
      <pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-linkdoc/</guid>
      <description>目前 TiDB 在 LinkDoc 已承载数据量最大的两个业务。平时 QPS 6K，峰值 12K。后续将通过 TiDB 构造成一个兼容分析型和事务型的统一数据库 HTAP 平台。</description>
    </item>
    
    <item>
      <title>TiDB 助力一面数据实现消费领域的决策分析平台</title>
      <link>https://pingcap.com/cases-cn/user-case-yimian/</link>
      <pubDate>Fri, 15 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-yimian/</guid>
      <description>TiDB 水平扩展性、兼容 MySQL 是非常好的特性，对需要使用关系型数据库作为存储方案的业务有极大的诱惑力，避免了传统分表、分库方案带来的上层应用的复杂性，解决了我们目前迫切的关系型数据存储的需求。</description>
    </item>
    
    <item>
      <title>TiDB 在 Mobikok 广告系统中的应用和实践</title>
      <link>https://pingcap.com/cases-cn/user-case-mobikok/</link>
      <pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-mobikok/</guid>
      <description>TiDB 对于像我们这样可预期核心数据会暴增的场景，有非常大的意义。在后端支撑力量有限时，业务暴增时只需要增加机器，而不是频繁重构业务，让我们有更多精力在自己的业务上耕耘。</description>
    </item>
    
    <item>
      <title>TiDB 助力卡思数据视频大数据业务创新</title>
      <link>https://pingcap.com/cases-cn/user-case-kasi/</link>
      <pubDate>Mon, 05 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-kasi/</guid>
      <description>由于 TiDB 对 MySQL 的高度兼容性，在数据迁移完成后，几乎没有对代码做任何修改，平滑实现了无侵入升级。</description>
    </item>
    
    <item>
      <title>TiDB 在量化派风控系统中的应用</title>
      <link>https://pingcap.com/cases-cn/user-case-lianghuapai/</link>
      <pubDate>Mon, 10 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-lianghuapai/</guid>
      <description>目前我们已经搭建两个 TiDB 集群，几十个物理节点，百亿级数据量，受益于 TiDB 的高可用构架，上线以来一直稳定运行。</description>
    </item>
    
    <item>
      <title>TiDB 在 G7 的实践和未来</title>
      <link>https://pingcap.com/cases-cn/user-case-g7/</link>
      <pubDate>Mon, 15 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-case-g7/</guid>
      <description>2018 年初，运维团队和每一个业务方进行了一次需求沟通，业务方对 TiDB 的需求越来越强烈。我们准备让TiDB发挥应用到更多的场景中。</description>
    </item>
    
    <item>
      <title>Hi，你有一份 TiDB 易用性挑战赛「捞分指南」请查收</title>
      <link>https://pingcap.com/blog-cn/tidb-usability-challenge-program-guide/</link>
      <pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-usability-challenge-program-guide/</guid>
      <description>我们简单总结了一些捞分技巧，希望能够帮助大家快速上手，追上这些排名靠前的参赛选手们。</description>
    </item>
    
    <item>
      <title>Weekly update (March 09 ~ March 15, 2020)</title>
      <link>https://pingcap.com/weekly/2020-03-16-tidb-weekly/</link>
      <pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2020-03-16-tidb-weekly/</guid>
      <description>Last week, we landed 104 PRs in the TiDB repository and 57 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>What’s New in TiDB 4.0.0</title>
      <link>https://pingcap.com/blog-cn/what-is-new-in-tidb-4.0.0/</link>
      <pubDate>Thu, 12 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/what-is-new-in-tidb-4.0.0/</guid>
      <description>TiDB 4.0 版本是一个让人兴奋的版本，我们提供了非常多有用、有趣的特性，本文将带领大家对这些有用、有趣的特性作一个概括性的讲述。</description>
    </item>
    
    <item>
      <title>Choosing the Right Database for Your Applications</title>
      <link>https://pingcap.com/success-stories/choosing-right-database-for-your-applications/</link>
      <pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/success-stories/choosing-right-database-for-your-applications/</guid>
      <description>With so many databases on the market, choosing the right fit for your app is not an easy task. As a leading e-commerce platform in Southeast Asia and Taiwan, Shopee has an effective strategy for database selection. Learn from their experience.</description>
    </item>
    
    <item>
      <title>Weekly update (March 02 ~ March 08, 2020)</title>
      <link>https://pingcap.com/weekly/2020-03-09-tidb-weekly/</link>
      <pubDate>Mon, 09 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2020-03-09-tidb-weekly/</guid>
      <description>Last week, we landed 90 PRs in the TiDB repository and 46 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>历时 48 小时，开源电子书&lt;TiDB in Action&gt;第一版完成！</title>
      <link>https://pingcap.com/blog-cn/tidb-in-action-finish/</link>
      <pubDate>Mon, 09 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-in-action-finish/</guid>
      <description>从上周五晚 21:00 开始，历时 48 小时，共有 102 位来自社区的作者参与，截止周日 21:00，总计产生了 421 次 Commit，199 个 PR，最终开源电子书 &lt;TiDB in Action&gt; 第一版诞生。</description>
    </item>
    
    <item>
      <title>TiDB Usability Challenge - Dare to Dream Bigger</title>
      <link>https://pingcap.com/blog/tidb-usability-challenge-dare-to-dream-bigger/</link>
      <pubDate>Fri, 06 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/tidb-usability-challenge-dare-to-dream-bigger/</guid>
      <description>TiDB Challenge Program is a series community program to bring TiDB to a new level in terms of stability, performance, and usability. With amazing improvements in performance in season 1 last year, we are now pleased to announce that season 2 is ready for you.</description>
    </item>
    
    <item>
      <title>TiDB Celebrates 400 Contributors</title>
      <link>https://pingcap.com/blog/tidb-celebrates-400-contributors/</link>
      <pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/tidb-celebrates-400-contributors/</guid>
      <description>The TiDB repository reaches the 400th contributor milestone. All our honors and achievements belong to the TiDB community, our beloved contributors, and distinguished committers.</description>
    </item>
    
    <item>
      <title>一位 Rust 开发者的 Go 初体验</title>
      <link>https://pingcap.com/blog-cn/early-impressions-of-go-from-a-rust-programmer/</link>
      <pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/early-impressions-of-go-from-a-rust-programmer/</guid>
      <description>Go 是一种简单、小巧、令人愉悦的语言。它也有一些犄角旮旯，但绝大部分是经过精心设计的。它的学习速度令人难以置信，并且规避了其他语言中一些不那么广为人知的特性。</description>
    </item>
    
    <item>
      <title>TiDB Contributor 人数突破 400，有关开源理想，我们同在！</title>
      <link>https://pingcap.com/blog-cn/number-of-TiDB-contributors-exceeded-400/</link>
      <pubDate>Wed, 04 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/number-of-TiDB-contributors-exceeded-400/</guid>
      <description>和一群志同道合的朋友一起做酷且正确的事情，哪怕它是困难的、甚至曾被人认为是不可能的。但，让世界变得更美好，不正是我们踏入开源世界的初衷吗？</description>
    </item>
    
    <item>
      <title>一个疯狂的念头：48 小时写一本书，来一次开源社区的行为艺术</title>
      <link>https://pingcap.com/blog-cn/tidb-book-rush-write-a-book-in-48-hours/</link>
      <pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-book-rush-write-a-book-in-48-hours/</guid>
      <description>既然都是做分布式系统的，为什么不尝试下「分布式写书」？TiDB 的社区里有那么多身怀绝技的朋友，社区里也积赞了无数的内容，我们只是需要一个契机将这些内容串联起来。</description>
    </item>
    
    <item>
      <title>TiDB 易用性挑战赛开启：解决用户的痛点，让 TiDB 更易用！</title>
      <link>https://pingcap.com/blog-cn/TiDB-usability-challenge-program/</link>
      <pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/TiDB-usability-challenge-program/</guid>
      <description>TiDB 挑战赛第二季今天正式开启，赛程持续 3 个月，本赛季将围绕“提升 TiDB 的易用性”展开。考虑到用户们对 TiDB 落地实操中的“易用性”有深刻的体验，我们特地征求了一波 TiDB User Group（TUG）的意见。</description>
    </item>
    
    <item>
      <title>Rust 编译模型之殇</title>
      <link>https://pingcap.com/blog-cn/rust-compilation-model-calamity/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/rust-compilation-model-calamity/</guid>
      <description>许多人抱怨构建的时间太长。有时，在开发模式下完全重新构建需要花费 15 分钟，而在发布模式则需要 30 分钟。</description>
    </item>
    
    <item>
      <title>Weekly update (February 24 ~ March 01, 2020)</title>
      <link>https://pingcap.com/weekly/2020-03-02-tidb-weekly/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2020-03-02-tidb-weekly/</guid>
      <description>Last week, we landed 68 PRs in the TiDB repository and 58 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>积聚社区力量，让 Talent Plan 来一次升级吧！</title>
      <link>https://pingcap.com/blog-cn/talent-plan-readies-to-level-up/</link>
      <pubDate>Fri, 28 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/talent-plan-readies-to-level-up/</guid>
      <description>欢迎大家来“试玩”并提供建议、贡献自己的智慧，一起来打造这门课程，帮助更多社区伙伴们学习、成长！</description>
    </item>
    
    <item>
      <title>如何做到 10T 集群数据安全备份、1GB/s 快速恢复？</title>
      <link>https://pingcap.com/blog-cn/cluster-data-security-backup/</link>
      <pubDate>Thu, 27 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/cluster-data-security-backup/</guid>
      <description>TiDB 目前可以满足超大集群的备份恢复的需求，经过测试，10T 数据的备份恢复速度可以达到 GB/s 级别。这得益于我们研发的分布式备份恢复工具 Backup&amp;amp;Restore That Scales (BR)。</description>
    </item>
    
    <item>
      <title>Early Impressions of Go from a Rust Programmer</title>
      <link>https://pingcap.com/blog/early-impressions-of-go-from-a-rust-programmer/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/early-impressions-of-go-from-a-rust-programmer/</guid>
      <description>Nick Cameron is a long-time Rust programmer who has recently started using Go. In this post, he talks about his early impressions of Go. Read this post to learn more.</description>
    </item>
    
    <item>
      <title>TiDB Binlog 源码阅读系列文章 （九）同步数据到下游</title>
      <link>https://pingcap.com/blog-cn/tidb-binlog-source-code-reading-9/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-binlog-source-code-reading-9/</guid>
      <description>同步数据这一步重要操作由 Drainer 模块支持，它可以将 binlog 同步到 TiDB / MySQL / Kafka / File （增量备份）等下游组件</description>
    </item>
    
    <item>
      <title>Weekly update (February 17 ~ February 23, 2020)</title>
      <link>https://pingcap.com/weekly/2020-02-24-tidb-weekly/</link>
      <pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2020-02-24-tidb-weekly/</guid>
      <description>Last week, we landed 52 PRs in the TiDB repository, 1 PR in the TiSpark repository, and 43 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>我眼中的分布式系统可观测性</title>
      <link>https://pingcap.com/blog-cn/observability-of-distributed-system/</link>
      <pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/observability-of-distributed-system/</guid>
      <description>在Cloud Native 和微服务的世界里，大家正在讲“系统的可观测性”放在更高的位置。</description>
    </item>
    
    <item>
      <title>How We Reduced Multi-region Read Latency and Network Traffic by 50%</title>
      <link>https://pingcap.com/blog/how-we-reduced-multi-region-read-latency-and-network-traffic-by-50/</link>
      <pubDate>Wed, 19 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/how-we-reduced-multi-region-read-latency-and-network-traffic-by-50/</guid>
      <description>High read latency and network traffic are common issues for a multi-region architecture. At TiDB Hackathon 2019, a team won 2nd place by reducing multi-region read latency and network traffic by 50%. Read this post to learn how they did it.</description>
    </item>
    
    <item>
      <title>TiDB 4.0 新特性前瞻（一）DBA 减负捷径：拍个 CT 诊断集群热点问题</title>
      <link>https://pingcap.com/blog-cn/tidb-4.0-key-visualizer/</link>
      <pubDate>Wed, 19 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-4.0-key-visualizer/</guid>
      <description>在 4.0 版本中 TiDB 也实现了 Key Visualizer 功能。现在，我们可以很轻松地给集群拍个 “CT”，快速直观地观察集群整体热点及流量分布情况。</description>
    </item>
    
    <item>
      <title>原来提升一个数据库的性能并没有那么难！TiDB 性能挑战赛完结撒花</title>
      <link>https://pingcap.com/blog-cn/pcp-report-202002/</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/pcp-report-202002/</guid>
      <description>性能挑战赛已经圆满落幕，最终的积分排行也新鲜出炉，选手们的参赛成果让人非常惊喜，让我们回顾一下选手们是如何在“TiDB 性能提升”之路上，过五关斩六将的吧～</description>
    </item>
    
    <item>
      <title>Remote Work - Part 3</title>
      <link>https://pingcap.com/blog/remote-work-part-3/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/remote-work-part-3/</guid>
      <description>It&#39;s the third post in a series on remote work. In this post, Nick Cameron talks a bit about some of the practicalities, specifically around work and life balance.</description>
    </item>
    
    <item>
      <title>Weekly update (February 10 ~ February 16, 2020)</title>
      <link>https://pingcap.com/weekly/2020-02-17-tidb-weekly/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2020-02-17-tidb-weekly/</guid>
      <description>Last week, we landed 74 PRs in the TiDB repository, 1 PR in the TiSpark repository, and 72 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Remote Work - Part 2</title>
      <link>https://pingcap.com/blog/remote-work-part-2/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/remote-work-part-2/</guid>
      <description>Nick Cameron has nearly ten-year experience of remote work. In this post, he discusses communication in remote work.</description>
    </item>
    
    <item>
      <title>Remote Work - Part 1</title>
      <link>https://pingcap.com/blog/remote-work-part-1/</link>
      <pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/remote-work-part-1/</guid>
      <description>Nick has been working remotely for nearly ten years. In this post, he introduces why you might benefit from remote work and some of the things that make remote work successful.</description>
    </item>
    
    <item>
      <title>为了证明它的速度，我们一口气对比了 Oracle、MySQL、MariaDB、Greenplum、Apache Spark</title>
      <link>https://pingcap.com/blog-cn/tidb-and-tiflash-vs-mysql-mariadb-greenplum-apache-spark/</link>
      <pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-and-tiflash-vs-mysql-mariadb-greenplum-apache-spark/</guid>
      <description>借助 TiFlash 的一致性数据同步特型，用户可否以一个优异的速度直接对实时数据进行分析呢？</description>
    </item>
    
    <item>
      <title>Weekly update (February 03 ~ February 09, 2020)</title>
      <link>https://pingcap.com/weekly/2020-02-10-tidb-weekly/</link>
      <pubDate>Mon, 10 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2020-02-10-tidb-weekly/</guid>
      <description>Last week, we landed 64 PRs in the TiDB repository, 3 PRs in the TiSpark repository, and 33 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Doubling System Read Throughput with Only 26 Lines of Code</title>
      <link>https://pingcap.com/blog/doubling-system-read-throughput-with-only-26-lines-of-code/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/doubling-system-read-throughput-with-only-26-lines-of-code/</guid>
      <description>The Follower Read feature lets any follower replica in a Region serve a read request under the premise of strongly consistent reads. It reduces the load on the Raft leader and improves the read throughput of the TiDB cluster. Read this post to learn more.</description>
    </item>
    
    <item>
      <title>一两个节点、一两条命令，轻松让 TiDB 分析场景无痛提速十倍</title>
      <link>https://pingcap.com/blog-cn/10x-improving-analytical-processing-ability-of-tidb-with-tiflash/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/10x-improving-analytical-processing-ability-of-tidb-with-tiflash/</guid>
      <description>TiDB 3.1 推出的 TiFlash 产品，可以让你的 AP 查询提升数倍，不需要复杂的操作，无需多少节点，轻轻松松。</description>
    </item>
    
    <item>
      <title>Weekly update (January 20 ~ February 02, 2020)</title>
      <link>https://pingcap.com/weekly/2020-02-03-tidb-weekly/</link>
      <pubDate>Mon, 03 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2020-02-03-tidb-weekly/</guid>
      <description>Last two weeks, we landed 25 PRs in the TiDB repository and 7 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>The Rust Compilation Model Calamity</title>
      <link>https://pingcap.com/blog/rust-compilation-model-calamity/</link>
      <pubDate>Thu, 30 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/rust-compilation-model-calamity/</guid>
      <description>In this first episode of the Rust Compile time series, Brian Anderson, one of Rust&#39;s original authors, shares with you his researches and experiences with Rust compile times, using the TiKV project as a case study.</description>
    </item>
    
    <item>
      <title>TiDB Binlog 源码阅读系列文章（八）Loader Package 介绍</title>
      <link>https://pingcap.com/blog-cn/tidb-binlog-source-code-reading-8/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-binlog-source-code-reading-8/</guid>
      <description>本文将从 Loader 的接口定义开始，由上至下的介绍 Loader 将 binlog 写入下游数据库的过程。</description>
    </item>
    
    <item>
      <title>Weekly update (January 13 ~ January 19, 2020)</title>
      <link>https://pingcap.com/weekly/2020-01-20-tidb-weekly/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2020-01-20-tidb-weekly/</guid>
      <description>Last week, we landed 43 PRs in the TiDB repository, 11 PRs in the TiSpark repository, and 24 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiLightning —— Lightning &#43; TiSpark 轻松解除数据导入限制</title>
      <link>https://pingcap.com/blog-cn/tilightning-ease-data-import-restrictions/</link>
      <pubDate>Thu, 16 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tilightning-ease-data-import-restrictions/</guid>
      <description>TiLightning 可以轻松解除数据导入限制，解决了大数据生态系统和 TiDB 之间的鸿沟。</description>
    </item>
    
    <item>
      <title>Chaos Mesh - Your Chaos Engineering Solution for System Resiliency on Kubernetes</title>
      <link>https://pingcap.com/blog/chaos-mesh-your-chaos-engineering-solution-for-system-resiliency-on-kubernetes/</link>
      <pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/chaos-mesh-your-chaos-engineering-solution-for-system-resiliency-on-kubernetes/</guid>
      <description>Recently, PingCAP open-sourced Chaos Mesh, a Chaos Engineering platform that features all-around fault injection methods for complex Kubernetes systems. Find out how this testing tool can make your applications more reliable.</description>
    </item>
    
    <item>
      <title>TiKV 源码解析系列文章（十七）raftstore 概览</title>
      <link>https://pingcap.com/blog-cn/tikv-source-code-reading-17/</link>
      <pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-source-code-reading-17/</guid>
      <description>本文以 3.0 版本代码为例，讲述 raftstore 源码中的关键定义和设计。</description>
    </item>
    
    <item>
      <title>Weekly update (January 06 ~ January 12, 2020)</title>
      <link>https://pingcap.com/weekly/2020-01-14-tidb-weekly/</link>
      <pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2020-01-14-tidb-weekly/</guid>
      <description>Last week, we landed 31 PRs in the TiDB repository, 8 PRs in the TiSpark repository, and 54 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>分布式系统 in 2010s ：测试和运维</title>
      <link>https://pingcap.com/blog-cn/distributed-system-in-2010s-4/</link>
      <pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/distributed-system-in-2010s-4/</guid>
      <description>本文为「分布式系统 in 2010s」 系列最终篇，这次我们来聊一聊测试和运维。</description>
    </item>
    
    <item>
      <title>How TiKV Reads and Writes</title>
      <link>https://pingcap.com/blog/how-tikv-reads-and-writes/</link>
      <pubDate>Sat, 11 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/how-tikv-reads-and-writes/</guid>
      <description>This post details how TiKV, as a distributed database, stores the data contained in a write request and how it retrieves the corresponding data with consistency guaranteed.</description>
    </item>
    
    <item>
      <title>TiExciting —— 让 TiDB 部署轻松简单</title>
      <link>https://pingcap.com/blog-cn/tiexciting-makes-tidb-deployment-easy-and-simple/</link>
      <pubDate>Thu, 09 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tiexciting-makes-tidb-deployment-easy-and-simple/</guid>
      <description>本篇文章将介绍在 Hackathon 获得三等奖的 TiExciting 项目，它可以帮助更多人用上 TiDB 并改善运维的复杂度。</description>
    </item>
    
    <item>
      <title>分布式系统 in 2010s ：硬件的进化</title>
      <link>https://pingcap.com/blog-cn/distributed-system-in-2010s-3/</link>
      <pubDate>Tue, 07 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/distributed-system-in-2010s-3/</guid>
      <description>本文为「分布式系统 in 2010s」 系列第三篇，这次我们来聊一聊硬件的进化。</description>
    </item>
    
    <item>
      <title>Weekly update (December 30 ~ January 05, 2020)</title>
      <link>https://pingcap.com/weekly/2020-01-06-tidb-weekly/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2020-01-06-tidb-weekly/</guid>
      <description>Last week, we landed 36 PRs in the TiDB repository, 14 PRs in the TiSpark repository, and 42 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>汇聚能量，元气弹发射 | PingCAP Special Week - Tools matter 有感</title>
      <link>https://pingcap.com/blog-cn/special-week-tools-matter/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/special-week-tools-matter/</guid>
      <description>2019 年第四季度，PingCAP Special Week 的主题是 Tools matter，本篇文章将介绍本次 SW 都有哪些不错的成果。</description>
    </item>
    
    <item>
      <title>Chaos Mesh - 让应用跟混沌在 Kubernetes 上共舞</title>
      <link>https://pingcap.com/blog-cn/chaos-mesh/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/chaos-mesh/</guid>
      <description>我们将混沌相关实现从自动化测试平台中抽离出来，作为 Chaos Mesh 的最初原型，并经过重新设计和完善，最终于 Github 上开源。</description>
    </item>
    
    <item>
      <title>Weekly update (December 23 ~ December 29, 2019)</title>
      <link>https://pingcap.com/weekly/2019-12-30-tidb-weekly/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-12-30-tidb-weekly/</guid>
      <description>Last week, we landed 70 PRs in the TiDB repository, 7 PRs in the TiSpark repository, and 46 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>分布式系统 in 2010s ：软件构建方式和演化</title>
      <link>https://pingcap.com/blog-cn/distributed-system-in-2010s-2/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/distributed-system-in-2010s-2/</guid>
      <description>本文为「分布式系统 in 2010s」系列第二篇，内容为软件构建的方式和演化。</description>
    </item>
    
    <item>
      <title>AutoTiKV: TiKV Tuning Made Easy by Machine Learning</title>
      <link>https://pingcap.com/blog/autotikv-tikv-tuning-made-easy-by-machine-learning/</link>
      <pubDate>Fri, 27 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/autotikv-tikv-tuning-made-easy-by-machine-learning/</guid>
      <description>AutoTiKV is a machine-learning-based tuning tool that helps decrease tuning costs and make life easier for DBAs. This post shows AutoTiKV&#39;s design, its machine learning model, and the automatic tuning workflow.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.121】ZILLIZ Arch Meetup x PingCAP Infra Meetup</title>
      <link>https://pingcap.com/meetup/meetup-121-20191227/</link>
      <pubDate>Fri, 27 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-121-20191227/</guid>
      <description>Topic 1：开源向量相似度搜索引擎 Milvus 简介  讲师介绍：顾钧，ZILLIZ 首席架构师，毕业于北京大学，15 年数据库相关工作经验。目前在 ZILLIZ 从事异构众核数据分析引擎的产品化工作。加入 ZILLIZ 之前，曾就职于 IBM、Morgan Stanley、华为等跨国公司。
  视频 | Infra Meetup No.121：开源向量相似度搜索引擎 Milvus 简介 PPT 链接  本次分享顾钧介绍了开源向量搜索引擎 Milvus （https://github.com/milvus-io/milvus/）的设计背景，整体架构，包括：
  Milvus 的设计背景，向量数据的运算、管理与一般数值型数据的差异。
  Milvus 向量搜索引擎的整体架构设计。
  Milvus 提供的索引类型，及其技术、性能特点。
  最后，顾钧与大家讨论了 Milvus 目前在非结构化数据分析处理（ CV， NLP 等）领域的典型使用场景。Milvus 极大的简化了深度学习类 AI 应用的落地复杂度和难度，使用户能以更低的成本通过 AI 技术为应用场景赋能。
Topic 2：TiDB 向量化执行引擎近期成果  讲师介绍：冯立元，PingCAP TiDB 研发工程师。
  视频 | Infra Meetup No.121：TiDB 向量化执行引擎近期成果 PPT 链接  本次 talk 主要介绍了 TiDB 向量化的成果和最近的工作。内容主要有：</description>
    </item>
    
    <item>
      <title>分布式系统 in 2010s ：存储之数据库篇</title>
      <link>https://pingcap.com/blog-cn/distributed-system-in-2010s-1/</link>
      <pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/distributed-system-in-2010s-1/</guid>
      <description>无论哪个时代，存储都是一个重要的话题，今天先聊聊数据库。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 源码阅读系列文章（七）Drainer server 介绍</title>
      <link>https://pingcap.com/blog-cn/tidb-binlog-source-code-reading-7/</link>
      <pubDate>Tue, 24 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-binlog-source-code-reading-7/</guid>
      <description>本文介绍了 Drainer server 的实现。</description>
    </item>
    
    <item>
      <title>Weekly update (December 16 ~ December 22, 2019)</title>
      <link>https://pingcap.com/weekly/2019-12-23-tidb-weekly/</link>
      <pubDate>Mon, 23 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-12-23-tidb-weekly/</guid>
      <description>Last week, we landed 85 PRs in the TiDB repository, 4 PRs in the TiSpark repository, and 67 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>效率 10x！打造运维 TiDB 的瑞士军刀</title>
      <link>https://pingcap.com/blog-cn/manage-many-as-one-with-sql/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/manage-many-as-one-with-sql/</guid>
      <description>为解决分布式数据库的运维难题，本文将介绍如何用 SQL 管理整个 TiDB 集群。</description>
    </item>
    
    <item>
      <title>直击备份恢复的痛点：基于 TiDB Binlog 的快速时间点恢复</title>
      <link>https://pingcap.com/blog-cn/fast-pitr-based-on-binlog/</link>
      <pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/fast-pitr-based-on-binlog/</guid>
      <description>基于 TiDB Binlog 的 Fast-PITR (Fast point in time recovery)，即基于 TiDB Binlog 的快速时间点恢复，实现了基于 TiDB Binlog 的逐级 merge，以最小的代价实现快速 PITR，解决了现有 TiDB 原生备份恢复方案的一些痛点问题。</description>
    </item>
    
    <item>
      <title>Squashed Bugs, Served Hot and Fresh with Failure Rate Heatmaps</title>
      <link>https://pingcap.com/blog/squashed-bugs-served-hot-and-fresh-with-failure-rate-heatmaps/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/squashed-bugs-served-hot-and-fresh-with-failure-rate-heatmaps/</guid>
      <description>At TiDB Hackathon 2019, a team won the third prize by building a bot that helps quickly locate bugs in the code. Read this post to get more details.</description>
    </item>
    
    <item>
      <title>从大数据到数据库</title>
      <link>https://pingcap.com/blog-cn/from-big-data-to-databases/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/from-big-data-to-databases/</guid>
      <description>作为一个从大数据转行做数据库的人，我自以为能感受到两个世界的异同。本篇文章，斗胆聊下这个话题，以及对未来的看法。</description>
    </item>
    
    <item>
      <title>Weekly update (December 09 ~ December 15, 2019)</title>
      <link>https://pingcap.com/weekly/2019-12-16-tidb-weekly/</link>
      <pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-12-16-tidb-weekly/</guid>
      <description>Last week, we landed 62 PRs in the TiDB repository, 20 PRs in the TiSpark repository, and 37 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>How We Achieved 40 K QPS and 20&#43; Billion Rows of Data in a Single Scale-out Cluster</title>
      <link>https://pingcap.com/success-stories/lesson-learned-from-40-k-qps-and-20-billion-rows-of-data-in-a-single-scale-out-cluster/</link>
      <pubDate>Wed, 11 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/success-stories/lesson-learned-from-40-k-qps-and-20-billion-rows-of-data-in-a-single-scale-out-cluster/</guid>
      <description>As the business developed, standalone MySQL couldn&#39;t meet JD Cloud&#39;s OSS metadata storage requirements. This post introduces how TiKV empowered JD Cloud to manage huge amounts of OSS metadata with a simple and horizontally scalable architecture.</description>
    </item>
    
    <item>
      <title>TiKV 源码解析系列文章（十六）TiKV Coprocessor Executor 源码解析</title>
      <link>https://pingcap.com/blog-cn/tikv-source-code-reading-16/</link>
      <pubDate>Wed, 11 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-source-code-reading-16/</guid>
      <description>本文将介绍下推算子的执行流程并分析下推算子的部分实现细节，加深大家对 TiKV Coprocessor 的理解。</description>
    </item>
    
    <item>
      <title>拥抱 Elasticsearch：给 TiDB 插上全文检索的翅膀</title>
      <link>https://pingcap.com/blog-cn/fulltext-search-with-tidb-and-elasticsearch/</link>
      <pubDate>Tue, 10 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/fulltext-search-with-tidb-and-elasticsearch/</guid>
      <description>我们尝试为 TiDB 引入“全文检索”功能，为存储在 TiDB 中的文本数据提供随时随地搜索的能力。</description>
    </item>
    
    <item>
      <title>Weekly update (December 02 ~ December 08, 2019)</title>
      <link>https://pingcap.com/weekly/2019-12-09-tidb-weekly/</link>
      <pubDate>Mon, 09 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-12-09-tidb-weekly/</guid>
      <description>Last week, we landed 100 PRs in the TiDB repository, 19 PRs in the TiSpark repository, and 49 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>赛程刚过 1/3，什么操作让性能提升 150&#43; 倍？</title>
      <link>https://pingcap.com/blog-cn/pcp-report-201911/</link>
      <pubDate>Thu, 05 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/pcp-report-201911/</guid>
      <description>TiDB 性能挑战赛的赛程刚过 1/3，参赛选手们已经取得了十分耀眼的阶段性成果～让我们来看看吧！</description>
    </item>
    
    <item>
      <title>NetEase Games: Why We Chose TiDB over Other MySQL-based and NewSQL Storage Solutions</title>
      <link>https://pingcap.com/success-stories/why-we-chose-tidb-over-other-mysql-based-and-newsql-storage-solutions/</link>
      <pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/success-stories/why-we-chose-tidb-over-other-mysql-based-and-newsql-storage-solutions/</guid>
      <description>As business boomed, NetEase Games met bottlenecks in database scalability and data isolation. This post introduces why they chose TiDB over other MySQL-based and NewSQL storage solutions to solve their pain points.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.119】Pulsar 事务简介 &amp; TiDB 悲观事务的设计与实现</title>
      <link>https://pingcap.com/meetup/meetup-119-20191203/</link>
      <pubDate>Tue, 03 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-119-20191203/</guid>
      <description>Topic 1：Pulsar 事务简介  讲师介绍：李鹏辉，Apache Pulsar Committer/PMC Member。
  讲师介绍：张勇，Apache Pulsar Contributor, StreamNative engineer。
  视频 | Infra Meetup No.119：Pulsar 事务简介 PPT 链接  本次分享李鹏辉和张勇介绍了开源项目 Apache Pulsar (https://github.com/apache/pulsar) 和其中 Transaction 的设计实现与使用。包括：
  Apache Pulsar 的架构和优势；
  目前在 Apache Pulsar 中 At-most once，At-lease once 和 Exactly once 消息语义的实现。并且详细讲述了现在通过 Idempotent Producer 实现的 Exactly once；
  Transaction 的架构和 Transaction 在 Pulsar 中的实现，并且通过举例讲述了 Transaction 如何实现多个操作的原子性；
  讨论了在 Transaction 的设计中，如何处理超时以及多个 Transaction 的交互以及存储的问题。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.120】丰巢支付平台的 TiDB 迁移之旅 &amp; TiKV 优化之路</title>
      <link>https://pingcap.com/meetup/meetup-120-20191211/</link>
      <pubDate>Tue, 03 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-120-20191211/</guid>
      <description>Topic 1：丰巢支付平台的 TiDB 迁移之旅  讲师介绍：刘光亮，丰巢中间件团队负责人，TiDB Contributor，丰巢 TiDB 推广落地负责人。
  视频 | Infra Meetup No.120：丰巢支付平台的 TiDB 迁移之旅 PPT 链接  本次分享刘光亮老师从下面四个方面进行了介绍：
  介绍了丰巢科技选型 TiDB 的初衷和目标；
  重点讲解了丰巢支付平台迁移 TiDB 的总体设计方案、流量回放测试、数据双向同步、数据比对、灰度发布、数据库自动切换等技术方案；
  分享了丰巢在 TiDB 社区建设上已经做了的事情，其中包括对于 TiDB 和 TiDB Operator 源码的贡献，并详细阐述了在为社区贡献 PR 过程中的心路历程；
  最后向大家描述了未来丰巢对于 TiDB 使用的具体规划，未来丰巢会把 TiDB 的集群迁移到 K8s 上，未来丰巢对于从 MySQL 到 TiDB 的迁移时间花费会在两周内完成。
  Topic 2：高性能 Rust 开发实践——TiKV 优化之路  讲师介绍施闻轩，TiKV 研发、TiKV Coprocessor SIG Tech Lead，主要负责 TiKV 性能优化、Coprocessor 功能开发与 Coprocessor SIG 社区技术指导。</description>
    </item>
    
    <item>
      <title>你呼呼大睡，机器人却在找 bug？</title>
      <link>https://pingcap.com/blog-cn/sqldebug-automatically/</link>
      <pubDate>Tue, 03 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/sqldebug-automatically/</guid>
      <description>复杂系统的测试是一件艰难、艰苦和艰巨的事情，可不可以让程序自动帮我们查 bug？</description>
    </item>
    
    <item>
      <title>New Structure, New Roles - TiDB Community Upgrade!</title>
      <link>https://pingcap.com/blog/tidb-community-upgrade/</link>
      <pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/tidb-community-upgrade/</guid>
      <description>PingCAP has upgraded and adjusted the TiDB community organization structure, with more community roles and community organizations introduced to better stimulate the vitality of the community and maintain a positive and healthy community environment.</description>
    </item>
    
    <item>
      <title>TiDB Binlog 源码阅读系列文章（六）Pump Storage 介绍（下）</title>
      <link>https://pingcap.com/blog-cn/tidb-binlog-source-code-reading-6/</link>
      <pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-binlog-source-code-reading-6/</guid>
      <description>本文介绍了 Pump Storage 的两个重要组件 &lt;code&gt;valueLog&lt;/code&gt;，&lt;code&gt;slowChaser&lt;/code&gt; 的主要功能与具体实现。</description>
    </item>
    
    <item>
      <title>Weekly update (November 25 ~ December 01, 2019)</title>
      <link>https://pingcap.com/weekly/2019-12-02-tidb-weekly/</link>
      <pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-12-02-tidb-weekly/</guid>
      <description>Last week, we landed 74 PRs in the TiDB repository, 21 PRs in the TiSpark repository, and 87 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>10x Performance Improvement for Expression Evaluation Made Possible by Vectorized Execution and the Community</title>
      <link>https://pingcap.com/blog/10x-performance-improvement-for-expression-evaluation-made-possible-by-vectorized-execution/</link>
      <pubDate>Fri, 29 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/10x-performance-improvement-for-expression-evaluation-made-possible-by-vectorized-execution/</guid>
      <description>We vectorized 360+ built-in functions along with the TiDB community. Vectorized execution has greatly improved the expression evaluation performance. Some functions even achieved 10x performance. Here is our vectorization story.</description>
    </item>
    
    <item>
      <title>流量和延迟减半！挑战 TiDB 跨数据中心难题</title>
      <link>https://pingcap.com/blog-cn/geographic-data-distribution-traffic-and-latency-halved/</link>
      <pubDate>Fri, 29 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/geographic-data-distribution-traffic-and-latency-halved/</guid>
      <description>我们针对 TiDB 跨数据中心方案做了一些优化，使得跨地域 SQL 查询延迟下降 50%，跨节点消息数减半，即网络流量减半。</description>
    </item>
    
    <item>
      <title>流量和延迟减半！挑战 TiDB 跨数据中心难题</title>
      <link>https://pingcap.com/meetup/geographic-data-distribution-traffic-and-latency-halved/</link>
      <pubDate>Fri, 29 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/geographic-data-distribution-traffic-and-latency-halved/</guid>
      <description>我们针对 TiDB 跨数据中心方案做了一些优化，使得跨地域 SQL 查询延迟下降 50%，跨节点消息数减半，即网络流量减半。</description>
    </item>
    
    <item>
      <title>TiKV Engine SIG 成立，硬核玩家们看过来！</title>
      <link>https://pingcap.com/blog-cn/tikv-engine-sig-introduction/</link>
      <pubDate>Thu, 28 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-engine-sig-introduction/</guid>
      <description>TiKV Engine SIG 主要职责是对 TiKV 的存储引擎的未来发展进行讨论和规划，并进行相关开发和维护。期待社区伙伴们的支持和贡献～</description>
    </item>
    
    <item>
      <title>开源社区怎么玩？明星项目 TiKV 的 Maintainer 这样说……</title>
      <link>https://pingcap.com/blog-cn/tikv-maintainer-sunxiaoguang/</link>
      <pubDate>Thu, 28 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-maintainer-sunxiaoguang/</guid>
      <description>“当你持续的认真投入到开源后，项目和社区就会产生双向的交流，不再只是你单向的投入，社区也会给予你反哺，这时就会形成正向循环，对项目发展会起到非常大的推动作用。”</description>
    </item>
    
    <item>
      <title>揭秘 TiDB 新优化器：Cascades Planner 原理解析</title>
      <link>https://pingcap.com/blog-cn/tidb-cascades-planner/</link>
      <pubDate>Wed, 27 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-cascades-planner/</guid>
      <description>本文将为大家深入介绍 TiDB 新的优化器——Cascades Planner 的框架及原理。</description>
    </item>
    
    <item>
      <title>十分钟成为 Contributor 系列 | 为 Cascades Planner 添加优化规则</title>
      <link>https://pingcap.com/blog-cn/10mins-become-contributor-20191126/</link>
      <pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/10mins-become-contributor-20191126/</guid>
      <description>我们将这个系列再向着数据库的核心前进一步，挑战一下「为 TiDB 的优化器增加优化规则」，带大家初步体验一下可以对查询的执行时间产生数量级影响的优化器的魅力。</description>
    </item>
    
    <item>
      <title>Weekly update (November 18 ~ November 24, 2019)</title>
      <link>https://pingcap.com/weekly/2019-11-25-tidb-weekly/</link>
      <pubDate>Mon, 25 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-11-25-tidb-weekly/</guid>
      <description>Last week, we landed 145 PRs in the TiDB repository, 4 PRs in the TiSpark repository, and 76 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Building a Large-scale Distributed Storage System Based on Raft</title>
      <link>https://pingcap.com/blog/building-a-large-scale-distributed-storage-system-based-on-raft/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/building-a-large-scale-distributed-storage-system-based-on-raft/</guid>
      <description>This post introduces the PingCAP team&#39;s firsthand experience in designing a large-scale distributed storage system based on the Raft consensus algorithm.</description>
    </item>
    
    <item>
      <title>TiDB 最佳实践系列（六）HAProxy 的使用</title>
      <link>https://pingcap.com/blog-cn/best-practice-haproxy/</link>
      <pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/best-practice-haproxy/</guid>
      <description>TiDB Server 作为无限水平扩展的无状态计算节点，需要能提供稳定且高性能的负载均衡组件用对外统一的接口地址来提供服务，而 HAProxy 在负载均衡的生态中占有很大的市场。本文将介绍在 TiDB 下使用 HAProxy 的最佳实践。</description>
    </item>
    
    <item>
      <title>Weekly update (November 11 ~ November 17, 2019)</title>
      <link>https://pingcap.com/weekly/2019-11-18-tidb-weekly/</link>
      <pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-11-18-tidb-weekly/</guid>
      <description>Last week, we landed 122 PRs in the TiDB repository, 12 PRs in the TiSpark repository, 53 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>How We Compiled a Golang Database in the Browser Using WebAssembly</title>
      <link>https://pingcap.com/blog/how-we-compiled-a-golang-database-in-the-browser-using-webassembly/</link>
      <pubDate>Sat, 16 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/how-we-compiled-a-golang-database-in-the-browser-using-webassembly/</guid>
      <description>We compiled a Golang database (TiDB) into an in-browser database using WebAssembly (Wasm). This post introduces why and how we built an in-browser database.</description>
    </item>
    
    <item>
      <title>TiKV 源码解析系列文章（十五）表达式计算框架</title>
      <link>https://pingcap.com/blog-cn/tikv-source-code-reading-15/</link>
      <pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-source-code-reading-15/</guid>
      <description>本文将介绍 Coprocessor 中表达式计算框架的源码架构，带大家看看 SQL 中的表达式是如何在 Coprocessor 中执行的。</description>
    </item>
    
    <item>
      <title>Unified Thread Pool | Hackathon 2019 优秀项目介绍</title>
      <link>https://pingcap.com/blog-cn/unified-thread-pool/</link>
      <pubDate>Thu, 14 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/unified-thread-pool/</guid>
      <description>Unified Thread Pool 项目实现了在 TiKV 中使用一个统一的自适应线程池处理读请求，能够显著提升性能，并可预测性地限制大查询对小请求的干扰，最终在 TiDB Hackathon 2019 中斩获一等奖。</description>
    </item>
    
    <item>
      <title>TiDB-Wasm 原理与实现 | Hackathon 优秀项目介绍</title>
      <link>https://pingcap.com/blog-cn/tidb-wasm-introduction/</link>
      <pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-wasm-introduction/</guid>
      <description>TiDB-Wasm 项目实现了将 TiDB 编译成 Wasm 运行在浏览器里，让用户无需安装就可以使用 TiDB，最终获得了 TiDB Hackathon 2019 的二等奖。</description>
    </item>
    
    <item>
      <title>Weekly update (November 04 ~ November 10, 2019)</title>
      <link>https://pingcap.com/weekly/2019-11-11-tidb-weekly/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-11-11-tidb-weekly/</guid>
      <description>Last week, we landed 151 PRs in the TiDB repository, 13 PRs in the TiSpark repository, 58 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>如何玩转 TiDB 性能挑战赛？本文教你 30 分钟快速上手拿积分！</title>
      <link>https://pingcap.com/blog-cn/how-to-join-in-the-tidb-performance-challenge-program/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/how-to-join-in-the-tidb-performance-challenge-program/</guid>
      <description>本文以 TiKV 性能挑战赛 Easy 级别任务“PCP：Migrate functions from TiDB”为例，教大家如何快速又正确地完成这个任务。</description>
    </item>
    
    <item>
      <title>TiDB in the Browser: Running a Golang Database on WebAssembly</title>
      <link>https://pingcap.com/blog/tidb-in-the-browser-running-a-golang-database-on-webassembly/</link>
      <pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/tidb-in-the-browser-running-a-golang-database-on-webassembly/</guid>
      <description>This post introduces how you can run TiDB directly in a web browser, how it is possible, and what the limitations are.</description>
    </item>
    
    <item>
      <title>TiDB 最佳实践系列（五）Java 数据库应用开发指南</title>
      <link>https://pingcap.com/blog-cn/best-practice-java/</link>
      <pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/best-practice-java/</guid>
      <description>本文将从 Java 数据库交互组件开发的角度出发，介绍各组件的推荐配置和推荐使用方式，希望能帮助 Java 开发者在使用 TiDB 时能更好的发挥数据库性能。</description>
    </item>
    
    <item>
      <title>让数据库运行在浏览器里？TiDB &#43; WebAssembly 告诉你答案</title>
      <link>https://pingcap.com/blog-cn/tidb-in-the-browser-running-a-golang-database-on-wasm/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-in-the-browser-running-a-golang-database-on-wasm/</guid>
      <description>今天的 TiDB 可以直接运行在浏览器本地。打开浏览器，你可以直接创建数据库，对数据进行增删改查。关掉浏览器，一切都消失了，干净绿色环保。</description>
    </item>
    
    <item>
      <title>Delivering Real-time Analytics and True HTAP by Combining Columnstore and Rowstore</title>
      <link>https://pingcap.com/blog/delivering-real-time-analytics-and-true-htap-by-combining-columnstore-and-rowstore/</link>
      <pubDate>Mon, 04 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/delivering-real-time-analytics-and-true-htap-by-combining-columnstore-and-rowstore/</guid>
      <description>TiDB is an HTAP database that targets both OLTP and OLAP scenarios. TiFlash is its extended analytical engine. This post introduces how TiFlash fuels TiDB to become a true HTAP database that lets users perform real-time analytics.</description>
    </item>
    
    <item>
      <title>Weekly update (October 28 ~ November 03, 2019)</title>
      <link>https://pingcap.com/weekly/2019-11-04-tidb-weekly/</link>
      <pubDate>Mon, 04 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-11-04-tidb-weekly/</guid>
      <description>Last week, we landed 100 PRs in the TiDB repository, 6 PRs in the TiSpark repository, 47 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiKV 源码解析系列文章（十四）Coprocessor 概览</title>
      <link>https://pingcap.com/blog-cn/tikv-source-code-reading-14/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-source-code-reading-14/</guid>
      <description>本文将简要介绍 TiKV Coprocessor 的基本原理，面向想要了解 TiKV 数据读取执行过程的同学，同时也面向想对该模块贡献代码的同学。</description>
    </item>
    
    <item>
      <title>INSERT INTO tidb.hackathon_2019 VALUES (&#34;Hack&#34;, &#34;Fun&#34;, &#34;TiDB Ecosystem&#34;)</title>
      <link>https://pingcap.com/blog/insert-into-tidb-hackathon-2019-values-hack-fun-tidb-ecosystem/</link>
      <pubDate>Wed, 30 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/insert-into-tidb-hackathon-2019-values-hack-fun-tidb-ecosystem/</guid>
      <description>This post introduces the top 3 winners at TiDB Hackathon 2019 and the cozy and friendly environment of this meeting.</description>
    </item>
    
    <item>
      <title>高效编排有状态应用——TiDB 的云原生实践与思考</title>
      <link>https://pingcap.com/blog-cn/efficiently-orchestrating-stateful-application/</link>
      <pubDate>Tue, 29 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/efficiently-orchestrating-stateful-application/</guid>
      <description>本文将以 TiDB 与 Kubernetes 的“爱恨情仇”为例，总结有状态应用走向云原生的工程最佳实践。</description>
    </item>
    
    <item>
      <title>Weekly update (October 21 ~ October 27, 2019)</title>
      <link>https://pingcap.com/weekly/2019-10-28-tidb-weekly/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-10-28-tidb-weekly/</guid>
      <description>Last week, we landed 77 PRs in the TiDB repository, 6 PRs in the TiSpark repository, and 34 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiKV 项目首个 SIG 成立，一起走上 Contributor 进阶之路吧！</title>
      <link>https://pingcap.com/blog-cn/tikv-coprocessor-sig/</link>
      <pubDate>Thu, 24 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-coprocessor-sig/</guid>
      <description>今天是 1024 程序员节，我们正式成立 TiKV 项目的首个 SIG —— Coprocessor SIG，希望对 TiKV 项目感兴趣的小伙伴们都能加入进来，探索硬核的前沿技术，交流切磋，一起走上 Contributor 的进阶之路！</description>
    </item>
    
    <item>
      <title>TiDB 最佳实践系列（四）海量 Region 集群调优</title>
      <link>https://pingcap.com/blog-cn/best-practice-massive-regions-performance-improvement/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/best-practice-massive-regions-performance-improvement/</guid>
      <description>本文将介绍 TiKV 核心模块 Raftstore 的处理流程以使大家更好得理解海量 Region 导致性能问题的根源，以及针对这种情况的一些优化手段。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.115】Infra Meetup X Kubernetes &amp; Cloud Native Meetup</title>
      <link>https://pingcap.com/meetup/meetup-115-20191023/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-115-20191023/</guid>
      <description>Topic 1：阿里云容器服务 ACK 的架构演进  讲师介绍：李鹏，阿里云容器服务高级架构师。
  视频 | Infra Meetup No.115：阿里云容器服务 ACK 的架构演进  本次分享李鹏老师结合阿里云容器 ACK 服务大规模互联网用户落地场景，针对开源存储，云存储和云原生存储的现在，以及未来架构演进行深入探讨。李鹏老师针对对云原生存储和云存储的思考，分享了三个观点：
  云原生存储是云存储 UI，面向应用的申明式应用层存储。 公有云：Cloud Native Storage = Declarative API + Cloud Storage 专有云：Cloud Native Storage = Declarative API + Native Storage
  云原生存储是重用云存储基础设施红利，是在核心存储，应用存储之上的分层存储，不需要重新发明轮子。
  云原生控制平面实现效率，自治方面能力，最大化减小存储稳定和安全隐患。
  在运用存储选择，针对不同落地场景，使用不同的容器存储实现性能的最优化，不同应用落地案例，比如数据库、AI 计算、流式计算、高性能计算、日志等场景和相应的存储选择。
针对目前云原生应用在存储性能、弹性、高可用、加密、隔离、可观测性、生命周期遇到的各种挑战，提出了云原生存储 v2 的各种解决方案和演进路径。其中就 TiDB 在云原生架构中的扩容能力，本地盘到 ESSD 的存储选择和改进，以及不同云原生存储的 QoS 的保障能力和遇到的挑战与会者做了互动沟通。
Topic 2：分布式数据库在云环境下的实践  讲师介绍：张海龙 ，PingCAP Cloud 研发工程师，目前主要从事 TiDB on Kubernetes 的设计和研发工作。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.116】SQL 语言漫谈 &amp; 构建高可用数据库服务</title>
      <link>https://pingcap.com/meetup/meetup-116-20191023/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-116-20191023/</guid>
      <description>Topic 1：SQL 语言漫谈  讲师介绍：杜川, 数据库技术爱好者，TiDB Committer。主要专业方向是分布式关系型计算，关注数据库优化器和执行引擎相关技术。目前主要从事云数据库相关开发工作。
  视频 | Infra Meetup No.116：SQL 语言漫谈 PPT 链接  杜川老师分享了如下内容:
  分享首先介绍了关系代数理论。关系代数是 SQL 的理论基础，SQL 中很多行为都可以从关系代数中得到理论解释。另一方面，SQL 的设计并没有完全遵循关系代数理论（比如说 NULL 的存在），导致 SQL 在实际使用中可能遇到一些比较隐晦的坑。分享中对这个点进行了一些介绍和拓展。
  以关系代数为基础，介绍了各个 SQL 算子的实现以及各个 SQL 算子的执行顺序，并以具体的例子阐释了 SQL 使用中的一些常见误区。
  结合当前分布式计算的普及和对数据实时性的追求，简单介绍了分布式以及实时场景下 SQL 实现的特点。
  Topic 2：构建高可用数据库服务  讲师介绍：徐锐，PingCAP SQL Architecture Team 研发工程师，数据库和分布式技术爱好者，目前从事 TiDB SQL Engine 相关开发工作。
  视频 | Infra Meetup No.116：构建高可用数据库服务 PPT 链接  徐锐老师分享了以下内容：
  可靠性和可用性的概念以及区别，相应的数学描述和理论知识。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.117】TiDB 悲观事务的设计与实现 &amp; Introduction to performance engineering</title>
      <link>https://pingcap.com/meetup/meetup-117-20191023/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-117-20191023/</guid>
      <description>Topic 1：TiDB 悲观事务的设计与实现  讲师介绍：赵磊，TiKV 研发工程师。
  视频 | Infra Meetup No.117：TiDB 悲观事务的设计与实现 PPT 链接  赵磊老师分享了以下主要内容：
  悲观事务与乐观事务的对比，TiDB 乐观事务在一些场景的局限性及要实现悲观事务的原因。
  MySQL 悲观事务的行为。
  如何在 Percolator 的基础上实现的悲观事务，如何解决锁阻塞读的问题，以及如何实现的等锁和死锁。
  如何进行测试来保证悲观事务的正确性，以及如何使用 TiDB 的悲观事务。
  Topic 2：Introduction to performance engineering  讲师介绍：Nick Cameron，PingCAP Senior Database Engineer，Rust core team.
  视频 | Infra Meetup No.117：Introduction to performance engineering PPT 链接  Computer hardware and compilers have evolved hugely, which means that many of the guidelines for writing performant code are now obsolete.</description>
    </item>
    
    <item>
      <title>新架构、新角色：TiDB Community Upgrade！</title>
      <link>https://pingcap.com/blog-cn/tidb-community-upgrade/</link>
      <pubDate>Tue, 22 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-community-upgrade/</guid>
      <description>TiDB 社区已经逐渐成熟，但是随着社区的发展壮大，我们逐渐感受到了现在社区架构上的一些不足。经过一系列的思考和总结，我们决定升级和调整目前社区组织架构，引入更多的社区角色和社区组织，以便更好的激发社区活力，维护积极健康的社区环境。</description>
    </item>
    
    <item>
      <title>Weekly update (October 14 ~ October 20, 2019)</title>
      <link>https://pingcap.com/weekly/2019-10-21-tidb-weekly/</link>
      <pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-10-21-tidb-weekly/</guid>
      <description>Last two weeks, we landed 132 PRs in the TiDB repository, 6 PRs in the TiSpark repository, and 45 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB 最佳实践系列（三）乐观锁事务</title>
      <link>https://pingcap.com/blog-cn/best-practice-optimistic-transaction/</link>
      <pubDate>Fri, 18 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/best-practice-optimistic-transaction/</guid>
      <description>本文我们将深入浅出介绍 TiDB 乐观事务原理，并给出多种场景下的最佳实践，希望大家能够从中收益。同时，也欢迎大家给我们提供相关的优化建议，参与到我们的优化工作中来。</description>
    </item>
    
    <item>
      <title>Hands-on! 如何给 TiDB 添加新系统表</title>
      <link>https://pingcap.com/blog-cn/hands-on-build-a-new-system-table-for-tidb/</link>
      <pubDate>Thu, 17 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/hands-on-build-a-new-system-table-for-tidb/</guid>
      <description>“TiDB，你已经是一个成熟的数据库了，该学会用自己的 SQL 查自己的状态了。”</description>
    </item>
    
    <item>
      <title>Weekly update (September 30 ~ October 13, 2019)</title>
      <link>https://pingcap.com/weekly/2019-10-14-tidb-weekly/</link>
      <pubDate>Mon, 14 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-10-14-tidb-weekly/</guid>
      <description>Last two weeks, we landed 131 PRs in the TiDB repository, 4 PRs in the TiSpark repository, and 46 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB 最佳实践系列（二）PD 调度策略最佳实践</title>
      <link>https://pingcap.com/blog-cn/best-practice-pd/</link>
      <pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/best-practice-pd/</guid>
      <description>本文将详细介绍 PD 调度系统的原理，并通过几个典型场景的分析和处理方式，分享调度策略的最佳实践和调优方法，帮助大家在使用过程中快速定位问题。</description>
    </item>
    
    <item>
      <title>AutoTiKV：基于机器学习的数据库调优</title>
      <link>https://pingcap.com/blog-cn/autotikv/</link>
      <pubDate>Wed, 09 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/autotikv/</guid>
      <description>如果有一个自动 tuning 的方案就可以大大减少调优的人力成本，同时也可能在调优的过程中，发现一些人工想不到的信息。我们从 AutoML 中得到启发，希望能用 Automated Hyper-parameter Tuning 中的一些方法来对数据库参数进行自动调优。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 源码阅读系列文章（五）Pump Storage 介绍（上）</title>
      <link>https://pingcap.com/blog-cn/tidb-binlog-source-code-reading-5/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-binlog-source-code-reading-5/</guid>
      <description>在上篇文章中，我们主要介绍了 Pump Server 的上线过程、gRPC API 实现、以及下线过程和相关辅助机制，其中反复提到了 Pump Storage 这个实体。本文就将介绍 Pump Storage 的实现。</description>
    </item>
    
    <item>
      <title>Weekly update (September 23 ~ September 29, 2019)</title>
      <link>https://pingcap.com/weekly/2019-09-30-tidb-weekly/</link>
      <pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-09-30-tidb-weekly/</guid>
      <description>Last week, we landed 126 PRs in the TiDB repository, 15 PRs in the TiSpark repository, and 54 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>十分钟成为 Contributor 系列 | TiDB 向量化表达式活动第二弹</title>
      <link>https://pingcap.com/blog-cn/10mins-become-tidb-contributor-20190930/</link>
      <pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/10mins-become-tidb-contributor-20190930/</guid>
      <description>在上篇文章中，我们介绍了 TiDB 如何实现表达式的向量化优化，以及社区同学如何参与这项工程。两周过去了，我们收到了很多来自社区小伙伴们的建议和反馈，今天在这里和大家分享一下活动进展和这些建议及反馈。</description>
    </item>
    
    <item>
      <title>TiKV Rust Client 迁移记 - futures 0.1 至 0.3</title>
      <link>https://pingcap.com/blog-cn/migrating-a-crate-from-futures-0-1-to-0-3/</link>
      <pubDate>Wed, 25 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/migrating-a-crate-from-futures-0-1-to-0-3/</guid>
      <description>最近我将一个中小型的 crate 从 futures 库的 0.1 迁移至了 0.3 版本。过程本身不是特别麻烦，但还是有些地方或是微妙棘手，或是没有很好的文档说明。这篇文章里，我会把迁移经验总结分享给大家。</description>
    </item>
    
    <item>
      <title>Weekly update (September 16 ~ September 22, 2019)</title>
      <link>https://pingcap.com/weekly/2019-09-23-tidb-weekly/</link>
      <pubDate>Mon, 23 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-09-23-tidb-weekly/</guid>
      <description>Last week, we landed 58 PRs in the TiDB repository, 7 PRs in the TiSpark repository, and 27 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Safety First! Common Safety Pitfalls in Distributed Databases Found by Jepsen Tests</title>
      <link>https://pingcap.com/blog/safety-first-common-safety-pitfalls-in-distributed-databases-found-by-jepsen-tests/</link>
      <pubDate>Wed, 18 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/safety-first-common-safety-pitfalls-in-distributed-databases-found-by-jepsen-tests/</guid>
      <description>This post introduces why Jepsen is important to the distributed database industry, how it works, common issues found, how we use Jepsen with TiDB, and a short summary of all problems Jepsen has found.</description>
    </item>
    
    <item>
      <title>Weekly update (September 09 ~ September 15, 2019)</title>
      <link>https://pingcap.com/weekly/2019-09-16-tidb-weekly/</link>
      <pubDate>Mon, 16 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-09-16-tidb-weekly/</guid>
      <description>Last week, we landed 92 PRs in the TiDB repository and 39 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>十分钟成为 Contributor 系列 | 助力 TiDB 表达式计算性能提升 10 倍</title>
      <link>https://pingcap.com/blog-cn/10mins-become-contributor-of-tidb-20190916/</link>
      <pubDate>Mon, 16 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/10mins-become-contributor-of-tidb-20190916/</guid>
      <description>最近我们扩展了 TiDB 表达式计算框架，增加了向量化计算接口，初期的性能测试显示，多数表达式计算性能可大幅提升，部分甚至可提升 1~2 个数量级。为了让所有的表达式都能受益，我们需要为所有内建函数实现向量化计算。</description>
    </item>
    
    <item>
      <title>从使用者到开发者，知乎参与 TiDB 社区背后的故事</title>
      <link>https://pingcap.com/blog-cn/zhihu-the-story-of-contributing-to-tidb-community/</link>
      <pubDate>Thu, 12 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/zhihu-the-story-of-contributing-to-tidb-community/</guid>
      <description>“从前我们更多是站在使用者的角度从开源社区汲取养分，随着知乎技术架构和内部工程能力的成长，未来我们希望能够以更加积极主动的状态参与开源项目，回馈社区。”</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.113】TiDB Operator 的设计与实现</title>
      <link>https://pingcap.com/meetup/meetup-113-20190911/</link>
      <pubDate>Wed, 11 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-113-20190911/</guid>
      <description>Topic：TiDB Operator 的设计与实现  讲师介绍：尹亮，PingCAP Cloud Team 开发工程师。网络编程、存储爱好者，目前从事 K8s 相关的开发工作。
  视频 | Infra Meetup No.113：TiDB Operator 的设计与实现 PPT 链接  本次分享尹亮老师的主要内容包括：
  K8s 中 Operator 模式的基本原理和设计思路；
  TiDB Operator 本身的 API 自定义对象的设计；
  实现 TiDB Operator 的功能时，主要遇到的难点和解决方案；
  对最近正在进行开发的 TEP 平台做了简单的介绍，并且简要对比了 AA 架构和 CRD 架构。
  </description>
    </item>
    
    <item>
      <title>【Infra Meetup No.114】ACMUG 专场</title>
      <link>https://pingcap.com/meetup/meetup-114-20190911/</link>
      <pubDate>Wed, 11 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-114-20190911/</guid>
      <description>Topic 1：TiDB 高可用架构的设计要点  讲师介绍：李坤，PingCAP 互联网架构师，TiDB User Group Ambassador，前美团、去哪儿数据库专家。
  视频 | Infra Meetup No.114：TiDB 高可用架构的设计要点 PPT 链接  本次分享李坤老师从高可用系统的目标开始，介绍了 TiDB 高可用架构的设计要点，包括：
  高可用系统的设计目标
  主从机构和集群架构的高可用区别
  TiDB 高可用性的特点及各组件的高可用原理
  TiDB 组件的高可用原理
  然后介绍了 TiDB 在 raft 的工程实践上对于可用性提高做的优化，并重点介绍了各种场景下，TiDB 的高可用表现，包括：
  TiKV-server 故障
  PD-server 故障
  TiDB-server 故障
  Region leader 切换
  Region balance 重建副本
  最后，从实践角度，介绍了两地三中心、三地三中心、binlog 同步的集中方案的落地部署细节。</description>
    </item>
    
    <item>
      <title>Weekly update (September 02 ~ September 08, 2019)</title>
      <link>https://pingcap.com/weekly/2019-09-09-tidb-weekly/</link>
      <pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-09-09-tidb-weekly/</guid>
      <description>Last week, we landed 55 PRs in the TiDB repository and 29 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>如何高效利用 Grafana 监控分析 TiDB 指标</title>
      <link>https://pingcap.com/blog-cn/use-grafana-to-monitor-and-analyze-tidb-metrics/</link>
      <pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/use-grafana-to-monitor-and-analyze-tidb-metrics/</guid>
      <description>使用 TiDB Ansible 部署 TiDB 集群，会同时部署一套 Grafana + Prometheus 的监控平台，这套监控用来收集和展示 TiDB 集群各个组件和机器的 metric 信息，这些 metric 信息非常丰富，可以帮助使用者分析 TiDB 集群的状态以及 Trouble shooting。</description>
    </item>
    
    <item>
      <title>一体化数据同步平台 DM 1.0 GA 发布</title>
      <link>https://pingcap.com/blog-cn/dm-1.0-ga/</link>
      <pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/dm-1.0-ga/</guid>
      <description>DM 在 TiDB DevCon 2019 上正式开源，经过半年多时间在大量用户、开发者的支持和反馈下，今天我们宣布 DM 1.0 GA 正式发布。</description>
    </item>
    
    <item>
      <title>TiDB 最佳实践系列（一）高并发写入常见热点问题及规避方法</title>
      <link>https://pingcap.com/blog-cn/tidb-in-high-concurrency-scenarios/</link>
      <pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-in-high-concurrency-scenarios/</guid>
      <description>本文通过阐述一个高并发批量写入数据到 TiDB 的典型场景中，TiDB 中常见的问题，给出一个业务的最佳实践，避免业务在开发的时候陷入 TiDB 使用的 “反模式”。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.112】华泰证券 x PingCAP：分布式数据库 TiDB 的探索与应用</title>
      <link>https://pingcap.com/meetup/meetup-112-20190904/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-112-20190904/</guid>
      <description>Topic 1：TiDB 在华泰的落地实践与经验分享  讲师介绍：孙伟，目前主要负责华泰证券分布式数据库系统建设，10 余年数据库从业经验。曾就职于 IBM，在 DB2 实验室从事多年 support 工作，对数据库的运作原理有比较深的理解，很早就开始使用 DB2 DPF 分布式数据库。
  视频 | Infra Meetup No.112：TiDB 在华泰的落地实践与经验分享 PPT 链接  孙伟老师本次分享的主要内容包括：
  从生产系统遇到的问题出发，说明为什么进行分布式数据库的调研工作；
  总结选择 TiDB 的 5 大原因；
  TiDB 的整体架构，简单介绍了 TiDB 的相关技术概念；
  业务系统上 TiDB 的落地方式，介绍了 6 步走计划；
  实际使用 TiDB 中遇到的问题与解决方案，以及 TiDB 的使用注意事项。
  在分享的最后，还探讨了后续使用 TiDB 的计划。
Topic 2：TiDB 的 HTAP 之路  讲师介绍：马晓宇，PingCAP 列式存储引擎 TiFlash 研发负责人，TiSpark 研发负责人，分布式计算专家，大数据领域知名专家，前硅谷 Quantcast 技术负责人、前网易杭州研究院 Hadoop 平台技术负责人。长期专注分布式系统，SQL 引擎开发等领域。</description>
    </item>
    
    <item>
      <title>TiKV 源码解析系列文章（十三）MVCC 数据读取</title>
      <link>https://pingcap.com/blog-cn/tikv-source-code-reading-13/</link>
      <pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-source-code-reading-13/</guid>
      <description>本文将介绍数据读取的流程。</description>
    </item>
    
    <item>
      <title>Weekly update (August 26 ~ September 01, 2019)</title>
      <link>https://pingcap.com/weekly/2019-09-02-tidb-weekly/</link>
      <pubDate>Mon, 02 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-09-02-tidb-weekly/</guid>
      <description>Last week, we landed 59 PRs in the TiDB repository, 12 PRs in the TiSpark repository, and 40 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB &#43; TiFlash ： 朝着真 HTAP 平台演进</title>
      <link>https://pingcap.com/blog-cn/tidb-with-tiflash-extension/</link>
      <pubDate>Fri, 30 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-with-tiflash-extension/</guid>
      <description>本篇文章介绍了关于 HTAP 数据库的一些思考，以及新组件 TiFlash 给 TiDB 带来的变化。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.111】网易分布式时序数据库 NTSDB &amp; 数据库构建背后的故事</title>
      <link>https://pingcap.com/meetup/meetup-111-201908118/</link>
      <pubDate>Wed, 28 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-111-201908118/</guid>
      <description>Topic 1：网易分布式时序数据库（NTSDB）揭秘  讲师介绍：范欣欣，现就职于网易杭州研究院。负责 HBase、分布式时序数据库以及 Hive 的内核开发运维工作，对 HBase 的底层工作原理有长时间的深入研究和探索。著有《HBase 原理与实践》一书，在个人博客 http://hbasefly.com 撰写了大量有关 HBase 和时序数据库相关技术的文章，深受读者好评。
  视频 | Infra Meetup No.111：网易分布式时序数据库（NTSDB）揭秘 PPT 链接  范欣欣老师本次分享的主要内容包括：
  时序数据库在网易内部的主要应用场景；
  时间序列数据逻辑模型；
  网易时序数据库 NTSDB 分布式架构；
  网易时序数据库 NTSDB 内核功能实现，主要从时序数据存储格式以及倒排索引实现机制两方面进行介绍。
  分享的最后，和现场伙伴们讨论了部分聚合查询效率的优化思路以及基于时序数据特性进行的系统资源优化。
Topic 2：我们构建数据库背后的故事  讲师介绍：周强，TiKV 工具团队负责人。
  视频 | Infra Meetup No.111：我们构建数据库背后的故事 PPT 链接  本次分享周强老师介绍了 PingCAP 内部工具需求及工程实践，主要包括:
  数据库系统的 key point；
  schrodinger 和 chaos 在公司的内部应用；</description>
    </item>
    
    <item>
      <title>How TSQ Becomes a Performance Bottleneck for TiKV in AWS ARM Environment</title>
      <link>https://pingcap.com/blog/how-tsq-becomes-a-performance-bottleneck-for-tikv-in-aws-arm-environment/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/how-tsq-becomes-a-performance-bottleneck-for-tikv-in-aws-arm-environment/</guid>
      <description>Explore into Linux kernel to find out how TSQ becomes a performance bottleneck for TiKV in an AWS ARM environment.</description>
    </item>
    
    <item>
      <title>Weekly update (August 19 ~ August 25, 2019)</title>
      <link>https://pingcap.com/weekly/2019-08-26-tidb-weekly/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-08-26-tidb-weekly/</guid>
      <description>Last week, we landed 59 PRs in the TiDB repository, 14 PRs in the TiSpark repository, and 38 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB Binlog 源码阅读系列文章（四）Pump server 介绍</title>
      <link>https://pingcap.com/blog-cn/tidb-binlog-source-code-reading-4/</link>
      <pubDate>Thu, 22 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-binlog-source-code-reading-4/</guid>
      <description>本文将继续介绍 Pump server 的实现，对应的源码主要集中在 TiDB Binlog 仓库的 pump/server.go 文件中。</description>
    </item>
    
    <item>
      <title>Lesson Learned from Queries over 1.3 Trillion Rows of Data Within Milliseconds of Response Time at Zhihu.com</title>
      <link>https://pingcap.com/success-stories/lesson-learned-from-queries-over-1.3-trillion-rows-of-data-within-milliseconds-of-response-time-at-zhihu/</link>
      <pubDate>Wed, 21 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/success-stories/lesson-learned-from-queries-over-1.3-trillion-rows-of-data-within-milliseconds-of-response-time-at-zhihu/</guid>
      <description>As the business boomed and massive data in applications accrued each month, Zhihu faced severe challenges in scaling the backend system. This post introduces how Zhihu managed to keep milliseconds of query response time over a large amount of data and how TiDB, an open source MySQL-compatible HTAP database, empowered Zhihu to get real-time insights into data.</description>
    </item>
    
    <item>
      <title>TiDB 新特性漫谈：悲观事务</title>
      <link>https://pingcap.com/blog-cn/pessimistic-transaction-the-new-features-of-tidb/</link>
      <pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/pessimistic-transaction-the-new-features-of-tidb/</guid>
      <description>TiDB 在 3.0 中引入了一个实验性的新功能：悲观事务模型。这个功能也是千呼万唤始出来的一个功能。</description>
    </item>
    
    <item>
      <title>Weekly update (August 12 ~ August 18, 2019)</title>
      <link>https://pingcap.com/weekly/2019-08-19-tidb-weekly/</link>
      <pubDate>Mon, 19 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-08-19-tidb-weekly/</guid>
      <description>Last week, we landed 41 PRs in the TiDB repository, 24 PRs in the TiSpark repository, and 31 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Porting TiDB to ARM64 for Greater Flexibility</title>
      <link>https://pingcap.com/blog/porting-tidb-to-arm64-for-greater-flexibility/</link>
      <pubDate>Fri, 16 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/porting-tidb-to-arm64-for-greater-flexibility/</guid>
      <description>This article describes how PingCAP compiled and benchmarked TiDB on the Amazon Web Services (AWS) ARM64 platform.</description>
    </item>
    
    <item>
      <title>TiDB 新特性漫谈：从 Follower Read 说起</title>
      <link>https://pingcap.com/blog-cn/follower-read-the-new-features-of-tidb/</link>
      <pubDate>Wed, 14 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/follower-read-the-new-features-of-tidb/</guid>
      <description>关注 TiDB 的同学，最近可能注意到 TiKV 这边合并了一个不大不小的 PR，支持了一个特性叫做 Follower Read，看到这个功能被合并进主干我确实有点百感交集，还发了条朋友圈庆祝，因为我实在很喜欢这个特性。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.110】Linux 内核虚拟机 BPF 原理及应用</title>
      <link>https://pingcap.com/meetup/meetup-110-20190814/</link>
      <pubDate>Wed, 14 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-110-20190814/</guid>
      <description>Topic：Linux 内核虚拟机 BPF 原理及应用  讲师介绍：张文博，TiKV 研发工程师，目前主要负责Linux 内核性能诊断分析相关工作。
  视频 | Infra Meetup No.110：Linux 内核虚拟机 BPF 原理及应用 PPT 链接  张文博老师本次分享的主要内容包括：
  介绍 Linux kernel 的 tracing 子系统的原理和应用，引出为什么需要 BPF；
  介绍 BPF 虚拟机体系结构及设计约束，以及如何在约束下编写 eBPF 程序；
  介绍 Linux kernel 提供的 BPF 调试工具的使用场景；
  最后结合之前介绍的原理，分享了我们内部的一些应用场景。</description>
    </item>
    
    <item>
      <title>TiKV 源码解析系列文章（十二）分布式事务</title>
      <link>https://pingcap.com/blog-cn/tikv-source-code-reading-12/</link>
      <pubDate>Mon, 12 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-source-code-reading-12/</guid>
      <description>本文将更加深入地讲解 TiKV 的事务算法的原理和实现细节。</description>
    </item>
    
    <item>
      <title>Weekly update (August 05 ~ August 11, 2019)</title>
      <link>https://pingcap.com/weekly/2019-08-12-tidb-weekly/</link>
      <pubDate>Mon, 12 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-08-12-tidb-weekly/</guid>
      <description>Last week, we landed 73 PRs in the TiDB repository, 12 PRs in the TiSpark repository, and 42 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Migrating the TiKV Rust Client from Futures 0.1 to 0.3</title>
      <link>https://pingcap.com/blog/migrating-the-tikv-rust-client-from-futures-0.1-to-0.3/</link>
      <pubDate>Thu, 08 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/migrating-the-tikv-rust-client-from-futures-0.1-to-0.3/</guid>
      <description>This post introduces Nick&#39;s experience in migrating the TiKV Rust client from Futures 0.1 to 0.3.</description>
    </item>
    
    <item>
      <title>三十分钟成为 Contributor | 提升 TiDB Parser 对 MySQL 8.0 语法的兼容性</title>
      <link>https://pingcap.com/blog-cn/30mins-become-contributor-of-tidb-20190808/</link>
      <pubDate>Thu, 08 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/30mins-become-contributor-of-tidb-20190808/</guid>
      <description>本次活动聚焦于语法兼容，提升 TiDB SQL Parser 对 MySQL 8.0 的语法支持。对于新的贡献者而言，除了能将理论知识运用到实践上以外，还可以从中体验参与一个开源项目的整体流程与规范。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 源码阅读系列文章（三）Pump client 介绍</title>
      <link>https://pingcap.com/blog-cn/tidb-binlog-source-code-reading-3/</link>
      <pubDate>Tue, 06 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-binlog-source-code-reading-3/</guid>
      <description>本篇将介绍 Pump client，希望大家了解 TiDB 把 binlog 写到 Pump，以及输出数据的过程。</description>
    </item>
    
    <item>
      <title>Weekly update (July 29 ~ August 04, 2019)</title>
      <link>https://pingcap.com/weekly/2019-08-05-tidb-weekly/</link>
      <pubDate>Mon, 05 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-08-05-tidb-weekly/</guid>
      <description>Last week, we landed 83 PRs in the TiDB repository, 19 PRs in the TiSpark repository, and 31 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.109】TiKV internal &amp; 基于 Kafka 的数据处理微服务链</title>
      <link>https://pingcap.com/meetup/meetup-109-20190731/</link>
      <pubDate>Wed, 31 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-109-20190731/</guid>
      <description>Topic 1：TiKV internal: How to build a distributed transactional Key-Value storage engine  讲师介绍：屈鹏，2015 年毕业于四川大学，2017 年加入 PingCAP，目前担任 TiKV 研发工程师，主要专注于 Raft 的优化及其他性能调优等方面。
  视频 | Infra Meetup No.109：TiKV internal: How to build a distributed transactional Key-Value storage engine PPT 链接  屈鹏老师的分享主要内容包括：
  TiKV service 层的主要实现，以及相关的 gRPC 的原理、特性及适用方式；
  TiKV 分布式冗余复制模块的实现方式及 Raft 算法的基本工作原理及一致性保障；
  TiKV 分布式事务的实现算法及相关的优化。
  同时，介绍了当前正在实现的一些新的特性，方便大家参与到 TiKV 的使用与开发中来。
Topic 2：构建基于 Kafka 的数据处理微服务链  讲师介绍：高原，LogicMonitor 成都研发中心首席架构师，在软件体系架构以及分布式系统领域具有多年较深入的理论研究与丰富的工程经验。目前致力于 SaaS 模式的大规模数据处理系统的研究，主持完成具有千亿级数据处理能力的系统研发。</description>
    </item>
    
    <item>
      <title>TiDB Operator 1.0 GA: Database Cluster Deployment and Management Made Easy with Kubernetes</title>
      <link>https://pingcap.com/blog/database-cluster-deployment-and-management-made-easy-with-kubernetes/</link>
      <pubDate>Tue, 30 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/database-cluster-deployment-and-management-made-easy-with-kubernetes/</guid>
      <description>Deploying transactional databases like TiDB in Kubernetes for production has always been challenging. Now, with TiDB Operator 1.0, running TiDB database clusters has never been easier.</description>
    </item>
    
    <item>
      <title>云上 TiDB 管理「利器」，TiDB Operator 1.0 GA 发布</title>
      <link>https://pingcap.com/blog-cn/tidb-operator-1.0-ga/</link>
      <pubDate>Tue, 30 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-operator-1.0-ga/</guid>
      <description>开源后到现在的近一年内，我们一方面基于用户反馈不断打磨项目的易用性，另一方面通过严苛的稳定性测试持续提升可靠性。今天，我们自豪地宣布 TiDB Operator 1.0 GA 正式发布！</description>
    </item>
    
    <item>
      <title>TiKV 源码解析系列文章（十一）Storage - 事务控制层</title>
      <link>https://pingcap.com/blog-cn/tikv-source-code-reading-11/</link>
      <pubDate>Mon, 29 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-source-code-reading-11/</guid>
      <description>本文将为大家介绍 TiKV 源码中的 Storage 模块，它位于 Service 与底层 KV 存储引擎之间，主要负责事务的并发控制。TiKV 端事务相关的实现都在 Storage 模块中。</description>
    </item>
    
    <item>
      <title>Weekly update (July 22 ~ July 28, 2019)</title>
      <link>https://pingcap.com/weekly/2019-07-29-tidb-weekly/</link>
      <pubDate>Mon, 29 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-07-29-tidb-weekly/</guid>
      <description>Last week, we landed 102 PRs in the TiDB repository, 4 PRs in the TiSpark repository, and 27 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>DM 源码阅读系列文章（十）测试框架的实现</title>
      <link>https://pingcap.com/blog-cn/dm-source-code-reading-10/</link>
      <pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/dm-source-code-reading-10/</guid>
      <description>本篇文章将从质量保证的角度来介绍 DM 测试框架的设计和实现，探讨如何通过多维度的的测试方法保证 DM 的正确性和稳定性。</description>
    </item>
    
    <item>
      <title>Weekly update (July 15 ~ July 21, 2019)</title>
      <link>https://pingcap.com/weekly/2019-07-22-tidb-weekly/</link>
      <pubDate>Mon, 22 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-07-22-tidb-weekly/</guid>
      <description>Last week, we landed 68 PRs in the TiDB repository, 9 PRs in the TiSpark repository, and 39 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>DM 源码阅读系列文章（九）shard DDL 与 checkpoint 机制的实现</title>
      <link>https://pingcap.com/blog-cn/dm-source-code-reading-9/</link>
      <pubDate>Thu, 18 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/dm-source-code-reading-9/</guid>
      <description>在本篇文章中，我们将对 shard DDL 同步机制以及 checkpoint 机制等进行详细的介绍，内容包括 shard group 的定义、shard DDL 的同步协调处理流程、checkpoint 机制以及与之相关的 safe mode 机制。</description>
    </item>
    
    <item>
      <title>Weekly update (July 08 ~ July 14, 2019)</title>
      <link>https://pingcap.com/weekly/2019-07-15-tidb-weekly/</link>
      <pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-07-15-tidb-weekly/</guid>
      <description>Last week, we landed 65 PRs in the TiDB repository, 5 PRs in the TiSpark repository, and 40 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiKV 源码解析系列文章（十）Snapshot 的发送和接收</title>
      <link>https://pingcap.com/blog-cn/tikv-source-code-reading-10/</link>
      <pubDate>Tue, 09 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-source-code-reading-10/</guid>
      <description>TiKV 针对 Snapshot 收发场景做了特殊处理，解决了消息包过大会导致的一系列问题。</description>
    </item>
    
    <item>
      <title>Weekly update (July 01 ~ July 07, 2019)</title>
      <link>https://pingcap.com/weekly/2019-07-08-tidb-weekly/</link>
      <pubDate>Mon, 08 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-07-08-tidb-weekly/</guid>
      <description>Last week, we landed 69 PRs in the TiDB repository, 18 PRs in the TiSpark repository, and 34 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Why Benchmarking Distributed Databases Is So Hard</title>
      <link>https://pingcap.com/blog/why-benchmarking-distributed-databases-is-so-hard/</link>
      <pubDate>Mon, 08 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/why-benchmarking-distributed-databases-is-so-hard/</guid>
      <description>Benchmarks are hard to get right, and many articles touting benchmarks are actually benchmarketing, showcasing skewed outcomes to sell products. This post introduces some of the motivations for benchmarking and the common tools, and discusses a few things to keep in mind when benchmarking.</description>
    </item>
    
    <item>
      <title>TiKV 源码解析系列文章（九）Service 层处理流程解析</title>
      <link>https://pingcap.com/blog-cn/tikv-source-code-reading-9/</link>
      <pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-source-code-reading-9/</guid>
      <description>之前的 TiKV 源码解析系列文章介绍了 TiKV 依赖的周边库，从本篇文章开始，我们将开始介绍 TiKV 自身的代码。本文重点介绍 TiKV 最外面的一层——Service 层。</description>
    </item>
    
    <item>
      <title>The KOST Stack: An Open-Source Cloud-Native Hybrid Database Stack</title>
      <link>https://pingcap.com/blog/kost-stack/</link>
      <pubDate>Thu, 04 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/kost-stack/</guid>
      <description>A new infrastructure pattern is emerging called the KOST stack (Kubernetes, Operator, Spark, TiDB). This blog post introduces each component of the KOST stack and cloud-native HTAP in the wild.</description>
    </item>
    
    <item>
      <title>TiDB Binlog 源码阅读系列文章（二）初识 TiDB Binlog 源码</title>
      <link>https://pingcap.com/blog-cn/tidb-binlog-source-code-reading-2/</link>
      <pubDate>Thu, 04 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-binlog-source-code-reading-2/</guid>
      <description>本文介绍了 TiDB Binlog 相关源码仓库：tidb-tools 和 tidb-binlog，以及其中的目录，并且展示了如何启动测试集群。</description>
    </item>
    
    <item>
      <title>TiDB 3.0 Reaches GA, Delivers Stability at Scale and Performance Boost</title>
      <link>https://pingcap.com/blog/tidb-3.0-announcement/</link>
      <pubDate>Mon, 01 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/tidb-3.0-announcement/</guid>
      <description>TiDB 3.0 is released! This blog post introduces some highlights of TiDB 3.0, including major features focused on stability, significant performance improvements in Sysbench and TPC-C benchmarks, a newly introduced component, and important features and improvements.</description>
    </item>
    
    <item>
      <title>Weekly update (June 24 ~ June 30, 2019)</title>
      <link>https://pingcap.com/weekly/2019-07-01-tidb-weekly/</link>
      <pubDate>Mon, 01 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-07-01-tidb-weekly/</guid>
      <description>Last week, we landed 52 PRs in the TiDB repository, 9 PRs in the TiSpark repository, and 38 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB 3.0 GA，稳定性和性能大幅提升</title>
      <link>https://pingcap.com/blog-cn/tidb-3.0-ga/</link>
      <pubDate>Fri, 28 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-3.0-ga/</guid>
      <description>2019 年 6 月 28 日，TiDB 3.0 GA 正式发布，请跟随我们的脚步看看 TiDB 3.0 有什么样的惊喜。</description>
    </item>
    
    <item>
      <title>Weekly update (June 17 ~ June 23, 2019)</title>
      <link>https://pingcap.com/weekly/2019-06-24-tidb-weekly/</link>
      <pubDate>Mon, 24 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-06-24-tidb-weekly/</guid>
      <description>Last week, we landed 68 PRs in the TiDB repository, 12 PRs in the TiSpark repository, and 47 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Distributed Systems Training in Go and Rust</title>
      <link>https://pingcap.com/blog/distributed-systems-training-in-go-and-rust/</link>
      <pubDate>Thu, 20 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/distributed-systems-training-in-go-and-rust/</guid>
      <description>PingCAP has made a talent plan for training and/or evaluating students, new employees, and new contributors to TiDB and TiKV. This blog post gives a brief overview of training courses for this plan on writing distributed systems in Go and Rust.</description>
    </item>
    
    <item>
      <title>Best Practices for Developing Applications with TiDB</title>
      <link>https://pingcap.com/blog/best-practices-for-developing-applications-with-tidb/</link>
      <pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/best-practices-for-developing-applications-with-tidb/</guid>
      <description>This article shows how to efficiently develop high-quality applications with TiDB, an open-source NewSQL database that supports Hybrid Transactional and Analytical Processing (HTAP) workloads and can serve as a scale-out MySQL database without manual sharding.</description>
    </item>
    
    <item>
      <title>DM 源码阅读系列文章（八）Online Schema Change 同步支持</title>
      <link>https://pingcap.com/blog-cn/dm-source-code-reading-8/</link>
      <pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/dm-source-code-reading-8/</guid>
      <description>本篇文章将会以 gh-ost 为例，详细地介绍 DM 是如何支持一些 MySQL 上的第三方 online schema change 方案同步，内容包括 online schema change 方案的简单介绍，online schema change 同步方案，以及同步实现细节。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.107】SQLFlow：Brings SQL and AI together</title>
      <link>https://pingcap.com/meetup/meetup-107-20190619/</link>
      <pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-107-20190619/</guid>
      <description>Topic：SQLFlow: Brings SQL and AI together  讲师介绍：武毅，SQLFlow 开发者，开源深度学习引擎 PaddlePaddle 分布式训练设计者和核心开发者，多年在线推荐系统和机器学习相关从业者。
  视频 | Infra Meetup No.107：SQLFlow: Brings SQL and AI together PPT 链接  本次分享武毅老师介绍了开源项目 SQLFlow (github.com/sql-machine-learning/sqlflow) 的核心设计以及设计挑战，包括：
  SQLFlow 如何做到使用几行 SQL 语言就可以完成模型的训练和预测
  SQLFlow 的设计思想和实现方法
  2 个关键设计的思考包括：特征推导，可插拔 Parser 设计
  最后讨论了 SQLFlow 目前的应用和可能的应用场景。SQLFlow 将会为更多的业务专家提供便捷的工具，快速训练，迭代有助于业务的模型，降低业务专家应用 AI 能力的时间成本和调研成本。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.108】TiDB DDL &amp; 数据云平台访问 &amp; 同盾大数据平台</title>
      <link>https://pingcap.com/meetup/meetup-108-20190619/</link>
      <pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-108-20190619/</guid>
      <description>Topic 1：Deep Dive into TiDB DDL  讲师介绍：李霞，TiDB 研发工程师，目前主要负责 TiDB 的 online DDL 研发工作，曾就职于京东，从事分布式存储研发工作。
  视频 | Infra Meetup No.108：Deep Dive into TiDB DDL PPT 链接  李霞老师本次分享的主要内容包括：
  F1 online asynchronous DDL 的原理。
  TiDB DDL 的基本框架，详细讲述其实现。
  Add index 的具体流程，并简介了其他几种 DDL 语句实现特性。
  DDL 的一些辅助功能。
  最后结合之前介绍的原理和实现，讲解了常见的几个问题以及解决方式。
Topic 2：数据云平台&amp;ndash;访问  讲师介绍：陈邦义，数据平台产品经理，图尔兹创始人。
  视频 | Infra Meetup No.108：数据云平台&amp;ndash;访问 PPT 链接  陈邦义老师重点介绍了数据平台的访问入口 Daios。首先是现代数据平台的基本架构，在这其中架构的设计、开发、治理者们面对的是多种数据源带来的数据访问困难。接着介绍了数据访问门户的架构设计、包括 DMS、SAS、Tools 和 Base，以及一些设计理念权衡，其中也强调了数据访问的安全问题和解决办法。最后分享了产品开发过程中的一些挑战性难点，比如调试器、增量 SQL 解析、数据可视化渲染等等。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 源码阅读系列文章（一）序</title>
      <link>https://pingcap.com/blog-cn/tidb-binlog-source-code-reading-1/</link>
      <pubDate>Mon, 17 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-binlog-source-code-reading-1/</guid>
      <description>TiDB Binlog 组件用于收集 TiDB 的 binlog，并准实时同步给下游，如 TiDB、MySQL 等。该组件在功能上类似于 MySQL 的主从复制，会收集各个 TiDB 实例产生的 binlog，并按事务提交的时间排序，全局有序的将数据同步至下游。</description>
    </item>
    
    <item>
      <title>Weekly update (June 10 ~ June 16, 2019)</title>
      <link>https://pingcap.com/weekly/2019-06-17-tidb-weekly/</link>
      <pubDate>Mon, 17 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-06-17-tidb-weekly/</guid>
      <description>Last week, we landed 40 PRs in the TiDB repository, 9 PRs in the TiSpark repository, and 37 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB Passes Jepsen Test for Snapshot Isolation and Single-Key Linearizability</title>
      <link>https://pingcap.com/blog/tidb-passes-jepsen-test-for-snapshot-isolation-and-single-key-linearizability/</link>
      <pubDate>Wed, 12 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/tidb-passes-jepsen-test-for-snapshot-isolation-and-single-key-linearizability/</guid>
      <description>TiDB&#39;s first official Jepsen Test report is published. This post introduces some additional context to the test results and PingCAP&#39;s thoughts on what&#39;s next.</description>
    </item>
    
    <item>
      <title>TiKV 源码解析系列文章（八）grpc-rs 的封装与实现</title>
      <link>https://pingcap.com/blog-cn/tikv-source-code-reading-8/</link>
      <pubDate>Wed, 12 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-source-code-reading-8/</guid>
      <description>本篇将带大家深入到 grpc-rs 这个库里，查看 RPC 请求是如何被封装和派发的，以及它是怎么和 Rust Future 进行结合的。</description>
    </item>
    
    <item>
      <title>Percona Live Austin -- Summary and Reflection</title>
      <link>https://pingcap.com/blog/percona-live-austin-summary-and-reflection/</link>
      <pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/percona-live-austin-summary-and-reflection/</guid>
      <description>In this post, Kevin Xu shares the PingCAP team&#39;s experience and activities at Percona Live in Austin, including several technical sharing sessions and boosting friendship with people inside and outside PingCAP.</description>
    </item>
    
    <item>
      <title>Weekly update (June 03 ~ June 09, 2019)</title>
      <link>https://pingcap.com/weekly/2019-06-10-tidb-weekly/</link>
      <pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-06-10-tidb-weekly/</guid>
      <description>Last week, we landed 70 PRs in the TiDB repository, 17 PRs in the TiSpark repository, and 28 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.105】 Happy Hacking TiDB &amp; Chaos Practice in TiDB</title>
      <link>https://pingcap.com/meetup/meetup-105-20190606/</link>
      <pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-105-20190606/</guid>
      <description>Topic 1：Happy Hacking TiDB  讲师介绍：杜川，数据库技术爱好者，TiDB Committer。主要专业方向是分布式关系型计算，关注数据库优化器和执行引擎相关技术。目前主要从事云数据库相关开发工作。
  视频 | Infra Meetup No.105：Happy Hacking TiDB PPT 链接  本次杜川老师的分享主要分成三个部分：
  首先通过对现有 Streaming 系统和 Batch 系统的分析，讨论了在数据处理领域 Streaming 和 Batch 的异同，明确了 Streaming 的核心本质，探讨了 Streaming 和 Batch 融合处理的可能性和必要性，并对现有类似系统进行了简单的分析。
  简单回顾了 RDMS 中经典的 Volcano 模型的执行流程，探讨了在 RDMS 上支持 Streaming 处理的难点以及 Streaming SQL 设计的关键要素。
  介绍了 TBSSQL 的设计思路，架构设计和若干关键技术点的方案选择，展示了 TBSSQL 的运行 Demo。并以 TBSSQL 为例，简单介绍了在 TiDB 上增加一个 Feature 的大致思路和入手点。
  Topic 2：Chaos Practice in TiDB  讲师介绍：舒科，PingCAP 研发工程师。主要方向是 TiDB 质量保障，关注提升测试质量和效率的新技术。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.106】 Alluxio &amp; 仿真技术 &amp; TiDB 的 HTAP 之路 &amp; Zeppelin</title>
      <link>https://pingcap.com/meetup/meetup-106-20190606/</link>
      <pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-106-20190606/</guid>
      <description>Topic 1：Alluxio 的新特性介绍与缓存性能优化  讲师介绍：顾荣，博士毕业于南京大学计算机系，南大 PASA 大数据实验室助理研究员，研究方向大数据处理系统，现担任江苏省计算机学会大数据专家委员会秘书长、中国计算机学会系统软件专委会委员，Alluxio 项目 PMC Member &amp;amp; Maintainer。
  PPT 链接  顾博士首先介绍了大数据处理的四大趋势，并分析其驱动新型基础架构方面的需求。为了满足这些需求，接着他介绍了 Alluxio 数据编排的思想，为上层计算框架和底层存储系统构建桥梁。最后，他介绍了 Alluxio 2.0 新特性，以及顾博士所在南大实验室在 Alluxio 缓存优化方面的一些工作，包括通用化缓存调度框架，缓存策略，以及内存读优化等。
Topic 2：基于仿真技术规划部署和调优大数据集群  讲师介绍：刘华，来自于 Intel 系统技术与优化部门，负责 Intel 系统建模和模拟解决方案在亚太区的业务推广。目前致力向客户提供基于仿真技术的 Intel®CoFluent™ 大数据技术，帮助客户规划部署和调优大数据集群。
  PPT 链接  刘华老师首先探讨了规划部署和调优大数据集群时通常面临的一些挑战: 集群规模规划、硬件配置选型、软件参数优化和可扩展性分析。基于 Intel® CoFluent™ Studio 仿真技术，Intel 开发了端到端大数据集群仿真器——Intel® CoFluent™ Technology For Big Data，利用软硬件协同仿真的方法来应对这些大数据挑战。接着他结合健康监控集群和视屏分析系统中的实例场景，阐述了仿真器是如何执行全栈参数优化，集群规模预测，硬件配置规划和扩展性分析，以及集群容量预测和瓶颈识别等分析和原理。Intel® CoFluent™ Technology For Big Data 可以在软件环境中模拟完整的大规模集群，支持各种 Intel 硬件产品和各种大数据软件栈的模拟。通过灵活的 what-if 分析和精确的量化预测，可以帮助客户快速设部署集群，充分发挥硬件利性能，最小化成本，提供最好的用户体验。
Topic 3：TiDB 的 HTAP 之路 - 过去，现在和将来  讲师介绍：马晓宇，PingCAP 分析型产品负责人。曾就职于 Quantcast、网易，负责构建和管理大数据平台。关注分布式系统，SQL 引擎开发等领域。</description>
    </item>
    
    <item>
      <title>DM 源码阅读系列文章（七）定制化数据同步功能的实现</title>
      <link>https://pingcap.com/blog-cn/dm-source-code-reading-7/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/dm-source-code-reading-7/</guid>
      <description>本篇文章介绍了 DM 的定制化数据同步功能中库表路由（Table routing）、黑白名单（Black &amp;amp; white table lists）、列值转化（Column mapping）、binlog 过滤（Binlog event filter）四个主要功能的实现。</description>
    </item>
    
    <item>
      <title>Weekly update (May 27 ~ June 02, 2019)</title>
      <link>https://pingcap.com/weekly/2019-06-03-tidb-weekly/</link>
      <pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-06-03-tidb-weekly/</guid>
      <description>Last week, we landed 37 PRs in the TiDB repository, 4 PRs in the TiSpark repository, and 38 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>DM 源码阅读系列文章（六）relay log 的实现</title>
      <link>https://pingcap.com/blog-cn/dm-source-code-reading-6/</link>
      <pubDate>Fri, 31 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/dm-source-code-reading-6/</guid>
      <description>本篇文章的内容包括 relay log 目录结构定义、relay log 数据的处理流程、主从切换支持、relay log 的读取等逻辑。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.103】 TiDB 开源社区专题</title>
      <link>https://pingcap.com/meetup/meetup-103-20190530/</link>
      <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-103-20190530/</guid>
      <description>Topic ：TiDB 开源社区专题  讲师介绍：申砾，PingCAP 技术 VP，TiDB Tech Lead，前网易有道、360 搜索资深研发。
  视频 | Infra Meetup No.103：TiDB 开源社区专题 PPT 链接  本次 Talk 申砾老师首先给大家介绍了 TiDB 的演进历史，社区发展现状。然后详细介绍了如何参与到 TiDB 开源社区中，从了解社区、学习 TiDB 代码，到做出第一个贡献，接下来不断地做更加深入地贡献，成为 committer 甚至 maintainer。在这个过程中，我们准备了很多相关资料，帮助社区了解 TiDB 技术细节以及社区治理规范，希望能和大家一起构建一个全球顶尖的开源社区。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.104】 云原生数据库的核心特点 - TiDB 架构及发展 &amp; 反应式编程之 Spring WebFlux</title>
      <link>https://pingcap.com/meetup/meetup-104-20190530/</link>
      <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-104-20190530/</guid>
      <description>Topic 1：云原生数据库的核心特点 - TiDB 架构及发展  讲师介绍：杨洋，TiDB contributor。
  视频 | Infra Meetup No.104：云原生数据库的核心特点 - TiDB 架构及发展 PPT 链接  杨洋老师本次分享的主要内容为：
  介绍了云原生的概念及演化；
  结合云原生的特点分析传统数据库在架构方面的不足；
  着重介绍云原生数据库在架构方面的特点；
  作为云原生数据库中的佼佼者 TiDB 的技术架构是怎样的；
  TiDB 版本的演进，用户案例展示，技术社区活动介绍。
  Topic 2：反应式编程之 Spring WebFlux  讲师介绍：张锦文，现任职于金数据，主任工程师，前 ThoughtWorks 高级咨询师，AWS 助理架构师，《Scala 编程实战》合译者，有丰富的开发及工程实践，喜欢技术及编程挑战，热爱开源技术，贡献过 Pact-JVM 等开源框架，擅长 Java 生态及 DevOPS 技术。
  视频 | Infra Meetup No.104：反应式编程之 Spring WebFlux PPT 链接  张锦文老师本次分享主要讲述了计算机由单核到多核的处理架构的变化，接着从理论出发指出多线程编程所面临的问题，并给出了解决方案，进一步详细介绍了反应式编程的由来及反应式编程宣言：</description>
    </item>
    
    <item>
      <title>势高，则围广：TiDB 的架构演进哲学</title>
      <link>https://pingcap.com/blog-cn/guiding-ideologies-in-the-evolution-of-tidb/</link>
      <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/guiding-ideologies-in-the-evolution-of-tidb/</guid>
      <description>我们更多时候是站在哲学层面思考整个公司的运转和 TiDB 这个产品的演进的思路。这些思路很多时候是大家看不见的，因为不是一个纯粹的技术层面或者算法层面的事情。</description>
    </item>
    
    <item>
      <title>势高，则围广：TiDB 的架构演进哲学</title>
      <link>https://pingcap.com/meetup/meetup-100-20190510/</link>
      <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-100-20190510/</guid>
      <description>我们更多时候是站在哲学层面思考整个公司的运转和 TiDB 这个产品的演进的思路。这些思路很多时候是大家看不见的，因为不是一个纯粹的技术层面或者算法层面的事情。</description>
    </item>
    
    <item>
      <title>Weekly update (May 20 ~ May 26, 2019)</title>
      <link>https://pingcap.com/weekly/2019-05-27-tidb-weekly/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-05-27-tidb-weekly/</guid>
      <description>Last week, we landed 44 PRs in the TiDB repository, 17 PRs in the TiSpark repository, and 45 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Tutorial: Use TiDB DM to Migrate and Replicate Data from MySQL, MariaDB &amp; Amazon Aurora</title>
      <link>https://pingcap.com/blog/use-tidb-dm-to-migrate-and-replicate-data-from-mysqlmariadb-amazon-aurora/</link>
      <pubDate>Thu, 23 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/use-tidb-dm-to-migrate-and-replicate-data-from-mysqlmariadb-amazon-aurora/</guid>
      <description>Learn to migrate and replicate data from MySQL, MariaDB and Amazon Aurora using TiDB Data Migration.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.102】 How We Build TiDB &amp; TiDB Ecosystem Tools 概览</title>
      <link>https://pingcap.com/meetup/meetup-102-20190523/</link>
      <pubDate>Thu, 23 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-102-20190523/</guid>
      <description>Topic 1：How We Build TiDB  讲师介绍：姚维，TiDB 核心开发工程师，分布式数据库专家，我司华南区总经理。知名开源数据库中间件 Atlas 作者。
  视频 | Infra Meetup No.102：How We Build TiDB PPT 链接  本次分享姚维老师从数据库发展的历程讲起，讲解了 TiDB 的使命。以及从底向上的描述我们是怎么去实现一个 HTAP 数据库的，内容包括如果实现容错性，如果实现扩展性，如何在分布式的事务型 KV 存储之上构建完整的 SQL 系统。
Topic 2：TiDB Ecosystem Tools 概览  讲师介绍：杨非，TiDB Ecosystem Tools Team 研发工程师，目前主要负责数据迁移平台 TiDB DM 的设计与开发工作。
  视频 | Infra Meetup No.102：TiDB Ecosystem Tools 概览  杨非老师围绕 TiDB 生态系统架构中数据同步相关工具展开介绍，内容包括工具的架构设计，实现原理和使用场景等。具体工具包括以下三款：从 TiDB 集群实时同步数据到自定义下游的工具 TiDB-Binlog，从 MySQL/MariaDB 同步数据到 TiDB 的工具 Data Migration，以及支持将数据从 SQL 文件或 csv 格式文件快速导入 TiKV 集群的 TiDB-lightning toolset。</description>
    </item>
    
    <item>
      <title>诊断修复 TiDB Operator 在 K8s 测试中遇到的 Linux 内核问题</title>
      <link>https://pingcap.com/blog-cn/fix-two-linux-kernel-bugs-while-testing-tidb-operator-in-k8s/</link>
      <pubDate>Thu, 23 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/fix-two-linux-kernel-bugs-while-testing-tidb-operator-in-k8s/</guid>
      <description>我们在 K8s 中测试 TiDB Operator 时发现了两个 Linux 内核错误，这些错误已经困扰我们很长一段时间，并没有在整个 K8s 社区中彻底修复。经过广泛的调查和诊断，我们已经确定了处理这些问题的方法。</description>
    </item>
    
    <item>
      <title>Weekly update (May 13 ~ May 19, 2019)</title>
      <link>https://pingcap.com/weekly/2019-05-20-tidb-weekly/</link>
      <pubDate>Mon, 20 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-05-20-tidb-weekly/</guid>
      <description>Last week, we landed 37 PRs in the TiDB repository, 19 PRs in the TiSpark repository, and 24 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Design and Implementation of Golang Failpoints</title>
      <link>https://pingcap.com/blog/design-and-implementation-of-golang-failpoints/</link>
      <pubDate>Sat, 18 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/design-and-implementation-of-golang-failpoints/</guid>
      <description>This post introduces design and implementation of Golang Failpoint.</description>
    </item>
    
    <item>
      <title>TiKV 源码解析系列文章（七）gRPC Server 的初始化和启动流程</title>
      <link>https://pingcap.com/blog-cn/tikv-source-code-reading-7/</link>
      <pubDate>Thu, 16 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-source-code-reading-7/</guid>
      <description>本篇 TiKV 源码解析将为大家介绍 TiKV 的另一周边组件—— grpc-rs。grpc-rs 是 PingCAP 实现的一个 gRPC 的 Rust 绑定，其 Server/Client 端的代码框架都基于 Future，事件驱动的 EventLoop 被隐藏在了库的内部，所以非常易于使用。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.101】 Log, Observability and Filebeat &amp; 易果集团的数据平台建设历程 &amp; The Evolution of TiKV</title>
      <link>https://pingcap.com/meetup/meetup-101-20190514/</link>
      <pubDate>Tue, 14 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-101-20190514/</guid>
      <description>Topic 1：Log, Observability and Filebeat  讲师介绍：王鹏翰，Dashbase.Inc 研发工程师，参与研发下一代日志搜索引擎。
  视频 | Infra Meetup No.101：Log, Observability and Filebeat PPT 链接  本次分享王鹏翰老师首先阐述了 Log 和 observability 是什么，以及建立可观察性（observability）的三个主要手段：logging, metrics, tracing。然后对 Filebeat 的设计架构，实现细节，以及如何对 filebeat 进行合理的监控进行了介绍。最后分享了在生产环境中 50TB/day 日志传输量下的 filebeat 调优细节。
Topic 2：易果集团的数据平台建设历程  讲师介绍：罗瑞星，曾就职于前程无忧，参加过 Elasticsearch 官方文档中文翻译工作，现任易果集团数据架构专家，负责易果集团大数据平台架构，数据中台，数据仓库建设等工作。
  视频 | Infra Meetup No.101：易果集团的数据平台建设历程 PPT 链接  本次分享罗瑞星老师为大家介绍了易果集团大数据体系的发展历程，主要包括：
  数据工具的演进，调度工具，数据交换工具等；
  数据架构的演进，包括离线架构，实时架构等。
  最后详细介绍了 TiDB 在易果集团的使用，以及未来规划。
  Topic 3：The Evolution of TiKV  讲师介绍：唐刘，PingCAP 首席架构师。</description>
    </item>
    
    <item>
      <title>Weekly update (May 06 ~ May 12, 2019)</title>
      <link>https://pingcap.com/weekly/2019-05-13-tidb-weekly/</link>
      <pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-05-13-tidb-weekly/</guid>
      <description>Last week, we landed 48 PRs in the TiDB repository, 8 PRs in the TiSpark repository, and 45 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>What’s New in TiDB 3.0.0-rc.1</title>
      <link>https://pingcap.com/blog-cn/what-is-new-in-tidb-3.0.0-rc.1/</link>
      <pubDate>Fri, 10 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/what-is-new-in-tidb-3.0.0-rc.1/</guid>
      <description>2019 年 5 月 10 日，TiDB 3.0.0-rc.1 版本正式推出，该版本对系统稳定性，性能，安全性，易用性等做了较多的改进，本文会逐一介绍。</description>
    </item>
    
    <item>
      <title>DM 源码阅读系列文章（五）Binlog replication 实现</title>
      <link>https://pingcap.com/blog-cn/dm-source-code-reading-5/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/dm-source-code-reading-5/</guid>
      <description>本篇文章将会详细地介绍 DM 核心处理单元 Binlog replication，内容包含 binlog 读取、过滤、路由、转换，以及执行等逻辑。</description>
    </item>
    
    <item>
      <title>TiDB Binlog Tutorial</title>
      <link>https://pingcap.com/blog/tidb-binlog-tutorial/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/tidb-binlog-tutorial/</guid>
      <description>Learn to deploy TiDB Binlog with a simple TiDB cluster.</description>
    </item>
    
    <item>
      <title>PingCAP Open-Sources TiDB Binlog to Reduce Migration Cost</title>
      <link>https://pingcap.com/blog/pingcap-open-sources-tidb-binlog-to-reduce-migration-cost/</link>
      <pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/pingcap-open-sources-tidb-binlog-to-reduce-migration-cost/</guid>
      <description>Our team at PingCAP is excited to announce that we are open-sourcing our own binlog implementation, TiDB Binlog. TiDB Binlog is a tool we’ve been developing in-house (until now) to collect binary log data from TiDB server and provide real-time data backup and replication.</description>
    </item>
    
    <item>
      <title>TiDB Binlog 组件正式开源</title>
      <link>https://pingcap.com/blog-cn/tidb-binlog-open-source/</link>
      <pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-binlog-open-source/</guid>
      <description>为方便用户和开发者更加深入理解和使用 TiDB Binlog 组件，以及基于 TiDB Binlog 组件做二次开发用于更多的业务场景， TiDB 团队决定于 2019 年 5 月 6 日正式开源 TiDB Binlog 组件。</description>
    </item>
    
    <item>
      <title>Weekly update (April 29 ~ May 05, 2019)</title>
      <link>https://pingcap.com/weekly/2019-05-06-tidb-weekly/</link>
      <pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-05-06-tidb-weekly/</guid>
      <description>Last week, we landed 41 PRs in the TiDB repository, 4 PRs in the TiSpark repository, and 21 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Try to Fix Two Linux Kernel Bugs While Testing TiDB Operator in K8s</title>
      <link>https://pingcap.com/blog/try-to-fix-two-linux-kernel-bugs-while-testing-tidb-operator-in-k8s/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/try-to-fix-two-linux-kernel-bugs-while-testing-tidb-operator-in-k8s/</guid>
      <description>This post introduces how the EE team at PingCAP tackled two Linux kernel bugs while testing TiDB Operator in K8s. PingCAP engineers also hope the K8s community, RHEL and CentOS can help fix these bugs thoroughly in the near future.</description>
    </item>
    
    <item>
      <title>Golang Failpoint 的设计与实现</title>
      <link>https://pingcap.com/blog-cn/golang-failpoint/</link>
      <pubDate>Tue, 30 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/golang-failpoint/</guid>
      <description>Failpoint 项目是 FreeBSD Failpoints 的 Golang 实现，允许在代码中注入错误或异常行为，并由环境变量或代码动态激活来触发这些异常行为。Failpoint 能用于各种复杂系统中模拟错误处理来提高系统的容错性、正确性和稳定性。</description>
    </item>
    
    <item>
      <title>PingCAPers at the First RustCon Asia!</title>
      <link>https://pingcap.com/blog/pingcapers-at-the-first-rustcon-asia/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/pingcapers-at-the-first-rustcon-asia/</guid>
      <description>PingCAP has been an active member in the Rust community and one of the first production users of Rust in building TiKV. As part of being a co-organizer for the first RustCon Asia, PingCAP also contributed several topics in both keynote sessions and workshops.</description>
    </item>
    
    <item>
      <title>Weekly update (April 22 ~ April 28, 2019)</title>
      <link>https://pingcap.com/weekly/2019-04-29-tidb-weekly/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-04-29-tidb-weekly/</guid>
      <description>Last week, we landed 59 PRs in the TiDB repository, 14 PRs in the TiSpark repository, and 25 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>DM 源码阅读系列文章（四）dump/load 全量同步的实现</title>
      <link>https://pingcap.com/blog-cn/dm-source-code-reading-4/</link>
      <pubDate>Fri, 26 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/dm-source-code-reading-4/</guid>
      <description>本文将详细介绍 dump 和 load 两个数据同步处理单元的设计实现，重点关注数据同步处理单元 interface 的实现，数据导入并发模型的设计，以及导入任务在暂停或出现异常后如何恢复。</description>
    </item>
    
    <item>
      <title>Titan: A RocksDB Plugin to Reduce Write Amplification</title>
      <link>https://pingcap.com/blog/titan-storage-engine-design-and-implementation/</link>
      <pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/titan-storage-engine-design-and-implementation/</guid>
      <description>As a RocksDB plugin for key-value separation, inspired by WiscKey, Titan is available for preview in TiDB 3.0. This post introduces the design and implementation of Titan.</description>
    </item>
    
    <item>
      <title>TiKV 源码解析系列文章（六）raft-rs 日志复制过程分析</title>
      <link>https://pingcap.com/blog-cn/tikv-source-code-reading-6/</link>
      <pubDate>Wed, 24 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-source-code-reading-6/</guid>
      <description>本文将对数据冗余复制的过程进行详细展开，特别是关于 snapshot 及流量控制的机制，帮助读者更深刻地理解 Raft 的原理。</description>
    </item>
    
    <item>
      <title>Weekly update (April 15 ~ April 21, 2019)</title>
      <link>https://pingcap.com/weekly/2019-04-22-tidb-weekly/</link>
      <pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-04-22-tidb-weekly/</guid>
      <description>Last week, we landed 28 PRs in the TiDB repository, 11 PRs in the TiSpark repository, and 27 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.97】What&#39;s New in TiDB 3.0 &amp; An Introduction to Failpoint Design</title>
      <link>https://pingcap.com/meetup/meetup-97-20190420/</link>
      <pubDate>Sat, 20 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-97-20190420/</guid>
      <description>Topic 1：What&#39;s New in TiDB 3.0  讲师介绍：申砾，PingCAP 技术 VP。
  视频 | Infra Meetup No.97：What&#39;s New in TiDB 3.0 PPT 链接  1 月 19 日，TiDB 发布 3.0 Beta 版，相比 2.1 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。申砾老师为大家分享了 TiDB 3.0 的新特性及未来的规划。
Topic 2：An Introduction to Failpoint Design  讲师介绍：龙恒，TiDB SQL Infra Team 开发工程师，主要工作是 TiDB-Lightning / TiKV-Importer 的维护和新功能开发，致力于性能和稳定性提升。
  视频 | Infra Meetup No.97：An Introduction to Failpoint Design PPT 链接  本次分享龙恒老师首先介绍了 Failpoint 的使用场景，以及 github.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.98】Everything You Always Wanted to Know About Compiled and Vectorized Queries But Were Afraid to Ask</title>
      <link>https://pingcap.com/meetup/meetup-98-20190420/</link>
      <pubDate>Sat, 20 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-98-20190420/</guid>
      <description> 讲师介绍：徐怀宇，TiDB 研发工程师，目前主要负责查询执行引擎相关工作。
  视频 | Infra Meetup No.98：Compiled and Vectorized Queries PPT 链接  本次分享徐怀宇老师为大家介绍了论文《Everything You Always Wanted to Know About Compiled and Vectorized Queries But Were Afraid to Ask》，主要包括：
  介绍经典 Volcano 模型的执行流程，并分析其运行时性能。
  介绍行存、列存的基本概念，并进而引出向量化执行，分析其如何克服经典 Volcano 模型的缺点。
  介绍代码生成的基本概念，结合案例分析其如何克服经典 Volcano 模型的缺点。
  最后，结合论文内容，重点从 micro-architecture, data-parallel execution 两个方面，分析对比向量化执行和代码生成的特性，进而引出论文结论：向量化执行在 memory-bound 类的查询中更有优势，代码生成在 calculation-heavy 类的查询中更有优势。但是总体来看，在 OLAP 场景中，向量化执行和代码生成的执行性能相近。
延伸阅读 ：
 论文链接  </description>
    </item>
    
    <item>
      <title>【Infra Meetup No.99】数据中台 &amp; WiredTiger 引擎实现原理 &amp; JIT in Databases</title>
      <link>https://pingcap.com/meetup/meetup-99-20190420/</link>
      <pubDate>Sat, 20 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-99-20190420/</guid>
      <description>Topic 1: 宝尊对数据中台搭建的思考与探索  讲师介绍：张建，宝尊电商技术总监。
 数据中台最近特别火，很多企业都在关注如何构建自己的数据中台，利用数据中台打造数据驱动的经营能力。同时，数据中台的概念也漫天飞，但是很难有一个大家都认同的标准。一个有趣的现象是数据中台在国内数据圈子里在升温，但是国外却鲜有提及，以至于我们在向 Gartner 咨询相关主题的时候，国外的咨询师都一头雾水，不知道数据中台是什么。甚至想找一个对“数据中台”比较恰当的英文翻译都很难。
面对这个既新又杂的概念，宝尊也在进行自己的“数据中台”探索。本次研讨会，宝尊的算法和大数据部负责人张建就自己对数据中台的调研和思考，与大家一起开脑洞，共同研究和探讨了数据中台是什么，它和数据仓库有什么区别，数据中台的核心价值是什么等主题。
 应讲师要求，该分享视频&amp;amp;PPT 资料仅限内部学习交流，不对外公开～
 Topic 2：WiredTiger 引擎实现原理  讲师介绍：许鹏，携程机票技术总监，负责机票大数据基础平台的架构和运维，《Apache Spark 源码剖析》一书作者，三年 Presto 及 Elasticsearch，MongoDB 集群的一线运维经验。长期专注于分布式计算引擎技术和分布式存储的设计与实现。
  视频 | Infra Meetup No.99：WiredTiger 引擎实现原理 PPT 链接  WiredTiger 作为 MongoDB 的默认存储引擎，许鹏从整体架构，内存管理，磁盘寻址，数据持久化，文件压缩最佳实践等维度介绍 WiredTiger，并描述如何最小化线程间的竞争，如何充分现代计算机平台中的多核和大内存的优势，在 WiredTiger 并发控制机制中的体现，最后也介绍从源码级别怎么分析和调试 WiredTiger。
Topic 3：JIT in Databases  讲师介绍：吴逸飞，TiSpark 研发工程师。
  视频 | Infra Meetup No.99：WiredTiger 引擎实现原理 PPT 链接  本次分享内容主要包括：
 介绍了 JIT (即时编译技术) 在数据库中的意义：    避免传统解释系统的无关开销。</description>
    </item>
    
    <item>
      <title>Weekly update (April 08 ~ April 14, 2019)</title>
      <link>https://pingcap.com/weekly/2019-04-15-tidb-weekly/</link>
      <pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-04-15-tidb-weekly/</guid>
      <description>Last week, we landed 52 PRs in the TiDB repository, 9 PRs in the TiSpark repository, and 32 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.96】Introduction to Titan</title>
      <link>https://pingcap.com/meetup/meetup-96-20190413/</link>
      <pubDate>Sat, 13 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-96-20190413/</guid>
      <description>在上周六举办的 Infra Meetup No.96 上，我司 TiKV 研发工程师张博康为大家介绍了我们自研的高性能单机 key-value 存储引擎 Titan，以下是视频 &amp;amp; 文字回顾，enjoy～
 讲师介绍：张博康，TiKV 研发工程师，目前负责 TiKV raftstore 以及存储引擎相关工作。
  视频 | Infra Meetup No.96：Introduction to Titan PPT 链接  本次分享的主要内容包括：
  分析 LSM-Tree 的写放大问题，以阐述 Titan 核心的思路——key-value 分离。
  从设计目标出发，介绍并对比了 Wisckey 和 Titan 的结构差异。
  介绍了 Titan 的具体设计与实现，包括如何通过 RocksDB 的 TableBuilder，TableProperties，EventListener，WriteCallback 等现有机制实现 key-value 的分离以及 Titan 的 GC 流程。
  展示了 Titan 与 RocksDB 在大 value 情况下的性能对比。</description>
    </item>
    
    <item>
      <title>Powering the Xiaomi Mobile Lifestyle with TiDB</title>
      <link>https://pingcap.com/success-stories/tidb-in-xiaomi/</link>
      <pubDate>Thu, 11 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/success-stories/tidb-in-xiaomi/</guid>
      <description>As sales of Xiaomi smartphones continue to climb and the MIUI user base continues to grow, the Database Administration team at Xiaomi was having an increasingly hard time managing their MySQL database infrastructure until they adopted TiDB, an open source distributed hybrid transactional and analytical processing database created and supported by PingCAP. Now they also have plans to migrate additional workloads to TiDB in the future.</description>
    </item>
    
    <item>
      <title>DM 源码阅读系列文章（三）数据同步处理单元介绍</title>
      <link>https://pingcap.com/blog-cn/dm-source-code-reading-3/</link>
      <pubDate>Wed, 10 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/dm-source-code-reading-3/</guid>
      <description>本篇文章将详细地介绍 DM 数据同步处理单元（DM-worker 内部用来同步数据的逻辑单元），包括数据同步处理单元实现了什么功能，数据同步流程、运行逻辑，以及数据同步处理单元的 interface 设计。</description>
    </item>
    
    <item>
      <title>Weekly update (April 01 ~ April 07, 2019)</title>
      <link>https://pingcap.com/weekly/2019-04-08-tidb-weekly/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-04-08-tidb-weekly/</guid>
      <description>Last week, we landed 61 PRs in the TiDB repository, 9 PRs in the TiSpark repository, and 21 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.94】TiFlash、Spark SQL</title>
      <link>https://pingcap.com/meetup/meetup-94-20190403/</link>
      <pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-94-20190403/</guid>
      <description>Topic 1：TiDB 与 TiFlash 扩展 - 向真 HTAP 平台前进  讲师介绍：孙若曦，PingCAP 核心开发工程师，负责 OLAP 相关产品设计和开发。曾在星环科技、NVIDIA 就职担任 Tech Lead。主要研究分布式系统、数据库等领域。
  视频 | Infra Meetup No.94：TiDB 与 TiFlash 扩展 - 向真 HTAP 平台前进 PPT 链接  本次分享的内容主要包括以下三个方面：
  HTAP 的核心价值：能够解决当前各类数据平台上广泛存在的工具链过于复杂，运维成本高，数据实效性和一致性等问题。
  HTAP 面临的技术挑战：OLTP 场景通常使用行存，而 OLAP 场景通常使用列存；另外，OLAP 任务因为对系统资源占用较多，也会严重影响 OLTP 业务。
  TiFlash 是如何解决这些问题的：
 使用列存及向量化计算来满足 OLAP 业务； 数据使用 Raft Learner 机制同步到列存； 拥有与 TiDB 相同的 Scalability； OLTP 与 OLAP 的物理资源完全隔离，避免互相干扰； TiDB/TiSpark 能够同时访问行存和列存副本，通过 CBO 选取最优化的访问方式； 为 TiFlash 引入 MPP 能力。    Topic 2：eBay 在 Spark SQL 的性能优化  讲师介绍：王刚，eBay 大数据工程师。2017 年硕士毕业于南京大学，后一直在 eBay 从事大数据研发工作。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.95】Introduction of TiDB SQL Layer</title>
      <link>https://pingcap.com/meetup/meetup-95-20190403/</link>
      <pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-95-20190403/</guid>
      <description>在上周举办的成都 · Infra Meetup No.95 上，我司 TiDB SQL Engine 开发工程师姚珂男为大家介绍 TiDB SQL 层的技术原理，以下是视频&amp;amp;文字回顾，enjoy～
 讲师介绍：姚珂男，TiDB SQL Engine 开发工程师，主要工作为优化器及相关模块的维护和新功能开发，致力于提升查询计划的正确性和稳定性。
  视频 | Infra Meetup No.95：Introduction of TiDB SQL Layer PPT 链接  本次分享主要介绍 TiDB SQL 层的三个组件：优化器，统计信息和执行引擎。
 优化器部分主要举例介绍了逻辑优化规则和物理优化框架； 统计信息部分主要介绍直方图，CMSketch 以及使用方法； 执行引擎部分以两种 join 方式为例介绍了我们在执行引擎实现中用到的一些优化方法。  </description>
    </item>
    
    <item>
      <title>Kubernetes 中如何保证优雅地停止 Pod</title>
      <link>https://pingcap.com/blog-cn/tidb-opeartor-webhook/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-opeartor-webhook/</guid>
      <description>很多场景下 PreStop Hook 并不能很好地完成需求，这篇文章就简单分析一下“优雅地停止 Pod”这回事儿。</description>
    </item>
    
    <item>
      <title>Weekly update (March 25 ~ March 31, 2019)</title>
      <link>https://pingcap.com/weekly/2019-04-01-tidb-weekly/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-04-01-tidb-weekly/</guid>
      <description>Last week, we landed 62 PRs in the TiDB repository, 10 PRs in the TiSpark repository, and 21 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiKV 源码解析系列文章（五）fail-rs 介绍</title>
      <link>https://pingcap.com/blog-cn/tikv-source-code-reading-5/</link>
      <pubDate>Fri, 29 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-source-code-reading-5/</guid>
      <description>本文为 TiKV 源码解析系列的第五篇，为大家介绍 TiKV 在测试中使用的周边库 fail-rs。</description>
    </item>
    
    <item>
      <title>Introduction to Analytics Queries for the MySQL DBA</title>
      <link>https://pingcap.com/blog/introduction-to-analytics-queries-for-the-mysql-dba/</link>
      <pubDate>Thu, 28 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/introduction-to-analytics-queries-for-the-mysql-dba/</guid>
      <description>This post introduces some simple use cases of analytics queries where a MySQL DBA can expand their repertoire and answer some basic business questions by writing SQL queries with window functions.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.92】Introduction to TiDB Statistics</title>
      <link>https://pingcap.com/meetup/meetup-92-20190327/</link>
      <pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-92-20190327/</guid>
      <description>在上周六北京举办的 Infra Meetup No.92 上，我司 TiDB 开发工程师谢海滨老师为大家介绍了 TiDB 中统计信息的原理及细节。以下是视频 &amp;amp; 文字回顾，enjoy！
 讲师介绍：谢海滨，TiDB 研发工程师，目前主要负责统计信息以及优化器相关工作。
   视频 | Infra Meetup No.92：Introduction to TiDB Statistics
  PPT 链接
  本次分享首先介绍了统计信息的作用以及 TiDB 统计信息的基本组成部分，接下来围绕着统计信息的估算、收集以及更新 3 个部分具体展开：
  在估算方面，介绍了直方图和 Count-Min Sketch 的适用场景以及估算方法，以及 TiDB 是如何利用索引的统计信息来减少多列估算时的独立性假设。
  在收集方面，介绍了 analyze 语句的具体流程以及相关参数，以及 auto analyze 的触发条件。
  在更新方面，介绍了 TiDB 是如何更新 row count 和 modify count，以及是如何利用查询结果更新直方图和 Count-Min Sketch 的。
  </description>
    </item>
    
    <item>
      <title>【Infra Meetup No.93】A Study of LSM-Tree</title>
      <link>https://pingcap.com/meetup/meetup-93-20190327/</link>
      <pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-93-20190327/</guid>
      <description>在上周六广州举办的 Infra Meetup No.93 上，来自微信的林金河老师为大家分享了 LSM-Tree 相关知识。以下为视频&amp;amp;文字回顾，enjoy~
 讲师介绍：林金河，目前在微信从事分布式存储相关的工作
   视频 | Infra Meetup No.93：A Study of LSM-Tree
  PPT 链接
  本次分享的主要内容包括：
  LSM-Tree 的基本原理，包括 LSM-Tree 的文件组织结构、Point Query、Range Query 和 Compaction。
  LSM-Tree 存在的问题和相关的优化方法。主要有两方面：
   读放大。目前的优化思路是通过 filter 来减少不必要的 I/O，比如 bloom filter、SuRF。 Compaction 造成的负载抖动和写放大。一方面，可以通过软硬件结合的方式，将 compaction 的任务交给专门的 coprocessor 来做，将 compaction 带来的负面影响尽可能隔离开。另一方面，就是从数据结构和算法上，尽可能减少写放大，比如 PebbleDB 和 WiscKey。  最后简单总结了一下：LSM-Tree 的优化，基本都是在读放大、写放大和空间放大这三者间做 trade-off。理论上没法同时让这三者达到最优（有点像分布式系统的 CAP 定理）。  </description>
    </item>
    
    <item>
      <title>What’s New in TiDB 3.0.0 Beta.1</title>
      <link>https://pingcap.com/blog-cn/what-is-new-in-tidb-3.0.0-beta.1/</link>
      <pubDate>Tue, 26 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/what-is-new-in-tidb-3.0.0-beta.1/</guid>
      <description>今年 1 月份，我们发布了 TiDB 3.0.0 Beta 版本，DevCon 上也对这个版本做了介绍，经过两个月的努力，今天推出了下一个 Beta 版本 3.0.0 Beta.1。</description>
    </item>
    
    <item>
      <title>DM 源码阅读系列文章（二）整体架构介绍</title>
      <link>https://pingcap.com/blog-cn/dm-source-code-reading-2/</link>
      <pubDate>Mon, 25 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/dm-source-code-reading-2/</guid>
      <description>本篇文章主要介绍 TiDB Data Migration (TiDB DM) 的整体架构，包括 TiDB DM 有哪些组件、各组件分别实现什么功能、组件之间交互的数据模型和 RPC 实现。</description>
    </item>
    
    <item>
      <title>Weekly update (March 18 ~ March 24, 2019)</title>
      <link>https://pingcap.com/weekly/2019-03-25-tidb-weekly/</link>
      <pubDate>Mon, 25 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-03-25-tidb-weekly/</guid>
      <description>Last week, we landed 50 PRs in the TiDB repository, 4 PRs in the TiSpark repository, and 26 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.91】Head First Distributed Transaction in TiDB</title>
      <link>https://pingcap.com/meetup/meetup-91-20190321/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-91-20190321/</guid>
      <description>在上周六举办的 Infra Meetup No.91 上，我司 TiKV 研发工程师吴雪莲老师为杭州小伙伴分享了分布式事务在 TiDB 中实现的原理和细节，以下是视频 &amp;amp; 文字回顾，enjoy！
 讲师介绍：吴雪莲，TiKV 研发工程师，目前主要负责 TiDB/TiKV 事务、TiKV 计算层 Coprocessor 相关研发。
   视频 | Infra Meetup No.91：Head First Distributed Transaction in TiDB
  PPT 链接
  本次分享的主题是分布式事务在 TiDB 中的实现，主要围绕以下三个方面展开：
  分布式事务的定义
  Percolator 中事务的实现
  TiDB 中事务的实现及注意事项
  首先，在分布式事务的定义中，主要介绍了 ACID 和四种常见隔离级别。然后解读了 Percolator 中事务实现，核心内容包括：1. 基于快照隔离级别的优缺点；2. 如何通过两阶段提交实现跨行跨表的分布式事务。
最后，我们详细介绍了 TiDB 中分布式事务的实现，包括 TiDB 如何将关系型数据转化成 key-value 存储，TiDB 中两阶段提交的实现细节及异常处理，以及 TiDB 事务使用过程中的注意事项。</description>
    </item>
    
    <item>
      <title>DM 源码阅读系列文章（一）序</title>
      <link>https://pingcap.com/blog-cn/dm-source-code-reading-1/</link>
      <pubDate>Tue, 19 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/dm-source-code-reading-1/</guid>
      <description>本篇文章主要介绍了 DM 源码阅读的目的和源码阅读的规划，简单介绍了 DM 的源码结构和工具链。本文为本系列文章的第一篇。</description>
    </item>
    
    <item>
      <title>Weekly update (March 11 ~ March 17, 2019)</title>
      <link>https://pingcap.com/weekly/2019-03-18-tidb-weekly/</link>
      <pubDate>Mon, 18 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-03-18-tidb-weekly/</guid>
      <description>Last week, we landed 63 PRs in the TiDB repository, 6 PRs in the TiSpark repository, and 28 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>BookMyShow.com: More Uptime, 30% Less Operational Cost with TiDB</title>
      <link>https://pingcap.com/success-stories/tidb-in-bookmyshow/</link>
      <pubDate>Fri, 15 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/success-stories/tidb-in-bookmyshow/</guid>
      <description>With TiDB, BookMyShow has experienced increased uptime and availability, since TiDB automatically partitions and distributes data across the cluster. Meanwhile, operational and maintenance cost has been reduced by 30%. No engineer needs to be fully dedicated to database operations anymore. This post will introduce why BookMyShow chose TiDB over Greenplum by illustrating how TiDB solved their pain points.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.90】知乎已读服务架构演进</title>
      <link>https://pingcap.com/meetup/meetup-90-20190314/</link>
      <pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-90-20190314/</guid>
      <description>在第 90 期 Infra Meetup 上，来自知乎的孙晓光老师为大家分享了知乎已读服务的架构演进的经验。小伙伴们热情爆棚，QA 环节长达 1 小时，快戳视频看看孙老师都分享了哪些有趣的「踩坑经验」吧！
 讲师介绍：孙晓光，知乎搜索工程团队负责人，TiKV Committer。
   视频 | Infra Meetup No.90：知乎已读服务架构演进
  PPT 链接
  孙晓光老师在本期 Meetup 上提到，知乎已读服务的设计严格意义上来说同很多业务向系统的设计有不少差异，而这些差异反映在过程和结果上有些是正向的，也有些是负向的。但是很高兴的看到至少在上线一年多来，整体的收益是远高于所付出的代价的。
最后他希望在近期全量数据迁移到 TiDB 完成后能够进一步解决目前架构的一些尚存的痛点问题，让这个架构跑的更稳跑的更好。</description>
    </item>
    
    <item>
      <title>TiKV 源码解析系列文章（四）Prometheus（下）</title>
      <link>https://pingcap.com/blog-cn/tikv-source-code-reading-4/</link>
      <pubDate>Wed, 13 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-source-code-reading-4/</guid>
      <description>本篇将为大家介绍 rust-prometheus 的更多高级功能的实现原理。</description>
    </item>
    
    <item>
      <title>TiDB Certification (Beta) is Ready</title>
      <link>https://pingcap.com/blog/tidb-certification-beta-is-ready/</link>
      <pubDate>Tue, 12 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/tidb-certification-beta-is-ready/</guid>
      <description>The official TiDB Certification is now available in beta and an online exam is ready for you to sign up.</description>
    </item>
    
    <item>
      <title>Weekly update (March 04 ~ March 10, 2019)</title>
      <link>https://pingcap.com/weekly/2019-03-11-tidb-weekly/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-03-11-tidb-weekly/</guid>
      <description>Last week, we landed 51 PRs in the TiDB repository, 2 PRs in the TiSpark repository, and 15 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiKV 源码解析系列文章（三）Prometheus（上）</title>
      <link>https://pingcap.com/blog-cn/tikv-source-code-reading-3/</link>
      <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-source-code-reading-3/</guid>
      <description>本篇将为大家介绍 rust-prometheus 的基础知识以及最基本的几个指标的内部工作机制。</description>
    </item>
    
    <item>
      <title>The (Near) Future of Database</title>
      <link>https://pingcap.com/blog-cn/the-near-future-of-database/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/the-near-future-of-database/</guid>
      <description>在 TiDB DevCon 2019 上，我司联合创始人兼 CTO 黄东旭分享了对数据库行业大趋势以及未来数据库技术的看法。</description>
    </item>
    
    <item>
      <title>Weekly update (February 25 ~ March 03, 2019)</title>
      <link>https://pingcap.com/weekly/2019-03-04-tidb-weekly/</link>
      <pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-03-04-tidb-weekly/</guid>
      <description>Last week, we landed 63 PRs in the TiDB repository, 2 PRs in the TiSpark repository, and 36 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.89】TiKV 最新性能优化</title>
      <link>https://pingcap.com/meetup/meetup-89-20190227/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-89-20190227/</guid>
      <description>在上周六举办的 Infra Meetup 上，TiKV 研发工程师屈鹏为大家介绍了 TiKV 最新性能优化。现场讨论非常热烈，分享结束后还有很多小伙伴意犹未尽，留在现场和讲师交流。欢迎大家多来参加 Meetup 感受现场交流的乐趣哦～ 以下是本期 Meetup 的文字 &amp;amp; 视频回顾，enjoy！
 讲师介绍：屈鹏，2017 年加入 PingCAP，TiKV 研发工程师。专注于分布式数据库领域，擅长 Raft 及 TiKV 的性能优化。
   视频 | Infra Meetup No.89：TiKV 最新性能优化
  PPT 链接
  屈鹏老师首先为大家介绍了 TiKV 最新版本的 3 个新的优化：
  batch gRPC/Raft messages 特性可以将消息收集为一个 batch 批量发送，减少了网络相关的系统调用次数，达到了性能上的提升。
  threaded raftstore/apply 特性将之前系统中的两个单线程组件替换为多线程，同时避免了数据倾斜和饥饿，消除了 TiKV 在写入上的瓶颈。
  distributed GC 大幅重构了 GC 相关的代码，GC 的驱动者由客户端变成了 TiKV 自己，简化了客户端的编写难度，同时将 GC 速度加快了 3 倍。</description>
    </item>
    
    <item>
      <title>Weekly update (February 18 ~ February 24, 2019)</title>
      <link>https://pingcap.com/weekly/2019-02-25-tidb-weekly/</link>
      <pubDate>Mon, 25 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-02-25-tidb-weekly/</guid>
      <description>Last week, we landed 75 PRs in the TiDB repository, 3 PRs in the TiSpark repository, and 21 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Weekly update (February 11 ~ February 17, 2019)</title>
      <link>https://pingcap.com/weekly/2019-02-18-tidb-weekly/</link>
      <pubDate>Mon, 18 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-02-18-tidb-weekly/</guid>
      <description>Last week, we landed 50 PRs in the TiDB repository, 2 PRs in the TiSpark repository, and 16 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiKV 源码解析系列文章（二）raft-rs proposal 示例情景分析</title>
      <link>https://pingcap.com/blog-cn/tikv-source-code-reading-2/</link>
      <pubDate>Fri, 15 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-source-code-reading-2/</guid>
      <description>本文将以 raft-rs 的公共 API 作为切入点，介绍一般 proposal 过程的实现原理，让用户可以深刻理解并掌握 raft-rs API 的使用，以便用户开发自己的分布式应用，或者优化、定制 TiKV。</description>
    </item>
    
    <item>
      <title>Shopping on Shopee, the TiDB Way</title>
      <link>https://pingcap.com/success-stories/tidb-in-shopee/</link>
      <pubDate>Thu, 14 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/success-stories/tidb-in-shopee/</guid>
      <description>As our business boom, our team faced severe challenges in scaling our backend system to meet the demand until we found TiDB, a MySQL-compatible NewSQL hybrid transactional and analytical processing (HTAP) database, built and supported by PingCAP. Now we can provide better service and experience for our users without worrying about our database capacity.</description>
    </item>
    
    <item>
      <title>FOSDEM 2019 Recap: Global Technology, Local Community</title>
      <link>https://pingcap.com/blog/fosdem-2019-recap-global-technology-local-community/</link>
      <pubDate>Tue, 12 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/fosdem-2019-recap-global-technology-local-community/</guid>
      <description>In this post, Kevin Xu shares the PingCAP team&#39;s experience and activities at FOSDEM 2019, including three talks they delivered at the conference &amp;ndash; the first one about TiDB and its architecture, horizontal scalability and MySQL compatibility, the second about improving development posture in Rust based on the work building TiKV, and the last about Rust implementation of Prometheus.</description>
    </item>
    
    <item>
      <title>Weekly update (January 28 ~ February 10, 2019)</title>
      <link>https://pingcap.com/weekly/2019-02-11-tidb-weekly/</link>
      <pubDate>Mon, 11 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-02-11-tidb-weekly/</guid>
      <description>Last two weeks, we landed 25 PRs in the TiDB repository, 2 PRs in the TiSpark repository, and 23 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB Tools (III): TiDB Data Migration Architecture Design and Implementation Principles</title>
      <link>https://pingcap.com/blog/tidb-dm-architecture-design-and-implementation-principles/</link>
      <pubDate>Fri, 01 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/tidb-dm-architecture-design-and-implementation-principles/</guid>
      <description>TiDB Data Migration is an integrated data transfer and replication management platform that supports full data migration or incremental data replication from MySQL or MariaDB instances into a TiDB cluster. This post introduces its architecture design and implementation principles.</description>
    </item>
    
    <item>
      <title>TiDB Tools (II): Introducing TiDB Lightning</title>
      <link>https://pingcap.com/blog/introducing-tidb-lightning/</link>
      <pubDate>Wed, 30 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/introducing-tidb-lightning/</guid>
      <description>TiDB Lightning is an open source TiDB ecosystem tool that supports high speed full-import of a large SQL dump into a TiDB cluster. This post introduces its architecture and future improvements on the roadmap.</description>
    </item>
    
    <item>
      <title>TiDB Tools (I): TiDB Binlog Architecture Evolution and Implementation Principles</title>
      <link>https://pingcap.com/blog/tidb-binlog-architecture-evolution-and-implementation-principles/</link>
      <pubDate>Tue, 29 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/tidb-binlog-architecture-evolution-and-implementation-principles/</guid>
      <description>TiDB Binlog is a tool used to collect the logical changes made to a TiDB cluster and provide incremental backup and replication. This post introduces its architecture evolution and implementation principles.</description>
    </item>
    
    <item>
      <title>TiKV 源码解析系列文章（一）序</title>
      <link>https://pingcap.com/blog-cn/tikv-source-code-reading-1/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-source-code-reading-1/</guid>
      <description>在 TiDB DevCon 2019 上，我们宣布启动 TiKV 源码系列分享，帮助大家理解 TiKV 的技术细节。本文为本系列文章的第一篇。</description>
    </item>
    
    <item>
      <title>Weekly update (January 21 ~ January 27, 2019)</title>
      <link>https://pingcap.com/weekly/2019-01-28-tidb-weekly/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-01-28-tidb-weekly/</guid>
      <description>Last week, we landed 22 PRs in the TiDB repository, 1 PR in the TiSpark repository, and 20 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB 3.0 Beta: Stability at Scale</title>
      <link>https://pingcap.com/blog/tidb-3.0-beta-stability-at-scale/</link>
      <pubDate>Thu, 24 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/tidb-3.0-beta-stability-at-scale/</guid>
      <description>This post introduces the key new features of TiDB 3.0 Beta.</description>
    </item>
    
    <item>
      <title>Titan 的设计与实现</title>
      <link>https://pingcap.com/blog-cn/titan-design-and-implementation/</link>
      <pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/titan-design-and-implementation/</guid>
      <description>Titan 是由 PinCAP 研发的一个基于 RocksDB 的高性能单机 key-value 存储引擎。我们的基准测试结果显示，当 value 较大的时候，Titan 在写、更新和点读等场景下性能都优于 RocksDB。</description>
    </item>
    
    <item>
      <title>Weekly update (January 14 ~ January 20, 2019)</title>
      <link>https://pingcap.com/weekly/2019-01-21-tidb-weekly/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-01-21-tidb-weekly/</guid>
      <description>Last week, we landed 57 PRs in the TiDB repository, 1 PR in the TiSpark repository, and 19 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.88】小红书的社区架构 &amp; TiDB 在小红书的实践案例分享 &amp; Vectorized Execution Explained</title>
      <link>https://pingcap.com/meetup/meetup-88-20190116/</link>
      <pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-88-20190116/</guid>
      <description>在上周六举办的 Infra Meetup No.88 上海站上，来自小红书的郭一、张俊骏两位老师，和我司施闻轩老师一起，为大家带来三个精彩的分享，以下是视频&amp;amp;文字回顾，enjoy~
小红书的社区架构  [视频 | Infra Meetup No.88：小红书的社区架构] (https://www.bilibili.com/video/av40950075/?p=1)  郭一 | 小红书 本次分享，郭一老师主要介绍了小红书社区的数据技术。首先介绍了小红书的产品和社区个性化的推荐需要的关键技术。然后对社区的数据技术分别从接入层，业务层，数据服务层和数据仓库层进行了概述。然后讲述了一个利用流计算引擎 Flink 给线上推荐提供用户行为实时的多维度聚合的业务实例。最后对小红书下一年的数据架构发展进行了展望。
TiDB 在小红书的实践案例分享  [视频 | Infra Meetup No.88：TiDB 在小红书的实践案例分享] (https://www.bilibili.com/video/av40950075/?p=2)  张俊骏 | 小红书 本次分享，张俊骏老师主要介绍了小红书在以下两个场景中对 TiDB 的使用：第一个场景是大促实时看板，在高 QPS 场景下通过最终一致性写入模型完美地满足了需求，且全程保持稳定；第二个是作为分库分表 MySQL 的从库进行 ETL 任务，通过分析分库分表 MySQL 的特性自行开发了同步工具，解决了许多 ETL 任务的痛点。小红书未来还会在 TiDB 的容器化部署、自动化运维、接入更多业务场景等方向上努力。
Vectorized Execution Explained  [视频 | Infra Meetup No.88：Vectorized Execution Explained] (https://www.bilibili.com/video/av40950075/?p=3)  施闻轩 | PingCAP 2019 年我们会尝试针对一些主题进行一系列分享，Q1 计划的是查询执行（Query Execution）相关主题。针对这个主题我们会分享当前业界相对前沿的设计和算法，例如 JIT Compilation，向量化，SIMD，NUMA 相关优化等。</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（二十四）TiDB Binlog 源码解析</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-24/</link>
      <pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-24/</guid>
      <description>本文将为大家介绍 TiDB 在执行 DML/DDL 语句过程中，如何将 binlog 数据发送给 TiDB Binlog 集群的 Pump 组件。</description>
    </item>
    
    <item>
      <title>Weekly update (January 07 ~ January 13, 2019)</title>
      <link>https://pingcap.com/weekly/2019-01-14-tidb-weekly/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-01-14-tidb-weekly/</guid>
      <description>Last week, we landed 51 PRs in the TiDB repository, 5 PRs in the TiSpark repository, and 32 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.87】摩拜数据复制中心 Gravity 介绍</title>
      <link>https://pingcap.com/meetup/meetup-87-20190108/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-87-20190108/</guid>
      <description>在上周六举办的 Infra Meetup No.87 上，来自摩拜的胡明老师为大家介绍了摩拜数据复制中心 Gravity，现场讨论氛围非常热烈，来自摩拜的任弘迪老师也解答了大家的一些疑问。以下是现场视频&amp;amp;文字回顾，enjoy~
  [视频 | Infra Meetup No.87：摩拜数据复制中心 Gravity 介绍] (https://www.bilibili.com/video/av40304703)
  PPT 下载链接
  Gravity 是摩拜数据库团队使用 Golang 研发的一款数据同步组件。实现了线上数据库变更的实时推送，MySQL 数据库的单向、双向同步。在数据同步过程中，还支持自定义的数据变换（列映射、重命名等）。Gravity 可以使用单进程的方式部署，也可以使用基于 Kubernetes 的集群模式部署。
在摩拜内部，Gravity 被用在多种场景下，包括大数据总线的建设，分库分表到合库的同步，大规模数据清洗，配合微服务拆分的数据库实时双向同步。
胡明 | 摩拜 在此次 Meetup 上，大家一起讨论了很多数据同步方面遇到的宝贵经验。包括怎么实现数据库的双向同步，分库分表到合库时 DDL 的处理遇到的坑，在集群模式下可能发生脑裂带来的数据不一致的情况。
最后，胡明老师分享了 Gravity 的 Roadmap，包括对 DDL 的支持，统一的序列化格式，bingo 归档，PostgreSQL 的支持，以及原生的 TiDB 增量同步的支持。</description>
    </item>
    
    <item>
      <title>Weekly update (December 31 ~ January 06, 2019)</title>
      <link>https://pingcap.com/weekly/2019-01-07-tidb-weekly/</link>
      <pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-01-07-tidb-weekly/</guid>
      <description>Last week, we landed 38 PRs in the TiDB repository, 2 PRs in the TiSpark repository, and 10 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（二十三）Prepare/Execute 请求处理</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-23/</link>
      <pubDate>Thu, 03 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-23/</guid>
      <description>在《（三）SQL 的一生》中，我们介绍了 TiDB 在收到客户端请求包时，最常见的 &lt;code&gt;Command --- COM_QUERY&lt;/code&gt; 的请求处理流程。本文我们将介绍另外一种大家经常使用的 &lt;code&gt;Command --- Prepare/Execute&lt;/code&gt; 请求在 TiDB 中的处理过程。</description>
    </item>
    
    <item>
      <title>Weekly update (December 24 ~ December 30, 2018)</title>
      <link>https://pingcap.com/weekly/2019-01-02-tidb-weekly/</link>
      <pubDate>Wed, 02 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2019-01-02-tidb-weekly/</guid>
      <description>Last week, we landed 57 PRs in the TiDB repository, 9 PRs in the TiSpark repository, and 34 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>写给社区的回顾和展望：TiDB 2019, Level Up!</title>
      <link>https://pingcap.com/blog-cn/for-community-tidb-2019-level-up/</link>
      <pubDate>Wed, 02 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/for-community-tidb-2019-level-up/</guid>
      <description>2018 年对于 TiDB 和 PingCAP 来说是一个由少年向成年的转换的一年，如果用一个关键字来概括就是「蜕变」。</description>
    </item>
    
    <item>
      <title>TBSSQL 的那些事 | TiDB Hackathon 2018</title>
      <link>https://pingcap.com/blog-cn/tidb-hackathon-2018-06/</link>
      <pubDate>Thu, 27 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-hackathon-2018-06/</guid>
      <description>本文作者是来自 TiBoys 队的崔秋同学，他们的项目 TBSSQL（TiDB Batch and Streaming SQL） 在 TiDB Hackathon 2018 中获得了一等奖。</description>
    </item>
    
    <item>
      <title>TiDB Ecosystem Tools 原理解读系列（三）TiDB Data Migration 架构设计与实现原理</title>
      <link>https://pingcap.com/blog-cn/tidb-ecosystem-tools-3/</link>
      <pubDate>Wed, 26 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-ecosystem-tools-3/</guid>
      <description>TiDB Data Migration 是用于将数据从 MySQL/MariaDB 迁移到 TiDB 的工具。该工具既支持以全量备份文件的方式将 MySQL/MariaDB 的数据导入到 TiDB，也支持通过解析执行 MySQL/MariaDB binlog 的方式将数据增量同步到 TiDB。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.85】宝尊 &#43; Apache Spark &#43; TiDB SQL Layer</title>
      <link>https://pingcap.com/meetup/meetup-85-20181226/</link>
      <pubDate>Wed, 26 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-85-20181226/</guid>
      <description>在上周六举办的 Infra Meetup 上海站上，来自宝尊电商和阿里云的资深工程师们，与我司核心开发工程师一起探讨了新一代开源分布式数据库 TiDB 和 Apache Spark 在 SQL 层面的执行原理、优化方案，以及电商数据的技术解决方案等话题。以下是视频&amp;amp;文字回顾，enjoy～
宝尊的 Cloud Native Migration Path 与 TiDB 的应用展望  视频 | Infra Meetup No.85：宝尊的 Cloud Native Migration Path 与 TiDB 的应用展望 PPT 链接  邵千里 | 宝尊 宝尊是知名品牌电子商务商业伙伴和技术研发解决方案公司，拥有端到端数字化零售及供应链管理系统集成解决方案的自主知识产权。宝尊技术与创新中心为了达成“科技驱动商业未来”的宝尊战略愿景，启动全面的云转型战略以满足宝尊科技能力输出的战略目标。
本次 Meetup 上，邵千里老师分享了宝尊在云原生转型中的技术路线选择和技术挑战，同时介绍 TiDB 作为新一代的数据库，在宝尊的科技转型的过程中的使用现状和效果以及宝尊对这一新技术在未来的平台版图中的位置的展望。
Apache Spark 优化机会与探索  [视频 | Infra Meetup No.85：Apache Spark 优化机会与探索] (https://www.bilibili.com/video/av39729833/?p=2) PPT 链接  李呈祥 | 阿里巴巴 本次分享，李呈祥老师主要介绍了阿里巴巴 EMR 团队在 Spark SQL 方向上的一些优化工作，通过在 Catalyst 和 shuffle 等模块的优化，大幅提高了用户数据处理的性能，最后也介绍了 EMR 在 Spark 优化方向上的一些认识和思考。</description>
    </item>
    
    <item>
      <title>PingCAP 2018 Year in Review</title>
      <link>https://pingcap.com/blog/pingcap-2018-year-in-review/</link>
      <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/pingcap-2018-year-in-review/</guid>
      <description>Thank you for a great 2018!</description>
    </item>
    
    <item>
      <title>Weekly update (December 17 ~ December 23, 2018)</title>
      <link>https://pingcap.com/weekly/2018-12-24-tidb-weekly/</link>
      <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-12-24-tidb-weekly/</guid>
      <description>Last week, we landed 48 PRs in the TiDB repository and 29 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（二十二）Hash Aggregation</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-22/</link>
      <pubDate>Fri, 21 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-22/</guid>
      <description>本篇文章将介绍 TiDB 中 Hash Aggregation 的实现原理和细节。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.83】What&#39;s New in TiDB 2.1 and What&#39;s Next</title>
      <link>https://pingcap.com/meetup/meetup-83-20181220/</link>
      <pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-83-20181220/</guid>
      <description>在 Infra Meetup 第 83 期上，我司 TiDB 核心开发工程师、分布式数据库专家姚维老师为广州的朋友们介绍 TiDB 2.1 的重要特性和未来的规划，以下是视频&amp;amp;文字回顾，enjoy～
姚维 | TiDB 核心开发工程师   [视频 | Infra Meetup No.83：What&#39;s New in TiDB 2.1 and What&#39;s Next] (https://www.bilibili.com/video/av39213723)
  PPT 链接
  姚维老师主要介绍了 TiDB 2.1 版本的重要 Feature，包括这些 Feature 所解决的问题、背后的原理、达到的效果，特别是 TiDB 在优化器、计算引擎、存储引擎方面的改进，使得 2.1 版本成为更智能、更迅速、更稳定的数据库。接着展示了部分 Benchmark 结果，分别从 OLAP、OLTP 两个场景表明 TiDB 的性能提升。最后介绍了下一步工作的展望，让大家了解 TiDB 的演进方向。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.84】如何在三分钟内跑完千万测试 case &amp; 硬核 Paper Reading</title>
      <link>https://pingcap.com/meetup/meetup-84-20181220/</link>
      <pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-84-20181220/</guid>
      <description>谈谈 TiDB 背后的效率工程：如何在三分钟内跑完千万测试 case   [视频 | Infra Meetup No.84：如何在三分钟内跑完千万测试 case] (https://www.bilibili.com/video/av39304371/?p=1)
  PPT 链接
  殷成文 | PingCAP 殷成文老师首先介绍了我们在保证 TiDB 正确性以及稳定性上做的一些事情，以及目前遇到的效率的问题， 然后逐个分析目前 CI 慢的原因以及分享我们是如何去解决这些问题的，并介绍了在优化过程中遇到一些坑。 流程上我们结合已有的基础架构选择了 Jenkins with Kubernetes 的方式来解决之前出现的资源调度以及并发上的问题。殷成文老师分享了在使用的过程中遇到的一些坑，以及我们在网络结构上做的调整，提高与 GitHub 交互的速度和稳定性。此外，我们为了减少网络 io 做的两层 cache，减少重复的下载上传操作。最后介绍了我们如何去优化具体 case 以及在优化 TiDB unit test 上用了哪些黑魔法。
Paper Reading   [视频 | Infra Meetup No.84：硬核 Paper Reading] (https://www.bilibili.com/video/av39304371/?p=2)
  论文《Robust Query Optimization Methods With Respect to Estimation Errors: A Survey》
  PPT 链接</description>
    </item>
    
    <item>
      <title>十分钟成为 Contributor 系列 | 支持 AST 还原为 SQL</title>
      <link>https://pingcap.com/blog-cn/support-ast-restore-to-sql-text/</link>
      <pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/support-ast-restore-to-sql-text/</guid>
      <description>为了实现一些新特性，我们需要为 AST 实现可以还原为 SQL 文本的功能，这篇教程描述如何为 AST 节点添加该功能。首先介绍一些必需的背景知识，然后介绍实现 Restore() 函数的流程，最后会展示一个例子。</description>
    </item>
    
    <item>
      <title>TiDB Ecosystem Tools 原理解读系列（二）TiDB-Lightning Toolset 介绍</title>
      <link>https://pingcap.com/blog-cn/tidb-ecosystem-tools-2/</link>
      <pubDate>Tue, 18 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-ecosystem-tools-2/</guid>
      <description>TiDB-Lightning Toolset 是一套快速全量导入 SQL dump 文件到 TiDB 集群的工具集，适合在上线前用作迁移现有的大型数据库到全新的 TiDB 集群。</description>
    </item>
    
    <item>
      <title>Weekly update (December 10 ~ December 16, 2018)</title>
      <link>https://pingcap.com/weekly/2018-12-17-tidb-weekly/</link>
      <pubDate>Mon, 17 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-12-17-tidb-weekly/</guid>
      <description>Last week, we landed 47 PRs in the TiDB repository, 2 PRs in the TiSpark repository, and 36 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>5 Key Differences Between MySQL and TiDB for Scaling in the Cloud</title>
      <link>https://pingcap.com/blog/5-key-differences-between-mysql-and-tidb-for-scaling-in-the-cloud/</link>
      <pubDate>Tue, 11 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/5-key-differences-between-mysql-and-tidb-for-scaling-in-the-cloud/</guid>
      <description>This post introduces the top five key differences between TiDB and MySQL.</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（二十一）基于规则的优化 II</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-21/</link>
      <pubDate>Tue, 11 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-21/</guid>
      <description>本篇文章将介绍聚合消除、外连接消除和子查询优化等优化规则。</description>
    </item>
    
    <item>
      <title>Weekly update (December 03 ~ December 09, 2018)</title>
      <link>https://pingcap.com/weekly/2018-12-10-tidb-weekly/</link>
      <pubDate>Mon, 10 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-12-10-tidb-weekly/</guid>
      <description>Last week, we landed 48 PRs in the TiDB repository, 4 PRs in the TiSpark repository, and 22 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB Ecosystem Tools 原理解读系列（一）：TiDB Binlog 架构演进与实现原理</title>
      <link>https://pingcap.com/blog-cn/tidb-ecosystem-tools-1/</link>
      <pubDate>Fri, 07 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-ecosystem-tools-1/</guid>
      <description>TiDB Binlog 组件用于收集 TiDB 的 binlog，并提供实时备份和同步功能。本文主要介绍了 TiDB Binlog 的架构演进之路和实现原理。</description>
    </item>
    
    <item>
      <title>TiDB, the Key to a Better Life for Meituan-Dianping’s 290 Million Monthly Users</title>
      <link>https://pingcap.com/success-stories/tidb-in-meituan-dianping/</link>
      <pubDate>Thu, 06 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/success-stories/tidb-in-meituan-dianping/</guid>
      <description>As our business grew quickly, we were overwhelmed trying to tackle the mounting data until we found TiDB, a MySQL-compatible NewSQL hybrid transactional and analytical processing (HTAP) database, built and supported by PingCAP. Now we can harness our data with more confidence than ever before and provide better services for our users to enjoy a better life.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 GA: Battle-Tested to Handle an Unpredictable World</title>
      <link>https://pingcap.com/blog/tidb-2.1-ga-Battle-tested-to-handle-an-unpredictable-world/</link>
      <pubDate>Tue, 04 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/tidb-2.1-ga-Battle-tested-to-handle-an-unpredictable-world/</guid>
      <description>PingCAP, a leading distributed database company that created the popular MySQL-compatible cloud-native NewSQL database TiDB, announces that TiDB 2.1 is ready for General Availability.</description>
    </item>
    
    <item>
      <title>Weekly update (November 26 ~ December 02, 2018)</title>
      <link>https://pingcap.com/weekly/2018-12-03-tidb-weekly/</link>
      <pubDate>Mon, 03 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-12-03-tidb-weekly/</guid>
      <description>Last week, we landed 72 PRs in the TiDB repository, 2 PRs in the TiSpark repository, and 25 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 GA Release Notes</title>
      <link>https://pingcap.com/blog-cn/tidb-21-ga-release-notes/</link>
      <pubDate>Fri, 30 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-21-ga-release-notes/</guid>
      <description>2018 年 11 月 30 日，TiDB 发布 2.1 GA 版。相比 2.0 版本，该版本对系统稳定性、性能、兼容性、易用性做了大量改进。</description>
    </item>
    
    <item>
      <title>TiDB 2.1：Battle-Tested for an Unpredictable World</title>
      <link>https://pingcap.com/blog-cn/tidb-21-battle-tested-for-an-unpredictable-world/</link>
      <pubDate>Fri, 30 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-21-battle-tested-for-an-unpredictable-world/</guid>
      <description>TiDB 是由 PingCAP 开发的分布式关系型数据库，今天我们很高兴地推出 TiDB 2.1 正式版，提供更丰富的功能、更好的性能以及更高的可靠性。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.81】基于 TiKV 的 Redis 协议兼容层 Titan</title>
      <link>https://pingcap.com/meetup/meetup-81-20181127/</link>
      <pubDate>Tue, 27 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-81-20181127/</guid>
      <description>在 Infra Meeutp No.81 上，来自美图的任勇全老师介绍了美图自研的基于 TiKV 的 Redis 协议兼容层—— Titan 的设计和实现思路。以下是现场视频&amp;amp;文字回顾，enjoy~
  [视频 | Infra Meetup No.81：基于 TiKV 的 Redis 协议兼容层 Titan] (https://www.bilibili.com/video/av37541643)
  PPT 链接
  Titan 是美图基于 TiKV 自主研发的 Redis 协议兼容层，通过将 Redis 丰富的数据类型，映射为 TiKV 中的扁平化的 Key-Value，实现了完整兼容 Redis 协议的分布式存储。
任勇全 | 美图 Titan 创新的应用了浮点数作为下标索引实现了LIST 的插入，通过引入对象 ID，结合 GC 机制，实现了大对象的即时删除。另外，Titan 维护了 GC 和过期列表，通过额外的后台线程实现了数据的删除和主动过期。为了解决数据导入的性能瓶颈，Titan 设计并实现了 ZIPLIST，解决了原始设计 KEY 个数放大严重的问题。最后，任老师简单的介绍了 Titan 是如何实现为多个业务提供虚拟化 Redis 集群的多租户机制的。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.82】数据库统计信息的自动挖掘与维护 &amp; What&#39;s New in TiDB</title>
      <link>https://pingcap.com/meetup/meetup-82-20181127/</link>
      <pubDate>Tue, 27 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-82-20181127/</guid>
      <description>上海社区小伙伴们又相聚啦！在 Infra Meetup No.82 上，我司 TiDB 核心开发工程师韩飞、技术 VP 申砾为大家带来了干货分享，以下是现场视频&amp;amp;文字回顾，enjoy~
数据库统计信息的自动挖掘与维护   [视频 | Infra Meetup No.82：数据库统计信息的自动挖掘与维护] (https://www.bilibili.com/video/av37542113/?p=1)
  PPT 链接
  韩飞老师首先介绍了查询优化器的基本架构与执行流程，并重点介绍了统计信息模块在基于代价的优化（CBO）中的重要作用。在谓词选择率估计（Selectivity Estimation）中，常用的属性独立假设（attribute value independence assumption）在列相关（Column Correlation）的场景下会产生较大误差。
在此次分享上，韩飞老师重点介绍了贝叶斯网络（Bayesian Networks）的解决方案，针对互相依赖的列，使用贝叶斯模型估计依赖关系，并建立多维直方图是一种非常有效的解决方案。另一个影响选择率估计的因素是统计信息的过期问题，根据查询结果的反馈更新直方图信息是一种行之有效的解决方案，但是通常会引入较大误差。通过引入最大熵原则（Max Entropy Principle）可以相对准确的解决直方图更新的问题，这种方法应用在 Informix 商业数据库中。
What&#39;s New in TiDB   [视频 | Infra Meetup No.82：What&#39;s New in TiDB] (https://www.bilibili.com/video/av37542113/?p=2)
  PPT 链接
  申砾老师介绍了 TiDB 2.1 版本的重要 Feature，包括这些 Feature 所解决的问题、背后的原理、达到的效果，特别是 TiDB 在优化器、计算引擎、存储引擎方面的改进，使得 2.1 版本成为更智能、更迅速、更稳定的数据库。接着，申砾老师展示了部分 Benchmark 结果，分别从 OLAP、OLTP 两个场景表明 TiDB 的性能提升。最后介绍了下一步工作的展望，让大家了解 TiDB 的演进方向。</description>
    </item>
    
    <item>
      <title>Weekly update (November 19 ~ November 25, 2018)</title>
      <link>https://pingcap.com/weekly/2018-11-26-tidb-weekly/</link>
      <pubDate>Mon, 26 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-11-26-tidb-weekly/</guid>
      <description>Last week, we landed 46 PRs in the TiDB repository, 2 PRs in the TiSpark repository, and 20 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Weekly update (November 12 ~ November 18, 2018)</title>
      <link>https://pingcap.com/weekly/2018-11-19-tidb-weekly/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-11-19-tidb-weekly/</guid>
      <description>Last week, we landed 54 PRs in the TiDB repository, 3 PRs in the TiSpark repository, and 29 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>How TiKV Uses &#34;Lease Read&#34; to Guarantee High Performances, Strong Consistency and Linearizability</title>
      <link>https://pingcap.com/blog/lease-read/</link>
      <pubDate>Wed, 14 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/lease-read/</guid>
      <description>This post discusses Raft Log Read, &lt;code&gt;ReadIndex&lt;/code&gt; Read, and Lease Read, and why TiKV adopts the Lease Read approach.</description>
    </item>
    
    <item>
      <title>Weekly update (November 05 ~ November 11, 2018)</title>
      <link>https://pingcap.com/weekly/2018-11-12-tidb-weekly/</link>
      <pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-11-12-tidb-weekly/</guid>
      <description>Last week, we landed 54 PRs in the TiDB repository, 3 PRs in the TiSpark repository, and 28 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.80】从实现角度看 Aurora</title>
      <link>https://pingcap.com/meetup/meetup-80-20181112/</link>
      <pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-80-20181112/</guid>
      <description>在Infra Meetup No.80 上，我司 TiDB 核心开发工程师、分布式数据库专家姚维老师为大家分享了 Aurora 相关论文，以下是现场视频&amp;amp;文字回顾，enjoy～
  [视频 | Infra Meetup No.80：从实现角度看 Aurora] (https://www.bilibili.com/video/av37606803)
  PPT 链接
  姚维 | TiDB 核心开发工程师 姚维老师根据论文《Amazon Aurora: Design Considerations for High Throughput Cloud-Native Relational Databases》，从实现的角度分析了 Aurora 属于哪一种数据库，Aurora 的读操作、写操作分别是怎么维持数据一致性的，以及 Aurora 如何通过实现 &amp;ldquo;log is the database&amp;rdquo;，使得它拥有高于 MySQL 几十倍的性能优势，也客观的分析了 Aurora 存在的限制与局限。诚然，Aurora 有其适用的场景，在这个云时代，它作为与 NewSQL 完全不同的思路开拓了一条满足部分云用户需求的道路，但是软件世界里面没有银弹，未来还有很多的挑战需要克服。</description>
    </item>
    
    <item>
      <title>TiDB 开源社区指南（上）</title>
      <link>https://pingcap.com/blog-cn/tidb-community-guide-1/</link>
      <pubDate>Fri, 09 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-community-guide-1/</guid>
      <description>本系列文章旨在帮助社区开发者了解 TiDB 项目的全貌，更好的参与 TiDB 项目开发。上篇会聚焦在社区参与者的角度，描述如何更好的参与 TiDB 项目开发。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.79】小米开源 SQL 优化工具 SOAR 技术内幕</title>
      <link>https://pingcap.com/meetup/meetup-79-20181107/</link>
      <pubDate>Wed, 07 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-79-20181107/</guid>
      <description>在 Infra Meetup No.79 上，来自小米的李鹏翔老师为大家分享了小米开源的智能 SQL 优化工具——SOAR，并进行了现场 Demo 演示，以下是现场视频 &amp;amp; 文字回顾，enjoy~
在过去的几年间，小米互联网业务高速发展，数据库规模也在不断的增长。为了提供稳定、高效的数据库服务，进一步的提高 DBA 工作效率，解放生产力，小米 DBA 基于 Go 语言自主研发了智能 SQL 优化改写工具 SOAR。该工具在内部使用期间效果显著，小米运维部决定将其开源，为开源数据库生态助力。 在 10 月 20 日的开源先锋日（OSCAR）上，小米正式宣布开源自研的 SOAR（SQL Optimizer And Rewriter），开源后两周时间 GitHub 上的 Star 数便超过了 2700。
  [视频 | Infra Meetup No.79：小米开源 SQL 优化工具 SOAR 技术内幕] (https://www.bilibili.com/video/av37851944)
  PPT 链接
  **SOAR 是一款智能 SQL 优化和改写工具，开发人员可以直接通过 SOAR 快速的对自己的 SQL 进行质量检查，生成评估报告，防止将问题 SQL 带到线上从而导致服务质量下降。**它不仅能够尽可能地提高线上代码质量，还能避免一些由于人为疏漏而带来的隐患。
李鹏翔 | 小米 在本期 Meetup 上，李鹏翔老师主要介绍了 SOAR 的基本使用场景和使用方式，介绍了在不同操作系统下如何快速上手 SOAR，并讲解了 SOAR 的常用配置，在现场 Demo 过程中对一些常见问题进行了解答。</description>
    </item>
    
    <item>
      <title>Weekly update (October 29 ~ November 04, 2018)</title>
      <link>https://pingcap.com/weekly/2018-11-05-tidb-weekly/</link>
      <pubDate>Mon, 05 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-11-05-tidb-weekly/</guid>
      <description>Last week, we landed 49 PRs in the TiDB repository, 5 PRs in the TiSpark repository, and 5 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB: Architecture and Use Cases of A Cloud-Native NewSQL Database</title>
      <link>https://pingcap.com/blog/architecture-and-use-cases-of-a-cloud-native-newsql-database/</link>
      <pubDate>Fri, 02 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/architecture-and-use-cases-of-a-cloud-native-newsql-database/</guid>
      <description>This post provides a macro-level overview of TiDB and is the main reference content for readers to orient and dig deeper into other TiDB subjects.</description>
    </item>
    
    <item>
      <title>Announcing TiDB Cloud, Managed as a Service and in the Marketplace</title>
      <link>https://pingcap.com/blog/announcing-tidb-cloud-managed-as-a-service-and-in-the-marketplace/</link>
      <pubDate>Thu, 01 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/announcing-tidb-cloud-managed-as-a-service-and-in-the-marketplace/</guid>
      <description>This post announces that TiDB Cloud is now available for public preview.</description>
    </item>
    
    <item>
      <title>PingCAP University · TiDB DBA 官方培训认证计划启动</title>
      <link>https://pingcap.com/blog-cn/pingcap-university-tidb-dba-plan/</link>
      <pubDate>Tue, 30 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/pingcap-university-tidb-dba-plan/</guid>
      <description>PingCAP University 正式启动 TiDB DBA 官方培训认证计划。通过该计划，大家可以深度理解 TiDB 架构、原理及最佳实践，具备独立部署、运维和调优 TiDB 的能力；提升分布式计算和存储领域的技术前沿视野；获得来自 PingCAP 官方的认可，提升个人技术竞争力。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.78】Bigdata@Bilibili &amp; Chaos Practice in TiDB</title>
      <link>https://pingcap.com/meetup/meetup-78-20181030/</link>
      <pubDate>Tue, 30 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-78-20181030/</guid>
      <description>上周六在上海举办的 Infra Meetup No.78 上，B 站数据平台技术经理薛赵明老师和我司首架唐刘老师带来了精彩分享，以下是视频&amp;amp;文字回顾～
《B 站大数据建设实践》   视频 | Infra Meetup No.78 - 薛赵明 - B 站大数据建设实践
  PPT 下载链接
  本次分享薛赵明老师主要介绍了 B 站在大数据建设方面的历程及不同时期做的选择和其中犯的错误。主要涉及我们在存储、调度、计算、分布式队列方面的一些技术选型。
我们在离线存储上采用的还是社区的 HDFS，大数据的 KV 存储上我们尝试了 HBase、ES 等组件，同时对于业务属性分为了 online 和 offline 集群。在随着集群规模的扩大上， namenode 也遇到了不少的挑战，例如内存过大，队列过长、存储空间等方面。
调度层选择的 YARN，不过基于该组件我们在外围做了一些保障性的工作，例如队列资源的利用率，自动调整分配，作业执行成功率，提交成功率等。
薛赵明，Bilibili（哔哩哔哩）数据平台技术经理 计算层区分了批量计算（Hive,MR,Spark）、流式计算（Flink,Spark streaming）、ad-hoc（Presto）、OLAP（Kylin）。平台层提供计算方式，业务方自己选择符合合适的计算场景。
消息队列上采用的是 kafka，在 0.10.1.1 这个版本上我们遇见了不少问题，例如 conusmer log skew, produce block , multiple Kafka controllers等。经过近两年的使用，最近计划迁移到最新的 2.0 版本。
上层服务上，基于我们的大数据套件，针对不同的用户，我开发了相应的大数据工具和数据产品，例如开发 IDE，报表工具，监控系统,数据交换工具等等。
《Chaos Practice in TiDB》   视频 | Infra Meetup No.</description>
    </item>
    
    <item>
      <title>Weekly update (October 22 ~ October 28, 2018)</title>
      <link>https://pingcap.com/weekly/2018-10-29-tidb-weekly/</link>
      <pubDate>Mon, 29 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-10-29-tidb-weekly/</guid>
      <description>Last week, we landed 52 PRs in the TiDB repository and 31 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（二十）Table Partition</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-20/</link>
      <pubDate>Fri, 26 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-20/</guid>
      <description>本篇文章主要介绍 Table Partition 在 TiDB 中的实现。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.76】列式存储如何进行在线更新</title>
      <link>https://pingcap.com/meetup/meetup-76-20181023/</link>
      <pubDate>Tue, 23 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-76-20181023/</guid>
      <description>视频 | Infra Meetup No.76 - 韦万 - 列式存储如何进行在线更新 PPT 链接  时隔一月，我们又与广州的社区小伙伴们相聚啦～这次是由我司数据库核心研发工程师韦万老师带来的《列式存储如何进行在线更新》主题分享。他首先介绍了 OLAP 场景与 OLTP 的区别，以及为何列式数据库特别适合 OLAP 场景，并介绍了主流的对 OLAP 进行优化的技术。
韦万 | 数据库核心研发工程师 然后进入主题，韦万老师分别列举了目前流行的几种列式数据库的更新方案，包括 SQL Server, Vertica, Kudu 以及 VectorWise， 并分析了它们的优缺点。最后介绍了同学们比较关注的部分，即 TiDB 作为一款 HTAP（Hybrid Transactional/Analytical Processing）数据库，当前的架构以及最新进展（视频中剧透了“神秘武器”——TheFlash）。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.77】我司成都分舵第一次 Meetup</title>
      <link>https://pingcap.com/meetup/meetup-77-20181023/</link>
      <pubDate>Tue, 23 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-77-20181023/</guid>
      <description>此次成都 Infra Meetup，恰逢我司成都 Office 正式成立，驻成都的所有 PingCAPer 及 Contributor，与到场小伙伴一起让这首场成都 Infra Meetup 充满了庆祝的热烈气氛：一场成都 TiDB 社区小伙伴的线下见面会开始了。
崔秋，我司联合创始人 在我司联合创始人崔秋做了感谢社区的开场白后，我司技术副总裁申砾老师带来《Deep Dive Into TiDB SQL Layer》的分享，他首先为大家介绍了 TiDB 的整体架构，重点分享了 SQL 层的架构和核心组件，包括 Query Optimizer 和 Execution Engine，并举例说明了其中的实现细节。最后申老师简要介绍了 TiDB 的 Roadmap，鼓励大家通过各种方式参与 TiDB 开源社区里来。（欢迎捞 issue 提 PR 成为 TiDB Contributor，我们会有神秘小礼物相送哦～）
 视频 | 申砾-Deep Dive Into TiDB SQL Layer PPT 下载链接  申砾，我司技术副总裁 茶歇时间，大家三三两两聚在一起讨论，现场 PingCAPer 很耐心的一一回答大家关于 TiDB 技术细节的问题，现场讨论氛围非常热烈。
茶歇过后，马上消费金融 NewSQL 负责人李银龙老师为大家分享了 TiDB 实践经验。
 视频 | Infra Meetup No.77 - 李银龙 - 马上消费金融 TiDB 实践分享  李银龙，马上消费金融 NewSQL 负责人 李老师首先介绍了马上消费金融上一代数据库解决方案的核心痛点，然后介绍了对 NewSQL 产品的需求要点，以及一些 NewSQL 产品的对比选型，并深入的分享了 TiDB 解决方案体系的细节和最佳实践经验。最后，李老师表达了对 TiDB 云化方案和类 Redis 分布式方案的期待。</description>
    </item>
    
    <item>
      <title>Weekly update (October 15 ~ October 21, 2018)</title>
      <link>https://pingcap.com/weekly/2018-10-22-tidb-weekly/</link>
      <pubDate>Mon, 22 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-10-22-tidb-weekly/</guid>
      <description>Last week, we landed 60 PRs in the TiDB repository, 2 PRs in the TiSpark repository, and 16 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Always Fun, Always On: How TiDB Helps iQiyi Deliver Streaming Videos</title>
      <link>https://pingcap.com/success-stories/tidb-in-iqiyi/</link>
      <pubDate>Thu, 18 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/success-stories/tidb-in-iqiyi/</guid>
      <description>As our business grew exponentially, we were overwhelmed trying to handle the mounting data until we found TiDB, a MySQL-compatible NewSQL hybrid transactional and analytical processing (HTAP) database, built and supported by PingCAP. Now we no longer worry about data volume and can bring high-quality entertainment services to our users with more confidence than before.</description>
    </item>
    
    <item>
      <title>线性一致性和 Raft</title>
      <link>https://pingcap.com/blog-cn/linearizability-and-raft/</link>
      <pubDate>Thu, 18 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/linearizability-and-raft/</guid>
      <description>本篇文章会讨论一下线性一致性和 Raft，以及 TiKV 针对前者的一些优化。</description>
    </item>
    
    <item>
      <title>Launching TiDB Academy, First Course-“Distributed Database with TiDB for MySQL DBAs”</title>
      <link>https://pingcap.com/blog/tidb-academy-announce/</link>
      <pubDate>Tue, 16 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/tidb-academy-announce/</guid>
      <description>Today, we are excited to launch TiDB Academy, a series of technical training courses and certifications on TiDB and distributed databases in general, taught by our senior technical team.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.75】这次我们聊了聊 Google F1 的最新论文</title>
      <link>https://pingcap.com/meetup/meetup-75-20181016/</link>
      <pubDate>Tue, 16 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-75-20181016/</guid>
      <description>上周六我们在「新根据地」举办了第 75 期 Infra Meetup，由于是在新办公室举行的第一场 Meetup，到场的小伙伴都收到了特别福利——社区 T 恤一件～很多小伙伴还好奇参观了一圈我们的工作环境。“你们公司为什么要这么大的会议室啊？” ——要为定期举办的社区交流活动准备空间呀～不过照本期火爆程度，这个空间恐怕不久就不够用了 haha
言归正传，在本期 Meetup 上，我司 CTO 黄东旭从最新的论文出发，结合 Google F1 团队在今年 VLDB 上的演讲内容，为大家分享了 F1 Query 的架构原理。以下是文字 &amp;amp; 视频回顾，enjoy~ 视频回顾  视频 | Infra Meetup No.75 - F1 Query: Declarative Querying at Scale PPT 链接  Google 在今年的 VLDB 上发布了 F1 的新进展（《F1 Query: Declarative Querying at Scale》），距离 Google 的上一篇 F1 论文已经过去 5 年了。2013 年论文《F1: A Distributed SQL Database That Scales》中的 F1 是基于 Spanner 的，主要提供 OLTP 服务，而新的 F1 的定位则是大一统：旨在处理 OLTP/OLAP/ETL 等多种不同的 workload。</description>
    </item>
    
    <item>
      <title>Weekly update (September 24 ~ October 14, 2018)</title>
      <link>https://pingcap.com/weekly/2018-10-15-tidb-weekly/</link>
      <pubDate>Mon, 15 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-10-15-tidb-weekly/</guid>
      <description>Last three weeks, we landed 74 PRs in the TiDB repository, 4 PRs in the TiSpark repository, and 42 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiKV 是如何存取数据的</title>
      <link>https://pingcap.com/blog-cn/how-tikv-store-get-data/</link>
      <pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/how-tikv-store-get-data/</guid>
      <description>本文会详细的介绍 TiKV 是如何处理读写请求的。通过该文档，同学们会知道 TiKV 是如何将一个写请求包含的数据更改存储到系统，并且能读出对应的数据的。</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（十九）tikv-client（下）</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-19/</link>
      <pubDate>Wed, 26 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-19/</guid>
      <description>本文将继续介绍 tikv-client 里的两个主要的模块——负责处理分布式计算的 copIterator 和执行二阶段提交的 twoPhaseCommitter。</description>
    </item>
    
    <item>
      <title>Weekly update (September 17 ~ September 23, 2018)</title>
      <link>https://pingcap.com/weekly/2018-09-25-tidb-weekly/</link>
      <pubDate>Tue, 25 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-09-25-tidb-weekly/</guid>
      <description>Last week, we landed 29 PRs in the TiDB repository and 14 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiKV 集群版本的安全迁移</title>
      <link>https://pingcap.com/blog-cn/tikv-cluster-migration/</link>
      <pubDate>Wed, 19 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-cluster-migration/</guid>
      <description>本文会详细介绍 TiKV 集群版本迁移的实现步骤，enjoy～</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.74】TitanDB 首次公开分享</title>
      <link>https://pingcap.com/meetup/meetup-74-20180919/</link>
      <pubDate>Wed, 19 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-74-20180919/</guid>
      <description>上周六在广州举办的 Infra Meetup No.74 上，我司 TiKV 核心开发工程师黄华超老师为大家介绍了我们自研的 TitanDB——**TitanDB 是基于 RocksDB 做的 key-value 分离的实现，主要解决大 value 写放大严重的问题。这次 Meetup 是 TitanDB 第一次公开分享。**现场的小伙伴从 TiDB 的架构开始，由浅入深，最后对 TiKV、TitanDB 的架构都有了深入的了解，分享结束后的自由讨论依然非常热烈～ 以下是视频 &amp;amp; 文字回顾，enjoy～
 视频 | Infra Meetup No.74 - 黄华超 - TitanDB PPT 下载链接  华超老师先给大家讲解了 TiDB 和 TiKV 各自的架构，以及 TiDB 和 TiKV 的读写交互流程，并且解答了大家的一些问题。然后集中介绍了 TiKV 存储相关内容，包括 TiKV 是如何使用 RocksDB 的，使用过程中遇到的一些问题以及写放大的计算和如何在读写之间做权衡。最后介绍了 KV 分离的概念以及 Badger 和 TitanDB 的实现和优化。
TitanDB 是基于 RocksDB 做的 key-value 分离的实现，主要解决大 value 写放大严重的问题。TitanDB 通过把大的 value 从 LSM-Tree 中分离出来，减少 LSM-Tree 的写放大，但是会对读的性能造成一些影响，实际使用中需要根据业务情况选择把多大的 value 分离出来。TitanDB 可以说是给读写放大以及空间放大之间的权衡提供另外一种选择。</description>
    </item>
    
    <item>
      <title>Weekly update (September 10 ~ September 16, 2018)</title>
      <link>https://pingcap.com/weekly/2018-09-17-tidb-weekly/</link>
      <pubDate>Mon, 17 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-09-17-tidb-weekly/</guid>
      <description>Last week, we landed 35 PRs in the TiDB repository, 1 PR in the TiSpark repository, and 28 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>PingCAP Raises $50 Million in Series C Round, Sets Eyes on Global Expansion, Cross-Cloud Offering, and More Core Technology Investment</title>
      <link>https://pingcap.com/blog/series-c-announcement/</link>
      <pubDate>Tue, 11 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/series-c-announcement/</guid>
      <description>PingCAP, a leading distributed database company that created the popular cloud-native NewSQL database TiDB, announces a $50 million Series C funding round led by FOSUN and Morningside Venture Capital. All previous investors—China Growth Capital, Yunqi Partners, Matrix Partners China, and others—have also participated in this round. PingCAP plans to use this new capital to expand the TiDB ecosystem globally, build cross-cloud product offering, and invest in innovation of its core technology.</description>
    </item>
    
    <item>
      <title>Weekly update (September 03 ~ September 09, 2018)</title>
      <link>https://pingcap.com/weekly/2018-09-10-tidb-weekly/</link>
      <pubDate>Mon, 10 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-09-10-tidb-weekly/</guid>
      <description>Last week, we landed 39 PRs in the TiDB repository, 10 PRs in the TiSpark repository, and 50 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>使用 TiKV 构建分布式类 Redis 服务</title>
      <link>https://pingcap.com/blog-cn/use-tikv-to-build-distributed-redis-service/</link>
      <pubDate>Fri, 07 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/use-tikv-to-build-distributed-redis-service/</guid>
      <description>本文将介绍 Redis 的特性与不足，以及使用 TiKV 构建分布式类 Redis 服务的</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（十八）tikv-client（上）</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-18/</link>
      <pubDate>Thu, 06 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-18/</guid>
      <description>本文会详细介绍数据读写过程中 tikv-client 需要解决的几个具体问题，enjoy～</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.73】TiKV 原理剖析</title>
      <link>https://pingcap.com/meetup/meetup-73-20180905/</link>
      <pubDate>Wed, 05 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-73-20180905/</guid>
      <description>在上周六举办的 Infra Meetup No.73 上，我司 TiKV 核心开发工程师张金鹏老师分享了 TiKV 的原理与正在开发的新功能，整整讲满了 100 分钟～这可能是近期关于 TiKV 最深入的一次分享交流了吧~haha），结束后现场的小伙伴三五成群，意犹未尽地聚在一起讨论交流，钻研精神可嘉！以下是现场视频&amp;amp;文字回顾，enjoy～
 视频 | Infra Meetup No.74 - 张金鹏 - TiKV 原理剖析 PPT 下载链接  金鹏老师首先介绍了 TiKV 中的几个概念，包括 Region、Peer 和 ts，其中 Region 代表一段连续的数据，Peer 是 Region 的一个副本，ts 表示时间戳。然后从宏观的角度分析了数据在 TiKV 之间是如何分布的，以及如何进行 balance，并介绍了 TiKV 的分层结构，分析了读和写请求在 TiKV 内部的各个层之间是怎样流转的。
接着，他重点介绍了 TiKV 的几个核心组件，包括 Multi-raft、RocksDB、分布式事务、Coprocessor、GC 和调度。其中 Multi-raft 涉及到 region 的 split 和 merge，以及 leader lease、pre-vote、learner 等概念；RocksDB 相关的内容包括 column family、delete files in range、ingest sst files、多线程 compaction、sub-compaction 等。（课代表温馨提示：金鹏老师对这些概念的讲解非常细致深入，也耐心解答了现场小伙伴的提问， 对这些名词不太熟悉的朋友赶紧点开视频跳到相关章节观看吧！）</description>
    </item>
    
    <item>
      <title>Weekly update (August 27 ~ September 02, 2018)</title>
      <link>https://pingcap.com/weekly/2018-09-03-tidb-weekly/</link>
      <pubDate>Mon, 03 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-09-03-tidb-weekly/</guid>
      <description>Last week, we landed 45 PRs in the TiDB repository, 2 PRs in the TiSpark repository, and 30 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB Reaches the 200 Contributors Milestone</title>
      <link>https://pingcap.com/blog/tidb-community-200-contributors/</link>
      <pubDate>Thu, 30 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/tidb-community-200-contributors/</guid>
      <description>TiDB recently added its 200th contributor. As CEO and co-founder of PingCAP who began building TiDB three years ago, I would like to thank the entire TiDB community for helping us reach this important milestone!</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（十七）DDL 源码解析</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-17/</link>
      <pubDate>Mon, 27 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-17/</guid>
      <description>本文首先会介绍 TiDB DDL 组件的总体设计，以及如何在分布式场景下支持无锁 schema 变更，并描述这套算法的大致流程，然后详细介绍一些常见的 DDL 语句的源码实现。Enjoy～</description>
    </item>
    
    <item>
      <title>Weekly update (August 20 ~ August 26, 2018)</title>
      <link>https://pingcap.com/weekly/2018-08-27-tidb-weekly/</link>
      <pubDate>Mon, 27 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-08-27-tidb-weekly/</guid>
      <description>Last week, we landed 34 PRs in the TiDB repository, 3 PRs in the TiSpark repository, and 27 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB Operator，让 TiDB 成为真正的 Cloud-Native 数据库</title>
      <link>https://pingcap.com/blog-cn/tidb-operator-introduction/</link>
      <pubDate>Wed, 22 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-operator-introduction/</guid>
      <description>TiDB Operator 已经正式开源，本文将详细介绍 TiDB Operator 开源的细节，希望大家深入了解这个新的开源项目之后，能够速来贡献代码、成为 Contributor！Enjoy～</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.72】TiDB Operator，让 TiDB 成为真正的 Cloud-Native 数据库</title>
      <link>https://pingcap.com/meetup/meetup-72-20180820/</link>
      <pubDate>Wed, 22 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-72-20180820/</guid>
      <description>TiDB Operator 是 TiDB 在 Kubernetes 平台上的自动化部署运维工具，目前已经开源。在上周六举办的 Infra Meetup 第 72 期上，我司邓栓老师为大家分享了 TiDB Operator 开源的细节，并演示了单机快速体验 TiDB Operator 的操作。 以下是邓栓老师撰写的技术详解文章和 Meetup 现场视频。希望大家通过文字和视频深入了解 TiDB Operator 之后，可以速来贡献代码、成为 Contributor ！( ´▽｀)  TiDB Operator 是 TiDB 在 Kubernetes 平台上的自动化部署运维工具。目前，TiDB Operator 已正式开源（pingcap/tidb-operator）。借助 TiDB Operator，TiDB 可以无缝运行在公有云厂商提供的 Kubernetes 平台上，让 TiDB 成为真正的 Cloud-Native 数据库。
要了解 TiDB Operator，首先需要对 TiDB 和 Kubernetes 有一定了解，相信长期以来一直关注 TiDB 的同学可能对 TiDB 已经比较熟悉了。本文将首先简单介绍一下 TiDB 和 Kubernetes，聊一聊为什么我们要做 TiDB Operator，然后讲讲如何快速体验 TiDB Operator，以及如何参与到 TiDB Operator 项目中来成为 Contributor。
TiDB 和 Kubernetes 简介 TiDB 作为一个开源的分布式数据库产品，具有多副本强一致性的同时能够根据业务需求非常方便的进行弹性伸缩，并且扩缩容期间对上层业务无感知。TiDB 包括三大核心组件：TiDB/TiKV/PD。   TiDB Server：主要负责 SQL 的解析器和优化器，它相当于计算执行层，同时也负责客户端接入和交互。</description>
    </item>
    
    <item>
      <title>Weekly update (August 13 ~ August 19, 2018)</title>
      <link>https://pingcap.com/weekly/2018-08-20-tidb-weekly/</link>
      <pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-08-20-tidb-weekly/</guid>
      <description>Last week, we landed 46 PRs in the TiDB repository, 2 PRs in the TiSpark repository, and 48 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>9 Why&#39;s to Ask When Evaluating a Distributed Database</title>
      <link>https://pingcap.com/blog/9-whys-to-ask-when-evaluating-a-distributed-database/</link>
      <pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/9-whys-to-ask-when-evaluating-a-distributed-database/</guid>
      <description>Since PingCAP started building TiDB, it has encountered countless challenges, pitfalls, and critical design choices. Over the past three years, the PingCAP team has answered many questions from the users. Ed Huang, the CTO of PingCAP, has summarized these questions into “9 why’s” that every engineer may ask when looking at a distributed database and gives his answers to these questions in this post to help make decision-making of engineers a bit easier.</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（十六）INSERT 语句详解</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-16/</link>
      <pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-16/</guid>
      <description>本文将首先介绍在 TiDB 中的 INSERT 语句的分类，以及各语句的语法和语义，然后分别介绍五种 INSERT 语句的源码实现，enjoy~</description>
    </item>
    
    <item>
      <title>Weekly update (August 06 ~ August 12, 2018)</title>
      <link>https://pingcap.com/weekly/2018-08-13-tidb-weekly/</link>
      <pubDate>Mon, 13 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-08-13-tidb-weekly/</guid>
      <description>Last week, we landed 46 PRs in the TiDB repositories and 27 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Managing the Surging Data Volume of a Fast-Growing Marketplace with TiDB</title>
      <link>https://pingcap.com/success-stories/tidb-in-zhuanzhuan/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/success-stories/tidb-in-zhuanzhuan/</guid>
      <description>With our fast-growing business, the surging data volume posed a serious challenge to our backend system and put the operations team under great pressure. How to tackle these challenges became a thorny problem until we found TiDB, a MySQL compatible distributed hybrid transactional and analytical processing (HTAP) database, built and supported by PingCAP. Finally, we do not have to worry about scaling databases and can focus on building better applications for our users.</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（十五）Sort Merge Join</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-15/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-15/</guid>
      <description>本篇文章主要介绍 Sort Merge Join 在 TiDB 中的实现，enjoy~</description>
    </item>
    
    <item>
      <title>Weekly update (July 30 ~ August 05, 2018)</title>
      <link>https://pingcap.com/weekly/2018-08-06-tidb-weekly/</link>
      <pubDate>Mon, 06 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-08-06-tidb-weekly/</guid>
      <description>Last week, we landed 68 PRs in the TiDB repositories and 30 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Landing Your First Rust Pull Request in TiKV</title>
      <link>https://pingcap.com/blog/adding-built-in-functions-to-tikv/</link>
      <pubDate>Fri, 03 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/adding-built-in-functions-to-tikv/</guid>
      <description>This guide is intended to show how you can land your first Pull Request (PR) in Rust to contribute to TiKV in less than 30 minutes. But before we do that, here’s some helpful background.</description>
    </item>
    
    <item>
      <title>三十分钟成为 Contributor | 为 TiKV 添加 built-in 函数</title>
      <link>https://pingcap.com/blog-cn/30mins-become-contributor-of-tikv/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/30mins-become-contributor-of-tikv/</guid>
      <description>手把手教你如何在三十分钟内成为 TiKV 项目的 Contributor。</description>
    </item>
    
    <item>
      <title>Weekly update (July 23 ~ July 29, 2018)</title>
      <link>https://pingcap.com/weekly/2018-07-30-tidb-weekly/</link>
      <pubDate>Mon, 30 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-07-30-tidb-weekly/</guid>
      <description>Last week, we landed 43 PRs in the TiDB repositories, 6 PRs in the TiSpark repositories, and 17 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Weekly update (July 16 ~ July 22, 2018)</title>
      <link>https://pingcap.com/weekly/2018-07-23-tidb-weekly/</link>
      <pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-07-23-tidb-weekly/</guid>
      <description>Last week, we landed 41 PRs in the TiDB repositories, 2 PRs in the TiSpark repositories, and 23 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（十四）统计信息（下）</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-14/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-14/</guid>
      <description>本篇文章将介绍直方图和 Count-Min(CM) Sketch 的数据结构，然后介绍 TiDB 是如何实现统计信息的查询、收集以及更新的。</description>
    </item>
    
    <item>
      <title>Weekly update (July 09 ~ July 15, 2018)</title>
      <link>https://pingcap.com/weekly/2018-07-16-tidb-weekly/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-07-16-tidb-weekly/</guid>
      <description>Last week, we landed 30 PRs in the TiDB repositories and 19 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（十三）索引范围计算简介</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-13/</link>
      <pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-13/</guid>
      <description>本文将详细介绍 TiDB 是如何分析复杂的筛选条件，来得到这些条件在对应的索引上的逻辑区间范围（range）。</description>
    </item>
    
    <item>
      <title>TiSpark: More Data Insights, Less ETL</title>
      <link>https://pingcap.com/blog/tispark-more-data-insights-no-more-etl/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/tispark-more-data-insights-no-more-etl/</guid>
      <description>The motivation behind building TiSpark was to enable real-time analytics on TiDB without the delay and challenges of ETL. Extract, transform, and load (ETL)&amp;ndash;a process to extract data from operational databases, transform that data, then load it into a database designed to supporting analytics&amp;ndash;has been one of the most complex, tedious, error-prone, and therefore disliked tasks for many data engineers. However, it was a necessary evil to make data useful, because there hasn’t been good solutions on the market to render ETL obsolete&amp;ndash;until now.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.71】TiDB 2.1 新特性与未来规划</title>
      <link>https://pingcap.com/meetup/meetup-71-20180710/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-71-20180710/</guid>
      <description>在上周六举办的 Infra Meetup No.71 上，我司申砾老师重点介绍了 TiDB 2.1 Beta 版本在 Raft / PD / SQL 执行引擎等方面的新特性以及未来的规划（中间穿插着我司 CTO 的各种「插播新闻」😂）。当天虽然下着小雨，但丝毫没有影响大家的热情，活动结束后还有不少童鞋留下来讨论哦～以下是现场视频&amp;amp;文字回顾，enjoy ！
视频回顾 视频 | Infra Meetup No.72：TiDB 2.1 新特性与未来规划
可下载 完整 PPT 配合观看
干货节选 TiDB 2.0 版本于今年 4 月底发布，经过两个月的开发，2.1-Beta 版本于 6 月底发布。这个版本在 2.0 的基础之上做了不少改进。
在 Raft 方面，2.1 最大的变化是引入了 Learner 和 PreVote 两个特性。其中 Learner 可以加强调度过程中的数据安全性，并且为将来 OLAP 请求读 Learner 副本打下基础；PreVote 可以增强系统的稳定性，降低诸如网络隔离后节点重新加入造成的系统抖动。
在 PD 方面，2.1 优化了热点调度功能，收集更详细更准确的集群负载信息，并做更合理的调度在 SQL 优化器方面对 CBO 框架做了进一步改进，提升代价估算准确度。
在 SQL 执行引擎方面，将 Hash 聚合算子以及 Projection 算子做了并行化，提升大数据量下查询的性能。同时我们也在探索 OLTP 场景下的性能提升方案，预计到 2.</description>
    </item>
    
    <item>
      <title>Weekly update (July 02 ~ July 08, 2018)</title>
      <link>https://pingcap.com/weekly/2018-07-09-tidb-weekly/</link>
      <pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-07-09-tidb-weekly/</guid>
      <description>Last week, we landed 34 PRs in the TiDB repositories, 5 PRs in the TiSpark repositories, and 26 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（十二）统计信息(上)</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-12/</link>
      <pubDate>Thu, 05 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-12/</guid>
      <description>本篇文章将介绍统计信息基本概念、TiDB 的统计信息收集/更新机制以及如何用统计信息来估计算子代价。上篇侧重于介绍原理，下篇会结合原理介绍 TiDB 的源码实现。</description>
    </item>
    
    <item>
      <title>Weekly update (June 25 ~ July 01, 2018)</title>
      <link>https://pingcap.com/weekly/2018-07-02-tidb-weekly/</link>
      <pubDate>Mon, 02 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-07-02-tidb-weekly/</guid>
      <description>Last week, we landed 39 PRs in the TiDB repositories and 25 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（十一）Index Lookup Join</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-11/</link>
      <pubDate>Wed, 27 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-11/</guid>
      <description>前两篇文章中介绍了 Chunk 和 Hash Join，本篇将继续介绍 TiDB 中 Index Lookup Join 具体实现方法和执行流程。Enjoy～</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.70】Paper Party：CEO 解读 TiDB 下一代存储引擎</title>
      <link>https://pingcap.com/meetup/meetup-70-20180626/</link>
      <pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-70-20180626/</guid>
      <description>上周六举办的 Infra Meetup No.70，我们换了一个开阔些的场地——嗯，没看错，是我司的一间办公室，然而掏空了房间里的椅子沙发，还是不够坐。
爆满的原因当然是我司 CEO 刘奇的**「重磅分享」**：刘奇分享了受威斯康辛的论文启发的 TiDB 下一代存储引擎的设计考量及实践，以及**「关门福利」**——非常强悍的测试结果，以下是现场视频 &amp;amp; 文字回顾，enjoy！
视频回顾 视频 | Infra Meetup No.70：CEO 解读 TiDB 下一代存储引擎
论文 slides 链接
我司 CEO 刘奇首先为大家介绍了新的磁盘进化发展趋势，如何做软硬件协同设计，以及硬件的发展对数据库系统架构的影响。
干货节选 存储引擎是数据库的核心组件之一，目前 TiDB 使用 LSM-Tree 作为底层的存储引擎，其良好的顺序写入特性得到了很大的发挥。然而 LSM-Tree 模型本身也不是尽善尽美，其中较为突出的缺点是写放大比较严重。该问题也吸引了不少学者的研究，也有不少改进论文出现。来自威斯康辛的论文 WiscKey: Separating Keys from Values in SSD-conscious Storage 是其中的典型代表。
刘奇 | PingCAP CEO 刘奇接着介绍了新一代存储引擎利用新的硬件特性的方式（比如充分发挥 SSD/NVMe/Optane 的多通道写入对存储引擎的提升），并解读了威斯康辛的论文在这方面的实践——利用多通道的并行能力来弥补 Key-Value 分离带来的开销。这个方法实现简单，效果极佳。TiDB 的新一代存储模型也受到这篇论文的启发。
最后，刘奇分享了 PingCAP 在这方面的思考与实践，以及对下一代存储引擎设计的具体考量，并展示了正在研发的 TiDB 下一代存储引擎的强悍实测性能。测试结果显示，相比当前的版本，系统整体性能提升了 2-10 倍。</description>
    </item>
    
    <item>
      <title>Weekly update (June 18 ~ June 24, 2018)</title>
      <link>https://pingcap.com/weekly/2018-06-25-tidb-weekly/</link>
      <pubDate>Mon, 25 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-06-25-tidb-weekly/</guid>
      <description>Last week, we landed 18 PRs in the TiDB repositories, 5 PRs in the TiSpark repositories, and 19 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB 混沌工程实践：如何打造健壮的分布式系统？</title>
      <link>https://pingcap.com/blog-cn/tidb-chaos-engineering/</link>
      <pubDate>Tue, 19 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-chaos-engineering/</guid>
      <description>本文分享了 TiDB 应用混沌工程的方法，介绍基于 K8s 自研的自动化测试平台 Schrodinger，并通过实际例子说明如何在 Schrodinger 里应用混沌来测试系统。</description>
    </item>
    
    <item>
      <title>Weekly update (June 11 ~ June 17, 2018)</title>
      <link>https://pingcap.com/weekly/2018-06-19-tidb-weekly/</link>
      <pubDate>Tue, 19 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-06-19-tidb-weekly/</guid>
      <description>Last week, we landed 26 PRs in the TiDB repositories and 28 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>十问 TiDB ：关于架构设计的一些思考</title>
      <link>https://pingcap.com/blog-cn/10-questions-tidb-structure/</link>
      <pubDate>Tue, 19 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/10-questions-tidb-structure/</guid>
      <description>这篇文章是关于 TiDB 代表性“为什么”的 TOP 10，希望大家在了解了我们这些背后的选择之后，能更加纯熟的使用 TiDB，让它在适合的环境里更好的发挥价值。</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（十）Chunk 和执行框架简介</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-10/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-10/</guid>
      <description>本文详细介绍了在 TiDB 2.0 中引入的 Chunk 及执行框架，enjoy～</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.69】CASPaxos，一个有趣的 RSM 算法</title>
      <link>https://pingcap.com/meetup/meetup-69-20180612/</link>
      <pubDate>Tue, 12 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-69-20180612/</guid>
      <description>上周六，Infra Meetup 时隔一个月终于回归北京大本营，北京的朋友们格外热情，会议室最后都挤不下啦 ～现场有几位朋友拿着提前打印的论文认真地记笔记，分享结束后大家还围绕 CASPaxos 讨论了很久，瞬间有种“Paper Party”的感觉——看来 Infra Meetup 不定期的论文分享大大激发了社区小伙伴的“学术”之心啊！（不过，全场最大的亮点还是我司 CTO 的“魔性”PPT……）
视频回顾 视频 | Infra Meetup No.69：CASPaxos，一个有趣的 RSM 算法
配合 PPT 观看更佳～
干货节选 本期 Meetup 我司 CTO 黄东旭分享了一篇有趣的论文——CASPaxos: Replicated State Machines without logs。他首先通过一个简单的例子通俗易懂地介绍了经典 Paxos 的算法。随后引入了 RSM（日志复制状态机）的概念 ， 并指出 CASPaxos 其实是在经典 Paxos 的基础上进行了拓展，变成了没有日志的 RSM 。接着，他介绍了 CASPaxos 的主体算法，包括 membership change 算法以及用 CASPaxos 实现一个通用数据库时需要考虑的问题。
来自大神的“魔性” PPT 东旭接着对比了目前常用的 RSM 算法 ，比如 TiDB 中用到的 Raft 算法与 CASPaxos 的区别。相较而言，CASPaxos 目前是一个偏学术性的理论，在工业上应用的完整度和相关优化算法还不够。CASPaxos 的优点在于出现异常时的不可用时间非常短，并且没有额外的日志开销，缺陷是做数据丢失的故障恢复代价比较高，而且读依然是多数派读，对业务上的灵活性会有一些影响。
P.S. 东旭还和现场的朋友们一起针对 CASPaxos 的缺点，大开脑洞，畅聊了一些可能的优化方法 。现场越聊越嗨，不得不说大家想法都很“清奇”啊 ( ´▽｀) 。</description>
    </item>
    
    <item>
      <title>Weekly update (June 04 ~ June 10, 2018)</title>
      <link>https://pingcap.com/weekly/2018-06-11-tidb-weekly/</link>
      <pubDate>Mon, 11 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-06-11-tidb-weekly/</guid>
      <description>Last week, we landed 50 PRs in the TiDB repositories, 2 PRs in the TiSpark repositories, and 20 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>How To Spin Up an HTAP Database in 5 Minutes with TiDB &#43; TiSpark</title>
      <link>https://pingcap.com/blog/how_to_spin_up_an_htap_database_in_5_minutes_with_tidb_tispark/</link>
      <pubDate>Fri, 08 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/how_to_spin_up_an_htap_database_in_5_minutes_with_tidb_tispark/</guid>
      <description>In this 5-minute tutorial for beginners, we will show you how to spin up a standard TiDB cluster using Docker Compose on your local computer, so you can get a taste of its hybrid power, before using it for work or your own project in production.</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（九）Hash Join</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-9/</link>
      <pubDate>Wed, 06 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-9/</guid>
      <description>本文是 TiDB 源码阅读系列文章的第九篇。内文详细介绍了 TiDB Hash Join 的实现以及几种常见的问题，enjoy～</description>
    </item>
    
    <item>
      <title>Weekly update (May 28 ~ June 03, 2018)</title>
      <link>https://pingcap.com/weekly/2018-06-04-tidb-weekly/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-06-04-tidb-weekly/</guid>
      <description>Last week, we landed 50 PRs in the TiDB repositories, 2 PRs in the TiSpark repositories, and 20 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.68】虚怀迎远客 魔都 Talk 「长」</title>
      <link>https://pingcap.com/meetup/meetup-68-20180531/</link>
      <pubDate>Thu, 31 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-68-20180531/</guid>
      <description>距离去年在上海举办的 TechDay 已经过去了近一年，上海社区小伙伴们积攒已久的热情终于在上周六的 Infra Meetup 现场释放了出来~ 现场爆满不说，Q&amp;amp;A 环节大家都抢着与讲师互动，结束后还有小伙伴意犹未尽，强烈要求多在上海举办这样的技术交流趴（我们会努力的，嗯💪）。以下是现场视频&amp;amp;文字回顾，enjoy！
现场同学坐定之后，我司 CTO 黄东旭简短开场，欢迎 Percona CEO Peter Zaitsev 做客 Infra Meetup No.68 上海站～随后 Peter 带来了 Using MySQL for Distributed Database Architectures 的主题演讲。
Using MySQL for Distributed Database Architectures Percona CEO Peter Zaitsev 视频链接：1st Talk by Peter Zaitsev
Peter 首先介绍了 MySQL 最近几个版本迭代的性能升级数据。他认为 MySQL 单机性能提升很大，但是与分布式数据库在应用场景上仍有较大的区别，很多问题是单机解决不了的。从而引出了基于 MySQL 做分布式尝试的方法论，并从高可用、扩展性、数据分布策略几个方面进行了详细解读。随后分享了在 MySQL 上实现分布式计算和分布式系统的方法。
Peter 提到不同业务对数据库的需求不一样，对隔离级别和一致性的要求也不一样, 需要仔细思考相关配置。他重点介绍了 Percona 数据库管理工具和集群方案，同时分享了对市面上常见的基于 MySQL 分片的中间件的看法，以及对 TiDB 等 NewSQL 未来发展的期待。
How to build a Self-Driving database PingCAP CTO 黄东旭 视频链接：2nd Talk by Ed Huang</description>
    </item>
    
    <item>
      <title>Weekly update (May 21 ~ May 27, 2018)</title>
      <link>https://pingcap.com/weekly/2018-05-28-tidb-weekly/</link>
      <pubDate>Mon, 28 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-05-28-tidb-weekly/</guid>
      <description>Last week, we landed 44 PRs in the TiDB repositories, 2 PRs in the TiSpark repositories, and 20 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Implement Raft in Rust</title>
      <link>https://pingcap.com/blog/implement-raft-in-rust/</link>
      <pubDate>Tue, 22 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/implement-raft-in-rust/</guid>
      <description>As an open-source distributed scalable HTAP database, TiDB uses the Raft Consensus Algorithm in its distributed transactional key-value storage engine, TiKV, to ensure data consistency, auto-failover, and fault tolerance. TiDB has thus far been used by more than 200 companies in their production environments in a wide range of industries, from e-commerce and food delivery, to fintech, media, gaming, and travel.</description>
    </item>
    
    <item>
      <title>Weekly update (May 14 ~ May 20, 2018)</title>
      <link>https://pingcap.com/weekly/2018-05-21-tidb-weekly/</link>
      <pubDate>Mon, 21 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-05-21-tidb-weekly/</guid>
      <description>Last week, we landed 40 PRs in the TiDB repositories, 4 PRs in the TiSpark repositories, and 35 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Weekly update (May 07 ~ May 13, 2018)</title>
      <link>https://pingcap.com/weekly/2018-05-14-tidb-weekly/</link>
      <pubDate>Mon, 14 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-05-14-tidb-weekly/</guid>
      <description>Last week, we landed 55 PRs in the TiDB repositories and 24 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.67】杭州站</title>
      <link>https://pingcap.com/meetup/meetup-67-20180509/</link>
      <pubDate>Wed, 09 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-67-20180509/</guid>
      <description>上周日 Infra Meetup 首次走进杭州，感谢热情的杭州社区小伙伴们冒雨参加活动～这次活动由我司数据库专家马晓宇老师和资深数据库架构师房晓乐老师为大家带来精彩的分享，还有来自二维火、挖财、蘑菇街的社区小伙伴带来了三个闪电 Talk，分享了他们的 TiDB 实践经验。
马晓宇：TiDB 架构及 2.0 详解 马晓宇 | PingCAP 首先，我司数据库专家马晓宇老师带来《TiDB 架构及 2.0 详解》精彩分享，介绍了 TiDB 的方方面面，包括存储模块 TiKV，调度模块 PD，计算模块 TiDB， OLAP 组件 TiSpark，数据流转 Syncer 和 Binlog 以及 Cloud 集成等等众多组件和独立产品。
TiKV 架构 马晓宇老师更与现场的同学深入探讨了 TiDB 背后的技术细节以及一些重大选择的原因。
例如，从单体 KV 演进到分布式，就不得不思考如何多副本容错，且还需要在多个副本之间达到一致性，这是选择 Raft 协议的根本动机。然而，仅仅是 Raft 并不能满足扩展性的需求，因此又引入了 Raft Group / Region 的分片机制，再加上 PD 模块的调度，让数据和负载均衡得以实现。
在 TiDB 部分，马晓宇老师重点介绍了数据库计算引擎的详细架构，包含模块及其不同作用，详细讲解了用户的 SQL 输入如何被分解分析之后产生执行计划并执行，以及数据在 TiDB 中如何将行数据以及索引编码成 TiKV 所需的键值对等等。
SQL Layer 另外，4 月底 TiDB 2.0 GA 和 TiSpark 1.0 正式发布，马晓宇老师在分享中也提到了 TiDB 和 TiSpark 版本的重大提升：相对 1.</description>
    </item>
    
    <item>
      <title>Weekly update (April 30 ~ May 06, 2018)</title>
      <link>https://pingcap.com/weekly/2018-05-07-tidb-weekly/</link>
      <pubDate>Mon, 07 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-05-07-tidb-weekly/</guid>
      <description>Last week, we landed 24 PRs in the TiDB repositories, 1 PR in the TiSpark repositories, and 15 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（八）基于代价的优化</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-8/</link>
      <pubDate>Fri, 04 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-8/</guid>
      <description>本文是 TiDB 源码阅读系列文章的第八篇。内文会先简单介绍制定查询计划以及优化的过程，然后用较大篇幅详述在得到逻辑计划后的 Cost-Based Optimization（CBO）过程。</description>
    </item>
    
    <item>
      <title>Weekly update (April 23 ~ April 29, 2018)</title>
      <link>https://pingcap.com/weekly/2018-05-02-tidb-weekly/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-05-02-tidb-weekly/</guid>
      <description>Last week, we landed 49 PRs in the TiDB repositories, 18 PRs in the TiSpark repositories, and 21 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB 2.0 is Ready - Faster, Smarter, and Battle-Tested</title>
      <link>https://pingcap.com/blog/tidb-2-0-announcement/</link>
      <pubDate>Sun, 29 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/tidb-2-0-announcement/</guid>
      <description>TiDB 2.0 is released! We absorbed insights and feedbacks from our customers, listened to requests and issues from our community, and reflected internally on our ultimate vision of building a distributed hybrid transactional and analytical processing database that scales itself, heals itself, and lives in the cloud.</description>
    </item>
    
    <item>
      <title>TiDB 2.0 GA Release</title>
      <link>https://pingcap.com/blog-cn/tidb-2.0-ga-release/</link>
      <pubDate>Fri, 27 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-2.0-ga-release/</guid>
      <description>2018 年 4 月 27 日，TiDB 发布 2.0 GA 版。相比 1.0 版本，对 MySQL 兼容性、系统稳定性、优化器和执行器做了很多改进。</description>
    </item>
    
    <item>
      <title>详解 | TiDB 2.0 GA is here!</title>
      <link>https://pingcap.com/blog-cn/tidb-2.0-ga-release-detail/</link>
      <pubDate>Fri, 27 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-2.0-ga-release-detail/</guid>
      <description>经过半年时间，6 个 RC 版本，今天 TiDB 2.0 GA 版本正式发布。</description>
    </item>
    
    <item>
      <title>Weekly update (April 16 ~ April 22, 2018)</title>
      <link>https://pingcap.com/weekly/2018-04-23-tidb-weekly/</link>
      <pubDate>Mon, 23 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-04-23-tidb-weekly/</guid>
      <description>Last week, we landed 36 PRs in the TiDB repositories, 8 PRs in the TiSpark repositories, and 29 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.66】Application of TLA&#43; at PingCAP</title>
      <link>https://pingcap.com/meetup/meetup-66-20180417/</link>
      <pubDate>Tue, 17 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-66-20180417/</guid>
      <description>上周六的 Meetup 上，我司董麒麟同学为大家讲解了 TLA+ 在 TiDB 中的应用。现奉上现场视频 &amp;amp; 干货节选，Enjoy～
视频回顾 视频 | Infra Meetup No.66：Application of TLA+ at PingCAP
可下载 完整 PPT 配合观看
干货节选 董麒麟 | PingCAP TLA+ 是一个用来设计、描述和验证并发系统的一套形式化语言，易学易用。在 TiDB 中，我们非常关心一些关键系统的设计正确性，所以使用 TLA+ 来保证这一点。PingCAP 在 2017 年底开始尝试使用 TLA+，到目前为止，已经用 TLA+ 验证了我们优化过的 Percolator 协议以及 Multi-raft region merge 的正确性。这些代码可以在 pingcap/tla-plus 上找到。
TLA+ 可以在一个比代码更高的层面上描述系统。在编写代码之前，将系统完整地表述一遍是很重要的。这能强迫我们去思考这个系统的细节，避免早期设计时出现失误并保证正确性。TLA+ 的基本原理是将系统描述成为一个状态机。系统可以用 TLA+ 来抽象出若干变量表达它的当前状态，并用形式化的语言去描述这个状态机的初始结束状态与状态转移。我们对这个系统的一些 Safety 性质比较感兴趣，这些 Safety 的性质也可以在 TLA+ 中用谓词来刻画。另外一个工具 TLC 可以用来验证被 TLA+ 抽象出来的系统模型。TLC 的原理是枚举状态机的所有可以遍历到的状态集。验证系统的正确性就是确保所有状态都满足对应的谓词。
TLA+ 在 TiDB 的第一个应用是 Percolator 事务协议。这个协议是一个二阶段提交算法，用来在只支持单行事物的存储上实现多行事务。这个协议的具体介绍可以在 这里 找到。和原始协议的不同，TiDB 做了一个很重要的优化，在 prewrite 阶段，我们并不是采取了先 prewrite 主锁，再并发副锁的策略，而是主锁和副锁一起并发。但是如果直接这样设计是存在问题的。在视频中可以看到我们是如何用 TLA+ 定位这个问题，然后提出了一个解决方案来克服这个问题。我们用 TLA+ 验证了优化的正确性。</description>
    </item>
    
    <item>
      <title>Weekly update (April 09 ~ April 15, 2018)</title>
      <link>https://pingcap.com/weekly/2018-04-16-tidb-weekly/</link>
      <pubDate>Mon, 16 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-04-16-tidb-weekly/</guid>
      <description>Last week, we landed 32 PRs in the TiDB repositories, 3 PRs in the TiSpark repositories, and 25 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>From Chaos to Order -- Tools and Techniques for Testing TiDB, A Distributed NewSQL Database</title>
      <link>https://pingcap.com/blog/chaos-practice-in-tidb/</link>
      <pubDate>Sat, 14 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/chaos-practice-in-tidb/</guid>
      <description>As an open source distributed NewSQL Hybrid Transactional/Analytical Processing (HTAP) database, TiDB contains the most important asset of our customers&amp;ndash;their data. One of the fundamental and foremost requirements of our system is to be fault-tolerant. But how do you ensure fault tolerance in a distributed database? This article covers the top fault injection tools and techniques in Chaos Engineering, as well as how to execute Chaos practices in TiDB.</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（七）基于规则的优化</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-7/</link>
      <pubDate>Tue, 10 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-7/</guid>
      <description>本文是 TiDB 源码阅读系列文章的第七篇。在 TiDB 中，SQL 优化的过程可以分为逻辑优化和物理优化两个部分。本篇将主要关注逻辑优化。Enjoy ～</description>
    </item>
    
    <item>
      <title>Weekly update (April 02 ~ April 08, 2018)</title>
      <link>https://pingcap.com/weekly/2018-04-09-tidb-weekly/</link>
      <pubDate>Mon, 09 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-04-09-tidb-weekly/</guid>
      <description>Last week, we landed 28 PRs in the TiDB repositories, 1 PR in the TiSpark repositories, and 9 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.65】「四美具，二难并」之成都行</title>
      <link>https://pingcap.com/meetup/meetup-65-20180404/</link>
      <pubDate>Wed, 04 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-65-20180404/</guid>
      <description>上周 Infra Meetup 走进了成都，来自 G7 汇通天下的廖强老师和来自 PingCAP 的申砾、孙浩老师，为大家带来了三个干货满满的 Talk 。 这是第二场走出帝都的 Meetup，场面依然火爆～**「四美具，二难并」 成都，唯有美食与同道者不可辜负！**
下午两点大家陆续进场，不得不说成都的同学们太热情了，场地差点坐不下，各式各样的椅子都被搬来了～等同学们坐定之后，PingCAP Engineering VP 申砾老师首先上台，深入讲解了 TiDB 的各项核心性能，让同学们对 TiDB 的架构和性能有了充分的认知。
申砾：《Deep Dive into TiDB》 视频回顾 | Infra Meetup No.65 成都站：Deep Dive into TiDB（申砾）
 PingCAP Engineering VP 申砾
 申砾老师从系统整体到技术细节，从核心项目到周边工具，介绍了 TiDB 的方方面面。
  TiDB 的设计目标、核心特性以及整体架构。
  系统分层介绍，包括分布式 Key-Value 存储引擎 TiKV 的核心技术及实现细节，分布式 SQL 引擎的设计思路以及优化器、执行引擎等核心组件的介绍。
  Cloud TiDB、TiSpark 等核心项目以及 TiDB 集群的周边工具。
  Q&amp;amp;A 环节：TiDB 在实践中的使用经验，TiDB 2.0 版本的最新进展以及如何实现性能上的巨大提升。</description>
    </item>
    
    <item>
      <title>Blitzscaling the Largest Dockless Bikesharing Platform with TiDB’s Help</title>
      <link>https://pingcap.com/success-stories/tidb-in-mobike/</link>
      <pubDate>Tue, 03 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/success-stories/tidb-in-mobike/</guid>
      <description>Mobike has been using the TiDB database in the production environment since early 2017. Now they have deployed TiDB in multiple clusters with close to 100 nodes, handling dozens of TBs of data for different application scenarios. This post will provide a deep dive on why Mobike chose TiDB over MySQL and its sharding solutions by illustrating how TiDB solves their pain points.</description>
    </item>
    
    <item>
      <title>Weekly update (March 26 ~ April 01, 2018)</title>
      <link>https://pingcap.com/weekly/2018-04-02-tidb-weekly/</link>
      <pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-04-02-tidb-weekly/</guid>
      <description>Last week, we landed 49 PRs in the TiDB repositories, 6 PRs in the TiSpark repositories, and 21 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（六）Select 语句概览</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-6/</link>
      <pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-6/</guid>
      <description>在先前的 TiDB 源码阅读系列文章（四）中，我们介绍了 Insert 语句，想必大家已经了解了 TiDB 是如何写入数据，本篇文章介绍一下 Select 语句是如何执行的。Enjoy~</description>
    </item>
    
    <item>
      <title>TiDB 工具链和生态</title>
      <link>https://pingcap.com/blog-cn/devcon2018-liuyin/</link>
      <pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/devcon2018-liuyin/</guid>
      <description>本文为今年年初 PingCAP 商业产品团队负责人刘寅在 TiDB DevCon2018 上分享的 《 TiDB 工具链和生态》实录内容，文内详细介绍了 TiDB 的周边工具以及生态系统。</description>
    </item>
    
    <item>
      <title>刘寅：TiDB 工具链和生态</title>
      <link>https://pingcap.com/blog-cn/tidb-tools-ecosystems/</link>
      <pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-tools-ecosystems/</guid>
      <description>本文为今年年初 PingCAP 商业产品团队负责人刘寅在 TiDB DevCon2018 上分享的 《 TiDB 工具链和生态》实录内容，文内详细介绍了 TiDB 的周边工具以及生态系统。enjoy~</description>
    </item>
    
    <item>
      <title>Weekly update (March 19 ~ March 25, 2018)</title>
      <link>https://pingcap.com/weekly/2018-03-26-tidb-weekly/</link>
      <pubDate>Mon, 26 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-03-26-tidb-weekly/</guid>
      <description>Last week, we landed 35 PRs in the TiDB repositories, 4 PRs in the TiSpark repositories, and 26 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（五）TiDB SQL Parser 的实现</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-5/</link>
      <pubDate>Tue, 20 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-5/</guid>
      <description>本文为 TiDB 源码阅读系列文章的第五篇，主要对 SQL Parser 功能的实现进行了讲解。内容来自社区小伙伴——马震（GitHub ID：mz1999 ）的投稿。</description>
    </item>
    
    <item>
      <title>Weekly update (March 12 ~ March 18, 2018)</title>
      <link>https://pingcap.com/weekly/2018-03-19-tidb-weekly/</link>
      <pubDate>Mon, 19 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-03-19-tidb-weekly/</guid>
      <description>Last week, we landed 60 PRs in the TiDB repositories, 14 PRs in the TiSpark repositories, and 29 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>How to do Performance Tuning on TiDB, A Distributed NewSQL Database</title>
      <link>https://pingcap.com/blog/performance_tuning_on_a_distributed_newsql_database/</link>
      <pubDate>Fri, 16 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/performance_tuning_on_a_distributed_newsql_database/</guid>
      <description>Doing performance tuning on distributed systems is no joking matter. It’s much more complicated than on a single node server, and bottlenecks can pop up anywhere, from system resources in a single node or subcomponent, to cooperation between nodes, to even network bandwidth. Performance tuning is a practice that aims to find these bottlenecks and address them, in order to reveal more bottlenecks and address them as well, until the system reaches an optimal performance level. In this article, I will share some best practices on how to tune &amp;ldquo;write&amp;rdquo; operations in TiDB to achieve maximum performance.</description>
    </item>
    
    <item>
      <title>TiDB 在今日头条的实践</title>
      <link>https://pingcap.com/blog-cn/devcon2018-wudi/</link>
      <pubDate>Fri, 16 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/devcon2018-wudi/</guid>
      <description>本文整理自今日头条数据库中间件/分布式数据库负责人吴镝（知乎 ID：吴镝）在 TiDB DevCon2018 上的分享内容。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.64】Chaos Practice in TiDB</title>
      <link>https://pingcap.com/meetup/meetup-64-20180314/</link>
      <pubDate>Wed, 14 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-64-20180314/</guid>
      <description>上周六的 Meetup 上，我司首席架构师唐刘为大家分享了《Chaos Practice in TiDB》。现场小伙伴们热情十足，于是就有了这场“分享 40 分钟，畅聊 1 个半小时 ”的技术趴~ :-D 附带唐刘老师撰写的《混沌工程简介》一文，希望可以帮助未到现场的小伙伴们更好地了解本期 talk :)
视频回顾  视频 | Infra Meetup No.64 : Chaos Practice in TiDB PPT 链接  干货节选 构造一个健壮的分布式数据库系统是一件非常困难的事情，因为我们需要做非常多的工作来保证用户数据安全，不允许数据丢失或者损坏。而在 TiDB 里面，我们是通过实践 Chaos Engineering 来保证。
在本次分享中，我司首席架构师唐刘首先提出了 Chaos 测试的必要性：“虽然我们有 unit test，integration test 这些，但他们都是有局限性的，为了更好的模拟系统实际的情况，我们需要 Chaos。”
那么在 TiDB 里面是如何做 Chaos 的。在这其中有三个关键技术，monitor，fault injection 以及 automation。现场重点讲解了 fault injection，包括进程干扰，网络干扰，文件干扰等，以及一些集群工具。同时介绍了在 TiDB 里面如何将所有这些进行整合，也就是 Schrodinger 平台，通过 Schrodinger，我们能自动化的进行 Chaos test。
最后，唐刘老师还为大家介绍了一些 PingCAP 现在的研究方向，譬如使用 TLA+ 来证明我们程序的正确性，以及使用 automating fault injection 来自动的分析系统，进行 fault injection。</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（四）Insert 语句概览</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-4/</link>
      <pubDate>Tue, 13 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-4/</guid>
      <description>本文为 TiDB 源码阅读系列文章的第四篇。本篇文章会以 Insert 语句为例进行讲解，帮助读者理解前一篇文章。</description>
    </item>
    
    <item>
      <title>Weekly update (March 05 ~ March 11, 2018)</title>
      <link>https://pingcap.com/weekly/2018-03-12-tidb-weekly/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-03-12-tidb-weekly/</guid>
      <description>Last week, we landed 38 PRs in the TiDB repositories, 8 PRs in the TiSpark repositories, and  32 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（三）SQL 的一生</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-3/</link>
      <pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-3/</guid>
      <description>本文为 TiDB 源码阅读系列文章的第三篇。本篇文章从 SQL 处理流程出发，介绍哪里是入口，对 SQL 需要做哪些操作，知道一个 SQL 是从哪里进来的，在哪里处理，并从哪里返回。</description>
    </item>
    
    <item>
      <title>Weekly update (February 26 ~ March 04, 2018)</title>
      <link>https://pingcap.com/weekly/2018-03-05-tidb-weekly/</link>
      <pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-03-05-tidb-weekly/</guid>
      <description>Last week, we landed 27 PRs in the TiDB repositories, 4 PRs in the TiSpark repositories, and 12 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（二）初识 TiDB 源码</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-2/</link>
      <pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-2/</guid>
      <description>本文为 TiDB 源码阅读系列文章的第二篇，第一篇文章介绍了 TiDB 整体的架构，本篇文章是一篇入门文档 enjoy~</description>
    </item>
    
    <item>
      <title>TiDB 源码阅读系列文章（一）序</title>
      <link>https://pingcap.com/blog-cn/tidb-source-code-reading-1/</link>
      <pubDate>Wed, 28 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-source-code-reading-1/</guid>
      <description>在 TiDB DevCon2018 上，我们对外宣布了 TiDB 源码阅读分享活动，承诺对外发布一系列文章以及视频帮助大家理解 TiDB 源码。本文为本系列文章第一篇。</description>
    </item>
    
    <item>
      <title>Weekly update (February 12 ~ February 25, 2018)</title>
      <link>https://pingcap.com/weekly/2018-02-26-tidb-weekly/</link>
      <pubDate>Mon, 26 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-02-26-tidb-weekly/</guid>
      <description>Last two weeks, we landed 27 PRs in the TiDB repositories and 13 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB 1.1 Beta Release</title>
      <link>https://pingcap.com/blog-cn/tidb-1.1-beta-release/</link>
      <pubDate>Sat, 24 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-1.1-beta-release/</guid>
      <description>2018 年 2 月 24 日，TiDB 发布 1.1 Beta 版。该版本在 1.1 Alpha 版的基础上，对 MySQL 兼容性、系统稳定性做了很多改进。</description>
    </item>
    
    <item>
      <title>Bringing TiKV to Rust Devroom at FOSDEM 2018</title>
      <link>https://pingcap.com/blog/FOSDEM-2018-Rust-Devroom-reflection/</link>
      <pubDate>Thu, 15 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/FOSDEM-2018-Rust-Devroom-reflection/</guid>
      <description>At the crack of dawn on February 1, I landed in Brussels, Belgium, for the first time in my life. The goal of my trip wasn’t to taste the local cuisine, tour world-famous museums, or grab a pint of the local brew. It was to deliver a talk three days later at FOSDEM 2018 Rust Devroom about our experience at PingCAP using Rust to build TiKV, a distributed transactional Key-Value storage engine.</description>
    </item>
    
    <item>
      <title>Weekly update (February 05 ~ February 11, 2018)</title>
      <link>https://pingcap.com/weekly/2018-02-12-tidb-weekly/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-02-12-tidb-weekly/</guid>
      <description>Last week, we landed 67 PRs in the TiDB repositories, 6 PRs in the TiSpark repositories, and 19 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Query Cache in TiDB</title>
      <link>https://pingcap.com/blog-cn/devcon2018-liyulai/</link>
      <pubDate>Fri, 09 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/devcon2018-liyulai/</guid>
      <description>本文为 TiDB DevCon2018 实录系列第一篇，是由 TiDB Committer 李雨来分享的《Query Cache in TiDB》的完整视频及文字实录。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.63】深入了解 TiDB 新执行框架</title>
      <link>https://pingcap.com/meetup/meetup-63-20180207/</link>
      <pubDate>Wed, 07 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-63-20180207/</guid>
      <description>在上周六的 Meetup 中，我司 TiDB SQL 组研发工程师张建同学，为大家解读了 TiDB 的新执行框架。农历新年前的最后一期 Meetup，也是满满干货哦～
视频回顾  视频 | Infra Meetup No.63：深入了解 TiDB 新执行框架 PPT 链接  干货节选 在 TPC-H 1G 的性能测试结果上，TiDB release 1.1 相比于 1.0 有着巨大的性能提升，获得这些性能提升最主要的两个优化是：
  执行器框架由传统的 volcano 模型一次 next 函数调用返回一行结果变为了返回一批结果，减少了框架上的函数调用开销并且给予了每个物理算子更多的优化空间；
  这一批结果采用紧凑的、列式的内存布局，使得执行器在计算的时候更加缓存友好。
  以 Table Reader 为例，使用新的执行框架和内存布局以后，通过减少函数调用开销以及已申请内存的重复利用，读取 600 万行数据的速度提升了 30% 左右。
本次分享中，张建同学从表达式计算入手跟大家对比了两种表达式计算方式的性能差异以及原因。
第一种计算方式是以行为单位，用一条输入数据计算出一条输出数据，这种计算方式是 1.0 版本采用的；
第二种计算方式是表达式为单位，先计算第一个表达式得到输出的第一列，然后计算其他表达式得到其他输出列，这是目前 1.1 所采用的计算方式；
我们通过简单的 benchmark 证明第二种计算方式快 15% 以上，并通过采集 L2 Cache performance 推断出了第二种计算方式的 L1 Cache Miss 的确比第一种少从而证实了这些性能差距跟 L1 Cache Miss 正相关。</description>
    </item>
    
    <item>
      <title>Weekly update (January 29 ~ February 04, 2018)</title>
      <link>https://pingcap.com/weekly/2018-02-05-tidb-weekly/</link>
      <pubDate>Mon, 05 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-02-05-tidb-weekly/</guid>
      <description>Last week, we landed 35 PRs in the TiDB repositories, 6 PRs in the TiSpark repositories, and 22 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Weekly update (January 22 ~ January 28, 2018)</title>
      <link>https://pingcap.com/weekly/2018-01-29-tidb-weekly/</link>
      <pubDate>Mon, 29 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-01-29-tidb-weekly/</guid>
      <description>Last week, we landed 28 PRs in the TiDB repositories, 4 PRs in the TiSpark repositories, and 17 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>TiDB DevCon 2018 Recap - News, Latest Development, and Roadmap</title>
      <link>https://pingcap.com/blog/tidb-devcon-2018-recap/</link>
      <pubDate>Thu, 25 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/tidb-devcon-2018-recap/</guid>
      <description>On January 20th, 2018, more than 200 coders, hackers, and techies streamed into Garage Café, a chic coffee shop in the heart of Beijing’s techhub, Zhongguancun. They were there to be part of TiDB DevCon 2018, a technology party for the developers, by the developers!</description>
    </item>
    
    <item>
      <title>Weekly update (January 15 ~ January 21, 2018)</title>
      <link>https://pingcap.com/weekly/2018-01-22-tidb-weekly/</link>
      <pubDate>Mon, 22 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-01-22-tidb-weekly/</guid>
      <description>Last week, we landed 43 PRs in the TiDB repositories, 13 PRs in the TiSpark repositories, and 18 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>当我们在谈论 TiDB DevCon2018 时我们在谈论什么</title>
      <link>https://pingcap.com/blog-cn/devcon2018/</link>
      <pubDate>Mon, 22 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/devcon2018/</guid>
      <description>在 TiDB DevCon2018 上，我们为大家分享了 TiDB 最新的项目进展以及 2018 年的 Roadmap。</description>
    </item>
    
    <item>
      <title>TiDB 1.1 Alpha Release</title>
      <link>https://pingcap.com/blog-cn/tidb-1.1-alpha-release/</link>
      <pubDate>Fri, 19 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-1.1-alpha-release/</guid>
      <description>2018 年 1 月 19 日，TiDB 发布 1.1 Alpha 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。</description>
    </item>
    
    <item>
      <title>Weekly update (January 08 ~ January 14, 2018)</title>
      <link>https://pingcap.com/weekly/2018-01-15-tidb-weekly/</link>
      <pubDate>Mon, 15 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-01-15-tidb-weekly/</guid>
      <description>Last week, we landed 43 PRs in the TiDB repositories and 25 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.62】Apache Pulsar</title>
      <link>https://pingcap.com/meetup/meetup-62-20180110/</link>
      <pubDate>Wed, 10 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-62-20180110/</guid>
      <description>在上周六的 Meetup 中，我们邀请到了来自 Streamlio 的翟佳老师，为我们分享了《Unified Streaming and Queuing with Apache Pulsar》
  [视频 | Infra Meetup No.62：Apache Pulsar] (https://www.bilibili.com/video/av41020650)
  PPT 链接
  翟佳 | Streamlio Apache Pulsar 是 Yahoo 开源的下一代的消息系统，Pulsar 于 2016 年底开源，现在是 Apache 软件基金会的一个孵化器项目。 Pulsar 在保证大数据消息系统的性能和吞吐量的同时，提供了更多企业级的 Feature，包括方便的运维和扩展，灵活的消息模型，多语言 API，多租户，异地多备，和强持久性一致性等等，解决了现有开源消息系统的一些不足。 Pulsar 在 2015 年初被大规模部署在 Yahoo 的生产环境中，支持着公司的主要应用和业务，为 Yahoo 全球 10 个数据中心之间提供了数据全互备；支持着 140 多万个 Topic；每天处理 1000 多亿条消息；整体的消息发布延迟小于 5ms。通过了 Yahoo 内部主要应用（比如广告平台，KV 系统，mail 等）生产环境的检验。 Pulsar 在设计之初就对企业级应用中比较关注的多租户和异地多备等 feature 进行了全面的支持； Pulsar 对消息系统中比较难解决的强一致性和持久性问题给出了比较优雅的解决方式。 这次分享中，翟佳老师介绍了 Pulsar 项目产生的背景，Pulsar 中的相关概念，Pulsar 主要的体系架构，Pulsar 的特性，Pulsar 在设计中的考虑和具体实现。最后对比了和 Kafka 在同一环境下的相关测试结果。</description>
    </item>
    
    <item>
      <title>Weekly update (January 01 ~ January 07, 2018)</title>
      <link>https://pingcap.com/weekly/2018-01-08-tidb-weekly/</link>
      <pubDate>Mon, 08 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-01-08-tidb-weekly/</guid>
      <description>Last week, we landed 37 PRs in the TiDB repositories, 4 PRs in the TiSpark repositories, and 10 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Weekly update (December 25 ~ December 31, 2017)</title>
      <link>https://pingcap.com/weekly/2018-01-02-tidb-weekly/</link>
      <pubDate>Tue, 02 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2018-01-02-tidb-weekly/</guid>
      <description>Last week, we landed 36 PRs in the TiDB repositories, 12 PRs in the TiSpark repositories, and 18 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>2017 Reflection and Gratitude</title>
      <link>https://pingcap.com/blog/pingcap-reflection-and-gratitude/</link>
      <pubDate>Sat, 30 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/pingcap-reflection-and-gratitude/</guid>
      <description>Thank you all, our beloved contributors, customers, and partners, for an amazing 2017! Hello, 2018!</description>
    </item>
    
    <item>
      <title>Weekly update (December 18 ~ December 24, 2017)</title>
      <link>https://pingcap.com/weekly/2017-12-25-tidb-weekly/</link>
      <pubDate>Mon, 25 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-12-25-tidb-weekly/</guid>
      <description>Last week, we landed 48 PRs in the TiDB repositories, 10 PRs in the TiSpark repositories, and 13 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.60】初探 Orca 查询优化器</title>
      <link>https://pingcap.com/meetup/meetup-60-20171223/</link>
      <pubDate>Sat, 23 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-60-20171223/</guid>
      <description>上周六，PingCAP Infra Meetup 迎来了第 60 期 👏 由我司 “SQL 小王子”韩飞同学出台，为大家带来了《初探 Orca 查询优化器》主题分享~
视频回顾 视频 | Infra Meetup No.60：初探 Orca 查询优化器
可下载 完整 PPT 配合观看
干货节选 Orca 优化器是基于代价面向 MPP 执行引擎的优化器，使用了先进 Cascades 模型，将优化分为 Exploration，Stats Derivation，Implemetation 等阶段。Orca 优化器可以将优化任务分解，利用多核 CPU 并行执行，以加快优化速度。
知乎上有个热门问题：在做一个数据库的过程中，最难的是哪个部分？
很多人都认为查询优化器可能是数据库中一个最难的部分。也有人会有疑问：一个 SQL 生成一个执行计划可能是一个很确定的事情，为什么会是最难的？
对此，韩飞同学表示，难点主要集中在基于代价的物理计划生成。
在本次分享中，韩飞同学从逻辑计划的优化及物理计划的优化讲起，重点介绍了 Orca 优化器的架构，算法实现，优化效果以及测试保证等问题。</description>
    </item>
    
    <item>
      <title>Tick or Tock? Keeping Time and Order in Distributed Databases</title>
      <link>https://pingcap.com/blog/Time-in-Distributed-Systems/</link>
      <pubDate>Fri, 22 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/Time-in-Distributed-Systems/</guid>
      <description>At re:Invent 2017, Amazon Web Services (AWS) announced Amazon Time Sync Service which is a highly accurate and reliable time reference that is natively accessible from Amazon EC2 instances. It is much like the Google TrueTime which was published in 2012. Why do Google and AWS both want to make efforts to provide global time service? Is there any inspiration for building distributed database? This topic is important to think about.</description>
    </item>
    
    <item>
      <title>Weekly update (December 11 ~ December 17, 2017)</title>
      <link>https://pingcap.com/weekly/2017-12-18-tidb-weekly/</link>
      <pubDate>Mon, 18 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-12-18-tidb-weekly/</guid>
      <description>Last week, we landed 46 PRs in the TiDB repositories, 10 PRs in the TiSpark repositories, and 14 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>Weekly update (December 04 ~ December 10, 2017)</title>
      <link>https://pingcap.com/weekly/2017-12-11-tidb-weekly/</link>
      <pubDate>Mon, 11 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-12-11-tidb-weekly/</guid>
      <description>Last week, we landed 45 PRs in the TiDB repositories, 12 PRs in the TiSpark repositories, and 21 PRs in the TiKV and PD repositories.</description>
    </item>
    
    <item>
      <title>PingCAP Plants its Seed in Silicon Valley</title>
      <link>https://pingcap.com/blog/Silicon-Valley-Office-Announcement/</link>
      <pubDate>Fri, 08 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/Silicon-Valley-Office-Announcement/</guid>
      <description>PingCAP, a cutting-edge distributed Hybrid Transactional/Analytical Processing (HTAP) database company, is excited to announce the opening of its Silicon Valley office, located at the GSV Labs in Redwood City, California.</description>
    </item>
    
    <item>
      <title>Weekly update (November 27 ~ December 03, 2017)</title>
      <link>https://pingcap.com/weekly/2017-12-04-tidb-weekly/</link>
      <pubDate>Mon, 04 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-12-04-tidb-weekly/</guid>
      <description>Last week, we landed 43 PRs in the TiDB repositories, 6 PRs in the TiSpark repositories, and 17 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>A TiKV Source Code Walkthrough – Raft Optimization</title>
      <link>https://pingcap.com/blog/optimizing-raft-in-tikv/</link>
      <pubDate>Tue, 28 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/optimizing-raft-in-tikv/</guid>
      <description>Paxos or Raft is frequently used to ensure data consistency in the distributed computing area. But Paxos is known for its complexity and is rather difficult to understand while Raft is very simple. Therefore, a lot of emerging databases tend to use Raft as the consensus algorithm at its bottom layer. TiKV is no exception.</description>
    </item>
    
    <item>
      <title>Weekly update (November 20 ~ November 26, 2017)</title>
      <link>https://pingcap.com/weekly/2017-11-27-tidb-weekly/</link>
      <pubDate>Mon, 27 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-11-27-tidb-weekly/</guid>
      <description>Last week, we landed 60 PRs in the TiDB repositories, 5 PRs in the TiSpark repositories, and 10 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>Weekly update (November 13 ~ November 19, 2017)</title>
      <link>https://pingcap.com/weekly/2017-11-20-tidb-weekly/</link>
      <pubDate>Mon, 20 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-11-20-tidb-weekly/</guid>
      <description>Last week, we landed 48 PRs in the TiDB repositories, 3 PRs in the TiSpark repositories, and 23 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.58】TiSpark 架构设计与实现</title>
      <link>https://pingcap.com/meetup/meetup-58-20171115/</link>
      <pubDate>Wed, 15 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-58-20171115/</guid>
      <description>在上周六的 Meetup 中，我司 TiSpark 项目负责人马晓宇同学，与大家分享了《TiDB 遇到 Spark-TiSpark 架构设计与实现》。
马晓宇 | TiSpark 项目负责人 TiSpark 是一款直接运行在分布式数据库 TiDB 存储层的产品，这样紧密结合的设计使它能够提供传统的 Spark SQL 所没有的诸多特性。TiSpark 与 TiDB 在同一套存储上共同支持了分析和在线事物处理两种场景，让复杂的数据平台架构变的简单，减少复杂的 ETL 流程，让大数据分析变的更实时。本次分享，马晓宇同学与大家聊了聊 TiSpark 的架构和实现细节。这一聊，就聊成了一场讨论时长大于分享时长的趴 :-D
视频回顾   视频 | Infra Meetup No.58：TiSpark 架构设计与实现
  PPT 下载链接
  PPT节选 </description>
    </item>
    
    <item>
      <title>使用 Rust 构建分布式 Key-Value Store</title>
      <link>https://pingcap.com/blog-cn/rust-key-value-store/</link>
      <pubDate>Wed, 15 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/rust-key-value-store/</guid>
      <description>构建一个分布式 Key-Value Store 并不是一件容易的事情，我们需要考虑很多的问题，首先就是我们的系统到底需要提供什么样的功能。本文将以我们开发的分布式 Key-Value TiKV 作为实际例子，来说明下我们是如何取舍并实现的。</description>
    </item>
    
    <item>
      <title>Weekly update (November 06 ~ November 12, 2017)</title>
      <link>https://pingcap.com/weekly/2017-11-13-tidb-weekly/</link>
      <pubDate>Mon, 13 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-11-13-tidb-weekly/</guid>
      <description>Last week, we landed 45 PRs in the TiDB repositories, 5 PRs in the TiSpark repositories, and 18 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>Weekly update (October 30 ~ November 05, 2017)</title>
      <link>https://pingcap.com/weekly/2017-11-06-tidb-weekly/</link>
      <pubDate>Mon, 06 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-11-06-tidb-weekly/</guid>
      <description>Last week, we landed 51 PRs in the TiDB repositories and 16 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>Weekly update (October 23 ~ October 29, 2017)</title>
      <link>https://pingcap.com/weekly/2017-10-30-tidb-weekly/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-10-30-tidb-weekly/</guid>
      <description>Last two weeks, we landed 83 PRs in the TiDB repositories and 46 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.57 Rust 专场】Rocket Web 框架解析</title>
      <link>https://pingcap.com/meetup/meetup-57-20171025/</link>
      <pubDate>Wed, 25 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-57-20171025/</guid>
      <description>Rust 专场 2.0 Rust 作为系统级编程语言，同样可以非常方便的开发上层 Web 应用。借助目前 Rust 社区最火的 web 框架 Rocket，可以像动态语言一样方便地创建高性能的 Web 应用，同时可以拥有 Rust 强大的类型安全保障。
在上周六，我们邀请了 Rocket 的作者 Sergio Benitez，与大家面对面分享了《Rocket Web 框架解析》。
据 Sergio 现场表示，这是他首次来中国，以往虽然也有在公开场合解读过 Rocket Web 框架，但本次，有些新鲜内容可是第一时间共享给 Rust 中国社区的小伙伴哦~
这一次，让我们跳过现场内容解读环节，直接为大家奉上新鲜出炉的干货视频，enjoy~~
视频 | Infra Meetup No.55：Rocket Web 框架解析
 讲师介绍： Sergio Benitez，斯坦福大学博士四年级的学生，主要研究如何将编程语言理论与操作系统和安全性融合在一起。目前在做项目包括对 Rust 的类型系统 “Rusty Types” 的规范化，以及 Rust 的 Rocket Web Framework。在斯坦福大学之前，Sergio 曾在 Google、Apple 和 SpaceX 实习，参与的项目包括设计异常检测算法，火箭及其它航天器的操作系统的性能调优。
 </description>
    </item>
    
    <item>
      <title>Weekly update (October 9 ~ October 22, 2017)</title>
      <link>https://pingcap.com/weekly/2017-10-23-tidb-weekly/</link>
      <pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-10-23-tidb-weekly/</guid>
      <description>Last two weeks, we landed 83 PRs in the TiDB repositories and 46 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>PingCAP Launches TiDB 1.0</title>
      <link>https://pingcap.com/blog/2017-10-17-announcement/</link>
      <pubDate>Tue, 17 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2017-10-17-announcement/</guid>
      <description>TiDB is compatible with MySQL, strong consistent and highly available.</description>
    </item>
    
    <item>
      <title>写在 TiDB 1.0 发布之际 | 预测未来最好的方式就是创造未来</title>
      <link>https://pingcap.com/blog-cn/ga-1.0/</link>
      <pubDate>Tue, 17 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/ga-1.0/</guid>
      <description>1.0 版本只是个开始，是新的起点，愿我们一路相扶，不负远途。</description>
    </item>
    
    <item>
      <title>Scale the Relational Database with NewSQL</title>
      <link>https://pingcap.com/blog/2017-10-10-nextcon/</link>
      <pubDate>Tue, 10 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2017-10-10-nextcon/</guid>
      <description>This is the speech Li SHEN gave at the 3rd NEXTCON.</description>
    </item>
    
    <item>
      <title>Weekly update (September 25 ~ October 08, 2017)</title>
      <link>https://pingcap.com/weekly/2017-10-09-tidb-weekly/</link>
      <pubDate>Mon, 09 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-10-09-tidb-weekly/</guid>
      <description>Last two weeks, we landed 62 PRs in the TiDB repositories and 39 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>Why did we choose Rust over Golang or C/C&#43;&#43; to develop TiKV?</title>
      <link>https://pingcap.com/blog/2017-09-26-whyrust/</link>
      <pubDate>Tue, 26 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2017-09-26-whyrust/</guid>
      <description>Every developer has his/her favorite programming language. For the TiKV team members, it&#39;s Rust.</description>
    </item>
    
    <item>
      <title>Weekly update (September 18 ~ September 24, 2017)</title>
      <link>https://pingcap.com/weekly/2017-09-25-tidb-weekly/</link>
      <pubDate>Mon, 25 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-09-25-tidb-weekly/</guid>
      <description>Last week, we landed 63 PRs in the TiDB repositories and 30 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>谈谈开源(一)</title>
      <link>https://pingcap.com/blog-cn/talk-about-opensource/</link>
      <pubDate>Mon, 25 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/talk-about-opensource/</guid>
      <description>很多人的『开源』是一个比较时髦且有情怀的词汇，不少公司也把开源当做 KPI 或者是技术宣传的手段。但是在我们看来，大多数人开源做的并不好，大多数开源项目也没有被很好的维护。比如前一段时间微博上流传关于 Tengine 的讨论，一个优秀的开源项目不止是公布源代码就 OK 了，还需要后续大量的精力去维护，包括制定 RoadMap、开发新功能、和社区交流、推动项目在社区中的使用、对使用者提供一定程度的支持，等等。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.56】MonetDB/X100 Paper 解读</title>
      <link>https://pingcap.com/meetup/meetup-56-20170920/</link>
      <pubDate>Wed, 20 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-56-20170920/</guid>
      <description>上周六，PingCAP Infra Meetup 第 56 期特设论文专场，我司核心工程师张建与大家一起分享并解读了“MonetDB/X100: Hyper-Pipelining Query Execution” 论文。此篇论文作为分析型数据库领域内引用次数最多的论文之一，它为何如此火爆？在今天的文章里你应该可以找到答案。
精彩视频 视频 | Infra Meetup No.56: MonetDB/X100 Paper 解读
精彩现场 在 PingCAP Infra Meetup 第 56 期论文专场，来了很多对 MonetDB/X100 论文感兴趣的小伙伴们。分享一开始，我司联合创始人兼 CEO 刘奇就为何选择 MonetDB/X100 这篇论文分享了自己看法。
刘奇提到:&amp;ldquo;如果大家有阅读近两年新出的一些 Paper，会发现里面引用率最高的一篇文章就是 MonetDB/X100。MonetDB/X100 发表于 2005 年，其实不算新。但读过该论文的人会发现目前主流的 OLAP 系统相关的技术，基本上都能在这篇论文中找到影子，如文中提到了列存、Pipeline，甚至是 JIT。他做 JIT 的思路不一样，都是比较早就有的，所以这是一篇很不错的论文。现在也可以看到很多性能比较的时候，大家新做了一个系统，说我的性能非常好，会拿出来 benchmark 说你看我打败了 MonetDB。
另外还有一些比较创新的项目，多是基于 MonetDB 改造的。一个就是英特尔最近出的一篇论文，他把 MonetDB 改造一下，把正则表达式的搜索，放到 FPGA 里面去。英特尔最近出了一款服务器，这个服务器的 CPU 和 FPGA 是放在一起的，他们得到 Performance 最小提倡是 2.3 倍以上，大概意思上就是说，MonetDB 在这上面做一个简单的改造，就可以适应到更新的硬件。
在 2012 年的时候，第一个提供论文、代码的基于 MonetDB 的 GPU 的 Database 也出来了。当时是在 TPCH 的 query 里面，有一些复杂的 query，提升是非常的明显。所以大家可以看到，基于 MonetDB 改造的，在 FPGA 或者 GPU上运行的系统都有，实际上这是一个非常优秀的学术的原形，今年得了十年最佳论文奖。&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Weekly update (September 11 ~ September 17, 2017)</title>
      <link>https://pingcap.com/weekly/2017-09-18-tidb-weekly/</link>
      <pubDate>Mon, 18 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-09-18-tidb-weekly/</guid>
      <description>Last week, we landed 46 PRs in the TiDB repositories and 34 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>RocksDB in TiKV</title>
      <link>https://pingcap.com/blog/2017-09-15-rocksdbintikv/</link>
      <pubDate>Fri, 15 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2017-09-15-rocksdbintikv/</guid>
      <description>This is the speech Siddon Tang gave at the RocksDB meetup on August 28, 2017.</description>
    </item>
    
    <item>
      <title>Futures and gRPC in Rust</title>
      <link>https://pingcap.com/blog/2017-09-12-futuresandgrpc/</link>
      <pubDate>Tue, 12 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2017-09-12-futuresandgrpc/</guid>
      <description>This is the speech Siddon Tang gave at Bay Area Rust Meetup August 2017.</description>
    </item>
    
    <item>
      <title>Weekly update (September 04 ~ September 10, 2017)</title>
      <link>https://pingcap.com/weekly/2017-09-11-tidb-weekly/</link>
      <pubDate>Mon, 11 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-09-11-tidb-weekly/</guid>
      <description>Last week, we landed 49 PRs in the TiDB repositories and 32 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>How We Found a Data Corruption Bug in RocksDB</title>
      <link>https://pingcap.com/blog/2017-09-08-rocksdbbug/</link>
      <pubDate>Fri, 08 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2017-09-08-rocksdbbug/</guid>
      <description>Data was corrupted. A cluster panicked. The crime scene was compromised. What happened? Detective Huang went all lengths to locate the criminal and solved it once and for all.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.55】TiDB Pre-GA 版本新特性介绍以及后续功能展望</title>
      <link>https://pingcap.com/meetup/meetup-55-20170906/</link>
      <pubDate>Wed, 06 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-55-20170906/</guid>
      <description>上周六，PingCAP Infra Meetup 第 55 期，由我司 Engineering VP 申砾为大家分享《TiDB Pre-GA 版本新特性介绍以及后续功能展望》。在活动现场，小伙伴们就 TiDB 新特性提出了很多问题，申砾在现场与大家有一番深度的交流与讨论。精彩现场小编立马为你呈现。
精彩视频 视频 | Infra Meetup No.55：TiDB Pre-GA 版本新特性介绍以及后续功能展望
精彩现场 上周，TiDB 正式发布了 Pre-GA 版本。针对 Pre-GA 版本的新特性，PingCAP Infra Meetup 第 55 期特设定 Pre-GA 详解专场。活动当天，现场来了很多关注 TiDB 的粉丝们。
简单开场后，我司 Engineering VP 申砾同学介绍到本期内容主要围绕新版本带来的变化和内部实现细节，以及这种新型的 HTAP 数据库解决的实际问题和典型应用场景等做深度解析。
技术干货节选 TiDB Pre-GA 版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能方面做了大量优化工作。本次分享中，申砾就各个组件的优化做了详解：
TiDB 在优化器方面
  RC4 已经从一个假的基于代价产品模型，切换成一个真的基于代价产品模型，也真的是用统计信息去算。在 RC3 版本中，一些代价实际上是有规则算法的，比如说，A 等于 10 设置一个过滤比例，A 大于 10 又算另外一个过滤比例，这都是一些规则，RC4 是基于代价的一个传统模型。 Pre-GA 新特性也主要对代价模型做了一些调整。
  其次，在索引选择上做了优化，可以支持不同类型字段比较的索引选择，这一优化用户反馈查询速度明显变快。</description>
    </item>
    
    <item>
      <title>Weekly update (August 28 ~ September 03, 2017)</title>
      <link>https://pingcap.com/weekly/2017-09-04-tidb-weekly/</link>
      <pubDate>Mon, 04 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-09-04-tidb-weekly/</guid>
      <description>Last week, we landed 42 PRs in the TiDB repositories and 32 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>When TiDB Meets Jepsen</title>
      <link>https://pingcap.com/blog/2017-09-01-tidbmeetsjepsen/</link>
      <pubDate>Fri, 01 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2017-09-01-tidbmeetsjepsen/</guid>
      <description>What happens when TiDB meets Jepsen?</description>
    </item>
    
    <item>
      <title>When TiDB Meets Spark</title>
      <link>https://pingcap.com/blog-cn/tidb-meets-spark/</link>
      <pubDate>Fri, 01 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-meets-spark/</guid>
      <description>本文整理自 TiSpark 项目发起人马晓宇在 Strata Data Conference 上分享的《When TiDB Meets Spark》演讲实录。</description>
    </item>
    
    <item>
      <title>Weekly update (August 21 ~ August 27, 2017)</title>
      <link>https://pingcap.com/weekly/2017-08-28-tidb-weekly/</link>
      <pubDate>Mon, 28 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-08-28-tidb-weekly/</guid>
      <description>Last week, we landed 55 PRs in the TiDB repositories and 21 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.54】数据库计算存储分离架构分析</title>
      <link>https://pingcap.com/meetup/meetup-54-20170825/</link>
      <pubDate>Fri, 25 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-54-20170825/</guid>
      <description>上周六，PingCAP Infra Meetup 第 54 期，我们邀请到了知乎大 V 李凯（知乎 ID：郁白）为大家分享了《数据库计算存储分离架构分析》。在活动现场，郁白老师跟小伙伴们有一番深度的交流与思想碰撞。长话短说，小编带你一起回顾精彩现场。
精彩视频 视频 | Infra Meetup No.54：数据库计算存储分离架构分析
精彩现场 PingCAP Infra Meetup 第 54 期的活动现场十分火爆，活动签到时间未开始，小伙伴们就早早来到现场占位置，我想说早来的小伙伴们还是很明智的。因为&amp;hellip;&amp;hellip;
后续到场的小伙伴只能酱婶儿滴扎堆在门口竖起耳朵听了，这场活动简直是一场郁白大神与粉丝的见面会。
说了这么多，先上一张郁白老师的图吧~ 🙂
技术干货节选 大数据下公有云面临的 5 个挑战 谈到存储架构分离，为什么现在会有 Aurora 架构？包括前一阵阿里的 PolarDB 推出来以后，他们也在分析为什么要做这个东西。
郁白老师认为单就公有云来说，现在云数据面临的挑战有以下 5 个：
  跨 AZ 的可用性与数据安全性。 现在都提多 AZ 部署，亚马逊在全球有 40 多个 AZ， 16 个 Region，基本上每一个 Region 之内的那些关键服务都是跨 3 个 AZ。你要考虑整个 AZ 意外宕机或者计划内维护要怎么处理，数据迁移恢复速度怎么样。以传统的 MySQL 为例，比如说一个机器坏了，可能这个机器上存了几十 T、上百 T 的数据，那么即使在万兆网卡的情况下，也要拷个几分钟或者几十分钟都有可能。那么有没有可能加快这个速度。 还有一个就是服务恢复的速度。可能大家广为诟病就是基于 MySQL Binlog 复制。在主机压力非常大的情况下，是有可能在切换到备机以后，这个备机恢复可能需要几分钟甚至几十分钟。关键因素是回放 Binlog 的效率，MySQL 即使最新版本也只能做到 Group Commit 内的并发回放。这是数据库 RTO 指标，能不能在秒级、分钟级把这个服务恢复起来，这是一个在设计系统的时候要考虑的关键问题。</description>
    </item>
    
    <item>
      <title>Linearizability 一致性验证</title>
      <link>https://pingcap.com/blog-cn/linearizability/</link>
      <pubDate>Mon, 21 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/linearizability/</guid>
      <description>上篇文章介绍了 TiDB 如何使用 Jepsen 来进行一致性验证，并且介绍了具体的测试案例，但是并没有对 Jepsen 背后的一致性验证算法做过多介绍。这篇文章将会深入 Jepsen 的核心库 knossos，介绍 knossos 库所涉及的 Linearizability（线性化）一致性验证算法。</description>
    </item>
    
    <item>
      <title>Weekly update (August 14 ~ August 20, 2017)</title>
      <link>https://pingcap.com/weekly/2017-08-21-tidb-weekly/</link>
      <pubDate>Mon, 21 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-08-21-tidb-weekly/</guid>
      <description>Last week, we landed 57 PRs in the TiDB repositories and 33 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>The Design and Implementation of Multi-raft</title>
      <link>https://pingcap.com/blog/2017-08-15-multi-raft/</link>
      <pubDate>Tue, 15 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2017-08-15-multi-raft/</guid>
      <description>The goal of TiKV is to support 100 TB+ data and it is impossible for one Raft group to make it, we need to use multiple Raft groups, which is called Multi-raft.</description>
    </item>
    
    <item>
      <title>当 TiDB 遇上 Jepsen</title>
      <link>https://pingcap.com/blog-cn/tidb-jepsen/</link>
      <pubDate>Tue, 15 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-jepsen/</guid>
      <description>本篇文章主要介绍 TiDB 是如何使用分布式一致性验证框架进行一致性验证的。</description>
    </item>
    
    <item>
      <title>Weekly update (August 07 ~ August 13, 2017)</title>
      <link>https://pingcap.com/weekly/2017-08-14-tidb-weekly/</link>
      <pubDate>Mon, 14 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-08-14-tidb-weekly/</guid>
      <description>Last week, we landed 78 PRs in the TiDB repositories and 28 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>How TiDB tackles fast data growth and complex queries for yuanfudao.com</title>
      <link>https://pingcap.com/success-stories/tidb-in-yuanfudao/</link>
      <pubDate>Tue, 08 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/success-stories/tidb-in-yuanfudao/</guid>
      <description>This document is a case study that details the reasons why yuanfudao.com chose TiDB as its backend database solution to tackle their fast data growth and complex queries.</description>
    </item>
    
    <item>
      <title>Weekly update (July 31 ~ August 06, 2017)</title>
      <link>https://pingcap.com/weekly/2017-08-07-tidb-weekly/</link>
      <pubDate>Mon, 07 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-08-07-tidb-weekly/</guid>
      <description>Last week, we landed 54 PRs in the TiDB repositories and 21 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.53】知乎数据平台实践</title>
      <link>https://pingcap.com/meetup/meetup-53-20170805/</link>
      <pubDate>Sat, 05 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-53-20170805/</guid>
      <description>今天的 Meetup，我们邀请到了知乎数据平台负责人王雨舟为大家做《知乎数据平台实践》的技术分享。
又是一个美好的周末，勤劳的小蜜蜂们早早出来参加活动了~🙂 今天的活动现场又是爆满~ 感觉要换地儿的节奏啊~
今天 Meetup 的开场，我司联合创始人兼 CTO 黄东旭同学首先为大家分享了 TiDB 项目的最新进展。黄东旭同学好开心的样子，因为就在昨天，TiDB 正式发布 RC4 版 。
开场过后，接下来由知乎数据平台负责人王雨舟（江湖人称宇宙哥）开始为大家做技术分享。
宇宙哥真是 PingCAP 的真爱粉儿~ 穿着我司的文化衫亮相活动现场，超级有气场~
以下是部分技术干货分享，Enjoy~
宇宙哥在演讲开始先介绍了知乎大数据平台的整体架构情况
并讲解了埋点流程及使用 Protobuf 做埋点标准化规范
除此之外，宇宙哥还从以下几点来分析介绍 Druid
在知乎的实践：
  自定义多维分析功能和留存分析功能；
  如何做到实时数据分析；
  自定义指标、维度、报表、文件夹、Dashboard。
  这张 PPT 中有眼熟的部分哦😏宇宙哥用“丝般顺滑”总结了自己现在使用 TiDB 的感受，并表达了对 TiSpark 的期待✌️分享结束后，显然大家都还没有尽兴，接下来是一段时长堪比分享环节的 QA。激烈的讨论后现场小伙伴跟宇宙哥都嗨了，还没有嗨够的小伙伴我们下次见~</description>
    </item>
    
    <item>
      <title>Weekly update (July 24 ~ July 30, 2017)</title>
      <link>https://pingcap.com/weekly/2017-07-31-tidb-weekly/</link>
      <pubDate>Mon, 31 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-07-31-tidb-weekly/</guid>
      <description>Last week, we landed 50 PRs in the TiDB repositories and 27 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>A TiKV Source Code Walkthrough - Raft in TiKV</title>
      <link>https://pingcap.com/blog/2017-07-28-raftintikv/</link>
      <pubDate>Fri, 28 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2017-07-28-raftintikv/</guid>
      <description>TiKV uses the Raft algorithm to implement the strong consistency of data in a distributed environment. This blog introduces the details how Raft is implemented.</description>
    </item>
    
    <item>
      <title>TiSpark (Beta) 用户指南</title>
      <link>https://pingcap.com/blog-cn/tispark/</link>
      <pubDate>Wed, 26 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tispark/</guid>
      <description>TiSpark 是 PingCAP 推出的为了解决用户复杂 OLAP 需求的产品。借助 Spark 平台本身的优势，同时融合 TiKV 分布式集群的优势，和 TiDB 一起为用户一站式解决 HTAP （Hybrid Transactional/Analytical Processing）需求。 TiSpark 依赖 TiKV 集群和 PD 的存在。当然，TiSpark 也需要你搭建一个 Spark 集群。本文简单介绍如何部署和使用 TiSpark。</description>
    </item>
    
    <item>
      <title>TiDB Best Practices</title>
      <link>https://pingcap.com/blog/2017-07-24-tidbbestpractice/</link>
      <pubDate>Mon, 24 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2017-07-24-tidbbestpractice/</guid>
      <description>This article summarizes some best practices in using TiDB, mainly including SQL usage, OLAP/OLTP optimization techniques and especially TiDB&#39;s exclusive optimization switches.</description>
    </item>
    
    <item>
      <title>Weekly update (July 17 ~ July 23, 2017)</title>
      <link>https://pingcap.com/weekly/2017-07-24-tidb-weekly/</link>
      <pubDate>Mon, 24 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-07-24-tidb-weekly/</guid>
      <description>Last week, we landed 60 PRs in the TiDB repositories and 19 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.52】TiDB 自动化运维管理 —— TiDB-Operator</title>
      <link>https://pingcap.com/meetup/meetup-52-20170722/</link>
      <pubDate>Sat, 22 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-52-20170722/</guid>
      <description>今天的 Meetup，由我司技术大拿邓栓同学为大家分享《TiDB 自动化运维管理 —— TiDB-Operator》。
 讲师介绍：邓栓，PingCAP SRE 工程师，Kubernetes 爱好者，目前主要负责 TiDB 与各种云平台整合。Rust 中国社区联合创始人。
 今日的帝都带着一丝凉爽，如此好天气怎能辜负。小伙伴们一清早就来到互动现场，一起来吃“营养早午餐”。
我司技术大拿邓栓同学激情满满的开始为大家做主题分享，主要从 TiDB-Operator 的功能介绍、整体架构、实现细节这几个纬度切入。
邓栓同学开场介绍到：分布式系统由于自身的复杂性，其管理和运维通常是非常困难的事情，借助 TiDB-Operator 我们能够轻松地将 TiDB 集群部署到 Kubernetes 集群之上，并做到自动化运维管理，极大地降低了人力运维成本，现场小伙伴们听呆了～
咦？what&#39;wrong ? 黑灯瞎火嘛呢？
其实是小伙伴们在一起很专注的看 demo 演示~
活动最后，邓栓同学通过 demo 演示了 TiDB-operator bootstrap 一套完整的 TiDB 集群，然后在集群上面执行一个简单的操作就可以轻松实现扩容缩容，并且模拟物理节点挂掉时 TiDB-operator 对集群做自动恢复等各种自动化运维操作流程。
以上为最新前方报道～ enjoy 😁</description>
    </item>
    
    <item>
      <title>TiDB Internal (III) - Scheduling</title>
      <link>https://pingcap.com/blog/2017-07-20-tidbinternal3/</link>
      <pubDate>Thu, 20 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2017-07-20-tidbinternal3/</guid>
      <description>This is the third one of three blogs to introduce TiDB internal.</description>
    </item>
    
    <item>
      <title>PAX：一个 Cache 友好高效的行列混存方案</title>
      <link>https://pingcap.com/blog-cn/pax/</link>
      <pubDate>Wed, 19 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/pax/</guid>
      <description>今年，Spanner 终于发了另一篇 Paper，Spanner - Becoming a SQL System，里面提到 Spanner 使用了一种新的存储格式 - Ressi，用来支持 OLTP 和 OLAP。在 Ressi 里面，使用了 PAX 来组织数据。因为 TiDB 定位就是一个 HTAP 系统，所以我也一直在思考在 TiKV 这层如何更好的存储数据，用来满足 HTAP 的需要，既然 Spanner 使用了 PAX，那么就有研究的必要了。</description>
    </item>
    
    <item>
      <title>gRPC-rs：从 C 到 Rust</title>
      <link>https://pingcap.com/blog-cn/grpc-rs/</link>
      <pubDate>Tue, 18 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/grpc-rs/</guid>
      <description>上篇文章中，我们讲到 TiKV 为了支持 gRPC，我们造了个轮子 gRPC-rs，本篇文章会简要地介绍一下这个库。</description>
    </item>
    
    <item>
      <title>Weekly update (July 10 ~ July 16, 2017)</title>
      <link>https://pingcap.com/weekly/2017-07-17-tidb-weekly/</link>
      <pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-07-17-tidb-weekly/</guid>
      <description>Last week, we landed 51 PRs in the TiDB repositories and 23 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>十分钟成为 Contributor 系列 | 重构内建函数进度报告</title>
      <link>https://pingcap.com/blog-cn/reconstruct-built-in-function-report/</link>
      <pubDate>Fri, 14 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/reconstruct-built-in-function-report/</guid>
      <description>为了方便社区同学更好地参与 TiDB 项目，本文一方面对继上一篇文章发布后参考社区的反馈对表达式计算框架所做的修改进行详细介绍，另一方面对尚未重写的 built-in 函数进行陈列。</description>
    </item>
    
    <item>
      <title>TiDB Internal (I) - Data Storage</title>
      <link>https://pingcap.com/blog/2017-07-11-tidbinternal1/</link>
      <pubDate>Tue, 11 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2017-07-11-tidbinternal1/</guid>
      <description>This is the first one of three blogs to introduce TiDB internal.</description>
    </item>
    
    <item>
      <title>TiDB Internal (II) - Computing</title>
      <link>https://pingcap.com/blog/2017-07-11-tidbinternal2/</link>
      <pubDate>Tue, 11 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2017-07-11-tidbinternal2/</guid>
      <description>This is the second one of three blogs to introduce TiDB internal.</description>
    </item>
    
    <item>
      <title>TiDB Best Practice</title>
      <link>https://pingcap.com/blog-cn/tidb-best-practice/</link>
      <pubDate>Wed, 05 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-best-practice/</guid>
      <description>本文档用于总结在使用 TiDB 时候的一些最佳实践，主要涉及 SQL 使用、OLAP/OLTP 优化技巧，特别是一些 TiDB 专有的优化开关。建议先阅读讲解 TiDB 原理的三篇文章(讲存储，说计算，谈调度)，再来看这篇文章。</description>
    </item>
    
    <item>
      <title>Weekly update (June 26 ~ July 02, 2017)</title>
      <link>https://pingcap.com/weekly/2017-07-04-tidb-weekly/</link>
      <pubDate>Tue, 04 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-07-04-tidb-weekly/</guid>
      <description>Last week, we landed 33 PRs in the TiDB repositories and 12 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.51】百度统一分布式计算框架 Bigflow (内附 PPT 下载链接)</title>
      <link>https://pingcap.com/meetup/meetup-51-20170701/</link>
      <pubDate>Sat, 01 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-51-20170701/</guid>
      <description>今天的 Meetup，我们邀请到了滴滴地图事业部专家工程师王聪老师，为大家分享《百度统一分布式计算框架 Bigflow 》。
活动现场听得很专注的小伙伴们，桑拿天也阻止不了大家的学习热情。
 讲师介绍：王聪，滴滴地图事业部专家工程师，前百度基础架构部工程师，主要工作方向为分布式计算与流式计算，在百度负责计算表示层 Bigflow 与流式计算引擎 Flink。
 王聪老师首先展示了分布式计算在百度的发展例程，他介绍百度在 2003 年建立了自己的分布式搜索系统。08 年引入 hadoop，09 年底搭建了大规模的机器学习平台，当时用的是 MPI。10 年百度自研了两套流式计算引擎，主要用来完成点击流与展现流的 join。
基于多引擎并存、跨引擎成本高、升级困难这几个痛点，最终开发了一款叫做 Bigflow 的计算框架，Bigflow 希望用户使用我们提供的 API 写代码，Bigflow 将作业进行计划的优化和翻译，并提交到计算引擎之上。对于这样的思路，有一种说法“计算机领域的任何问题，都可以通过增加一个额外的中间层来解决”。在这里 Bigflow 就是架在用户与引擎之间的中间层。
以下是新鲜出炉的 PPT 节选，尽情享用~
附：完整 PPT 链接</description>
    </item>
    
    <item>
      <title>Refactoring the Built-in Functions in TiDB</title>
      <link>https://pingcap.com/blog/2017-06-27-refactor-builtin/</link>
      <pubDate>Tue, 27 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2017-06-27-refactor-builtin/</guid>
      <description>In order to accelerate expression evaluation, we recently refactored its framework. This tutorial will show you how to use the new computational framework to rewrite or add a built-in function in TiDB.</description>
    </item>
    
    <item>
      <title>Weekly update (June 19 ~ June 25, 2017)</title>
      <link>https://pingcap.com/weekly/2017-06-26-tidb-weekly/</link>
      <pubDate>Mon, 26 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-06-26-tidb-weekly/</guid>
      <description>Last week, we landed 35 PRs in the TiDB repositories and 24 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>工欲性能调优，必先利其器（2）- 火焰图</title>
      <link>https://pingcap.com/blog-cn/flame-graph/</link>
      <pubDate>Mon, 26 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/flame-graph/</guid>
      <description>本篇文章将介绍一下，我们在 TiKV 性能调优上面用的最多的工具 - 火焰图。</description>
    </item>
    
    <item>
      <title>十分钟成为 Contributor 系列 | 为 TiDB 重构 built-in 函数</title>
      <link>https://pingcap.com/blog-cn/reconstruct-built-in-function/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/reconstruct-built-in-function/</guid>
      <description>为了加速表达式计算速度，最近我们对表达式的计算框架进行了重构，这篇教程为大家分享如何利用新的计算框架为 TiDB 重写或新增 built-in 函数。</description>
    </item>
    
    <item>
      <title>Weekly update (June 12 ~ June 18, 2017)</title>
      <link>https://pingcap.com/weekly/2017-06-20-tidb-weekly/</link>
      <pubDate>Tue, 20 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-06-20-tidb-weekly/</guid>
      <description>Last week, we landed 30 PRs in the TiDB repositories and 14 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>深入了解 gRPC：协议</title>
      <link>https://pingcap.com/blog-cn/grpc/</link>
      <pubDate>Sun, 18 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/grpc/</guid>
      <description>经过很长一段时间的开发，TiDB 终于发了 RC3。RC3 版本对于 TiKV 来说最重要的功能就是支持了 gRPC，也就意味着后面大家可以非常方便的使用自己喜欢的语言对接 TiKV 了。gRPC 是基于 HTTP/2 协议的，要深刻理解 gRPC，理解下 HTTP/2 是必要的，这里先简单介绍一下 HTTP/2 相关的知识，然后再介绍下 gRPC 是如何基于 HTTP/2 构建的。</description>
    </item>
    
    <item>
      <title>来自 PingCAP CEO 的信：说在 B 轮融资完成之际</title>
      <link>https://pingcap.com/blog-cn/series-B-funding/</link>
      <pubDate>Tue, 13 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/series-B-funding/</guid>
      <description>平时技术说得多，今天说点走心的。</description>
    </item>
    
    <item>
      <title>Weekly update (June 06 ~ June 11, 2017)</title>
      <link>https://pingcap.com/weekly/2017-06-12-tidb-weekly/</link>
      <pubDate>Mon, 12 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-06-12-tidb-weekly/</guid>
      <description>Last week, we landed 52 PRs in the TiDB repositories and 25 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>使用 Ansible 安装部署 TiDB</title>
      <link>https://pingcap.com/blog-cn/deployment-by-ansible/</link>
      <pubDate>Thu, 08 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/deployment-by-ansible/</guid>
      <description>作为一个分布式系统，在多个节点分别配置安装服务会相当繁琐。Ansible 是基于 Python 的自动化运维工具，糅合了众多老牌运维工具的优点实现了批量操作系统配置、批量程序的部署、批量运行命令等功能，而且使用简单，仅需在管理工作站上安装 Ansible 程序配置被管控主机的 IP 信息，被管控的主机无客户端。选用自动化工具 Ansible 来批量的安装、配置、部署 TiDB 。本文介绍如何通过 Ansible 工具来批量安装，使整个过程简单化。</description>
    </item>
    
    <item>
      <title>三篇文章了解 TiDB 技术内幕 - 谈调度</title>
      <link>https://pingcap.com/blog-cn/tidb-internal-3/</link>
      <pubDate>Tue, 06 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-internal-3/</guid>
      <description>任何一个复杂的系统，用户感知到的都只是冰山一角，数据库也不例外。前两篇文章介绍了 TiKV、TiDB 的基本概念以及一些核心功能的实现原理，这两个组件一个负责 KV 存储，一个负责 SQL 引擎，都是大家看得见的东西。在这两个组件的后面，还有一个叫做 PD（Placement Driver）的组件，虽然不直接和业务接触，但是这个组件是整个集群的核心，负责全局元信息的存储以及 TiKV 集群负载均衡调度。本篇文章介绍一下这个神秘的模块。这部分比较复杂，很多东西大家平时不会想到，也很少在其他文章中见到类似的东西的描述。我们还是按照前两篇的思路，先讲我们需要什么样的功能，再讲我们如何实现，大家带着需求去看实现，会更容易的理解我们做这些设计时背后的考量。</description>
    </item>
    
    <item>
      <title>Weekly update (May 22 ~ June 05, 2017)</title>
      <link>https://pingcap.com/weekly/2017-06-05-tidb-weekly/</link>
      <pubDate>Mon, 05 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-06-05-tidb-weekly/</guid>
      <description>Last two weeks, we landed 53 PRs in the TiDB repositories and 33 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.49】TiDB Best Practice</title>
      <link>https://pingcap.com/meetup/meetup-49-20170603/</link>
      <pubDate>Sat, 03 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-49-20170603/</guid>
      <description>今日的 Meetup，我司 Engineering VP 申砾同学亲自上阵，为大家分享了《TiDB Best Practice 》，好多使用经验及背后技术实现原理都是首次揭秘（当然，包括彩蛋）。
 讲师介绍：申砾，PingCAP Engineering VP，前网易有道词典服务器端核心开发，前奇虎 360 新闻推荐系统 / 地图基础数据与检索系统 Tech Lead。
 TiDB 是一个分布式数据库，支持 MySQL 协议以及语法，在一些场景中都可以无缝替换 MySQL，以获得分布式的好处。但是分布式数据库有其自身的特点，想要在业务中用好需要遵循一些实践原则。
本次分享申砾同学首先介绍了 TiDB 的一些关键部分的实现原理，理解这些内部实现有利于理解 TiDB 的外在表现。然后与大家讨论了应用数据库时的典型操作的最佳实践以及要注意的事项，并对 TiDB 的适用场景进行了讲解。
PPT 很干，一点水都挤不出来&amp;hellip;随便放几张你们感受下┑(￣Д ￣)┍
最后，申砾同学还分享了 TiDB 最近的一些项目进展，并首次公开披露 PingCAP 最新动向：独立研发的 TiDB 专用的 Spark Connector 即将上线。
Spark 是当下最流行的大数据分析系统，拥有活跃的社区。PingCAP 希望能够将 TiDB 与 Spark 相结合，通过 Spark 对 TiDB 中存储的数据做实时分析，以融入这个生态。为了保证这个连接过程尽可能的高效，所以除了基本的 JDBC Connector 之外，便有了 TiDB 专用的 Spark Connector。
附：完整 PPT 链接
彩蛋来啦 视频：Demo of Spark on TiDB</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.45】Rust in TiKV</title>
      <link>https://pingcap.com/blog-cn/rust-in-tikv/</link>
      <pubDate>Wed, 31 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/rust-in-tikv/</guid>
      <description>本文整理自 4 月 16 日 Rust 专场 Meetup 上，我司首席架构师唐刘同学的现场分享，共享给大家。enjoy~
 Hello everyone, today I will talk about how we use Rust in TiKV.
Before we begin, let me introduce myself. My name is TangLiu, the Chief Architect of PingCAP. Before I joined PingCAP, I had worked at Kingsoft and Tencent. I love open source and have developed some projects like LedisDB, go-mysql, etc…
At first, I will explain the reason why we chose Rust to develop TiKV, then show you the architecture of TiKV briefly and the key technologies.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.45】Rust in TiKV</title>
      <link>https://pingcap.com/meetup/recording/rust-in-tikv/</link>
      <pubDate>Wed, 31 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/recording/rust-in-tikv/</guid>
      <description>本文整理自 2017 年 4 月 16 日 Rust 专场 Meetup 上，我司首席架构师唐刘同学的现场分享，共享给大家。enjoy~</description>
    </item>
    
    <item>
      <title>工欲性能调优，必先利其器（1）</title>
      <link>https://pingcap.com/blog-cn/iostat-perf-strace/</link>
      <pubDate>Wed, 31 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/iostat-perf-strace/</guid>
      <description>最近在排查 TiDB 性能问题的时候，通过工具发现了一些问题，觉得有必要记录一下，让自己继续深刻的去理解相关工具的使用，也同时让同学们对类似问题的时候别再踩坑。</description>
    </item>
    
    <item>
      <title>Rust in TiKV</title>
      <link>https://pingcap.com/blog/2017-05-27-rust-in-tikv/</link>
      <pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2017-05-27-rust-in-tikv/</guid>
      <description>This is the speech Siddon Tang gave at the 1st Rust Meetup in Beijing on April 16, 2017.</description>
    </item>
    
    <item>
      <title>三篇文章了解 TiDB 技术内幕 - 说计算</title>
      <link>https://pingcap.com/blog-cn/tidb-internal-2/</link>
      <pubDate>Wed, 24 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-internal-2/</guid>
      <description>上一篇介绍了 TiDB 如何存储数据，也就是 TiKV 的一些基本概念。本篇将介绍 TiDB 如何利用底层的 KV 存储，将关系模型映射为 Key-Value 模型，以及如何进行 SQL 计算。</description>
    </item>
    
    <item>
      <title>A Brief Introduction of TiDB</title>
      <link>https://pingcap.com/blog/2017-05-23-perconalive17/</link>
      <pubDate>Tue, 23 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2017-05-23-perconalive17/</guid>
      <description>This is the speech Edward Huang gave at Percona Live Open Source Database Conference 2017.</description>
    </item>
    
    <item>
      <title>Migration from MySQL to TiDB to handle tens of millions of rows of data per day</title>
      <link>https://pingcap.com/blog/2017-05-22-Comparison-between-MySQL-and-TiDB-with-tens-of-millions-of-data-per-day/</link>
      <pubDate>Mon, 22 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2017-05-22-Comparison-between-MySQL-and-TiDB-with-tens-of-millions-of-data-per-day/</guid>
      <description>This document is a use case that details the performance of MySQL and TiDB with tens of millions of rows of data per day.</description>
    </item>
    
    <item>
      <title>Weekly update (May 15 ~ May 21, 2017)</title>
      <link>https://pingcap.com/weekly/2017-05-22-tidb-weekly/</link>
      <pubDate>Mon, 22 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-05-22-tidb-weekly/</guid>
      <description>Last week, we landed 31 PRs in the TiDB repositories and 16 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>Weekly update (May 08 ~ May 14, 2017)</title>
      <link>https://pingcap.com/weekly/2017-05-15-tidb-weekly/</link>
      <pubDate>Mon, 15 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-05-15-tidb-weekly/</guid>
      <description>Last week, we landed 28 PRs in the TiDB repositories and 17 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>三篇文章了解 TiDB 技术内幕 - 说存储</title>
      <link>https://pingcap.com/blog-cn/tidb-internal-1/</link>
      <pubDate>Mon, 15 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-internal-1/</guid>
      <description>数据库、操作系统和编译器并称为三大系统，可以说是整个计算机软件的基石。其中数据库更靠近应用层，是很多业务的支撑。这一领域经过了几十年的发展，不断的有新的进展。很多人用过数据库，但是很少有人实现过一个数据库，特别是实现一个分布式数据库。了解数据库的实现原理和细节，一方面可以提高个人技术，对构建其他系统有帮助，另一方面也有利于用好数据库。研究一门技术最好的方法是研究其中一个开源项目，数据库也不例外。单机数据库领域有很多很好的开源项目，其中 MySQL 和 PostgreSQL 是其中知名度最高的两个，不少同学都看过这两个项目的代码。但是分布式数据库方面，好的开源项目并不多。 TiDB 目前获得了广泛的关注，特别是一些技术爱好者，希望能够参与这个项目。由于分布式数据库自身的复杂性，很多人并不能很好的理解整个项目，所以我希望能写一些文章，自顶向下，由浅入深，讲述 TiDB 的一些技术原理，包括用户可见的技术以及大量隐藏在 SQL 界面后用户不可见的技术点。</description>
    </item>
    
    <item>
      <title>基于 Tile 连接 Row-Store 和 Column-Store</title>
      <link>https://pingcap.com/blog-cn/tile-row-store/</link>
      <pubDate>Sun, 14 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tile-row-store/</guid>
      <description>在之前的 Kudu 的文章里面已经提到过，行列混存是一个非常有意思的研究方向，因为不同的存储方式有不同的针对应用场景，但作为技术人员，折腾是天性，所以大家都在研究如何融合行存和列存，让一个服务能尽量满足大部分应用需求，而这也是 TiDB 在努力的方向。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.48】分布式对象存储面临的挑战</title>
      <link>https://pingcap.com/meetup/meetup-48-20170513/</link>
      <pubDate>Sat, 13 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-48-20170513/</guid>
      <description>今天的 Meetup，我们请到了来自白山云的张炎泼老师，为大家分享《分布式对象存储面临的挑战》。
 讲师介绍：张炎泼 (xp)，30 年软件开发经验，物理系背叛者，设计师眼中的美工，bug maker，vim 死饭，悬疑片脑残粉。曾就职新浪，美团。现在白山云，不是白云山。
 在本次分享中，张炎泼老师从：海量小文件如何存储、如何节省存储成本、如何实现数据的自动恢复，三个方面，为大家进行了详细讲解。
以下是本期 PPT 节选
附：完整 PPT 下载链接</description>
    </item>
    
    <item>
      <title>Kudu - 一个融合低延迟写入和高性能分析的存储系统</title>
      <link>https://pingcap.com/blog-cn/kudu/</link>
      <pubDate>Mon, 08 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/kudu/</guid>
      <description>Kudu 是一个基于 Raft 的分布式存储系统，它致力于融合低延迟写入和高性能分析这两种场景，并且能很好的嵌入到 Hadoop 生态系统里面，跟其他系统譬如 Cloudera Impala，Apache Spark 等对接。</description>
    </item>
    
    <item>
      <title>Weekly update (May 01 ~ May 07, 2017)</title>
      <link>https://pingcap.com/weekly/2017-05-08-tidb-weekly/</link>
      <pubDate>Mon, 08 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-05-08-tidb-weekly/</guid>
      <description>Last week, we landed 33 PRs in the TiDB repositories and 13 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.47】分布式定时任务中间件架构 Elastic-Job 的两种实现</title>
      <link>https://pingcap.com/meetup/meetup-47-20170506/</link>
      <pubDate>Sat, 06 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-47-20170506/</guid>
      <description>今天的 Meetup ，我们请到了当当架构部负责人张亮，大家分享了《分布式定时任务中间件架构 Elastic-Job 的两种实现》。
 讲师介绍：张亮，当当架构部负责人，主要负责分布式中间件以及私有云平台的搭建。致力于开源，目前主导两个开源项目 elastic-job 和 sharding-jdbc。擅长以 java 为主分布式架构以及以 Mesos 为主的云平台方向，推崇优雅代码，对如何写出具有展现力的代码有较多研究。
 今日帝都依然大风，但小伙伴们学习的热情丝毫未减哦~
在本次分享中，张亮老师从分布式定时任务中间件的适用场景，轻量级去中心化架构方案以及基于 Mesos 的中心化架构方案，三个方面为大家进行了详细讲解。
在互联网应用中，各式各样的定时任务存于系统的各个角落，我们希望由一个平台统一将这些作业管理起来。然而，一旦平台中运行大量的作业，发现异常作业并手动处理难免会感到繁琐，同时人工处理还会带来很多其他的额外成本。如何最大限度的减少人工干预？
高可用可以让作业在被系统发现宕机之后能自动切换。而弹性化可以认为是高可用的进阶版本，在高可用的同时还能够提升效率和充分利用资源。对于动态的扩容和缩容，通常采用分片的方式实现。
去中心化架构是指所有的作业节点都是对等的，优点是轻量级，部署成本低；缺点则是，如果各作业服务器时钟不一致会产生同一作业的不同分片运行有先有后，缺乏统一调度，并且不能跨语言。
中心化架构将系统分为调度节点和执行节点，可以解决服务器时间差以及跨语言的问题；缺点是部署和运维稍复杂。
Elastic-Job 最初的版本分离于当当内部的应用框架 ddframe，是一个纯 Java 实现的分布式方案，参照 dubbo 的方式，提供无中心化解决方案。
如今，Elastic-Job 已开源近 2 年，截止目前已更新发布18 次，GitHub Star 数近 2000，成绩出色。更有多个开源产品衍生自 Elastic-Job。
应小伙伴们的强烈要求，张亮老师临时加场 Demo 演示。
最后，还有超多第一手爆料，是属于现场听讲小伙伴们的专属福利 ✌️ 很心动？下周六，老时间，老地点，PingCAP 第 48 期 Infra Meetup 等你呦！</description>
    </item>
    
    <item>
      <title>Weekly update (April 24 ~ April 30, 2017)</title>
      <link>https://pingcap.com/weekly/2017-05-02-tidb-weekly/</link>
      <pubDate>Tue, 02 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-05-02-tidb-weekly/</guid>
      <description>Last week, we landed 49 PRs in the TiDB repositories and 16 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.46】MySQL 5.7 的特性及实践</title>
      <link>https://pingcap.com/meetup/meetup-46-20170422/</link>
      <pubDate>Sat, 22 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-46-20170422/</guid>
      <description>今天的 Meetup，我们邀请到了熊猫直播 DBA 杨尚刚老师，为大家分享《MySQL 5.7 的特性及实践》~
 讲师介绍：杨尚刚，熊猫直播高级 DBA，负责后端数据库平台建设和架构设计。前新浪高级数据库工程师，负责新浪微博核心数据库架构改造优化，以及数据库相关的服务器存储选型设计。
 2015 年最重磅的当属 MySQL 5.7 GA 的发布，号称 160 万只读 QPS，大有赶超 NoSQ L趋势。
不过官方的硬件测试环境是很高的，所以这个 160 万 QPS 对于大家测试来说，可能还比较遥远，所以实际测试的结果可能会失望。但是，至少我们看到了基于同样测试环境，MySQL 5.7 在性能上的改进，对于多核利用的改善。
本次分享中，杨老师讲解了 MySQL 5.7 在运维、优化器 Server 层、InnoDB 层等方面的优化，以及 MySQL 未来的发展趋势。
运维方面   动态修改 Buffer Pool
  MySQL redo log大小
  innodb_file_per_table
  query cache
  SQL_Mode
  binlog_rows_query_log_events
  max_execution_time
  replication info in tables</description>
    </item>
    
    <item>
      <title>演讲实录|黄东旭：Cloud-Native 的分布式数据库架构与实践</title>
      <link>https://pingcap.com/blog-cn/talk-cloud-native/</link>
      <pubDate>Sat, 22 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/talk-cloud-native/</guid>
      <description>4 月 19 日，我司 CTO 黄东旭同学在全球云计算开源大会上，发表了《Cloud-Native 的分布式数据库架构与实践》主题演讲，以下为演讲实录。</description>
    </item>
    
    <item>
      <title>Weekly update (April 10 ~ April 16, 2017)</title>
      <link>https://pingcap.com/weekly/2017-04-17-tidb-weekly/</link>
      <pubDate>Mon, 17 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-04-17-tidb-weekly/</guid>
      <description>Last week, we landed 26 PRs in the TiDB repositories and 18 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.45】Rust 专场</title>
      <link>https://pingcap.com/meetup/meetup-45-20170416/</link>
      <pubDate>Sun, 16 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-45-20170416/</guid>
      <description>今天，小伙伴们期待已久的北京 Rust Meetup 终于和大家见面啦！在这场 Rust 社区在中国的首次官方活动中，我们邀请了两位 Rust 团队核心成员，Alex Crichton、Brian Anderson，与我司首席架构师唐刘，共同为大家带来了干货十足的分享内容~第一手现场资料，看这里！
 这一次的 Meetup，小伙伴们都好积极 👏 提前一小时就有入场抢座位的~也是让小编感动到不行~~知道大家都已经迫不及待了，简单的开场之后，我们直接上干货！
Concurrency and asynchronous IO in Rust 并发在当今编程领域是如此重要，然而要想实现并发程序通常会面临数据竞争，竞态，死锁，悬空指针，多次 free 等问题，Alex 在本期 meetup 里给我们讲解了 Rust 是如何用 ownership/borrowing 系统解决这些问题的，其核心思想是:
  A mutable reference cannot be aliased
  A reference cannot outlive its referent
   讲师介绍：Alex Crichton，Mozilla 工程师，Rust 核心团队成员。从事 Rust 编程语言方面的工作已有 5 年。在 Mozilla 主要负责 Rust 的标准库、Cargo、异步 I/O 子系统以及 Rust 本身的基础设施。目前在做异步 I/O 栈 Tokio。</description>
    </item>
    
    <item>
      <title>Weekly update (March 27 ~ April 09, 2017)</title>
      <link>https://pingcap.com/weekly/2017-04-10-tidb-weekly/</link>
      <pubDate>Mon, 10 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-04-10-tidb-weekly/</guid>
      <description>Last two weeks, we landed 74 PRs in the TiDB repositories and 46 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.44】Elasticsearch 运维</title>
      <link>https://pingcap.com/meetup/meetup-44-20170408/</link>
      <pubDate>Sat, 08 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-44-20170408/</guid>
      <description>今天的 Meetup，我们邀请到去哪儿网的资深工程师徐磊，为大家分享关于 Elasticsearch 运维的那些事，跟小编一起走进现场吧~~
Elasticsearch 运维 Elasticsearch 在近两年越来越火了，越来越多的公司和团队尝试使用它支撑业务。运维人员如何保证 Elasticsearch 集群的稳定？有哪些必须掌握的优化技巧？
 讲师介绍：徐磊，2015 年加入去哪儿网平台事业部 OPSDEV 团队，负责实时日志系统的建设和运维工作，开源社区贡献者，曾供职于 Red Hat。
 在本次分享中，徐磊老师从数据模型设计，使用技巧，参数优化，监控对比等多个方面为大家分析了 Elasticsearch 的优缺点和运维重点。同时与大家分享了内部的 Elasticsearch 私有云的建设经验。
干货节选 来~这里还有讲师的 PPT 节选，一起看看，在 Elasticsearch 中，有哪些要注意的坑吧~~</description>
    </item>
    
    <item>
      <title>Weekly update (March 20 ~ March 26, 2017)</title>
      <link>https://pingcap.com/weekly/2017-03-27-tidb-weekly/</link>
      <pubDate>Mon, 27 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-03-27-tidb-weekly/</guid>
      <description>Last week, we landed 40 PRs in the TiDB repositories and 18 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>如何从零开始参与大型开源项目</title>
      <link>https://pingcap.com/blog-cn/how-to-contribute/</link>
      <pubDate>Mon, 27 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/how-to-contribute/</guid>
      <description>我们欢迎所有的具有气质的开发者能和 TiDB 一起成长，一起见证数据库领域的革新，改变世界这事儿有时候也不那么难。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.43】RocksDB 专场分享</title>
      <link>https://pingcap.com/meetup/meetup-43-20170325/</link>
      <pubDate>Sat, 25 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-43-20170325/</guid>
      <description>今天的 Meetup，是 RocksDB 专场哦~ :) 这一次，我们请到了来自 360 基础架构组的研发工程师，宋昭与赵安安，为大家分享了他们各自对 RocksDB 的独到见解及研发经验。没有机会来现场的小伙伴，这里有第一手现场资料~👇
Topic 1：RocksDB Write &amp;amp; Compaction  讲师介绍：宋昭，360 基础架构组研发工程师
 在本次分享中，宋昭老师基于 RocksDB 5.0.1 代码，为大家详细介绍了 RocksDB write、flush 及 compaction 的具体实现，并对照 LevelDB 来分析对比 RocksDB 在实现及策略上的各种优化。
以下是讲师 PPT 节选~~
Topic 2：RocksDB in Pika   讲师介绍：赵安安，360 基础架构组研发工程师
 赵安安老师从 RocksDB 在 Pika 中的应用情况来为大家进行了以下讲解： Pika 如何用 KV 实现多数据结构；基于这一设计，如何定制修改 RocksDB 实现 TTL 和 key 的秒删；特定接口的一些优化；以及使用 RocksDB 的一些经验。
讲师 PPT 节选， Again~
应众多身在异地的小伙伴们的强烈要求，本期 Meetup 临时开启了线上直播，上图有位帅气的兼职主播 :-D</description>
    </item>
    
    <item>
      <title>Weekly update (March 13 ~ March 19, 2017)</title>
      <link>https://pingcap.com/weekly/2017-03-20-tidb-weekly/</link>
      <pubDate>Mon, 20 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-03-20-tidb-weekly/</guid>
      <description>Last week, we landed 33 PRs in the TiDB repositories and 10 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.42】Spark 与机器学习</title>
      <link>https://pingcap.com/meetup/meetup-42-20170318/</link>
      <pubDate>Sat, 18 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-42-20170318/</guid>
      <description>今天的专场 Meetup 邀请到了 Apache Spark Committer 梁堰波～梁老师结合自己的经验为大家分享了话题《Spark 与机器学习》，让我们来回顾一下现场实况吧！
Spark 与机器学习 Apache Spark 已经成为业界标准的大规模数据处理的标准平台。Spark 的 MLlib 给机器学习工程师和数据科学家提供了一些最常用的机器学习算法库以及一个构建机器学习 pipeline 的工具。
 讲师介绍：梁堰波，Apache Spark Committer，开源爱好者，北京航空航天大学计算机硕士，曾就职于 Yahoo!、美团网、法国电信，具有大数据、数据挖掘和机器学习领域的项目经验。
 作为国内活跃的 Spark Committer 之一，
梁老师对 Spark 的理解非常深刻，
他首先为大家分享了 Spark 的基本架构，
又举例说明了 Spark 能够解决的主要问题。
在本次 Meetup 上，
梁老师还分享了 MLlib 的主要算法、
如何扩展 MLlib 算法等姿势~
最后，梁老师通过实际的应用案例，分享了如何使用 Spark 构建机器学习 pipeline。
今天小伙伴们热情高涨~</description>
    </item>
    
    <item>
      <title>十分钟成为 TiDB Contributor 系列 | 添加內建函数</title>
      <link>https://pingcap.com/blog-cn/add-a-built-in-function/</link>
      <pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/add-a-built-in-function/</guid>
      <description>最近我们对 TiDB 代码做了些改进，大幅度简化了添加內建函数的流程，这篇教程描述如何为 TiDB 新增 builtin 函数。首先介绍一些必需的背景知识，然后介绍增加 builtin 函数的流程，最后会以一个函数作为示例。</description>
    </item>
    
    <item>
      <title>Weekly update (March 06 ~ March 12, 2017)</title>
      <link>https://pingcap.com/weekly/2017-03-13-tidb-weekly/</link>
      <pubDate>Mon, 13 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-03-13-tidb-weekly/</guid>
      <description>Last week, we landed 30 PRs in the TiDB repositories and 13 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.41】大容量 redis 存储中间件（onestore）架构实践 &amp; TiKV RC2 性能大幅提升的秘密</title>
      <link>https://pingcap.com/meetup/meetup-41-20170311/</link>
      <pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-41-20170311/</guid>
      <description>今天的 Meetup，陌陌基础平台部门负责人杨建军与 PingCAP 核心研发工程师张金鹏，为大家分享了《大容量 redis 存储中间件（onestore）架构实践》与《TiKV RC2 性能大幅提升的秘密》两个话题 ，跟小编一起走进现场吧~
Topic 1: 大容量 redis 存储中间件（onestore）架构实践  讲师介绍：杨建军，陌陌基础平台部门负责人。先后参与过存储中间件、服务化框架、 统一配置中心、分布式调用跟踪系统等中间件架构设计以及研发工作。个人目前主要关注高并发系统架构、中间件研发、大数据平台、存储、团队管理等方向。
 从上线至今 5 年来，
陌陌用户快速增长，服务接口总访问量飙升，
其中存储总访问量达到千万级 /s。
这就要求后端存储的性能也随之提升，
稳定、高效的存储组件是解决这些问题的关键。
今天的 Meetup，
杨建军就为我们分享了
陌陌自研大容量存储中间件 onestore 发展过程、
架构选型、设计以及在陌陌应用情况。
以下是热气腾腾的干货PPT节选~
Topic 2: TiKV RC2 性能大幅提升的秘密  讲师介绍：张金鹏，PingCAP 核心成员，前百度资深研发工程师／京东数据库专家，《MariaDB 原理和实现》作者。
 3 月 1 日，TiDB 正式发布了 RC2 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作，对于 OLTP 场景，读写性能都有大幅度的提升。
在本次分享中，张金鹏为我们剖析了 TiKV 获得大幅性能提升的秘密，包括使用异步 Apply 大幅提升写性能、使用 prefix seek 提升读取性能、引入 memtable insert with hint 提升 Raft CF 的插入性能同时减少 CPU 的使用，以及针对单行只读事务的优化等等。</description>
    </item>
    
    <item>
      <title>TiKV 功能介绍 - Raft 的优化</title>
      <link>https://pingcap.com/blog-cn/optimizing-raft-in-tikv/</link>
      <pubDate>Tue, 07 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/optimizing-raft-in-tikv/</guid>
      <description>在分布式领域，为了保证数据的一致性，通常都会使用 Paxos 或者 Raft 来实现。但 Paxos 以其复杂难懂著称，相反 Raft 则是非常简单易懂，所以现在很多新兴的数据库都采用 Raft 作为其底层一致性算法，包括我们的 TiKV。</description>
    </item>
    
    <item>
      <title>Weekly update (February 27 ~ March 05, 2017)</title>
      <link>https://pingcap.com/weekly/2017-03-06-tidb-weekly/</link>
      <pubDate>Mon, 06 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-03-06-tidb-weekly/</guid>
      <description>Last week, we landed 21 PRs in the TiDB repositories and 8 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>TiDB 的正确使用姿势</title>
      <link>https://pingcap.com/blog-cn/how-to-use-tidb/</link>
      <pubDate>Sat, 04 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/how-to-use-tidb/</guid>
      <description>最近这几个月，特别是 TiDB RC1 发布后，越来越多的用户已经开始测试起来，也有很多朋友已经在生产环境中使用，我们这边也陆续的收到了很多用户的测试和使用反馈。非常感谢各位小伙伴和早期用户的厚爱，而且看了这么多场景后，也总结出了一些 TiDB 的使用实践 (其实 Spanner 的最佳实践大部分在 TiDB 中也是适用的，MySQL 最佳实践也是），也是借着 Google Cloud Spanner 发布的东风，看了一下 Spanner 官方的一些最佳实践文档，写篇文章讲讲 TiDB 以及分布式关系型数据库的一些正确的使用姿势，当然，时代也在一直发展，TiDB 也在不停的进化，这篇文章基本上只代表近期的一些观察。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.40】tcp 链接的建立与释放 &amp; 分布式数据库中统计信息的收集和使用</title>
      <link>https://pingcap.com/meetup/meetup-40-20170304/</link>
      <pubDate>Sat, 04 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-40-20170304/</guid>
      <description>今天的 Meetup，360 基础架构团队工程师吴晓飞和 PingCAP 研发工程师韩飞与大家分享了《tcp 链接的建立与释放》和《分布式数据库中统计信息的收集和使用》，快来看看现场吧~
Topic 1：tcp 链接的建立与释放 Speaker：吴晓飞
吴晓飞，360 基础架构团队工程师，曾参与 360 自主存储项目 bada 的开发，也是 360 开源项目 pika、mongosync 等主要开发者之一。
吴晓飞基于 linux-2.6.32 版本，
介绍了 tcp 连接在内核中的组织结构、
连接建立与释放的大致流程。 泼（P）泼（P）特（T）节选→_→
![ppt 图片]](media/meetup-40-20170304/3.jpeg)
![ppt 图片]](media/meetup-40-20170304/4.jpeg)
Topic 2：分布式数据库中统计信息的收集和使用 Speaker：韩飞
号称 PingCAP SQL 小王子的韩飞童鞋~
统计信息一般有四种做法：
采样（Sampling）、直方图（Histogram）、小波（Wavelet）和略图（Sketch），
韩飞童鞋围绕这四种方式进行了逐一的分析。
泼（P）泼（P）特（T）节选→_→
![ppt 图片]](media/meetup-40-20170304/6.png)
在分布式数据库中，直接使用采样的方式估算 Join Cost 或者计算 Range-Sum 虽然比较精准，但是会造成比较大的 overhead，而且对内存敏感，难以维护。一般对于非有序列会使用随即采样+全量排序的方式来构建直方图。
![ppt 图片]](media/meetup-40-20170304/7.png)
![ppt 图片]](media/meetup-40-20170304/8.png)
直方图的选择一般从两个方面去考量：一个是分桶策略（Bucket Scheme）；一个是每个桶的估算策略（Estimate Scheme）。
![ppt 图片]](media/meetup-40-20170304/9.png)
最后，在介绍了小波变换（Wavelet Transformation）和略图之后，韩飞童鞋结合 TiDB 的实践讨论了各种统计信息设计和使用方式的优劣，以及离线收集和在线更新的高效算法。
相信大家在这次 Meetup 里有所收获！</description>
    </item>
    
    <item>
      <title>Weekly update (February 19 ~ February 26, 2017)</title>
      <link>https://pingcap.com/weekly/2017-02-27-tidb-weekly/</link>
      <pubDate>Mon, 27 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-02-27-tidb-weekly/</guid>
      <description>Last week, we landed 39 PRs in the TiDB repositories and 25 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.39】百度 Galaxy 集群管理系统</title>
      <link>https://pingcap.com/meetup/meetup-39-20170225/</link>
      <pubDate>Sat, 25 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-39-20170225/</guid>
      <description>今天的 COISF 专场 Meetup
我们邀请到了百度工程师郝立飞老师
与大家分享百度 Galaxy 集群管理系统
郝立飞从 Galaxy 的背景引入，
为大家详细介绍了
Galaxy 的设计和使用、Galaxy 的功能，
同时，还分享了 Galaxy 的一些具体应用。
以下是节选的 PPT 截图，share 给大家~
听了郝立飞老师分享，大家是不是又涨姿势了呢^^
大家好认真呐，希望有所收获！</description>
    </item>
    
    <item>
      <title>Spanner - CAP, TrueTime and Transaction</title>
      <link>https://pingcap.com/blog-cn/Spanner-cap-truetime-transaction/</link>
      <pubDate>Tue, 21 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/Spanner-cap-truetime-transaction/</guid>
      <description>最近大家非常关注的一件事情就是 Google Spanner Cloud 的发布，这应该算是 NewSQL 又一个里程碑的事件。在本篇文章中，唐刘同学与大家分享了他自己对 Spanner 的理解，Spanner 的一些关键技术的实现以及与 TiDB 的相关对比。</description>
    </item>
    
    <item>
      <title>TiKV 功能介绍 - Lease Read</title>
      <link>https://pingcap.com/blog-cn/lease-read/</link>
      <pubDate>Tue, 21 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/lease-read/</guid>
      <description>在 TiKV 里面，从最开始的 Raft log read，到后面的 Lease Read，我们一步一步的在保证线性一致性的情况下面改进着性能。后面，我们会引入更多的一致性测试 case 来验证整个系统的安全性，当然，也会持续的提升性能。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.38】深入解读 Google Spanner</title>
      <link>https://pingcap.com/meetup/meetup-38-20170218/</link>
      <pubDate>Sat, 18 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-38-20170218/</guid>
      <description>视频 | Google Cloud Spanner 小科普   Google 宣布了其 Cloud Spanner 云端数据库服务的 Beta 版测试启动。对此，各方报道层出，大家被新闻刷屏的同时也提出了不少疑问。本期 Meetup 邀请了我司 CEO 刘奇为大家深入解读 Google Spanner，同时与大家讨论了 Spanner 存在的一些限制以及背后的原因。
 开始之前，活动报名的人数已达上限
没有成功报名的小伙伴也准时赶来
很是感动~
Meetup 现场，刘奇为大家多层次详细对比介绍了 Google Spanner 和 TiDB：
Google Spanner 的事务模型和 TiDB 事务模型的差异；事务的隔离级别以及不同选择背后的原因；为什么 Spanner 选择悲观锁，而 TiDB 选择了乐观锁；数据分片大小对实际使用场景的影响。
此外，在分析了 Spanner 的最佳实践，以及架构对最佳实践的直接影响之后，刘奇还分享了 Spanner 的 TrueTime API 在跨数据中心的优势，推测未来 Google 会在云上提供 TrueTime API。并解读了 TiDB 在没有原子钟的情况下做了哪些优化来降低延迟，以及后续对调度器的改进计划。
满满的干货内容，伙伴们听嗨了，讲师也讲嗨了~
让我们一起走进活动现场吧~
……(⊙﹏⊙)
30 分钟自由讨论环节
本期 Meetup 特别设置了半小时的讨论环节
各位伙伴都热情满满地讨论并分享了自己的观点
更提出了一些疑问~
本次 Meetup 就在大家意犹未尽的会后讨论中~</description>
    </item>
    
    <item>
      <title>Weekly update (February 06 ~ February 12, 2017)</title>
      <link>https://pingcap.com/weekly/2017-02-13-tidb-weekly/</link>
      <pubDate>Mon, 13 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-02-13-tidb-weekly/</guid>
      <description>Last two weeks, we landed 25 PRs in the TiDB repositories and 14 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>Weekly update (January 23 ~ February 05, 2017)</title>
      <link>https://pingcap.com/weekly/2017-02-05-tidb-weekly/</link>
      <pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-02-05-tidb-weekly/</guid>
      <description>Last two weeks, we landed 43 PRs in the TiDB repositories and 20 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>Weekly update (January 09 ~ January 22, 2017)</title>
      <link>https://pingcap.com/weekly/2017-01-24-tidb-weekly/</link>
      <pubDate>Tue, 24 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-01-24-tidb-weekly/</guid>
      <description>Last two weeks, we landed 87 PRs in the TiDB repositories and 50 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>TiKV 功能介绍 - PD Scheduler</title>
      <link>https://pingcap.com/blog-cn/pd-scheduler/</link>
      <pubDate>Mon, 23 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/pd-scheduler/</guid>
      <description>在前面的文章里面，我们介绍了 PD 一些常用功能，以及它是如何跟 TiKV 进行交互的，这里，我们重点来介绍一下 PD 是如何调度 TiKV 的。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.37】PD 调度的实现 &amp; 主流分布式文件系统对比介绍</title>
      <link>https://pingcap.com/meetup/meetup-37-20170114/</link>
      <pubDate>Sat, 14 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-37-20170114/</guid>
      <description>今天是 COISF 专场 Meetup， PingCAP 工程师黄华超和百度网页搜索部基础架构工程师杨策分别与大家分享了《PD 调度的实现》以及《主流分布式文件系统对比介绍》。
Topic 1：PD 调度的实现  讲师介绍：黄华超，PingCAP 工程师，曾就职于微信、好赞科技，从事分布式存储相关工作，现负责 PingCAP PD 研发工作。
 Content：
本次分享主要介绍 PD 是如何实现资源调度的。PD 主要涉及三种调度，分别是 Leader，Storage 和 Replica 调度。Leader 调度是为了让集群的所有节点的负载均衡，Storage 调度的作用是让集群的所有节点的磁盘使用率均衡，Replica 调度则是为了让所有的 Region 有足够的副本数，包括节点故障或者是节点下线的调度。最后还介绍了如何在不同的数据中心、机架以及机器上进行调度。
Topic 2：主流分布式文件系统对比介绍  讲师介绍：杨策，百度网页搜索部基础架构工程师，现主要从事分布式文件系统 BFS 相关的研发工作。
 Content：
分布式文件系统是很多分布式系统里的重要组件，除了可以进行文件存储之外，在此之上可以构造诸如分布式数据库，消息队列等诸多系统。而根据这些系统对元数据量，可扩展性，可用性的不同需求，分布式文件系统又衍生出众多不同的设计和实现。
本次分享的主要内容是对主流的分布式文件系统进行对比介绍，使大家对于不同业务特性、对于分布式文件系统选型的影响有了进一步了解，同时介绍了百度文件系统BFS在设计和实现上的不同之处 。</description>
    </item>
    
    <item>
      <title>TiKV 功能介绍 - Placement Driver</title>
      <link>https://pingcap.com/blog-cn/placement-driver/</link>
      <pubDate>Sun, 08 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/placement-driver/</guid>
      <description>Placement Driver (后续以 PD 简称) 是 TiDB 里面全局中心总控节点，它负责整个集群的调度，负责全局 ID 的生成，以及全局时间戳 TSO 的生成等。PD 还保存着整个集群 TiKV 的元信息，负责给 client 提供路由功能。</description>
    </item>
    
    <item>
      <title>Weekly update (January 02 ~ January 08, 2017)</title>
      <link>https://pingcap.com/weekly/2017-01-08-tidb-weekly/</link>
      <pubDate>Sun, 08 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-01-08-tidb-weekly/</guid>
      <description>Last week, we landed 38 PRs in the TiDB repositories and 15 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.36】Tera 的单机存储引擎 &amp; 机器学习之我见</title>
      <link>https://pingcap.com/meetup/meetup-36-20170107/</link>
      <pubDate>Sat, 07 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-36-20170107/</guid>
      <description>今天是 COISF 专场 Meetup，分享的主题为《Tera 的单机存储引擎的设计与实现》以及《机器学习之我见》。
Topic 1：Tera 的单机存储引擎的设计与实现 Speaker：蔡杰明，百度网页搜索部基础架构工程师，现主要工作从事 Tera 相关的研发工作。
Content：Tera 是一个高性能、可伸缩的结构化数据存储系统，被设计用来管理搜索引擎万亿量级的超链与网页信息。Tera 的出现，使得众多业务从基于 map-reduce 批量计算转变为基于 Tera 的实时计算，结果的时效性获得巨大提升；而依赖于 Tera 的高可扩展，实现了业务的计算能力能轻松扩展到数千机器。
本次分享的主要内容是 Tera 的单机存储引擎的设计与实现。通过介绍单机存储引擎的原理，让大家了解 Tera 是如何实现高效的负载均衡和高性能的随机读写。
Topic 2：机器学习之我见 Speaker：袁进辉，2003 年 7 月以年级第一名毕业于西安电子科技大学计算机学院，并被免试推荐入清华大学计算机系攻读博士学位，师从张钹院士，研究方向为计算机视觉及机器学习，2008 年 7 月获得工学博士学位，博士论文获得清华大学优秀博士学位论文奖，同年留校做师资博士后。2004 至 2007 年参与美国国家技术标准局组织的视频检索评测，获得多项第一。2010 年，与国家体育总局合作，负责研发斯诺克比赛“鹰眼”系统，目前该系统服务于各项国际大赛，并被国家队作为日常训练辅助系统。2011 年加入网易有道，任高级应用研究员。 2012 年作为早期成员加入 360 搜索团队，一年之后，产品上线成为国内市场份额第二的搜索引擎。 2013 年加入微软亚洲研究院，主要从事大规模机器学习平台的研发工作。 2014 年，首次将训练 LDA 主题模型的吉布斯采样算法的计算复杂度降到单个词为常数级，基于该算法的分布式实现仅需数十台服务器即可完成以往数千台服务器才能完成的任务。 2015 年至今，专注于搭建基于异构集群的深度学习平台。 2016 年 11 月开始创业。工作之余，乐于在新浪微博讨论技术问题，绰号老师木。
Content：机器学习原理及应用。介绍机器学习的基本原理，它在数学和哲学上假设和依据，机器学习能做什么和不能做什么，应用机器学习解决实际问题时的几个关键点。</description>
    </item>
    
    <item>
      <title>About the TiDB Source Code</title>
      <link>https://pingcap.com/blog/2017-01-06-about-the-tidb-source-code/</link>
      <pubDate>Fri, 06 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2017-01-06-about-the-tidb-source-code/</guid>
      <description>The target audience of this document is the contributors in the TiDB community. The document aims to help them understand the TiDB project. It covers the system architecture, the code structure, and the execution process.</description>
    </item>
    
    <item>
      <title>TiKV 源码解析系列 - multi-raft 设计与实现</title>
      <link>https://pingcap.com/blog-cn/the-design-and-implementation-of-multi-raft/</link>
      <pubDate>Tue, 03 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/the-design-and-implementation-of-multi-raft/</guid>
      <description>本文档主要面向 TiKV 社区开发者，主要介绍 TiKV 的系统架构，源码结构，流程解析。目的是使得开发者阅读文档之后，能对 TiKV 项目有一个初步了解，更好的参与进入 TiKV 的开发中。</description>
    </item>
    
    <item>
      <title>Weekly update (December 26 ~ January 01, 2017)</title>
      <link>https://pingcap.com/weekly/2017-01-01-tidb-weekly/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2017-01-01-tidb-weekly/</guid>
      <description>Last week, we landed 28 PRs in the TiDB repositories and 19 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>TiKV 源码解析系列 - 如何使用 Raft</title>
      <link>https://pingcap.com/blog-cn/tikv-how-to-use-raft/</link>
      <pubDate>Mon, 26 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tikv-how-to-use-raft/</guid>
      <description>本系列文章主要面向 TiKV 社区开发者，重点介绍 TiKV 的系统架构，源码结构，流程解析。目的是使得开发者阅读之后，能对 TiKV 项目有一个初步了解，更好的参与进入 TiKV 的开发中。需要注意，TiKV 使用 Rust 语言编写，用户需要对 Rust 语言有一个大概的了解。另外，本系列文章并不会涉及到 TiKV 中心控制服务 Placement Driver(PD) 的详细介绍，但是会说明一些重要流程 TiKV 是如何与 PD 交互的。TiKV 是一个分布式的 KV 系统，它采用 Raft 协议保证数据的强一致性，同时使用 MVCC + 2PC 的方式实现了分布式事务的支持。</description>
    </item>
    
    <item>
      <title>Weekly update (December 19 ~ December 25, 2016)</title>
      <link>https://pingcap.com/weekly/2016-12-26-tidb-weekly/</link>
      <pubDate>Mon, 26 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-12-26-tidb-weekly/</guid>
      <description>TiDB RC1 is released! Last week, we landed 34 PRs in the TiDB repositories and 14 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.35】Sofa-pbrpc 设计与实现 &amp; 自底向上纵览 TiKV 架构</title>
      <link>https://pingcap.com/meetup/meetup-35-20161224/</link>
      <pubDate>Sat, 24 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-35-20161224/</guid>
      <description>今天是平安夜，在圣诞钟声敲响之前，COISF 的专场 Meetup 也带着满满的平安夜祝福与大家相聚在周末，本周分享的主题是《Sofa-pbrpc 设计与实现》以及《自底向上纵览 TiKV 架构》。
Topic 1：Sofa-pbrpc 设计与实现  讲师介绍：张頔，百度网页搜索部基础架构工程师。
 Content：
Sofa-pbrpc 是一个基于 protobuf 的轻量级网络通信框架，在百度搜索架构中广泛应用。单机百万 QPS，接近 ping 的延迟，支持网络流控和多种开发语言。本次分享整体介绍了 Sofa-pbrpc 的设计特点和使用方法。
Topic 2：自底向上纵览 TiKV 架构  讲师介绍：黄梦龙( disksing ) ，COISF TiKV Committer，开源爱好者，PingCAP 工程师，现主要负责 TiDB/TiKV 中分布式事务相关研发工作。
 Content：
分布式开源 Key-Value 存储引擎 TiKV 是 TiDB 项目的重要组成部分，从项目立项至今不到一年时间，已经成功应用于多个产品的生产环境中，这得益于来自开源社区的大量帮助，同时也离不开项目自身良好的分层架构。
本次分享从自底向上的角度剖析分布式 TiKV 的各个组件，阐释其实现高可用、强一致、在线水平扩展、分布式事务的原理，分享在项目构建过程中的一些设计和思考。
分享提纲：</description>
    </item>
    
    <item>
      <title>Adding Built-in Functions</title>
      <link>https://pingcap.com/blog/2016-12-19-adding-built-in-function/</link>
      <pubDate>Mon, 19 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2016-12-19-adding-built-in-function/</guid>
      <description>TiDB code is updated and the procedure of adding built-in functions is greatly simplified. This document describes how to add built-in functions to TiDB.</description>
    </item>
    
    <item>
      <title>Weekly update (December 12 ~ December 18, 2016)</title>
      <link>https://pingcap.com/weekly/2016-12-19-tidb-weekly/</link>
      <pubDate>Mon, 19 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-12-19-tidb-weekly/</guid>
      <description>Last week, we landed 32 PRs in the TiDB repositories and 11 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.34】Pegasus：一个分布式 KV 系统的设计过程 &amp; TiDB 架构介绍</title>
      <link>https://pingcap.com/meetup/meetup-34-20161217/</link>
      <pubDate>Sat, 17 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-34-20161217/</guid>
      <description>今天是 COISF 专场 Meetup，为了感谢顶着帝都雾霾来听分享的真爱粉们，现场有为大家准备银耳雪梨甜汤哦 😊本周分享的主题是小米工程师覃左言带来的《Pegasus：一个分布式 KV 系统的设计过程》以及 PingCAP TiDB Tech Lead 申砾带来的《TiDB 架构介绍》。
Topic 1：《Pegasus：一个分布式 KV 系统的设计过程》  讲师介绍：覃左言，COISF Pegasus PMC，小米工程师，目前主要在小米云平台负责分布式存储系统 Pegasus 的相关工作。专注基础框架和分布式系统，曾在腾讯搜搜基础架构部参与研发分布式存储系统 xcube，后来在百度网页搜索部设计与开发了微服务开发框架 SOFA。热衷开源，是开源 RPC 框架 sofa-pbrpc 的作者，也是分布式系统开发框架 rDSN 的重要贡献者。
 Content：
随着小米公司业务量的快速增长，小米云平台迎来了越来越多的挑战。原有一些系统在服务业务的过程中，已经逐渐显现出了设计上的瓶颈和不足。譬如小米目前大量使用的 HBase 系统在实际应用中就遇到了一些痛点问题，包括 Java GC 假死造成的无响应、ZooKeeper 的 session 超时不够 敏锐、系统 Failover 过程较慢等。虽然有些问题可以通过优化来缓解，但还有些问题受限于架构本身难以得到根本解决。
为此，小米基于 C++ 开发了一套新的分布式 key-value 系统 Pegasus，以弥补 HBase 的不足，为在线和离线业务提供高可用、高性能、强一致、易使用的存储服务。在本次分享中，首先阐述了 Pegasus 系统产生的背景，重点介绍 Pegasus 系统的整个设计过程，并分享了在分布式系统开发中的一些经验。希望通过带领大家重走 Pegasus 的设计之路，让大家了解如何设计一个分布式存储系统，会遇到哪些问题，有哪些可能的解决思路。
Topic 2：《TiDB 架构介绍》  讲师介绍：申砾，COISF TiDB PMC，PingCAP TiDB Tech Lead，前网易有道词典服务器端核心开发，前奇虎 360 新闻推荐系统 / 地图基础数据与检索系统 Tech Lead。</description>
    </item>
    
    <item>
      <title>Weekly update (December 05 ~ December 11, 2016)</title>
      <link>https://pingcap.com/weekly/2016-12-12-tidb-weekly/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-12-12-tidb-weekly/</guid>
      <description>Last week, we landed 41 PRs in the TiDB repositories and 34 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.33】zeppelin 的设计与实现 &amp; 海量结构化数据库 Tera 总览</title>
      <link>https://pingcap.com/meetup/meetup-33-20161210/</link>
      <pubDate>Sat, 10 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-33-20161210/</guid>
      <description>今天是 COISF 专场 Meetup，主题是 360 基础架构组高级研发工程师王康分享的《zeppelin 的设计与实现》以及百度网页搜索部工程师李康分享的《海量结构化数据库 Tera 总览》。
Topic 1：zeppelin 的设计与实现  讲师介绍：王康，360 基础架构组高级研发工程师, 负责实现了 360 开源配置管理服务 QConf, 大容量 redis pika，zeppelin 主要设计和实现。
 Content：
本次分享介绍了 360 半离线存储服务的设计与实现, 介绍 zeppelin 与 pika, bada 等在线存储的区别以及设计上的一些折衷。
Topic 2：海量结构化数据库 Tera 总览  讲师介绍：李康，百度网页搜索部工程师，负责百度海量结构化数据库 Tera 的设计和开发工作。
 Content：
Tera 是百度搜索基础架构团队为管理搜索引擎万亿量级的超链和网页数据设计的结构化数据库，当前已部署上万台机器，支持数十个生产应用。本次分享介绍了 Tera 产生背景和整体设计思路。</description>
    </item>
    
    <item>
      <title>Subquery Optimization in TiDB</title>
      <link>https://pingcap.com/blog/2016-12-07-Subquery-Optimization-in-TiDB/</link>
      <pubDate>Wed, 07 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2016-12-07-Subquery-Optimization-in-TiDB/</guid>
      <description>Subquery optimization, especially rewriting the correlated subquery, is a very difficult part in SQL query optimization. To be compatible with MySQL, TiDB enables users to write subqueries anywhere they want. For those subqueries that are not correlated, which are also called uncorrelated subqueries, TiDB evaluates in advance; for those correlated subqueries, TiDB removes the correlations as much as possible. For example, TiDB can rewrite a correlated subquery to &lt;code&gt;SemiJoin&lt;/code&gt;. This article is focused on introducing the correlated subquery optimization methods in TiDB.</description>
    </item>
    
    <item>
      <title>分布式系统测试那些事儿 - 信心的毁灭与重建</title>
      <link>https://pingcap.com/blog-cn/distributed-system-test-3/</link>
      <pubDate>Wed, 07 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/distributed-system-test-3/</guid>
      <description>本话题系列文章整理自 PingCAP Infra Meetup 第 26 期刘奇分享的《深度探索分布式系统测试》议题现场实录。文章较长，为方便大家阅读，会分为上中下三篇，本文为下篇。</description>
    </item>
    
    <item>
      <title>分布式系统测试那些事儿 - 信心的毁灭与重建</title>
      <link>https://pingcap.com/meetup/recording/distributed-system-test-3/</link>
      <pubDate>Wed, 07 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/recording/distributed-system-test-3/</guid>
      <description>本话题系列文章整理自 PingCAP Infra Meetup 第 26 期刘奇分享的《深度探索分布式系统测试》议题现场实录。文章较长，为方便大家阅读，会分为上中下三篇，本文为下篇。</description>
    </item>
    
    <item>
      <title>Weekly update (November 28 ~ December 04, 2016)</title>
      <link>https://pingcap.com/weekly/2016-12-05-tidb-weekly/</link>
      <pubDate>Mon, 05 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-12-05-tidb-weekly/</guid>
      <description>Last week, we landed 48 PRs in the TiDB repositories, 6 PRs in the TiDB docs repositories, and 22 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.32】百度文件系统－面向实时应用的分布式文件系统 &amp; TiDB - The Future of Database</title>
      <link>https://pingcap.com/meetup/meetup-32-20161203/</link>
      <pubDate>Sat, 03 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-32-20161203/</guid>
      <description>今天是一期人数爆满的 Meetup。作为 COISF 专场，感谢众多小伙伴与我们一起见证 COISF 的首次亮相。当然，首场参与是一定会有福利滴。这一期，我们邀请到了一位女神级讲师&amp;ndash;百度网页搜索部工程师雷丽媛，为大家讲解百度文件系统的架构设计；另外，PingCAP 联合创始人崔秋也有出台，为大家深情回顾 TiDB 的发展历程 :)
开场：COISF Opening Talk 在本环节中，PingCAP Co-Founder 崔秋，百度搜索基础架构团队技术负责人颜世光，以及奇虎 360 基础架构组存储负责人陈宗志共同为大家介绍了 COISF 的由来和使命，并对目前基金会内的顶级项目进行了简单介绍。
**COISF（China Open Infrastructure Software Foundation ：**中国开放基础软件基金会，其核心技术委员会由 PingCAP、百度、奇虎 360、小米（排名不分先后）等公司的基础软件项目团队组成，致力于促进和发展中国的新一代开源基础软件。目前基金会项目包括：Baidu/BFS、Baidu/Tera、PingCAP/TiDB、PingCAP/TiKV、Qihoo360/Zeppelin 等。
我们认为，一方面开源是软件开发的未来，能更好地促进创新与合作；另一方面未来几十年中国的基础软件必将蓬勃发展，并在世界范围内扮演重要角色。但当前国内有很多优秀的开源软件, 因为文化和语言的藩篱没能融入西方社区, 无法获得足够的关注与支持，导致发展缓慢。我们通过建设中国统一的基础软件开发社区，甄选优秀的项目加入，集中优势资源促进这些项目的快速发展与成熟。
COISF 的使命是：促进中国下一代开源基础软件生态系统的发展。
Topic 1：百度文件系统－面向实时应用的分布式文件系统  讲师介绍：雷丽媛，COISF BFS PMC，百度网页搜索部工程师，专注于分布式存储领域，目前负责百度结构化数据存储和分布式系统的相关工作。
 Content：
百度的核心业务和数据库系统都依赖分布式文件系统作为底层存储，文件系统的可用性和性能对上层搜索业务的稳定性与效果有着至关重要的影响。现有的分布式文件系统（如HDFS等）是为离线批处理设计的，无法在保证高吞吐的情况下做到低延迟和持续可用，所以百度从搜索的业务特点出发，设计了百度文件系统。本场分享整体介绍了百度文件系统 BFS 的架构设计和子模块。
Topic 2：TiDB - The Future of Database  讲师介绍：崔秋，COISF TiDB PMC，PingCAP 联合创始人，重度开源爱好者，曾任职于搜狗、豌豆荚，长期从事广告系统基础组件相关的研究，现主要从事开源 NewSQL 数据库 TiDB/TiKV 相关的设计和研发工作。
 Content：
NewSQL 不仅具有传统 SQL 和 ACID 的事务保证，同时还具有 NoSQL 的 Scale 能力, 这是一种世界前沿的数据库新技术。TiDB 以 Google Spanner/F1 作为理论参考，从零到一地完整实现这种面向未来的数据库。今天我们主要回顾 TiDB 的整个发展历程，从单机到分布式，从 Alpha 到 RC，从开源到社区，分享每一次架构演进背后的思考和感悟，以及每个不同阶段我们所做的取舍。最后，从客户的真实反馈中，我们一起探讨了 TiDB 的适用场景和最佳实践。</description>
    </item>
    
    <item>
      <title>Weekly update (November 21 ~ November 27, 2016)</title>
      <link>https://pingcap.com/weekly/2016-11-28-tidb-weekly/</link>
      <pubDate>Mon, 28 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-11-28-tidb-weekly/</guid>
      <description>Last week, we landed 44 PRs in the TiDB repositories, 3 PRs in the TiDB docs repositories, and 20 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.31】PD 的实现和演进 &amp; 从容器和微服务的发展看基础架构变迁</title>
      <link>https://pingcap.com/meetup/meetup-31-20161126/</link>
      <pubDate>Sat, 26 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-31-20161126/</guid>
      <description>今天是 PingCAP 第 31 期 Meetup，主题是黄华超分享的《PD 的实现和演进》以及邓栓分享的《从容器和微服务的发展看基础架构变迁》。
Topic 1：PD 的实现和演进  讲师介绍：黄华超，PingCAP 工程师，曾就职于微信、好赞科技，从事分布式存储相关工作，现负责 PingCAP PD 研发工作。
 Content：
本次分享首先介绍了 PD 在 TiDB 集群的作用，以及集群是如何动态扩容缩容的。然后分别讲解了 PD 的各个功能是如何实现的，其中，着重分享了集群调度的相关设计和思考，以及新的标签调度功能。
Topic 2：从容器和微服务的发展看基础架构变迁  讲师介绍：邓栓（Tennix），Rust 中文社区管理员，PingCAP SRE 工程师，负责 TiDB 与 Kubernetes 一体化整合部署方案。
 Content：
近些年来容器和微服务的概念变得特别火热，越来越多的互联网公司开始尝试将以前的单体服务迁移到微服务，并且在实践中使用容器来部署服务，容器和微服务也催生了 DevOps，CaaS，Immutable infrastructure，Service orchestration 等概念。今天主要从容器和微服务角度谈了新技术应用和实践给开发者带来了哪些便利和挑战，基础架构发生了哪些改变，并尝试探讨了未来的应用服务会是什么样的架构。</description>
    </item>
    
    <item>
      <title>Percolator 和 TiDB 事务算法</title>
      <link>https://pingcap.com/blog-cn/percolator-and-txn/</link>
      <pubDate>Tue, 22 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/percolator-and-txn/</guid>
      <description>本文先概括的讲一下 Google Percolator 的大致流程。Percolator 是 Google 的上一代分布式事务解决方案，构建在 BigTable 之上，在 Google 内部用于网页索引更新的业务。TiDB 的事务模型沿用了 Percolator 的事务模型。</description>
    </item>
    
    <item>
      <title>TiKV 的 MVCC（Multi-Version Concurrency Control）机制</title>
      <link>https://pingcap.com/blog-cn/mvcc-in-tikv/</link>
      <pubDate>Tue, 22 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/mvcc-in-tikv/</guid>
      <description>事务隔离在数据库系统中有着非常重要的作用，因为对于用户来说数据库必须提供这样一个“假象”：当前只有这么一个用户连接到了数据库中，这样可以减轻应用层的开发难度。但是，对于数据库系统来说，因为同一时间可能会存在很多用户连接，那么许多并发问题，比如数据竞争（data race），就必须解决。在这样的背景下，数据库管理系统（简称 DBMS）就必须保证并发操作产生的结果是安全的，通过可串行化（serializability）来保证。</description>
    </item>
    
    <item>
      <title>Weekly update (November 14 ~ November 20, 2016)</title>
      <link>https://pingcap.com/weekly/2016-11-21-tidb-weekly/</link>
      <pubDate>Mon, 21 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-11-21-tidb-weekly/</guid>
      <description>Last week, we landed 30 PRs in the TiDB repositories, 3 PRs in the TiDB docs repositories, and 19 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>解析 TiDB 在线数据同步工具 Syncer</title>
      <link>https://pingcap.com/blog-cn/tidb-syncer/</link>
      <pubDate>Mon, 21 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-syncer/</guid>
      <description>TiDB 是一个完全分布式的关系型数据库，从诞生的第一天起，我们就想让它来兼容 MySQL 语法，希望让原有的 MySQL 用户 (不管是单机的 MySQL，还是多机的 MySQL Sharding) 都可以在基本不修改代码的情况下，除了可以保留原有的 SQL 和 ACID 事务之外，还可以享受到分布式带来的高并发，高吞吐和 MPP 的高性能。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.30】深度学习，众包数据与短时临近预报系统 &amp; 谈谈 TiDB-Binlog 的设计</title>
      <link>https://pingcap.com/meetup/meetup-30-20161119/</link>
      <pubDate>Sat, 19 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-30-20161119/</guid>
      <description>今天是 PingCAP 第 30 期 Meetup，主题是墨迹天气气象算法负责人刘锦龙分享的《深度学习，众包数据与短时临近预报系统》以及刘寅分享的《谈谈 TiDB-Binlog 的设计》。
Topic 1：深度学习，众包数据与短时临近预报系统  讲师介绍：刘锦龙，北大理论物理博士，墨迹天气气象算法负责人，负责墨迹相关天气预测算法的研发工作，主要方向为机器学习和深度学习。
 Content：
深入介绍如何将深度学习的最新技术用于革新传统气象预测的一些研究和应用，以及如何处理从用户获取的众包反馈数据并进而改进天气预报的精准度。
Topic 2：谈谈 TiDB-Binlog 的设计  讲师介绍：刘寅，PingCAP engineer，现负责 TiDB 商业产品开发和自动化运维。
 Content：
随着 TiDB 的不断稳定和完善，我们也逐步开发了很多 TiDB 周边工具。今天主要介绍了 TiDB-Binlog 设计上的一些考量和实现细节。
TiDB-Binlog 可实时记录 TiDB 的一切数据变化，可以用来做集群的实时备份和恢复，也可以将数据完整地实时同步到下游的异构数据平台。目前我们已经把 TiDB-Binlog 部署到真实客户的线上系统中，利用实时同步的特性保障了上线过程的可靠和数据安全。今天的分享着重介绍了 Binlog 的原理，以及生成、收集和还原的过程细节。</description>
    </item>
    
    <item>
      <title>MVCC in TiKV</title>
      <link>https://pingcap.com/blog/2016-11-17-mvcc-in-tikv/</link>
      <pubDate>Thu, 17 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2016-11-17-mvcc-in-tikv/</guid>
      <description>This document gives an overview of MVCC implementation in TiKV.</description>
    </item>
    
    <item>
      <title>MPP and SMP in TiDB</title>
      <link>https://pingcap.com/blog-cn/mpp-smp-tidb/</link>
      <pubDate>Tue, 15 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/mpp-smp-tidb/</guid>
      <description>本篇文章整理自第 21 期 PingCAP Infra Meetup 上申砾分享的《MPP and SMP in TiDB》内容。</description>
    </item>
    
    <item>
      <title>MPP and SMP in TiDB</title>
      <link>https://pingcap.com/meetup/recording/mpp-smp-tidb/</link>
      <pubDate>Tue, 15 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/recording/mpp-smp-tidb/</guid>
      <description>本篇文章整理自第 21 期 PingCAP Infra Meetup 上申砾分享的《MPP and SMP in TiDB》内容。</description>
    </item>
    
    <item>
      <title>Travelling Back in Time and Reclaiming the Lost Treasures</title>
      <link>https://pingcap.com/blog/2016-11-15-Travelling-Back-in-Time-and-Reclaiming-the-Lost-Treasures/</link>
      <pubDate>Tue, 15 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2016-11-15-Travelling-Back-in-Time-and-Reclaiming-the-Lost-Treasures/</guid>
      <description>This document introduces the History Read feature in TiDB.</description>
    </item>
    
    <item>
      <title>Weekly update (November 07 ~ November 13, 2016)</title>
      <link>https://pingcap.com/weekly/2016-11-14-tidb-weekly/</link>
      <pubDate>Mon, 14 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-11-14-tidb-weekly/</guid>
      <description>Last week, we landed 25 PRs in the TiDB repositories, 5 PRs in the TiDB docs repositories，and 23 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.29】映客直播服务端架构优化之路 &amp; MySQL 与 TiDB 的事务机制</title>
      <link>https://pingcap.com/meetup/meetup-29-20161112/</link>
      <pubDate>Sat, 12 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-29-20161112/</guid>
      <description>今天是 PingCAP 第 29 期 Meetup，主题是映客服务端架构师王振涛分享的《映客直播服务端架构优化之路》以及张金鹏分享的《MySQL 与 TiDB 的事务机制》。
Topic 1：映客直播服务端架构优化之路  讲师介绍：王振涛，南开大学计算机硕士毕业，曾先后供职于腾讯、搜狗等互联网公司，拥有多年的服务端研发、面向服务体系结构设计经验，专注于解决海量数据存储和计算带来的分布式、高并发、强一致性等技术难题和挑战。2016 年初加入映客直播，担任服务端架构师，主要负责映客基础平台架构设计、评审和用户体系的研发工作，经历了映客业务快速发展、构建高可用大容量基础服务体系的过程，对分布式计算、微服务、分布式数据库架构、高可用高并发系统设计等方面都有较深刻的理解和实践经验。
 Content：
1、介绍了映客服务端架构演进历程；
2、关于服务端技术选型的探索和思考；
3、移动直播典型应用场景分析。
Topic 2：MySQL 与 TiDB 的事务机制  讲师介绍：张金鹏，PingCAP 核心成员，前百度资深研发工程师／京东数据库专家，《MariaDB 原理和实现》作者。
 Content：
在 MySQL 的 InnoDB 存储引擎中，进行写操作时，会将数据修改前的状态纪录在 Undo Log 中，一旦事务，失败利用 Undo Log 来进行回滚，保证事务的原子性。同时 InnoDB 利用 Undo Log 实现了多版本并发控制，InnoDB 的读取操作是不加锁的，事务只能读取到事务开始时已提交的纪录。由于 MySQL 是单机数据库，所有很方便的纪录所有活跃的事务 ID，Purge 线程根据当前活跃的事务情况来定期清理 Undo Log 中过期版本的数据。InnoDB 的事务支持 read uncommitted、read committed、repeatable read、serializable 四种事务隔离级别，InnoDB 通过 next-key lock 来解决 repeatable read 隔离级别下的幻读现象。
由于 TiDB 是分布式的数据库，情况变的复杂一些。TiDB 的事务参考的是 Google 的 percolator 模型，通过 PD 获取单调递增的时间戳来作为事务编号。TiDB 的写分为 prewrite 和 commit 两个阶段。如果一个事务写入多行，会选取一行作为 primary row，当 prewrite 阶段成功后会 commit primary row，其他 row 根据 primary row 的提交结果选择提交或者回滚，以保证整个事务的原子性。TiDB 同时实现了 SI 和 SSI 两种事务隔离级别。</description>
    </item>
    
    <item>
      <title>分布式系统测试那些事儿 - 错误注入</title>
      <link>https://pingcap.com/blog-cn/distributed-system-test-2/</link>
      <pubDate>Thu, 10 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/distributed-system-test-2/</guid>
      <description>本话题系列文章整理自 PingCAP Infra Meetup 第 26 期刘奇分享的《深度探索分布式系统测试》议题现场实录。文章较长，为方便大家阅读，会分为上中下三篇，本文为中篇。</description>
    </item>
    
    <item>
      <title>分布式系统测试那些事儿 - 错误注入</title>
      <link>https://pingcap.com/meetup/recording/distributed-system-test-2/</link>
      <pubDate>Thu, 10 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/recording/distributed-system-test-2/</guid>
      <description>本话题系列文章整理自 PingCAP Infra Meetup 第 26 期刘奇分享的《深度探索分布式系统测试》议题现场实录。文章较长，为方便大家阅读，会分为上中下三篇，本文为中篇。</description>
    </item>
    
    <item>
      <title>A Deep Dive into TiKV</title>
      <link>https://pingcap.com/blog/2016-11-09-Deep-Dive-into-TiKV/</link>
      <pubDate>Wed, 09 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2016-11-09-Deep-Dive-into-TiKV/</guid>
      <description>This document introduces how TiKV works as a Key-Value database.</description>
    </item>
    
    <item>
      <title>Weekly update (October 31 ~ November 06, 2016)</title>
      <link>https://pingcap.com/weekly/2016-11-07-tidb-weekly/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-11-07-tidb-weekly/</guid>
      <description>Last week, we landed 42 PRs in the TiDB repositories and 29 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.28】Spark 架构设计要点剖析 &amp; Performing group-by before join</title>
      <link>https://pingcap.com/meetup/meetup-28-20161105/</link>
      <pubDate>Sat, 05 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-28-20161105/</guid>
      <description>今天是 PingCAP 第 28 期 Meetup，主题是 TalkingData 数据经理时延军分享的《Spark 架构设计要点剖析》以及韩飞分享的《Performing group-by before join》。
Topic 1：Spark 架构设计要点剖析  讲师介绍：时延军，TalkingData 数据经理，负责领域工程数据平台架构和研发，曾在 COMODO 中国负责基础数据平台建设，在车语传媒考拉 FM 负责后端数据平台架构（支持离线+实时分析处理）。推崇工程师文化，热爱开源，乐于分享，兴趣广泛，熟悉大数据技术生态，擅长软件系统架构、分布式计算系统设计。
 Content：
1、RDD 特性，RDD 是如何抽象数据集的；
2、详解 Spark 基本架构；
3、Spark 内部核心组件及其交互；
4、逻辑执行计划与物理执行计划；
5、Spark 资源管理与任务调度。
Topic2：Performing group-by before join  讲师介绍：韩飞，PingCAP 研发工程师（PingCAP SQL 小王子），TiDB SQL Optimizer 主要作者，专注于 SQL 优化技术。前阿里云研发工程师，参与开发 ODPS SQL 查询优化器 Lot。
 Content：
Efficient processing of aggregation queries is essential for decision support applications. This talk introduces a class of query trans-formations, called eager aggregation that allows a query optimizer to push group-by operations down the query tree.</description>
    </item>
    
    <item>
      <title>TiDB 作为 MySQL Slave 实现实时数据同步</title>
      <link>https://pingcap.com/blog-cn/tidb-as-mysql-slave/</link>
      <pubDate>Thu, 03 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-as-mysql-slave/</guid>
      <description>由于 TiDB 本身兼容绝大多数的 MySQL 语法，所以对于绝大多数业务来说，最安全的切换数据库方式就是将 TiDB 作为现有数据库的从库接在主 MySQL 库的后方，这样对业务方实现完全没有侵入性下使用 TiDB 对现有的业务进行备份，应对未来数据量或者并发量增长带来的单点故障风险，如需上线 TiDB，也只需要简单的将业务的主 MySQL 地址指向 TiDB 即可。</description>
    </item>
    
    <item>
      <title>分布式系统测试那些事儿 - 理念</title>
      <link>https://pingcap.com/blog-cn/distributed-system-test-1/</link>
      <pubDate>Tue, 01 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/distributed-system-test-1/</guid>
      <description>本话题系列文章整理自 PingCAP Infra Meetup 第 26 期刘奇分享的《深度探索分布式系统测试》议题现场实录。文章较长，为方便大家阅读，会分为上中下三篇，本文为上篇。</description>
    </item>
    
    <item>
      <title>分布式系统测试那些事儿 - 理念</title>
      <link>https://pingcap.com/meetup/recording/distributed-system-test-1/</link>
      <pubDate>Tue, 01 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/recording/distributed-system-test-1/</guid>
      <description>本话题系列文章整理自 PingCAP Infra Meetup 第 26 期刘奇分享的《深度探索分布式系统测试》议题现场实录。文章较长，为方便大家阅读，会分为上中下三篇，本文为上篇。</description>
    </item>
    
    <item>
      <title>Weekly update (October 24 ~ October 30, 2016)</title>
      <link>https://pingcap.com/weekly/2016-10-31-tidb-weekly/</link>
      <pubDate>Mon, 31 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-10-31-tidb-weekly/</guid>
      <description>Last week, we landed 24 PRs in the TiDB repositories and 28 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.27】Impala 在用户行为分析中的应用与优化 &amp; How we build CI/CD for TiDB at scale</title>
      <link>https://pingcap.com/meetup/meetup-27-20161029/</link>
      <pubDate>Sat, 29 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-27-20161029/</guid>
      <description>今天是 PingCAP 第 27 期 Meetup，主题是神策数据联合创始人&amp;amp;首席架构师付力力分享的《Impala 在用户行为分析中的应用与优化》以及刘寅分享的《How we build CI/CD for TiDB at scale》。
Topic 1：Impala 在用户行为分析中的应用与优化  讲师介绍：付力力，神策数据联合创始人&amp;amp;首席架构师，曾任百度、豌豆荚资深研发工程师，熟悉大规模数据处理、数据仓库、OLAP 数据库等领域。
 Content：
1. 介绍用户行为分析的典型应用场景；
2. 简单介绍 Impala 的架构和实现；
3. 使用 Impala 进行用户行为分析的基本做法；
4. 针对特定场景对 Impala 进行的一些优化和改造。
Topic 2：How we build CI/CD for TiDB at scale  讲师介绍：刘寅，PingCAP engineer，现负责 TiDB 商业产品开发和自动化运维。
 Content：
主要分享了我们如何为分布式数据库 TiDB 构建持续集成和持续交付平台，以支撑 TiDB 背后上千万的自动化测试 case，和多平台构建及发布。
其中，重点介绍了以 Jenkins 为核心的开源工具，配合 Docker ／ Kubernetes 来搭建分布式可扩展的 CI/CD 系统。Jenkins 2.0 之后的 pipeline script 的支持极大地提升分布式构建的灵活性，我们可以明确定义整个构建过程的不同阶段，并且决定这些阶段运行在集群的某个节点上，让耗时的任务并行处理，极大缩短从代码提交到上线发布的周期。同时结合实际场景的例子，讲解了 jenkins 的一些实用技巧和我们遇到的坑。</description>
    </item>
    
    <item>
      <title>Weekly update (October 17 ~ October 23, 2016)</title>
      <link>https://pingcap.com/weekly/2016-10-24-tidb-weekly/</link>
      <pubDate>Mon, 24 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-10-24-tidb-weekly/</guid>
      <description>Last week, we landed 30 PRs in the TiDB repositories and 26 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.26】京东分布式数据库实践 &amp; 深度探索分布式系统测试</title>
      <link>https://pingcap.com/meetup/meetup-26-20161022/</link>
      <pubDate>Sat, 22 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-26-20161022/</guid>
      <description>今天是 PingCAP 第 26 期 Meetup，主题是开源项目 speedy 作者张成远分享的《京东分布式数据库实践》以及刘奇分享的《深度探索分布式系统测试》。我司 CEO 亲自出台，现场不时传来三观碎一地的声音
另外，本周初次试水直播 (✿◡‿◡)
Topic 1：京东分布式数据库实践  讲师介绍：张成远，《Mariadb 原理与实现》作者，开源项目 speedy 作者。目前就职于京东数据库系统研发团队，负责京东分布式数据库系统架构与研发工作，主导了京东分布式数据库系统在公司的落地及大规模推广。擅长高性能服务器开发，擅长分布式数据库/存储/缓存等大规模分布式系统架构。
 Content：
  介绍京东分布式数据库的设计与实现；
  介绍去 oracle 的发展历程以及遇到的一些坑；
  如何做到高效的运维监控等。
  Topic 2：深度探索分布式系统测试  讲师介绍：刘奇，PingCAP 联合创始人兼 CEO，先后创建了 Codis、TiDB/TiKV 等知名开源项目。现从事开源的分布式 NewSQL 数据库 TiDB/TiKV 开发。擅长高并发、大规模、分布式数据库系统架构设计。
 Content：
主讲人自我点评称：“这是一次毁三观的分享”，因为这里定义了什么是及格的测试。如果您曾经认为自己的分布式系统测试做得非常好，听完之后，您会发现自己可能还远不到好的级别。
分布式系统测试是很少被提及的话题，但分布式系统测试的困难甚至大于写一个分布式系统。一般大家普遍的看法是平时用得很多的分布式系统都是比较稳定的，然而当新的测试方法和工具出现时，可以发现很多新的 bug 或者极大的提高了测试的复现率。复现率是解决 bug 的基础，分布式系统 bug 的复现难度也远大于单机系统。
本周刘奇和大家分享了分布式系统测试的一些困难，以及 PingCAP 和其它大型分布式系统的测试经验。为了方便未到现场的童鞋，后续小编会将本次分享内容整理成文档共享出来，让我们一起，毁~三~观~ :)</description>
    </item>
    
    <item>
      <title>Building a Reliable Large-Scale Distributed Database - Principles and Practice</title>
      <link>https://pingcap.com/blog-cn/talk-principles-practice/</link>
      <pubDate>Fri, 21 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/talk-principles-practice/</guid>
      <description>日前，PingCAP Engineering VP 申砾受邀参加 2016 中国开源年会，并发表了《Building a Reliable Large-Scale Distributed Database - Principles and Practice》主题演讲。本文为演讲实录。</description>
    </item>
    
    <item>
      <title>回到过去，找回遗失的珍宝 - TiDB 的历史读功能</title>
      <link>https://pingcap.com/blog-cn/time-travel/</link>
      <pubDate>Wed, 19 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/time-travel/</guid>
      <description>数据作为业务的核心，关系着整个业务的生死，所以对于数据库来说，数据的安全性是放在首位的，从宏观角度来看，安全性不仅仅在于的数据库本身足够稳定不会主动的丢失数据，有的时候更是对业务本身甚至人为失误造成损失是否有足够且便捷的应对方案，例如在游戏行业中经常遇到的反作弊(作弊玩家回档)问题，对于金融业务的审计需求等等，如果在数据库层面上提供相关机制，会让业务开发的工作量和复杂度减少很多。</description>
    </item>
    
    <item>
      <title>How we build TiDB</title>
      <link>https://pingcap.com/blog/2016-10-17-how-we-build-tidb/</link>
      <pubDate>Mon, 17 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog/2016-10-17-how-we-build-tidb/</guid>
      <description>This is the speech Max Liu gave at Percona Live Open Source Database Conference 2016.</description>
    </item>
    
    <item>
      <title>Weekly update (October 01 ~ October 16, 2016)</title>
      <link>https://pingcap.com/weekly/2016-10-17-tidb-weekly/</link>
      <pubDate>Mon, 17 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-10-17-tidb-weekly/</guid>
      <description>Last week, we landed 27 PRs in the TiDB repositories and 32 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.25】分布式数据处理在个性化系统的应用 &amp; TiKV 性能优化</title>
      <link>https://pingcap.com/meetup/meetup-25-20161015/</link>
      <pubDate>Sat, 15 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-25-20161015/</guid>
      <description>今天是 PingCAP 第 25 期 Meetup，顶着帝都的大雾霾，依然来了很多小伙伴。这一次我们有换新场地噢，但不变的是分享内容依然满满干货。本周的主题分别是百分点集团高级架构师武毅分享的《分布式数据处理在个性化系统的应用》以及张金鹏分享的《TiKV 性能优化》。
Topic 1：分布式数据处理在个性化系统的应用  讲师介绍：武毅，现任百分点集团高级架构师，负责大数据平台基础架构的设计与研发，曾参与个性化推荐系统等多个大型系统的设计和开发。Linux 爱好者，活跃于 GitHub，Ubuntu 等社区，重点关注分布式技术，平台技术。
 Content：
相信大家也都在各自的领域用到过不同的分布式存储／计算开源工具，本周我们分享了一些在运营个性化系统时使用分布式存储／计算工具遇到的坑和经验。
Topic 2：TiKV 性能优化 张金鹏 | PingCAP Content：
RocksDB 的 Column Families 之间会共享 WAL，但是又有各自的 memtables 和 sst files，共享 WAL 使得实现跨 CF 的 atomic 操作变成可能，不同 CF 的 memtables 和 sst files 是分离开的，这样我们可以将不同类型的数据分别存放在不同的 CF 内，根据数据的性质给 CF 定制不同配置，使数据的写入和访问达到最佳状态。
在目前 TiKV 中，读命令只能发给 leader，以防读取到旧的状态，在之前的版本中通过走一次 Raft 来确定当前节点是否是 leader，引入 leader lease 之后，命令发送到在 lease 内的leader 上时，不需要再走一次 Raft 了，可以直接读取本地数据。
当 RocksDB tombstone keys 太多的时候 seek 操作会非常慢，可以根据情况使用 iterator 的 upper bound 功能或者使用 RocksDB 的 singledelete 来解决这个问题.</description>
    </item>
    
    <item>
      <title>How do we build TiDB</title>
      <link>https://pingcap.com/blog-cn/how-do-we-build-tidb/</link>
      <pubDate>Sat, 01 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/how-do-we-build-tidb/</guid>
      <description>首先我们聊聊 Database 的历史，在已经有这么多种数据库的背景下我们为什么要创建另外一个数据库；以及说一下现在方案遇到的困境，说一下 Google Spanner 和 F1，TiKV 和 TiDB，说一下架构的事情，在这里我们会重点聊一下 TiKV。因为我们产品的很多特性是 TiKV 提供的，比如说跨数据中心的复制，Transaction，auto-scale&amp;hellip;</description>
    </item>
    
    <item>
      <title>Weekly update (September 26 ~ September 30, 2016)</title>
      <link>https://pingcap.com/weekly/2016-09-30-tidb-weekly/</link>
      <pubDate>Fri, 30 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-09-30-tidb-weekly/</guid>
      <description>Last week, we landed 17 PRs in the TiDB repositories and 13 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>Weekly update (September 19 ~ September 25, 2016)</title>
      <link>https://pingcap.com/weekly/2016-09-26-tidb-weekly/</link>
      <pubDate>Mon, 26 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-09-26-tidb-weekly/</guid>
      <description>Last week, we landed 20 PRs in the TiDB repositories and 24 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.24】LLVM 简介及其在大规模 OLAP 中的应用 &amp; 阻塞访问数据库的相关问题</title>
      <link>https://pingcap.com/meetup/meetup-24-20160924/</link>
      <pubDate>Sat, 24 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-24-20160924/</guid>
      <description>今天是 PingCAP 第 24 期 Meetup，主题是阿里云 ODPS 研发工程师杜川分享的《LLVM 简介及其在大规模 OLAP 中的应用》以及来自小米云平台的杨哲分享的《阻塞访问数据库的相关问题》。
Topic 1：LLVM 简介及其在大规模 OLAP 中的应用  讲师介绍：杜川，阿里云 ODPS 研发工程师，分布式数据库爱好者，重点关注 SQL 运行时优化以及 Code Generation 技术。
 Content：
LLVM 是一个开源的编译器框架及生态链，已在工业界得到广泛的应用（著名的 Clang 编译器就是基于LLVM实现的）。因其前后端分离，模块化等优势，近年来被引入数据库领域，作为 JIT Code Generation 的工具，并吸引了越来越多的关注。本次分享介绍了 LLVM，及其在大规模 OLAP 中的应用。
Topic 2：阻塞访问数据库的相关问题  讲师介绍：杨哲，id 杨肉或 yangzhe1991，现就职于小米云平台存储组。曾就职于网易有道、豌豆荚任资深工程师等职位。主要研究分布式数据库，在小米、有道、豌豆荚分别负责 HBase、Cassandra 和 Codis 的开发与维护。
 Content：
分享了关于数据库若干问题的一些想法。</description>
    </item>
    
    <item>
      <title>Weekly update (September 12 ~ September 18, 2016)</title>
      <link>https://pingcap.com/weekly/2016-09-19-tidb-weekly/</link>
      <pubDate>Mon, 19 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-09-19-tidb-weekly/</guid>
      <description>Last week, we landed 18 PRs in the TiDB repositories and 26 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>Weekly update (September 05 ~ September 11, 2016)</title>
      <link>https://pingcap.com/weekly/2016-09-12-tidb-weekly/</link>
      <pubDate>Mon, 12 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-09-12-tidb-weekly/</guid>
      <description>Last week, we landed 20 PRs in the TiDB repositories and 32 PRs in the TiKV repositories..</description>
    </item>
    
    <item>
      <title>演讲实录|黄东旭：分布式数据库模式与反模式</title>
      <link>https://pingcap.com/blog-cn/talk-tidb-pattern/</link>
      <pubDate>Mon, 12 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/talk-tidb-pattern/</guid>
      <description>日前，PingCAP 联合创始人兼 CTO 黄东旭在「2016中国数据分析师行业峰会(CDAS)」 “数据库与技术实战”分论坛上，分享了《分布式数据库模式与反模式》的主题演讲。本文为演讲实录。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.23】How to write a good commit message &amp; QuorumKV：微信分布式 KV 存储系统</title>
      <link>https://pingcap.com/meetup/meetup-23-20160910/</link>
      <pubDate>Sat, 10 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-23-20160910/</guid>
      <description>今天是 PingCAP 第 23 期 Meetup，主题是金坤分享的《How to write a good commit message》以及黄华超分享的《QuorumKV：微信分布式 KV 存储系统》。
【Topic 1】How to write a good commit message 金坤 | PingCAP Content：
This talk about writing good commit messages aims to act as the beginning of a series of talks about writing quality technical content. To emphasise the importance of the commit messages, the talk asked the audience to set up a profile of the potential reviewer who is as cool and picky as the writer of the technical content, or the writer himself in 5 years.</description>
    </item>
    
    <item>
      <title>Weekly update (August 29 ~ September 04, 2016)</title>
      <link>https://pingcap.com/weekly/2016-09-05-tidb-weekly/</link>
      <pubDate>Mon, 05 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-09-05-tidb-weekly/</guid>
      <description>Last week, we landed 29 PRs in the TiDB repositories and 24 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.22】360开发的大容量redis -pika &amp; 分布式对象存储系统设计介绍</title>
      <link>https://pingcap.com/meetup/meetup-22-20160903/</link>
      <pubDate>Sat, 03 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-22-20160903/</guid>
      <description>今天是 PingCAP 第 22 期 Meetup，主题是 360 基础架构组研发工程师宋昭分享的《360 开发的大容量 redis -pika》以及美团云工程师张帅分享的《分布式对象存储系统设计介绍》。
Topic 1：360 开发的大容量 redis -pika  讲师介绍：宋昭，360 基础架构组研发工程师。专注于分布式存储领域，目前负责 360 开源项目 pika 相关的设计和开发工作。
 Content：
目前 pika 在 360 内部大量使用，有 300 多实例，主要解决大容量的 redis（400G,800G）场景；在外部，被微博、美团、万达电商、garena、apus 等使用于线上核心系统中。本次分享主要介绍 pika 的系统设计和实现。
Topic 2：分布式对象存储系统设计介绍  讲师介绍：张帅，美团云工程师。对分布式数据库及分布式存储系统有浓厚的兴趣。
 Content：
分享关于大规模分布式对象存储的一些想法和思考。</description>
    </item>
    
    <item>
      <title>TiKV 事务模型概览，Google Spanner 开源实现</title>
      <link>https://pingcap.com/blog-cn/tidb-transaction-model/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-transaction-model/</guid>
      <description>随着时代的发展，应用和数据的规模越来越大。然而在这个一切都可以水平扩展的时代，你会发现，大多数应用的最下层的关系型数据库，竟然难以找到一个优雅易用的水平扩展解决方案，一直以来不得不依赖静态 Sharding ，牺牲掉事务，然后在业务层各种 Workarounds。作为后端开发者应该深有体会。</description>
    </item>
    
    <item>
      <title>Weekly update (August 22 ~ August 28, 2016)</title>
      <link>https://pingcap.com/weekly/2016-08-29-tidb-weekly/</link>
      <pubDate>Mon, 29 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-08-29-tidb-weekly/</guid>
      <description>Last week, we landed 26 PRs in the TiDB repositories and 26 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.21】An Introduction to Join-Reorder in TiDB &amp; MPP and SMP in TiDB</title>
      <link>https://pingcap.com/meetup/meetup-21-20160827/</link>
      <pubDate>Sat, 27 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-21-20160827/</guid>
      <description>今天是 PingCAP 第 21 期 Meetup，主题是韩飞分享的《An Introduction to Join-Reorder in TiDB》以及申砾分享的《MPP and SMP in TiDB》。
Topic 1：An Introduction to Join-Reorder in TiDB 韩飞 | PingCAP Content：
本次分享详细介绍了 TiDB 中 Join-Reorder 的流程。包括 Join-Reorder 的动机，outer-join 的 reorder 局限性和解决办法。为了解决某些 outer join re-association 的问题，我们可以引入的新算子 Generalized outerJoin。最后介绍了通过为 Join Query 建立 Query Graph 进行启发式搜索和动态规划的 Join-Reorder 算法。
Topic 2：MPP and SMP in TiDB 申砾 | PingCAP Content：
TiDB 是一个支持水平扩展的分布式数据库，除了提供海量数据存储能力之外，还需要提供海量数据的计算能力，这样才能帮助用户更好、更容易地使用数据。为此我们开发了一套分布式计算框架，一方面利用海量的存储节点的计算能力，加快数据处理速度；另一方面在单个计算节点内，我们利用 Go 的并发优势，通过 SMP 方式提高计算并行度。
本次 Talk 首先介绍了 TiDB 分布式计算架构，并举例说明计算的具体流程；然后分享了最近 TiDB 针对索引查询和 Join 做的一系列优化，性能有大幅度提高；最后列出了一些 NewSQL database 中如何做计算值得思考的问题。</description>
    </item>
    
    <item>
      <title>Weekly update (August 13 ~ August 21, 2016)</title>
      <link>https://pingcap.com/weekly/2016-08-22-tidb-weekly/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-08-22-tidb-weekly/</guid>
      <description>Last week, we landed 26 PRs in the TiDB repositories and 15 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.20】搜索引擎背后的万亿量级存储系统 Tera &amp; Cloudtable：分布式强一致的 KV 存储系统</title>
      <link>https://pingcap.com/meetup/meetup-20-20190820/</link>
      <pubDate>Sat, 20 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-20-20190820/</guid>
      <description>今天是 PingCAP 第 20 期 Meetup，主题是百度网页搜索部工程师雷丽媛分享的《搜索引擎背后的万亿量级存储系统 Tera 》以及温文鎏分享的《Cloudtable：分布式强一致的 KV 存储系统》。
Topic 1：搜索引擎背后的万亿量级存储系统 Tera   讲师介绍：雷丽媛，百度网页搜索部工程师。专注于分布式存储领域，目前负责百度结构化数据存储和分布式文件系统的相关工作。
 Content：
介绍支撑搜索引擎核心的海量存储——Tera 的设计与实现
Topic 2：Cloudtable：分布式强一致的 KV 存储系统 Content：
如何搭建一个适用于互联网公司业务的大容量分布式强一致性 KV 存储系统?
通过结合分布式一致性协议 Raft，嵌入式存储引擎 RocksDB，HBASE 的架构和接口，YY 云存储团队在过去的两年开发了 Cloudtable 存储系统，它是一个分布式强一致性的 KV 存储系统。今天，前 YY 云存储工程师温文鎏分享了他们在构建 Cloudtbable 系统的实践和经验。</description>
    </item>
    
    <item>
      <title>基于 Raft 构建弹性伸缩的存储系统的一些实践</title>
      <link>https://pingcap.com/blog-cn/building-distributed-db-with-raft/</link>
      <pubDate>Sat, 20 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/building-distributed-db-with-raft/</guid>
      <description>最近几年来，越来越多的文章介绍了 Raft 或者 Paxos 这样的分布式一致性算法，且主要集中在算法细节和日志同步方面的应用。但是呢，这些算法的潜力并不仅限于此，基于这样的分布式一致性算法构建一个完整的可弹性伸缩的高可用的大规模存储系统，是一个很新的课题，我结合我们这一年多以来在 TiKV 这样一个大规模分布式数据库上的实践，谈谈其中的一些设计和挑战。</description>
    </item>
    
    <item>
      <title>Weekly update (August 05 ~ August 12, 2016)</title>
      <link>https://pingcap.com/weekly/2016-08-12-tidb-weekly/</link>
      <pubDate>Fri, 12 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-08-12-tidb-weekly/</guid>
      <description>Last week, we landed 20 PRs in the TiDB repositories and 11 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.19】What&#39;s New in Spark 2.0 &amp; An Overview of Cost Based Optimization and Join Reorder</title>
      <link>https://pingcap.com/meetup/meetup-19-20160806/</link>
      <pubDate>Sat, 06 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-19-20160806/</guid>
      <description>今天是 PingCAP 第 19 期 Meetup，主题是百度基础架构部工程师方君分享的《What&#39;s New in Spark 2.0 》以及韩飞分享的《An Overview of Cost Based Optimization and Join Reorder》。
Topic 1：What&#39;s New in Spark 2.0  讲师介绍：方君，百度基础架构部工程师，专注于分布式计算与流式计算领域，目前在百度负责 Spark 计算平台和计算表示层的相关工作。
 Content:
 DataSet API Performance Optimization Structure Streaming  Topic 2：An Overview ofCost Based Optimization and Join Reorder 韩飞 | PingCAP Content:
自从 System R 优化框架面世，基于 interesting order 的动态规划算法一直是大部分优化器采用的基础算法。本次分享介绍了优化器在没有 histogram 信息下的代价估计算法，以及举例说明 TiDB 中的动态规划算法实现。
最近有好多小伙伴在微信后台留言，想加入到我们的 Meetup 中来。在这里统一答复大家：我们的 Meetup 是每周六上午十点，在 PingCAP 公司内开讲哦。有兴趣的小伙伴届时带着你们对技术满满的热情来参加就好啦 :)</description>
    </item>
    
    <item>
      <title>Weekly update (July 30 ~ August 05, 2016)</title>
      <link>https://pingcap.com/weekly/2016-08-05-tidb-weekly/</link>
      <pubDate>Fri, 05 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-08-05-tidb-weekly/</guid>
      <description>Last week, we landed 28 PRs in the TiDB repositories and 32 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>云时代数据库的核心特点</title>
      <link>https://pingcap.com/blog-cn/cloud-native-db/</link>
      <pubDate>Tue, 02 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/cloud-native-db/</guid>
      <description>最近几年，随着云计算相关技术的发展，各种不同类型的云层出不穷，服务越来越多不同类型的企业业务，传统企业也渐渐开始探索上云的道路。在云上，作为业务最核心的数据库，相比之前的传统方案会有哪些变化呢？在正式聊云时代的数据库特点之前，我们需要了解一下目前云时代架构发生的变化</description>
    </item>
    
    <item>
      <title>TiDB 中的子查询优化技术</title>
      <link>https://pingcap.com/blog-cn/tidb-optimization-for-subquery/</link>
      <pubDate>Mon, 01 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-optimization-for-subquery/</guid>
      <description>子查询优化一直是 SQL 查询优化中非常难的一部分，尤其是关联子查询的改写。TiDB 为了兼容 MySQL，允许用户在任何位置编写子查询。对于非关联子查询，TiDB 会对其进行提前求值，对于关联子查询，TiDB 会尽可能的对其进行去关联化，例如改写成 SemiJoin。本文会重点介绍 TiDB 对关联子查询的优化手段。</description>
    </item>
    
    <item>
      <title>TiDB 中的子查询优化技术</title>
      <link>https://pingcap.com/meetup/recording/tidb-optimization-for-subquery/</link>
      <pubDate>Mon, 01 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/recording/tidb-optimization-for-subquery/</guid>
      <description>子查询优化一直是 SQL 查询优化中非常难的一部分，尤其是关联子查询的改写。TiDB 为了兼容 MySQL，允许用户在任何位置编写子查询。对于非关联子查询，TiDB 会对其进行提前求值，对于关联子查询，TiDB 会尽可能的对其进行去关联化，例如改写成 SemiJoin。本文会重点介绍 TiDB 对关联子查询的优化手段。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.18】Kudu 的设计思想和具体实现 &amp; Kubernetes in PingCAP</title>
      <link>https://pingcap.com/meetup/meetup-18-20160730/</link>
      <pubDate>Sat, 30 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-18-20160730/</guid>
      <description>今天是 PingCAP 第 18 期 Meetup，主题是小米云平台工程师常冰琳分享的《Kudu 的设计思想和具体实现》以及张阳分享的《Kubernetes in PingCAP》。
Topic 1：Kudu 的设计思想和具体实现  讲师介绍：常冰琳，小米云平台工程师，长期专注于 Hadoop 生态的分布式计算框架，Kudu PMC&amp;amp;Commiter, Hadoop Nativetask 项目发起者(已合入 Hadoop)。目前在小米负责 SQL 类数据分析平台，利用 Impala 和 Kudu 搭建实时数据分析云服务。
 Content：
本次分享将简单介绍 Kudu 的设计思想和具体实现，以及小米作为 Kudu 最早用户的一些实践经验。
  设计目标
  数据模型，分区和副本设计
  Tablet 存储设计
  其他底层细节
  小米实践
  Topic 2：Kubernetes in PingCAP Content：
本次分享，主要与大家沟通了 Kubernetes 在 TiKV 及 TiDB 中的一些应用场景，包括部署、运维以及与 Jenkins CI 的集成等。同时，对大家集中提问的 stateful 的 TiKV 在 rolling update、recovery 等情况下的“状态”维护上的一些问题，进行了探讨，基于此问题，大家在分享结束后也积极交流了各自对于 Kubernetes 本身的一些见解。</description>
    </item>
    
    <item>
      <title>Weekly update (July 23 ~ July 29, 2016)</title>
      <link>https://pingcap.com/weekly/2016-07-29-tidb-weekly/</link>
      <pubDate>Fri, 29 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-07-29-tidb-weekly/</guid>
      <description>Last week, we landed 27 PRs in the TiDB repositories and 34 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>Weekly update (July 17 ~ July 22, 2016)</title>
      <link>https://pingcap.com/weekly/2016-07-23-tidb-weekly/</link>
      <pubDate>Sat, 23 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/weekly/2016-07-23-tidb-weekly/</guid>
      <description>Last week, we landed 22 PRs in the TiDB repositories and 15 PRs in the TiKV repositories.</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.17】How does TiKV auto-balance work?</title>
      <link>https://pingcap.com/meetup/meetup-17-20160723/</link>
      <pubDate>Sat, 23 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-17-20160723/</guid>
      <description>今天是 PingCAP 第 17 期 Meetup，主题是崔秋分享的《How does TiKV auto-balance work?》。
Topic：How does TiKV auto-balance work? 崔秋 | PingCAP TiDB 最近发布了 Beta 版本，相比传统的关系型数据库，TiDB 具有在线弹性伸缩，高可用和强一致性，一致性的分布式事务和 MySQL 协议兼容性等特性，特别适用于大规模高并发的海量数据场景。
本次交流主要介绍了 TiKV 的 Balance Scheduler 框架和算法实现演进，对于大家主要关注的 TiKV 集群的在线弹性扩容实现细节和 TiKV Balance 中在线服务高可用的问题，进行了深度的探讨。
在 TiKV 里面，数据是按照 Range 进行存放的，称为一个 Region。PD(Placement Driver) 负责整个 TiKV 集群的管理和调度。
在 TiKV 里面，数据移动的基本单元是 Region，所以 PD 的 auto balance 也是针对 Region 进行处理。对于一个 Region 来说，它会不会被 Balance，有两种方式：
1）Heartbeart
Region 会定期地上报当前的状态信息给 PD，如果 PD 发现该 Region 副本数不足或者超过阀值，则会通知该 Region 进行 Membership Change 处理。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.16】基于 Ceph 构建文件共享服务的实践 &amp; Cool Extensions of Raft for NewSQL</title>
      <link>https://pingcap.com/meetup/meetup-16-20160716/</link>
      <pubDate>Sat, 16 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-16-20160716/</guid>
      <description>今天是 PingCAP 第 16 期 Meetup，主题是来自京东的田琪分享的《Cool Extensions of Raft for NewSQL》，以及来自百度的孟圣智分享的《基于 Ceph 构建文件共享服务的实践》 。
Topic 1：Cool Extensions of Raft for NewSQL  讲师介绍：田琪，京东数据库系统部负责人，开源 docker 镜像存储系统 speedy 作者，TiDB committer, etcd contributor
 Topic summary:
主要分享了 Raft 协议在 etcd 中的实现，与 etcd 在 Raft 协议方面近期更新地比较重要的特性，以及引进这些特性的缘由。
  the functionality of leader transfer
  the future improvement of leader transfer
  the functionality of quorum checking
  implement leader lease based on quorum checking</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.15】TiDB 存储模型变更 &amp; TiDB 优化器统计信息的采集</title>
      <link>https://pingcap.com/meetup/meetup-15-20160709/</link>
      <pubDate>Sat, 09 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-15-20160709/</guid>
      <description>今天是 PingCAP 第 15 期 Meetup ，主题是申砾分享的《TiDB 存储模型变更》以及周昱行分享的《TiDB 优化器统计信息的采集》。
Part 1：《TiDB 存储模型变更》 申砾 | PingCAP TiDB 在 Key-Value 存储模型之上，将一行数据拆分成多个 Key-Value pair。这样做有利于列较多并且 update 较为频繁的业务场景，同时对 Online Schema 变更较为友好。但是这种存储模型对于需要读取/写入大量 row 的业务场景并不适用。为此我们修改了 TiDB 的存储模型，将一行内需要频繁修改和很少修改的数据存储在不同的 column family 中，以更好地适应不同热度的数据,以及生存期差别比较大的数据。同时，非常有效地适配了读写放大以及空间放大的问题。
Part 2：《TiDB 优化器统计信息的采集》 周昱行 | PingCAP 统计信息是实现基于代价的优化（CBO）的必要条件，本期为大家介绍 TiDB 收集统计信息使用的采样算法和直方图生成算法。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.14】HashData 数据仓库的动态缩容扩容实现 &amp; TiDB Beta 版现场演示</title>
      <link>https://pingcap.com/meetup/meetup-14-20160702/</link>
      <pubDate>Sat, 02 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-14-20160702/</guid>
      <description>今天是 PingCAP 第14期 Meetup ，主题是酷克数据联合创始人马涛分享的《HashData 数据仓库的动态缩容扩容实现》以及 PingCAP 联合创始人兼 CEO 刘奇针对近日发布的 TiDB Beta 版进行的现场 Demo 演示。
Part 1：《 HashData 数据仓库的动态缩容扩容实现》  讲师：马涛，酷克数据联合创始人，数据库领域从业近10年，最初 Pivotal HAWQ 项目成员，06年至11年就职人大金仓做内核开发。目前主要负责 OLAP 系统内核和外围云化工作。
 通过对比 Greenplum，Dynamo 和 HashData 的当前实现，为大家简单介绍数据处理系统动态缩容扩容的实现。阐述数据系统缩容和扩容的需求集合和设计方案，深入介绍 HashData 选择的设计、目前实现和后续改进。
Part 2：《 TiDB Beta 版现场 Demo 演示》  讲师：刘奇，PingCAP 联合创始人兼 CEO。
 针对6月30日发布的 TiDB Beta 版，刘奇在现场进行演示，与大家共同见证了 TiDB 界面的首次亮相。直接通过标准的 MySQL 客户端连接，后端三台普通 x86 服务器集群，演示了常用的 SQL 插入和查询，并演示了在大压力数据写入的场景下，TiDB 自动扩容的全过程，期间无需人为干预，TiDB 自动完成数据迁移和扩容及流量的负载均衡，业务层完全透明。小伙伴们都惊呆了。
TiDB Beta 版已如约亮相，说好的 “三五好友，吃吃喝喝”，说来就来 :)</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.13】百度 redis3 生产环境实践 &amp; TiKV Auto Balance</title>
      <link>https://pingcap.com/meetup/meetup-13-20160625/</link>
      <pubDate>Sat, 25 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-13-20160625/</guid>
      <description>今天是 PingCAP 第 13 期 Meetup ，主题是百度资深研发工程师、百度 BAC 存储负责人闫宇分享的《百度 redis3 生产环境实践》以及 PingCAP 联合创始人崔秋分享的《TiKV Auto Balance 》。
Topic 1：《百度 redis3 生产环境实践》  **讲师：**闫宇，百度资深研发工程师，百度 BAC 存储负责人
 （百度 BAC 的 redis3 服务目前机器规模达到1400台左右，总数据量接近100T，日 pv 超过1500亿，用户涵盖了百度贴吧、百度糯米、手机百度等百度内部几百个业务线。）
内容方向：
1）介绍百度 BAC 的 redis3 服务的整体架构；
2）交流在 redis3 实践中的一些经验。
以下为本次分享的干货PPT：
Topic 2：《TiKV Auto Balance》  **讲师：**崔秋，PingCAP 联合创始人
 内容方向：
1）PD - God View of TiKV； 2）TiKV 如何成为真正意义上的分布式存储引擎。
以下为本次分享的干货PPT：
最后，附赠一张今日爆满全场听讲图</description>
    </item>
    
    <item>
      <title>TiDB 下推 API 实现细节 - Union Scan</title>
      <link>https://pingcap.com/blog-cn/tidb-api-union-scan/</link>
      <pubDate>Sat, 18 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/tidb-api-union-scan/</guid>
      <description>TiDB 集群的架构分为上层的 SQL 层和底层的 KV 层，SQL 层通过调用 KV 层的 API 读写数据，由于 SQL 层的节点和 KV 层节点通常不在一台机器上，所以，每次调用 KV 的 API 都是一次 RPC, 而往往一个普通的 Select 语句的执行，需要调用几十到几十万次 KV 的接口，这样的结果就是性能非常差，绝大部分时间都消耗在 RPC 上。为了解决这个问题，TiDB 实现了下推 API，把一部分简单的 SQL 层的执行逻辑下推到 KV 层执行，让 KV 层可以理解 Table 和 Column，可以批量读取多行结果，可以用 Where 里的 Expression 对结果进行过滤, 可以计算聚合函数，大幅减少了 RPC 次数和数据的传输量。</description>
    </item>
    
    <item>
      <title>TiDB 下推 API 实现细节 - Union Scan</title>
      <link>https://pingcap.com/meetup/recording/tidb-api-union-scan/</link>
      <pubDate>Sat, 18 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/recording/tidb-api-union-scan/</guid>
      <description>TiDB 集群的架构分为上层的 SQL 层和底层的 KV 层，SQL 层通过调用 KV 层的 API 读写数据，由于 SQL 层的节点和 KV 层节点通常不在一台机器上，所以，每次调用 KV 的 API 都是一次 RPC, 而往往一个普通的 Select 语句的执行，需要调用几十到几十万次 KV 的接口，这样的结果就是性能非常差，绝大部分时间都消耗在 RPC 上。为了解决这个问题，TiDB 实现了下推 API，把一部分简单的 SQL 层的执行逻辑下推到 KV 层执行，让 KV 层可以理解 Table 和 Column，可以批量读取多行结果，可以用 Where 里的 Expression 对结果进行过滤, 可以计算聚合函数，大幅减少了 RPC 次数和数据的传输量。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.12】rocksdb 日志分析和性能调优经验</title>
      <link>https://pingcap.com/meetup/meetup-12-20160618/</link>
      <pubDate>Sat, 18 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-12-20160618/</guid>
      <description>今天是 PingCAP 第12期 Meetup ，主题是张金鹏分享的《 rocksdb 日志分析和性能调优经验 》。
张金鹏 《 rocksdb 日志分析和性能调优经验 》 张金鹏 | PingCAP 首先和大家一起分享如何分析 rocksdb 的 LOG，包括观察 compaction 相关的统计信息。例如每个 level 导致的 compaction 个数，每个 compaction job 的平均持续时长，compaction 导致的 read 总量和 write 量，以及写放大等；也可以观察整个系统是否有 stall 情况，持续多长时间，时间占比是多少等；另外，还有跟踪某个具体的 compaction job 的 input files 组成，output files，以及 compacting 过程中 drop 掉的 key 个数等信息。
然后根据 rocksdb 的 LOG 以及观察到的系统负载情况，来对不同参数组进行测试。
最后对比不同参数组的一些效果，包括同样的数据量导致的 compaction 放大比例；整个系统的 stall 情况；以及是否存在长时间的 compaction 导致的长时间高 CPU 及高 IO，从而对 TiKV 服务本身造成负面影响等情况。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.11】TiKV 的结构化存储模型优化 &amp; 深入解析 LevelDB</title>
      <link>https://pingcap.com/meetup/meetup-11-20160604/</link>
      <pubDate>Sat, 04 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-11-20160604/</guid>
      <description>今天是 PingCAP 第 11 期 Meetup ，主题是黄梦龙分享的《TiKV 的结构化存储模型优化》和张金鹏分享的《深入解析 LevelDB》。
黄梦龙《TiKV 的结构化存储模型优化》 黄梦龙 | PingCAP 目前 TiKV 的存储模型是简单的纯 Key-Value，在存储 SQL 结构化数据的过程中会产生比较严重的读写放大问题。我们计划为 TiKV 添加类似于 Hbase 的 ColumnFamily 机制，以使得 TiKV 与 TiDB 成为更加完美的搭档。大家对其中的实现细节，以及各种方案的优缺点进行了探讨。
张金鹏 《深入解析 LevelDB》 张金鹏 | PingCAP 首先介绍了 LevelDB 的整体架构，以及 LSM Tree 这一数据库中非常经典的结构。之后对 LevelDB 的写和读的流程进行分析，同时介绍 LevelDB 的 snapshot 功能的实现原理，以及 iterator 内部实现，和 iterator 存在的潜在问题。最后介绍 LevelDB 的 compaction 过程，以及存在的问题。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.10】TiKV 的网络模拟测试 &amp; TiDB 的条件下推优化</title>
      <link>https://pingcap.com/meetup/meetup-10-20160528/</link>
      <pubDate>Sat, 28 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-10-20160528/</guid>
      <description>今天是 PingCAP 第 10 期 Meetup ，跟京东小伙伴就 Raft group 中出现网络隔离时的 stale read 的问题做了充分讨论交流。之后进行的分享主题是《TiKV 的网络模拟测试》和《TiDB 的条件下推优化》。
随机讨论 Raft group 中出现网络隔离时，会有 stale read 的问题。目前我们考虑采用 region leader 的方案，保证在出现网络隔离的情况下，也能保证读的正确性。大家对其中的实现细节，以及各种方案的优缺点进行了讨论。
刘奇《TiKV 的网络模拟测试》 刘奇 | PingCAP TiKV 如何做分布式系统测试。目前已经构建了一套测试框架，提供设置网络延迟、网络隔离、节点掉线等功能，用于构建测试用例。
周昱行《TiDB 的条件下推优化》 周昱行 | PingCAP 使用基于 Row 的 Merge 算法，解决存在脏数据时，使用 TiDB 下推 API 优化的问题。
TiDB 的下推 API 相比基础的 API 对读性能有着几个数量级的提升，任何无法使用下推 API 的操作的请求，性能都慢到完全无法接受的程度。但是之前的实现并不能保证所有读请求都可以走下推 API, 当事务有写操作以后，无法使用下推 API。无法使用的原因是，事务提交之前，事务内写入的数据是对事务自身是可见的，下推 API 只能读到已提交的数据，返回的结果是错误的。
一个很常见的场景是在一个事务内 UPDATE 多个 Row，会退化到使用基础 KV API。
本周 TiDB 的一个更新，通过设计实现了一种基于 Row 的 Merge 算法，解决了这个问题。</description>
    </item>
    
    <item>
      <title>【Infra Meetup No.9】SQL 子查询优化 &amp; TiKV MVCC 和 GC 实现</title>
      <link>https://pingcap.com/meetup/meetup-09-20160521/</link>
      <pubDate>Sat, 21 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/meetup-09-20160521/</guid>
      <description>今天是 PingCAP 第9期 Meetup ，分享主题是韩飞的《 SQL 子查询优化》和刘奇的《 TiKV MVCC 和 GC 实现》。
韩飞《SQL 子查询优化》 韩飞 | PingCAP 分享 SQL subqueries 的变换和优化问题。关联子查询的优化是 SQL 优化中很重要的一部分，一般的执行方式方式是 correlated execution，但是可以通过引入 Apply 算子形式化证明所有的子查询都可以改写成 Join 的不同形式。在分布式场景下，Join 可以比 correlated execution 有更多的优化空间。
刘奇《TiKV MVCC 和 GC 实现》 刘奇 | PingCAP 详细分析了 TiKV 的 MVCC 机制, 事务模型，并进一步介绍了 percolator 事务模型的特点，以及对 GC 的影响。另外讲解了 TiKV 对 percolator 事务模型的改进, 以及 TiKV 的 GC 算法，和如何支持长时间的数据库备份和分析操作。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/about-cn/recruit/join/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/join/</guid>
      <description>PingCAP 是一个年轻开放、崇尚自由的团队，集合了一群充满好奇心、有追求、技艺高超、梦想用科技改变世界的小伙伴。你，要加入进来么？</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/about-cn/recruit/qa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/qa/</guid>
      <description>PingCAP 是一个年轻开放、崇尚自由的团队，集合了一群充满好奇心、有追求、技艺高超、梦想用科技改变世界的小伙伴。你，要加入进来么？</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/about-cn/recruit/TOC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/TOC/</guid>
      <description>PingCAP 招聘 目录  Engineering  TiKV 研发工程师 PD 研发工程师 TiDB 研发工程师 OLAP 引擎研发工程师 Tools 研发工程师 Cloud 研发工程师 前端开发工程师 QA 研发工程师 工程效率研发工程师 运维工程师   Business  资深商务经理 资深行业销售总监 资深售前技术总监 首席项目经理 资深/高级/中级 TiDB 交付 DBA 资深渠道合作总监   User Ecosystem  资深互联网架构师 用户生态技术运营 PingCAP University 培训专家 资深/高级/中级 TiDB DBA   Product &amp;amp; Design  数据库产品经理 网站产品经理 平面视觉设计师   I18N  Content Strategist Demand Generation Specialist   MKT  社区运营   Campus  Infrastructure Engineer Content Strategist Marketing Specialist TiDB DBA HR Management Trainee Infrastructure Engineer Intern HR Intern Content Strategist Intern   General &amp;amp; Administrative  招聘主管 分公司行政主管    </description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/blog-cn/TOC-User-Case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/blog-cn/TOC-User-Case/</guid>
      <description>用户案例 目录  互联网  知乎 美团点评 网易互娱 360 智能商业 京东云 小红书 小米 丰巢 易果集团 58 集团 爱奇艺 Shopee 转转（一） 转转（二） 汽车之家 摩拜单车(一) 摩拜单车(二) 二维火 客如云 今日头条 同程艺龙 去哪儿网 猿辅导 特来电 凤凰网 零氪科技 一面数据 Mobikok 卡思数据 量化派 G7   游戏  西山居 游族网络 盖娅互娱 株式会社 FUNYOURS JAPAN   金融  北京银行 平安科技 微众银行 华泰证券 马上消费 贝壳金服 Ping++ 360 金融   大型企业  OPPO 海航易建 威锐达测控 万达网络科技集团    </description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/community-cn/devcon2018/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/community-cn/devcon2018/</guid>
      <description>我们相信对技术的追求和对开源的热爱把你带到了这里。欢迎加入 TiDB 社区，和我们一起开启一段精彩的旅程。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/community-cn/devcon2019/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/community-cn/devcon2019/</guid>
      <description>我们相信对技术的追求和对开源的热爱把你带到了这里。欢迎加入 TiDB 社区，和我们一起开启一段精彩的旅程。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/community-cn/developer-group/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/community-cn/developer-group/</guid>
      <description>我们相信对技术的追求和对开源的热爱把你带到了这里。欢迎加入 TiDB 社区，和我们一起开启一段精彩的旅程。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/community-cn/hackathon2018/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/community-cn/hackathon2018/</guid>
      <description>我们相信对技术的追求和对开源的热爱把你带到了这里。欢迎加入 TiDB 社区，和我们一起开启一段精彩的旅程。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/community-cn/hackathon2019/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/community-cn/hackathon2019/</guid>
      <description>我们相信对技术的追求和对开源的热爱把你带到了这里。欢迎加入 TiDB 社区，和我们一起开启一段精彩的旅程。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/community-cn/organization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/community-cn/organization/</guid>
      <description>我们相信对技术的追求和对开源的热爱把你带到了这里。欢迎加入 TiDB 社区，和我们一起开启一段精彩的旅程。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/community-cn/paper-reading/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/community-cn/paper-reading/</guid>
      <description>我们相信对技术的追求和对开源的热爱把你带到了这里。欢迎加入 TiDB 社区，和我们一起开启一段精彩的旅程。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/community-cn/techday2017/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/community-cn/techday2017/</guid>
      <description>我们相信对技术的追求和对开源的热爱把你带到了这里。欢迎加入 TiDB 社区，和我们一起开启一段精彩的旅程。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/community-cn/techday2018/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/community-cn/techday2018/</guid>
      <description>我们相信对技术的追求和对开源的热爱把你带到了这里。欢迎加入 TiDB 社区，和我们一起开启一段精彩的旅程。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/community-cn/techday2019/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/community-cn/techday2019/</guid>
      <description>我们相信对技术的追求和对开源的热爱把你带到了这里。欢迎加入 TiDB 社区，和我们一起开启一段精彩的旅程。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/community-cn/tidb-performance-challenge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/community-cn/tidb-performance-challenge/</guid>
      <description>我们相信对技术的追求和对开源的热爱把你带到了这里。欢迎加入 TiDB 社区，和我们一起开启一段精彩的旅程。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/community-cn/tidb-usability-challenge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/community-cn/tidb-usability-challenge/</guid>
      <description>我们相信对技术的追求和对开源的热爱把你带到了这里。欢迎加入 TiDB 社区，和我们一起开启一段精彩的旅程。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/community-cn/user-group/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/community-cn/user-group/</guid>
      <description>我们相信对技术的追求和对开源的热爱把你带到了这里。欢迎加入 TiDB 社区，和我们一起开启一段精彩的旅程。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/community/developer-group/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/community/developer-group/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/community/organization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/community/organization/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/community/tidb-usability-challenge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/community/tidb-usability-challenge/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs-cn/dev/CONTRIBUTING/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/CONTRIBUTING/</guid>
      <description>TiDB 中文文档贡献指南 无论你是热爱技术的程序员，还是擅长书面表达的语言爱好者，亦或是纯粹想帮 TiDB 改进文档的热心小伙伴，都欢迎来为 TiDB 文档做贡献，一起打造更加易用友好的 TiDB 文档！
可贡献的内容 欢迎任何对提升 TiDB 文档质量、易用性、维护效率、翻译效率的贡献，比如，你可以在以下方面进行贡献：
 改进中文文档 翻译中文文档的更新 优化文档提交的流程、维护方式 建立 TiDB 文档的翻译记忆库、术语库  下面主要介绍了如何为前两项做出贡献。
改进中文文档 你可从以下任一方面入手：
 修复文档格式（如标点、空格、缩进、代码块等）和错别字 修改过时或不当的内容描述 增加缺失的文档内容 回复或解决 issue 并提 PR 更新相关文档 其它改进  翻译中文文档 TiDB 中文文档的日常更新特别活跃，相应地，TiDB 英文文档 也需要进行频繁的更新。这一过程会涉及很多的中译英，即将 pingcap/docs-cn 里已 merge 但尚未进行翻译处理的 Pull Request 翻译为英文，并提交 Pull Request 至 pingcap/docs 中。具体的认领方式如下。
 注意：
 由于受众不同，TiDB 的中文文档与英文文档并非完全相同。但绝大数情况下，中英版本会保持一致。 通常，TiDB 文档是先有中文版，后有英文版。但也有一小部分文档，是先有英文版，后有中文版。   中文翻译任务的认领方式 目前，中文文档翻译任务以 docs-cn 仓库的 Pull Request (PR) 为形式，通过仓库管理员为 PR 加上的 labels 来认领翻译任务、追踪翻译任务状态。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs-cn/dev/contributor-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/contributor-list/</guid>
      <description>Docs SIG Contributor List NOTE:
 This contributor list is updated on a bi-weekly basis. Last update time: 2020-03-12  Contributors  shenli siddontang iamxy qiuyesuifeng nolouch huachaohuang disksing thinxer iroi44 zhangjinpeng1987 andelf wenfengwang tiancaiamao yuanwhy c4pt0r GregoryIan zimulala zhumengzhu overvenus qgxiaozhan ngaut wangyanjun weekface coocood xuechunL iamzhout winoros holys bobotu innerr LinuxGit skimmilk6877 sunhao2017 liubin zhexuany buggithubs queenypingcap choleraehyq breeswish zhzy0077 blacktear23 hicqu lilin90 liubo0127 zhengwanbo zz-jason XuHuaiyu winkyao lishuai87 hashbone lamxTyler hanfei1991 jackysp wentaoxu tshqin datahoecn atmzhou birdstorm WangXiangUSTC limitless083 Connor1996 yyf965 dbaoutdo tennix yanyanqing meyu44 lhyPingcap CaitinChen kangxiaoning jinsheng1995 sivagao MyonKeminta wsabc01 fipped yanchaozhong liukun4515 AndreMouche july2993 crazycs520 motian yikeke emhlbmc YiniXu9506 lerencao ahdong2007 rleungx oasangqi mccxj sweetIan exialin httpcheck ppiao kennytm bugwz beckxie ilovesoup dcalvin zzh1985 TomShawn KASSADAR TaoZhengCN xiekeyi98 bigzuo csuzhangxc tender-boluo pcqz ZhaoQi99 lysu reAsOn2010 IzabelWang anotherrachel lichunzhu onlymellb ericsyh aytrack amyangfei husiyu bb7133 erjiaqing huangxiuyan superlzs0476 spongedu lonng imtbkcat BigCodeLess aylei cofyc tangenta xiaojingchen DanielZhangQD shuijing198799 jebter zyguan shuke987 AstroProfundis lance6716 tptpp 3pointer marsishandsome scsldb WalterWj djshow832 juliezhang1112 wshwsh12 shonge Deardrops sydnever fzhedu lhy1024 francis0407 JaySon-Huang Yisaer zyh-hust yilongrong Win-Man King-Dylan Damon-PingCap lucklove llussy qiukun elvizlai suzaku foreyes youjiali1995 ichn-hu baiyuqing AilinKid leoppro together-wang 20100507 n0vad3v toutdesuite ran-huang wjhuang2016 kissmydb SunRunAway eurekaka Little-Wallace sticnarf sre-bot 5kbpers cosven qw4990 hjk0205  For details, see Contributors to pingcap/docs-cn.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs-cn/dev/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/README/</guid>
      <description>TiDB 文档 欢迎来到 TiDB 文档库！这里存放的是 PingCAP 官网 TiDB 中文文档的源文件。官网英文文档的源文件则存放于 pingcap/docs。如果你发现或遇到了 TiDB 的文档问题，可随时提 Issue 来反馈，或者直接提交 Pull Request 来进行修改。
TiDB 文档结构 目前，TiDB 的文档维护以下四个版本，分别放置在相应的 branch：
 master：最新开发版 release-3.1：3.1 Beta 版 release-3.0：最新稳定版 release-2.1：2.1 稳定版  TiDB 的文档结构如下：
├── TOC.md ├── how-to ├── get-started ├── deploy ├── orchestrated ├── ansible.md ├── offline-ansible.md ├── docker.md ├── configure ├── maintain ├── troubleshoot ├── ... ├── reference ├── tools ├── tidb-binlog ├── ... ├── releases ├── tidb-in-kubernetes ├── faq ├── .</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs-cn/dev/TOC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/TOC/</guid>
      <description>TiDB 中文用户文档 目录  关于 TiDB  TiDB 简介   Benchmark 测试  如何用 Sysbench 测试 TiDB 如何对 TiDB 进行 TPC-C 测试 Sysbench 性能对比 - v3.0 对比 v2.1 TPC-C 性能对比 - v3.0 对比 v2.1 线上负载与 Add Index 相互影响测试 TiDB in Kubernetes Sysbench 性能测试 DM 1.0-GA 性能测试     主要概念  整体架构   核心特性  水平扩展 高可用     操作指南  快速上手  使用 Docker Compose 部署 TiDB SQL 基本操作 读取历史数据 TiDB Binlog 教程 TiDB Data Migration 教程 TiDB Lightning 教程 TiSpark 教程   部署  软硬件环境需求   集群部署方式  使用 Ansible 部署（推荐） 使用 Ansible 离线部署 使用 Docker 部署   跨地域冗余  跨数据中心部署方案 配置集群拓扑     使用 Ansible 部署 DM 集群   配置  时区 内存控制   安全  安全传输层协议 (TLS)  为 MySQL 客户端开启 TLS 为 TiDB 组件间开启 TLS     生成自签名证书   监控  概述 监控 TiDB 集群   迁移  迁移工具使用指南   从 MySQL 迁移  以 Amazon Aurora MySQL 为例     从 CSV 迁移   运维  Ansible 常见运维操作   备份与恢复  使用 Mydumper/TiDB Lightning 进行备份与恢复 使用 BR 进行备份与恢复 BR 备份与恢复场景示例   定位异常查询  定位慢查询 定位消耗系统资源多的查询     扩容缩容  使用 Ansible 扩容缩容   升级  升级至最新开发版   故障诊断  集群配置诊断 TiDB Lightning 故障诊断     参考手册  SQL  与 MySQL 兼容性对比   SQL 语言结构  字面值 Schema 对象名 关键字和保留字 用户自定义变量 表达式语法 注释语法   表属性和列属性  AUTO_RANDOM   数据类型  概述 默认值   数值类型  BIT BOOL|BOOLEAN TINYINT SMALLINT MEDIUMINT INT|INTEGER BIGINT DECIMAL FLOAT DOUBLE   日期和时间类型  DATE DATETIME TIMESTAMP TIME YEAR   字符串类型  CHAR VARCHAR TEXT LONGTEXT BINARY VARBINARY TINYBLOB BLOB MEDIUMBLOB LONGBLOB ENUM SET     JSON Type   函数与操作符  函数与操作符概述 表达式求值的类型转换 操作符 控制流程函数 字符串函数 数值函数与操作符 日期和时间函数 位函数和操作符 Cast 函数和操作符 加密和压缩函数 信息函数 JSON 函数 GROUP BY 聚合函数 窗口函数 其它函数 精度数学 下推到 TiKV 的表达式列表   SQL 语句  ADD COLUMN ADD INDEX ADMIN ALTER DATABASE ALTER TABLE ALTER USER ANALYZE TABLE BEGIN COMMIT CREATE DATABASE CREATE INDEX CREATE SEQUENCE CREATE TABLE LIKE CREATE TABLE CREATE USER CREATE VIEW DEALLOCATE DELETE DESC DESCRIBE DO DROP COLUMN DROP DATABASE DROP INDEX DROP SEQUENCE DROP TABLE DROP USER DROP VIEW EXECUTE EXPLAIN ANALYZE EXPLAIN FLASHBACK TABLE FLUSH PRIVILEGES FLUSH STATUS FLUSH TABLES GRANT &amp;lt;privileges&amp;gt; INSERT KILL [TIDB] LOAD DATA MODIFY COLUMN PREPARE RECOVER TABLE RENAME INDEX RENAME TABLE REPLACE REVOKE &amp;lt;privileges&amp;gt; ROLLBACK SELECT SET [NAMES|CHARACTER SET] SET PASSWORD SET TRANSACTION SET [GLOBAL|SESSION] &amp;lt;variable&amp;gt; SHOW CHARACTER SET SHOW COLLATION SHOW [FULL] COLUMNS FROM SHOW CREATE SEQUENCE SHOW CREATE TABLE SHOW CREATE USER SHOW DATABASES SHOW ENGINES SHOW ERRORS SHOW [FULL] FIELDS FROM SHOW GRANTS SHOW INDEXES [FROM|IN] SHOW INDEX [FROM|IN] SHOW KEYS [FROM|IN] SHOW PRIVILEGES SHOW [FULL] PROCESSSLIST SHOW SCHEMAS SHOW [FULL] TABLES SHOW TABLE REGIONS SHOW TABLE STATUS SHOW [GLOBAL|SESSION] VARIABLES SHOW WARNINGS SPLIT REGION START TRANSACTION TRACE TRUNCATE UPDATE USE     约束 生成列 分区表 字符集 SQL 模式 视图   配置  tidb-server  MySQL 系统变量 TiDB 特定系统变量 配置参数 配置文件描述   pd-server  配置参数 配置文件描述   tikv-server  配置参数 配置文件描述     安全  与 MySQL 的安全特性差异 TiDB 数据库权限管理 TiDB 用户账户管理 基于角色的访问控制 TiDB 证书鉴权使用指南   事务  事务概览 隔离级别 乐观事务 悲观事务   系统数据库  mysql information_schema     错误码 支持的连接器和 API   垃圾回收 (GC)  GC 机制简介 GC 配置   性能调优  SQL 优化流程 理解 TiDB 执行计划 执行计划绑定 统计信息概述 Optimizer Hints Follower Read 使用 SQL 语句检查 TiDB 集群状态 Statement Summary Table TiKV 调优 TiDB 最佳实践   监控指标  Overview 面板 TiDB 面板 PD 面板 TiKV 面板     报警规则   最佳实践  HAProxy 最佳实践 Java 应用开发最佳实践 高并发写入场景最佳实践 Grafana 监控最佳实践 PD 调度策略最佳实践 海量 Region 集群调优最佳实践   TiSpark 使用指南 TiDB Binlog  概述 部署使用 运维管理 配置说明  Pump Drainer   版本升级 监控告警 增量恢复 Kafka 自定义开发 TiDB Binlog Relay Log 集群间双向同步 术语表   故障诊断  故障诊断 常见错误修复     FAQ   周边工具  工具使用指南 Mydumper Loader Syncer   Data Migration  概述  DM 架构 同步功能介绍 使用限制 DM-worker 简介 DM Relay Log   核心特性  Table Routing Black &amp;amp; White Lists Binlog Event Filter 同步延迟监控   Shard Support  简介 使用限制 手动处理 Sharding DDL Lock     使用场景  简单的从库同步场景 分库分表合并场景 分表合并数据迁移最佳实践 DM-worker 在上游 MySQL 主从间切换   部署使用 配置  概述 DM-master 配置 DM-worker 配置 任务配置   DM 集群管理  集群操作 集群升级   DM 同步任务管理  管理数据同步任务 任务前置检查 任务状态查询 跳过或替代执行异常的 SQL 语句     监控 DM 集群   从与 MySQL 兼容的数据库迁移数据  从 MySQL/Amazon Aurora MySQL 迁移数据     DM Portal   DM 故障诊断  故障诊断 错误含义 常见错误修复     DM FAQ   版本发布历史  v1.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs-cn/stable/CONTRIBUTING/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/CONTRIBUTING/</guid>
      <description>TiDB 中文文档贡献指南 无论你是热爱技术的程序员，还是擅长书面表达的语言爱好者，亦或是纯粹想帮 TiDB 改进文档的热心小伙伴，都欢迎来为 TiDB 文档做贡献，一起打造更加易用友好的 TiDB 文档！
可贡献的内容 欢迎任何对提升 TiDB 文档质量、易用性、维护效率、翻译效率的贡献，比如，你可以在以下方面进行贡献：
 改进中文文档 翻译中文文档的更新 优化文档提交的流程、维护方式 建立 TiDB 文档的翻译记忆库、术语库  下面主要介绍了如何为前两项做出贡献。
改进中文文档 你可从以下任一方面入手：
 修复文档格式（如标点、空格、缩进、代码块等）和错别字 修改过时或不当的内容描述 增加缺失的文档内容 回复或解决 issue 并提 PR 更新相关文档 其它改进  翻译中文文档 TiDB 中文文档的日常更新特别活跃，相应地，TiDB 英文文档 也需要进行频繁的更新。这一过程会涉及很多的中译英，即将 pingcap/docs-cn 里已 merge 但尚未进行翻译处理的 Pull Request 翻译为英文，并提交 Pull Request 至 pingcap/docs 中。具体的认领方式如下。
 注意：
 由于受众不同，TiDB 的中文文档与英文文档并非完全相同。但绝大数情况下，中英版本会保持一致。 通常，TiDB 文档是先有中文版，后有英文版。但也有一小部分文档，是先有英文版，后有中文版。   中文翻译任务的认领方式 目前，中文文档翻译任务以 docs-cn 仓库的 Pull Request (PR) 为形式，通过仓库管理员为 PR 加上的 labels 来认领翻译任务、追踪翻译任务状态。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs-cn/stable/contributor-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/contributor-list/</guid>
      <description>Docs SIG Contributor List NOTE:
 This contributor list is updated on a bi-weekly basis. Last update time: 2020-03-12  Contributors  shenli siddontang iamxy qiuyesuifeng nolouch huachaohuang disksing thinxer iroi44 zhangjinpeng1987 andelf wenfengwang tiancaiamao yuanwhy c4pt0r GregoryIan zimulala zhumengzhu overvenus qgxiaozhan ngaut wangyanjun weekface coocood xuechunL iamzhout winoros holys bobotu innerr LinuxGit skimmilk6877 sunhao2017 liubin zhexuany buggithubs queenypingcap choleraehyq breeswish zhzy0077 blacktear23 hicqu lilin90 liubo0127 zhengwanbo zz-jason XuHuaiyu winkyao lishuai87 hashbone lamxTyler hanfei1991 jackysp wentaoxu tshqin datahoecn atmzhou birdstorm WangXiangUSTC limitless083 Connor1996 yyf965 dbaoutdo tennix yanyanqing meyu44 lhyPingcap CaitinChen kangxiaoning jinsheng1995 sivagao MyonKeminta wsabc01 fipped yanchaozhong liukun4515 AndreMouche july2993 crazycs520 motian yikeke emhlbmc YiniXu9506 lerencao ahdong2007 rleungx oasangqi mccxj sweetIan exialin httpcheck ppiao kennytm bugwz beckxie ilovesoup dcalvin zzh1985 TomShawn KASSADAR TaoZhengCN xiekeyi98 bigzuo csuzhangxc tender-boluo pcqz ZhaoQi99 lysu reAsOn2010 IzabelWang anotherrachel lichunzhu onlymellb ericsyh aytrack amyangfei husiyu bb7133 erjiaqing huangxiuyan superlzs0476 spongedu lonng imtbkcat BigCodeLess aylei cofyc tangenta xiaojingchen DanielZhangQD shuijing198799 jebter zyguan shuke987 AstroProfundis lance6716 tptpp 3pointer marsishandsome scsldb WalterWj djshow832 juliezhang1112 wshwsh12 shonge Deardrops sydnever fzhedu lhy1024 francis0407 JaySon-Huang Yisaer zyh-hust yilongrong Win-Man King-Dylan Damon-PingCap lucklove llussy qiukun elvizlai suzaku foreyes youjiali1995 ichn-hu baiyuqing AilinKid leoppro together-wang 20100507 n0vad3v toutdesuite ran-huang wjhuang2016 kissmydb SunRunAway eurekaka Little-Wallace sticnarf sre-bot 5kbpers cosven qw4990 hjk0205  For details, see Contributors to pingcap/docs-cn.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs-cn/stable/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/README/</guid>
      <description>TiDB 文档 欢迎来到 TiDB 文档库！这里存放的是 PingCAP 官网 TiDB 中文文档的源文件。官网英文文档的源文件则存放于 pingcap/docs。如果你发现或遇到了 TiDB 的文档问题，可随时提 Issue 来反馈，或者直接提交 Pull Request 来进行修改。
TiDB 文档结构 目前，TiDB 的文档维护以下四个版本，分别放置在相应的 branch：
 master：最新开发版 release-3.1：3.1 Beta 版 release-3.0：最新稳定版 release-2.1：2.1 稳定版  TiDB 的文档结构如下：
├── TOC.md ├── how-to ├── get-started ├── deploy ├── orchestrated ├── ansible.md ├── offline-ansible.md ├── docker.md ├── configure ├── maintain ├── troubleshoot ├── ... ├── reference ├── tools ├── tidb-binlog ├── ... ├── releases ├── tidb-in-kubernetes ├── faq ├── .</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs-cn/stable/TOC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/TOC/</guid>
      <description>TiDB 中文用户文档 目录  关于 TiDB  TiDB 简介   Benchmark 测试  如何用 Sysbench 测试 TiDB 如何对 TiDB 进行 TPC-C 测试 Sysbench 性能对比 - v3.0 对比 v2.1 TPC-C 性能对比 - v3.0 对比 v2.1 线上负载与 Add Index 相互影响测试 TiDB in Kubernetes Sysbench 性能测试 DM 1.0-GA 性能测试     主要概念  整体架构   核心特性  水平扩展 高可用     操作指南  快速上手  创建集群  使用 Docker Compose 部署 TiDB 集群     SQL 基本操作 读取历史数据 TiDB Binlog 教程 TiDB Data Migration 教程 TiDB Lightning 教程 TiSpark 教程   部署  软硬件环境需求   集群部署方式  使用 Ansible 部署（推荐） 使用 Ansible 离线部署 使用 Docker 部署   跨地域冗余  跨数据中心部署方案 配置集群拓扑     使用 Ansible 部署 DM 集群   配置  时区 内存控制   安全  安全传输层协议 (TLS)  为 MySQL 客户端开启 TLS 为 TiDB 组件间开启 TLS     生成自签名证书   监控  概述 监控 TiDB 集群   迁移  迁移工具使用指南   从 MySQL 迁移  以 Amazon Aurora MySQL 为例     从 CSV 迁移   运维  Ansible 常见运维操作   备份与恢复 定位异常查询  定位慢查询 定位消耗系统资源多的查询     扩容缩容  使用 Ansible 扩容缩容   升级  升级至 TiDB 3.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs-cn/v2.1/CONTRIBUTING/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/CONTRIBUTING/</guid>
      <description>TiDB 中文文档贡献指南 无论你是热爱技术的程序员，还是擅长书面表达的语言爱好者，亦或是纯粹想帮 TiDB 改进文档的热心小伙伴，都欢迎来为 TiDB 文档做贡献，一起打造更加易用友好的 TiDB 文档！
可贡献的内容 欢迎任何对提升 TiDB 文档质量、易用性、维护效率、翻译效率的贡献，比如，你可以在以下方面进行贡献：
 改进中文文档 翻译中文文档的更新 优化文档提交的流程、维护方式 建立 TiDB 文档的翻译记忆库、术语库  下面主要介绍了如何为前两项做出贡献。
改进中文文档 你可从以下任一方面入手：
 修复文档格式（如标点、空格、缩进、代码块等）和错别字 修改过时或不当的内容描述 增加缺失的文档内容 回复或解决 issue 并提 PR 更新相关文档 其它改进  翻译中文文档 TiDB 中文文档的日常更新特别活跃，相应地，TiDB 英文文档 也需要进行频繁的更新。这一过程会涉及很多的中译英，即将 pingcap/docs-cn 里已 merge 但尚未进行翻译处理的 Pull Request 翻译为英文，并提交 Pull Request 至 pingcap/docs 中。具体的认领方式如下。
 注意：
 由于受众不同，TiDB 的中文文档与英文文档并非完全相同。但绝大数情况下，中英版本会保持一致。 通常，TiDB 文档是先有中文版，后有英文版。但也有一小部分文档，是先有英文版，后有中文版。   中文翻译任务的认领方式 目前，中文文档翻译任务以 docs-cn 仓库的 Pull Request (PR) 为形式，通过仓库管理员为 PR 加上的 labels 来认领翻译任务、追踪翻译任务状态。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs-cn/v2.1/contributor-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/contributor-list/</guid>
      <description>Docs SIG Contributor List NOTE:
 This contributor list is updated on a bi-weekly basis. Last update time: 2020-03-12  Contributors  shenli siddontang iamxy qiuyesuifeng nolouch huachaohuang disksing thinxer iroi44 zhangjinpeng1987 andelf wenfengwang tiancaiamao yuanwhy c4pt0r GregoryIan zimulala zhumengzhu overvenus qgxiaozhan ngaut wangyanjun weekface coocood xuechunL iamzhout winoros holys bobotu innerr LinuxGit skimmilk6877 sunhao2017 liubin zhexuany buggithubs queenypingcap choleraehyq breeswish zhzy0077 blacktear23 hicqu lilin90 liubo0127 zhengwanbo zz-jason XuHuaiyu winkyao lishuai87 hashbone lamxTyler hanfei1991 jackysp wentaoxu tshqin datahoecn atmzhou birdstorm WangXiangUSTC limitless083 Connor1996 yyf965 dbaoutdo tennix yanyanqing meyu44 lhyPingcap CaitinChen kangxiaoning jinsheng1995 sivagao MyonKeminta wsabc01 fipped yanchaozhong liukun4515 AndreMouche july2993 crazycs520 motian yikeke emhlbmc YiniXu9506 lerencao ahdong2007 rleungx oasangqi mccxj sweetIan exialin httpcheck ppiao kennytm bugwz beckxie ilovesoup dcalvin zzh1985 TomShawn KASSADAR TaoZhengCN xiekeyi98 bigzuo csuzhangxc tender-boluo pcqz ZhaoQi99 lysu reAsOn2010 IzabelWang anotherrachel lichunzhu onlymellb ericsyh aytrack amyangfei husiyu bb7133 erjiaqing huangxiuyan superlzs0476 spongedu lonng imtbkcat BigCodeLess aylei cofyc tangenta xiaojingchen DanielZhangQD shuijing198799 jebter zyguan shuke987 AstroProfundis lance6716 tptpp 3pointer marsishandsome scsldb WalterWj djshow832 juliezhang1112 wshwsh12 shonge Deardrops sydnever fzhedu lhy1024 francis0407 JaySon-Huang Yisaer zyh-hust yilongrong Win-Man King-Dylan Damon-PingCap lucklove llussy qiukun elvizlai suzaku foreyes youjiali1995 ichn-hu baiyuqing AilinKid leoppro together-wang 20100507 n0vad3v toutdesuite ran-huang wjhuang2016 kissmydb SunRunAway eurekaka Little-Wallace sticnarf sre-bot 5kbpers cosven qw4990 hjk0205  For details, see Contributors to pingcap/docs-cn.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs-cn/v2.1/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/README/</guid>
      <description>TiDB 文档 欢迎来到 TiDB 文档库！这里存放的是 PingCAP 官网 TiDB 中文文档的源文件。官网英文文档的源文件则存放于 pingcap/docs。如果你发现或遇到了 TiDB 的文档问题，可随时提 Issue 来反馈，或者直接提交 Pull Request 来进行修改。
TiDB 文档结构 目前，TiDB 的文档维护以下四个版本，分别放置在相应的 branch：
 master：最新开发版 release-3.1：3.1 Beta 版 release-3.0：最新稳定版 release-2.1：2.1 稳定版  TiDB 的文档结构如下：
├── TOC.md ├── how-to ├── get-started ├── deploy ├── orchestrated ├── ansible.md ├── offline-ansible.md ├── docker.md ├── configure ├── maintain ├── troubleshoot ├── ... ├── reference ├── tools ├── tidb-binlog ├── ... ├── releases ├── tidb-in-kubernetes ├── faq ├── .</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs-cn/v2.1/TOC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/TOC/</guid>
      <description>TiDB 中文用户文档 目录  关于 TiDB  TiDB 简介   Benchmark 测试  如何用 Sysbench 测试 TiDB Sysbench 性能对比 - v2.1 对比 v2.0 TPC-H 50G 性能对比 - v2.1 对比 v2.0     主要概念  整体架构   核心特性  水平扩展 高可用     操作指南  快速上手  创建集群  使用 Docker Compose     SQL 基本操作 读取历史数据 TiDB Binlog 教程 TiDB Data Migration 教程 TiDB Lightning 教程 TiSpark 教程   部署  软硬件环境需求   集群部署方式  使用 Ansible 部署（推荐） 使用 Ansible 离线部署 使用 Docker 部署   跨地域冗余  跨数据中心部署方案 配置集群拓扑     使用 Ansible 部署 DM 集群   配置  时区 内存控制   安全  安全传输层协议 (TLS)  为 MySQL 客户端开启 TLS 为 TiDB 组件间开启 TLS     生成自签名证书   监控  概述 监控 TiDB 集群   迁移  概述   从 MySQL 迁移  全量迁移 增量复制     从 MySQL/Amazon Aurora MySQL 迁移数据 从 CSV 迁移   运维  Ansible 常见运维操作   备份与恢复   定位慢查询   扩容缩容  使用 Ansible 扩容缩容   升级  升级至 TiDB 2.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs-cn/v3.1/CONTRIBUTING/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/CONTRIBUTING/</guid>
      <description>TiDB 中文文档贡献指南 无论你是热爱技术的程序员，还是擅长书面表达的语言爱好者，亦或是纯粹想帮 TiDB 改进文档的热心小伙伴，都欢迎来为 TiDB 文档做贡献，一起打造更加易用友好的 TiDB 文档！
可贡献的内容 欢迎任何对提升 TiDB 文档质量、易用性、维护效率、翻译效率的贡献，比如，你可以在以下方面进行贡献：
 改进中文文档 翻译中文文档的更新 优化文档提交的流程、维护方式 建立 TiDB 文档的翻译记忆库、术语库  下面主要介绍了如何为前两项做出贡献。
改进中文文档 你可从以下任一方面入手：
 修复文档格式（如标点、空格、缩进、代码块等）和错别字 修改过时或不当的内容描述 增加缺失的文档内容 回复或解决 issue 并提 PR 更新相关文档 其它改进  翻译中文文档 TiDB 中文文档的日常更新特别活跃，相应地，TiDB 英文文档 也需要进行频繁的更新。这一过程会涉及很多的中译英，即将 pingcap/docs-cn 里已 merge 但尚未进行翻译处理的 Pull Request 翻译为英文，并提交 Pull Request 至 pingcap/docs 中。具体的认领方式如下。
 注意：
 由于受众不同，TiDB 的中文文档与英文文档并非完全相同。但绝大数情况下，中英版本会保持一致。 通常，TiDB 文档是先有中文版，后有英文版。但也有一小部分文档，是先有英文版，后有中文版。   中文翻译任务的认领方式 目前，中文文档翻译任务以 docs-cn 仓库的 Pull Request (PR) 为形式，通过仓库管理员为 PR 加上的 labels 来认领翻译任务、追踪翻译任务状态。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs-cn/v3.1/contributor-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/contributor-list/</guid>
      <description>Docs SIG Contributor List NOTE:
 This contributor list is updated on a bi-weekly basis. Last update time: 2020-03-12  Contributors  shenli siddontang iamxy qiuyesuifeng nolouch huachaohuang disksing thinxer iroi44 zhangjinpeng1987 andelf wenfengwang tiancaiamao yuanwhy c4pt0r GregoryIan zimulala zhumengzhu overvenus qgxiaozhan ngaut wangyanjun weekface coocood xuechunL iamzhout winoros holys bobotu innerr LinuxGit skimmilk6877 sunhao2017 liubin zhexuany buggithubs queenypingcap choleraehyq breeswish zhzy0077 blacktear23 hicqu lilin90 liubo0127 zhengwanbo zz-jason XuHuaiyu winkyao lishuai87 hashbone lamxTyler hanfei1991 jackysp wentaoxu tshqin datahoecn atmzhou birdstorm WangXiangUSTC limitless083 Connor1996 yyf965 dbaoutdo tennix yanyanqing meyu44 lhyPingcap CaitinChen kangxiaoning jinsheng1995 sivagao MyonKeminta wsabc01 fipped yanchaozhong liukun4515 AndreMouche july2993 crazycs520 motian yikeke emhlbmc YiniXu9506 lerencao ahdong2007 rleungx oasangqi mccxj sweetIan exialin httpcheck ppiao kennytm bugwz beckxie ilovesoup dcalvin zzh1985 TomShawn KASSADAR TaoZhengCN xiekeyi98 bigzuo csuzhangxc tender-boluo pcqz ZhaoQi99 lysu reAsOn2010 IzabelWang anotherrachel lichunzhu onlymellb ericsyh aytrack amyangfei husiyu bb7133 erjiaqing huangxiuyan superlzs0476 spongedu lonng imtbkcat BigCodeLess aylei cofyc tangenta xiaojingchen DanielZhangQD shuijing198799 jebter zyguan shuke987 AstroProfundis lance6716 tptpp 3pointer marsishandsome scsldb WalterWj djshow832 juliezhang1112 wshwsh12 shonge Deardrops sydnever fzhedu lhy1024 francis0407 JaySon-Huang Yisaer zyh-hust yilongrong Win-Man King-Dylan Damon-PingCap lucklove llussy qiukun elvizlai suzaku foreyes youjiali1995 ichn-hu baiyuqing AilinKid leoppro together-wang 20100507 n0vad3v toutdesuite ran-huang wjhuang2016 kissmydb SunRunAway eurekaka Little-Wallace sticnarf sre-bot 5kbpers cosven qw4990 hjk0205  For details, see Contributors to pingcap/docs-cn.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs-cn/v3.1/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/README/</guid>
      <description>TiDB 文档 欢迎来到 TiDB 文档库！这里存放的是 PingCAP 官网 TiDB 中文文档的源文件。官网英文文档的源文件则存放于 pingcap/docs。如果你发现或遇到了 TiDB 的文档问题，可随时提 Issue 来反馈，或者直接提交 Pull Request 来进行修改。
TiDB 文档结构 目前，TiDB 的文档维护以下四个版本，分别放置在相应的 branch：
 master：最新开发版 release-3.1：3.1 Beta 版 release-3.0：最新稳定版 release-2.1：2.1 稳定版  TiDB 的文档结构如下：
├── TOC.md ├── how-to ├── get-started ├── deploy ├── orchestrated ├── ansible.md ├── offline-ansible.md ├── docker.md ├── configure ├── maintain ├── troubleshoot ├── ... ├── reference ├── tools ├── tidb-binlog ├── ... ├── releases ├── tidb-in-kubernetes ├── faq ├── .</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs-cn/v3.1/TOC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/TOC/</guid>
      <description>TiDB 中文用户文档 目录  关于 TiDB  TiDB 简介   Benchmark 测试  如何用 Sysbench 测试 TiDB 如何对 TiDB 进行 TPC-C 测试 Sysbench 性能对比 - v3.0 对比 v2.1 TPC-C 性能对比 - v3.0 对比 v2.1 线上负载与 Add Index 相互影响测试 TiDB in Kubernetes Sysbench 性能测试 DM 1.0-GA 性能测试     主要概念  整体架构   核心特性  水平扩展 高可用     操作指南  快速上手  创建集群  使用 Docker Compose 部署 TiDB 集群     SQL 基本操作 读取历史数据 TiDB Binlog 教程 TiDB Data Migration 教程 TiDB Lightning 教程 TiSpark 教程   部署  软硬件环境需求   集群部署方式  使用 Ansible 部署（推荐） 使用 Ansible 离线部署 使用 Docker 部署   跨地域冗余  跨数据中心部署方案 配置集群拓扑     使用 Ansible 部署 DM 集群   配置  时区 内存控制   安全  安全传输层协议 (TLS)  为 MySQL 客户端开启 TLS 为 TiDB 组件间开启 TLS     生成自签名证书   监控  概述 监控 TiDB 集群   迁移  迁移工具使用指南   从 MySQL 迁移  以 Amazon Aurora MySQL 为例     从 CSV 迁移   运维  Ansible 常见运维操作   备份与恢复  使用 Mydumper/TiDB Lightning 进行备份与恢复 使用 BR 进行备份与恢复 BR 备份与恢复场景示例   定位异常查询  定位慢查询 定位消耗系统资源多的查询     扩容缩容  使用 Ansible 扩容缩容   升级  升级至 TiDB 3.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/dev/CONTRIBUTING/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/CONTRIBUTING/</guid>
      <description>TiDB Documentation Contributing Guide Welcome to TiDB documentation! We are excited about the prospect of you joining TiDB Community.
What you can contribute You can start from any one of the following items to help improve TiDB Docs at the PingCAP website:
 Fix typos or format (punctuation, space, indentation, code block, etc.) Fix or update inappropriate or outdated descriptions Add missing content (sentence, paragraph, or a new document) Translate docs changes from English to Chinese Submit, reply to, and resolve docs issues (Advanced) Review Pull Requests created by others  Before you contribute Before you contribute, please take a quick look at some general information about TiDB documentation maintenance.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/dev/dev-guide/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/dev-guide/deploy/</guid>
      <description>Build for deployment The easiest way to deploy TiDB is to use Docker Compose, see TiDB Docker Compose Deployment. For more deployment methods, see TiDB deployment methods.
Before you begin You need to check the supported platforms and prerequisites first.
Build and install TiDB components You can use the build script to build and install TiDB components in the bin directory.
You can use the update script to update all the TiDB components to the latest version.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/dev/dev-guide/develop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/dev-guide/develop/</guid>
      <description>Build for Development If you want to develop the TiDB project, you can follow this guide.
Before you begin You need to check the supported platforms and prerequisites first.
Build TiKV   Get TiKV source code from GitHub
git clone https://github.com/tikv/tikv.git cd tikv   Run all unit tests:
make dev   Build in release mode:
make release   Build TiDB   Make sure the GOPATH environment is set correctly.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/dev/dev-guide/requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/dev-guide/requirements/</guid>
      <description>Build requirements Learn about the following requirements before building TiDB.
Supported platforms The following table lists TiDB support for common architectures and operating systems.
   Architecture Operating System Status     AMD64 Linux Ubuntu (14.04+) Stable   AMD64 Linux CentOS (7+) Stable   AMD64 macOS Experimental    Prerequisites  Go 1.12+ rustup GCC 4.8+ with static library CMake 3.1+  The check requirement script can help you check prerequisites and install the missing ones automatically.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/dev/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/README/</guid>
      <description>TiDB Documentation This repository stores all the source files of TiDB Docs at the PingCAP website, while the pingcap/docs-cn repository stores all the source files of TiDB Documentation in Chinese. If you find documentation issues, feel free to create an Issue to let us know or directly create a Pull Request to help fix or update it.
Docs structure The general TiDB documentation structure is as follows:
├── TOC.md ├── how-to ├── get-started ├── deploy ├── orchestrated ├── ansible.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/dev/resources/markdownlint-rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/resources/markdownlint-rules/</guid>
      <description>Markdown Rules TiDB documentation is written in Markdown. To ensure the quality and consistent format, you should follow certain Markdown rules when modifying documents. We set a CI check for Markdown files in the docs repository, which is the markdownlint check.
If you submit a Pull Request (PR) that does not conform to the rules, your PR might fail to pass the markdownlint check. In such cases, you might not be able to merge this PR.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/dev/TOC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/TOC/</guid>
      <description>TiDB Documentation Documentation List  Introduction  TiDB Introduction   Benchmarks  How to Test TiDB Using Sysbench How to Run TPC-C Test on TiDB Sysbench Performance Test - v3.0 vs. v2.1 TPC-C Performance Test - v3.0 vs. v2.1 Interaction Test on Online Workloads and ADD INDEX Operations TiDB in Kubernetes Sysbench Test DM 1.0-alpha Benchmark Report DM 1.0-GA Benchmark Report     Concepts  Architecture   Key Features  Horizontal Scalability MySQL Compatible Syntax Replicate from and to MySQL Distributed Transactions with Strong Consistency Cloud Native Architecture Minimize ETL with HTAP Fault Tolerance &amp;amp; Recovery with Raft Automatic Rebalancing Deployment and Orchestration with Ansible, Kubernetes, Docker JSON Support Spark Integration Read Historical Data Without Restoring from Backup Fast Import and Restore of Data Hybrid of Column and Row Storage SQL Plan Management Open Source Online Schema Changes     How-to  Get Started  Start a Cluster  From Binary From Homebrew From DBdeployer In Docker Compose     Explore SQL with TiDB Import Example Database Read Historical Data TiDB Binlog Tutorial TiDB Data Migration Tutorial TiDB Lightning Tutorial TiSpark Quick Start Guide   Deploy  Hardware Recommendations   From Binary Tarball  For Testing Environments For Production Environments   Orchestrated Deployment  Ansible Deployment (Recommended) Ansible Offline Deployment Docker Deployment   Geographic Redundancy  Overview Configure Location Awareness     Data Migration with Ansible   Configure  Time Zone Memory Control   Secure  Transport Layer Security (TLS)  Enable TLS For MySQL Clients Enable TLS Between TiDB Components     Generate Self-signed Certificates   Monitor  Overview Monitor a TiDB Cluster   Migrate  Migration Tools User Guide   Migrate from MySQL  Migration Case of Amazon Aurora     Migrate from CSV   Maintain  Common Ansible Operations   Backup and Restore  Use Mydumper and TiDB Lightning Use BR BR Usage Scenarios   Identify Abnormal Queries  Identify Slow Queries Identify Expensive Queries     Scale  Scale using Ansible Scale a TiDB Cluster   Upgrade  Upgrade to the Latest Version     Troubleshoot  Troubleshoot Cluster Setup Troubleshoot TiDB Lightning     Reference  SQL  MySQL Compatibility   SQL Language Structure  Literal Values Schema Object Names Keywords and Reserved Words User-Defined Variables Expression Syntax Comment Syntax   Attributes  AUTO_RANDOM   Data Types  Overview Default Values   Numeric Types  BIT BOOL|BOOLEAN TINYINT SMALLINT MEDIUMINT INT|INTEGER BIGINT DECIMAL FLOAT DOUBLE   Date and Time Types  DATE DATETIME TIMESTAMP TIME YEAR   String Types  CHAR VARCHAR TEXT LONGTEXT BINARY VARBINARY TINYBLOB BLOB MEDIUMBLOB LONGBLOB ENUM SET     JSON Type   Functions and Operators  Function and Operator Reference Type Conversion in Expression Evaluation Operators Control Flow Functions String Functions Numeric Functions and Operators Date and Time Functions Bit Functions and Operators Cast Functions and Operators Encryption and Compression Functions Information Functions JSON Functions Aggregate (GROUP BY) Functions Window Functions Miscellaneous Functions Precision Math List of Expressions for Pushdown   SQL Statements  ADD COLUMN ADD INDEX ADMIN ALTER DATABASE ALTER TABLE ALTER USER ANALYZE TABLE BEGIN COMMIT CREATE DATABASE CREATE INDEX CREATE TABLE LIKE CREATE TABLE CREATE USER CREATE VIEW DEALLOCATE DELETE DESC DESCRIBE DO DROP COLUMN DROP DATABASE DROP INDEX DROP TABLE DROP USER DROP VIEW EXECUTE EXPLAIN ANALYZE EXPLAIN FLUSH PRIVILEGES FLUSH STATUS FLUSH TABLES GRANT &amp;lt;privileges&amp;gt; INSERT KILL [TIDB] LOAD DATA MODIFY COLUMN PREPARE RECOVER TABLE RENAME INDEX RENAME TABLE REPLACE REVOKE &amp;lt;privileges&amp;gt; ROLLBACK SELECT SET [NAMES|CHARACTER SET] SET PASSWORD SET TRANSACTION SET [GLOBAL|SESSION] &amp;lt;variable&amp;gt; SHOW CHARACTER SET SHOW COLLATION SHOW [FULL] COLUMNS FROM SHOW CREATE TABLE SHOW CREATE USER SHOW DATABASES SHOW ENGINES SHOW ERRORS SHOW [FULL] FIELDS FROM SHOW GRANTS SHOW INDEXES [FROM|IN] SHOW INDEX [FROM|IN] SHOW KEYS [FROM|IN] SHOW PRIVILEGES SHOW [FULL] PROCESSSLIST SHOW SCHEMAS SHOW [FULL] TABLES SHOW TABLE REGIONS SHOW TABLE STATUS SHOW [GLOBAL|SESSION] VARIABLES SHOW WARNINGS SPLIT REGION START TRANSACTION TRACE TRUNCATE UPDATE USE     Constraints Generated Columns Partitioning Character Set SQL Mode Views   Configuration  tidb-server  MySQL System Variables TiDB Specific System Variables Configuration Flags Configuration File   pd-server  Configuration Flags Configuration File   tikv-server  Configuration Flags Configuration File     Security  Security Compatibility with MySQL The TiDB Access Privilege System TiDB User Account Management Role-Based Access Control Certificate-Based Authentication   Transactions  Overview Transaction Model Isolation Levels Pessimistic Transactions   System Databases  mysql information_schema     Errors Codes Supported Client Drivers   Garbage Collection (GC)  GC Overview GC Configuration   Performance  Overview Understanding the Query Execution Plan Introduction to Statistics Optimizer Hints Follower Read Check the TiDB Cluster Status Using SQL Statements Execution Plan Binding Statement Summary Table Tune TiKV   Key Monitoring Metrics  Overview TiDB PD TiKV     Alert Rules   Best Practices  Highly Concurrent Write Best Practices HAProxy Best Practices Java Application Development Best Practices PD Scheduling Best Practices Grafana Best Practices TiKV Performance Tuning with Massive Regions     TiSpark   TiDB Binlog  Overview Deploy Maintain Monitor Upgrade Reparo Binlog Slave Client TiDB Binlog Relay Log Glossary   Troubleshoot  Troubleshooting Error Handling     FAQ   Tools   Tools User Guide Mydumper Syncer Loader   TiDB Data Migration  Overview  DM Overview Restrictions DM-worker DM Relay Log   Features  Table Routing Black and White Lists Binlog Event Filter Replication Delay Monitoring   Sharding Support  Introduction Restrictions Handle Sharding DDL Locks Manually     Usage Scenarios  Simple Scenario Shard Merge Scenario Shard Merge Best Practices     Deploy   Configure  Overview DM-master Configuration DM-worker Configuration Task Configuration   Manage the DM Cluster  Cluster Operations Cluster Upgrade   Manage Replication Tasks  Manage Tasks Precheck Tasks Query Task Status Skip or Replace Abnormal SQL Statements     Monitor   Migrate from MySQL compatible database  Migrate from Amazon Aurora   Troubleshoot  DM Troubleshooting Error Description Error Handling     FAQ   Releases  v1.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/stable/CONTRIBUTING/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/CONTRIBUTING/</guid>
      <description>TiDB Documentation Contributing Guide Welcome to TiDB documentation! We are excited about the prospect of you joining TiDB Community.
What you can contribute You can start from any one of the following items to help improve TiDB Docs at the PingCAP website:
 Fix typos or format (punctuation, space, indentation, code block, etc.) Fix or update inappropriate or outdated descriptions Add missing content (sentence, paragraph, or a new document) Translate docs changes from English to Chinese Submit, reply to, and resolve docs issues (Advanced) Review Pull Requests created by others  Before you contribute Before you contribute, please take a quick look at some general information about TiDB documentation maintenance.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/stable/dev-guide/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/dev-guide/deploy/</guid>
      <description>Build for deployment The easiest way to deploy TiDB is to use Docker Compose, see TiDB Docker Compose Deployment. For more deployment methods, see TiDB deployment methods.
Before you begin You need to check the supported platforms and prerequisites first.
Build and install TiDB components You can use the build script to build and install TiDB components in the bin directory.
You can use the update script to update all the TiDB components to the latest version.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/stable/dev-guide/develop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/dev-guide/develop/</guid>
      <description>Build for Development If you want to develop the TiDB project, you can follow this guide.
Before you begin You need to check the supported platforms and prerequisites first.
Build TiKV   Get TiKV source code from GitHub
git clone https://github.com/tikv/tikv.git cd tikv   Run all unit tests:
make dev   Build in release mode:
make release   Build TiDB   Make sure the GOPATH environment is set correctly.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/stable/dev-guide/requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/dev-guide/requirements/</guid>
      <description>Build requirements Learn about the following requirements before building TiDB.
Supported platforms The following table lists TiDB support for common architectures and operating systems.
   Architecture Operating System Status     AMD64 Linux Ubuntu (14.04+) Stable   AMD64 Linux CentOS (7+) Stable   AMD64 macOS Experimental    Prerequisites  Go 1.12+ rustup GCC 4.8+ with static library CMake 3.1+  The check requirement script can help you check prerequisites and install the missing ones automatically.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/stable/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/README/</guid>
      <description>TiDB Documentation This repository stores all the source files of TiDB Docs at the PingCAP website, while the pingcap/docs-cn repository stores all the source files of TiDB Documentation in Chinese. If you find documentation issues, feel free to create an Issue to let us know or directly create a Pull Request to help fix or update it.
Docs structure The general TiDB documentation structure is as follows:
├── TOC.md ├── how-to ├── get-started ├── deploy ├── orchestrated ├── ansible.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/stable/resources/markdownlint-rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/resources/markdownlint-rules/</guid>
      <description>Markdown Rules TiDB documentation is written in Markdown. To ensure the quality and consistent format, you should follow certain Markdown rules when modifying documents. We set a CI check for Markdown files in the docs repository, which is the markdownlint check.
If you submit a Pull Request (PR) that does not conform to the rules, your PR might fail to pass the markdownlint check. In such cases, you might not be able to merge this PR.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/stable/TOC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/TOC/</guid>
      <description>TiDB Documentation Documentation List  Introduction  TiDB Introduction   Benchmarks  How to Test TiDB Using Sysbench How to Run TPC-C Test on TiDB Sysbench Performance Test - v3.0 vs. v2.1 TPC-C Performance Test - v3.0 vs. v2.1 Interaction Test on Online Workloads and ADD INDEX Operations TiDB in Kubernetes Sysbench Test DM 1.0-alpha Benchmark Report DM 1.0-GA Benchmark Report     Concepts  Architecture   Key Features  Horizontal Scalability MySQL Compatible Syntax Replicate from and to MySQL Distributed Transactions with Strong Consistency Cloud Native Architecture Minimize ETL with HTAP Fault Tolerance &amp;amp; Recovery with Raft Automatic Rebalancing Deployment and Orchestration with Ansible, Kubernetes, Docker JSON Support Spark Integration Read Historical Data Without Restoring from Backup Fast Import and Restore of Data Hybrid of Column and Row Storage SQL Plan Management Open Source Online Schema Changes     How-to  Get Started  Start a Cluster  From Binary From Homebrew From DBdeployer     Explore SQL with TiDB Import Example Database Read Historical Data TiDB Binlog Tutorial TiDB Data Migration Tutorial TiDB Lightning Tutorial TiSpark Quick Start Guide   Deploy  Hardware Recommendations   From Binary Tarball  For Testing Environments For Production Environments   Orchestrated Deployment  Ansible Deployment (Recommended) Ansible Offline Deployment Docker Deployment   Geographic Redundancy  Overview Configure Location Awareness     Data Migration with Ansible   Configure  Time Zone Memory Control   Secure  Transport Layer Security (TLS)  Enable TLS For MySQL Clients Enable TLS Between TiDB Components     Generate Self-signed Certificates   Monitor  Overview Monitor a TiDB Cluster   Migrate  Migration Tools User Guide   Migrate from MySQL  Migration Case of Amazon Aurora     Migrate from CSV   Maintain  Common Ansible Operations Backup and Restore   Identify Abnormal Queries  Identify Slow Queries Identify Expensive Queries   Scale  Scale using Ansible Scale a TiDB Cluster   Upgrade  Upgrade to TiDB 3.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/v2.1/CONTRIBUTING/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/CONTRIBUTING/</guid>
      <description>TiDB Documentation Contributing Guide Welcome to TiDB documentation! We are excited about the prospect of you joining TiDB Community.
What you can contribute You can start from any one of the following items to help improve TiDB Docs at the PingCAP website:
 Fix typos or format (punctuation, space, indentation, code block, etc.) Fix or update inappropriate or outdated descriptions Add missing content (sentence, paragraph, or a new document) Translate docs changes from English to Chinese Submit, reply to, and resolve docs issues (Advanced) Review Pull Requests created by others  Before you contribute Before you contribute, please take a quick look at some general information about TiDB documentation maintenance.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/v2.1/dev-guide/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/dev-guide/deploy/</guid>
      <description>Build for deployment The easiest way to deploy TiDB is to use Docker Compose, see TiDB Docker Compose Deployment. For more deployment methods, see TiDB deployment methods.
Before you begin You need to check the supported platforms and prerequisites first.
Build and install TiDB components You can use the build script to build and install TiDB components in the bin directory.
You can use the update script to update all the TiDB components to the latest version.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/v2.1/dev-guide/develop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/dev-guide/develop/</guid>
      <description>Build for Development If you want to develop the TiDB project, you can follow this guide.
Before you begin You need to check the supported platforms and prerequisites first.
Build TiKV   Get TiKV source code from GitHub
git clone https://github.com/tikv/tikv.git cd tikv   Run all unit tests:
make dev   Build in release mode:
make release   Build TiDB   Make sure the GOPATH environment is set correctly.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/v2.1/dev-guide/requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/dev-guide/requirements/</guid>
      <description>Build requirements Learn about the following requirements before building TiDB.
Supported platforms The following table lists TiDB support for common architectures and operating systems.
   Architecture Operating System Status     AMD64 Linux Ubuntu (14.04+) Stable   AMD64 Linux CentOS (7+) Stable   AMD64 macOS Experimental    Prerequisites  Go 1.12+ rustup GCC 4.8+ with static library CMake 3.1+  The check requirement script can help you check prerequisites and install the missing ones automatically.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/v2.1/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/README/</guid>
      <description>TiDB Documentation This repository stores all the source files of TiDB Docs at the PingCAP website, while the pingcap/docs-cn repository stores all the source files of TiDB Documentation in Chinese. If you find documentation issues, feel free to create an Issue to let us know or directly create a Pull Request to help fix or update it.
Docs structure The general TiDB documentation structure is as follows:
├── TOC.md ├── how-to ├── get-started ├── deploy ├── orchestrated ├── ansible.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/v2.1/resources/markdownlint-rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/resources/markdownlint-rules/</guid>
      <description>Markdown Rules TiDB documentation is written in Markdown. To ensure the quality and consistent format, you should follow certain Markdown rules when modifying documents. We set a CI check for Markdown files in the docs repository, which is the markdownlint check.
If you submit a Pull Request (PR) that does not conform to the rules, your PR might fail to pass the markdownlint check. In such cases, you might not be able to merge this PR.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/v2.1/TOC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/TOC/</guid>
      <description>TiDB Documentation Documentation List  Introduction  TiDB Introduction   Benchmarks  How to Test TiDB Using Sysbench Sysbench Performance Test - v2.1 vs. v2.0 TPC-H 50G Performance Test - v2.1 vs. v2.0 DM Benchmark Report     Concepts  Architecture   Key Features  Horizontal Scalability MySQL Compatible Syntax Replicate from and to MySQL Distributed Transactions with Strong Consistency Cloud Native Architecture Minimize ETL with HTAP Fault Tolerance &amp;amp; Recovery with Raft Automatic Rebalancing Deployment and Orchestration with Ansible, Kubernetes, Docker JSON Support Spark Integration Read Historical Data Without Restoring from Backup Fast Import and Restore of Data Hybrid of Column and Row Storage SQL Plan Management Open Source Online Schema Changes     How-to  Get Started  Start a Local Cluster  From Binary     Explore SQL with TiDB Import Example Database Read Historical Data TiDB Binlog Tutorial TiDB Data Migration Tutorial TiDB Lightning Tutorial TiSpark Quick Start Guide   Deploy  Hardware Recommendations   From Binary Tarball  For Testing Environments For Production Environments   Orchestrated Deployment  Ansible Deployment (Recommended) Ansible Offline Deployment Docker Deployment   Geographic Redundancy  Overview Configure Location Awareness     Data Migration with Ansible   Configure  Time Zone Memory Control   Secure  Transport Layer Security (TLS)  Enable TLS For MySQL Clients Enable TLS Between TiDB Components     Generate Self-signed Certificates   Monitor  Overview Monitor a TiDB Cluster   Migrate  Overview   Migrate from MySQL  Migrate the Full Data Migrate the Incremental Data     Migrate from MySQL/Aurora Migrate from CSV   Maintain  Common Ansible Operations Backup and Restore Identify Slow Queries   Scale  Scale using Ansible Scale a TiDB Cluster   Upgrade  Upgrade to TiDB 2.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/v3.1/CONTRIBUTING/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/CONTRIBUTING/</guid>
      <description>TiDB Documentation Contributing Guide Welcome to TiDB documentation! We are excited about the prospect of you joining TiDB Community.
What you can contribute You can start from any one of the following items to help improve TiDB Docs at the PingCAP website:
 Fix typos or format (punctuation, space, indentation, code block, etc.) Fix or update inappropriate or outdated descriptions Add missing content (sentence, paragraph, or a new document) Translate docs changes from English to Chinese Submit, reply to, and resolve docs issues (Advanced) Review Pull Requests created by others  Before you contribute Before you contribute, please take a quick look at some general information about TiDB documentation maintenance.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/v3.1/dev-guide/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/dev-guide/deploy/</guid>
      <description>Build for deployment The easiest way to deploy TiDB is to use Docker Compose, see TiDB Docker Compose Deployment. For more deployment methods, see TiDB deployment methods.
Before you begin You need to check the supported platforms and prerequisites first.
Build and install TiDB components You can use the build script to build and install TiDB components in the bin directory.
You can use the update script to update all the TiDB components to the latest version.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/v3.1/dev-guide/develop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/dev-guide/develop/</guid>
      <description>Build for Development If you want to develop the TiDB project, you can follow this guide.
Before you begin You need to check the supported platforms and prerequisites first.
Build TiKV   Get TiKV source code from GitHub
git clone https://github.com/tikv/tikv.git cd tikv   Run all unit tests:
make dev   Build in release mode:
make release   Build TiDB   Make sure the GOPATH environment is set correctly.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/v3.1/dev-guide/requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/dev-guide/requirements/</guid>
      <description>Build requirements Learn about the following requirements before building TiDB.
Supported platforms The following table lists TiDB support for common architectures and operating systems.
   Architecture Operating System Status     AMD64 Linux Ubuntu (14.04+) Stable   AMD64 Linux CentOS (7+) Stable   AMD64 macOS Experimental    Prerequisites  Go 1.12+ rustup GCC 4.8+ with static library CMake 3.1+  The check requirement script can help you check prerequisites and install the missing ones automatically.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/v3.1/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/README/</guid>
      <description>TiDB Documentation This repository stores all the source files of TiDB Docs at the PingCAP website, while the pingcap/docs-cn repository stores all the source files of TiDB Documentation in Chinese. If you find documentation issues, feel free to create an Issue to let us know or directly create a Pull Request to help fix or update it.
Docs structure The general TiDB documentation structure is as follows:
├── TOC.md ├── how-to ├── get-started ├── deploy ├── orchestrated ├── ansible.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/v3.1/resources/markdownlint-rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/resources/markdownlint-rules/</guid>
      <description>Markdown Rules TiDB documentation is written in Markdown. To ensure the quality and consistent format, you should follow certain Markdown rules when modifying documents. We set a CI check for Markdown files in the docs repository, which is the markdownlint check.
If you submit a Pull Request (PR) that does not conform to the rules, your PR might fail to pass the markdownlint check. In such cases, you might not be able to merge this PR.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/docs/v3.1/TOC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/TOC/</guid>
      <description>TiDB Documentation Documentation List  Introduction  TiDB Introduction   Benchmarks  How to Test TiDB Using Sysbench How to Run TPC-C Test on TiDB Sysbench Performance Test - v3.0 vs. v2.1 TPC-C Performance Test - v3.0 vs. v2.1 Interaction Test on Online Workloads and ADD INDEX Operations TiDB in Kubernetes Sysbench Test DM 1.0-alpha Benchmark Report DM 1.0-GA Benchmark Report     Concepts  Architecture   Key Features  Horizontal Scalability MySQL Compatible Syntax Replicate from and to MySQL Distributed Transactions with Strong Consistency Cloud Native Architecture Minimize ETL with HTAP Fault Tolerance &amp;amp; Recovery with Raft Automatic Rebalancing Deployment and Orchestration with Ansible, Kubernetes, Docker JSON Support Spark Integration Read Historical Data Without Restoring from Backup Fast Import and Restore of Data Hybrid of Column and Row Storage SQL Plan Management Open Source Online Schema Changes     How-to  Get Started  Start a Cluster  From Binary From Homebrew From DBdeployer     Explore SQL with TiDB Import Example Database Read Historical Data TiDB Binlog Tutorial TiDB Data Migration Tutorial TiDB Lightning Tutorial TiSpark Quick Start Guide   Deploy  Hardware Recommendations   From Binary Tarball  For Testing Environments For Production Environments   Orchestrated Deployment  Ansible Deployment (Recommended) Ansible Offline Deployment Docker Deployment   Geographic Redundancy  Overview Configure Location Awareness     Data Migration with Ansible   Configure  Time Zone Memory Control   Secure  Transport Layer Security (TLS)  Enable TLS For MySQL Clients Enable TLS Between TiDB Components     Generate Self-signed Certificates   Monitor  Overview Monitor a TiDB Cluster   Migrate  Migration Tools User Guide   Migrate from MySQL  Migration Case of Amazon Aurora     Migrate from CSV   Maintain  Common Ansible Operations   Backup and Restore  Use Mydumper and TiDB Lightning Use BR BR Usage Scenarios   Identify Abnormal Queries  Identify Slow Queries Identify Expensive Queries     Scale  Scale using Ansible Scale a TiDB Cluster   Upgrade  Upgrade to TiDB 3.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/meetup/recording/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/meetup/recording/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/_google_shell_tutorials/notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/_google_shell_tutorials/notes/</guid>
      <description>A full sample data import takes too long for the labs:
 The example from the manual is 2010-2017 = 32m 31s 2016-2017 = 12m23.285s minutes (more suitable for labs) (1.1GB) 2017 only = 6m27.179s (600MB only)  We can possibly switch back to using the full data set after lightning becomes stable. The issue would still be DDL performance though.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/conclusion/shutdown/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/conclusion/shutdown/</guid>
      <description>Shutdown your TiDB cluster When the TiDB cluster is not needed, you can delete it with the following command inside of Google Cloud Shell:
helm delete tidb --purge  The above commands only delete the running pods, the data is persistent. Run the following commands to clean the data and the dynamically created persistent disks:
kubectl delete pvc -n tidb -l app.kubernetes.io/instance=tidb,app.kubernetes.io/managed-by=tidb-operator &amp;amp;&amp;amp; kubectl get pv -l app.kubernetes.io/namespace=tidb,app.kubernetes.io/managed-by=tidb-operator,app.kubernetes.io/instance=tidb -o name | xargs -I {} kubectl patch {} -p &#39;{&amp;quot;spec&amp;quot;:{&amp;quot;persistentVolumeReclaimPolicy&amp;quot;:&amp;quot;Delete&amp;quot;}}&#39;  Shut down the Kubernetes cluster Once you have finished experimenting, you can delete the Kubernetes cluster with:</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/dm/example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/dm/example/</guid>
      <description>Example Usage  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/tidb-academy/profile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/profile/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://pingcap.com/tidb-academy/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/README/</guid>
      <description>TiDB Academy Distributed Database with TiDB for MySQL DBAs   Introduction:
 Course Overview Format and Housekeeping Setting up Google Cloud Platform Introduction to Distributed Databases    TiDB Overview:
 TiDB Platform Optional Components: TiSpark The KOST Stack Lab: Deploying TiDB Platform on GKE Recap: Deploying TiDB Platform on GKE    MySQL Compatibility:
 Overview Behavior Differences Default Differences Lab: Loading Sample Data Recap: Loading Sample Data    Query Optimization:</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://pingcap.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about/</guid>
      <description>PingCAP is focused on developing distributed NewSQL and is the team building TiDB, an open-source distributed NewSQL database.</description>
    </item>
    
    <item>
      <title>Access the TiDB Cluster in Kubernetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/deploy/access-tidb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/deploy/access-tidb/</guid>
      <description>Learn how to access the TiDB cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>Access the TiDB Cluster in Kubernetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/deploy/access-tidb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/deploy/access-tidb/</guid>
      <description>Learn how to access the TiDB cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>Access the TiDB Cluster in Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/deploy/access-tidb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/deploy/access-tidb/</guid>
      <description>Learn how to access the TiDB cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>ADD COLUMN</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/add-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/add-column/</guid>
      <description>TiDB 数据库中 ADD COLUMN 的使用概况。</description>
    </item>
    
    <item>
      <title>ADD COLUMN</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/add-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/add-column/</guid>
      <description>TiDB 数据库中 ADD COLUMN 的使用概况。</description>
    </item>
    
    <item>
      <title>ADD COLUMN</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/add-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/add-column/</guid>
      <description>TiDB 数据库中 ADD COLUMN 的使用概况。</description>
    </item>
    
    <item>
      <title>ADD COLUMN</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/add-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/add-column/</guid>
      <description>TiDB 数据库中 ADD COLUMN 的使用概况。</description>
    </item>
    
    <item>
      <title>ADD COLUMN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/add-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/add-column/</guid>
      <description>An overview of the usage of ADD COLUMN for the TiDB database.</description>
    </item>
    
    <item>
      <title>ADD COLUMN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/add-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/add-column/</guid>
      <description>An overview of the usage of ADD COLUMN for the TiDB database.</description>
    </item>
    
    <item>
      <title>ADD COLUMN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/add-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/add-column/</guid>
      <description>An overview of the usage of ADD COLUMN for the TiDB database.</description>
    </item>
    
    <item>
      <title>ADD COLUMN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/add-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/add-column/</guid>
      <description>An overview of the usage of ADD COLUMN for the TiDB database.</description>
    </item>
    
    <item>
      <title>ADD INDEX</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/add-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/add-index/</guid>
      <description>TiDB 数据库中 ADD INDEX 的使用概况。</description>
    </item>
    
    <item>
      <title>ADD INDEX</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/add-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/add-index/</guid>
      <description>TiDB 数据库中 ADD INDEX 的使用概况。</description>
    </item>
    
    <item>
      <title>ADD INDEX</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/add-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/add-index/</guid>
      <description>TiDB 数据库中 ADD INDEX 的使用概况。</description>
    </item>
    
    <item>
      <title>ADD INDEX</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/add-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/add-index/</guid>
      <description>TiDB 数据库中 ADD INDEX 的使用概况。</description>
    </item>
    
    <item>
      <title>ADD INDEX | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/add-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/add-index/</guid>
      <description>An overview of the usage of ADD INDEX for the TiDB database.</description>
    </item>
    
    <item>
      <title>ADD INDEX | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/add-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/add-index/</guid>
      <description>An overview of the usage of ADD INDEX for the TiDB database.</description>
    </item>
    
    <item>
      <title>ADD INDEX | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/add-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/add-index/</guid>
      <description>An overview of the usage of ADD INDEX for the TiDB database.</description>
    </item>
    
    <item>
      <title>ADD INDEX | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/add-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/add-index/</guid>
      <description>An overview of the usage of ADD INDEX for the TiDB database.</description>
    </item>
    
    <item>
      <title>ADMIN</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/admin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/admin/</guid>
      <description>ADMIN ADMIN 语句是 TiDB 扩展语法，用于查看 TiDB 自身的状态，并对 TiDB 中的表数据进行校验。示例如下。
 ADMIN SHOW DDL; ADMIN SHOW DDL 用于查看当前正在执行的 DDL 作业。
 ADMIN SHOW DDL JOBS [NUM] [WHERE where_condition];  NUM：查看已经执行完成的 DDL 作业队列中最近 NUM 条结果，未指定时，默认值为 10。 WHERE：WHERE 子句，可以添加过滤条件。  ADMIN SHOW DDL JOBS 用于查看当前 DDL 作业队列中的所有结果（包括正在运行以及等待运行的任务）以及已执行完成的 DDL 作业队列中的最近十条结果。
 ADMIN SHOW DDL JOB QUERIES job_id [, job_id] ...;  ADMIN CANCEL DDL JOBS job_id [, job_id] ...;  ADMIN CHECK TABLE tbl_name [, tbl_name] .</description>
    </item>
    
    <item>
      <title>ADMIN</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/admin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/admin/</guid>
      <description>ADMIN ADMIN 语句是 TiDB 扩展语法，用于查看 TiDB 自身的状态，并对 TiDB 中的表数据进行校验。示例如下。
 ADMIN SHOW DDL; ADMIN SHOW DDL 用于查看当前正在执行的 DDL 作业。
 ADMIN SHOW DDL JOBS; ADMIN SHOW DDL JOBS 用于查看当前 DDL 作业队列中的所有结果（包括正在运行以及等待运行的任务）以及已执行完成的 DDL 作业队列中的最近十条结果。
 ADMIN SHOW DDL JOB QUERIES job_id [, job_id] ...;  ADMIN CANCEL DDL JOBS job_id [, job_id] ...;  ADMIN CHECK TABLE tbl_name [, tbl_name] ...; 语句概览 AdminStmt：
使用示例  admin show ddl jobs; +--------+---------+------------+---------------+----------------------+-----------+----------+-----------+-----------------------------------+---------------+ | JOB_ID | DB_NAME | TABLE_NAME | JOB_TYPE | SCHEMA_STATE | SCHEMA_ID | TABLE_ID | ROW_COUNT | START_TIME | STATE | +--------+---------+------------+---------------+----------------------+-----------+----------+-----------+-----------------------------------+---------------+ | 45 | test | t1 | add index | write reorganization | 32 | 37 | 0 | 2019-01-10 12:38:36.</description>
    </item>
    
    <item>
      <title>ADMIN</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/admin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/admin/</guid>
      <description>ADMIN ADMIN 语句是 TiDB 扩展语法，用于查看 TiDB 自身的状态，并对 TiDB 中的表数据进行校验。示例如下。
 ADMIN SHOW DDL; ADMIN SHOW DDL 用于查看当前正在执行的 DDL 作业。
 ADMIN SHOW DDL JOBS; ADMIN SHOW DDL JOBS 用于查看当前 DDL 作业队列中的所有结果（包括正在运行以及等待运行的任务）以及已执行完成的 DDL 作业队列中的最近十条结果。
 ADMIN SHOW DDL JOB QUERIES job_id [, job_id] ...;  ADMIN CANCEL DDL JOBS job_id [, job_id] ...;  ADMIN CHECK TABLE tbl_name [, tbl_name] ...; 语句概览 AdminStmt：
使用示例  admin show ddl jobs; +--------+---------+------------+---------------+----------------------+-----------+----------+-----------+-----------------------------------+---------------+ | JOB_ID | DB_NAME | TABLE_NAME | JOB_TYPE | SCHEMA_STATE | SCHEMA_ID | TABLE_ID | ROW_COUNT | START_TIME | STATE | +--------+---------+------------+---------------+----------------------+-----------+----------+-----------+-----------------------------------+---------------+ | 45 | test | t1 | add index | write reorganization | 32 | 37 | 0 | 2019-01-10 12:38:36.</description>
    </item>
    
    <item>
      <title>ADMIN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/admin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/admin/</guid>
      <description>An overview of the usage of ADMIN for the TiDB database.</description>
    </item>
    
    <item>
      <title>ADMIN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/admin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/admin/</guid>
      <description>An overview of the usage of ADMIN for the TiDB database.</description>
    </item>
    
    <item>
      <title>ADMIN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/admin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/admin/</guid>
      <description>An overview of the usage of ADMIN for the TiDB database.</description>
    </item>
    
    <item>
      <title>ADMIN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/admin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/admin/</guid>
      <description>An overview of the usage of ADMIN for the TiDB database.</description>
    </item>
    
    <item>
      <title>ADMIN 语句</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/admin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/admin/</guid>
      <description>ADMIN 语句 ADMIN 语句是 TiDB 扩展语法，用于查看 TiDB 自身的状态，并对 TiDB 中的表数据进行校验。示例如下。
 ADMIN SHOW DDL ADMIN SHOW DDL 用于查看当前正在执行的 DDL 作业。
 ADMIN SHOW DDL JOBS ADMIN SHOW DDL JOBS 用于查看当前 DDL 作业队列中的所有结果（包括正在运行以及等待运行的任务）以及已执行完成的 DDL 作业队列中的最近十条结果。
 ADMIN SHOW DDL JOB QUERIES job_id [, job_id] ...  ADMIN CANCEL DDL JOBS job_id [, job_id] ...  ADMIN CHECK TABLE tbl_name [, tbl_name] ... 语句概览 AdminStmt：
使用示例  admin show ddl jobs; +--------+---------+------------+---------------+----------------------+-----------+----------+-----------+-----------------------------------+---------------+ | JOB_ID | DB_NAME | TABLE_NAME | JOB_TYPE | SCHEMA_STATE | SCHEMA_ID | TABLE_ID | ROW_COUNT | START_TIME | STATE | +--------+---------+------------+---------------+----------------------+-----------+----------+-----------+-----------------------------------+---------------+ | 45 | test | t1 | add index | write reorganization | 32 | 37 | 0 | 2019-01-10 12:38:36.</description>
    </item>
    
    <item>
      <title>Aggregate (GROUP BY) Functions</title>
      <link>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/aggregate-group-by-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/aggregate-group-by-functions/</guid>
      <description>Learn about the supported aggregate functions in TiDB.</description>
    </item>
    
    <item>
      <title>Aggregate (GROUP BY) Functions</title>
      <link>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/aggregate-group-by-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/aggregate-group-by-functions/</guid>
      <description>Learn about the supported aggregate functions in TiDB.</description>
    </item>
    
    <item>
      <title>Aggregate (GROUP BY) Functions</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/aggregate-group-by-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/aggregate-group-by-functions/</guid>
      <description>Learn about the supported aggregate functions in TiDB.</description>
    </item>
    
    <item>
      <title>Aggregate (GROUP BY) Functions</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/aggregate-group-by-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/aggregate-group-by-functions/</guid>
      <description>Learn about the supported aggregate functions in TiDB.</description>
    </item>
    
    <item>
      <title>ALTER DATABASE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/alter-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/alter-database/</guid>
      <description>TiDB 数据库中 ALTER DATABASE 的使用概况。</description>
    </item>
    
    <item>
      <title>ALTER DATABASE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/alter-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/alter-database/</guid>
      <description>TiDB 数据库中 ALTER DATABASE 的使用概况。</description>
    </item>
    
    <item>
      <title>ALTER DATABASE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/alter-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/alter-database/</guid>
      <description>TiDB 数据库中 ALTER DATABASE 的使用概况。</description>
    </item>
    
    <item>
      <title>ALTER DATABASE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/alter-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/alter-database/</guid>
      <description>TiDB 数据库中 ALTER DATABASE 的使用概况。</description>
    </item>
    
    <item>
      <title>ALTER DATABASE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/alter-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/alter-database/</guid>
      <description>An overview of the usage of ALTER DATABASE for the TiDB database.</description>
    </item>
    
    <item>
      <title>ALTER DATABASE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/alter-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/alter-database/</guid>
      <description>An overview of the usage of ALTER DATABASE for the TiDB database.</description>
    </item>
    
    <item>
      <title>ALTER DATABASE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/alter-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/alter-database/</guid>
      <description>An overview of the usage of ALTER DATABASE for the TiDB database.</description>
    </item>
    
    <item>
      <title>ALTER DATABASE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/alter-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/alter-database/</guid>
      <description>An overview of the usage of ALTER DATABASE for the TiDB database.</description>
    </item>
    
    <item>
      <title>ALTER TABLE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/alter-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/alter-table/</guid>
      <description>TiDB 数据库中 ALTER TABLE 的使用概况。</description>
    </item>
    
    <item>
      <title>ALTER TABLE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/alter-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/alter-table/</guid>
      <description>TiDB 数据库中 ALTER TABLE 的使用概况。</description>
    </item>
    
    <item>
      <title>ALTER TABLE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/alter-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/alter-table/</guid>
      <description>TiDB 数据库中 ALTER TABLE 的使用概况。</description>
    </item>
    
    <item>
      <title>ALTER TABLE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/alter-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/alter-table/</guid>
      <description>TiDB 数据库中 ALTER TABLE 的使用概况。</description>
    </item>
    
    <item>
      <title>ALTER TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/alter-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/alter-table/</guid>
      <description>An overview of the usage of ALTER TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>ALTER TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/alter-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/alter-table/</guid>
      <description>An overview of the usage of ALTER TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>ALTER TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/alter-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/alter-table/</guid>
      <description>An overview of the usage of ALTER TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>ALTER TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/alter-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/alter-table/</guid>
      <description>An overview of the usage of ALTER TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>ALTER USER</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/alter-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/alter-user/</guid>
      <description>TiDB 数据库中 ALTER USER 的使用概况。</description>
    </item>
    
    <item>
      <title>ALTER USER</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/alter-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/alter-user/</guid>
      <description>TiDB 数据库中 ALTER USER 的使用概况。</description>
    </item>
    
    <item>
      <title>ALTER USER</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/alter-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/alter-user/</guid>
      <description>TiDB 数据库中 ALTER USER 的使用概况。</description>
    </item>
    
    <item>
      <title>ALTER USER</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/alter-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/alter-user/</guid>
      <description>TiDB 数据库中 ALTER USER 的使用概况。</description>
    </item>
    
    <item>
      <title>ALTER USER | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/alter-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/alter-user/</guid>
      <description>An overview of the usage of ALTER USER for the TiDB database.</description>
    </item>
    
    <item>
      <title>ALTER USER | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/alter-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/alter-user/</guid>
      <description>An overview of the usage of ALTER USER for the TiDB database.</description>
    </item>
    
    <item>
      <title>ALTER USER | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/alter-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/alter-user/</guid>
      <description>An overview of the usage of ALTER USER for the TiDB database.</description>
    </item>
    
    <item>
      <title>ALTER USER | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/alter-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/alter-user/</guid>
      <description>An overview of the usage of ALTER USER for the TiDB database.</description>
    </item>
    
    <item>
      <title>ANALYZE TABLE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/analyze-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/analyze-table/</guid>
      <description>TiDB 数据库中 ANALYZE TABLE 的使用概况。</description>
    </item>
    
    <item>
      <title>ANALYZE TABLE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/analyze-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/analyze-table/</guid>
      <description>TiDB 数据库中 ANALYZE TABLE 的使用概况。</description>
    </item>
    
    <item>
      <title>ANALYZE TABLE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/analyze-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/analyze-table/</guid>
      <description>TiDB 数据库中 ANALYZE TABLE 的使用概况。</description>
    </item>
    
    <item>
      <title>ANALYZE TABLE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/analyze-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/analyze-table/</guid>
      <description>TiDB 数据库中 ANALYZE TABLE 的使用概况。</description>
    </item>
    
    <item>
      <title>ANALYZE TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/analyze-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/analyze-table/</guid>
      <description>An overview of the usage of ANALYZE TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>ANALYZE TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/analyze-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/analyze-table/</guid>
      <description>An overview of the usage of ANALYZE TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>ANALYZE TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/analyze-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/analyze-table/</guid>
      <description>An overview of the usage of ANALYZE TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>ANALYZE TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/analyze-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/analyze-table/</guid>
      <description>An overview of the usage of ANALYZE TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>Architecture</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/rocksdb/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/rocksdb/architecture/</guid>
      <description>Architecture  Resources  Write Ahead Log SST MemTable Bloom Filter  Transcript In this video, we are going to provide a brief introduction to how RocksDB works. Or even more specifically, how an LSM tree works, which is the basic data structure of RocksDB, which differs from InnoDB that uses a B+tree. We will also look at the filesystem to explain what you are seeing in TiKV&#39;s data directory.</description>
    </item>
    
    <item>
      <title>AUTO_RANDOM</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/attributes/auto-random/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/attributes/auto-random/</guid>
      <description>AUTO_RANDOM 从 v3.1.0 版本开始引入  警告：
当前 AUTO_RANDOM 属性为实验功能，不建议在生产环境中使用。在后续版本中，AUTO_RANDOM 的语法或语义可能会变化。
 使用 AUTO_RANDOM 功能前，须在 TiDB 配置文件 experimental 部分设置 allow-auto-random = true。该参数详情可参见 allow-auto-random。
使用场景 AUTO_RANDOM 用于解决大批量写数据入 TiDB 时因含有整型自增主键列的表而产生的热点问题。详情参阅 TiDB 高并发写入场景最佳实践。
以下面语句建立的表为例：
create table t (a int primary key auto_increment, b varchar(255)) 在以上语句所建的表上执行大量未指定主键值的 INSERT 语句，示例如下：
insert into t(b) values (&amp;#39;a&amp;#39;), (&amp;#39;b&amp;#39;), (&amp;#39;c&amp;#39;) 如以上语句，由于未指定主键列的值（a 列），TiDB 会使用连续自增的行值作为行 ID，可能导致单个 TiKV 节点上产生写入热点，进而影响对外提供服务的性能。要避免这种性能下降，可以在执行建表语句时为 a 列指定 AUTO_RANDOM 属性而不是 AUTO_INCREMENT 属性。示例如下：
 create table t (a int primary key auto_random, b varchar(255)) 或者</description>
    </item>
    
    <item>
      <title>AUTO_RANDOM</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/attributes/auto-random/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/attributes/auto-random/</guid>
      <description>AUTO_RANDOM 从 v3.1.0 版本开始引入  警告：
当前 AUTO_RANDOM 属性为实验功能，不建议在生产环境中使用。在后续版本中，AUTO_RANDOM 的语法或语义可能会变化。
 使用 AUTO_RANDOM 功能前，须在 TiDB 配置文件 experimental 部分设置 allow-auto-random = true。该参数详情可参见 allow-auto-random。
使用场景 AUTO_RANDOM 用于解决大批量写数据入 TiDB 时因含有整型自增主键列的表而产生的热点问题。详情参阅 TiDB 高并发写入场景最佳实践。
以下面语句建立的表为例：
create table t (a int primary key auto_increment, b varchar(255)) 在以上语句所建的表上执行大量未指定主键值的 INSERT 语句，示例如下：
insert into t(b) values (&amp;#39;a&amp;#39;), (&amp;#39;b&amp;#39;), (&amp;#39;c&amp;#39;) 如以上语句，由于未指定主键列的值（a 列），TiDB 会使用连续自增的行值作为行 ID，可能导致单个 TiKV 节点上产生写入热点，进而影响对外提供服务的性能。要避免这种性能下降，可以在执行建表语句时为 a 列指定 AUTO_RANDOM 属性而不是 AUTO_INCREMENT 属性。示例如下：
 create table t (a int primary key auto_random, b varchar(255)) 或者</description>
    </item>
    
    <item>
      <title>AUTO_RANDOM</title>
      <link>https://pingcap.com/docs/dev/reference/sql/attributes/auto-random/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/attributes/auto-random/</guid>
      <description>Learn the AUTO_RANDOM attribute.</description>
    </item>
    
    <item>
      <title>AUTO_RANDOM</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/attributes/auto-random/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/attributes/auto-random/</guid>
      <description>Learn the AUTO_RANDOM attribute.</description>
    </item>
    
    <item>
      <title>Automatic Failover</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/maintain/auto-failover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/maintain/auto-failover/</guid>
      <description>Learn the automatic failover policies of TiDB cluster components on Kubernetes.</description>
    </item>
    
    <item>
      <title>Automatic Failover</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/maintain/auto-failover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/maintain/auto-failover/</guid>
      <description>Learn the automatic failover policies of TiDB cluster components on Kubernetes.</description>
    </item>
    
    <item>
      <title>Automatic Failover</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/maintain/auto-failover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/maintain/auto-failover/</guid>
      <description>Learn the automatic failover policies of TiDB cluster components on Kubernetes.</description>
    </item>
    
    <item>
      <title>Backup and Restore</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/maintain/backup-and-restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/maintain/backup-and-restore/</guid>
      <description>Learn how to back up and restore the data of TiDB cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>Backup and Restore</title>
      <link>https://pingcap.com/docs/stable/how-to/maintain/backup-and-restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/maintain/backup-and-restore/</guid>
      <description>Learn how to back up and restore the data of TiDB.</description>
    </item>
    
    <item>
      <title>Backup and Restore</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/maintain/backup-and-restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/maintain/backup-and-restore/</guid>
      <description>Learn how to back up and restore the data of TiDB cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>Backup and Restore</title>
      <link>https://pingcap.com/docs/v2.1/how-to/maintain/backup-and-restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/maintain/backup-and-restore/</guid>
      <description>Learn how to back up and restore the data of TiDB.</description>
    </item>
    
    <item>
      <title>Backup and Restore</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/maintain/backup-and-restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/maintain/backup-and-restore/</guid>
      <description>Learn how to back up and restore the data of TiDB cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>Backup and Restore</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/backup/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/backup/overview/</guid>
      <description>Backup and Restore  Transcript You can&#39;t be a DBA without knowing how to backup and restore. It is one of the fundamental skills of database administration, and in this lesson we are going to be taking a closer look.
But before we dive too deep, I want to take a step back and describe some of the fundamentals behind a High Availability and Disaster Recovery plan.
TiKV provides High Availability (HA) natively out of the box, ensuring three copies of each Region are retained.</description>
    </item>
    
    <item>
      <title>BEGIN</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/begin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/begin/</guid>
      <description>TiDB 数据库中 BEGIN 的使用概况。</description>
    </item>
    
    <item>
      <title>BEGIN</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/begin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/begin/</guid>
      <description>TiDB 数据库中 BEGIN 的使用概况。</description>
    </item>
    
    <item>
      <title>BEGIN</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/begin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/begin/</guid>
      <description>TiDB 数据库中 BEGIN 的使用概况。</description>
    </item>
    
    <item>
      <title>BEGIN</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/begin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/begin/</guid>
      <description>TiDB 数据库中 BEGIN 的使用概况。</description>
    </item>
    
    <item>
      <title>BEGIN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/begin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/begin/</guid>
      <description>An overview of the usage of BEGIN for the TiDB database.</description>
    </item>
    
    <item>
      <title>BEGIN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/begin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/begin/</guid>
      <description>An overview of the usage of BEGIN for the TiDB database.</description>
    </item>
    
    <item>
      <title>BEGIN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/begin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/begin/</guid>
      <description>An overview of the usage of BEGIN for the TiDB database.</description>
    </item>
    
    <item>
      <title>BEGIN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/begin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/begin/</guid>
      <description>An overview of the usage of BEGIN for the TiDB database.</description>
    </item>
    
    <item>
      <title>Best Practices for Developing Java Applications with TiDB</title>
      <link>https://pingcap.com/docs/dev/reference/best-practices/java-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/best-practices/java-app/</guid>
      <description>Learn the best practices for developing Java applications with TiDB.</description>
    </item>
    
    <item>
      <title>Best Practices for Developing Java Applications with TiDB</title>
      <link>https://pingcap.com/docs/stable/reference/best-practices/java-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/best-practices/java-app/</guid>
      <description>Learn the best practices for developing Java applications with TiDB.</description>
    </item>
    
    <item>
      <title>Best Practices for Developing Java Applications with TiDB</title>
      <link>https://pingcap.com/docs/v2.1/reference/best-practices/java-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/best-practices/java-app/</guid>
      <description>Learn the best practices for developing Java applications with TiDB.</description>
    </item>
    
    <item>
      <title>Best Practices for Developing Java Applications with TiDB</title>
      <link>https://pingcap.com/docs/v3.1/reference/best-practices/java-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/best-practices/java-app/</guid>
      <description>Learn the best practices for developing Java applications with TiDB.</description>
    </item>
    
    <item>
      <title>Best Practices for Monitoring TiDB Using Grafana</title>
      <link>https://pingcap.com/docs/dev/reference/best-practices/grafana-monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/best-practices/grafana-monitor/</guid>
      <description>Learn seven tips for efficiently using Grafana to monitor TiDB.</description>
    </item>
    
    <item>
      <title>Best Practices for Monitoring TiDB Using Grafana</title>
      <link>https://pingcap.com/docs/stable/reference/best-practices/grafana-monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/best-practices/grafana-monitor/</guid>
      <description>Learn seven tips for efficiently using Grafana to monitor TiDB.</description>
    </item>
    
    <item>
      <title>Best Practices for Monitoring TiDB Using Grafana</title>
      <link>https://pingcap.com/docs/v2.1/reference/best-practices/grafana-monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/best-practices/grafana-monitor/</guid>
      <description>Learn seven tips for efficiently using Grafana to monitor TiDB.</description>
    </item>
    
    <item>
      <title>Best Practices for Monitoring TiDB Using Grafana</title>
      <link>https://pingcap.com/docs/v3.1/reference/best-practices/grafana-monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/best-practices/grafana-monitor/</guid>
      <description>Learn seven tips for efficiently using Grafana to monitor TiDB.</description>
    </item>
    
    <item>
      <title>Best Practices for TiKV Performance Tuning with Massive Regions</title>
      <link>https://pingcap.com/docs/dev/reference/best-practices/massive-regions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/best-practices/massive-regions/</guid>
      <description>Learn how to tune the performance of TiKV with a massive amount of Regions.</description>
    </item>
    
    <item>
      <title>Best Practices for TiKV Performance Tuning with Massive Regions</title>
      <link>https://pingcap.com/docs/stable/reference/best-practices/massive-regions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/best-practices/massive-regions/</guid>
      <description>Learn how to tune the performance of TiKV with a massive amount of Regions.</description>
    </item>
    
    <item>
      <title>Best Practices for TiKV Performance Tuning with Massive Regions</title>
      <link>https://pingcap.com/docs/v2.1/reference/best-practices/massive-regions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/best-practices/massive-regions/</guid>
      <description>Learn how to tune the performance of TiKV with a massive amount of Regions.</description>
    </item>
    
    <item>
      <title>Best Practices for TiKV Performance Tuning with Massive Regions</title>
      <link>https://pingcap.com/docs/v3.1/reference/best-practices/massive-regions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/best-practices/massive-regions/</guid>
      <description>Learn how to tune the performance of TiKV with a massive amount of Regions.</description>
    </item>
    
    <item>
      <title>Best Practices for Using HAProxy in TiDB</title>
      <link>https://pingcap.com/docs/dev/reference/best-practices/haproxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/best-practices/haproxy/</guid>
      <description>This document describes best practices for configuration and usage of HAProxy in TiDB.</description>
    </item>
    
    <item>
      <title>Best Practices for Using HAProxy in TiDB</title>
      <link>https://pingcap.com/docs/stable/reference/best-practices/haproxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/best-practices/haproxy/</guid>
      <description>This document describes best practices for configuration and usage of HAProxy in TiDB.</description>
    </item>
    
    <item>
      <title>Best Practices for Using HAProxy in TiDB</title>
      <link>https://pingcap.com/docs/v2.1/reference/best-practices/haproxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/best-practices/haproxy/</guid>
      <description>This document describes best practices for configuration and usage of HAProxy in TiDB.</description>
    </item>
    
    <item>
      <title>Best Practices for Using HAProxy in TiDB</title>
      <link>https://pingcap.com/docs/v3.1/reference/best-practices/haproxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/best-practices/haproxy/</guid>
      <description>This document describes best practices for configuration and usage of HAProxy in TiDB.</description>
    </item>
    
    <item>
      <title>Best Practices of Data Migration in the Shard Merge Scenario</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/usage-scenarios/best-practice-dm-shard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/usage-scenarios/best-practice-dm-shard/</guid>
      <description>Learn the best practices of data migration in the shard merge scenario.</description>
    </item>
    
    <item>
      <title>Best Practices of Data Migration in the Shard Merge Scenario</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/usage-scenarios/best-practice-dm-shard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/usage-scenarios/best-practice-dm-shard/</guid>
      <description>Learn the best practices of data migration in the shard merge scenario.</description>
    </item>
    
    <item>
      <title>Best Practices of Data Migration in the Shard Merge Scenario</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/usage-scenarios/best-practice-dm-shard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/usage-scenarios/best-practice-dm-shard/</guid>
      <description>Learn the best practices of data migration in the shard merge scenario.</description>
    </item>
    
    <item>
      <title>Best Practices of Data Migration in the Shard Merge Scenario</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/usage-scenarios/best-practice-dm-shard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/usage-scenarios/best-practice-dm-shard/</guid>
      <description>Learn the best practices of data migration in the shard merge scenario.</description>
    </item>
    
    <item>
      <title>Binlog Slave Client User Guide</title>
      <link>https://pingcap.com/docs/dev/reference/tidb-binlog/binlog-slave-client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tidb-binlog/binlog-slave-client/</guid>
      <description>Use Binlog Slave Client to consume TiDB slave binlog data from Kafka and output the data in a specific format.</description>
    </item>
    
    <item>
      <title>Binlog Slave Client User Guide</title>
      <link>https://pingcap.com/docs/stable/reference/tidb-binlog/binlog-slave-client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tidb-binlog/binlog-slave-client/</guid>
      <description>Use Binlog Slave Client to consume TiDB slave binlog data from Kafka and output the data in a specific format.</description>
    </item>
    
    <item>
      <title>Binlog Slave Client User Guide</title>
      <link>https://pingcap.com/docs/v2.1/reference/tidb-binlog/binlog-slave-client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tidb-binlog/binlog-slave-client/</guid>
      <description>Use Binlog Slave Client to consume TiDB slave binlog data from Kafka and output the data in a specific format.</description>
    </item>
    
    <item>
      <title>Binlog Slave Client User Guide</title>
      <link>https://pingcap.com/docs/v3.1/reference/tidb-binlog/binlog-slave-client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tidb-binlog/binlog-slave-client/</guid>
      <description>Use Binlog Slave Client to consume TiDB slave binlog data from Kafka and output the data in a specific format.</description>
    </item>
    
    <item>
      <title>Binlog Slave Client 用户文档</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/binlog-slave-client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/binlog-slave-client/</guid>
      <description>Binlog Slave Client 用户文档 目前 Drainer 提供了多种输出方式，包括 MySQL、TiDB、file 等。但是用户往往有一些自定义的需求，比如输出到 Elasticsearch、Hive 等，这些需求 Drainer 现在还没有实现，因此 Drainer 增加了输出到 Kafka 的功能，将 binlog 数据解析后按一定的格式再输出到 Kafka 中，用户编写代码从 Kafka 中读出数据再进行处理。
配置 Kafka Drainer 修改 Drainer 的配置文件，设置输出为 Kafka，相关配置如下：
[syncer] db-type = &amp;#34;kafka&amp;#34; [syncer.to] # Kafka 地址 kafka-addrs = &amp;#34;127.0.0.1:9092&amp;#34; # Kafka 版本号 kafka-version = &amp;#34;0.8.2.0&amp;#34; 自定义开发 数据格式 首先需要了解 Drainer 写入到 Kafka 中的数据格式：
// Column 保存列的数据，针对数据的类型，保存在对应的变量中 message Column { // 数据是否为 null optional bool is_null = 1 [ default = false ]; // 保存 int 类型的数据 optional int64 int64_value = 2; // 保存 uint、enum, set 类型的数据 optional uint64 uint64_value = 3; // 保存 float、double 类型的数据 optional double double_value = 4; // 保存 bit、blob、binary、json 类型的数据 optional bytes bytes_value = 5; // 保存 date、time、decimal、text、char 类型的数据 optional string string_value = 6; } // ColumnInfo 保存列的信息，包括列名、类型、是否为主键 message ColumnInfo { optional string name = 1 [ (gogoproto.</description>
    </item>
    
    <item>
      <title>Binlog Slave Client 用户文档</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/binlog-slave-client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/binlog-slave-client/</guid>
      <description>Binlog Slave Client 用户文档 目前 Drainer 提供了多种输出方式，包括 MySQL、TiDB、file 等。但是用户往往有一些自定义的需求，比如输出到 Elasticsearch、Hive 等，这些需求 Drainer 现在还没有实现，因此 Drainer 增加了输出到 Kafka 的功能，将 binlog 数据解析后按一定的格式再输出到 Kafka 中，用户编写代码从 Kafka 中读出数据再进行处理。
配置 Kafka Drainer 修改 Drainer 的配置文件，设置输出为 Kafka，相关配置如下：
[syncer] db-type = &amp;#34;kafka&amp;#34; [syncer.to] # Kafka 地址 kafka-addrs = &amp;#34;127.0.0.1:9092&amp;#34; # Kafka 版本号 kafka-version = &amp;#34;0.8.2.0&amp;#34; 自定义开发 数据格式 首先需要了解 Drainer 写入到 Kafka 中的数据格式：
// Column 保存列的数据，针对数据的类型，保存在对应的变量中 message Column { // 数据是否为 null optional bool is_null = 1 [ default = false ]; // 保存 int 类型的数据 optional int64 int64_value = 2; // 保存 uint、enum, set 类型的数据 optional uint64 uint64_value = 3; // 保存 float、double 类型的数据 optional double double_value = 4; // 保存 bit、blob、binary、json 类型的数据 optional bytes bytes_value = 5; // 保存 date、time、decimal、text、char 类型的数据 optional string string_value = 6; } // ColumnInfo 保存列的信息，包括列名、类型、是否为主键 message ColumnInfo { optional string name = 1 [ (gogoproto.</description>
    </item>
    
    <item>
      <title>Binlog Slave Client 用户文档</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/binlog-slave-client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/binlog-slave-client/</guid>
      <description>Binlog Slave Client 用户文档 目前 Drainer 提供了多种输出方式，包括 MySQL、TiDB、file 等。但是用户往往有一些自定义的需求，比如输出到 Elasticsearch、Hive 等，这些需求 Drainer 现在还没有实现，因此 Drainer 增加了输出到 Kafka 的功能，将 binlog 数据解析后按一定的格式再输出到 Kafka 中，用户编写代码从 Kafka 中读出数据再进行处理。
配置 Kafka Drainer 修改 Drainer 的配置文件，设置输出为 Kafka，相关配置如下：
[syncer] db-type = &amp;#34;kafka&amp;#34; [syncer.to] # Kafka 地址 kafka-addrs = &amp;#34;127.0.0.1:9092&amp;#34; # Kafka 版本号 kafka-version = &amp;#34;0.8.2.0&amp;#34; 自定义开发 数据格式 首先需要了解 Drainer 写入到 Kafka 中的数据格式：
// Column 保存列的数据，针对数据的类型，保存在对应的变量中 message Column { // 数据是否为 null optional bool is_null = 1 [ default = false ]; // 保存 int 类型的数据 optional int64 int64_value = 2; // 保存 uint、enum, set 类型的数据 optional uint64 uint64_value = 3; // 保存 float、double 类型的数据 optional double double_value = 4; // 保存 bit、blob、binary、json 类型的数据 optional bytes bytes_value = 5; // 保存 date、time、decimal、text、char 类型的数据 optional string string_value = 6; } // ColumnInfo 保存列的信息，包括列名、类型、是否为主键 message ColumnInfo { optional string name = 1 [ (gogoproto.</description>
    </item>
    
    <item>
      <title>Binlog Slave Client 用户文档</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/binlog-slave-client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/binlog-slave-client/</guid>
      <description>Binlog Slave Client 用户文档 目前 Drainer 提供了多种输出方式，包括 MySQL、TiDB、file 等。但是用户往往有一些自定义的需求，比如输出到 Elasticsearch、Hive 等，这些需求 Drainer 现在还没有实现，因此 Drainer 增加了输出到 Kafka 的功能，将 binlog 数据解析后按一定的格式再输出到 Kafka 中，用户编写代码从 Kafka 中读出数据再进行处理。
配置 Kafka Drainer 修改 Drainer 的配置文件，设置输出为 Kafka，相关配置如下：
[syncer] db-type = &amp;#34;kafka&amp;#34; [syncer.to] # Kafka 地址 kafka-addrs = &amp;#34;127.0.0.1:9092&amp;#34; # Kafka 版本号 kafka-version = &amp;#34;0.8.2.0&amp;#34; 自定义开发 数据格式 首先需要了解 Drainer 写入到 Kafka 中的数据格式：
// Column 保存列的数据，针对数据的类型，保存在对应的变量中 message Column { // 数据是否为 null optional bool is_null = 1 [ default = false ]; // 保存 int 类型的数据 optional int64 int64_value = 2; // 保存 uint、enum, set 类型的数据 optional uint64 uint64_value = 3; // 保存 float、double 类型的数据 optional double double_value = 4; // 保存 bit、blob、binary、json 类型的数据 optional bytes bytes_value = 5; // 保存 date、time、decimal、text、char 类型的数据 optional string string_value = 6; } // ColumnInfo 保存列的信息，包括列名、类型、是否为主键 message ColumnInfo { optional string name = 1 [ (gogoproto.</description>
    </item>
    
    <item>
      <title>Bit Functions and Operators</title>
      <link>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/bit-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/bit-functions-and-operators/</guid>
      <description>Learn about the bit functions and operators.</description>
    </item>
    
    <item>
      <title>Bit Functions and Operators</title>
      <link>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/bit-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/bit-functions-and-operators/</guid>
      <description>Learn about the bit functions and operators.</description>
    </item>
    
    <item>
      <title>Bit Functions and Operators</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/bit-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/bit-functions-and-operators/</guid>
      <description>Learn about the bit functions and operators.</description>
    </item>
    
    <item>
      <title>Bit Functions and Operators</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/bit-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/bit-functions-and-operators/</guid>
      <description>Learn about the bit functions and operators.</description>
    </item>
    
    <item>
      <title>BR Usage Scenarios</title>
      <link>https://pingcap.com/docs/dev/reference/tools/br/use-cases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/br/use-cases/</guid>
      <description>Learn the scenarios of backing up and restoring data using BR.</description>
    </item>
    
    <item>
      <title>BR Usage Scenarios</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/br/use-cases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/br/use-cases/</guid>
      <description>Learn the scenarios of backing up and restoring data using BR.</description>
    </item>
    
    <item>
      <title>BR 备份与恢复场景示例</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/br/use-cases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/br/use-cases/</guid>
      <description>BR 备份与恢复场景示例 Backup &amp;amp; Restore（下文简称 BR）一款分布式的快速备份和恢复工具。本文展示了四种备份和恢复场景下的 BR 操作过程，以帮助读者达到以下目标：
 正确使用网络盘或本地盘进行备份或恢复 通过相关监控指标了解备份或恢复的状态 了解在备份或恢复时如何调优性能 处理备份时可能发生的异常   注意：
使用 BR 时应注意使用限制。
 目标读者 读者需要对 TiDB 和 TiKV 有一定的了解。在阅读本文前，推荐先阅读使用 BR 进行备份与恢复。
环境准备 本部分介绍推荐的 TiDB 的部署方式、示例中的集群版本、TiKV 集群硬件信息和集群配置。读者可根据自己的硬件和配置来预估备份恢复的性能。
部署方式 推荐使用 TiDB Ansible 部署 TiDB 集群，再下载 TiDB Toolkit 获取 BR 应用。
集群版本  TiKV: v3.1.0-beta.1 PD: v3.1.0-beta.1 br: v3.1.0-beta.1  TiKV 集群硬件信息  操作系统：CentOS Linux release 7.6.1810 (Core) CPU：16-Core Common KVM processor RAM：32GB 硬盘：500G SSD * 2 网卡：10000MB/s  配置 BR 可以直接将命令下发到 TiKV 集群来执行备份和恢复，不依赖 TiDB server 组件，因此无需对 TiDB server 进行配置。</description>
    </item>
    
    <item>
      <title>BR 备份与恢复场景示例</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/br/use-cases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/br/use-cases/</guid>
      <description>BR 备份与恢复场景示例 Backup &amp;amp; Restore（下文简称 BR）一款分布式的快速备份和恢复工具。本文展示了四种备份和恢复场景下的 BR 操作过程，以帮助读者达到以下目标：
 正确使用网络盘或本地盘进行备份或恢复 通过相关监控指标了解备份或恢复的状态 了解在备份或恢复时如何调优性能 处理备份时可能发生的异常   注意：
使用 BR 时应注意使用限制。
 目标读者 读者需要对 TiDB 和 TiKV 有一定的了解。在阅读本文前，推荐先阅读使用 BR 进行备份与恢复。
环境准备 本部分介绍推荐的 TiDB 的部署方式、示例中的集群版本、TiKV 集群硬件信息和集群配置。读者可根据自己的硬件和配置来预估备份恢复的性能。
部署方式 推荐使用 TiDB Ansible 部署 TiDB 集群，再下载 TiDB Toolkit 获取 BR 应用。
集群版本  TiKV: v3.1.0-beta.1 PD: v3.1.0-beta.1 br: v3.1.0-beta.1  TiKV 集群硬件信息  操作系统：CentOS Linux release 7.6.1810 (Core) CPU：16-Core Common KVM processor RAM：32GB 硬盘：500G SSD * 2 网卡：10000MB/s  配置 BR 可以直接将命令下发到 TiKV 集群来执行备份和恢复，不依赖 TiDB server 组件，因此无需对 TiDB server 进行配置。</description>
    </item>
    
    <item>
      <title>Cast Functions and Operators</title>
      <link>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/cast-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/cast-functions-and-operators/</guid>
      <description>Learn about the cast functions and operators.</description>
    </item>
    
    <item>
      <title>Cast Functions and Operators</title>
      <link>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/cast-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/cast-functions-and-operators/</guid>
      <description>Learn about the cast functions and operators.</description>
    </item>
    
    <item>
      <title>Cast Functions and Operators</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/cast-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/cast-functions-and-operators/</guid>
      <description>Learn about the cast functions and operators.</description>
    </item>
    
    <item>
      <title>Cast Functions and Operators</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/cast-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/cast-functions-and-operators/</guid>
      <description>Learn about the cast functions and operators.</description>
    </item>
    
    <item>
      <title>Cast 函数和操作符</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/cast-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/cast-functions-and-operators/</guid>
      <description>Cast 函数和操作符 Cast 函数和操作符用于将某种数据类型的值转换为另一种数据类型。TiDB 支持使用 MySQL 5.7 中提供的所有 Cast 函数和操作符。
Cast 函数和操作符表    函数和操作符名 功能描述     BINARY 将一个字符串转换成一个二进制字符串   CAST() 将一个值转换成一个确定类型   CONVERT() 将一个值转换成一个确定类型    </description>
    </item>
    
    <item>
      <title>Cast 函数和操作符</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/cast-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/cast-functions-and-operators/</guid>
      <description>Cast 函数和操作符 Cast 函数和操作符用于将某种数据类型的值转换为另一种数据类型。TiDB 支持使用 MySQL 5.7 中提供的所有 Cast 函数和操作符。
Cast 函数和操作符表    函数和操作符名 功能描述     BINARY 将一个字符串转换成一个二进制字符串   CAST() 将一个值转换成一个确定类型   CONVERT() 将一个值转换成一个确定类型    </description>
    </item>
    
    <item>
      <title>Cast 函数和操作符</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/cast-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/cast-functions-and-operators/</guid>
      <description>Cast 函数和操作符 Cast 函数和操作符用于将某种数据类型的值转换为另一种数据类型。TiDB 中该函数和操作符的使用方法与 MySQL基本一致，详情参见: Cast Functions and Operators.
Cast 函数和操作符表    函数和操作符名 功能描述     BINARY 将一个字符串转换成一个二进制字符串   CAST() 将一个值转换成一个确定类型   CONVERT() 将一个值转换成一个确定类型    </description>
    </item>
    
    <item>
      <title>Cast 函数和操作符</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/cast-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/cast-functions-and-operators/</guid>
      <description>Cast 函数和操作符 Cast 函数和操作符用于将某种数据类型的值转换为另一种数据类型。TiDB 支持使用 MySQL 5.7 中提供的所有 Cast 函数和操作符。
Cast 函数和操作符表    函数和操作符名 功能描述     BINARY 将一个字符串转换成一个二进制字符串   CAST() 将一个值转换成一个确定类型   CONVERT() 将一个值转换成一个确定类型    </description>
    </item>
    
    <item>
      <title>Certificate-Based Authentication for Login</title>
      <link>https://pingcap.com/docs/dev/reference/security/cert-based-authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/security/cert-based-authentication/</guid>
      <description>Learn the certificate-based authentication used for login.</description>
    </item>
    
    <item>
      <title>Certificate-Based Authentication for Login</title>
      <link>https://pingcap.com/docs/stable/reference/security/cert-based-authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/security/cert-based-authentication/</guid>
      <description>Learn the certificate-based authentication used for login.</description>
    </item>
    
    <item>
      <title>Certificate-Based Authentication for Login</title>
      <link>https://pingcap.com/docs/v3.1/reference/security/cert-based-authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/security/cert-based-authentication/</guid>
      <description>Learn the certificate-based authentication used for login.</description>
    </item>
    
    <item>
      <title>CHANGE COLUMN</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/change-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/change-column/</guid>
      <description>TiDB 数据库中 CHANGE COLUMN 的使用概况。</description>
    </item>
    
    <item>
      <title>CHANGE COLUMN</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/change-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/change-column/</guid>
      <description>TiDB 数据库中 CHANGE COLUMN 的使用概况。</description>
    </item>
    
    <item>
      <title>CHANGE COLUMN</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/change-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/change-column/</guid>
      <description>TiDB 数据库中 CHANGE COLUMN 的使用概况。</description>
    </item>
    
    <item>
      <title>CHANGE COLUMN</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/change-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/change-column/</guid>
      <description>TiDB 数据库中 CHANGE COLUMN 的使用概况。</description>
    </item>
    
    <item>
      <title>CHANGE COLUMN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/change-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/change-column/</guid>
      <description>An overview of the usage of CHANGE COLUMN for the TiDB database.</description>
    </item>
    
    <item>
      <title>CHANGE COLUMN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/change-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/change-column/</guid>
      <description>An overview of the usage of CHANGE COLUMN for the TiDB database.</description>
    </item>
    
    <item>
      <title>CHANGE COLUMN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/change-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/change-column/</guid>
      <description>An overview of the usage of CHANGE COLUMN for the TiDB database.</description>
    </item>
    
    <item>
      <title>CHANGE COLUMN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/change-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/change-column/</guid>
      <description>An overview of the usage of CHANGE COLUMN for the TiDB database.</description>
    </item>
    
    <item>
      <title>Character Set Support</title>
      <link>https://pingcap.com/docs/dev/reference/sql/character-set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/character-set/</guid>
      <description>Learn about the supported character sets in TiDB.</description>
    </item>
    
    <item>
      <title>Character Set Support</title>
      <link>https://pingcap.com/docs/stable/reference/sql/character-set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/character-set/</guid>
      <description>Learn about the supported character sets in TiDB.</description>
    </item>
    
    <item>
      <title>Character Set Support</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/character-set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/character-set/</guid>
      <description>Learn about the supported character sets in TiDB.</description>
    </item>
    
    <item>
      <title>Character Set Support</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/character-set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/character-set/</guid>
      <description>Learn about the supported character sets in TiDB.</description>
    </item>
    
    <item>
      <title>Check the TiDB Cluster Status Using SQL Statements</title>
      <link>https://pingcap.com/docs/dev/reference/performance/check-cluster-status-using-sql-statements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/performance/check-cluster-status-using-sql-statements/</guid>
      <description>This document introduces that TiDB offers some SQL statements and system tables to check the TiDB cluster status.</description>
    </item>
    
    <item>
      <title>Check the TiDB Cluster Status Using SQL Statements</title>
      <link>https://pingcap.com/docs/stable/reference/performance/check-cluster-status-using-sql-statements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/performance/check-cluster-status-using-sql-statements/</guid>
      <description>This document introduces that TiDB offers some SQL statements and system tables to check the TiDB cluster status.</description>
    </item>
    
    <item>
      <title>Check the TiDB Cluster Status Using SQL Statements</title>
      <link>https://pingcap.com/docs/v3.1/reference/performance/check-cluster-status-using-sql-statements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/performance/check-cluster-status-using-sql-statements/</guid>
      <description>This document introduces that TiDB offers some SQL statements and system tables to check the TiDB cluster status.</description>
    </item>
    
    <item>
      <title>Cloud 研发工程师</title>
      <link>https://pingcap.com/about-cn/recruit/engineering/cloud-engineer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/engineering/cloud-engineer/</guid>
      <description>Cloud 研发工程师 岗位职责：
  开发基于 Kubernetes 的 TiDB Cloud 版自动化部署和运维工具；
  开发基于 Kubernetes 的企业版 TiDB 自动化部署工具；
  负责搭建基于 Kubernetes 和 TiDB 的企业级数据库云 DBaaS。
  任职要求：
  优秀的发现和解决问题能力，良好的沟通能力和团队合作精神；
  三年以上相关领域开发经验，扎实的编程能力，熟悉 C/C++/Rust/Go/Python 中至少一种；
  了解各种常见网络协议原理和虚拟化技术；
  熟悉 Docker 容器原理；
  熟练使用 Linux 和 Docker 容器；
  了解 Ansible/SaltStack/Puppet/Terraform 等自动化运维工具；
  对分布式系统有一定了解。
  加分项：
  为 Docker/Kubernetes 等容器相关知名开源项目贡献过代码；
  自己手动部署过 Kubernetes 集群；</description>
    </item>
    
    <item>
      <title>Cluster Topology Configuration</title>
      <link>https://pingcap.com/docs/dev/how-to/deploy/geographic-redundancy/location-awareness/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/deploy/geographic-redundancy/location-awareness/</guid>
      <description>Learn to configure cluster topology to maximize the capacity for disaster recovery.</description>
    </item>
    
    <item>
      <title>Cluster Topology Configuration</title>
      <link>https://pingcap.com/docs/stable/how-to/deploy/geographic-redundancy/location-awareness/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/deploy/geographic-redundancy/location-awareness/</guid>
      <description>Learn to configure cluster topology to maximize the capacity for disaster recovery.</description>
    </item>
    
    <item>
      <title>Cluster Topology Configuration</title>
      <link>https://pingcap.com/docs/v2.1/how-to/deploy/geographic-redundancy/location-awareness/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/deploy/geographic-redundancy/location-awareness/</guid>
      <description>Learn to configure cluster topology to maximize the capacity for disaster recovery.</description>
    </item>
    
    <item>
      <title>Cluster Topology Configuration</title>
      <link>https://pingcap.com/docs/v3.1/how-to/deploy/geographic-redundancy/location-awareness/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/deploy/geographic-redundancy/location-awareness/</guid>
      <description>Learn to configure cluster topology to maximize the capacity for disaster recovery.</description>
    </item>
    
    <item>
      <title>Collect TiDB Logs in Kubernetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/maintain/log-collecting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/maintain/log-collecting/</guid>
      <description>Learn how to collect TiDB logs in Kubernetes.</description>
    </item>
    
    <item>
      <title>Collect TiDB Logs in Kubernetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/maintain/log-collecting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/maintain/log-collecting/</guid>
      <description>Learn how to collect TiDB logs in Kubernetes.</description>
    </item>
    
    <item>
      <title>Collect TiDB Logs in Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/maintain/log-collecting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/maintain/log-collecting/</guid>
      <description>Learn how to collect TiDB logs in Kubernetes.</description>
    </item>
    
    <item>
      <title>Comment Syntax</title>
      <link>https://pingcap.com/docs/dev/reference/sql/language-structure/comment-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/language-structure/comment-syntax/</guid>
      <description>Learn about the three comment styles in TiDB.</description>
    </item>
    
    <item>
      <title>Comment Syntax</title>
      <link>https://pingcap.com/docs/stable/reference/sql/language-structure/comment-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/language-structure/comment-syntax/</guid>
      <description>Learn about the three comment styles in TiDB.</description>
    </item>
    
    <item>
      <title>Comment Syntax</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/language-structure/comment-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/language-structure/comment-syntax/</guid>
      <description>Learn about the three comment styles in TiDB.</description>
    </item>
    
    <item>
      <title>Comment Syntax</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/language-structure/comment-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/language-structure/comment-syntax/</guid>
      <description>Learn about the three comment styles in TiDB.</description>
    </item>
    
    <item>
      <title>COMMIT</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/commit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/commit/</guid>
      <description>TiDB 数据库中 COMMIT 的使用概况。</description>
    </item>
    
    <item>
      <title>COMMIT</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/commit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/commit/</guid>
      <description>TiDB 数据库中 COMMIT 的使用概况。</description>
    </item>
    
    <item>
      <title>COMMIT</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/commit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/commit/</guid>
      <description>TiDB 数据库中 COMMIT 的使用概况。</description>
    </item>
    
    <item>
      <title>COMMIT</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/commit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/commit/</guid>
      <description>TiDB 数据库中 COMMIT 的使用概况。</description>
    </item>
    
    <item>
      <title>COMMIT | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/commit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/commit/</guid>
      <description>An overview of the usage of COMMIT for the TiDB database.</description>
    </item>
    
    <item>
      <title>COMMIT | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/commit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/commit/</guid>
      <description>An overview of the usage of COMMIT for the TiDB database.</description>
    </item>
    
    <item>
      <title>COMMIT | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/commit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/commit/</guid>
      <description>An overview of the usage of COMMIT for the TiDB database.</description>
    </item>
    
    <item>
      <title>COMMIT | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/commit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/commit/</guid>
      <description>An overview of the usage of COMMIT for the TiDB database.</description>
    </item>
    
    <item>
      <title>Common Misuses During Full Data Import</title>
      <link>https://pingcap.com/docs/dev/reference/tools/error-case-handling/load-misuse-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/error-case-handling/load-misuse-handling/</guid>
      <description>Common Misuses During Full Data Import This document introduces the common error scenarios in using Loader or TiDB Data Migration (DM) during the full data import process, and also provides their reasons and solutions.
Error: Try adjusting the `max_allowed_packet` variable The following error is reported during full data import:
packet for query is too large. Try adjusting the &amp;#39;max_allowed_packet&amp;#39; variable Reasons  Both MySQL client and MySQL/TiDB Server have max_allowed_packet quotas.</description>
    </item>
    
    <item>
      <title>Common Misuses During Full Data Import</title>
      <link>https://pingcap.com/docs/stable/reference/tools/error-case-handling/load-misuse-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/error-case-handling/load-misuse-handling/</guid>
      <description>Common Misuses During Full Data Import This document introduces the common error scenarios in using Loader or TiDB Data Migration (DM) during the full data import process, and also provides their reasons and solutions.
Error: Try adjusting the `max_allowed_packet` variable The following error is reported during full data import:
packet for query is too large. Try adjusting the &amp;#39;max_allowed_packet&amp;#39; variable Reasons  Both MySQL client and MySQL/TiDB Server have max_allowed_packet quotas.</description>
    </item>
    
    <item>
      <title>Common Misuses During Full Data Import</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/error-case-handling/load-misuse-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/error-case-handling/load-misuse-handling/</guid>
      <description>Common Misuses During Full Data Import This document introduces the common error scenarios in using Loader or TiDB Data Migration (DM) during the full data import process, and also provides their reasons and solutions.
Error: Try adjusting the `max_allowed_packet` variable The following error is reported during full data import:
packet for query is too large. Try adjusting the &amp;#39;max_allowed_packet&amp;#39; variable Reasons  Both MySQL client and MySQL/TiDB Server have max_allowed_packet quotas.</description>
    </item>
    
    <item>
      <title>Common Misuses of TiDB Lightning</title>
      <link>https://pingcap.com/docs/dev/reference/tools/error-case-handling/lightning-misuse-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/error-case-handling/lightning-misuse-handling/</guid>
      <description>Common Misuses of TiDB Lightning This document introduces common error scenarios in using TiDB Lightning, and also provides their reasons and solutions.
Error: checksum mismatched remote vs local The following error is reported during data import:
Error: checksum mismatched remote vs local =&amp;gt; (checksum: 3828723015727756136 vs 7895534721177712659) (total_kvs: 1221416844 vs 1501500000) (total_bytes:237660308510 vs 292158203078) Reasons   TiDB Lightning was used to import data previously, and the corresponding checkpoint data was not cleaned up.</description>
    </item>
    
    <item>
      <title>Common Misuses of TiDB Lightning</title>
      <link>https://pingcap.com/docs/stable/reference/tools/error-case-handling/lightning-misuse-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/error-case-handling/lightning-misuse-handling/</guid>
      <description>Common Misuses of TiDB Lightning This document introduces common error scenarios in using TiDB Lightning, and also provides their reasons and solutions.
Error: checksum mismatched remote vs local The following error is reported during data import:
Error: checksum mismatched remote vs local =&amp;gt; (checksum: 3828723015727756136 vs 7895534721177712659) (total_kvs: 1221416844 vs 1501500000) (total_bytes:237660308510 vs 292158203078) Reasons   TiDB Lightning was used to import data previously, and the corresponding checkpoint data was not cleaned up.</description>
    </item>
    
    <item>
      <title>Common Misuses of TiDB Lightning</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/error-case-handling/lightning-misuse-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/error-case-handling/lightning-misuse-handling/</guid>
      <description>Common Misuses of TiDB Lightning This document introduces common error scenarios in using TiDB Lightning, and also provides their reasons and solutions.
Error: checksum mismatched remote vs local The following error is reported during data import:
Error: checksum mismatched remote vs local =&amp;gt; (checksum: 3828723015727756136 vs 7895534721177712659) (total_kvs: 1221416844 vs 1501500000) (total_bytes:237660308510 vs 292158203078) Reasons   TiDB Lightning was used to import data previously, and the corresponding checkpoint data was not cleaned up.</description>
    </item>
    
    <item>
      <title>Compatibility with MySQL</title>
      <link>https://pingcap.com/docs/dev/reference/mysql-compatibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/mysql-compatibility/</guid>
      <description>Learn about the compatibility of TiDB with MySQL, and the unsupported and different features.</description>
    </item>
    
    <item>
      <title>Compatibility with MySQL</title>
      <link>https://pingcap.com/docs/stable/reference/mysql-compatibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/mysql-compatibility/</guid>
      <description>Learn about the compatibility of TiDB with MySQL, and the unsupported and different features.</description>
    </item>
    
    <item>
      <title>Compatibility with MySQL</title>
      <link>https://pingcap.com/docs/v2.1/reference/mysql-compatibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/mysql-compatibility/</guid>
      <description>Learn about the compatibility of TiDB with MySQL, and the unsupported and different features.</description>
    </item>
    
    <item>
      <title>Compatibility with MySQL</title>
      <link>https://pingcap.com/docs/v3.1/reference/mysql-compatibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/mysql-compatibility/</guid>
      <description>Learn about the compatibility of TiDB with MySQL, and the unsupported and different features.</description>
    </item>
    
    <item>
      <title>Configuration Options</title>
      <link>https://pingcap.com/docs/dev/reference/configuration/tidb-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/configuration/tidb-server/configuration/</guid>
      <description>Learn the configuration options in TiDB.</description>
    </item>
    
    <item>
      <title>Configuration Options</title>
      <link>https://pingcap.com/docs/stable/reference/configuration/tidb-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/configuration/tidb-server/configuration/</guid>
      <description>Learn some configuration options for TiDB</description>
    </item>
    
    <item>
      <title>Configuration Options</title>
      <link>https://pingcap.com/docs/v2.1/reference/configuration/tidb-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/configuration/tidb-server/configuration/</guid>
      <description>Learn the configuration options in TiDB.</description>
    </item>
    
    <item>
      <title>Configuration Options</title>
      <link>https://pingcap.com/docs/v3.1/reference/configuration/tidb-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/configuration/tidb-server/configuration/</guid>
      <description>Learn some configuration options for TiDB</description>
    </item>
    
    <item>
      <title>Connect with us</title>
      <link>https://pingcap.com/docs/dev/community/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/community/</guid>
      <description>Learn about how to connect with us.</description>
    </item>
    
    <item>
      <title>Connect with us</title>
      <link>https://pingcap.com/docs/stable/community/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/community/</guid>
      <description>Learn about how to connect with us.</description>
    </item>
    
    <item>
      <title>Connect with us</title>
      <link>https://pingcap.com/docs/v2.1/community/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/community/</guid>
      <description>Learn about how to connect with us.</description>
    </item>
    
    <item>
      <title>Connect with us</title>
      <link>https://pingcap.com/docs/v3.1/community/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/community/</guid>
      <description>Learn about how to connect with us.</description>
    </item>
    
    <item>
      <title>Connectors and APIs</title>
      <link>https://pingcap.com/docs/dev/reference/supported-clients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/supported-clients/</guid>
      <description>Learn about the connectors and APIs.</description>
    </item>
    
    <item>
      <title>Connectors and APIs</title>
      <link>https://pingcap.com/docs/stable/reference/supported-clients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/supported-clients/</guid>
      <description>Learn about the connectors and APIs.</description>
    </item>
    
    <item>
      <title>Connectors and APIs</title>
      <link>https://pingcap.com/docs/v2.1/reference/supported-clients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/supported-clients/</guid>
      <description>Learn about the connectors and APIs.</description>
    </item>
    
    <item>
      <title>Connectors and APIs</title>
      <link>https://pingcap.com/docs/v3.1/reference/supported-clients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/supported-clients/</guid>
      <description>Learn about the connectors and APIs.</description>
    </item>
    
    <item>
      <title>Constraints</title>
      <link>https://pingcap.com/docs/dev/reference/sql/constraints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/constraints/</guid>
      <description>Learn how SQL Constraints apply to TiDB.</description>
    </item>
    
    <item>
      <title>Constraints</title>
      <link>https://pingcap.com/docs/stable/reference/sql/constraints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/constraints/</guid>
      <description>Learn how SQL Constraints apply to TiDB.</description>
    </item>
    
    <item>
      <title>Constraints</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/constraints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/constraints/</guid>
      <description>Learn how SQL Constraints apply to TiDB.</description>
    </item>
    
    <item>
      <title>Constraints</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/constraints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/constraints/</guid>
      <description>Learn how SQL Constraints apply to TiDB.</description>
    </item>
    
    <item>
      <title>Contact Us</title>
      <link>https://pingcap.com/contact-us/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/contact-us/</guid>
      <description>PingCAP is focused on developing distributed NewSQL and is the team building TiDB, an open-source distributed NewSQL database.</description>
    </item>
    
    <item>
      <title>Content Strategist</title>
      <link>https://pingcap.com/about-cn/recruit/campus/campus-2020-content-strategist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/campus/campus-2020-content-strategist/</guid>
      <description>Content Strategist Qualifications:
  Bachelor&#39;s degree or above in software, computer science or engineering relevant majors with an understanding of the software industry;
  Excellent command of both written and oral English;
  Experience and passion in writing software relevant topics;
  Experience in marketing research is a strong plus;
  An excellent communicator with a clear and concise writing style;
  Detail-oriented with sharp eyes and good troubleshooting skills;</description>
    </item>
    
    <item>
      <title>Content Strategist</title>
      <link>https://pingcap.com/about-cn/recruit/i18n/content-strategist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/i18n/content-strategist/</guid>
      <description>Content Strategist Qualifications:
  Bachelor&#39;s degree or above in software, computer science or engineering relevant majors with an understanding of the software industry;
  Excellent command of both written and oral English;
  Experience and passion in writing software relevant topics;
  Experience in marketing research is a strong plus;
  An excellent communicator with a clear and concise writing style;
  Detail-oriented with sharp eyes and good troubleshooting skills;</description>
    </item>
    
    <item>
      <title>Content Strategist Intern</title>
      <link>https://pingcap.com/about-cn/recruit/campus/content-strategist-intern/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/campus/content-strategist-intern/</guid>
      <description>Content Strategist Intern Qualifications:
  Bachelor&#39;s degree or above in software, computer science or engineering relevant majors with an understanding of the software industry;
  Excellent command of both written and oral English;
  Experience and passion in writing software relevant topics;
  Experience in marketing research is a strong plus;
  An excellent communicator with a clear and concise writing style;
  Detail-oriented with sharp eyes and good troubleshooting skills;</description>
    </item>
    
    <item>
      <title>Contribute</title>
      <link>https://pingcap.com/docs/dev/contribute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/contribute/</guid>
      <description>Learn how to contribute to the TiDB database.</description>
    </item>
    
    <item>
      <title>Contribute</title>
      <link>https://pingcap.com/docs/stable/contribute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/contribute/</guid>
      <description>Learn how to contribute to the TiDB database.</description>
    </item>
    
    <item>
      <title>Contribute</title>
      <link>https://pingcap.com/docs/v2.1/contribute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/contribute/</guid>
      <description>Learn how to contribute to the TiDB database.</description>
    </item>
    
    <item>
      <title>Contribute</title>
      <link>https://pingcap.com/docs/v3.1/contribute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/contribute/</guid>
      <description>Learn how to contribute to the TiDB database.</description>
    </item>
    
    <item>
      <title>Control Flow Functions</title>
      <link>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/control-flow-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/control-flow-functions/</guid>
      <description>Learn about the Control Flow functions.</description>
    </item>
    
    <item>
      <title>Control Flow Functions</title>
      <link>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/control-flow-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/control-flow-functions/</guid>
      <description>Learn about the Control Flow functions.</description>
    </item>
    
    <item>
      <title>Control Flow Functions</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/control-flow-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/control-flow-functions/</guid>
      <description>Learn about the Control Flow functions.</description>
    </item>
    
    <item>
      <title>Control Flow Functions</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/control-flow-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/control-flow-functions/</guid>
      <description>Learn about the Control Flow functions.</description>
    </item>
    
    <item>
      <title>Course Overview</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/introduction/course-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/introduction/course-overview/</guid>
      <description>Course Overview  Transcript Welcome to TiDB Academy!
My name is Morgan, and I&#39;ll be your instructor for TiDB for MySQL DBAs. To give myself a quick introduction, like you I have a background in MySQL Administration. I&#39;ve been using it for over 15 years now, most recently I was product manager for the MySQL Server at Oracle. If you have a question about how something you do in MySQL works in TiDB, I&#39;d be happy to provide an answer!</description>
    </item>
    
    <item>
      <title>Course Summary</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/conclusion/course-summary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/conclusion/course-summary/</guid>
      <description>Course Summary  Transcript Thank you for joining me on our TiDB for MySQL DBAs course. I hope you had as much fun attending the course, as I did creating it.
In this video, I wanted to go over some of the major takeaways for each of the sections of the course. The goal in me doing so is that if I trigger something that is less familiar to you, you can use this as an opportunity to go back and watch the section again, or repeat the lab exercises.</description>
    </item>
    
    <item>
      <title>CREATE DATABASE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/create-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/create-database/</guid>
      <description>TiDB 数据库中 CREATE DATABASE 的使用概况。</description>
    </item>
    
    <item>
      <title>CREATE DATABASE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/create-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/create-database/</guid>
      <description>TiDB 数据库中 CREATE DATABASE 的使用概况。</description>
    </item>
    
    <item>
      <title>CREATE DATABASE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/create-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/create-database/</guid>
      <description>TiDB 数据库中 CREATE DATABASE 的使用概况。</description>
    </item>
    
    <item>
      <title>CREATE DATABASE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/create-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/create-database/</guid>
      <description>TiDB 数据库中 CREATE DATABASE 的使用概况。</description>
    </item>
    
    <item>
      <title>CREATE DATABASE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/create-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/create-database/</guid>
      <description>An overview of the usage of CREATE DATABASE for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE DATABASE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/create-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/create-database/</guid>
      <description>An overview of the usage of CREATE DATABASE for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE DATABASE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/create-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/create-database/</guid>
      <description>An overview of the usage of CREATE DATABASE for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE DATABASE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/create-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/create-database/</guid>
      <description>An overview of the usage of CREATE DATABASE for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE INDEX</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/create-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/create-index/</guid>
      <description>CREATE INDEX 在 TiDB 中的使用概况</description>
    </item>
    
    <item>
      <title>CREATE INDEX</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/create-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/create-index/</guid>
      <description>CREATE INDEX 在 TiDB 中的使用概况</description>
    </item>
    
    <item>
      <title>CREATE INDEX</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/create-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/create-index/</guid>
      <description>CREATE INDEX 在 TiDB 中的使用概况</description>
    </item>
    
    <item>
      <title>CREATE INDEX</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/create-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/create-index/</guid>
      <description>CREATE INDEX 在 TiDB 中的使用概况</description>
    </item>
    
    <item>
      <title>CREATE INDEX | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/create-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/create-index/</guid>
      <description>An overview of the usage of CREATE INDEX for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE INDEX | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/create-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/create-index/</guid>
      <description>An overview of the usage of CREATE INDEX for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE INDEX | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/create-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/create-index/</guid>
      <description>An overview of the usage of CREATE INDEX for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE INDEX | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/create-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/create-index/</guid>
      <description>An overview of the usage of CREATE INDEX for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE SEQUENCE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/create-sequence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/create-sequence/</guid>
      <description>CREATE SEQUENCE 在 TiDB 中的使用概况</description>
    </item>
    
    <item>
      <title>CREATE TABLE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/create-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/create-table/</guid>
      <description>TiDB 数据库中 CREATE TABLE 的使用概况</description>
    </item>
    
    <item>
      <title>CREATE TABLE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/create-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/create-table/</guid>
      <description>TiDB 数据库中 CREATE TABLE 的使用概况</description>
    </item>
    
    <item>
      <title>CREATE TABLE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/create-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/create-table/</guid>
      <description>TiDB 数据库中 CREATE TABLE 的使用概况</description>
    </item>
    
    <item>
      <title>CREATE TABLE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/create-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/create-table/</guid>
      <description>TiDB 数据库中 CREATE TABLE 的使用概况</description>
    </item>
    
    <item>
      <title>CREATE TABLE LIKE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/create-table-like/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/create-table-like/</guid>
      <description>TiDB 数据库中 CREATE TABLE LIKE 的使用概况。</description>
    </item>
    
    <item>
      <title>CREATE TABLE LIKE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/create-table-like/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/create-table-like/</guid>
      <description>TiDB 数据库中 CREATE TABLE LIKE 的使用概况。</description>
    </item>
    
    <item>
      <title>CREATE TABLE LIKE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/create-table-like/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/create-table-like/</guid>
      <description>TiDB 数据库中 CREATE TABLE LIKE 的使用概况。</description>
    </item>
    
    <item>
      <title>CREATE TABLE LIKE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/create-table-like/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/create-table-like/</guid>
      <description>TiDB 数据库中 CREATE TABLE LIKE 的使用概况。</description>
    </item>
    
    <item>
      <title>CREATE TABLE LIKE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/create-table-like/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/create-table-like/</guid>
      <description>An overview of the usage of CREATE TABLE LIKE for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE TABLE LIKE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/create-table-like/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/create-table-like/</guid>
      <description>An overview of the usage of CREATE TABLE LIKE for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE TABLE LIKE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/create-table-like/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/create-table-like/</guid>
      <description>An overview of the usage of CREATE TABLE LIKE for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE TABLE LIKE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/create-table-like/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/create-table-like/</guid>
      <description>An overview of the usage of CREATE TABLE LIKE for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/create-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/create-table/</guid>
      <description>An overview of the usage of CREATE TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/create-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/create-table/</guid>
      <description>An overview of the usage of CREATE TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/create-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/create-table/</guid>
      <description>An overview of the usage of CREATE TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/create-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/create-table/</guid>
      <description>An overview of the usage of CREATE TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE USER</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/create-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/create-user/</guid>
      <description>TiDB 数据库中 CREATE USER 的使用概况。</description>
    </item>
    
    <item>
      <title>CREATE USER</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/create-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/create-user/</guid>
      <description>TiDB 数据库中 CREATE USER 的使用概况。</description>
    </item>
    
    <item>
      <title>CREATE USER</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/create-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/create-user/</guid>
      <description>TiDB 数据库中 CREATE USER 的使用概况。</description>
    </item>
    
    <item>
      <title>CREATE USER</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/create-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/create-user/</guid>
      <description>TiDB 数据库中 CREATE USER 的使用概况。</description>
    </item>
    
    <item>
      <title>CREATE USER | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/create-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/create-user/</guid>
      <description>An overview of the usage of CREATE USER for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE USER | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/create-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/create-user/</guid>
      <description>An overview of the usage of CREATE USER for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE USER | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/create-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/create-user/</guid>
      <description>An overview of the usage of CREATE USER for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE USER | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/create-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/create-user/</guid>
      <description>An overview of the usage of CREATE USER for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE VIEW</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/create-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/create-view/</guid>
      <description>TiDB 数据库中 CREATE VIEW 的使用概况。</description>
    </item>
    
    <item>
      <title>CREATE VIEW</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/create-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/create-view/</guid>
      <description>TiDB 数据库中 CREATE VIEW 的使用概况。</description>
    </item>
    
    <item>
      <title>CREATE VIEW</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/create-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/create-view/</guid>
      <description>TiDB 数据库中 CREATE VIEW 的使用概况。</description>
    </item>
    
    <item>
      <title>CREATE VIEW | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/create-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/create-view/</guid>
      <description>An overview of the usage of CREATE VIEW for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE VIEW | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/create-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/create-view/</guid>
      <description>An overview of the usage of CREATE VIEW for the TiDB database.</description>
    </item>
    
    <item>
      <title>CREATE VIEW | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/create-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/create-view/</guid>
      <description>An overview of the usage of CREATE VIEW for the TiDB database.</description>
    </item>
    
    <item>
      <title>Cross-DC Deployment Solutions</title>
      <link>https://pingcap.com/docs/dev/how-to/deploy/geographic-redundancy/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/deploy/geographic-redundancy/overview/</guid>
      <description>Cross-DC Deployment Solutions As a NewSQL database, TiDB excels in the best features of the traditional relational database and the scalability of the NoSQL database and is of course, highly available across data centers (hereinafter referred to as DC). This document is to introduce different deployment solutions in cross-DC environment.
3-DC deployment solution TiDB, TiKV and PD are distributed among 3 DCs, which is the most common deployment solution with the highest availability.</description>
    </item>
    
    <item>
      <title>Cross-DC Deployment Solutions</title>
      <link>https://pingcap.com/docs/stable/how-to/deploy/geographic-redundancy/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/deploy/geographic-redundancy/overview/</guid>
      <description>Cross-DC Deployment Solutions As a NewSQL database, TiDB excels in the best features of the traditional relational database and the scalability of the NoSQL database and is of course, highly available across data centers (hereinafter referred to as DC). This document is to introduce different deployment solutions in cross-DC environment.
3-DC deployment solution TiDB, TiKV and PD are distributed among 3 DCs, which is the most common deployment solution with the highest availability.</description>
    </item>
    
    <item>
      <title>Cross-DC Deployment Solutions</title>
      <link>https://pingcap.com/docs/v2.1/how-to/deploy/geographic-redundancy/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/deploy/geographic-redundancy/overview/</guid>
      <description>Cross-DC Deployment Solutions As a NewSQL database, TiDB excels in the best features of the traditional relational database and the scalability of the NoSQL database and is of course, highly available across data centers (hereinafter referred to as DC). This document is to introduce different deployment solutions in cross-DC environment.
3-DC deployment solution TiDB, TiKV and PD are distributed among 3 DCs, which is the most common deployment solution with the highest availability.</description>
    </item>
    
    <item>
      <title>Cross-DC Deployment Solutions</title>
      <link>https://pingcap.com/docs/v3.1/how-to/deploy/geographic-redundancy/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/deploy/geographic-redundancy/overview/</guid>
      <description>Cross-DC Deployment Solutions As a NewSQL database, TiDB excels in the best features of the traditional relational database and the scalability of the NoSQL database and is of course, highly available across data centers (hereinafter referred to as DC). This document is to introduce different deployment solutions in cross-DC environment.
3-DC deployment solution TiDB, TiKV and PD are distributed among 3 DCs, which is the most common deployment solution with the highest availability.</description>
    </item>
    
    <item>
      <title>CSV 支持</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/tidb-lightning/csv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/tidb-lightning/csv/</guid>
      <description>CSV 支持 TiDB Lightning 支持读取 CSV（逗号分隔值）的数据源，以及其他定界符格式如 TSV（制表符分隔值）。
文件名 包含整张表的 CSV 文件需命名为 db_name.table_name.csv，该文件会被解析为数据库 db_name 里名为 table_name 的表。
如果一个表分布于多个 CSV 文件，这些 CSV 文件命名需加上文件编号的后缀，如 db_name.table_name.003.csv。
文件扩展名必须为 *.csv，即使文件的内容并非逗号分隔。
表结构 CSV 文件是没有表结构的。要导入 TiDB，就必须为其提供表结构。可以通过以下任一方法实现：
 创建包含 DDL 语句 CREATE TABLE 的文件 db_name.table_name-schema.sql。 首先在 TiDB 中直接创建空表，然后在 tidb-lightning.toml 中设置 [mydumper] no-schema = true。  配置 CSV 格式可在 tidb-lightning.toml 文件中 [mydumper.csv] 下配置。 大部分设置项在 MySQL LOAD DATA 语句中都有对应的项目。
[mydumper.csv] # 字段分隔符，必须为 ASCII 字符。 separator = &amp;#39;,&amp;#39; # 引用定界符，可以为 ASCII 字符或空字符。 delimiter = &amp;#39;&amp;#34;&amp;#39; # CSV 文件是否包含表头。 # 如果为 true，首行将会被跳过。 header = true # CSV 是否包含 NULL。 # 如果为 true，CSV 文件的任何列都不能解析为 NULL。 not-null = false # 如果 `not-null` 为 false（即 CSV 可以包含 NULL）， # 为以下值的字段将会被解析为 NULL。 null = &amp;#39;\N&amp;#39; # 是否解析字段内的反斜线转义符。 backslash-escape = true # 是否移除以分隔符结束的行。 trim-last-separator = false separator   指定字段分隔符。</description>
    </item>
    
    <item>
      <title>CSV 支持</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/tidb-lightning/csv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/tidb-lightning/csv/</guid>
      <description>CSV 支持 TiDB Lightning 支持读取 CSV（逗号分隔值）的数据源，以及其他定界符格式如 TSV（制表符分隔值）。
文件名 包含整张表的 CSV 文件需命名为 db_name.table_name.csv，该文件会被解析为数据库 db_name 里名为 table_name 的表。
如果一个表分布于多个 CSV 文件，这些 CSV 文件命名需加上文件编号的后缀，如 db_name.table_name.003.csv。
文件扩展名必须为 *.csv，即使文件的内容并非逗号分隔。
表结构 CSV 文件是没有表结构的。要导入 TiDB，就必须为其提供表结构。可以通过以下任一方法实现：
 创建包含 DDL 语句 CREATE TABLE 的文件 db_name.table_name-schema.sql。 首先在 TiDB 中直接创建空表，然后在 tidb-lightning.toml 中设置 [mydumper] no-schema = true。  配置 CSV 格式可在 tidb-lightning.toml 文件中 [mydumper.csv] 下配置。 大部分设置项在 MySQL LOAD DATA 语句中都有对应的项目。
[mydumper.csv] # 字段分隔符，必须为 ASCII 字符。 separator = &amp;#39;,&amp;#39; # 引用定界符，可以为 ASCII 字符或空字符。 delimiter = &amp;#39;&amp;#34;&amp;#39; # CSV 文件是否包含表头。 # 如果为 true，首行将会被跳过。 header = true # CSV 是否包含 NULL。 # 如果为 true，CSV 文件的任何列都不能解析为 NULL。 not-null = false # 如果 `not-null` 为 false（即 CSV 可以包含 NULL）， # 为以下值的字段将会被解析为 NULL。 null = &amp;#39;\N&amp;#39; # 是否解析字段内的反斜线转义符。 backslash-escape = true # 是否移除以分隔符结束的行。 trim-last-separator = false separator   指定字段分隔符。</description>
    </item>
    
    <item>
      <title>CSV 支持</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/tidb-lightning/csv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/tidb-lightning/csv/</guid>
      <description>CSV 支持 TiDB Lightning 支持读取 CSV（逗号分隔值）的数据源，以及其他定界符格式如 TSV（制表符分隔值）。
文件名 包含整张表的 CSV 文件需命名为 db_name.table_name.csv，该文件会被解析为数据库 db_name 里名为 table_name 的表。
如果一个表分布于多个 CSV 文件，这些 CSV 文件命名需加上文件编号的后缀，如 db_name.table_name.003.csv。
文件扩展名必须为 *.csv，即使文件的内容并非逗号分隔。
表结构 CSV 文件是没有表结构的。要导入 TiDB，就必须为其提供表结构。可以通过以下任一方法实现：
 创建包含 DDL 语句 CREATE TABLE 的文件 db_name.table_name-schema.sql。 首先在 TiDB 中直接创建空表，然后在 tidb-lightning.toml 中设置 [mydumper] no-schema = true。  配置 CSV 格式可在 tidb-lightning.toml 文件中 [mydumper.csv] 下配置。 大部分设置项在 MySQL LOAD DATA 语句中都有对应的项目。
[mydumper.csv] # 字段分隔符，必须为 ASCII 字符。 separator = &amp;#39;,&amp;#39; # 引用定界符，可以为 ASCII 字符或空字符。 delimiter = &amp;#39;&amp;#34;&amp;#39; # CSV 文件是否包含表头。 # 如果为 true，首行将会被跳过。 header = true # CSV 是否包含 NULL。 # 如果为 true，CSV 文件的任何列都不能解析为 NULL。 not-null = false # 如果 `not-null` 为 false（即 CSV 可以包含 NULL）， # 为以下值的字段将会被解析为 NULL。 null = &amp;#39;\N&amp;#39; # 是否解析字段内的反斜线转义符。 backslash-escape = true # 是否移除以分隔符结束的行。 trim-last-separator = false separator   指定字段分隔符。</description>
    </item>
    
    <item>
      <title>CSV 支持</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-lightning/csv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-lightning/csv/</guid>
      <description>CSV 支持 TiDB Lightning 支持读取 CSV（逗号分隔值）的数据源，以及其他定界符格式如 TSV（制表符分隔值）。
文件名 包含整张表的 CSV 文件需命名为 db_name.table_name.csv，该文件会被解析为数据库 db_name 里名为 table_name 的表。
如果一个表分布于多个 CSV 文件，这些 CSV 文件命名需加上文件编号的后缀，如 db_name.table_name.003.csv。
文件扩展名必须为 *.csv，即使文件的内容并非逗号分隔。
表结构 CSV 文件是没有表结构的。要导入 TiDB，就必须为其提供表结构。可以通过以下任一方法实现：
 创建包含 DDL 语句 CREATE TABLE 的文件 db_name.table_name-schema.sql。 首先在 TiDB 中直接创建空表，然后在 tidb-lightning.toml 中设置 [mydumper] no-schema = true。  配置 CSV 格式可在 tidb-lightning.toml 文件中 [mydumper.csv] 下配置。 大部分设置项在 MySQL LOAD DATA 语句中都有对应的项目。
[mydumper.csv] # 字段分隔符，必须为 ASCII 字符。 separator = &amp;#39;,&amp;#39; # 引用定界符，可以为 ASCII 字符或空字符。 delimiter = &amp;#39;&amp;#34;&amp;#39; # CSV 文件是否包含表头。 # 如果为 true，首行将会被跳过。 header = true # CSV 是否包含 NULL。 # 如果为 true，CSV 文件的任何列都不能解析为 NULL。 not-null = false # 如果 `not-null` 为 false（即 CSV 可以包含 NULL）， # 为以下值的字段将会被解析为 NULL。 null = &amp;#39;\N&amp;#39; # 是否解析字段内的反斜线转义符。 backslash-escape = true # 是否移除以分隔符结束的行。 trim-last-separator = false separator   指定字段分隔符。</description>
    </item>
    
    <item>
      <title>Data Check for Tables with Different Schema or Table Names</title>
      <link>https://pingcap.com/docs/dev/reference/tools/sync-diff-inspector/route-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/sync-diff-inspector/route-diff/</guid>
      <description>Learn the data check for different database names or table names.</description>
    </item>
    
    <item>
      <title>Data Check for Tables with Different Schema or Table Names</title>
      <link>https://pingcap.com/docs/stable/reference/tools/sync-diff-inspector/route-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/sync-diff-inspector/route-diff/</guid>
      <description>Learn the data check for different database names or table names.</description>
    </item>
    
    <item>
      <title>Data Check for Tables with Different Schema or Table Names</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/sync-diff-inspector/route-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/sync-diff-inspector/route-diff/</guid>
      <description>Learn the data check for different database names or table names.</description>
    </item>
    
    <item>
      <title>Data Check for Tables with Different Schema or Table Names</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/sync-diff-inspector/route-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/sync-diff-inspector/route-diff/</guid>
      <description>Learn the data check for different database names or table names.</description>
    </item>
    
    <item>
      <title>Data Check for TiDB Upstream and Downstream Clusters</title>
      <link>https://pingcap.com/docs/dev/reference/tools/sync-diff-inspector/tidb-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/sync-diff-inspector/tidb-diff/</guid>
      <description>Learn how to check data for TiDB upstream and downstream clusters.</description>
    </item>
    
    <item>
      <title>Data Check for TiDB Upstream and Downstream Clusters</title>
      <link>https://pingcap.com/docs/stable/reference/tools/sync-diff-inspector/tidb-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/sync-diff-inspector/tidb-diff/</guid>
      <description>Learn how to check data for TiDB upstream and downstream clusters.</description>
    </item>
    
    <item>
      <title>Data Check for TiDB Upstream and Downstream Clusters</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/sync-diff-inspector/tidb-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/sync-diff-inspector/tidb-diff/</guid>
      <description>Learn how to check data for TiDB upstream and downstream clusters.</description>
    </item>
    
    <item>
      <title>Data Check for TiDB Upstream and Downstream Clusters</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/sync-diff-inspector/tidb-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/sync-diff-inspector/tidb-diff/</guid>
      <description>Learn how to check data for TiDB upstream and downstream clusters.</description>
    </item>
    
    <item>
      <title>Data Check in the Sharding Scenario</title>
      <link>https://pingcap.com/docs/dev/reference/tools/sync-diff-inspector/shard-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/sync-diff-inspector/shard-diff/</guid>
      <description>Learn the data check in the sharding scenario.</description>
    </item>
    
    <item>
      <title>Data Check in the Sharding Scenario</title>
      <link>https://pingcap.com/docs/stable/reference/tools/sync-diff-inspector/shard-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/sync-diff-inspector/shard-diff/</guid>
      <description>Learn the data check in the sharding scenario.</description>
    </item>
    
    <item>
      <title>Data Check in the Sharding Scenario</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/sync-diff-inspector/shard-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/sync-diff-inspector/shard-diff/</guid>
      <description>Learn the data check in the sharding scenario.</description>
    </item>
    
    <item>
      <title>Data Check in the Sharding Scenario</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/sync-diff-inspector/shard-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/sync-diff-inspector/shard-diff/</guid>
      <description>Learn the data check in the sharding scenario.</description>
    </item>
    
    <item>
      <title>Data Migration (DM)</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/dm/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/dm/overview/</guid>
      <description>Data Migration  Transcript Data Migration or DM is an exciting new toolchain that is currently available as an Alpha release. What does it do? DM simplifies many of the provisioning steps when setting up TiDB to be a replica of a MySQL or MariaDB system.
So lets say I have the following topology of a MySQL master with slaves (draw picture).
I can have DM first create a backup of this slave using mydumper, and import it into TIDB.</description>
    </item>
    
    <item>
      <title>Data Migration Cluster Operations</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/cluster-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/cluster-operations/</guid>
      <description>This document introduces the DM cluster operations and considerations when you administer a DM cluster using DM-Ansible.</description>
    </item>
    
    <item>
      <title>Data Migration Cluster Operations</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/cluster-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/cluster-operations/</guid>
      <description>This document introduces the DM cluster operations and considerations when you administer a DM cluster using DM-Ansible.</description>
    </item>
    
    <item>
      <title>Data Migration Cluster Operations</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/cluster-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/cluster-operations/</guid>
      <description>This document introduces the DM cluster operations and considerations when you administer a DM cluster using DM-Ansible.</description>
    </item>
    
    <item>
      <title>Data Migration Cluster Operations</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/cluster-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/cluster-operations/</guid>
      <description>This document introduces the DM cluster operations and considerations when you administer a DM cluster using DM-Ansible.</description>
    </item>
    
    <item>
      <title>Data Migration Configuration File Overview</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/configure/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/configure/overview/</guid>
      <description>This document gives an overview of Data Migration configuration files.</description>
    </item>
    
    <item>
      <title>Data Migration Configuration File Overview</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/configure/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/configure/overview/</guid>
      <description>This document gives an overview of Data Migration configuration files.</description>
    </item>
    
    <item>
      <title>Data Migration Configuration File Overview</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/configure/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/configure/overview/</guid>
      <description>This document gives an overview of Data Migration configuration files.</description>
    </item>
    
    <item>
      <title>Data Migration Configuration File Overview</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/configure/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/configure/overview/</guid>
      <description>This document gives an overview of Data Migration configuration files.</description>
    </item>
    
    <item>
      <title>Data Migration Error Handling</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/troubleshoot/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/troubleshoot/error-handling/</guid>
      <description>Learn how to deal with errors when you use TiDB Data Migration.</description>
    </item>
    
    <item>
      <title>Data Migration Error Handling</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/troubleshoot/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/troubleshoot/error-handling/</guid>
      <description>Learn how to deal with errors when you use TiDB Data Migration.</description>
    </item>
    
    <item>
      <title>Data Migration Error Handling</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/troubleshoot/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/troubleshoot/error-handling/</guid>
      <description>Learn how to deal with errors when you use TiDB Data Migration.</description>
    </item>
    
    <item>
      <title>Data Migration Error Handling</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/troubleshoot/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/troubleshoot/error-handling/</guid>
      <description>Learn how to deal with errors when you use TiDB Data Migration.</description>
    </item>
    
    <item>
      <title>Data Migration Error Message Description</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/troubleshoot/error-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/troubleshoot/error-system/</guid>
      <description>Learn the system and description of error messages in Data Migration.</description>
    </item>
    
    <item>
      <title>Data Migration Error Message Description</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/troubleshoot/error-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/troubleshoot/error-system/</guid>
      <description>Learn the system and description of error messages in Data Migration.</description>
    </item>
    
    <item>
      <title>Data Migration Error Message Description</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/troubleshoot/error-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/troubleshoot/error-system/</guid>
      <description>Learn the system and description of error messages in Data Migration.</description>
    </item>
    
    <item>
      <title>Data Migration Error Message Description</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/troubleshoot/error-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/troubleshoot/error-system/</guid>
      <description>Learn the system and description of error messages in Data Migration.</description>
    </item>
    
    <item>
      <title>Data Migration Monitoring Metrics</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/monitor/</guid>
      <description>Learn about the monitoring metrics when you use Data Migration to replicate data.</description>
    </item>
    
    <item>
      <title>Data Migration Monitoring Metrics</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/monitor/</guid>
      <description>Learn about the monitoring metrics when you use Data Migration to replicate data.</description>
    </item>
    
    <item>
      <title>Data Migration Monitoring Metrics</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/monitor/</guid>
      <description>Learn about the monitoring metrics when you use Data Migration to replicate data.</description>
    </item>
    
    <item>
      <title>Data Migration Monitoring Metrics</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/monitor/</guid>
      <description>Learn about the monitoring metrics when you use Data Migration to replicate data.</description>
    </item>
    
    <item>
      <title>Data Migration Overview</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/overview/</guid>
      <description>Learn about the Data Migration tool, the architecture, the key components and features.</description>
    </item>
    
    <item>
      <title>Data Migration Overview</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/overview/</guid>
      <description>Learn about the Data Migration tool, the architecture, the key components and features.</description>
    </item>
    
    <item>
      <title>Data Migration Overview</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/overview/</guid>
      <description>Learn about the Data Migration tool, the architecture, the key components and features.</description>
    </item>
    
    <item>
      <title>Data Migration Overview</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/overview/</guid>
      <description>Learn about the Data Migration tool, the architecture, the key components and features.</description>
    </item>
    
    <item>
      <title>Data Migration Query Status</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/query-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/query-status/</guid>
      <description>Learn the DM query result and subtask status.</description>
    </item>
    
    <item>
      <title>Data Migration Query Status</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/query-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/query-status/</guid>
      <description>Learn the DM query result and subtask status.</description>
    </item>
    
    <item>
      <title>Data Migration Query Status</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/query-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/query-status/</guid>
      <description>Learn the DM query result and subtask status.</description>
    </item>
    
    <item>
      <title>Data Migration Query Status</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/query-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/query-status/</guid>
      <description>Learn the DM query result and subtask status.</description>
    </item>
    
    <item>
      <title>Data Migration Relay Log</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/relay-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/relay-log/</guid>
      <description>Learn the directory structure, initial replication rules and data purge of DM relay logs.</description>
    </item>
    
    <item>
      <title>Data Migration Relay Log</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/relay-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/relay-log/</guid>
      <description>Learn the directory structure, initial replication rules and data purge of DM relay logs.</description>
    </item>
    
    <item>
      <title>Data Migration Relay Log</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/relay-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/relay-log/</guid>
      <description>Learn the directory structure, initial replication rules and data purge of DM relay logs.</description>
    </item>
    
    <item>
      <title>Data Migration Relay Log</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/relay-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/relay-log/</guid>
      <description>Learn the directory structure, initial replication rules and data purge of DM relay logs.</description>
    </item>
    
    <item>
      <title>Data Migration Shard Merge Scenario</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/usage-scenarios/shard-merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/usage-scenarios/shard-merge/</guid>
      <description>Learn how to use Data Migration to replicate data in the shard merge scenario.</description>
    </item>
    
    <item>
      <title>Data Migration Shard Merge Scenario</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/usage-scenarios/shard-merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/usage-scenarios/shard-merge/</guid>
      <description>Learn how to use Data Migration to replicate data in the shard merge scenario.</description>
    </item>
    
    <item>
      <title>Data Migration Shard Merge Scenario</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/usage-scenarios/shard-merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/usage-scenarios/shard-merge/</guid>
      <description>Learn how to use Data Migration to replicate data in the shard merge scenario.</description>
    </item>
    
    <item>
      <title>Data Migration Shard Merge Scenario</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/usage-scenarios/shard-merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/usage-scenarios/shard-merge/</guid>
      <description>Learn how to use Data Migration to replicate data in the shard merge scenario.</description>
    </item>
    
    <item>
      <title>Data Migration Simple Usage Scenario</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/usage-scenarios/simple-replication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/usage-scenarios/simple-replication/</guid>
      <description>Learn how to use Data Migration to replicate data in a simple scenario.</description>
    </item>
    
    <item>
      <title>Data Migration Simple Usage Scenario</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/usage-scenarios/simple-replication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/usage-scenarios/simple-replication/</guid>
      <description>Learn how to use Data Migration to replicate data in a simple scenario.</description>
    </item>
    
    <item>
      <title>Data Migration Simple Usage Scenario</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/usage-scenarios/simple-replication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/usage-scenarios/simple-replication/</guid>
      <description>Learn how to use Data Migration to replicate data in a simple scenario.</description>
    </item>
    
    <item>
      <title>Data Migration Simple Usage Scenario</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/usage-scenarios/simple-replication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/usage-scenarios/simple-replication/</guid>
      <description>Learn how to use Data Migration to replicate data in a simple scenario.</description>
    </item>
    
    <item>
      <title>Data Migration Task Configuration File</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/configure/task-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/configure/task-configuration-file/</guid>
      <description>This document introduces the task configuration file of Data Migration.</description>
    </item>
    
    <item>
      <title>Data Migration Task Configuration File</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/configure/task-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/configure/task-configuration-file/</guid>
      <description>This document introduces the task configuration file of Data Migration.</description>
    </item>
    
    <item>
      <title>Data Migration Task Configuration File</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/configure/task-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/configure/task-configuration-file/</guid>
      <description>This document introduces the task configuration file of Data Migration.</description>
    </item>
    
    <item>
      <title>Data Migration Task Configuration File</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/configure/task-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/configure/task-configuration-file/</guid>
      <description>This document introduces the task configuration file of Data Migration.</description>
    </item>
    
    <item>
      <title>Data Migration Troubleshooting</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/troubleshoot/dm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/troubleshoot/dm/</guid>
      <description>Learn how to diagnose and resolve issues when you use Data Migration.</description>
    </item>
    
    <item>
      <title>Data Migration Troubleshooting</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/troubleshoot/dm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/troubleshoot/dm/</guid>
      <description>Learn how to diagnose and resolve issues when you use Data Migration.</description>
    </item>
    
    <item>
      <title>Data Migration Troubleshooting</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/troubleshoot/dm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/troubleshoot/dm/</guid>
      <description>Learn how to diagnose and resolve issues when you use Data Migration.</description>
    </item>
    
    <item>
      <title>Data Migration Troubleshooting</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/troubleshoot/dm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/troubleshoot/dm/</guid>
      <description>Learn how to diagnose and resolve issues when you use Data Migration.</description>
    </item>
    
    <item>
      <title>Data Migration 常见错误修复</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/troubleshoot/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/troubleshoot/error-handling/</guid>
      <description>Data Migration 常见错误修复 本文档介绍 DM 中常见的错误以及修复方法。
常见错误说明和处理方法    错误码 错误说明 解决方法     code=10001 数据库操作异常 进一步分析错误信息和错误堆栈   code=10002 数据库底层的 bad connection 错误，通常表示 DM 到下游 TiDB 的数据库连接出现了异常（如网络故障、TiDB 重启等）且当前请求的数据暂时未能发送到 TiDB。 DM 提供针对此类错误的自动恢复。如果长时间未恢复，需要用户检查网络或 TiDB 状态。   code=10003 数据库底层 invalid connection 错误，通常表示 DM 到下游 TiDB 的数据库连接出现了异常（如网络故障、TiDB 重启、TiKV busy 等）且当前请求已有部分数据发送到了 TiDB。 DM 提供针对此类错误的自动恢复。如果未能正常恢复，需要用户进一步检查错误信息并根据具体场景进行分析。   code=10005 数据库查询类语句出错    code=10006 数据库 EXECUTE 类型语句出错，包括 DDL 和 INSERT/UPDATE/DELETE 类型的 DML。更详细的错误信息可通过错误 message 获取。错误 message 中通常包含操作数据库所返回的错误码和错误信息。    code=11006 DM 内置的 parser 解析不兼容的 DDL 时出错 可参考 Data Migration 故障诊断-处理不兼容的 DDL 语句 提供的解决方案   code=20010 处理任务配置时，解密数据库的密码出错 检查任务配置中提供的下游数据库密码是否有使用 dmctl 正确加密   code=26002 任务检查创建数据库连接失败。更详细的错误信息可通过错误 message 获取。错误 message 中包含操作数据库所返回的错误码和错误信息。 检查 DM-master 所在的机器是否有权限访问上游   code=32001 dump 处理单元异常 如果报错 msg 包含 mydumper: argument list too long.</description>
    </item>
    
    <item>
      <title>Data Migration 常见错误修复</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/troubleshoot/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/troubleshoot/error-handling/</guid>
      <description>Data Migration 常见错误修复 本文档介绍 DM 中常见的错误以及修复方法。
常见错误说明和处理方法    错误码 错误说明 解决方法     code=10001 数据库操作异常 进一步分析错误信息和错误堆栈   code=10002 数据库底层的 bad connection 错误，通常表示 DM 到下游 TiDB 的数据库连接出现了异常（如网络故障、TiDB 重启等）且当前请求的数据暂时未能发送到 TiDB。 DM 提供针对此类错误的自动恢复。如果长时间未恢复，需要用户检查网络或 TiDB 状态。   code=10003 数据库底层 invalid connection 错误，通常表示 DM 到下游 TiDB 的数据库连接出现了异常（如网络故障、TiDB 重启、TiKV busy 等）且当前请求已有部分数据发送到了 TiDB。 DM 提供针对此类错误的自动恢复。如果未能正常恢复，需要用户进一步检查错误信息并根据具体场景进行分析。   code=10005 数据库查询类语句出错    code=10006 数据库 EXECUTE 类型语句出错，包括 DDL 和 INSERT/UPDATE/DELETE 类型的 DML。更详细的错误信息可通过错误 message 获取。错误 message 中通常包含操作数据库所返回的错误码和错误信息。    code=11006 DM 内置的 parser 解析不兼容的 DDL 时出错 可参考 Data Migration 故障诊断-处理不兼容的 DDL 语句 提供的解决方案   code=20010 处理任务配置时，解密数据库的密码出错 检查任务配置中提供的下游数据库密码是否有使用 dmctl 正确加密   code=26002 任务检查创建数据库连接失败。更详细的错误信息可通过错误 message 获取。错误 message 中包含操作数据库所返回的错误码和错误信息。 检查 DM-master 所在的机器是否有权限访问上游   code=32001 dump 处理单元异常 如果报错 msg 包含 mydumper: argument list too long.</description>
    </item>
    
    <item>
      <title>Data Migration 常见错误修复</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/troubleshoot/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/troubleshoot/error-handling/</guid>
      <description>Data Migration 常见错误修复 本文档介绍 DM 中常见的错误以及修复方法。
常见错误说明和处理方法    错误码 错误说明 解决方法     code=10001 数据库操作异常 进一步分析错误信息和错误堆栈   code=10002 数据库底层的 bad connection 错误，通常表示 DM 到下游 TiDB 的数据库连接出现了异常（如网络故障、TiDB 重启等）且当前请求的数据暂时未能发送到 TiDB。 DM 提供针对此类错误的自动恢复。如果长时间未恢复，需要用户检查网络或 TiDB 状态。   code=10003 数据库底层 invalid connection 错误，通常表示 DM 到下游 TiDB 的数据库连接出现了异常（如网络故障、TiDB 重启、TiKV busy 等）且当前请求已有部分数据发送到了 TiDB。 DM 提供针对此类错误的自动恢复。如果未能正常恢复，需要用户进一步检查错误信息并根据具体场景进行分析。   code=10005 数据库查询类语句出错    code=10006 数据库 EXECUTE 类型语句出错，包括 DDL 和 INSERT/UPDATE/DELETE 类型的 DML。更详细的错误信息可通过错误 message 获取。错误 message 中通常包含操作数据库所返回的错误码和错误信息。    code=11006 DM 内置的 parser 解析不兼容的 DDL 时出错 可参考 Data Migration 故障诊断-处理不兼容的 DDL 语句 提供的解决方案   code=20010 处理任务配置时，解密数据库的密码出错 检查任务配置中提供的下游数据库密码是否有使用 dmctl 正确加密   code=26002 任务检查创建数据库连接失败。更详细的错误信息可通过错误 message 获取。错误 message 中包含操作数据库所返回的错误码和错误信息。 检查 DM-master 所在的机器是否有权限访问上游   code=32001 dump 处理单元异常 如果报错 msg 包含 mydumper: argument list too long.</description>
    </item>
    
    <item>
      <title>Data Migration 常见错误修复</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/troubleshoot/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/troubleshoot/error-handling/</guid>
      <description>Data Migration 常见错误修复 本文档介绍 DM 中常见的错误以及修复方法。
常见错误说明和处理方法    错误码 错误说明 解决方法     code=10001 数据库操作异常 进一步分析错误信息和错误堆栈   code=10002 数据库底层的 bad connection 错误，通常表示 DM 到下游 TiDB 的数据库连接出现了异常（如网络故障、TiDB 重启等）且当前请求的数据暂时未能发送到 TiDB。 DM 提供针对此类错误的自动恢复。如果长时间未恢复，需要用户检查网络或 TiDB 状态。   code=10003 数据库底层 invalid connection 错误，通常表示 DM 到下游 TiDB 的数据库连接出现了异常（如网络故障、TiDB 重启、TiKV busy 等）且当前请求已有部分数据发送到了 TiDB。 DM 提供针对此类错误的自动恢复。如果未能正常恢复，需要用户进一步检查错误信息并根据具体场景进行分析。   code=10005 数据库查询类语句出错    code=10006 数据库 EXECUTE 类型语句出错，包括 DDL 和 INSERT/UPDATE/DELETE 类型的 DML。更详细的错误信息可通过错误 message 获取。错误 message 中通常包含操作数据库所返回的错误码和错误信息。    code=11006 DM 内置的 parser 解析不兼容的 DDL 时出错 可参考 Data Migration 故障诊断-处理不兼容的 DDL 语句 提供的解决方案   code=20010 处理任务配置时，解密数据库的密码出错 检查任务配置中提供的下游数据库密码是否有使用 dmctl 正确加密   code=26002 任务检查创建数据库连接失败。更详细的错误信息可通过错误 message 获取。错误 message 中包含操作数据库所返回的错误码和错误信息。 检查 DM-master 所在的机器是否有权限访问上游   code=32001 dump 处理单元异常 如果报错 msg 包含 mydumper: argument list too long.</description>
    </item>
    
    <item>
      <title>Data Migration 常见问题</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/faq/</guid>
      <description>Data Migration 常见问题 DM 是否支持同步阿里 RDS 以及其他云数据库的数据？ DM 仅支持解析标准版本的 MySQL/MariaDB 的 binlog，对于阿里云 RDS 以及其他云数据库没有进行过测试，如果确认其 binlog 为标准格式，则可以支持。
task 配置中的黑白名单的正则表达式是否支持非获取匹配（?!）？ 目前不支持，DM 仅支持 golang 标准库的正则，可以通过 re2-syntax 了解 golang 支持的正则表达式。
如果在上游执行的一个 statement 包含多个 DDL 操作，DM 是否支持同步？ DM 会尝试将包含多个 DDL 变更操作的单条语句拆分成只包含一个 DDL 操作的多条语句，但是可能没有覆盖所有的场景。建议在上游执行的一条 statement 中只包含一个 DDL 操作，或者在测试环境中验证一下，如果不支持，可以给 DM 提 issue。
如何处理不兼容的 DDL 语句？ 你需要使用 dmctl 手动处理 TiDB 不兼容的 DDL 语句（包括手动跳过该 DDL 语句或使用用户指定的 DDL 语句替换原 DDL 语句，详见跳过 (skip) 或替代执行 (replace) 异常的 SQL 语句）。
 注意：
TiDB 目前并不兼容 MySQL 支持的所有 DDL 语句。</description>
    </item>
    
    <item>
      <title>Data Migration 常见问题</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/faq/</guid>
      <description>Data Migration 常见问题 DM 是否支持同步阿里 RDS 以及其他云数据库的数据？ DM 仅支持解析标准版本的 MySQL/MariaDB 的 binlog，对于阿里云 RDS 以及其他云数据库没有进行过测试，如果确认其 binlog 为标准格式，则可以支持。
task 配置中的黑白名单的正则表达式是否支持非获取匹配（?!）？ 目前不支持，DM 仅支持 golang 标准库的正则，可以通过 re2-syntax 了解 golang 支持的正则表达式。
如果在上游执行的一个 statement 包含多个 DDL 操作，DM 是否支持同步？ DM 会尝试将包含多个 DDL 变更操作的单条语句拆分成只包含一个 DDL 操作的多条语句，但是可能没有覆盖所有的场景。建议在上游执行的一条 statement 中只包含一个 DDL 操作，或者在测试环境中验证一下，如果不支持，可以给 DM 提 issue。
如何处理不兼容的 DDL 语句？ 你需要使用 dmctl 手动处理 TiDB 不兼容的 DDL 语句（包括手动跳过该 DDL 语句或使用用户指定的 DDL 语句替换原 DDL 语句，详见跳过 (skip) 或替代执行 (replace) 异常的 SQL 语句）。
 注意：
TiDB 目前并不兼容 MySQL 支持的所有 DDL 语句。</description>
    </item>
    
    <item>
      <title>Data Migration 常见问题</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/faq/</guid>
      <description>Data Migration 常见问题 DM 是否支持同步阿里 RDS 以及其他云数据库的数据？ DM 仅支持解析标准版本的 MySQL/MariaDB 的 binlog，对于阿里云 RDS 以及其他云数据库没有进行过测试，如果确认其 binlog 为标准格式，则可以支持。
task 配置中的黑白名单的正则表达式是否支持非获取匹配（?!）？ 目前不支持，DM 仅支持 golang 标准库的正则，可以通过 re2-syntax 了解 golang 支持的正则表达式。
如果在上游执行的一个 statement 包含多个 DDL 操作，DM 是否支持同步？ DM 会尝试将包含多个 DDL 变更操作的单条语句拆分成只包含一个 DDL 操作的多条语句，但是可能没有覆盖所有的场景。建议在上游执行的一条 statement 中只包含一个 DDL 操作，或者在测试环境中验证一下，如果不支持，可以给 DM 提 issue。
如何处理不兼容的 DDL 语句？ 你需要使用 dmctl 手动处理 TiDB 不兼容的 DDL 语句（包括手动跳过该 DDL 语句或使用用户指定的 DDL 语句替换原 DDL 语句，详见跳过 (skip) 或替代执行 (replace) 异常的 SQL 语句）。
 注意：
TiDB 目前并不兼容 MySQL 支持的所有 DDL 语句。</description>
    </item>
    
    <item>
      <title>Data Migration 常见问题</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/faq/</guid>
      <description>Data Migration 常见问题 DM 是否支持同步阿里 RDS 以及其他云数据库的数据？ DM 仅支持解析标准版本的 MySQL/MariaDB 的 binlog，对于阿里云 RDS 以及其他云数据库没有进行过测试，如果确认其 binlog 为标准格式，则可以支持。
task 配置中的黑白名单的正则表达式是否支持非获取匹配（?!）？ 目前不支持，DM 仅支持 golang 标准库的正则，可以通过 re2-syntax 了解 golang 支持的正则表达式。
如果在上游执行的一个 statement 包含多个 DDL 操作，DM 是否支持同步？ DM 会尝试将包含多个 DDL 变更操作的单条语句拆分成只包含一个 DDL 操作的多条语句，但是可能没有覆盖所有的场景。建议在上游执行的一条 statement 中只包含一个 DDL 操作，或者在测试环境中验证一下，如果不支持，可以给 DM 提 issue。
如何处理不兼容的 DDL 语句？ 你需要使用 dmctl 手动处理 TiDB 不兼容的 DDL 语句（包括手动跳过该 DDL 语句或使用用户指定的 DDL 语句替换原 DDL 语句，详见跳过 (skip) 或替代执行 (replace) 异常的 SQL 语句）。
 注意：
TiDB 目前并不兼容 MySQL 支持的所有 DDL 语句。</description>
    </item>
    
    <item>
      <title>Data Migration 故障诊断</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/troubleshoot/dm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/troubleshoot/dm/</guid>
      <description>Data Migration 故障诊断 本文总结了在 DM 工具使用过程中遇到问题的诊断流程，并指引用户通过错误信息查找相应的解决方案。
如果你在运行 DM 工具时出现了错误，请尝试以下解决方案：
  执行 query-status 命令查看任务运行状态以及相关错误输出。
  查看与该错误相关的日志文件。日志文件位于 DM-master、DM-worker 部署节点上，通过 Data Migration 错误含义 获取错误的关键信息，然后查看 Data Migration 常见错误及修复以寻找相应的解决方案。
  如果该错误还没有相应的解决方案，并且你无法通过查询日志或监控指标自行解决此问题，你可以联系相关销售人员进行支持。
  一般情况下，错误处理完成后，只需使用 dmctl 重启任务即可。
 resume-task ${task name}   但在某些情况下，你还需要重置数据同步任务。有关何时需要重置以及如何重置，详见重置数据同步任务。</description>
    </item>
    
    <item>
      <title>Data Migration 故障诊断</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/troubleshoot/dm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/troubleshoot/dm/</guid>
      <description>Data Migration 故障诊断 本文总结了在 DM 工具使用过程中遇到问题的诊断流程，并指引用户通过错误信息查找相应的解决方案。
如果你在运行 DM 工具时出现了错误，请尝试以下解决方案：
  执行 query-status 命令查看任务运行状态以及相关错误输出。
  查看与该错误相关的日志文件。日志文件位于 DM-master、DM-worker 部署节点上，通过 Data Migration 错误含义 获取错误的关键信息，然后查看 Data Migration 常见错误及修复以寻找相应的解决方案。
  如果该错误还没有相应的解决方案，并且你无法通过查询日志或监控指标自行解决此问题，你可以联系相关销售人员进行支持。
  一般情况下，错误处理完成后，只需使用 dmctl 重启任务即可。
 resume-task ${task name}   但在某些情况下，你还需要重置数据同步任务。有关何时需要重置以及如何重置，详见重置数据同步任务。</description>
    </item>
    
    <item>
      <title>Data Migration 故障诊断</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/troubleshoot/dm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/troubleshoot/dm/</guid>
      <description>Data Migration 故障诊断 本文总结了在 DM 工具使用过程中遇到问题的诊断流程，并指引用户通过错误信息查找相应的解决方案。
如果你在运行 DM 工具时出现了错误，请尝试以下解决方案：
  执行 query-status 命令查看任务运行状态以及相关错误输出。
  查看与该错误相关的日志文件。日志文件位于 DM-master、DM-worker 部署节点上，通过 Data Migration 错误含义 获取错误的关键信息，然后查看 Data Migration 常见错误及修复以寻找相应的解决方案。
  如果该错误还没有相应的解决方案，并且你无法通过查询日志或监控指标自行解决此问题，你可以联系相关销售人员进行支持。
  一般情况下，错误处理完成后，只需使用 dmctl 重启任务即可。
 resume-task ${task name}   但在某些情况下，你还需要重置数据同步任务。有关何时需要重置以及如何重置，详见重置数据同步任务。</description>
    </item>
    
    <item>
      <title>Data Migration 故障诊断</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/troubleshoot/dm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/troubleshoot/dm/</guid>
      <description>Data Migration 故障诊断 本文总结了在 DM 工具使用过程中遇到问题的诊断流程，并指引用户通过错误信息查找相应的解决方案。
如果你在运行 DM 工具时出现了错误，请尝试以下解决方案：
  执行 query-status 命令查看任务运行状态以及相关错误输出。
  查看与该错误相关的日志文件。日志文件位于 DM-master、DM-worker 部署节点上，通过 Data Migration 错误含义 获取错误的关键信息，然后查看 Data Migration 常见错误及修复以寻找相应的解决方案。
  如果该错误还没有相应的解决方案，并且你无法通过查询日志或监控指标自行解决此问题，你可以联系相关销售人员进行支持。
  一般情况下，错误处理完成后，只需使用 dmctl 重启任务即可。
 resume-task ${task name}   但在某些情况下，你还需要重置数据同步任务。有关何时需要重置以及如何重置，详见重置数据同步任务。</description>
    </item>
    
    <item>
      <title>Data Migration 简介</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/overview/</guid>
      <description>Data Migration 简介 DM (Data Migration) 是一体化的数据同步任务管理平台，支持从 MySQL 或 MariaDB 到 TiDB 的全量数据迁移和增量数据同步。使用 DM 工具有利于简化错误处理流程，降低运维成本。
DM 架构 DM 主要包括三个组件：DM-master，DM-worker 和 dmctl。
DM-master DM-master 负责管理和调度数据同步任务的各项操作。
 保存 DM 集群的拓扑信息 监控 DM-worker 进程的运行状态 监控数据同步任务的运行状态 提供数据同步任务管理的统一入口 协调分库分表场景下各个实例分表的 DDL 同步  DM-worker DM-worker 负责执行具体的数据同步任务。
 将 binlog 数据持久化保存在本地 保存数据同步子任务的配置信息 编排数据同步子任务的运行 监控数据同步子任务的运行状态  DM-worker 启动后，会自动同步上游 binlog 至本地配置目录（如果使用 DM-Ansible 部署 DM 集群，默认的同步目录为 &amp;lt;deploy_dir&amp;gt;/relay_log）。关于 DM-worker，详见 DM-worker 简介。关于 relay log，详见 DM Relay Log。
dmctl dmctl 是用来控制 DM 集群的命令行工具。</description>
    </item>
    
    <item>
      <title>Data Migration 简介</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/overview/</guid>
      <description>Data Migration 简介 DM (Data Migration) 是一体化的数据同步任务管理平台，支持从 MySQL 或 MariaDB 到 TiDB 的全量数据迁移和增量数据同步。使用 DM 工具有利于简化错误处理流程，降低运维成本。
DM 架构 DM 主要包括三个组件：DM-master，DM-worker 和 dmctl。
DM-master DM-master 负责管理和调度数据同步任务的各项操作。
 保存 DM 集群的拓扑信息 监控 DM-worker 进程的运行状态 监控数据同步任务的运行状态 提供数据同步任务管理的统一入口 协调分库分表场景下各个实例分表的 DDL 同步  DM-worker DM-worker 负责执行具体的数据同步任务。
 将 binlog 数据持久化保存在本地 保存数据同步子任务的配置信息 编排数据同步子任务的运行 监控数据同步子任务的运行状态  DM-worker 启动后，会自动同步上游 binlog 至本地配置目录（如果使用 DM-Ansible 部署 DM 集群，默认的同步目录为 &amp;lt;deploy_dir&amp;gt;/relay_log）。关于 DM-worker，详见 DM-worker 简介。关于 relay log，详见 DM Relay Log。
dmctl dmctl 是用来控制 DM 集群的命令行工具。</description>
    </item>
    
    <item>
      <title>Data Migration 简介</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/overview/</guid>
      <description>Data Migration 简介 DM (Data Migration) 是一体化的数据同步任务管理平台，支持从 MySQL 或 MariaDB 到 TiDB 的全量数据迁移和增量数据同步。使用 DM 工具有利于简化错误处理流程，降低运维成本。
DM 架构 DM 主要包括三个组件：DM-master，DM-worker 和 dmctl。
DM-master DM-master 负责管理和调度数据同步任务的各项操作。
 保存 DM 集群的拓扑信息 监控 DM-worker 进程的运行状态 监控数据同步任务的运行状态 提供数据同步任务管理的统一入口 协调分库分表场景下各个实例分表的 DDL 同步  DM-worker DM-worker 负责执行具体的数据同步任务。
 将 binlog 数据持久化保存在本地 保存数据同步子任务的配置信息 编排数据同步子任务的运行 监控数据同步子任务的运行状态  DM-worker 启动后，会自动同步上游 binlog 至本地配置目录（如果使用 DM-Ansible 部署 DM 集群，默认的同步目录为 &amp;lt;deploy_dir&amp;gt;/relay_log）。关于 DM-worker，详见 DM-worker 简介。关于 relay log，详见 DM Relay Log。
dmctl dmctl 是用来控制 DM 集群的命令行工具。</description>
    </item>
    
    <item>
      <title>Data Migration 简介</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/overview/</guid>
      <description>Data Migration 简介 DM (Data Migration) 是一体化的数据同步任务管理平台，支持从 MySQL 或 MariaDB 到 TiDB 的全量数据迁移和增量数据同步。使用 DM 工具有利于简化错误处理流程，降低运维成本。
DM 架构 DM 主要包括三个组件：DM-master，DM-worker 和 dmctl。
DM-master DM-master 负责管理和调度数据同步任务的各项操作。
 保存 DM 集群的拓扑信息 监控 DM-worker 进程的运行状态 监控数据同步任务的运行状态 提供数据同步任务管理的统一入口 协调分库分表场景下各个实例分表的 DDL 同步  DM-worker DM-worker 负责执行具体的数据同步任务。
 将 binlog 数据持久化保存在本地 保存数据同步子任务的配置信息 编排数据同步子任务的运行 监控数据同步子任务的运行状态  DM-worker 启动后，会自动同步上游 binlog 至本地配置目录（如果使用 DM-Ansible 部署 DM 集群，默认的同步目录为 &amp;lt;deploy_dir&amp;gt;/relay_log）。关于 DM-worker，详见 DM-worker 简介。关于 relay log，详见 DM Relay Log。
dmctl dmctl 是用来控制 DM 集群的命令行工具。</description>
    </item>
    
    <item>
      <title>Data Migration 简单使用场景</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/usage-scenarios/simple-synchronization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/usage-scenarios/simple-synchronization/</guid>
      <description>Data Migration 简单使用场景 本文介绍了 DM 工具的一个简单使用场景（非分库分表合并场景）：将三个上游 MySQL 实例的数据同步到一个下游 TiDB 集群中。
上游实例 假设上游结构为：
  实例 1
   Schema Tables     user information, log   store store_bj, store_tj   log messages      实例 2
   Schema Tables     user information, log   store store_sh, store_sz   log messages      实例 3</description>
    </item>
    
    <item>
      <title>Data Migration 简单使用场景</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/usage-scenarios/simple-synchronization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/usage-scenarios/simple-synchronization/</guid>
      <description>Data Migration 简单使用场景 本文介绍了 DM 工具的一个简单使用场景（非分库分表合并场景）：将三个上游 MySQL 实例的数据同步到一个下游 TiDB 集群中。
上游实例 假设上游结构为：
  实例 1
   Schema Tables     user information, log   store store_bj, store_tj   log messages      实例 2
   Schema Tables     user information, log   store store_sh, store_sz   log messages      实例 3</description>
    </item>
    
    <item>
      <title>Data Migration 简单使用场景</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/usage-scenarios/simple-synchronization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/usage-scenarios/simple-synchronization/</guid>
      <description>Data Migration 简单使用场景 本文介绍了 DM 工具的一个简单使用场景（非分库分表合并场景）：将三个上游 MySQL 实例的数据同步到一个下游 TiDB 集群中。
上游实例 假设上游结构为：
  实例 1
   Schema Tables     user information, log   store store_bj, store_tj   log messages      实例 2
   Schema Tables     user information, log   store store_sh, store_sz   log messages      实例 3</description>
    </item>
    
    <item>
      <title>Data Migration 简单使用场景</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/usage-scenarios/simple-synchronization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/usage-scenarios/simple-synchronization/</guid>
      <description>Data Migration 简单使用场景 本文介绍了 DM 工具的一个简单使用场景（非分库分表合并场景）：将三个上游 MySQL 实例的数据同步到一个下游 TiDB 集群中。
上游实例 假设上游结构为：
  实例 1
   Schema Tables     user information, log   store store_bj, store_tj   log messages      实例 2
   Schema Tables     user information, log   store store_sh, store_sz   log messages      实例 3</description>
    </item>
    
    <item>
      <title>Data Migration 错误说明</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/troubleshoot/error-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/troubleshoot/error-system/</guid>
      <description>Data Migration 错误说明 本文介绍了 Data Migration (DM) 的错误系统，以及各种错误信息的详细含义。
DM 错误系统 DM 1.0.0-GA 版本中引入了新的错误系统。该系统：
 增加了错误码机制。 增加了 class、scope、level 等错误信息。 优化了错误描述内容、错误调用链信息和调用堆栈信息。  错误系统的详细设计和实现，可参阅 RFC 文档: Proposal: Improve Error System。
错误信息示例 以下是 DM 实际输出的一条错误信息。本文根据这条信息，对各个字段作详细说明。
[code=38008:class=dm-master:scope=internal:level=high] grpc request error: rpc error: code = Unavailable desc = all SubConns are in TransientFailure, latest connection error: connection error: desc = &amp;#34;transport: Error while dialing dial tcp 172.17.0.2:8262: connect: connection refused&amp;#34; github.com/pingcap/dm/pkg/terror.(*Error).Delegate /root/code/gopath/src/github.com/pingcap/dm/pkg/terror/terror.go:267 github.com/pingcap/dm/dm/master/workerrpc.callRPC /root/code/gopath/src/github.com/pingcap/dm/dm/master/workerrpc/rawgrpc.go:124 github.com/pingcap/dm/dm/master/workerrpc.(*GRPCClient).SendRequest /root/code/gopath/src/github.com/pingcap/dm/dm/master/workerrpc/rawgrpc.go:64 github.</description>
    </item>
    
    <item>
      <title>Data Migration 错误说明</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/troubleshoot/error-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/troubleshoot/error-system/</guid>
      <description>Data Migration 错误说明 本文介绍了 Data Migration (DM) 的错误系统，以及各种错误信息的详细含义。
DM 错误系统 DM 1.0.0-GA 版本中引入了新的错误系统。该系统：
 增加了错误码机制。 增加了 class、scope、level 等错误信息。 优化了错误描述内容、错误调用链信息和调用堆栈信息。  错误系统的详细设计和实现，可参阅 RFC 文档: Proposal: Improve Error System。
错误信息示例 以下是 DM 实际输出的一条错误信息。本文根据这条信息，对各个字段作详细说明。
[code=38008:class=dm-master:scope=internal:level=high] grpc request error: rpc error: code = Unavailable desc = all SubConns are in TransientFailure, latest connection error: connection error: desc = &amp;#34;transport: Error while dialing dial tcp 172.17.0.2:8262: connect: connection refused&amp;#34; github.com/pingcap/dm/pkg/terror.(*Error).Delegate /root/code/gopath/src/github.com/pingcap/dm/pkg/terror/terror.go:267 github.com/pingcap/dm/dm/master/workerrpc.callRPC /root/code/gopath/src/github.com/pingcap/dm/dm/master/workerrpc/rawgrpc.go:124 github.com/pingcap/dm/dm/master/workerrpc.(*GRPCClient).SendRequest /root/code/gopath/src/github.com/pingcap/dm/dm/master/workerrpc/rawgrpc.go:64 github.</description>
    </item>
    
    <item>
      <title>Data Migration 错误说明</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/troubleshoot/error-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/troubleshoot/error-system/</guid>
      <description>Data Migration 错误说明 本文介绍了 Data Migration (DM) 的错误系统，以及各种错误信息的详细含义。
DM 错误系统 DM 1.0.0-GA 版本中引入了新的错误系统。该系统：
 增加了错误码机制。 增加了 class、scope、level 等错误信息。 优化了错误描述内容、错误调用链信息和调用堆栈信息。  错误系统的详细设计和实现，可参阅 RFC 文档: Proposal: Improve Error System。
错误信息示例 以下是 DM 实际输出的一条错误信息。本文根据这条信息，对各个字段作详细说明。
[code=38008:class=dm-master:scope=internal:level=high] grpc request error: rpc error: code = Unavailable desc = all SubConns are in TransientFailure, latest connection error: connection error: desc = &amp;#34;transport: Error while dialing dial tcp 172.17.0.2:8262: connect: connection refused&amp;#34; github.com/pingcap/dm/pkg/terror.(*Error).Delegate /root/code/gopath/src/github.com/pingcap/dm/pkg/terror/terror.go:267 github.com/pingcap/dm/dm/master/workerrpc.callRPC /root/code/gopath/src/github.com/pingcap/dm/dm/master/workerrpc/rawgrpc.go:124 github.com/pingcap/dm/dm/master/workerrpc.(*GRPCClient).SendRequest /root/code/gopath/src/github.com/pingcap/dm/dm/master/workerrpc/rawgrpc.go:64 github.</description>
    </item>
    
    <item>
      <title>Data Migration 错误说明</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/troubleshoot/error-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/troubleshoot/error-system/</guid>
      <description>Data Migration 错误说明 本文介绍了 Data Migration (DM) 的错误系统，以及各种错误信息的详细含义。
DM 错误系统 DM 1.0.0-GA 版本中引入了新的错误系统。该系统：
 增加了错误码机制。 增加了 class、scope、level 等错误信息。 优化了错误描述内容、错误调用链信息和调用堆栈信息。  错误系统的详细设计和实现，可参阅 RFC 文档: Proposal: Improve Error System。
错误信息示例 以下是 DM 实际输出的一条错误信息。本文根据这条信息，对各个字段作详细说明。
[code=38008:class=dm-master:scope=internal:level=high] grpc request error: rpc error: code = Unavailable desc = all SubConns are in TransientFailure, latest connection error: connection error: desc = &amp;#34;transport: Error while dialing dial tcp 172.17.0.2:8262: connect: connection refused&amp;#34; github.com/pingcap/dm/pkg/terror.(*Error).Delegate /root/code/gopath/src/github.com/pingcap/dm/pkg/terror/terror.go:267 github.com/pingcap/dm/dm/master/workerrpc.callRPC /root/code/gopath/src/github.com/pingcap/dm/dm/master/workerrpc/rawgrpc.go:124 github.com/pingcap/dm/dm/master/workerrpc.(*GRPCClient).SendRequest /root/code/gopath/src/github.com/pingcap/dm/dm/master/workerrpc/rawgrpc.go:64 github.</description>
    </item>
    
    <item>
      <title>Data Replication Features</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/features/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/features/overview/</guid>
      <description>Learn about the data replication features provided by the Data Migration tool.</description>
    </item>
    
    <item>
      <title>Data Replication Features</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/features/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/features/overview/</guid>
      <description>Learn about the data replication features provided by the Data Migration tool.</description>
    </item>
    
    <item>
      <title>Data Replication Features</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/features/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/features/overview/</guid>
      <description>Learn about the data replication features provided by the Data Migration tool.</description>
    </item>
    
    <item>
      <title>Data Replication Features</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/features/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/features/overview/</guid>
      <description>Learn about the data replication features provided by the Data Migration tool.</description>
    </item>
    
    <item>
      <title>Data Types</title>
      <link>https://pingcap.com/docs/dev/reference/sql/data-types/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/data-types/overview/</guid>
      <description>Learn about the data types supported in TiDB.</description>
    </item>
    
    <item>
      <title>Data Types</title>
      <link>https://pingcap.com/docs/stable/reference/sql/data-types/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/data-types/overview/</guid>
      <description>Learn about the data types supported in TiDB.</description>
    </item>
    
    <item>
      <title>Data Types</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/data-types/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/data-types/overview/</guid>
      <description>Learn about the data types supported in TiDB.</description>
    </item>
    
    <item>
      <title>Data Types</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/data-types/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/data-types/overview/</guid>
      <description>Learn about the data types supported in TiDB.</description>
    </item>
    
    <item>
      <title>Date and Time Functions</title>
      <link>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/date-and-time-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/date-and-time-functions/</guid>
      <description>Learn how to use the data and time functions.</description>
    </item>
    
    <item>
      <title>Date and Time Functions</title>
      <link>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/date-and-time-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/date-and-time-functions/</guid>
      <description>Learn how to use the data and time functions.</description>
    </item>
    
    <item>
      <title>Date and Time Functions</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/date-and-time-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/date-and-time-functions/</guid>
      <description>Learn how to use the data and time functions.</description>
    </item>
    
    <item>
      <title>Date and Time Functions</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/date-and-time-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/date-and-time-functions/</guid>
      <description>Learn how to use the data and time functions.</description>
    </item>
    
    <item>
      <title>Date and Time Types</title>
      <link>https://pingcap.com/docs/dev/reference/sql/data-types/date-and-time/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/data-types/date-and-time/</guid>
      <description>Learn about the supported date and time types.</description>
    </item>
    
    <item>
      <title>Date and Time Types</title>
      <link>https://pingcap.com/docs/stable/reference/sql/data-types/date-and-time/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/data-types/date-and-time/</guid>
      <description>Learn about the supported date and time types.</description>
    </item>
    
    <item>
      <title>Date and Time Types</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/data-types/date-and-time/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/data-types/date-and-time/</guid>
      <description>Learn about the supported date and time types.</description>
    </item>
    
    <item>
      <title>Date and Time Types</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/data-types/date-and-time/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/data-types/date-and-time/</guid>
      <description>Learn about the supported date and time types.</description>
    </item>
    
    <item>
      <title>DEALLOCATE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/deallocate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/deallocate/</guid>
      <description>TiDB 数据库中 DEALLOCATE 的使用概况。</description>
    </item>
    
    <item>
      <title>DEALLOCATE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/deallocate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/deallocate/</guid>
      <description>TiDB 数据库中 DEALLOCATE 的使用概况。</description>
    </item>
    
    <item>
      <title>DEALLOCATE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/deallocate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/deallocate/</guid>
      <description>TiDB 数据库中 DEALLOCATE 的使用概况。</description>
    </item>
    
    <item>
      <title>DEALLOCATE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/deallocate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/deallocate/</guid>
      <description>TiDB 数据库中 DEALLOCATE 的使用概况。</description>
    </item>
    
    <item>
      <title>DEALLOCATE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/deallocate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/deallocate/</guid>
      <description>An overview of the usage of DEALLOCATE for the TiDB database.</description>
    </item>
    
    <item>
      <title>DEALLOCATE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/deallocate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/deallocate/</guid>
      <description>An overview of the usage of DEALLOCATE for the TiDB database.</description>
    </item>
    
    <item>
      <title>DEALLOCATE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/deallocate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/deallocate/</guid>
      <description>An overview of the usage of DEALLOCATE for the TiDB database.</description>
    </item>
    
    <item>
      <title>DEALLOCATE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/deallocate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/deallocate/</guid>
      <description>An overview of the usage of DEALLOCATE for the TiDB database.</description>
    </item>
    
    <item>
      <title>DELETE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/delete/</guid>
      <description>TiDB 数据库中 DELETE 的使用概况。</description>
    </item>
    
    <item>
      <title>DELETE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/delete/</guid>
      <description>TiDB 数据库中 DELETE 的使用概况。</description>
    </item>
    
    <item>
      <title>DELETE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/delete/</guid>
      <description>TiDB 数据库中 DELETE 的使用概况。</description>
    </item>
    
    <item>
      <title>DELETE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/delete/</guid>
      <description>TiDB 数据库中 DELETE 的使用概况。</description>
    </item>
    
    <item>
      <title>DELETE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/delete/</guid>
      <description>An overview of the usage of DELETE for the TiDB database.</description>
    </item>
    
    <item>
      <title>DELETE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/delete/</guid>
      <description>An overview of the usage of DELETE for the TiDB database.</description>
    </item>
    
    <item>
      <title>DELETE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/delete/</guid>
      <description>An overview of the usage of DELETE for the TiDB database.</description>
    </item>
    
    <item>
      <title>DELETE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/delete/</guid>
      <description>An overview of the usage of DELETE for the TiDB database.</description>
    </item>
    
    <item>
      <title>Demand Generation Specialist</title>
      <link>https://pingcap.com/about-cn/recruit/i18n/demand-generation-specialist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/i18n/demand-generation-specialist/</guid>
      <description>Demand Generation Specialist What will you be doing?
  Develop, build and manage marketing demand generation that fuels both short-term and sustainable long-term growth via closed-loop lead generation process;
  Achieve targets (volume and quality) and daily execution;
  Leading execution on content social media, design, email, and video to produce effective campaigns;
  Overseeing lead lifecycle from start to finish, with an emphasis on generating qualified leads that turn into prospects;</description>
    </item>
    
    <item>
      <title>Deploy a TiDB Cluster from Homebrew</title>
      <link>https://pingcap.com/docs/stable/how-to/get-started/deploy-tidb-from-homebrew/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/get-started/deploy-tidb-from-homebrew/</guid>
      <description>Install TiDB using the Homebrew package manager.</description>
    </item>
    
    <item>
      <title>Deploy a TiDB Cluster from Homebrew</title>
      <link>https://pingcap.com/docs/v3.1/how-to/get-started/deploy-tidb-from-homebrew/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/get-started/deploy-tidb-from-homebrew/</guid>
      <description>Install TiDB using the Homebrew package manager.</description>
    </item>
    
    <item>
      <title>Deploy Data Migration Cluster Using DM Binary</title>
      <link>https://pingcap.com/docs/dev/how-to/deploy/data-migration-with-binary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/deploy/data-migration-with-binary/</guid>
      <description>Learn how to deploy the Data Migration cluster using DM binary.</description>
    </item>
    
    <item>
      <title>Deploy Data Migration Cluster Using DM Binary</title>
      <link>https://pingcap.com/docs/stable/how-to/deploy/data-migration-with-binary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/deploy/data-migration-with-binary/</guid>
      <description>Learn how to deploy the Data Migration cluster using DM binary.</description>
    </item>
    
    <item>
      <title>Deploy Data Migration Cluster Using DM Binary</title>
      <link>https://pingcap.com/docs/v2.1/how-to/deploy/data-migration-with-binary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/deploy/data-migration-with-binary/</guid>
      <description>Learn how to deploy the Data Migration cluster using DM binary.</description>
    </item>
    
    <item>
      <title>Deploy Data Migration Cluster Using DM Binary</title>
      <link>https://pingcap.com/docs/v3.1/how-to/deploy/data-migration-with-binary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/deploy/data-migration-with-binary/</guid>
      <description>Learn how to deploy the Data Migration cluster using DM binary.</description>
    </item>
    
    <item>
      <title>Deploy Data Migration Using DM-Ansible</title>
      <link>https://pingcap.com/docs/dev/how-to/deploy/data-migration-with-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/deploy/data-migration-with-ansible/</guid>
      <description>Use DM-Ansible to deploy the Data Migration cluster.</description>
    </item>
    
    <item>
      <title>Deploy Data Migration Using DM-Ansible</title>
      <link>https://pingcap.com/docs/stable/how-to/deploy/data-migration-with-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/deploy/data-migration-with-ansible/</guid>
      <description>Use DM-Ansible to deploy the Data Migration cluster.</description>
    </item>
    
    <item>
      <title>Deploy Data Migration Using DM-Ansible</title>
      <link>https://pingcap.com/docs/v2.1/how-to/deploy/data-migration-with-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/deploy/data-migration-with-ansible/</guid>
      <description>Use DM-Ansible to deploy the Data Migration cluster.</description>
    </item>
    
    <item>
      <title>Deploy Data Migration Using DM-Ansible</title>
      <link>https://pingcap.com/docs/v3.1/how-to/deploy/data-migration-with-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/deploy/data-migration-with-ansible/</guid>
      <description>Use DM-Ansible to deploy the Data Migration cluster.</description>
    </item>
    
    <item>
      <title>Deploy KOST Stack on GKE</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/tidb-overview/lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/tidb-overview/lab/</guid>
      <description>Tutorial for deploying TiDB on Google Cloud using Kubernetes.</description>
    </item>
    
    <item>
      <title>Deploy TiDB in Kubernetes Using kind</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-kind/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-kind/</guid>
      <description>Learn how to deploy a TiDB cluster in Kubernetes using kind.</description>
    </item>
    
    <item>
      <title>Deploy TiDB in Kubernetes Using kind</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-kind/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-kind/</guid>
      <description>Learn how to deploy a TiDB cluster in Kubernetes using kind.</description>
    </item>
    
    <item>
      <title>Deploy TiDB in Kubernetes Using kind</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-kind/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-kind/</guid>
      <description>Learn how to deploy a TiDB cluster in Kubernetes using kind.</description>
    </item>
    
    <item>
      <title>Deploy TiDB in the Minikube Cluster</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-minikube/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-minikube/</guid>
      <description>Learn how to deploy TiDB in the minikube cluster.</description>
    </item>
    
    <item>
      <title>Deploy TiDB in the Minikube Cluster</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-minikube/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-minikube/</guid>
      <description>Learn how to deploy TiDB in the minikube cluster.</description>
    </item>
    
    <item>
      <title>Deploy TiDB in the Minikube Cluster</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-minikube/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-minikube/</guid>
      <description>Learn how to deploy TiDB in the minikube cluster.</description>
    </item>
    
    <item>
      <title>Deploy TiDB Offline Using Ansible</title>
      <link>https://pingcap.com/docs/dev/how-to/deploy/orchestrated/offline-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/deploy/orchestrated/offline-ansible/</guid>
      <description>Use Ansible to deploy a TiDB cluster offline.</description>
    </item>
    
    <item>
      <title>Deploy TiDB Offline Using Ansible</title>
      <link>https://pingcap.com/docs/stable/how-to/deploy/orchestrated/offline-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/deploy/orchestrated/offline-ansible/</guid>
      <description>Use Ansible to deploy a TiDB cluster offline.</description>
    </item>
    
    <item>
      <title>Deploy TiDB Offline Using Ansible</title>
      <link>https://pingcap.com/docs/v2.1/how-to/deploy/orchestrated/offline-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/deploy/orchestrated/offline-ansible/</guid>
      <description>Use Ansible to deploy a TiDB cluster offline.</description>
    </item>
    
    <item>
      <title>Deploy TiDB Offline Using Ansible</title>
      <link>https://pingcap.com/docs/v3.1/how-to/deploy/orchestrated/offline-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/deploy/orchestrated/offline-ansible/</guid>
      <description>Use Ansible to deploy a TiDB cluster offline.</description>
    </item>
    
    <item>
      <title>Deploy TiDB on Alibaba Cloud Kubernetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/deploy/alibaba-cloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/deploy/alibaba-cloud/</guid>
      <description>Learn how to deploy a TiDB cluster on Alibaba Cloud Kubernetes.</description>
    </item>
    
    <item>
      <title>Deploy TiDB on Alibaba Cloud Kubernetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/deploy/alibaba-cloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/deploy/alibaba-cloud/</guid>
      <description>Learn how to deploy a TiDB cluster on Alibaba Cloud Kubernetes.</description>
    </item>
    
    <item>
      <title>Deploy TiDB on Alibaba Cloud Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/deploy/alibaba-cloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/deploy/alibaba-cloud/</guid>
      <description>Learn how to deploy a TiDB cluster on Alibaba Cloud Kubernetes.</description>
    </item>
    
    <item>
      <title>Deploy TiDB on AWS EKS</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/deploy/aws-eks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/deploy/aws-eks/</guid>
      <description>Learn how to deploy a TiDB cluster on AWS EKS.</description>
    </item>
    
    <item>
      <title>Deploy TiDB on AWS EKS</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/deploy/aws-eks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/deploy/aws-eks/</guid>
      <description>Learn how to deploy a TiDB cluster on AWS EKS.</description>
    </item>
    
    <item>
      <title>Deploy TiDB on AWS EKS</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/deploy/aws-eks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/deploy/aws-eks/</guid>
      <description>Learn how to deploy a TiDB cluster on AWS EKS.</description>
    </item>
    
    <item>
      <title>Deploy TiDB on GCP GKE</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/deploy/gcp-gke/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/deploy/gcp-gke/</guid>
      <description>Learn how to deploy a TiDB cluster on GCP GKE.</description>
    </item>
    
    <item>
      <title>Deploy TiDB on GCP GKE</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/deploy/gcp-gke/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/deploy/gcp-gke/</guid>
      <description>Learn how to deploy a TiDB cluster on GCP GKE.</description>
    </item>
    
    <item>
      <title>Deploy TiDB on GCP GKE</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/deploy/gcp-gke/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/deploy/gcp-gke/</guid>
      <description>Learn how to deploy a TiDB cluster on GCP GKE.</description>
    </item>
    
    <item>
      <title>Deploy TiDB on General Kubernetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/deploy/general-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/deploy/general-kubernetes/</guid>
      <description>Learn how to deploy a TiDB cluster on general Kubernetes.</description>
    </item>
    
    <item>
      <title>Deploy TiDB on General Kubernetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/deploy/general-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/deploy/general-kubernetes/</guid>
      <description>Learn how to deploy a TiDB cluster on general Kubernetes.</description>
    </item>
    
    <item>
      <title>Deploy TiDB on General Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/deploy/general-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/deploy/general-kubernetes/</guid>
      <description>Learn how to deploy a TiDB cluster on general Kubernetes.</description>
    </item>
    
    <item>
      <title>Deploy TiDB on Google Cloud</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-gke/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-gke/</guid>
      <description>Learn how to quickly deploy a TiDB cluster on Google Cloud using Kubernetes.</description>
    </item>
    
    <item>
      <title>Deploy TiDB on Google Cloud</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-gke/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-gke/</guid>
      <description>Learn how to quickly deploy a TiDB cluster on Google Cloud using Kubernetes.</description>
    </item>
    
    <item>
      <title>Deploy TiDB on Google Cloud</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-gke/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-gke/</guid>
      <description>Learn how to quickly deploy a TiDB cluster on Google Cloud using Kubernetes.</description>
    </item>
    
    <item>
      <title>Deploy TiDB Operator in Kubernetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/deploy/tidb-operator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/deploy/tidb-operator/</guid>
      <description>Learn how to deploy TiDB Operator in Kubernetes.</description>
    </item>
    
    <item>
      <title>Deploy TiDB Operator in Kubernetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/deploy/tidb-operator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/deploy/tidb-operator/</guid>
      <description>Learn how to deploy TiDB Operator in Kubernetes.</description>
    </item>
    
    <item>
      <title>Deploy TiDB Operator in Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/deploy/tidb-operator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/deploy/tidb-operator/</guid>
      <description>Learn how to deploy TiDB Operator in Kubernetes.</description>
    </item>
    
    <item>
      <title>Deploy TiDB Using Ansible</title>
      <link>https://pingcap.com/docs/dev/how-to/deploy/orchestrated/ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/deploy/orchestrated/ansible/</guid>
      <description>Use Ansible to deploy a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Deploy TiDB Using Ansible</title>
      <link>https://pingcap.com/docs/stable/how-to/deploy/orchestrated/ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/deploy/orchestrated/ansible/</guid>
      <description>Use Ansible to deploy a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Deploy TiDB Using Ansible</title>
      <link>https://pingcap.com/docs/v2.1/how-to/deploy/orchestrated/ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/deploy/orchestrated/ansible/</guid>
      <description>Use Ansible to deploy a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Deploy TiDB Using Ansible</title>
      <link>https://pingcap.com/docs/v3.1/how-to/deploy/orchestrated/ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/deploy/orchestrated/ansible/</guid>
      <description>Use Ansible to deploy a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Deploy TiDB Using Docker</title>
      <link>https://pingcap.com/docs/dev/how-to/deploy/orchestrated/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/deploy/orchestrated/docker/</guid>
      <description>Use Docker to manually deploy a multi-node TiDB cluster on multiple machines.</description>
    </item>
    
    <item>
      <title>Deploy TiDB Using Docker</title>
      <link>https://pingcap.com/docs/stable/how-to/deploy/orchestrated/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/deploy/orchestrated/docker/</guid>
      <description>Use Docker to manually deploy a multi-node TiDB cluster on multiple machines.</description>
    </item>
    
    <item>
      <title>Deploy TiDB Using Docker</title>
      <link>https://pingcap.com/docs/v2.1/how-to/deploy/orchestrated/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/deploy/orchestrated/docker/</guid>
      <description>Use Docker to manually deploy a multi-node TiDB cluster on multiple machines.</description>
    </item>
    
    <item>
      <title>Deploy TiDB Using Docker</title>
      <link>https://pingcap.com/docs/v3.1/how-to/deploy/orchestrated/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/deploy/orchestrated/docker/</guid>
      <description>Use Docker to manually deploy a multi-node TiDB cluster on multiple machines.</description>
    </item>
    
    <item>
      <title>DESC</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/desc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/desc/</guid>
      <description>TiDB 数据库中 DESC 的使用概况。</description>
    </item>
    
    <item>
      <title>DESC</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/desc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/desc/</guid>
      <description>TiDB 数据库中 DESC 的使用概况。</description>
    </item>
    
    <item>
      <title>DESC</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/desc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/desc/</guid>
      <description>TiDB 数据库中 DESC 的使用概况。</description>
    </item>
    
    <item>
      <title>DESC</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/desc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/desc/</guid>
      <description>TiDB 数据库中 DESC 的使用概况。</description>
    </item>
    
    <item>
      <title>DESC | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/desc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/desc/</guid>
      <description>An overview of the usage of DESC for the TiDB database.</description>
    </item>
    
    <item>
      <title>DESC | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/desc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/desc/</guid>
      <description>An overview of the usage of DESC for the TiDB database.</description>
    </item>
    
    <item>
      <title>DESC | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/desc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/desc/</guid>
      <description>An overview of the usage of DESC for the TiDB database.</description>
    </item>
    
    <item>
      <title>DESC | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/desc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/desc/</guid>
      <description>An overview of the usage of DESC for the TiDB database.</description>
    </item>
    
    <item>
      <title>DESCRIBE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/describe/</guid>
      <description>TiDB 数据库中 DESCRIBE 的使用概况。</description>
    </item>
    
    <item>
      <title>DESCRIBE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/describe/</guid>
      <description>TiDB 数据库中 DESCRIBE 的使用概况。</description>
    </item>
    
    <item>
      <title>DESCRIBE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/describe/</guid>
      <description>TiDB 数据库中 DESCRIBE 的使用概况。</description>
    </item>
    
    <item>
      <title>DESCRIBE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/describe/</guid>
      <description>TiDB 数据库中 DESCRIBE 的使用概况。</description>
    </item>
    
    <item>
      <title>DESCRIBE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/describe/</guid>
      <description>An overview of the usage of DESCRIBE for the TiDB database.</description>
    </item>
    
    <item>
      <title>DESCRIBE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/describe/</guid>
      <description>An overview of the usage of DESCRIBE for the TiDB database.</description>
    </item>
    
    <item>
      <title>DESCRIBE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/describe/</guid>
      <description>An overview of the usage of DESCRIBE for the TiDB database.</description>
    </item>
    
    <item>
      <title>DESCRIBE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/describe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/describe/</guid>
      <description>An overview of the usage of DESCRIBE for the TiDB database.</description>
    </item>
    
    <item>
      <title>Destroy TiDB Clusters in Kubernetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/maintain/destroy-tidb-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/maintain/destroy-tidb-cluster/</guid>
      <description>Learn how to delete TiDB Cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>Destroy TiDB Clusters in Kubernetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/maintain/destroy-tidb-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/maintain/destroy-tidb-cluster/</guid>
      <description>Learn how to delete TiDB Cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>Destroy TiDB Clusters in Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/maintain/destroy-tidb-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/maintain/destroy-tidb-cluster/</guid>
      <description>Learn how to delete TiDB Cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>DM 1.0-GA Benchmark Report</title>
      <link>https://pingcap.com/docs/dev/benchmark/dm-v1.0-ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/benchmark/dm-v1.0-ga/</guid>
      <description>Learn about the DM benchmark report.</description>
    </item>
    
    <item>
      <title>DM 1.0-GA Benchmark Report</title>
      <link>https://pingcap.com/docs/stable/benchmark/dm-v1.0-ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/benchmark/dm-v1.0-ga/</guid>
      <description>Learn about the DM benchmark report.</description>
    </item>
    
    <item>
      <title>DM 1.0-GA Benchmark Report</title>
      <link>https://pingcap.com/docs/v3.1/benchmark/dm-v1.0-ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/benchmark/dm-v1.0-ga/</guid>
      <description>Learn about the DM benchmark report.</description>
    </item>
    
    <item>
      <title>DM 1.0-GA 性能测试报告</title>
      <link>https://pingcap.com/docs-cn/dev/benchmark/dm-v1.0-ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/benchmark/dm-v1.0-ga/</guid>
      <description>DM 1.0-GA 性能测试报告 本报告记录了对 1.0-GA 版本的 DM 进行性能测试的目的、环境、场景和结果。
测试目的 该性能测试用于评估使用 DM 进行全量数据导入和增量数据同步的性能上限，并根据测试结果提供 DM 同步任务的参考配置。
测试环境 测试机器信息 系统信息：
   机器 IP 操作系统 内核版本 文件系统类型     172.16.4.39 CentOS Linux release 7.6.1810 3.10.0-957.1.3.el7.x86_64 ext4   172.16.4.40 CentOS Linux release 7.6.1810 3.10.0-957.1.3.el7.x86_64 ext4   172.16.4.41 CentOS Linux release 7.6.1810 3.10.0-957.1.3.el7.x86_64 ext4   172.16.4.42 CentOS Linux release 7.6.1810 3.10.0-957.1.3.el7.x86_64 ext4   172.16.4.43 CentOS Linux release 7.6.1810 3.</description>
    </item>
    
    <item>
      <title>DM 1.0-GA 性能测试报告</title>
      <link>https://pingcap.com/docs-cn/stable/benchmark/dm-v1.0-ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/benchmark/dm-v1.0-ga/</guid>
      <description>DM 1.0-GA 性能测试报告 本报告记录了对 1.0-GA 版本的 DM 进行性能测试的目的、环境、场景和结果。
测试目的 该性能测试用于评估使用 DM 进行全量数据导入和增量数据同步的性能上限，并根据测试结果提供 DM 同步任务的参考配置。
测试环境 测试机器信息 系统信息：
   机器 IP 操作系统 内核版本 文件系统类型     172.16.4.39 CentOS Linux release 7.6.1810 3.10.0-957.1.3.el7.x86_64 ext4   172.16.4.40 CentOS Linux release 7.6.1810 3.10.0-957.1.3.el7.x86_64 ext4   172.16.4.41 CentOS Linux release 7.6.1810 3.10.0-957.1.3.el7.x86_64 ext4   172.16.4.42 CentOS Linux release 7.6.1810 3.10.0-957.1.3.el7.x86_64 ext4   172.16.4.43 CentOS Linux release 7.6.1810 3.</description>
    </item>
    
    <item>
      <title>DM 1.0-GA 性能测试报告</title>
      <link>https://pingcap.com/docs-cn/v3.1/benchmark/dm-v1.0-ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/benchmark/dm-v1.0-ga/</guid>
      <description>DM 1.0-GA 性能测试报告 本报告记录了对 1.0-GA 版本的 DM 进行性能测试的目的、环境、场景和结果。
测试目的 该性能测试用于评估使用 DM 进行全量数据导入和增量数据同步的性能上限，并根据测试结果提供 DM 同步任务的参考配置。
测试环境 测试机器信息 系统信息：
   机器 IP 操作系统 内核版本 文件系统类型     172.16.4.39 CentOS Linux release 7.6.1810 3.10.0-957.1.3.el7.x86_64 ext4   172.16.4.40 CentOS Linux release 7.6.1810 3.10.0-957.1.3.el7.x86_64 ext4   172.16.4.41 CentOS Linux release 7.6.1810 3.10.0-957.1.3.el7.x86_64 ext4   172.16.4.42 CentOS Linux release 7.6.1810 3.10.0-957.1.3.el7.x86_64 ext4   172.16.4.43 CentOS Linux release 7.6.1810 3.</description>
    </item>
    
    <item>
      <title>DM 1.0.2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/releases/1.0.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/releases/1.0.2/</guid>
      <description>DM 1.0.2 Release Notes 发版日期：2019 年 10 月 30 日
DM 版本：1.0.2
DM-Ansible 版本：1.0.2
改进提升  支持自动为 DM-worker 生成部分配置项 支持自动为数据迁移任务生成部分配置项 简化 query-status 在无参数时的默认输出 DM 直接管理到下游数据库的连接  问题修复  修复在进程启动过程中以及执行 SQL 失败时可能 panic 的问题 修复 DDL 执行超时后可能造成 sharding DDL 协调异常的问题 修复由于前置检查超时或部分 DM-worker 不可访问而不能启动数据迁移任务的问题 修复 SQL 执行失败后可能错误重试的问题  详细变更及问题修复  支持自动为 DM-worker 生成随机的 server-id 配置项 #337 支持自动为 DM-worker 生成 flavor 配置项 #328 支持自动为 DM-worker 生成 relay-binlog-name 与 relay-binlog-gtid 配置项 #318 支持根据黑白名单生成 mydumper 需要导出的表名配置项 #326 为数据迁移任务增加并发度配置项 (mydumper-thread、loader-thread 与 syncer-thread) #314 简化 query-status 在无参数时的默认输出 #340 修复 DDL 执行超时后可能造成 sharding DDL 协调异常的问题 #338 修复 DM-worker 从本地 meta 数据恢复数据迁移任务时可能 panic 的问题 #311 修复提交事务失败时可能造成 DM-worker panic 的问题 #313 修复监听端口被占用时 DM-worker 或 DM-master 启动过程中可能 panic 的问题 #301 修复对 1105 错误码的部分重试问题 #321, #332 修复对 Duplicate entry 与 Data too long for column 错误的重试问题 #313 修复在上游存在大量需要迁移的表时可能造成启动任务前置检查超时中断的问题 #327 修复部分 DM-worker 不可访问时无法启动数据迁移任务的问题 #319 修复从损坏的 relay log 恢复时可能错误更新 GTID sets 信息的问题 #339 修复 sync 处理单元计算 TPS 错误的问题 #294 DM 直接管理到下游数据库的连接 #325 提升组件内错误信息的传递方式 #320  </description>
    </item>
    
    <item>
      <title>DM 1.0.2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/releases/1.0.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/releases/1.0.2/</guid>
      <description>DM 1.0.2 Release Notes 发版日期：2019 年 10 月 30 日
DM 版本：1.0.2
DM-Ansible 版本：1.0.2
改进提升  支持自动为 DM-worker 生成部分配置项 支持自动为数据迁移任务生成部分配置项 简化 query-status 在无参数时的默认输出 DM 直接管理到下游数据库的连接  问题修复  修复在进程启动过程中以及执行 SQL 失败时可能 panic 的问题 修复 DDL 执行超时后可能造成 sharding DDL 协调异常的问题 修复由于前置检查超时或部分 DM-worker 不可访问而不能启动数据迁移任务的问题 修复 SQL 执行失败后可能错误重试的问题  详细变更及问题修复  支持自动为 DM-worker 生成随机的 server-id 配置项 #337 支持自动为 DM-worker 生成 flavor 配置项 #328 支持自动为 DM-worker 生成 relay-binlog-name 与 relay-binlog-gtid 配置项 #318 支持根据黑白名单生成 mydumper 需要导出的表名配置项 #326 为数据迁移任务增加并发度配置项 (mydumper-thread、loader-thread 与 syncer-thread) #314 简化 query-status 在无参数时的默认输出 #340 修复 DDL 执行超时后可能造成 sharding DDL 协调异常的问题 #338 修复 DM-worker 从本地 meta 数据恢复数据迁移任务时可能 panic 的问题 #311 修复提交事务失败时可能造成 DM-worker panic 的问题 #313 修复监听端口被占用时 DM-worker 或 DM-master 启动过程中可能 panic 的问题 #301 修复对 1105 错误码的部分重试问题 #321, #332 修复对 Duplicate entry 与 Data too long for column 错误的重试问题 #313 修复在上游存在大量需要迁移的表时可能造成启动任务前置检查超时中断的问题 #327 修复部分 DM-worker 不可访问时无法启动数据迁移任务的问题 #319 修复从损坏的 relay log 恢复时可能错误更新 GTID sets 信息的问题 #339 修复 sync 处理单元计算 TPS 错误的问题 #294 DM 直接管理到下游数据库的连接 #325 提升组件内错误信息的传递方式 #320  </description>
    </item>
    
    <item>
      <title>DM 1.0.2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/releases/1.0.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/releases/1.0.2/</guid>
      <description>DM 1.0.2 Release Notes 发版日期：2019 年 10 月 30 日
DM 版本：1.0.2
DM-Ansible 版本：1.0.2
改进提升  支持自动为 DM-worker 生成部分配置项 支持自动为数据迁移任务生成部分配置项 简化 query-status 在无参数时的默认输出 DM 直接管理到下游数据库的连接  问题修复  修复在进程启动过程中以及执行 SQL 失败时可能 panic 的问题 修复 DDL 执行超时后可能造成 sharding DDL 协调异常的问题 修复由于前置检查超时或部分 DM-worker 不可访问而不能启动数据迁移任务的问题 修复 SQL 执行失败后可能错误重试的问题  详细变更及问题修复  支持自动为 DM-worker 生成随机的 server-id 配置项 #337 支持自动为 DM-worker 生成 flavor 配置项 #328 支持自动为 DM-worker 生成 relay-binlog-name 与 relay-binlog-gtid 配置项 #318 支持根据黑白名单生成 mydumper 需要导出的表名配置项 #326 为数据迁移任务增加并发度配置项 (mydumper-thread、loader-thread 与 syncer-thread) #314 简化 query-status 在无参数时的默认输出 #340 修复 DDL 执行超时后可能造成 sharding DDL 协调异常的问题 #338 修复 DM-worker 从本地 meta 数据恢复数据迁移任务时可能 panic 的问题 #311 修复提交事务失败时可能造成 DM-worker panic 的问题 #313 修复监听端口被占用时 DM-worker 或 DM-master 启动过程中可能 panic 的问题 #301 修复对 1105 错误码的部分重试问题 #321, #332 修复对 Duplicate entry 与 Data too long for column 错误的重试问题 #313 修复在上游存在大量需要迁移的表时可能造成启动任务前置检查超时中断的问题 #327 修复部分 DM-worker 不可访问时无法启动数据迁移任务的问题 #319 修复从损坏的 relay log 恢复时可能错误更新 GTID sets 信息的问题 #339 修复 sync 处理单元计算 TPS 错误的问题 #294 DM 直接管理到下游数据库的连接 #325 提升组件内错误信息的传递方式 #320  </description>
    </item>
    
    <item>
      <title>DM 1.0.2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/releases/1.0.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/releases/1.0.2/</guid>
      <description>DM 1.0.2 Release Notes 发版日期：2019 年 10 月 30 日
DM 版本：1.0.2
DM-Ansible 版本：1.0.2
改进提升  支持自动为 DM-worker 生成部分配置项 支持自动为数据迁移任务生成部分配置项 简化 query-status 在无参数时的默认输出 DM 直接管理到下游数据库的连接  问题修复  修复在进程启动过程中以及执行 SQL 失败时可能 panic 的问题 修复 DDL 执行超时后可能造成 sharding DDL 协调异常的问题 修复由于前置检查超时或部分 DM-worker 不可访问而不能启动数据迁移任务的问题 修复 SQL 执行失败后可能错误重试的问题  详细变更及问题修复  支持自动为 DM-worker 生成随机的 server-id 配置项 #337 支持自动为 DM-worker 生成 flavor 配置项 #328 支持自动为 DM-worker 生成 relay-binlog-name 与 relay-binlog-gtid 配置项 #318 支持根据黑白名单生成 mydumper 需要导出的表名配置项 #326 为数据迁移任务增加并发度配置项 (mydumper-thread、loader-thread 与 syncer-thread) #314 简化 query-status 在无参数时的默认输出 #340 修复 DDL 执行超时后可能造成 sharding DDL 协调异常的问题 #338 修复 DM-worker 从本地 meta 数据恢复数据迁移任务时可能 panic 的问题 #311 修复提交事务失败时可能造成 DM-worker panic 的问题 #313 修复监听端口被占用时 DM-worker 或 DM-master 启动过程中可能 panic 的问题 #301 修复对 1105 错误码的部分重试问题 #321, #332 修复对 Duplicate entry 与 Data too long for column 错误的重试问题 #313 修复在上游存在大量需要迁移的表时可能造成启动任务前置检查超时中断的问题 #327 修复部分 DM-worker 不可访问时无法启动数据迁移任务的问题 #319 修复从损坏的 relay log 恢复时可能错误更新 GTID sets 信息的问题 #339 修复 sync 处理单元计算 TPS 错误的问题 #294 DM 直接管理到下游数据库的连接 #325 提升组件内错误信息的传递方式 #320  </description>
    </item>
    
    <item>
      <title>DM 1.0.2 Release Notes</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/releases/1.0.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/releases/1.0.2/</guid>
      <description>DM 1.0.2 Release Notes Release date: October 30, 2019
DM version: 1.0.2
DM-Ansible version: 1.0.2
Improvements  Generate some config items for DM-worker automatically Generate some config items for replication task automatically Simplify the output of query-status without arguments Manage DB connections directly for downstream  Bug fixes  Fix some panic when starting up or executing SQL statements Fix abnormal sharding DDL replication on DDL execution timeout Fix starting task failure caused by the checking timeout or any inaccessible DM-worker Fix SQL execution retry for some error  Detailed bug fixes and changes  Generate random server-id for DM-worker config automatically #337 Generate flavor for DM-worker config automatically #328 Generate relay-binlog-name and relay-binlog-gtid for DM-worker config automatically #318 Generate the name list of tables to be dumped in task config from black &amp;amp; white table lists automatically #326 Add concurrency items (mydumper-thread, loader-thread and syncer-thread) for task config #314 Simplify the output of query-status without arguments #340 Fix abnormal sharding DDL replication on DDL execution timeout #338 Fix potential DM-worker panic when restoring subtask from local meta #311 Fix DM-worker panic when committing a DML transaction failed #313 Fix DM-worker or DM-master panic when the listening port is being used #301 Fix retry for error code 1105 #321, #332 Fix retry for Duplicate entry and Data too long for column #313 Fix task check timeout when having large amounts of tables in upstream #327 Fix starting task failure when any DM-worker is not accessible #319 Fix potential DM-worker startup failure in GTID mode after being recovered from corrupt relay log #339 Fix in-memory TPS count for sync unit #294 Manage DB connections directly for downstream #325 Improve the error system by refining error information passed between components #320  </description>
    </item>
    
    <item>
      <title>DM 1.0.2 Release Notes</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/releases/1.0.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/releases/1.0.2/</guid>
      <description>DM 1.0.2 Release Notes Release date: October 30, 2019
DM version: 1.0.2
DM-Ansible version: 1.0.2
Improvements  Generate some config items for DM-worker automatically Generate some config items for replication task automatically Simplify the output of query-status without arguments Manage DB connections directly for downstream  Bug fixes  Fix some panic when starting up or executing SQL statements Fix abnormal sharding DDL replication on DDL execution timeout Fix starting task failure caused by the checking timeout or any inaccessible DM-worker Fix SQL execution retry for some error  Detailed bug fixes and changes  Generate random server-id for DM-worker config automatically #337 Generate flavor for DM-worker config automatically #328 Generate relay-binlog-name and relay-binlog-gtid for DM-worker config automatically #318 Generate the name list of tables to be dumped in task config from black &amp;amp; white table lists automatically #326 Add concurrency items (mydumper-thread, loader-thread and syncer-thread) for task config #314 Simplify the output of query-status without arguments #340 Fix abnormal sharding DDL replication on DDL execution timeout #338 Fix potential DM-worker panic when restoring subtask from local meta #311 Fix DM-worker panic when committing a DML transaction failed #313 Fix DM-worker or DM-master panic when the listening port is being used #301 Fix retry for error code 1105 #321, #332 Fix retry for Duplicate entry and Data too long for column #313 Fix task check timeout when having large amounts of tables in upstream #327 Fix starting task failure when any DM-worker is not accessible #319 Fix potential DM-worker startup failure in GTID mode after being recovered from corrupt relay log #339 Fix in-memory TPS count for sync unit #294 Manage DB connections directly for downstream #325 Improve the error system by refining error information passed between components #320  </description>
    </item>
    
    <item>
      <title>DM 1.0.2 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/releases/1.0.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/releases/1.0.2/</guid>
      <description>DM 1.0.2 Release Notes Release date: October 30, 2019
DM version: 1.0.2
DM-Ansible version: 1.0.2
Improvements  Generate some config items for DM-worker automatically Generate some config items for replication task automatically Simplify the output of query-status without arguments Manage DB connections directly for downstream  Bug fixes  Fix some panic when starting up or executing SQL statements Fix abnormal sharding DDL replication on DDL execution timeout Fix starting task failure caused by the checking timeout or any inaccessible DM-worker Fix SQL execution retry for some error  Detailed bug fixes and changes  Generate random server-id for DM-worker config automatically #337 Generate flavor for DM-worker config automatically #328 Generate relay-binlog-name and relay-binlog-gtid for DM-worker config automatically #318 Generate the name list of tables to be dumped in task config from black &amp;amp; white table lists automatically #326 Add concurrency items (mydumper-thread, loader-thread and syncer-thread) for task config #314 Simplify the output of query-status without arguments #340 Fix abnormal sharding DDL replication on DDL execution timeout #338 Fix potential DM-worker panic when restoring subtask from local meta #311 Fix DM-worker panic when committing a DML transaction failed #313 Fix DM-worker or DM-master panic when the listening port is being used #301 Fix retry for error code 1105 #321, #332 Fix retry for Duplicate entry and Data too long for column #313 Fix task check timeout when having large amounts of tables in upstream #327 Fix starting task failure when any DM-worker is not accessible #319 Fix potential DM-worker startup failure in GTID mode after being recovered from corrupt relay log #339 Fix in-memory TPS count for sync unit #294 Manage DB connections directly for downstream #325 Improve the error system by refining error information passed between components #320  </description>
    </item>
    
    <item>
      <title>DM 1.0.2 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/releases/1.0.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/releases/1.0.2/</guid>
      <description>DM 1.0.2 Release Notes Release date: October 30, 2019
DM version: 1.0.2
DM-Ansible version: 1.0.2
Improvements  Generate some config items for DM-worker automatically Generate some config items for replication task automatically Simplify the output of query-status without arguments Manage DB connections directly for downstream  Bug fixes  Fix some panic when starting up or executing SQL statements Fix abnormal sharding DDL replication on DDL execution timeout Fix starting task failure caused by the checking timeout or any inaccessible DM-worker Fix SQL execution retry for some error  Detailed bug fixes and changes  Generate random server-id for DM-worker config automatically #337 Generate flavor for DM-worker config automatically #328 Generate relay-binlog-name and relay-binlog-gtid for DM-worker config automatically #318 Generate the name list of tables to be dumped in task config from black &amp;amp; white table lists automatically #326 Add concurrency items (mydumper-thread, loader-thread and syncer-thread) for task config #314 Simplify the output of query-status without arguments #340 Fix abnormal sharding DDL replication on DDL execution timeout #338 Fix potential DM-worker panic when restoring subtask from local meta #311 Fix DM-worker panic when committing a DML transaction failed #313 Fix DM-worker or DM-master panic when the listening port is being used #301 Fix retry for error code 1105 #321, #332 Fix retry for Duplicate entry and Data too long for column #313 Fix task check timeout when having large amounts of tables in upstream #327 Fix starting task failure when any DM-worker is not accessible #319 Fix potential DM-worker startup failure in GTID mode after being recovered from corrupt relay log #339 Fix in-memory TPS count for sync unit #294 Manage DB connections directly for downstream #325 Improve the error system by refining error information passed between components #320  </description>
    </item>
    
    <item>
      <title>DM 1.0.3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/releases/1.0.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/releases/1.0.3/</guid>
      <description>DM 1.0.3 Release Notes 发版日期：2019 年 12 月 13 日
DM 版本：1.0.3
DM-Ansible 版本：1.0.3
改进提升  dmctl 支持命令式使用 支持同步 ALTER DATABASE DDL 语句 优化 DM 错误提示信息  问题修复  修复全量导入模块在暂停或退出时 data race 导致 panic 的问题 修复对下游进行重试操作时，stop-task 和 pause-task 可能不生效的问题  详细变更及问题修复  dmctl 支持命令式使用 #364 优化 DM 错误提示信息 #351 优化 query-status 命令输出内容 #357 优化 DM 不同任务类型的权限检查 #374 支持对重复引用的路由配置和过滤配置进行检查 #385 支持同步 ALTER DATABASE DDL 语句 #389 优化 DM 异常重试机制 #391 修复全量导入模块在暂停或退出时 data race 导致 panic 的问题 #353 修复对下游进行重试操作时，stop-task 和 pause-task 可能不生效的问题 #400 更新 Golang 版本至 1.</description>
    </item>
    
    <item>
      <title>DM 1.0.3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/releases/1.0.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/releases/1.0.3/</guid>
      <description>DM 1.0.3 Release Notes 发版日期：2019 年 12 月 13 日
DM 版本：1.0.3
DM-Ansible 版本：1.0.3
改进提升  dmctl 支持命令式使用 支持同步 ALTER DATABASE DDL 语句 优化 DM 错误提示信息  问题修复  修复全量导入模块在暂停或退出时 data race 导致 panic 的问题 修复对下游进行重试操作时，stop-task 和 pause-task 可能不生效的问题  详细变更及问题修复  dmctl 支持命令式使用 #364 优化 DM 错误提示信息 #351 优化 query-status 命令输出内容 #357 优化 DM 不同任务类型的权限检查 #374 支持对重复引用的路由配置和过滤配置进行检查 #385 支持同步 ALTER DATABASE DDL 语句 #389 优化 DM 异常重试机制 #391 修复全量导入模块在暂停或退出时 data race 导致 panic 的问题 #353 修复对下游进行重试操作时，stop-task 和 pause-task 可能不生效的问题 #400 更新 Golang 版本至 1.</description>
    </item>
    
    <item>
      <title>DM 1.0.3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/releases/1.0.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/releases/1.0.3/</guid>
      <description>DM 1.0.3 Release Notes 发版日期：2019 年 12 月 13 日
DM 版本：1.0.3
DM-Ansible 版本：1.0.3
改进提升  dmctl 支持命令式使用 支持同步 ALTER DATABASE DDL 语句 优化 DM 错误提示信息  问题修复  修复全量导入模块在暂停或退出时 data race 导致 panic 的问题 修复对下游进行重试操作时，stop-task 和 pause-task 可能不生效的问题  详细变更及问题修复  dmctl 支持命令式使用 #364 优化 DM 错误提示信息 #351 优化 query-status 命令输出内容 #357 优化 DM 不同任务类型的权限检查 #374 支持对重复引用的路由配置和过滤配置进行检查 #385 支持同步 ALTER DATABASE DDL 语句 #389 优化 DM 异常重试机制 #391 修复全量导入模块在暂停或退出时 data race 导致 panic 的问题 #353 修复对下游进行重试操作时，stop-task 和 pause-task 可能不生效的问题 #400 更新 Golang 版本至 1.</description>
    </item>
    
    <item>
      <title>DM 1.0.3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/releases/1.0.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/releases/1.0.3/</guid>
      <description>DM 1.0.3 Release Notes 发版日期：2019 年 12 月 13 日
DM 版本：1.0.3
DM-Ansible 版本：1.0.3
改进提升  dmctl 支持命令式使用 支持同步 ALTER DATABASE DDL 语句 优化 DM 错误提示信息  问题修复  修复全量导入模块在暂停或退出时 data race 导致 panic 的问题 修复对下游进行重试操作时，stop-task 和 pause-task 可能不生效的问题  详细变更及问题修复  dmctl 支持命令式使用 #364 优化 DM 错误提示信息 #351 优化 query-status 命令输出内容 #357 优化 DM 不同任务类型的权限检查 #374 支持对重复引用的路由配置和过滤配置进行检查 #385 支持同步 ALTER DATABASE DDL 语句 #389 优化 DM 异常重试机制 #391 修复全量导入模块在暂停或退出时 data race 导致 panic 的问题 #353 修复对下游进行重试操作时，stop-task 和 pause-task 可能不生效的问题 #400 更新 Golang 版本至 1.</description>
    </item>
    
    <item>
      <title>DM 1.0.3 Release Notes</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/releases/1.0.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/releases/1.0.3/</guid>
      <description>DM 1.0.3 Release Notes Release date: December 13, 2019
DM version: 1.0.3
DM-Ansible version: 1.0.3
Improvements  Add the command mode in dmctl Support replicating the ALTER DATABASE DDL statement Optimize the error message output  Bug fixes  Fix the panic-causing data race issue occurred when the full import unit pauses or exits Fix the issue that stop-task and pause-task might not take effect when retrying SQL operations to the downstream  Detailed bug fixes and changes  Add the command mode in dmctl #364 Optimize the error message output #351 Optimize the output of the query-status command #357 Optimize the privilege check for different task modes #374 Support checking the duplicate quoted route-rules or filter-rules in task config #385 Support replicating the ALTER DATABASE DDL statement #389 Optimize the retry mechanism for anomalies #391 Fix the panic issue caused by the data race when the import unit pauses or exits #353 Fix the issue that stop-task and pause-task might not take effect when retrying SQL operations to the downstream #400 Upgrade Golang to v1.</description>
    </item>
    
    <item>
      <title>DM 1.0.3 Release Notes</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/releases/1.0.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/releases/1.0.3/</guid>
      <description>DM 1.0.3 Release Notes Release date: December 13, 2019
DM version: 1.0.3
DM-Ansible version: 1.0.3
Improvements  Add the command mode in dmctl Support replicating the ALTER DATABASE DDL statement Optimize the error message output  Bug fixes  Fix the panic-causing data race issue occurred when the full import unit pauses or exits Fix the issue that stop-task and pause-task might not take effect when retrying SQL operations to the downstream  Detailed bug fixes and changes  Add the command mode in dmctl #364 Optimize the error message output #351 Optimize the output of the query-status command #357 Optimize the privilege check for different task modes #374 Support checking the duplicate quoted route-rules or filter-rules in task config #385 Support replicating the ALTER DATABASE DDL statement #389 Optimize the retry mechanism for anomalies #391 Fix the panic issue caused by the data race when the import unit pauses or exits #353 Fix the issue that stop-task and pause-task might not take effect when retrying SQL operations to the downstream #400 Upgrade Golang to v1.</description>
    </item>
    
    <item>
      <title>DM 1.0.3 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/releases/1.0.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/releases/1.0.3/</guid>
      <description>DM 1.0.3 Release Notes Release date: December 13, 2019
DM version: 1.0.3
DM-Ansible version: 1.0.3
Improvements  Add the command mode in dmctl Support replicating the ALTER DATABASE DDL statement Optimize the error message output  Bug fixes  Fix the panic-causing data race issue occurred when the full import unit pauses or exits Fix the issue that stop-task and pause-task might not take effect when retrying SQL operations to the downstream  Detailed bug fixes and changes  Add the command mode in dmctl #364 Optimize the error message output #351 Optimize the output of the query-status command #357 Optimize the privilege check for different task modes #374 Support checking the duplicate quoted route-rules or filter-rules in task config #385 Support replicating the ALTER DATABASE DDL statement #389 Optimize the retry mechanism for anomalies #391 Fix the panic issue caused by the data race when the import unit pauses or exits #353 Fix the issue that stop-task and pause-task might not take effect when retrying SQL operations to the downstream #400 Upgrade Golang to v1.</description>
    </item>
    
    <item>
      <title>DM 1.0.3 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/releases/1.0.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/releases/1.0.3/</guid>
      <description>DM 1.0.3 Release Notes Release date: December 13, 2019
DM version: 1.0.3
DM-Ansible version: 1.0.3
Improvements  Add the command mode in dmctl Support replicating the ALTER DATABASE DDL statement Optimize the error message output  Bug fixes  Fix the panic-causing data race issue occurred when the full import unit pauses or exits Fix the issue that stop-task and pause-task might not take effect when retrying SQL operations to the downstream  Detailed bug fixes and changes  Add the command mode in dmctl #364 Optimize the error message output #351 Optimize the output of the query-status command #357 Optimize the privilege check for different task modes #374 Support checking the duplicate quoted route-rules or filter-rules in task config #385 Support replicating the ALTER DATABASE DDL statement #389 Optimize the retry mechanism for anomalies #391 Fix the panic issue caused by the data race when the import unit pauses or exits #353 Fix the issue that stop-task and pause-task might not take effect when retrying SQL operations to the downstream #400 Upgrade Golang to v1.</description>
    </item>
    
    <item>
      <title>DM 1.0.4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/releases/1.0.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/releases/1.0.4/</guid>
      <description>DM 1.0.4 Release Notes 发版日期：2020 年 03 月 13 日
DM 版本：1.0.4
DM-Ansible 版本：1.0.4
改进提升  DM-portal 新增英文 UI 的支持 query-status 命令增加 --more 参数用于显示完整的同步状态信息  问题修复  修复到下游 TiDB 连接异常导致同步暂停后，resume-task 可能无法正常恢复同步的问题 修复 online DDL 执行失败后错误清理了 online DDL meta 信息而导致重启任务后无法继续正确处理 online DDL 同步的问题 修复 start-task 异常后 query-error 可能导致 DM-worker panic 的问题 修复 relay.meta 写入成功前 DM-worker 进程异常停止后，重启 DM-worker 时可能无法正确 recover relay log 文件与 relay.meta 的问题  详细变更及问题修复  DM-portal 增加支持英文 UI #480 query-status 命令增加 --more 参数用于显示完整的同步状态信息 #533 修复到下游 TiDB 连接异常导致同步暂停后，resume-task 可能无法正常恢复同步的问题 #436 修复 online DDL 执行失败后错误清理了 online DDL meta 信息而导致重启任务后无法继续正确处理 online DDL 同步的问题 #465 修复 start-task 异常后 query-error 可能导致 DM-worker panic 的问题 #519 修复 relay.</description>
    </item>
    
    <item>
      <title>DM 1.0.4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/releases/1.0.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/releases/1.0.4/</guid>
      <description>DM 1.0.4 Release Notes 发版日期：2020 年 03 月 13 日
DM 版本：1.0.4
DM-Ansible 版本：1.0.4
改进提升  DM-portal 新增英文 UI 的支持 query-status 命令增加 --more 参数用于显示完整的同步状态信息  问题修复  修复到下游 TiDB 连接异常导致同步暂停后，resume-task 可能无法正常恢复同步的问题 修复 online DDL 执行失败后错误清理了 online DDL meta 信息而导致重启任务后无法继续正确处理 online DDL 同步的问题 修复 start-task 异常后 query-error 可能导致 DM-worker panic 的问题 修复 relay.meta 写入成功前 DM-worker 进程异常停止后，重启 DM-worker 时可能无法正确 recover relay log 文件与 relay.meta 的问题  详细变更及问题修复  DM-portal 增加支持英文 UI #480 query-status 命令增加 --more 参数用于显示完整的同步状态信息 #533 修复到下游 TiDB 连接异常导致同步暂停后，resume-task 可能无法正常恢复同步的问题 #436 修复 online DDL 执行失败后错误清理了 online DDL meta 信息而导致重启任务后无法继续正确处理 online DDL 同步的问题 #465 修复 start-task 异常后 query-error 可能导致 DM-worker panic 的问题 #519 修复 relay.</description>
    </item>
    
    <item>
      <title>DM 1.0.4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/releases/1.0.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/releases/1.0.4/</guid>
      <description>DM 1.0.4 Release Notes 发版日期：2020 年 03 月 13 日
DM 版本：1.0.4
DM-Ansible 版本：1.0.4
改进提升  DM-portal 新增英文 UI 的支持 query-status 命令增加 --more 参数用于显示完整的同步状态信息  问题修复  修复到下游 TiDB 连接异常导致同步暂停后，resume-task 可能无法正常恢复同步的问题 修复 online DDL 执行失败后错误清理了 online DDL meta 信息而导致重启任务后无法继续正确处理 online DDL 同步的问题 修复 start-task 异常后 query-error 可能导致 DM-worker panic 的问题 修复 relay.meta 写入成功前 DM-worker 进程异常停止后，重启 DM-worker 时可能无法正确 recover relay log 文件与 relay.meta 的问题  详细变更及问题修复  DM-portal 增加支持英文 UI #480 query-status 命令增加 --more 参数用于显示完整的同步状态信息 #533 修复到下游 TiDB 连接异常导致同步暂停后，resume-task 可能无法正常恢复同步的问题 #436 修复 online DDL 执行失败后错误清理了 online DDL meta 信息而导致重启任务后无法继续正确处理 online DDL 同步的问题 #465 修复 start-task 异常后 query-error 可能导致 DM-worker panic 的问题 #519 修复 relay.</description>
    </item>
    
    <item>
      <title>DM 1.0.4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/releases/1.0.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/releases/1.0.4/</guid>
      <description>DM 1.0.4 Release Notes 发版日期：2020 年 03 月 13 日
DM 版本：1.0.4
DM-Ansible 版本：1.0.4
改进提升  DM-portal 新增英文 UI 的支持 query-status 命令增加 --more 参数用于显示完整的同步状态信息  问题修复  修复到下游 TiDB 连接异常导致同步暂停后，resume-task 可能无法正常恢复同步的问题 修复 online DDL 执行失败后错误清理了 online DDL meta 信息而导致重启任务后无法继续正确处理 online DDL 同步的问题 修复 start-task 异常后 query-error 可能导致 DM-worker panic 的问题 修复 relay.meta 写入成功前 DM-worker 进程异常停止后，重启 DM-worker 时可能无法正确 recover relay log 文件与 relay.meta 的问题  详细变更及问题修复  DM-portal 增加支持英文 UI #480 query-status 命令增加 --more 参数用于显示完整的同步状态信息 #533 修复到下游 TiDB 连接异常导致同步暂停后，resume-task 可能无法正常恢复同步的问题 #436 修复 online DDL 执行失败后错误清理了 online DDL meta 信息而导致重启任务后无法继续正确处理 online DDL 同步的问题 #465 修复 start-task 异常后 query-error 可能导致 DM-worker panic 的问题 #519 修复 relay.</description>
    </item>
    
    <item>
      <title>DM 1.0.4 Release Notes</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/releases/1.0.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/releases/1.0.4/</guid>
      <description>DM 1.0.4 Release Notes Release date: March 13, 2020
DM version: 1.0.4
DM-Ansible version: 1.0.4
Improvements  Add English UI for DM-portal Add the --more parameter in the query-status command to show complete replication status information  Bug fixes  Fix the issue that resume-task might fail to resume the replication task which is interrupted by the abnormal connection to the downstream TiDB server Fix the issue that the online DDL operation cannot be properly replicated after a failed replication task is restarted because the online DDL meta information has been cleared after the DDL operation failure Fix the issue that query-error might cause the DM-worker to panic after start-task goes into error Fix the issue that the relay log file and relay.</description>
    </item>
    
    <item>
      <title>DM 1.0.4 Release Notes</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/releases/1.0.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/releases/1.0.4/</guid>
      <description>DM 1.0.4 Release Notes Release date: March 13, 2020
DM version: 1.0.4
DM-Ansible version: 1.0.4
Improvements  Add English UI for DM-portal Add the --more parameter in the query-status command to show complete replication status information  Bug fixes  Fix the issue that resume-task might fail to resume the replication task which is interrupted by the abnormal connection to the downstream TiDB server Fix the issue that the online DDL operation cannot be properly replicated after a failed replication task is restarted because the online DDL meta information has been cleared after the DDL operation failure Fix the issue that query-error might cause the DM-worker to panic after start-task goes into error Fix the issue that the relay log file and relay.</description>
    </item>
    
    <item>
      <title>DM 1.0.4 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/releases/1.0.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/releases/1.0.4/</guid>
      <description>DM 1.0.4 Release Notes Release date: March 13, 2020
DM version: 1.0.4
DM-Ansible version: 1.0.4
Improvements  Add English UI for DM-portal Add the --more parameter in the query-status command to show complete replication status information  Bug fixes  Fix the issue that resume-task might fail to resume the replication task which is interrupted by the abnormal connection to the downstream TiDB server Fix the issue that the online DDL operation cannot be properly replicated after a failed replication task is restarted because the online DDL meta information has been cleared after the DDL operation failure Fix the issue that query-error might cause the DM-worker to panic after start-task goes into error Fix the issue that the relay log file and relay.</description>
    </item>
    
    <item>
      <title>DM 1.0.4 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/releases/1.0.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/releases/1.0.4/</guid>
      <description>DM 1.0.4 Release Notes Release date: March 13, 2020
DM version: 1.0.4
DM-Ansible version: 1.0.4
Improvements  Add English UI for DM-portal Add the --more parameter in the query-status command to show complete replication status information  Bug fixes  Fix the issue that resume-task might fail to resume the replication task which is interrupted by the abnormal connection to the downstream TiDB server Fix the issue that the online DDL operation cannot be properly replicated after a failed replication task is restarted because the online DDL meta information has been cleared after the DDL operation failure Fix the issue that query-error might cause the DM-worker to panic after start-task goes into error Fix the issue that the relay log file and relay.</description>
    </item>
    
    <item>
      <title>DM Advanced Task Configuration File</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/configure/task-configuration-file-full/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/configure/task-configuration-file-full/</guid>
      <description>DM Advanced Task Configuration File This document introduces the advanced task configuration file of Data Migration &amp;ndash; task_advanced.yaml, including global configuration and instance configuration.
For the feature and configuration of each configuration item, see Data replication features.
Important concepts For description of important concepts including source-id and the DM-worker ID, see Important concepts.
Task configuration file template (advanced) The following is the task configuration file template which allows you to perform advanced data replication tasks.</description>
    </item>
    
    <item>
      <title>DM Advanced Task Configuration File</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/configure/task-configuration-file-full/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/configure/task-configuration-file-full/</guid>
      <description>DM Advanced Task Configuration File This document introduces the advanced task configuration file of Data Migration &amp;ndash; task_advanced.yaml, including global configuration and instance configuration.
For the feature and configuration of each configuration item, see Data replication features.
Important concepts For description of important concepts including source-id and the DM-worker ID, see Important concepts.
Task configuration file template (advanced) The following is the task configuration file template which allows you to perform advanced data replication tasks.</description>
    </item>
    
    <item>
      <title>DM Advanced Task Configuration File</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/configure/task-configuration-file-full/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/configure/task-configuration-file-full/</guid>
      <description>DM Advanced Task Configuration File This document introduces the advanced task configuration file of Data Migration &amp;ndash; task_advanced.yaml, including global configuration and instance configuration.
For the feature and configuration of each configuration item, see Data replication features.
Important concepts For description of important concepts including source-id and the DM-worker ID, see Important concepts.
Task configuration file template (advanced) The following is the task configuration file template which allows you to perform advanced data replication tasks.</description>
    </item>
    
    <item>
      <title>DM Advanced Task Configuration File</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/configure/task-configuration-file-full/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/configure/task-configuration-file-full/</guid>
      <description>DM Advanced Task Configuration File This document introduces the advanced task configuration file of Data Migration &amp;ndash; task_advanced.yaml, including global configuration and instance configuration.
For the feature and configuration of each configuration item, see Data replication features.
Important concepts For description of important concepts including source-id and the DM-worker ID, see Important concepts.
Task configuration file template (advanced) The following is the task configuration file template which allows you to perform advanced data replication tasks.</description>
    </item>
    
    <item>
      <title>DM Benchmark Report</title>
      <link>https://pingcap.com/docs/dev/benchmark/dm-v1-alpha/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/benchmark/dm-v1-alpha/</guid>
      <description>Learn about the DM benchmark report.</description>
    </item>
    
    <item>
      <title>DM Benchmark Report</title>
      <link>https://pingcap.com/docs/stable/benchmark/dm-v1-alpha/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/benchmark/dm-v1-alpha/</guid>
      <description>Learn about the DM benchmark report.</description>
    </item>
    
    <item>
      <title>DM Benchmark Report</title>
      <link>https://pingcap.com/docs/v2.1/benchmark/dm-v1-alpha/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/benchmark/dm-v1-alpha/</guid>
      <description>Learn about the DM benchmark report.</description>
    </item>
    
    <item>
      <title>DM Benchmark Report</title>
      <link>https://pingcap.com/docs/v3.1/benchmark/dm-v1-alpha/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/benchmark/dm-v1-alpha/</guid>
      <description>Learn about the DM benchmark report.</description>
    </item>
    
    <item>
      <title>DM Portal 简介</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/dm-portal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/dm-portal/</guid>
      <description>DM Portal 简介 当前版本的 DM 提供了丰富多样的功能特性，包括 Table routing，Black &amp;amp; white table lists，Binlog event filter 等。但这些功能特性同时也增加了用户使用 DM 的复杂度，尤其在编写 DM 任务配置的时候。
针对这个问题，DM 提供了一个精简的网页程序 DM Portal，能够帮助用户以可视化的方式去配置需要的同步任务，并且生成可以直接让 DM 直接执行的 task.yaml 文件。
功能描述 同步模式配置 支持 DM 的三种同步模式：
 全量同步 增量同步 All（全量+增量）  实例信息配置 支持配置库表同步路由方式，能够支持 DM 中分库分表合并的配置方式。
binlog 过滤配置 支持对数据库、数据表配置 binlog event 过滤。
配置文件生成 支持配置文件创建，能够将配置文件下载到本地并且同时会在 dm-portal 服务器的 /tmp/ 目录下自动创建。
使用限制 当前的 DM 配置可视化生成页面能够覆盖绝大部分的 DM 配置场景，但也有一定的使用限制：
 不支持 Binlog event filter 的 SQL pattern 方式 编辑功能不支持解析用户之前写的 task.yaml 文件，页面只能编辑由页面生成的 task.</description>
    </item>
    
    <item>
      <title>DM Portal 简介</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/dm-portal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/dm-portal/</guid>
      <description>DM Portal 简介 当前版本的 DM 提供了丰富多样的功能特性，包括 Table routing，Black &amp;amp; white table lists，Binlog event filter 等。但这些功能特性同时也增加了用户使用 DM 的复杂度，尤其在编写 DM 任务配置的时候。
针对这个问题，DM 提供了一个精简的网页程序 DM Portal，能够帮助用户以可视化的方式去配置需要的同步任务，并且生成可以直接让 DM 直接执行的 task.yaml 文件。
功能描述 同步模式配置 支持 DM 的三种同步模式：
 全量同步 增量同步 All（全量+增量）  实例信息配置 支持配置库表同步路由方式，能够支持 DM 中分库分表合并的配置方式。
binlog 过滤配置 支持对数据库、数据表配置 binlog event 过滤。
配置文件生成 支持配置文件创建，能够将配置文件下载到本地并且同时会在 dm-portal 服务器的 /tmp/ 目录下自动创建。
使用限制 当前的 DM 配置可视化生成页面能够覆盖绝大部分的 DM 配置场景，但也有一定的使用限制：
 不支持 Binlog event filter 的 SQL pattern 方式 编辑功能不支持解析用户之前写的 task.yaml 文件，页面只能编辑由页面生成的 task.</description>
    </item>
    
    <item>
      <title>DM Portal 简介</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/dm-portal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/dm-portal/</guid>
      <description>DM Portal 简介 当前版本的 DM 提供了丰富多样的功能特性，包括 Table routing，Black &amp;amp; white table lists，Binlog event filter 等。但这些功能特性同时也增加了用户使用 DM 的复杂度，尤其在编写 DM 任务配置的时候。
针对这个问题，DM 提供了一个精简的网页程序 DM Portal，能够帮助用户以可视化的方式去配置需要的同步任务，并且生成可以直接让 DM 直接执行的 task.yaml 文件。
功能描述 同步模式配置 支持 DM 的三种同步模式：
 全量同步 增量同步 All（全量+增量）  实例信息配置 支持配置库表同步路由方式，能够支持 DM 中分库分表合并的配置方式。
binlog 过滤配置 支持对数据库、数据表配置 binlog event 过滤。
配置文件生成 支持配置文件创建，能够将配置文件下载到本地并且同时会在 dm-portal 服务器的 /tmp/ 目录下自动创建。
使用限制 当前的 DM 配置可视化生成页面能够覆盖绝大部分的 DM 配置场景，但也有一定的使用限制：
 不支持 Binlog event filter 的 SQL pattern 方式 编辑功能不支持解析用户之前写的 task.yaml 文件，页面只能编辑由页面生成的 task.</description>
    </item>
    
    <item>
      <title>DM Portal 简介</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/dm-portal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/dm-portal/</guid>
      <description>DM Portal 简介 当前版本的 DM 提供了丰富多样的功能特性，包括 Table routing，Black &amp;amp; white table lists，Binlog event filter 等。但这些功能特性同时也增加了用户使用 DM 的复杂度，尤其在编写 DM 任务配置的时候。
针对这个问题，DM 提供了一个精简的网页程序 DM Portal，能够帮助用户以可视化的方式去配置需要的同步任务，并且生成可以直接让 DM 直接执行的 task.yaml 文件。
功能描述 同步模式配置 支持 DM 的三种同步模式：
 全量同步 增量同步 All（全量+增量）  实例信息配置 支持配置库表同步路由方式，能够支持 DM 中分库分表合并的配置方式。
binlog 过滤配置 支持对数据库、数据表配置 binlog event 过滤。
配置文件生成 支持配置文件创建，能够将配置文件下载到本地并且同时会在 dm-portal 服务器的 /tmp/ 目录下自动创建。
使用限制 当前的 DM 配置可视化生成页面能够覆盖绝大部分的 DM 配置场景，但也有一定的使用限制：
 不支持 Binlog event filter 的 SQL pattern 方式 编辑功能不支持解析用户之前写的 task.yaml 文件，页面只能编辑由页面生成的 task.</description>
    </item>
    
    <item>
      <title>DM Relay Log</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/relay-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/relay-log/</guid>
      <description>了解目录结构、初始同步规则和 DM relay log 的数据清理。</description>
    </item>
    
    <item>
      <title>DM Relay Log</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/relay-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/relay-log/</guid>
      <description>了解目录结构、初始同步规则和 DM relay log 的数据清理。</description>
    </item>
    
    <item>
      <title>DM Relay Log</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/relay-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/relay-log/</guid>
      <description>了解目录结构、初始同步规则和 DM relay log 的数据清理。</description>
    </item>
    
    <item>
      <title>DM Relay Log</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/relay-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/relay-log/</guid>
      <description>了解目录结构、初始同步规则和 DM relay log 的数据清理。</description>
    </item>
    
    <item>
      <title>DM 任务完整配置文件介绍</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/configure/task-configuration-file-full/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/configure/task-configuration-file-full/</guid>
      <description>DM 任务完整配置文件介绍 本文档主要介绍 Data Migration (DM) 的任务完整的配置文件 task_advanced.yaml，包含全局配置 和实例配置 两部分。
关于各配置项的功能和配置，请参阅数据同步功能。
关键概念 关于包括 source-id 和 DM-worker ID 在内的关键概念的介绍，请参阅关键概念。
完整配置文件示例 下面是一个完整的配置文件示例，通过该示例可以完成复杂的数据同步功能。
--- # ----------- 全局配置 ----------- ## ********* 基本信息配置 ********* name: test # 任务名称，需要全局唯一 task-mode: all # 任务模式，可设为 &amp;#34;full&amp;#34;、&amp;#34;incremental&amp;#34;、&amp;#34;all&amp;#34; is-sharding: true # 是否为分库分表合并任务 meta-schema: &amp;#34;dm_meta&amp;#34; # 下游储存 `meta` 信息的数据库 remove-meta: false # 是否在任务同步开始前移除该任务名对应的 `meta`（`checkpoint` 和 `onlineddl` 等）。 enable-heartbeat: false # 是否开启 `heartbeat` 功能 target-database: # 下游数据库实例配置 host: &amp;#34;192.168.0.1&amp;#34; port: 4000 user: &amp;#34;root&amp;#34; password: &amp;#34;&amp;#34; # 如果不为空则需经过 dmctl 加密 ## ******** 功能配置集 ********** routes: # 上游和下游表之间的路由 table routing 规则集 route-rule-1: # 配置名称 schema-pattern: &amp;#34;test_*&amp;#34; # 库名匹配规则，支持通配符 &amp;#34;*&amp;#34; 和 &amp;#34;?</description>
    </item>
    
    <item>
      <title>DM 任务完整配置文件介绍</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/configure/task-configuration-file-full/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/configure/task-configuration-file-full/</guid>
      <description>DM 任务完整配置文件介绍 本文档主要介绍 Data Migration (DM) 的任务完整的配置文件 task_advanced.yaml，包含全局配置 和实例配置 两部分。
关于各配置项的功能和配置，请参阅数据同步功能。
关键概念 关于包括 source-id 和 DM-worker ID 在内的关键概念的介绍，请参阅关键概念。
完整配置文件示例 下面是一个完整的配置文件示例，通过该示例可以完成复杂的数据同步功能。
--- # ----------- 全局配置 ----------- ## ********* 基本信息配置 ********* name: test # 任务名称，需要全局唯一 task-mode: all # 任务模式，可设为 &amp;#34;full&amp;#34;、&amp;#34;incremental&amp;#34;、&amp;#34;all&amp;#34; is-sharding: true # 是否为分库分表合并任务 meta-schema: &amp;#34;dm_meta&amp;#34; # 下游储存 `meta` 信息的数据库 remove-meta: false # 是否在任务同步开始前移除该任务名对应的 `meta`（`checkpoint` 和 `onlineddl` 等）。 enable-heartbeat: false # 是否开启 `heartbeat` 功能 target-database: # 下游数据库实例配置 host: &amp;#34;192.168.0.1&amp;#34; port: 4000 user: &amp;#34;root&amp;#34; password: &amp;#34;&amp;#34; # 如果不为空则需经过 dmctl 加密 ## ******** 功能配置集 ********** routes: # 上游和下游表之间的路由 table routing 规则集 route-rule-1: # 配置名称 schema-pattern: &amp;#34;test_*&amp;#34; # 库名匹配规则，支持通配符 &amp;#34;*&amp;#34; 和 &amp;#34;?</description>
    </item>
    
    <item>
      <title>DM 任务完整配置文件介绍</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/configure/task-configuration-file-full/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/configure/task-configuration-file-full/</guid>
      <description>DM 任务完整配置文件介绍 本文档主要介绍 Data Migration (DM) 的任务完整的配置文件 task_advanced.yaml，包含全局配置 和实例配置 两部分。
关于各配置项的功能和配置，请参阅数据同步功能。
关键概念 关于包括 source-id 和 DM-worker ID 在内的关键概念的介绍，请参阅关键概念。
完整配置文件示例 下面是一个完整的配置文件示例，通过该示例可以完成复杂的数据同步功能。
--- # ----------- 全局配置 ----------- ## ********* 基本信息配置 ********* name: test # 任务名称，需要全局唯一 task-mode: all # 任务模式，可设为 &amp;#34;full&amp;#34;、&amp;#34;incremental&amp;#34;、&amp;#34;all&amp;#34; is-sharding: true # 是否为分库分表合并任务 meta-schema: &amp;#34;dm_meta&amp;#34; # 下游储存 `meta` 信息的数据库 remove-meta: false # 是否在任务同步开始前移除该任务名对应的 `meta`（`checkpoint` 和 `onlineddl` 等）。 enable-heartbeat: false # 是否开启 `heartbeat` 功能 target-database: # 下游数据库实例配置 host: &amp;#34;192.168.0.1&amp;#34; port: 4000 user: &amp;#34;root&amp;#34; password: &amp;#34;&amp;#34; # 如果不为空则需经过 dmctl 加密 ## ******** 功能配置集 ********** routes: # 上游和下游表之间的路由 table routing 规则集 route-rule-1: # 配置名称 schema-pattern: &amp;#34;test_*&amp;#34; # 库名匹配规则，支持通配符 &amp;#34;*&amp;#34; 和 &amp;#34;?</description>
    </item>
    
    <item>
      <title>DM 任务完整配置文件介绍</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/configure/task-configuration-file-full/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/configure/task-configuration-file-full/</guid>
      <description>DM 任务完整配置文件介绍 本文档主要介绍 Data Migration (DM) 的任务完整的配置文件 task_advanced.yaml，包含全局配置 和实例配置 两部分。
关于各配置项的功能和配置，请参阅数据同步功能。
关键概念 关于包括 source-id 和 DM-worker ID 在内的关键概念的介绍，请参阅关键概念。
完整配置文件示例 下面是一个完整的配置文件示例，通过该示例可以完成复杂的数据同步功能。
--- # ----------- 全局配置 ----------- ## ********* 基本信息配置 ********* name: test # 任务名称，需要全局唯一 task-mode: all # 任务模式，可设为 &amp;#34;full&amp;#34;、&amp;#34;incremental&amp;#34;、&amp;#34;all&amp;#34; is-sharding: true # 是否为分库分表合并任务 meta-schema: &amp;#34;dm_meta&amp;#34; # 下游储存 `meta` 信息的数据库 remove-meta: false # 是否在任务同步开始前移除该任务名对应的 `meta`（`checkpoint` 和 `onlineddl` 等）。 enable-heartbeat: false # 是否开启 `heartbeat` 功能 target-database: # 下游数据库实例配置 host: &amp;#34;192.168.0.1&amp;#34; port: 4000 user: &amp;#34;root&amp;#34; password: &amp;#34;&amp;#34; # 如果不为空则需经过 dmctl 加密 ## ******** 功能配置集 ********** routes: # 上游和下游表之间的路由 table routing 规则集 route-rule-1: # 配置名称 schema-pattern: &amp;#34;test_*&amp;#34; # 库名匹配规则，支持通配符 &amp;#34;*&amp;#34; 和 &amp;#34;?</description>
    </item>
    
    <item>
      <title>DM 任务配置文件介绍</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/configure/task-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/configure/task-configuration-file/</guid>
      <description>DM 任务配置文件介绍 本文档主要介绍 Data Migration (DM) 的任务基础配置文件 task_basic.yaml，包含全局配置和实例配置两部分。
完整的任务配置参见 DM 任务完整配置文件介绍
关于各配置项的功能和配置，请参阅数据同步功能。
关键概念 关于包括 source-id 和 DM-worker ID 在内的关键概念的介绍，请参阅关键概念。
基础配置文件示例 下面是一个基础的配置文件示例，通过该示例可以完成简单的数据同步功能。
--- # ----------- 全局配置 ----------- ## ********* 基本信息配置 ********* name: test # 任务名称，需要全局唯一 task-mode: all # 任务模式，可设为 &amp;#34;full&amp;#34;、&amp;#34;incremental&amp;#34;、&amp;#34;all&amp;#34; target-database: # 下游数据库实例配置 host: &amp;#34;127.0.0.1&amp;#34; port: 4000 user: &amp;#34;root&amp;#34; password: &amp;#34;&amp;#34; # 如果不为空则需经过 dmctl 加密 ## ******** 功能配置集 ********** black-white-list: # 上游数据库实例匹配的表的 black &amp;amp; white list 过滤规则集 bw-rule-1: # 黑白名单配置的名称 do-dbs: [&amp;#34;all_mode&amp;#34;] # 同步哪些库 # ----------- 实例配置 ----------- mysql-instances: - source-id: &amp;#34;mysql-replica-01&amp;#34; # 上游实例或者复制组 ID，参考 `dm-master.</description>
    </item>
    
    <item>
      <title>DM 任务配置文件介绍</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/configure/task-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/configure/task-configuration-file/</guid>
      <description>DM 任务配置文件介绍 本文档主要介绍 Data Migration (DM) 的任务基础配置文件 task_basic.yaml，包含全局配置和实例配置两部分。
完整的任务配置参见 DM 任务完整配置文件介绍
关于各配置项的功能和配置，请参阅数据同步功能。
关键概念 关于包括 source-id 和 DM-worker ID 在内的关键概念的介绍，请参阅关键概念。
基础配置文件示例 下面是一个基础的配置文件示例，通过该示例可以完成简单的数据同步功能。
--- # ----------- 全局配置 ----------- ## ********* 基本信息配置 ********* name: test # 任务名称，需要全局唯一 task-mode: all # 任务模式，可设为 &amp;#34;full&amp;#34;、&amp;#34;incremental&amp;#34;、&amp;#34;all&amp;#34; target-database: # 下游数据库实例配置 host: &amp;#34;127.0.0.1&amp;#34; port: 4000 user: &amp;#34;root&amp;#34; password: &amp;#34;&amp;#34; # 如果不为空则需经过 dmctl 加密 ## ******** 功能配置集 ********** black-white-list: # 上游数据库实例匹配的表的 black &amp;amp; white list 过滤规则集 bw-rule-1: # 黑白名单配置的名称 do-dbs: [&amp;#34;all_mode&amp;#34;] # 同步哪些库 # ----------- 实例配置 ----------- mysql-instances: - source-id: &amp;#34;mysql-replica-01&amp;#34; # 上游实例或者复制组 ID，参考 `dm-master.</description>
    </item>
    
    <item>
      <title>DM 任务配置文件介绍</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/configure/task-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/configure/task-configuration-file/</guid>
      <description>DM 任务配置文件介绍 本文档主要介绍 Data Migration (DM) 的任务基础配置文件 task_basic.yaml，包含全局配置和实例配置两部分。
完整的任务配置参见 DM 任务完整配置文件介绍
关于各配置项的功能和配置，请参阅数据同步功能。
关键概念 关于包括 source-id 和 DM-worker ID 在内的关键概念的介绍，请参阅关键概念。
基础配置文件示例 下面是一个基础的配置文件示例，通过该示例可以完成简单的数据同步功能。
--- # ----------- 全局配置 ----------- ## ********* 基本信息配置 ********* name: test # 任务名称，需要全局唯一 task-mode: all # 任务模式，可设为 &amp;#34;full&amp;#34;、&amp;#34;incremental&amp;#34;、&amp;#34;all&amp;#34; target-database: # 下游数据库实例配置 host: &amp;#34;127.0.0.1&amp;#34; port: 4000 user: &amp;#34;root&amp;#34; password: &amp;#34;&amp;#34; # 如果不为空则需经过 dmctl 加密 ## ******** 功能配置集 ********** black-white-list: # 上游数据库实例匹配的表的 black &amp;amp; white list 过滤规则集 bw-rule-1: # 黑白名单配置的名称 do-dbs: [&amp;#34;all_mode&amp;#34;] # 同步哪些库 # ----------- 实例配置 ----------- mysql-instances: - source-id: &amp;#34;mysql-replica-01&amp;#34; # 上游实例或者复制组 ID，参考 `dm-master.</description>
    </item>
    
    <item>
      <title>DM 任务配置文件介绍</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/configure/task-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/configure/task-configuration-file/</guid>
      <description>DM 任务配置文件介绍 本文档主要介绍 Data Migration (DM) 的任务基础配置文件 task_basic.yaml，包含全局配置和实例配置两部分。
完整的任务配置参见 DM 任务完整配置文件介绍
关于各配置项的功能和配置，请参阅数据同步功能。
关键概念 关于包括 source-id 和 DM-worker ID 在内的关键概念的介绍，请参阅关键概念。
基础配置文件示例 下面是一个基础的配置文件示例，通过该示例可以完成简单的数据同步功能。
--- # ----------- 全局配置 ----------- ## ********* 基本信息配置 ********* name: test # 任务名称，需要全局唯一 task-mode: all # 任务模式，可设为 &amp;#34;full&amp;#34;、&amp;#34;incremental&amp;#34;、&amp;#34;all&amp;#34; target-database: # 下游数据库实例配置 host: &amp;#34;127.0.0.1&amp;#34; port: 4000 user: &amp;#34;root&amp;#34; password: &amp;#34;&amp;#34; # 如果不为空则需经过 dmctl 加密 ## ******** 功能配置集 ********** black-white-list: # 上游数据库实例匹配的表的 black &amp;amp; white list 过滤规则集 bw-rule-1: # 黑白名单配置的名称 do-dbs: [&amp;#34;all_mode&amp;#34;] # 同步哪些库 # ----------- 实例配置 ----------- mysql-instances: - source-id: &amp;#34;mysql-replica-01&amp;#34; # 上游实例或者复制组 ID，参考 `dm-master.</description>
    </item>
    
    <item>
      <title>DM 分库分表合并场景</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/usage-scenarios/shard-merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/usage-scenarios/shard-merge/</guid>
      <description>DM 分库分表合并场景 本文介绍如何在分库分表合并场景中使用 Data Migration (DM)。使用场景中，三个上游 MySQL 实例的分库和分表数据需要同步至下游 TiDB 集群。
上游实例 假设上游库结构如下：
  实例 1
   Schema Tables     user information, log_north, log_bak   store_01 sale_01, sale_02   store_02 sale_01, sale_02      实例 2
   Schema Tables     user information, log_east, log_bak   store_01 sale_01, sale_02   store_02 sale_01, sale_02      实例 3</description>
    </item>
    
    <item>
      <title>DM 分库分表合并场景</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/usage-scenarios/shard-merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/usage-scenarios/shard-merge/</guid>
      <description>DM 分库分表合并场景 本文介绍如何在分库分表合并场景中使用 Data Migration (DM)。使用场景中，三个上游 MySQL 实例的分库和分表数据需要同步至下游 TiDB 集群。
上游实例 假设上游库结构如下：
  实例 1
   Schema Tables     user information, log_north, log_bak   store_01 sale_01, sale_02   store_02 sale_01, sale_02      实例 2
   Schema Tables     user information, log_east, log_bak   store_01 sale_01, sale_02   store_02 sale_01, sale_02      实例 3</description>
    </item>
    
    <item>
      <title>DM 分库分表合并场景</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/usage-scenarios/shard-merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/usage-scenarios/shard-merge/</guid>
      <description>DM 分库分表合并场景 本文介绍如何在分库分表合并场景中使用 Data Migration (DM)。使用场景中，三个上游 MySQL 实例的分库和分表数据需要同步至下游 TiDB 集群。
上游实例 假设上游库结构如下：
  实例 1
   Schema Tables     user information, log_north, log_bak   store_01 sale_01, sale_02   store_02 sale_01, sale_02      实例 2
   Schema Tables     user information, log_east, log_bak   store_01 sale_01, sale_02   store_02 sale_01, sale_02      实例 3</description>
    </item>
    
    <item>
      <title>DM 分库分表合并场景</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/usage-scenarios/shard-merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/usage-scenarios/shard-merge/</guid>
      <description>DM 分库分表合并场景 本文介绍如何在分库分表合并场景中使用 Data Migration (DM)。使用场景中，三个上游 MySQL 实例的分库和分表数据需要同步至下游 TiDB 集群。
上游实例 假设上游库结构如下：
  实例 1
   Schema Tables     user information, log_north, log_bak   store_01 sale_01, sale_02   store_02 sale_01, sale_02      实例 2
   Schema Tables     user information, log_east, log_bak   store_01 sale_01, sale_02   store_02 sale_01, sale_02      实例 3</description>
    </item>
    
    <item>
      <title>DM 查询状态</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/query-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/query-status/</guid>
      <description>DM 查询状态 本文介绍 DM（Data Migration）query-status 命令的查询结果、任务状态与子任务状态。
查询结果  » query-status { &amp;#34;result&amp;#34;: true, # 查询是否成功。 &amp;#34;msg&amp;#34;: &amp;#34;&amp;#34;, # 查询失败原因描述。 &amp;#34;tasks&amp;#34;: [ # 迁移 task 列表 { &amp;#34;taskName&amp;#34;: &amp;#34;test-1&amp;#34;, # 任务名称 &amp;#34;taskStatus&amp;#34;: &amp;#34;Running&amp;#34;, # 任务运行状态，包括 “New”，“Running”，“Paused”，“Stopped”，“Finished” 以及 “Error”。 &amp;#34;workers&amp;#34;: [ # 该任务所使用的 DM-workers 列表 &amp;#34;127.0.0.1:8262&amp;#34; ] }, { &amp;#34;taskName&amp;#34;: &amp;#34;test-2&amp;#34;, &amp;#34;taskStatus&amp;#34;: &amp;#34;Error - Some error occurred in subtask&amp;#34;, # 该任务的子任务存在运行错误并暂停的现象 &amp;#34;workers&amp;#34;: [ &amp;#34;127.0.0.1:8262&amp;#34;, &amp;#34;127.0.0.1:8263&amp;#34; ] }, { &amp;#34;taskName&amp;#34;: &amp;#34;test-3&amp;#34;, &amp;#34;taskStatus&amp;#34;: &amp;#34;Error - Relay status is Error&amp;#34;, # 该任务的某个处于 Sync 阶段的子任务对应的 Relay 处理单元出错 &amp;#34;workers&amp;#34;: [ &amp;#34;127.</description>
    </item>
    
    <item>
      <title>DM 查询状态</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/query-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/query-status/</guid>
      <description>DM 查询状态 本文介绍 DM（Data Migration）query-status 命令的查询结果、任务状态与子任务状态。
查询结果  » query-status { &amp;#34;result&amp;#34;: true, # 查询是否成功。 &amp;#34;msg&amp;#34;: &amp;#34;&amp;#34;, # 查询失败原因描述。 &amp;#34;tasks&amp;#34;: [ # 迁移 task 列表 { &amp;#34;taskName&amp;#34;: &amp;#34;test-1&amp;#34;, # 任务名称 &amp;#34;taskStatus&amp;#34;: &amp;#34;Running&amp;#34;, # 任务运行状态，包括 “New”，“Running”，“Paused”，“Stopped”，“Finished” 以及 “Error”。 &amp;#34;workers&amp;#34;: [ # 该任务所使用的 DM-workers 列表 &amp;#34;127.0.0.1:8262&amp;#34; ] }, { &amp;#34;taskName&amp;#34;: &amp;#34;test-2&amp;#34;, &amp;#34;taskStatus&amp;#34;: &amp;#34;Error - Some error occurred in subtask&amp;#34;, # 该任务的子任务存在运行错误并暂停的现象 &amp;#34;workers&amp;#34;: [ &amp;#34;127.0.0.1:8262&amp;#34;, &amp;#34;127.0.0.1:8263&amp;#34; ] }, { &amp;#34;taskName&amp;#34;: &amp;#34;test-3&amp;#34;, &amp;#34;taskStatus&amp;#34;: &amp;#34;Error - Relay status is Error&amp;#34;, # 该任务的某个处于 Sync 阶段的子任务对应的 Relay 处理单元出错 &amp;#34;workers&amp;#34;: [ &amp;#34;127.</description>
    </item>
    
    <item>
      <title>DM 查询状态</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/query-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/query-status/</guid>
      <description>DM 查询状态 本文介绍 DM（Data Migration）query-status 命令的查询结果、任务状态与子任务状态。
查询结果  » query-status { &amp;#34;result&amp;#34;: true, # 查询是否成功。 &amp;#34;msg&amp;#34;: &amp;#34;&amp;#34;, # 查询失败原因描述。 &amp;#34;tasks&amp;#34;: [ # 迁移 task 列表 { &amp;#34;taskName&amp;#34;: &amp;#34;test-1&amp;#34;, # 任务名称 &amp;#34;taskStatus&amp;#34;: &amp;#34;Running&amp;#34;, # 任务运行状态，包括 “New”，“Running”，“Paused”，“Stopped”，“Finished” 以及 “Error”。 &amp;#34;workers&amp;#34;: [ # 该任务所使用的 DM-workers 列表 &amp;#34;127.0.0.1:8262&amp;#34; ] }, { &amp;#34;taskName&amp;#34;: &amp;#34;test-2&amp;#34;, &amp;#34;taskStatus&amp;#34;: &amp;#34;Error - Some error occurred in subtask&amp;#34;, # 该任务的子任务存在运行错误并暂停的现象 &amp;#34;workers&amp;#34;: [ &amp;#34;127.0.0.1:8262&amp;#34;, &amp;#34;127.0.0.1:8263&amp;#34; ] }, { &amp;#34;taskName&amp;#34;: &amp;#34;test-3&amp;#34;, &amp;#34;taskStatus&amp;#34;: &amp;#34;Error - Relay status is Error&amp;#34;, # 该任务的某个处于 Sync 阶段的子任务对应的 Relay 处理单元出错 &amp;#34;workers&amp;#34;: [ &amp;#34;127.</description>
    </item>
    
    <item>
      <title>DM 查询状态</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/query-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/query-status/</guid>
      <description>DM 查询状态 本文介绍 DM（Data Migration）query-status 命令的查询结果、任务状态与子任务状态。
查询结果  » query-status { &amp;#34;result&amp;#34;: true, # 查询是否成功。 &amp;#34;msg&amp;#34;: &amp;#34;&amp;#34;, # 查询失败原因描述。 &amp;#34;tasks&amp;#34;: [ # 迁移 task 列表 { &amp;#34;taskName&amp;#34;: &amp;#34;test-1&amp;#34;, # 任务名称 &amp;#34;taskStatus&amp;#34;: &amp;#34;Running&amp;#34;, # 任务运行状态，包括 “New”，“Running”，“Paused”，“Stopped”，“Finished” 以及 “Error”。 &amp;#34;workers&amp;#34;: [ # 该任务所使用的 DM-workers 列表 &amp;#34;127.0.0.1:8262&amp;#34; ] }, { &amp;#34;taskName&amp;#34;: &amp;#34;test-2&amp;#34;, &amp;#34;taskStatus&amp;#34;: &amp;#34;Error - Some error occurred in subtask&amp;#34;, # 该任务的子任务存在运行错误并暂停的现象 &amp;#34;workers&amp;#34;: [ &amp;#34;127.0.0.1:8262&amp;#34;, &amp;#34;127.0.0.1:8263&amp;#34; ] }, { &amp;#34;taskName&amp;#34;: &amp;#34;test-3&amp;#34;, &amp;#34;taskStatus&amp;#34;: &amp;#34;Error - Relay status is Error&amp;#34;, # 该任务的某个处于 Sync 阶段的子任务对应的 Relay 处理单元出错 &amp;#34;workers&amp;#34;: [ &amp;#34;127.</description>
    </item>
    
    <item>
      <title>DM 版本升级</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/dm-upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/dm-upgrade/</guid>
      <description>DM 版本升级 本文档主要介绍各 DM (Data Migration) 版本间的升级操作步骤。
 注意：
 若无特殊说明，各版本的升级操作均为从前一个有升级指引的版本向当前版本升级。 若无特殊说明，各升级操作示例均假定已经下载了对应版本的 DM 和 DM-Ansible 且 DM binary 存在于 DM-Ansible 的相应目录中（下载 DM binary 可以参考更新组件版本）。 若无特殊说明，各升级操作示例均假定升级前已停止所有同步任务，升级完成后手动重新启动所有同步任务。 以下版本升级指引逆序展示。   升级到 v1.0.3 版本信息 Release Version: v1.0.3 Git Commit Hash: 41426af6cffcff9a325697a3bdebeadc9baa8aa6 Git Branch: release-1.0 UTC Build Time: 2019-12-13 07:04:53 Go Version: go version go1.13 linux/amd64 主要变更  dmctl 支持命令式使用 支持同步 ALTER DATABASE DDL 语句 优化 DM 错误提示信息 修复全量导入模块在暂停或退出时 data race 导致 panic 的问题 修复对下游进行重试操作时，stop-task 和 pause-task 可能不生效的问题  升级操作示例  下载新版本 DM-Ansible，确认 inventory.</description>
    </item>
    
    <item>
      <title>DM 版本升级</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/dm-upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/dm-upgrade/</guid>
      <description>DM 版本升级 本文档主要介绍各 DM (Data Migration) 版本间的升级操作步骤。
 注意：
 若无特殊说明，各版本的升级操作均为从前一个有升级指引的版本向当前版本升级。 若无特殊说明，各升级操作示例均假定已经下载了对应版本的 DM 和 DM-Ansible 且 DM binary 存在于 DM-Ansible 的相应目录中（下载 DM binary 可以参考更新组件版本）。 若无特殊说明，各升级操作示例均假定升级前已停止所有同步任务，升级完成后手动重新启动所有同步任务。 以下版本升级指引逆序展示。   升级到 v1.0.3 版本信息 Release Version: v1.0.3 Git Commit Hash: 41426af6cffcff9a325697a3bdebeadc9baa8aa6 Git Branch: release-1.0 UTC Build Time: 2019-12-13 07:04:53 Go Version: go version go1.13 linux/amd64 主要变更  dmctl 支持命令式使用 支持同步 ALTER DATABASE DDL 语句 优化 DM 错误提示信息 修复全量导入模块在暂停或退出时 data race 导致 panic 的问题 修复对下游进行重试操作时，stop-task 和 pause-task 可能不生效的问题  升级操作示例  下载新版本 DM-Ansible，确认 inventory.</description>
    </item>
    
    <item>
      <title>DM 版本升级</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/dm-upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/dm-upgrade/</guid>
      <description>DM 版本升级 本文档主要介绍 DM (Data Migration) 版本间的升级操作步骤。
 注意：
 若无特殊说明，各版本的升级操作均为从前一个有升级指引的版本向当前版本升级。 若无特殊说明，各升级操作示例均假定已经下载了对应版本的 DM 和 DM-Ansible 且 DM binary 存在于 DM-Ansible 的相应目录中（下载 DM binary 可以参考更新组件版本）。 若无特殊说明，各升级操作示例均假定升级前已停止所有同步任务，升级完成后手动重新启动所有同步任务。 以下版本升级指引逆序展示。   升级到 v1.0.3 版本信息 Release Version: v1.0.3 Git Commit Hash: 41426af6cffcff9a325697a3bdebeadc9baa8aa6 Git Branch: release-1.0 UTC Build Time: 2019-12-13 07:04:53 Go Version: go version go1.13 linux/amd64 主要变更  dmctl 支持命令式使用 支持同步 ALTER DATABASE DDL 语句 优化 DM 错误提示信息 修复全量导入模块在暂停或退出时 data race 导致 panic 的问题 修复对下游进行重试操作时，stop-task 和 pause-task 可能不生效的问题  升级操作示例  下载新版本 DM-Ansible，确认 inventory.</description>
    </item>
    
    <item>
      <title>DM 版本升级</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/dm-upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/dm-upgrade/</guid>
      <description>DM 版本升级 本文档主要介绍各 DM (Data Migration) 版本间的升级操作步骤。
 注意：
 若无特殊说明，各版本的升级操作均为从前一个有升级指引的版本向当前版本升级。 若无特殊说明，各升级操作示例均假定已经下载了对应版本的 DM 和 DM-Ansible 且 DM binary 存在于 DM-Ansible 的相应目录中（下载 DM binary 可以参考更新组件版本）。 若无特殊说明，各升级操作示例均假定升级前已停止所有同步任务，升级完成后手动重新启动所有同步任务。 以下版本升级指引逆序展示。   升级到 v1.0.3 版本信息 Release Version: v1.0.3 Git Commit Hash: 41426af6cffcff9a325697a3bdebeadc9baa8aa6 Git Branch: release-1.0 UTC Build Time: 2019-12-13 07:04:53 Go Version: go version go1.13 linux/amd64 主要变更  dmctl 支持命令式使用 支持同步 ALTER DATABASE DDL 语句 优化 DM 错误提示信息 修复全量导入模块在暂停或退出时 data race 导致 panic 的问题 修复对下游进行重试操作时，stop-task 和 pause-task 可能不生效的问题  升级操作示例  下载新版本 DM-Ansible，确认 inventory.</description>
    </item>
    
    <item>
      <title>DM 监控指标</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/monitor/</guid>
      <description>介绍 DM 的监控指标</description>
    </item>
    
    <item>
      <title>DM 监控指标</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/monitor/</guid>
      <description>介绍 DM 的监控指标</description>
    </item>
    
    <item>
      <title>DM 监控指标</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/monitor/</guid>
      <description>介绍 DM 的监控指标</description>
    </item>
    
    <item>
      <title>DM 监控指标</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/monitor/</guid>
      <description>介绍 DM 的监控指标</description>
    </item>
    
    <item>
      <title>DM 配置简介</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/configure/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/configure/overview/</guid>
      <description>DM 配置简介 本文档简要介绍 DM (Data Migration) 的配置文件和数据同步任务的配置。
配置文件  inventory.ini：使用 DM-Ansible 部署 DM 集群的配置文件。需要根据所选用的集群拓扑来进行编辑。详见编辑 inventory.ini 配置文件。 dm-master.toml：DM-master 进程的配置文件，包括 DM 集群的拓扑信息、MySQL 实例与 DM-worker 之间的关系（必须为一对一的关系）。使用 DM-Ansible 部署 DM 集群时，会自动生成 dm-master.toml 文件，各项配置说明详见 DM-master 配置文件介绍 dm-worker.toml：DM-worker 进程的配置文件，包括上游 MySQL 实例的配置和 relay log 的配置。使用 DM-Ansible 部署 DM 集群时，会自动生成 dm-worker.toml 文件，各项配置说明详见 DM-worker 配置文件介绍  同步任务配置 任务配置文件 使用 DM-Ansible 部署 DM 集群时，&amp;lt;path-to-dm-ansible&amp;gt;/conf 中提供了任务配置文件模板：task.yaml.exmaple 文件。该文件是 DM 同步任务配置的标准文件，每一个具体的任务对应一个 task.yaml 文件。关于该配置文件的详细介绍，参见 任务配置文件。
创建数据同步任务 你可以基于 task.yaml.example 文件来创建数据同步任务，具体步骤如下：
 复制 task.yaml.example 为 your_task.yaml。 参考任务配置文件来修改 your_task.</description>
    </item>
    
    <item>
      <title>DM 配置简介</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/configure/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/configure/overview/</guid>
      <description>DM 配置简介 本文档简要介绍 DM (Data Migration) 的配置文件和数据同步任务的配置。
配置文件  inventory.ini：使用 DM-Ansible 部署 DM 集群的配置文件。需要根据所选用的集群拓扑来进行编辑。详见编辑 inventory.ini 配置文件。 dm-master.toml：DM-master 进程的配置文件，包括 DM 集群的拓扑信息、MySQL 实例与 DM-worker 之间的关系（必须为一对一的关系）。使用 DM-Ansible 部署 DM 集群时，会自动生成 dm-master.toml 文件，各项配置说明详见 DM-master 配置文件介绍 dm-worker.toml：DM-worker 进程的配置文件，包括上游 MySQL 实例的配置和 relay log 的配置。使用 DM-Ansible 部署 DM 集群时，会自动生成 dm-worker.toml 文件，各项配置说明详见 DM-worker 配置文件介绍  同步任务配置 任务配置文件 使用 DM-Ansible 部署 DM 集群时，&amp;lt;path-to-dm-ansible&amp;gt;/conf 中提供了任务配置文件模板：task.yaml.exmaple 文件。该文件是 DM 同步任务配置的标准文件，每一个具体的任务对应一个 task.yaml 文件。关于该配置文件的详细介绍，参见 任务配置文件。
创建数据同步任务 你可以基于 task.yaml.example 文件来创建数据同步任务，具体步骤如下：
 复制 task.yaml.example 为 your_task.yaml。 参考任务配置文件来修改 your_task.</description>
    </item>
    
    <item>
      <title>DM 配置简介</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/configure/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/configure/overview/</guid>
      <description>DM 配置简介 本文档简要介绍 DM (Data Migration) 的配置文件和数据同步任务的配置。
配置文件  inventory.ini：使用 DM-Ansible 部署 DM 集群的配置文件。需要根据所选用的集群拓扑来进行编辑。详见编辑 inventory.ini 配置文件。 dm-master.toml：DM-master 进程的配置文件，包括 DM 集群的拓扑信息、MySQL 实例与 DM-worker 之间的关系（必须为一对一的关系）。使用 DM-Ansible 部署 DM 集群时，会自动生成 dm-master.toml 文件，各项配置说明详见 DM-master 配置文件介绍 dm-worker.toml：DM-worker 进程的配置文件，包括上游 MySQL 实例的配置和 relay log 的配置。使用 DM-Ansible 部署 DM 集群时，会自动生成 dm-worker.toml 文件，各项配置说明详见 DM-worker 配置文件介绍  同步任务配置 任务配置文件 使用 DM-Ansible 部署 DM 集群时，&amp;lt;path-to-dm-ansible&amp;gt;/conf 中提供了任务配置文件模板：task.yaml.exmaple 文件。该文件是 DM 同步任务配置的标准文件，每一个具体的任务对应一个 task.yaml 文件。关于该配置文件的详细介绍，参见 任务配置文件。
创建数据同步任务 你可以基于 task.yaml.example 文件来创建数据同步任务，具体步骤如下：
 复制 task.yaml.example 为 your_task.yaml。 参考任务配置文件来修改 your_task.</description>
    </item>
    
    <item>
      <title>DM 配置简介</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/configure/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/configure/overview/</guid>
      <description>DM 配置简介 本文档简要介绍 DM (Data Migration) 的配置文件和数据同步任务的配置。
配置文件  inventory.ini：使用 DM-Ansible 部署 DM 集群的配置文件。需要根据所选用的集群拓扑来进行编辑。详见编辑 inventory.ini 配置文件。 dm-master.toml：DM-master 进程的配置文件，包括 DM 集群的拓扑信息、MySQL 实例与 DM-worker 之间的关系（必须为一对一的关系）。使用 DM-Ansible 部署 DM 集群时，会自动生成 dm-master.toml 文件，各项配置说明详见 DM-master 配置文件介绍 dm-worker.toml：DM-worker 进程的配置文件，包括上游 MySQL 实例的配置和 relay log 的配置。使用 DM-Ansible 部署 DM 集群时，会自动生成 dm-worker.toml 文件，各项配置说明详见 DM-worker 配置文件介绍  同步任务配置 任务配置文件 使用 DM-Ansible 部署 DM 集群时，&amp;lt;path-to-dm-ansible&amp;gt;/conf 中提供了任务配置文件模板：task.yaml.exmaple 文件。该文件是 DM 同步任务配置的标准文件，每一个具体的任务对应一个 task.yaml 文件。关于该配置文件的详细介绍，参见 任务配置文件。
创建数据同步任务 你可以基于 task.yaml.example 文件来创建数据同步任务，具体步骤如下：
 复制 task.yaml.example 为 your_task.yaml。 参考任务配置文件来修改 your_task.</description>
    </item>
    
    <item>
      <title>DM 集群操作</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/cluster-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/cluster-operations/</guid>
      <description>DM 集群操作 本文介绍 DM 集群操作以及使用 DM-Ansible 管理 DM 集群时需要注意的事项。
启动集群 运行以下命令以启动整个集群的所有组件（包括 DM-master、DM-worker 和监控组件）：
 ansible-playbook start.yml 下线集群 运行以下命令以下线整个集群的所有组件（包括 DM-master、DM-worker 和监控组件）：
 ansible-playbook stop.yml 重启集群组件 在以下情况下，需要更新 DM 集群组件：
 您想要更新组件版本。 发生了严重的错误，您需要重启组件完成临时恢复。 DM 集群所在的机器由于某种原因重启。  重启注意事项 该部分描述重启 DM 各组件时需要了解的事项。
DM-worker 重启事项 全量数据导入过程中：
对于全量数据导入时的 SQL 文件，DM 使用下游数据库记录断点信息，DM-worker 会在本地 meta 文件记录子任务信息。DM-worker 重启时会检查断点信息和本地记录的子任务信息，重启前处于运行中状态的任务会自动恢复数据同步。
增量数据同步过程中：
对于增量数据导入过程中的 binlog，DM 使用下游数据库记录断点信息，并会在同步任务开始或恢复后的第一个五分钟之内开启安全模式。
  未启用 sharding DDL 同步
如果 DM-worker 上运行的任务未启用 sharding DDL 同步功能，DM-worker 重启时会检查断点信息和本地记录的子任务信息，重启前处于运行中状态的任务会自动恢复数据同步。
  已启用 sharding DDL 同步</description>
    </item>
    
    <item>
      <title>DM 集群操作</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/cluster-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/cluster-operations/</guid>
      <description>DM 集群操作 本文介绍 DM 集群操作以及使用 DM-Ansible 管理 DM 集群时需要注意的事项。
启动集群 运行以下命令以启动整个集群的所有组件（包括 DM-master、DM-worker 和监控组件）：
 ansible-playbook start.yml 下线集群 运行以下命令以下线整个集群的所有组件（包括 DM-master、DM-worker 和监控组件）：
 ansible-playbook stop.yml 重启集群组件 在以下情况下，需要更新 DM 集群组件：
 您想要更新组件版本。 发生了严重的错误，您需要重启组件完成临时恢复。 DM 集群所在的机器由于某种原因重启。  重启注意事项 该部分描述重启 DM 各组件时需要了解的事项。
DM-worker 重启事项 全量数据导入过程中：
对于全量数据导入时的 SQL 文件，DM 使用下游数据库记录断点信息，DM-worker 会在本地 meta 文件记录子任务信息。DM-worker 重启时会检查断点信息和本地记录的子任务信息，重启前处于运行中状态的任务会自动恢复数据同步。
增量数据同步过程中：
对于增量数据导入过程中的 binlog，DM 使用下游数据库记录断点信息，并会在同步任务开始或恢复后的第一个五分钟之内开启安全模式。
  未启用 sharding DDL 同步
如果 DM-worker 上运行的任务未启用 sharding DDL 同步功能，DM-worker 重启时会检查断点信息和本地记录的子任务信息，重启前处于运行中状态的任务会自动恢复数据同步。
  已启用 sharding DDL 同步</description>
    </item>
    
    <item>
      <title>DM 集群操作</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/cluster-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/cluster-operations/</guid>
      <description>DM 集群操作 本文介绍 DM 集群操作以及使用 DM-Ansible 管理 DM 集群时需要注意的事项。
启动集群 运行以下命令以启动整个集群的所有组件（包括 DM-master、DM-worker 和监控组件）：
$ ansible-playbook start.yml 下线集群 运行以下命令以下线整个集群的所有组件（包括 DM-master、DM-worker 和监控组件）：
$ ansible-playbook stop.yml 重启集群组件 在以下情况下，需要更新 DM 集群组件：
 您想要更新组件版本。 发生了严重的错误，您需要重启组件完成临时恢复。 DM 集群所在的机器由于某种原因重启。  重启注意事项 该部分描述重启 DM 各组件时需要了解的事项。
DM-worker 重启事项 全量数据导入过程中：
对于全量数据导入时的 SQL 文件，DM 使用下游数据库记录断点信息，DM-worker 会在本地 meta 文件记录子任务信息。DM-worker 重启时会检查断点信息和本地记录的子任务信息，重启前处于运行中状态的任务会自动恢复数据同步。
增量数据同步过程中：
对于增量数据导入过程中的 binlog，DM 使用下游数据库记录断点信息，并会在同步任务开始或恢复后的第一个五分钟之内开启安全模式。
  未启用 sharding DDL 同步
如果 DM-worker 上运行的任务未启用 sharding DDL 同步功能，DM-worker 重启时会检查断点信息和本地记录的子任务信息，重启前处于运行中状态的任务会自动恢复数据同步。
  已启用 sharding DDL 同步</description>
    </item>
    
    <item>
      <title>DM 集群操作</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/cluster-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/cluster-operations/</guid>
      <description>DM 集群操作 本文介绍 DM 集群操作以及使用 DM-Ansible 管理 DM 集群时需要注意的事项。
启动集群 运行以下命令以启动整个集群的所有组件（包括 DM-master、DM-worker 和监控组件）：
 ansible-playbook start.yml 下线集群 运行以下命令以下线整个集群的所有组件（包括 DM-master、DM-worker 和监控组件）：
 ansible-playbook stop.yml 重启集群组件 在以下情况下，需要更新 DM 集群组件：
 您想要更新组件版本。 发生了严重的错误，您需要重启组件完成临时恢复。 DM 集群所在的机器由于某种原因重启。  重启注意事项 该部分描述重启 DM 各组件时需要了解的事项。
DM-worker 重启事项 全量数据导入过程中：
对于全量数据导入时的 SQL 文件，DM 使用下游数据库记录断点信息，DM-worker 会在本地 meta 文件记录子任务信息。DM-worker 重启时会检查断点信息和本地记录的子任务信息，重启前处于运行中状态的任务会自动恢复数据同步。
增量数据同步过程中：
对于增量数据导入过程中的 binlog，DM 使用下游数据库记录断点信息，并会在同步任务开始或恢复后的第一个五分钟之内开启安全模式。
  未启用 sharding DDL 同步
如果 DM-worker 上运行的任务未启用 sharding DDL 同步功能，DM-worker 重启时会检查断点信息和本地记录的子任务信息，重启前处于运行中状态的任务会自动恢复数据同步。
  已启用 sharding DDL 同步</description>
    </item>
    
    <item>
      <title>DM-master Configuration File</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/configure/dm-master-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/configure/dm-master-configuration-file/</guid>
      <description>Learn the configuration file of DM-master.</description>
    </item>
    
    <item>
      <title>DM-master Configuration File</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/configure/dm-master-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/configure/dm-master-configuration-file/</guid>
      <description>Learn the configuration file of DM-master.</description>
    </item>
    
    <item>
      <title>DM-master Configuration File</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/configure/dm-master-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/configure/dm-master-configuration-file/</guid>
      <description>Learn the configuration file of DM-master.</description>
    </item>
    
    <item>
      <title>DM-master Configuration File</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/configure/dm-master-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/configure/dm-master-configuration-file/</guid>
      <description>Learn the configuration file of DM-master.</description>
    </item>
    
    <item>
      <title>DM-master 配置文件介绍</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/configure/dm-master-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/configure/dm-master-configuration-file/</guid>
      <description>DM-master 配置文件介绍 本文介绍 DM-master 的配置文件，包括配置文件示例与配置项说明。
配置文件示例 DM-master 的示例配置文件如下所示：
# log configuration log-file = &amp;#34;dm-master.log&amp;#34; # DM-master listening address master-addr = &amp;#34;:8261&amp;#34; # DM-worker deployment. It will be refined when the new deployment function is available. [[deploy]] source-id = &amp;#34;mysql-replica-01&amp;#34; dm-worker = &amp;#34;172.16.10.72:8262&amp;#34; [[deploy]] source-id = &amp;#34;mysql-replica-02&amp;#34; dm-worker = &amp;#34;172.16.10.73:8262&amp;#34; 配置项说明 Global 配置    配置项 说明     log-file 日志文件，如果不配置，日志会输出到标准输出中。   master-addr DM-master 服务的地址，可以省略 IP 信息，例如：&amp;quot;:8261&amp;rdquo;。    DM-Worker 的配置 配置在 deploy 中，每一个 DM-worker 都需要设置一个 deploy。</description>
    </item>
    
    <item>
      <title>DM-master 配置文件介绍</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/configure/dm-master-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/configure/dm-master-configuration-file/</guid>
      <description>DM-master 配置文件介绍 本文介绍 DM-master 的配置文件，包括配置文件示例与配置项说明。
配置文件示例 DM-master 的示例配置文件如下所示：
# log configuration log-file = &amp;#34;dm-master.log&amp;#34; # DM-master listening address master-addr = &amp;#34;:8261&amp;#34; # DM-worker deployment. It will be refined when the new deployment function is available. [[deploy]] source-id = &amp;#34;mysql-replica-01&amp;#34; dm-worker = &amp;#34;172.16.10.72:8262&amp;#34; [[deploy]] source-id = &amp;#34;mysql-replica-02&amp;#34; dm-worker = &amp;#34;172.16.10.73:8262&amp;#34; 配置项说明 Global 配置    配置项 说明     log-file 日志文件，如果不配置，日志会输出到标准输出中。   master-addr DM-master 服务的地址，可以省略 IP 信息，例如：&amp;quot;:8261&amp;rdquo;。    DM-Worker 的配置 配置在 deploy 中，每一个 DM-worker 都需要设置一个 deploy。</description>
    </item>
    
    <item>
      <title>DM-master 配置文件介绍</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/configure/dm-master-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/configure/dm-master-configuration-file/</guid>
      <description>DM-master 配置文件介绍 本文介绍 DM-master 的配置文件，包括配置文件示例与配置项说明。
配置文件示例 DM-master 的示例配置文件如下所示：
# log configuration log-file = &amp;#34;dm-master.log&amp;#34; # DM-master listening address master-addr = &amp;#34;:8261&amp;#34; # DM-worker deployment. It will be refined when the new deployment function is available. [[deploy]] source-id = &amp;#34;mysql-replica-01&amp;#34; dm-worker = &amp;#34;172.16.10.72:8262&amp;#34; [[deploy]] source-id = &amp;#34;mysql-replica-02&amp;#34; dm-worker = &amp;#34;172.16.10.73:8262&amp;#34; 配置项说明 Global 配置    配置项 说明     log-file 日志文件，如果不配置，日志会输出到标准输出中。   master-addr DM-master 服务的地址，可以省略 IP 信息，例如：&amp;quot;:8261&amp;rdquo;。    DM-Worker 的配置 配置在 deploy 中，每一个 DM-worker 都需要设置一个 deploy。</description>
    </item>
    
    <item>
      <title>DM-master 配置文件介绍</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/configure/dm-master-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/configure/dm-master-configuration-file/</guid>
      <description>DM-master 配置文件介绍 本文介绍 DM-master 的配置文件，包括配置文件示例与配置项说明。
配置文件示例 DM-master 的示例配置文件如下所示：
# log configuration log-file = &amp;#34;dm-master.log&amp;#34; # DM-master listening address master-addr = &amp;#34;:8261&amp;#34; # DM-worker deployment. It will be refined when the new deployment function is available. [[deploy]] source-id = &amp;#34;mysql-replica-01&amp;#34; dm-worker = &amp;#34;172.16.10.72:8262&amp;#34; [[deploy]] source-id = &amp;#34;mysql-replica-02&amp;#34; dm-worker = &amp;#34;172.16.10.73:8262&amp;#34; 配置项说明 Global 配置    配置项 说明     log-file 日志文件，如果不配置，日志会输出到标准输出中。   master-addr DM-master 服务的地址，可以省略 IP 信息，例如：&amp;quot;:8261&amp;rdquo;。    DM-Worker 的配置 配置在 deploy 中，每一个 DM-worker 都需要设置一个 deploy。</description>
    </item>
    
    <item>
      <title>DM-worker Advanced Configuration File</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/configure/dm-worker-configuration-file-full/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/configure/dm-worker-configuration-file-full/</guid>
      <description>Learn the advanced configuration file of DM-worker.</description>
    </item>
    
    <item>
      <title>DM-worker Advanced Configuration File</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/configure/dm-worker-configuration-file-full/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/configure/dm-worker-configuration-file-full/</guid>
      <description>Learn the advanced configuration file of DM-worker.</description>
    </item>
    
    <item>
      <title>DM-worker Advanced Configuration File</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/configure/dm-worker-configuration-file-full/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/configure/dm-worker-configuration-file-full/</guid>
      <description>Learn the advanced configuration file of DM-worker.</description>
    </item>
    
    <item>
      <title>DM-worker Advanced Configuration File</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/configure/dm-worker-configuration-file-full/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/configure/dm-worker-configuration-file-full/</guid>
      <description>Learn the advanced configuration file of DM-worker.</description>
    </item>
    
    <item>
      <title>DM-worker Configuration File</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/configure/dm-worker-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/configure/dm-worker-configuration-file/</guid>
      <description>Learn the configuration file of DM-worker.</description>
    </item>
    
    <item>
      <title>DM-worker Configuration File</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/configure/dm-worker-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/configure/dm-worker-configuration-file/</guid>
      <description>Learn the configuration file of DM-worker.</description>
    </item>
    
    <item>
      <title>DM-worker Configuration File</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/configure/dm-worker-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/configure/dm-worker-configuration-file/</guid>
      <description>Learn the configuration file of DM-worker.</description>
    </item>
    
    <item>
      <title>DM-worker Configuration File</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/configure/dm-worker-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/configure/dm-worker-configuration-file/</guid>
      <description>Learn the configuration file of DM-worker.</description>
    </item>
    
    <item>
      <title>DM-worker Introduction</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/dm-worker-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/dm-worker-intro/</guid>
      <description>Learn the features of DM-worker.</description>
    </item>
    
    <item>
      <title>DM-worker Introduction</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/dm-worker-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/dm-worker-intro/</guid>
      <description>Learn the features of DM-worker.</description>
    </item>
    
    <item>
      <title>DM-worker Introduction</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/dm-worker-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/dm-worker-intro/</guid>
      <description>Learn the features of DM-worker.</description>
    </item>
    
    <item>
      <title>DM-worker Introduction</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/dm-worker-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/dm-worker-intro/</guid>
      <description>Learn the features of DM-worker.</description>
    </item>
    
    <item>
      <title>DM-worker 完整配置说明</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/configure/dm-worker-configuration-file-full/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/configure/dm-worker-configuration-file-full/</guid>
      <description>DM-worker 完整配置说明 本文完整地介绍 DM-worker 的配置，包括配置文件示例与配置项说明。
配置文件示例 # Worker Configuration. # Log configuration. log-level = &amp;#34;info&amp;#34; log-file = &amp;#34;dm-worker.log&amp;#34; # DM-worker listening address. worker-addr = &amp;#34;:8262&amp;#34; # Represents a MySQL/MariaDB instance or a replication group. source-id = &amp;#34;mysql-replica-01&amp;#34; # Server id of slave for binlog replication. # Each instance (master and slave) in the replication group should have a different server id. server-id = 101 # flavor: mysql/mariadb flavor = &amp;#34;mysql&amp;#34; # The directory used to store relay log.</description>
    </item>
    
    <item>
      <title>DM-worker 完整配置说明</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/configure/dm-worker-configuration-file-full/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/configure/dm-worker-configuration-file-full/</guid>
      <description>DM-worker 完整配置说明 本文完整地介绍 DM-worker 的配置，包括配置文件示例与配置项说明。
配置文件示例 # Worker Configuration. # Log configuration. log-level = &amp;#34;info&amp;#34; log-file = &amp;#34;dm-worker.log&amp;#34; # DM-worker listening address. worker-addr = &amp;#34;:8262&amp;#34; # Represents a MySQL/MariaDB instance or a replication group. source-id = &amp;#34;mysql-replica-01&amp;#34; # Server id of slave for binlog replication. # Each instance (master and slave) in the replication group should have a different server id. server-id = 101 # flavor: mysql/mariadb flavor = &amp;#34;mysql&amp;#34; # The directory used to store relay log.</description>
    </item>
    
    <item>
      <title>DM-worker 完整配置说明</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/configure/dm-worker-configuration-file-full/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/configure/dm-worker-configuration-file-full/</guid>
      <description>DM-worker 完整配置说明 本文完整地介绍 DM-worker 的配置，包括配置文件示例与配置项说明。
配置文件示例 # Worker Configuration. # Log configuration. log-level = &amp;#34;info&amp;#34; log-file = &amp;#34;dm-worker.log&amp;#34; # DM-worker listening address. worker-addr = &amp;#34;:8262&amp;#34; # Represents a MySQL/MariaDB instance or a replication group. source-id = &amp;#34;mysql-replica-01&amp;#34; # Server id of slave for binlog replication. # Each instance (master and slave) in the replication group should have a different server id. server-id = 101 # flavor: mysql/mariadb flavor = &amp;#34;mysql&amp;#34; # The directory used to store relay log.</description>
    </item>
    
    <item>
      <title>DM-worker 完整配置说明</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/configure/dm-worker-configuration-file-full/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/configure/dm-worker-configuration-file-full/</guid>
      <description>DM-worker 完整配置说明 本文完整地介绍 DM-worker 的配置，包括配置文件示例与配置项说明。
配置文件示例 # Worker Configuration. # Log configuration. log-level = &amp;#34;info&amp;#34; log-file = &amp;#34;dm-worker.log&amp;#34; # DM-worker listening address. worker-addr = &amp;#34;:8262&amp;#34; # Represents a MySQL/MariaDB instance or a replication group. source-id = &amp;#34;mysql-replica-01&amp;#34; # Server id of slave for binlog replication. # Each instance (master and slave) in the replication group should have a different server id. server-id = 101 # flavor: mysql/mariadb flavor = &amp;#34;mysql&amp;#34; # The directory used to store relay log.</description>
    </item>
    
    <item>
      <title>DM-worker 简介</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/dm-worker-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/dm-worker-intro/</guid>
      <description>DM-worker 简介 DM-worker 是 DM (Data Migration) 的一个组件，负责执行具体的数据同步任务。
其主要功能如下：
 注册为一台 MySQL 或 MariaDB 服务器的 slave。 读取 MySQL 或 MariaDB 的 binlog event，并将这些 event 持久化保存在本地 (relay log)。 单个 DM-worker 支持同步一个 MySQL 或 MariaDB 实例的数据到下游的多个 TiDB 实例。 多个 DM-Worker 支持同步多个 MySQL 或 MariaDB 实例的数据到下游的一个 TiDB 实例。  DM-worker 处理单元 DM-worker 任务包含如下多个逻辑处理单元。
Relay log Relay log 持久化保存从上游 MySQL 或 MariaDB 读取的 binlog，并对 binlog replication 处理单元提供读取 binlog event 的功能。
其原理和功能与 MySQL slave relay log 类似，详见 Slave Relay Log。</description>
    </item>
    
    <item>
      <title>DM-worker 简介</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/dm-worker-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/dm-worker-intro/</guid>
      <description>DM-worker 简介 DM-worker 是 DM (Data Migration) 的一个组件，负责执行具体的数据同步任务。
其主要功能如下：
 注册为一台 MySQL 或 MariaDB 服务器的 slave。 读取 MySQL 或 MariaDB 的 binlog event，并将这些 event 持久化保存在本地 (relay log)。 单个 DM-worker 支持同步一个 MySQL 或 MariaDB 实例的数据到下游的多个 TiDB 实例。 多个 DM-Worker 支持同步多个 MySQL 或 MariaDB 实例的数据到下游的一个 TiDB 实例。  DM-worker 处理单元 DM-worker 任务包含如下多个逻辑处理单元。
Relay log Relay log 持久化保存从上游 MySQL 或 MariaDB 读取的 binlog，并对 binlog replication 处理单元提供读取 binlog event 的功能。
其原理和功能与 MySQL slave relay log 类似，详见 Slave Relay Log。</description>
    </item>
    
    <item>
      <title>DM-worker 简介</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/dm-worker-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/dm-worker-intro/</guid>
      <description>DM-worker 简介 DM-worker 是 DM (Data Migration) 的一个组件，负责执行具体的数据同步任务。
其主要功能如下：
 注册为一台 MySQL 或 MariaDB 服务器的 slave。 读取 MySQL 或 MariaDB 的 binlog event，并将这些 event 持久化保存在本地 (relay log)。 单个 DM-worker 支持同步一个 MySQL 或 MariaDB 实例的数据到下游的多个 TiDB 实例。 多个 DM-Worker 支持同步多个 MySQL 或 MariaDB 实例的数据到下游的一个 TiDB 实例。  DM-worker 处理单元 DM-worker 任务包含如下多个逻辑处理单元。
Relay log Relay log 持久化保存从上游 MySQL 或 MariaDB 读取的 binlog，并对 binlog replication 处理单元提供读取 binlog event 的功能。
其原理和功能与 MySQL slave relay log 类似，详见 Slave Relay Log。</description>
    </item>
    
    <item>
      <title>DM-worker 简介</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/dm-worker-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/dm-worker-intro/</guid>
      <description>DM-worker 简介 DM-worker 是 DM (Data Migration) 的一个组件，负责执行具体的数据同步任务。
其主要功能如下：
 注册为一台 MySQL 或 MariaDB 服务器的 slave。 读取 MySQL 或 MariaDB 的 binlog event，并将这些 event 持久化保存在本地 (relay log)。 单个 DM-worker 支持同步一个 MySQL 或 MariaDB 实例的数据到下游的多个 TiDB 实例。 多个 DM-Worker 支持同步多个 MySQL 或 MariaDB 实例的数据到下游的一个 TiDB 实例。  DM-worker 处理单元 DM-worker 任务包含如下多个逻辑处理单元。
Relay log Relay log 持久化保存从上游 MySQL 或 MariaDB 读取的 binlog，并对 binlog replication 处理单元提供读取 binlog event 的功能。
其原理和功能与 MySQL slave relay log 类似，详见 Slave Relay Log。</description>
    </item>
    
    <item>
      <title>DM-worker 配置文件介绍</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/configure/dm-worker-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/configure/dm-worker-configuration-file/</guid>
      <description>DM-worker 配置文件介绍 本文档主要介绍 DM-worker 的基础配置文件。在一般场景中，用户只需要使用基础配置即可完成 DM-worker 的部署。
完整配置项参考 DM-worker 完整配置说明。
配置文件示例 # Worker Configuration. # Log configuration. log-file = &amp;#34;dm-worker.log&amp;#34; # DM-worker listen address. worker-addr = &amp;#34;:8262&amp;#34; # Represents a MySQL/MariaDB instance or a replication group. source-id = &amp;#34;mysql-replica-01&amp;#34; # Server id of slave for binlog replication. # Each instance (master and slave) in replication group should have different server id. server-id = 101 # flavor: mysql/mariadb flavor = &amp;#34;mysql&amp;#34; # The directory that used to store relay log.</description>
    </item>
    
    <item>
      <title>DM-worker 配置文件介绍</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/configure/dm-worker-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/configure/dm-worker-configuration-file/</guid>
      <description>DM-worker 配置文件介绍 本文档主要介绍 DM-worker 的基础配置文件。在一般场景中，用户只需要使用基础配置即可完成 DM-worker 的部署。
完整配置项参考 DM-worker 完整配置说明。
配置文件示例 # Worker Configuration. # Log configuration. log-file = &amp;#34;dm-worker.log&amp;#34; # DM-worker listen address. worker-addr = &amp;#34;:8262&amp;#34; # Represents a MySQL/MariaDB instance or a replication group. source-id = &amp;#34;mysql-replica-01&amp;#34; # Server id of slave for binlog replication. # Each instance (master and slave) in replication group should have different server id. server-id = 101 # flavor: mysql/mariadb flavor = &amp;#34;mysql&amp;#34; # The directory that used to store relay log.</description>
    </item>
    
    <item>
      <title>DM-worker 配置文件介绍</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/configure/dm-worker-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/configure/dm-worker-configuration-file/</guid>
      <description>DM-worker 配置文件介绍 本文档主要介绍 DM-worker 的基础配置文件。在一般场景中，用户只需要使用基础配置即可完成 DM-worker 的部署。
完整配置项参考 DM-worker 完整配置说明。
配置文件示例 # Worker Configuration. # Log configuration. log-file = &amp;#34;dm-worker.log&amp;#34; # DM-worker listen address. worker-addr = &amp;#34;:8262&amp;#34; # Represents a MySQL/MariaDB instance or a replication group. source-id = &amp;#34;mysql-replica-01&amp;#34; # Server id of slave for binlog replication. # Each instance (master and slave) in replication group should have different server id. server-id = 101 # flavor: mysql/mariadb flavor = &amp;#34;mysql&amp;#34; # The directory that used to store relay log.</description>
    </item>
    
    <item>
      <title>DM-worker 配置文件介绍</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/configure/dm-worker-configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/configure/dm-worker-configuration-file/</guid>
      <description>DM-worker 配置文件介绍 本文档主要介绍 DM-worker 的基础配置文件。在一般场景中，用户只需要使用基础配置即可完成 DM-worker 的部署。
完整配置项参考 DM-worker 完整配置说明。
配置文件示例 # Worker Configuration. # Log configuration. log-file = &amp;#34;dm-worker.log&amp;#34; # DM-worker listen address. worker-addr = &amp;#34;:8262&amp;#34; # Represents a MySQL/MariaDB instance or a replication group. source-id = &amp;#34;mysql-replica-01&amp;#34; # Server id of slave for binlog replication. # Each instance (master and slave) in replication group should have different server id. server-id = 101 # flavor: mysql/mariadb flavor = &amp;#34;mysql&amp;#34; # The directory that used to store relay log.</description>
    </item>
    
    <item>
      <title>DO | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/do/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/do/</guid>
      <description>TiDB 数据库中 DO 的使用概况。</description>
    </item>
    
    <item>
      <title>DO | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/do/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/do/</guid>
      <description>TiDB 数据库中 DO 的使用概况。</description>
    </item>
    
    <item>
      <title>DO | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/do/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/do/</guid>
      <description>TiDB 数据库中 DO 的使用概况。</description>
    </item>
    
    <item>
      <title>DO | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/do/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/do/</guid>
      <description>TiDB 数据库中 DO 的使用概况。</description>
    </item>
    
    <item>
      <title>DO | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/do/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/do/</guid>
      <description>An overview of the usage of DO for the TiDB database.</description>
    </item>
    
    <item>
      <title>DO | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/do/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/do/</guid>
      <description>An overview of the usage of DO for the TiDB database.</description>
    </item>
    
    <item>
      <title>DO | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/do/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/do/</guid>
      <description>An overview of the usage of DO for the TiDB database.</description>
    </item>
    
    <item>
      <title>DO | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/do/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/do/</guid>
      <description>An overview of the usage of DO for the TiDB database.</description>
    </item>
    
    <item>
      <title>Download</title>
      <link>https://pingcap.com/docs/dev/reference/tools/download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/download/</guid>
      <description>Download the most officially maintained versions of TiDB enterprise tools.</description>
    </item>
    
    <item>
      <title>Download</title>
      <link>https://pingcap.com/docs/stable/reference/tools/download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/download/</guid>
      <description>Download the most officially maintained versions of TiDB enterprise tools.</description>
    </item>
    
    <item>
      <title>Download</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/download/</guid>
      <description>Download the most officially maintained versions of TiDB enterprise tools.</description>
    </item>
    
    <item>
      <title>Download</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/download/</guid>
      <description>Download the most officially maintained versions of TiDB enterprise tools.</description>
    </item>
    
    <item>
      <title>Download</title>
      <link>https://pingcap.com/download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/download/</guid>
      <description></description>
    </item>
    
    <item>
      <title>DROP COLUMN</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/drop-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/drop-column/</guid>
      <description>TiDB 数据库中 DROP COLUMN 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP COLUMN</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/drop-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/drop-column/</guid>
      <description>TiDB 数据库中 DROP COLUMN 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP COLUMN</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/drop-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/drop-column/</guid>
      <description>TiDB 数据库中 DROP COLUMN 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP COLUMN</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/drop-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/drop-column/</guid>
      <description>TiDB 数据库中 DROP COLUMN 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP COLUMN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/drop-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/drop-column/</guid>
      <description>An overview of the usage of DROP COLUMN for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP COLUMN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/drop-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/drop-column/</guid>
      <description>An overview of the usage of DROP COLUMN for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP COLUMN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/drop-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/drop-column/</guid>
      <description>An overview of the usage of DROP COLUMN for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP COLUMN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/drop-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/drop-column/</guid>
      <description>An overview of the usage of DROP COLUMN for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP DATABASE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/drop-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/drop-database/</guid>
      <description>TiDB 数据库中 DROP DATABASE 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP DATABASE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/drop-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/drop-database/</guid>
      <description>TiDB 数据库中 DROP DATABASE 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP DATABASE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/drop-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/drop-database/</guid>
      <description>TiDB 数据库中 DROP DATABASE 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP DATABASE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/drop-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/drop-database/</guid>
      <description>TiDB 数据库中 DROP DATABASE 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP DATABASE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/drop-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/drop-database/</guid>
      <description>An overview of the usage of DROP DATABASE for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP DATABASE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/drop-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/drop-database/</guid>
      <description>An overview of the usage of DROP DATABASE for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP DATABASE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/drop-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/drop-database/</guid>
      <description>An overview of the usage of DROP DATABASE for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP DATABASE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/drop-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/drop-database/</guid>
      <description>An overview of the usage of DROP DATABASE for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP INDEX</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/drop-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/drop-index/</guid>
      <description>TiDB 数据库中 DROP INDEX 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP INDEX</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/drop-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/drop-index/</guid>
      <description>TiDB 数据库中 DROP INDEX 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP INDEX</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/drop-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/drop-index/</guid>
      <description>TiDB 数据库中 DROP INDEX 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP INDEX</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/drop-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/drop-index/</guid>
      <description>TiDB 数据库中 DROP INDEX 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP INDEX | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/drop-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/drop-index/</guid>
      <description>An overview of the usage of DROP INDEX for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP INDEX | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/drop-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/drop-index/</guid>
      <description>An overview of the usage of DROP INDEX for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP INDEX | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/drop-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/drop-index/</guid>
      <description>An overview of the usage of DROP INDEX for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP INDEX | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/drop-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/drop-index/</guid>
      <description>An overview of the usage of DROP INDEX for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP SEQUENCE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/drop-sequence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/drop-sequence/</guid>
      <description>TiDB 数据库中 DROP SEQUENCE 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP TABLE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/drop-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/drop-table/</guid>
      <description>TiDB 数据库中 DROP TABLE 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP TABLE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/drop-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/drop-table/</guid>
      <description>TiDB 数据库中 DROP TABLE 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP TABLE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/drop-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/drop-table/</guid>
      <description>TiDB 数据库中 DROP TABLE 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP TABLE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/drop-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/drop-table/</guid>
      <description>TiDB 数据库中 DROP TABLE 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/drop-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/drop-table/</guid>
      <description>An overview of the usage of DROP TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/drop-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/drop-table/</guid>
      <description>An overview of the usage of DROP TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/drop-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/drop-table/</guid>
      <description>An overview of the usage of DROP TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/drop-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/drop-table/</guid>
      <description>An overview of the usage of DROP TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP USER</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/drop-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/drop-user/</guid>
      <description>TiDB 数据库中 DROP USER 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP USER</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/drop-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/drop-user/</guid>
      <description>TiDB 数据库中 DROP USER 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP USER</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/drop-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/drop-user/</guid>
      <description>TiDB 数据库中 DROP USER 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP USER</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/drop-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/drop-user/</guid>
      <description>TiDB 数据库中 DROP USER 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP USER | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/drop-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/drop-user/</guid>
      <description>An overview of the usage of DROP USER for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP USER | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/drop-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/drop-user/</guid>
      <description>An overview of the usage of DROP USER for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP USER | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/drop-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/drop-user/</guid>
      <description>An overview of the usage of DROP USER for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP USER | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/drop-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/drop-user/</guid>
      <description>An overview of the usage of DROP USER for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP VIEW</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/drop-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/drop-view/</guid>
      <description>TiDB 数据库中 DROP VIEW 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP VIEW</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/drop-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/drop-view/</guid>
      <description>TiDB 数据库中 DROP VIEW 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP VIEW</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/drop-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/drop-view/</guid>
      <description>TiDB 数据库中 DROP VIEW 的使用概况。</description>
    </item>
    
    <item>
      <title>DROP VIEW | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/drop-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/drop-view/</guid>
      <description>An overview of the usage of DROP VIEW for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP VIEW | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/drop-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/drop-view/</guid>
      <description>An overview of the usage of DROP VIEW for the TiDB database.</description>
    </item>
    
    <item>
      <title>DROP VIEW | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/drop-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/drop-view/</guid>
      <description>An overview of the usage of DROP VIEW for the TiDB database.</description>
    </item>
    
    <item>
      <title>Enable TLS Authentication</title>
      <link>https://pingcap.com/docs/dev/how-to/secure/enable-tls-between-components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/secure/enable-tls-between-components/</guid>
      <description>Learn how to enable TLS authentication in a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Enable TLS Authentication</title>
      <link>https://pingcap.com/docs/stable/how-to/secure/enable-tls-between-components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/secure/enable-tls-between-components/</guid>
      <description>Learn how to enable TLS authentication in a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Enable TLS Authentication</title>
      <link>https://pingcap.com/docs/v2.1/how-to/secure/enable-tls-between-components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/secure/enable-tls-between-components/</guid>
      <description>Learn how to enable TLS authentication in a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Enable TLS Authentication</title>
      <link>https://pingcap.com/docs/v3.1/how-to/secure/enable-tls-between-components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/secure/enable-tls-between-components/</guid>
      <description>Learn how to enable TLS authentication in a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Enable TLS for MySQL Clients</title>
      <link>https://pingcap.com/docs/dev/how-to/secure/enable-tls-clients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/secure/enable-tls-clients/</guid>
      <description>Use the encrypted connection to ensure data security.</description>
    </item>
    
    <item>
      <title>Enable TLS for MySQL Clients</title>
      <link>https://pingcap.com/docs/stable/how-to/secure/enable-tls-clients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/secure/enable-tls-clients/</guid>
      <description>Use the encrypted connection to ensure data security.</description>
    </item>
    
    <item>
      <title>Enable TLS for MySQL Clients</title>
      <link>https://pingcap.com/docs/v2.1/how-to/secure/enable-tls-clients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/secure/enable-tls-clients/</guid>
      <description>Use the encrypted connection to ensure data security.</description>
    </item>
    
    <item>
      <title>Enable TLS for MySQL Clients</title>
      <link>https://pingcap.com/docs/v3.1/how-to/secure/enable-tls-clients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/secure/enable-tls-clients/</guid>
      <description>Use the encrypted connection to ensure data security.</description>
    </item>
    
    <item>
      <title>Encryption and Compression Functions</title>
      <link>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/encryption-and-compression-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/encryption-and-compression-functions/</guid>
      <description>Learn about the encryption and compression functions.</description>
    </item>
    
    <item>
      <title>Encryption and Compression Functions</title>
      <link>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/encryption-and-compression-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/encryption-and-compression-functions/</guid>
      <description>Learn about the encryption and compression functions.</description>
    </item>
    
    <item>
      <title>Encryption and Compression Functions</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/encryption-and-compression-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/encryption-and-compression-functions/</guid>
      <description>Learn about the encryption and compression functions.</description>
    </item>
    
    <item>
      <title>Encryption and Compression Functions</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/encryption-and-compression-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/encryption-and-compression-functions/</guid>
      <description>Learn about the encryption and compression functions.</description>
    </item>
    
    <item>
      <title>End User Agreement for GCP</title>
      <link>https://pingcap.com/agreements/eula-gcp-marketplace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/agreements/eula-gcp-marketplace/</guid>
      <description>PingCAP Click-Through End User License Agreement Last Updated: October 22, 2018
PLEASE READ THIS PINGCAP END USER LICENSE AGREEMENT (“AGREEMENT”) CAREFULLY BEFORE USING THE TiDB OPERATOR ENTERPRISE SOFTWARE PRODUCT (TOGETHER WITH ANY, UPGRADES OR NEW VERSIONS THEREOF, THE “LICENSED SOFTWARE”) AND ANY OTHER SERVICES OFFERED BY PINGCAP (US) INC. (“PINGCAP”).
By accessing, installing, copying, or otherwise using the Licensed Software and/or by purchasing any services from PingCAP, you or the entity you represent (“You”, “Your” or “Licensee”) agree to be bound by the terms of this Agreement, the PingCAP privacy policy, the PingCAP Terms of Service, and the Google Cloud Platform Marketplace Agreement.</description>
    </item>
    
    <item>
      <title>Error Codes and Troubleshooting</title>
      <link>https://pingcap.com/docs/dev/reference/error-codes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/error-codes/</guid>
      <description>Learn about the error codes and solutions in TiDB.</description>
    </item>
    
    <item>
      <title>Error Codes and Troubleshooting</title>
      <link>https://pingcap.com/docs/stable/reference/error-codes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/error-codes/</guid>
      <description>Learn about the error codes and solutions in TiDB.</description>
    </item>
    
    <item>
      <title>Error Codes and Troubleshooting</title>
      <link>https://pingcap.com/docs/v2.1/reference/error-codes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/error-codes/</guid>
      <description>Learn about the error codes and solutions in TiDB.</description>
    </item>
    
    <item>
      <title>Error Codes and Troubleshooting</title>
      <link>https://pingcap.com/docs/v3.1/reference/error-codes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/error-codes/</guid>
      <description>Learn about the error codes and solutions in TiDB.</description>
    </item>
    
    <item>
      <title>EXECUTE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/execute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/execute/</guid>
      <description>TiDB 数据库中 EXECUTE 的使用概况。</description>
    </item>
    
    <item>
      <title>EXECUTE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/execute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/execute/</guid>
      <description>TiDB 数据库中 EXECUTE 的使用概况。</description>
    </item>
    
    <item>
      <title>EXECUTE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/execute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/execute/</guid>
      <description>TiDB 数据库中 EXECUTE 的使用概况。</description>
    </item>
    
    <item>
      <title>EXECUTE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/execute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/execute/</guid>
      <description>TiDB 数据库中 EXECUTE 的使用概况。</description>
    </item>
    
    <item>
      <title>EXECUTE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/execute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/execute/</guid>
      <description>An overview of the usage of EXECUTE for the TiDB database.</description>
    </item>
    
    <item>
      <title>EXECUTE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/execute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/execute/</guid>
      <description>An overview of the usage of EXECUTE for the TiDB database.</description>
    </item>
    
    <item>
      <title>EXECUTE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/execute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/execute/</guid>
      <description>An overview of the usage of EXECUTE for the TiDB database.</description>
    </item>
    
    <item>
      <title>EXECUTE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/execute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/execute/</guid>
      <description>An overview of the usage of EXECUTE for the TiDB database.</description>
    </item>
    
    <item>
      <title>Execution Plan Binding</title>
      <link>https://pingcap.com/docs/dev/reference/performance/execution-plan-bind/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/performance/execution-plan-bind/</guid>
      <description>Learn about execution plan binding operations in TiDB.</description>
    </item>
    
    <item>
      <title>Execution Plan Binding</title>
      <link>https://pingcap.com/docs/stable/reference/performance/execution-plan-bind/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/performance/execution-plan-bind/</guid>
      <description>Learn about execution plan binding operations in TiDB.</description>
    </item>
    
    <item>
      <title>Execution Plan Binding</title>
      <link>https://pingcap.com/docs/v3.1/reference/performance/execution-plan-bind/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/performance/execution-plan-bind/</guid>
      <description>Learn about execution plan binding operations in TiDB.</description>
    </item>
    
    <item>
      <title>EXPLAIN</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/explain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/explain/</guid>
      <description>TiDB 数据库中 EXPLAIN 的使用概况。</description>
    </item>
    
    <item>
      <title>EXPLAIN</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/explain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/explain/</guid>
      <description>TiDB 数据库中 EXPLAIN 的使用概况。</description>
    </item>
    
    <item>
      <title>EXPLAIN</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/explain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/explain/</guid>
      <description>TiDB 数据库中 EXPLAIN 的使用概况。</description>
    </item>
    
    <item>
      <title>EXPLAIN</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/explain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/explain/</guid>
      <description>TiDB 数据库中 EXPLAIN 的使用概况。</description>
    </item>
    
    <item>
      <title>EXPLAIN</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/query-optimization/explain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/query-optimization/explain/</guid>
      <description>EXPLAIN  Resources  Using EXPLAIN manual page  Transcript Welcome back. In the previous video, I compared query optimization to GPS navigation and an address to being the same as an SQL query. To extend that analogy just a little bit further: a GPS navigation system may have multiple routes to navigate you to the same address. In query optimization parlance, we would say that there are multiple possible execution plans for a query.</description>
    </item>
    
    <item>
      <title>EXPLAIN ANALYZE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/explain-analyze/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/explain-analyze/</guid>
      <description>TiDB 数据库中 EXPLAIN ANALYZE 的使用概况。</description>
    </item>
    
    <item>
      <title>EXPLAIN ANALYZE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/explain-analyze/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/explain-analyze/</guid>
      <description>TiDB 数据库中 EXPLAIN ANALYZE 的使用概况。</description>
    </item>
    
    <item>
      <title>EXPLAIN ANALYZE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/explain-analyze/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/explain-analyze/</guid>
      <description>TiDB 数据库中 EXPLAIN ANALYZE 的使用概况。</description>
    </item>
    
    <item>
      <title>EXPLAIN ANALYZE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/explain-analyze/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/explain-analyze/</guid>
      <description>TiDB 数据库中 EXPLAIN ANALYZE 的使用概况。</description>
    </item>
    
    <item>
      <title>EXPLAIN ANALYZE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/explain-analyze/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/explain-analyze/</guid>
      <description>An overview of the usage of EXPLAIN ANALYZE for the TiDB database.</description>
    </item>
    
    <item>
      <title>EXPLAIN ANALYZE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/explain-analyze/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/explain-analyze/</guid>
      <description>An overview of the usage of EXPLAIN ANALYZE for the TiDB database.</description>
    </item>
    
    <item>
      <title>EXPLAIN ANALYZE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/explain-analyze/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/explain-analyze/</guid>
      <description>An overview of the usage of EXPLAIN ANALYZE for the TiDB database.</description>
    </item>
    
    <item>
      <title>EXPLAIN ANALYZE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/explain-analyze/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/explain-analyze/</guid>
      <description>An overview of the usage of EXPLAIN ANALYZE for the TiDB database.</description>
    </item>
    
    <item>
      <title>EXPLAIN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/explain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/explain/</guid>
      <description>An overview of the usage of EXPLAIN for the TiDB database.</description>
    </item>
    
    <item>
      <title>EXPLAIN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/explain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/explain/</guid>
      <description>An overview of the usage of EXPLAIN for the TiDB database.</description>
    </item>
    
    <item>
      <title>EXPLAIN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/explain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/explain/</guid>
      <description>An overview of the usage of EXPLAIN for the TiDB database.</description>
    </item>
    
    <item>
      <title>EXPLAIN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/explain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/explain/</guid>
      <description>An overview of the usage of EXPLAIN for the TiDB database.</description>
    </item>
    
    <item>
      <title>Explore SQL with TiDB</title>
      <link>https://pingcap.com/docs/dev/how-to/get-started/explore-sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/get-started/explore-sql/</guid>
      <description>Learn about the basic SQL statements for the TiDB database.</description>
    </item>
    
    <item>
      <title>Explore SQL with TiDB</title>
      <link>https://pingcap.com/docs/stable/how-to/get-started/explore-sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/get-started/explore-sql/</guid>
      <description>Learn about the basic SQL statements for the TiDB database.</description>
    </item>
    
    <item>
      <title>Explore SQL with TiDB</title>
      <link>https://pingcap.com/docs/v2.1/how-to/get-started/explore-sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/get-started/explore-sql/</guid>
      <description>Learn about the basic SQL statements for the TiDB database.</description>
    </item>
    
    <item>
      <title>Explore SQL with TiDB</title>
      <link>https://pingcap.com/docs/v3.1/how-to/get-started/explore-sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/get-started/explore-sql/</guid>
      <description>Learn about the basic SQL statements for the TiDB database.</description>
    </item>
    
    <item>
      <title>Expression Syntax</title>
      <link>https://pingcap.com/docs/dev/reference/sql/language-structure/expression-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/language-structure/expression-syntax/</guid>
      <description>Learn about the expression syntax in TiDB.</description>
    </item>
    
    <item>
      <title>Expression Syntax</title>
      <link>https://pingcap.com/docs/stable/reference/sql/language-structure/expression-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/language-structure/expression-syntax/</guid>
      <description>Learn about the expression syntax in TiDB.</description>
    </item>
    
    <item>
      <title>Expression Syntax</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/language-structure/expression-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/language-structure/expression-syntax/</guid>
      <description>Learn about the expression syntax in TiDB.</description>
    </item>
    
    <item>
      <title>Expression Syntax</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/language-structure/expression-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/language-structure/expression-syntax/</guid>
      <description>Learn about the expression syntax in TiDB.</description>
    </item>
    
    <item>
      <title>FAQs After Upgrade</title>
      <link>https://pingcap.com/docs/dev/faq/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/faq/upgrade/</guid>
      <description>Learn about the FAQs after upgrading TiDB.</description>
    </item>
    
    <item>
      <title>FAQs After Upgrade</title>
      <link>https://pingcap.com/docs/stable/faq/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/faq/upgrade/</guid>
      <description>Learn about the FAQs after upgrading TiDB.</description>
    </item>
    
    <item>
      <title>FAQs After Upgrade</title>
      <link>https://pingcap.com/docs/v2.1/faq/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/faq/upgrade/</guid>
      <description>Learn about the FAQs after upgrading TiDB.</description>
    </item>
    
    <item>
      <title>FAQs After Upgrade</title>
      <link>https://pingcap.com/docs/v3.1/faq/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/faq/upgrade/</guid>
      <description>Learn about the FAQs after upgrading TiDB.</description>
    </item>
    
    <item>
      <title>Figma 快速上手教程</title>
      <link>https://pingcap.com/docs-cn/dev/resources/figma-quick-start-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/resources/figma-quick-start-guide/</guid>
      <description>本文档介绍如何使用 Figma 绘制图片。</description>
    </item>
    
    <item>
      <title>Figma 快速上手教程</title>
      <link>https://pingcap.com/docs-cn/stable/resources/figma-quick-start-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/resources/figma-quick-start-guide/</guid>
      <description>本文档介绍如何使用 Figma 绘制图片。</description>
    </item>
    
    <item>
      <title>Figma 快速上手教程</title>
      <link>https://pingcap.com/docs-cn/v2.1/resources/figma-quick-start-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/resources/figma-quick-start-guide/</guid>
      <description>本文档介绍如何使用 Figma 绘制图片。</description>
    </item>
    
    <item>
      <title>Figma 快速上手教程</title>
      <link>https://pingcap.com/docs-cn/v3.1/resources/figma-quick-start-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/resources/figma-quick-start-guide/</guid>
      <description>本文档介绍如何使用 Figma 绘制图片。</description>
    </item>
    
    <item>
      <title>FLASHBACK TABLE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/flashback-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/flashback-table/</guid>
      <description>FLASHBACK TABLE 在 TiDB 4.0 中，引入了 FLASHBACK TABLE 语法，其功能是在 Garbage Collection (GC) life time 时间内，可以用 FLASHBACK TABLE 语句来恢复被 DROP 或 TRUNCATE 删除的表以及数据。
查询集群的 tikv_gc_safe_point 和 tikv_gc_life_time。只要被 DROP 或 TRUNCATE 删除的表是在 tikv_gc_safe_point 时间之后，都能用 FLASHBACK TABLE 语法来恢复。
 select * from mysql.tidb where variable_name in (&amp;#39;tikv_gc_safe_point&amp;#39;,&amp;#39;tikv_gc_life_time&amp;#39;); 语法  FLASHBACK TABLE table_name [TO other_table_name] 注意事项 如果删除了一张表并过了 GC lifetime，就不能再用 FLASHBACK TABLE 语句来恢复被删除的数据了，否则会返回错误，错误类似于 Can&#39;t find dropped/truncated table &#39;t&#39; in GC safe point 2020-03-16 16:34:52 +0800 CST。</description>
    </item>
    
    <item>
      <title>FLUSH PRIVILEGES</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/flush-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/flush-privileges/</guid>
      <description>TiDB 数据库中 FLUSH PRIVILEGES 的使用概况。</description>
    </item>
    
    <item>
      <title>FLUSH PRIVILEGES</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/flush-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/flush-privileges/</guid>
      <description>TiDB 数据库中 FLUSH PRIVILEGES 的使用概况。</description>
    </item>
    
    <item>
      <title>FLUSH PRIVILEGES</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/flush-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/flush-privileges/</guid>
      <description>TiDB 数据库中 FLUSH PRIVILEGES 的使用概况。</description>
    </item>
    
    <item>
      <title>FLUSH PRIVILEGES</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/flush-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/flush-privileges/</guid>
      <description>TiDB 数据库中 FLUSH PRIVILEGES 的使用概况。</description>
    </item>
    
    <item>
      <title>FLUSH PRIVILEGES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/flush-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/flush-privileges/</guid>
      <description>An overview of the usage of FLUSH PRIVILEGES for the TiDB database.</description>
    </item>
    
    <item>
      <title>FLUSH PRIVILEGES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/flush-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/flush-privileges/</guid>
      <description>An overview of the usage of FLUSH PRIVILEGES for the TiDB database.</description>
    </item>
    
    <item>
      <title>FLUSH PRIVILEGES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/flush-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/flush-privileges/</guid>
      <description>An overview of the usage of FLUSH PRIVILEGES for the TiDB database.</description>
    </item>
    
    <item>
      <title>FLUSH PRIVILEGES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/flush-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/flush-privileges/</guid>
      <description>An overview of the usage of FLUSH PRIVILEGES for the TiDB database.</description>
    </item>
    
    <item>
      <title>FLUSH STATUS</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/flush-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/flush-status/</guid>
      <description>TiDB 数据库中 FLUSH STATUS 的使用概况。</description>
    </item>
    
    <item>
      <title>FLUSH STATUS</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/flush-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/flush-status/</guid>
      <description>TiDB 数据库中 FLUSH STATUS 的使用概况。</description>
    </item>
    
    <item>
      <title>FLUSH STATUS</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/flush-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/flush-status/</guid>
      <description>TiDB 数据库中 FLUSH STATUS 的使用概况。</description>
    </item>
    
    <item>
      <title>FLUSH STATUS</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/flush-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/flush-status/</guid>
      <description>TiDB 数据库中 FLUSH STATUS 的使用概况。</description>
    </item>
    
    <item>
      <title>FLUSH STATUS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/flush-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/flush-status/</guid>
      <description>An overview of the usage of FLUSH STATUS for the TiDB database.</description>
    </item>
    
    <item>
      <title>FLUSH STATUS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/flush-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/flush-status/</guid>
      <description>An overview of the usage of FLUSH STATUS for the TiDB database.</description>
    </item>
    
    <item>
      <title>FLUSH STATUS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/flush-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/flush-status/</guid>
      <description>An overview of the usage of FLUSH STATUS for the TiDB database.</description>
    </item>
    
    <item>
      <title>FLUSH STATUS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/flush-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/flush-status/</guid>
      <description>An overview of the usage of FLUSH STATUS for the TiDB database.</description>
    </item>
    
    <item>
      <title>FLUSH TABLES</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/flush-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/flush-tables/</guid>
      <description>TiDB 数据库中 FLUSH TABLES 的使用概况。</description>
    </item>
    
    <item>
      <title>FLUSH TABLES</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/flush-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/flush-tables/</guid>
      <description>TiDB 数据库中 FLUSH TABLES 的使用概况。</description>
    </item>
    
    <item>
      <title>FLUSH TABLES</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/flush-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/flush-tables/</guid>
      <description>TiDB 数据库中 FLUSH TABLES 的使用概况。</description>
    </item>
    
    <item>
      <title>FLUSH TABLES</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/flush-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/flush-tables/</guid>
      <description>TiDB 数据库中 FLUSH TABLES 的使用概况。</description>
    </item>
    
    <item>
      <title>FLUSH TABLES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/flush-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/flush-tables/</guid>
      <description>An overview of the usage of FLUSH TABLES for the TiDB database.</description>
    </item>
    
    <item>
      <title>FLUSH TABLES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/flush-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/flush-tables/</guid>
      <description>An overview of the usage of FLUSH TABLES for the TiDB database.</description>
    </item>
    
    <item>
      <title>FLUSH TABLES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/flush-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/flush-tables/</guid>
      <description>An overview of the usage of FLUSH TABLES for the TiDB database.</description>
    </item>
    
    <item>
      <title>FLUSH TABLES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/flush-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/flush-tables/</guid>
      <description>An overview of the usage of FLUSH TABLES for the TiDB database.</description>
    </item>
    
    <item>
      <title>Follower Read</title>
      <link>https://pingcap.com/docs-cn/dev/reference/performance/follower-read/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/performance/follower-read/</guid>
      <description>了解 Follower Read 的使用与实现。</description>
    </item>
    
    <item>
      <title>Follower Read</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/performance/follower-read/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/performance/follower-read/</guid>
      <description>了解 Follower Read 的使用与实现。</description>
    </item>
    
    <item>
      <title>Follower Read</title>
      <link>https://pingcap.com/docs/dev/reference/performance/follower-read/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/performance/follower-read/</guid>
      <description>This document describes the use and implementation of Follower Read.</description>
    </item>
    
    <item>
      <title>Follower Read</title>
      <link>https://pingcap.com/docs/v3.1/reference/performance/follower-read/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/performance/follower-read/</guid>
      <description>This document describes the use and implementation of Follower Read.</description>
    </item>
    
    <item>
      <title>Format and Housekeeping</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/introduction/format-and-housekeeping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/introduction/format-and-housekeeping/</guid>
      <description>Format and Housekeeping  Transcript Before we get deep in the weeds, I want to cover some housekeeping items.
Starting off, let&#39;s talk about the format. TiDB for MySQL DBAs uses a combination of videos and hands-on exercises. You will need a Google Cloud Platform, or GCP, account in order to complete the tutorials, and a Google Kubernetes Engine cluster of 3x n1-standard instances. GCP comes with a $300 credit for the first year of usage, which is more than enough to complete this course.</description>
    </item>
    
    <item>
      <title>Function and Operator Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/reference/</guid>
      <description>Learn how to use the functions and operators.</description>
    </item>
    
    <item>
      <title>Function and Operator Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/reference/</guid>
      <description>Learn how to use the functions and operators.</description>
    </item>
    
    <item>
      <title>Function and Operator Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/reference/</guid>
      <description>Learn how to use the functions and operators.</description>
    </item>
    
    <item>
      <title>Function and Operator Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/reference/</guid>
      <description>Learn how to use the functions and operators.</description>
    </item>
    
    <item>
      <title>GC Configuration</title>
      <link>https://pingcap.com/docs/dev/reference/garbage-collection/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/garbage-collection/configuration/</guid>
      <description>Learn about GC configuration parameters.</description>
    </item>
    
    <item>
      <title>GC Configuration</title>
      <link>https://pingcap.com/docs/stable/reference/garbage-collection/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/garbage-collection/configuration/</guid>
      <description>Learn about GC configuration parameters.</description>
    </item>
    
    <item>
      <title>GC Configuration</title>
      <link>https://pingcap.com/docs/v3.1/reference/garbage-collection/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/garbage-collection/configuration/</guid>
      <description>Learn about GC configuration parameters.</description>
    </item>
    
    <item>
      <title>GC Overview</title>
      <link>https://pingcap.com/docs/dev/reference/garbage-collection/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/garbage-collection/overview/</guid>
      <description>Learn about Garbage Collection in TiDB.</description>
    </item>
    
    <item>
      <title>GC Overview</title>
      <link>https://pingcap.com/docs/stable/reference/garbage-collection/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/garbage-collection/overview/</guid>
      <description>Learn about Garbage Collection in TiDB.</description>
    </item>
    
    <item>
      <title>GC Overview</title>
      <link>https://pingcap.com/docs/v3.1/reference/garbage-collection/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/garbage-collection/overview/</guid>
      <description>Learn about Garbage Collection in TiDB.</description>
    </item>
    
    <item>
      <title>GC 机制简介</title>
      <link>https://pingcap.com/docs-cn/dev/reference/garbage-collection/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/garbage-collection/overview/</guid>
      <description>GC 机制简介 TiDB 的事务的实现采用了 MVCC（多版本并发控制）机制，当新写入的数据覆盖旧的数据时，旧的数据不会被替换掉，而是与新写入的数据同时保留，并以时间戳来区分版本。GC 的任务便是清理不再需要的旧数据。
整体流程 一个 TiDB 集群中会有一个 TiDB 实例被选举为 GC leader，GC 的运行由 GC leader 来控制。
GC 会被定期触发，默认情况下每 10 分钟一次。每次 GC 时，首先，TiDB 会计算一个称为 safe point 的时间戳（默认为当前时间减去 10 分钟），接下来 TiDB 会在保证 safe point 之后的快照全部拥有正确数据的前提下，删除更早的过期数据。具体而言，分为以下三个步骤：
 Resolve Locks Delete Ranges Do GC  Resolve Locks TiDB 的事务是基于 Google Percolator 模型实现的，事务的提交是一个两阶段提交的过程。第一阶段完成时，所有涉及的 key 会加上一个锁，其中一个锁会被设定为 Primary，其余的锁（Secondary）则会指向 Primary；第二阶段会将 Primary 锁所在的 key 加上一个 Write 记录，并去除锁。这里的 Write 记录就是历史上对该 key 进行写入或删除，或者该 key 上发生事务回滚的记录。Primary 锁被替换为何种 Write 记录标志着该事务提交成功与否。接下来，所有 Secondary 锁也会被依次替换。如果替换这些 Secondary 锁的线程死掉了，锁就残留了下来。</description>
    </item>
    
    <item>
      <title>GC 机制简介</title>
      <link>https://pingcap.com/docs-cn/stable/reference/garbage-collection/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/garbage-collection/overview/</guid>
      <description>GC 机制简介 TiDB 的事务的实现采用了 MVCC（多版本并发控制）机制，当新写入的数据覆盖旧的数据时，旧的数据不会被替换掉，而是与新写入的数据同时保留，并以时间戳来区分版本。GC 的任务便是清理不再需要的旧数据。
整体流程 一个 TiDB 集群中会有一个 TiDB 实例被选举为 GC leader，GC 的运行由 GC leader 来控制。
GC 会被定期触发，默认情况下每 10 分钟一次。每次 GC 时，首先，TiDB 会计算一个称为 safe point 的时间戳（默认为当前时间减去 10 分钟），接下来 TiDB 会在保证 safe point 之后的快照全部拥有正确数据的前提下，删除更早的过期数据。具体而言，分为以下三个步骤：
 Resolve Locks Delete Ranges Do GC  Resolve Locks TiDB 的事务是基于 Google Percolator 模型实现的，事务的提交是一个两阶段提交的过程。第一阶段完成时，所有涉及的 key 会加上一个锁，其中一个锁会被设定为 Primary，其余的锁（Secondary）则会指向 Primary；第二阶段会将 Primary 锁所在的 key 加上一个 Write 记录，并去除锁。这里的 Write 记录就是历史上对该 key 进行写入或删除，或者该 key 上发生事务回滚的记录。Primary 锁被替换为何种 Write 记录标志着该事务提交成功与否。接下来，所有 Secondary 锁也会被依次替换。如果替换这些 Secondary 锁的线程死掉了，锁就残留了下来。</description>
    </item>
    
    <item>
      <title>GC 机制简介</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/garbage-collection/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/garbage-collection/overview/</guid>
      <description>GC 机制简介 TiDB 的事务的实现采用了 MVCC（多版本并发控制）机制，当新写入的数据覆盖旧的数据时，旧的数据不会被替换掉，而是与新写入的数据同时保留，并以时间戳来区分版本。GC 的任务便是清理不再需要的旧数据。
整体流程 一个 TiDB 集群中会有一个 TiDB 实例被选举为 GC leader，GC 的运行由 GC leader 来控制。
GC 会被定期触发，默认情况下每 10 分钟一次。每次 GC 时，首先，TiDB 会计算一个称为 safe point 的时间戳（默认为当前时间减去 10 分钟），接下来 TiDB 会在保证 safe point 之后的快照全部拥有正确数据的前提下，删除更早的过期数据。具体而言，分为以下三个步骤：
 Resolve Locks Delete Ranges Do GC  Resolve Locks TiDB 的事务是基于 Google Percolator 模型实现的，事务的提交是一个两阶段提交的过程。第一阶段完成时，所有涉及的 key 会加上一个锁，其中一个锁会被设定为 Primary，其余的锁（Secondary）则会指向 Primary；第二阶段会将 Primary 锁所在的 key 加上一个 Write 记录，并去除锁。这里的 Write 记录就是历史上对该 key 进行写入或删除，或者该 key 上发生事务回滚的记录。Primary 锁被替换为何种 Write 记录标志着该事务提交成功与否。接下来，所有 Secondary 锁也会被依次替换。如果替换这些 Secondary 锁的线程死掉了，锁就残留了下来。</description>
    </item>
    
    <item>
      <title>GC 配置</title>
      <link>https://pingcap.com/docs-cn/dev/reference/garbage-collection/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/garbage-collection/configuration/</guid>
      <description>GC 配置 TiDB 的 GC 相关的配置存储于 mysql.tidb 系统表中，可以通过 SQL 语句对这些参数进行查询和更改：
 select VARIABLE_NAME, VARIABLE_VALUE from mysql.tidb; +--------------------------+----------------------------------------------------------------------------------------------------+ | VARIABLE_NAME | VARIABLE_VALUE | +--------------------------+----------------------------------------------------------------------------------------------------+ | bootstrapped | True | | tidb_server_version | 33 | | system_tz | UTC | | tikv_gc_leader_uuid | 5afd54a0ea40005 | | tikv_gc_leader_desc | host:tidb-cluster-tidb-0, pid:215, start at 2019-07-15 11:09:14.029668932 +0000 UTC m=+0.463731223 | | tikv_gc_leader_lease | 20190715-12:12:14 +0000 | | tikv_gc_enable | true | | tikv_gc_run_interval | 10m0s | | tikv_gc_life_time | 10m0s | | tikv_gc_last_run_time | 20190715-12:09:14 +0000 | | tikv_gc_safe_point | 20190715-11:59:14 +0000 | | tikv_gc_auto_concurrency | true | | tikv_gc_mode | distributed | +--------------------------+----------------------------------------------------------------------------------------------------+ 13 rows in set (0.</description>
    </item>
    
    <item>
      <title>GC 配置</title>
      <link>https://pingcap.com/docs-cn/stable/reference/garbage-collection/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/garbage-collection/configuration/</guid>
      <description>GC 配置 TiDB 的 GC 相关的配置存储于 mysql.tidb 系统表中，可以通过 SQL 语句对这些参数进行查询和更改：
 select VARIABLE_NAME, VARIABLE_VALUE from mysql.tidb; +--------------------------+----------------------------------------------------------------------------------------------------+ | VARIABLE_NAME | VARIABLE_VALUE | +--------------------------+----------------------------------------------------------------------------------------------------+ | bootstrapped | True | | tidb_server_version | 33 | | system_tz | UTC | | tikv_gc_leader_uuid | 5afd54a0ea40005 | | tikv_gc_leader_desc | host:tidb-cluster-tidb-0, pid:215, start at 2019-07-15 11:09:14.029668932 +0000 UTC m=+0.463731223 | | tikv_gc_leader_lease | 20190715-12:12:14 +0000 | | tikv_gc_enable | true | | tikv_gc_run_interval | 10m0s | | tikv_gc_life_time | 10m0s | | tikv_gc_last_run_time | 20190715-12:09:14 +0000 | | tikv_gc_safe_point | 20190715-11:59:14 +0000 | | tikv_gc_auto_concurrency | true | | tikv_gc_mode | distributed | +--------------------------+----------------------------------------------------------------------------------------------------+ 13 rows in set (0.</description>
    </item>
    
    <item>
      <title>GC 配置</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/garbage-collection/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/garbage-collection/configuration/</guid>
      <description>GC 配置 TiDB 的 GC 相关的配置存储于 mysql.tidb 系统表中，可以通过 SQL 语句对这些参数进行查询和更改：
 select VARIABLE_NAME, VARIABLE_VALUE from mysql.tidb; +--------------------------+----------------------------------------------------------------------------------------------------+ | VARIABLE_NAME | VARIABLE_VALUE | +--------------------------+----------------------------------------------------------------------------------------------------+ | bootstrapped | True | | tidb_server_version | 33 | | system_tz | UTC | | tikv_gc_leader_uuid | 5afd54a0ea40005 | | tikv_gc_leader_desc | host:tidb-cluster-tidb-0, pid:215, start at 2019-07-15 11:09:14.029668932 +0000 UTC m=+0.463731223 | | tikv_gc_leader_lease | 20190715-12:12:14 +0000 | | tikv_gc_enable | true | | tikv_gc_run_interval | 10m0s | | tikv_gc_life_time | 10m0s | | tikv_gc_last_run_time | 20190715-12:09:14 +0000 | | tikv_gc_safe_point | 20190715-11:59:14 +0000 | | tikv_gc_auto_concurrency | true | | tikv_gc_mode | distributed | +--------------------------+----------------------------------------------------------------------------------------------------+ 13 rows in set (0.</description>
    </item>
    
    <item>
      <title>Generate Self-signed Certificates</title>
      <link>https://pingcap.com/docs/dev/how-to/secure/generate-self-signed-certificates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/secure/generate-self-signed-certificates/</guid>
      <description>Use &lt;code&gt;cfssl&lt;/code&gt; to generate self-signed certificates.</description>
    </item>
    
    <item>
      <title>Generate Self-signed Certificates</title>
      <link>https://pingcap.com/docs/stable/how-to/secure/generate-self-signed-certificates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/secure/generate-self-signed-certificates/</guid>
      <description>Use &lt;code&gt;cfssl&lt;/code&gt; to generate self-signed certificates.</description>
    </item>
    
    <item>
      <title>Generate Self-signed Certificates</title>
      <link>https://pingcap.com/docs/v2.1/how-to/secure/generate-self-signed-certificates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/secure/generate-self-signed-certificates/</guid>
      <description>Use &lt;code&gt;cfssl&lt;/code&gt; to generate self-signed certificates.</description>
    </item>
    
    <item>
      <title>Generate Self-signed Certificates</title>
      <link>https://pingcap.com/docs/v3.1/how-to/secure/generate-self-signed-certificates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/secure/generate-self-signed-certificates/</guid>
      <description>Use &lt;code&gt;cfssl&lt;/code&gt; to generate self-signed certificates.</description>
    </item>
    
    <item>
      <title>Generated Columns</title>
      <link>https://pingcap.com/docs/dev/reference/sql/generated-columns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/generated-columns/</guid>
      <description>Learn how to use generated columns.</description>
    </item>
    
    <item>
      <title>Generated Columns</title>
      <link>https://pingcap.com/docs/stable/reference/sql/generated-columns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/generated-columns/</guid>
      <description>Learn how to use generated columns.</description>
    </item>
    
    <item>
      <title>Generated Columns</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/generated-columns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/generated-columns/</guid>
      <description>Learn how to use generated columns</description>
    </item>
    
    <item>
      <title>Generated Columns</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/generated-columns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/generated-columns/</guid>
      <description>Learn how to use generated columns.</description>
    </item>
    
    <item>
      <title>Glossary</title>
      <link>https://pingcap.com/docs/dev/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/glossary/</guid>
      <description>Glossaries about TiDB.</description>
    </item>
    
    <item>
      <title>Glossary</title>
      <link>https://pingcap.com/docs/stable/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/glossary/</guid>
      <description>Glossaries about TiDB.</description>
    </item>
    
    <item>
      <title>Glossary</title>
      <link>https://pingcap.com/docs/v2.1/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/glossary/</guid>
      <description>Glossaries about TiDB.</description>
    </item>
    
    <item>
      <title>Glossary</title>
      <link>https://pingcap.com/docs/v3.1/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/glossary/</guid>
      <description>Glossaries about TiDB.</description>
    </item>
    
    <item>
      <title>Google Cloud Platform</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/introduction/google-cloud-platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/introduction/google-cloud-platform/</guid>
      <description>Google Cloud Platform Sign up for a $300 free trial for Google Cloud Platform.
A valid credit card is required. Provided you complete the course in a short enough time frame, your credit card will not be charged. PingCAP is not responsible for any usage fees incurred.</description>
    </item>
    
    <item>
      <title>Google&#39;s F1 DDL Algorithm</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/ddl/f1-ddl-algorithm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/ddl/f1-ddl-algorithm/</guid>
      <description>Google&#39;s F1 DDL Algorithm  Resources  F1 Paper  Transcript So in our previous video, I asserted that DDL in TiDB is both online, and despite being a distributed system, is able to externalize schema changes everywhere at the same time. So how does it work?
The short version is that TiDB uses the methodology described in Google&#39;s Online, Asynchronous Schema Change in F1 paper. Let me try and summarize the methodology using an analogy:</description>
    </item>
    
    <item>
      <title>GRANT &lt;privileges&gt;</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/grant-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/grant-privileges/</guid>
      <description>&lt;p&gt;TiDB 数据库中 GRANT &lt;privileges&gt; 的使用概况。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GRANT &lt;privileges&gt;</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/grant-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/grant-privileges/</guid>
      <description>&lt;p&gt;TiDB 数据库中 GRANT &lt;privileges&gt; 的使用概况。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GRANT &lt;privileges&gt;</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/grant-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/grant-privileges/</guid>
      <description>&lt;p&gt;TiDB 数据库中 GRANT &lt;privileges&gt; 的使用概况。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GRANT &lt;privileges&gt;</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/grant-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/grant-privileges/</guid>
      <description>&lt;p&gt;TiDB 数据库中 GRANT &lt;privileges&gt; 的使用概况。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GRANT &lt;privileges&gt; | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/grant-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/grant-privileges/</guid>
      <description>&lt;p&gt;An overview of the usage of GRANT &lt;privileges&gt; for the TiDB database.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GRANT &lt;privileges&gt; | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/grant-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/grant-privileges/</guid>
      <description>&lt;p&gt;An overview of the usage of GRANT &lt;privileges&gt; for the TiDB database.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GRANT &lt;privileges&gt; | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/grant-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/grant-privileges/</guid>
      <description>&lt;p&gt;An overview of the usage of GRANT &lt;privileges&gt; for the TiDB database.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GRANT &lt;privileges&gt; | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/grant-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/grant-privileges/</guid>
      <description>&lt;p&gt;An overview of the usage of GRANT &lt;privileges&gt; for the TiDB database.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GROUP BY 聚合函数</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/aggregate-group-by-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/aggregate-group-by-functions/</guid>
      <description>GROUP BY 聚合函数 本文将详细介绍 TiDB 支持的聚合函数。
TiDB 支持的聚合函数 TiDB 支持的 MySQL GROUP BY 聚合函数如下所示：
   函数名 功能描述     COUNT() 返回检索到的行的数目   COUNT(DISTINCT) 返回不同值的数目   SUM() 返回和   AVG() 返回平均值   MAX() 返回最大值   MIN() 返回最小值   GROUP_CONCAT() 返回连接的字符串     注意：
 除非另有说明，否则聚合函数默认忽略 NULL 值。 如果在不包含 GROUP BY 子句的语句中使用聚合函数，则相当于对所有行进行分组。   GROUP BY 修饰符 TiDB 目前不支持 GROUP BY 修饰符，例如 WITH ROLLUP，将来会提供支持。详情参阅 #4250。</description>
    </item>
    
    <item>
      <title>GROUP BY 聚合函数</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/aggregate-group-by-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/aggregate-group-by-functions/</guid>
      <description>GROUP BY 聚合函数 本文将详细介绍 TiDB 支持的聚合函数。
TiDB 支持的聚合函数 TiDB 支持的 MySQL GROUP BY 聚合函数如下所示：
   函数名 功能描述     COUNT() 返回检索到的行的数目   COUNT(DISTINCT) 返回不同值的数目   SUM() 返回和   AVG() 返回平均值   MAX() 返回最大值   MIN() 返回最小值   GROUP_CONCAT() 返回连接的字符串     注意：
 除非另有说明，否则聚合函数默认忽略 NULL 值。 如果在不包含 GROUP BY 子句的语句中使用聚合函数，则相当于对所有行进行分组。   GROUP BY 修饰符 TiDB 目前不支持 GROUP BY 修饰符，例如 WITH ROLLUP，将来会提供支持。详情参阅 #4250。</description>
    </item>
    
    <item>
      <title>GROUP BY 聚合函数</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/aggregate-group-by-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/aggregate-group-by-functions/</guid>
      <description>GROUP BY 聚合函数 本文将详细介绍 TiDB 支持的聚合函数。
TiDB 支持的聚合函数 TiDB 支持的 MySQL GROUP BY 聚合函数如下所示：
   函数名 功能描述     COUNT() 返回检索到的行的数目   COUNT(DISTINCT) 返回不同值的数目   SUM() 返回和   AVG() 返回平均值   MAX() 返回最大值   MIN() 返回最小值   GROUP_CONCAT() 返回连接的字符串     注意：
 除非另有说明，否则聚合函数默认忽略 NULL 值。 如果在不包含 GROUP BY 子句的语句中使用聚合函数，则相当于对所有行进行分组。   GROUP BY 修饰符 TiDB 目前不支持 GROUP BY 修饰符，例如 WITH ROLLUP，将来会提供支持。详情参阅 #4250。</description>
    </item>
    
    <item>
      <title>GROUP BY 聚合函数</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/aggregate-group-by-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/aggregate-group-by-functions/</guid>
      <description>GROUP BY 聚合函数 本文将详细介绍 TiDB 支持的聚合函数。
TiDB 支持的聚合函数 TiDB 支持的 MySQL GROUP BY 聚合函数如下所示：
   函数名 功能描述     COUNT() 返回检索到的行的数目   COUNT(DISTINCT) 返回不同值的数目   SUM() 返回和   AVG() 返回平均值   MAX() 返回最大值   MIN() 返回最小值   GROUP_CONCAT() 返回连接的字符串     注意：
 除非另有说明，否则聚合函数默认忽略 NULL 值。 如果在不包含 GROUP BY 子句的语句中使用聚合函数，则相当于对所有行进行分组。   GROUP BY 修饰符 TiDB 目前不支持 GROUP BY 修饰符，例如 WITH ROLLUP，将来会提供支持。详情参阅 #4250。</description>
    </item>
    
    <item>
      <title>Handle Sharding DDL Locks Manually in DM</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/features/manually-handling-sharding-ddl-locks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/features/manually-handling-sharding-ddl-locks/</guid>
      <description>Learn how to handle sharding DDL locks manually in DM.</description>
    </item>
    
    <item>
      <title>Handle Sharding DDL Locks Manually in DM</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/features/manually-handling-sharding-ddl-locks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/features/manually-handling-sharding-ddl-locks/</guid>
      <description>Learn how to handle sharding DDL locks manually in DM.</description>
    </item>
    
    <item>
      <title>Handle Sharding DDL Locks Manually in DM</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/features/manually-handling-sharding-ddl-locks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/features/manually-handling-sharding-ddl-locks/</guid>
      <description>Learn how to handle sharding DDL locks manually in DM.</description>
    </item>
    
    <item>
      <title>Handle Sharding DDL Locks Manually in DM</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/features/manually-handling-sharding-ddl-locks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/features/manually-handling-sharding-ddl-locks/</guid>
      <description>Learn how to handle sharding DDL locks manually in DM.</description>
    </item>
    
    <item>
      <title>HAProxy 在 TiDB 中的最佳实践</title>
      <link>https://pingcap.com/docs-cn/dev/reference/best-practices/haproxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/best-practices/haproxy/</guid>
      <description>HAProxy 在 TiDB 中的最佳实践 本文介绍 HAProxy 在 TiDB 中的最佳配置和使用方法。HAProxy 提供 TCP 协议下的负载均衡能力，TiDB 客户端通过连接 HAProxy 提供的浮动 IP 即可对数据进行操作，实现 TiDB Server 层的负载均衡。
HAProxy 简介 HAProxy 是由 C 语言编写的自由开放源码的软件，为基于 TCP 和 HTTP 协议的应用程序提供高可用性、负载均衡和代理服务。因为 HAProxy 能够快速、高效使用 CPU 和内存，所以目前使用非常广泛，许多知名网站诸如 GitHub、Bitbucket、Stack Overflow、Reddit、Tumblr、Twitter 和 Tuenti 以及亚马逊网络服务系统都在使用 HAProxy。
HAProxy 由 Linux 内核的核心贡献者 Willy Tarreau 于 2000 年编写，他现在仍然负责该项目的维护，并在开源社区免费提供版本迭代。最新的稳定版本 2.0.0 于 2019 年 8 月 16 日发布，带来更多优秀的特性。
HAProxy 部分核心功能介绍  高可用性：HAProxy 提供优雅关闭服务和无缝切换的高可用功能； 负载均衡：L4 (TCP) 和 L7 (HTTP) 两种负载均衡模式，至少 9 类均衡算法，比如 roundrobin，leastconn，random 等； 健康检查：对 HAProxy 配置的 HTTP 或者 TCP 模式状态进行检查； 会话保持：在应用程序没有提供会话保持功能的情况下，HAProxy 可以提供该项功能； SSL：支持 HTTPS 通信和解析； 监控与统计：通过 web 页面可以实时监控服务状态以及具体的流量信息。  准备环境 在部署 HAProxy 之前，需准备好以下环境。</description>
    </item>
    
    <item>
      <title>HAProxy 在 TiDB 中的最佳实践</title>
      <link>https://pingcap.com/docs-cn/stable/reference/best-practices/haproxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/best-practices/haproxy/</guid>
      <description>HAProxy 在 TiDB 中的最佳实践 本文介绍 HAProxy 在 TiDB 中的最佳配置和使用方法。HAProxy 提供 TCP 协议下的负载均衡能力，TiDB 客户端通过连接 HAProxy 提供的浮动 IP 即可对数据进行操作，实现 TiDB Server 层的负载均衡。
HAProxy 简介 HAProxy 是由 C 语言编写的自由开放源码的软件，为基于 TCP 和 HTTP 协议的应用程序提供高可用性、负载均衡和代理服务。因为 HAProxy 能够快速、高效使用 CPU 和内存，所以目前使用非常广泛，许多知名网站诸如 GitHub、Bitbucket、Stack Overflow、Reddit、Tumblr、Twitter 和 Tuenti 以及亚马逊网络服务系统都在使用 HAProxy。
HAProxy 由 Linux 内核的核心贡献者 Willy Tarreau 于 2000 年编写，他现在仍然负责该项目的维护，并在开源社区免费提供版本迭代。最新的稳定版本 2.0.0 于 2019 年 8 月 16 日发布，带来更多优秀的特性。
HAProxy 部分核心功能介绍  高可用性：HAProxy 提供优雅关闭服务和无缝切换的高可用功能； 负载均衡：L4 (TCP) 和 L7 (HTTP) 两种负载均衡模式，至少 9 类均衡算法，比如 roundrobin，leastconn，random 等； 健康检查：对 HAProxy 配置的 HTTP 或者 TCP 模式状态进行检查； 会话保持：在应用程序没有提供会话保持功能的情况下，HAProxy 可以提供该项功能； SSL：支持 HTTPS 通信和解析； 监控与统计：通过 web 页面可以实时监控服务状态以及具体的流量信息。  准备环境 在部署 HAProxy 之前，需准备好以下环境。</description>
    </item>
    
    <item>
      <title>HAProxy 在 TiDB 中的最佳实践</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/best-practices/haproxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/best-practices/haproxy/</guid>
      <description>HAProxy 在 TiDB 中的最佳实践 本文介绍 HAProxy 在 TiDB 中的最佳配置和使用方法。HAProxy 提供 TCP 协议下的负载均衡能力，TiDB 客户端通过连接 HAProxy 提供的浮动 IP 即可对数据进行操作，实现 TiDB Server 层的负载均衡。
HAProxy 简介 HAProxy 是由 C 语言编写的自由开放源码的软件，为基于 TCP 和 HTTP 协议的应用程序提供高可用性、负载均衡和代理服务。因为 HAProxy 能够快速、高效使用 CPU 和内存，所以目前使用非常广泛，许多知名网站诸如 GitHub、Bitbucket、Stack Overflow、Reddit、Tumblr、Twitter 和 Tuenti 以及亚马逊网络服务系统都在使用 HAProxy。
HAProxy 由 Linux 内核的核心贡献者 Willy Tarreau 于 2000 年编写，他现在仍然负责该项目的维护，并在开源社区免费提供版本迭代。最新的稳定版本 2.0.0 于 2019 年 8 月 16 日发布，带来更多优秀的特性。
HAProxy 部分核心功能介绍  高可用性：HAProxy 提供优雅关闭服务和无缝切换的高可用功能； 负载均衡：L4 (TCP) 和 L7 (HTTP) 两种负载均衡模式，至少 9 类均衡算法，比如 roundrobin，leastconn，random 等； 健康检查：对 HAProxy 配置的 HTTP 或者 TCP 模式状态进行检查； 会话保持：在应用程序没有提供会话保持功能的情况下，HAProxy 可以提供该项功能； SSL：支持 HTTPS 通信和解析； 监控与统计：通过 web 页面可以实时监控服务状态以及具体的流量信息。  准备环境 在部署 HAProxy 之前，需准备好以下环境。</description>
    </item>
    
    <item>
      <title>HAProxy 在 TiDB 中的最佳实践</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/best-practices/haproxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/best-practices/haproxy/</guid>
      <description>HAProxy 在 TiDB 中的最佳实践 本文介绍 HAProxy 在 TiDB 中的最佳配置和使用方法。HAProxy 提供 TCP 协议下的负载均衡能力，TiDB 客户端通过连接 HAProxy 提供的浮动 IP 即可对数据进行操作，实现 TiDB Server 层的负载均衡。
HAProxy 简介 HAProxy 是由 C 语言编写的自由开放源码的软件，为基于 TCP 和 HTTP 协议的应用程序提供高可用性、负载均衡和代理服务。因为 HAProxy 能够快速、高效使用 CPU 和内存，所以目前使用非常广泛，许多知名网站诸如 GitHub、Bitbucket、Stack Overflow、Reddit、Tumblr、Twitter 和 Tuenti 以及亚马逊网络服务系统都在使用 HAProxy。
HAProxy 由 Linux 内核的核心贡献者 Willy Tarreau 于 2000 年编写，他现在仍然负责该项目的维护，并在开源社区免费提供版本迭代。最新的稳定版本 2.0.0 于 2019 年 8 月 16 日发布，带来更多优秀的特性。
HAProxy 部分核心功能介绍  高可用性：HAProxy 提供优雅关闭服务和无缝切换的高可用功能； 负载均衡：L4 (TCP) 和 L7 (HTTP) 两种负载均衡模式，至少 9 类均衡算法，比如 roundrobin，leastconn，random 等； 健康检查：对 HAProxy 配置的 HTTP 或者 TCP 模式状态进行检查； 会话保持：在应用程序没有提供会话保持功能的情况下，HAProxy 可以提供该项功能； SSL：支持 HTTPS 通信和解析； 监控与统计：通过 web 页面可以实时监控服务状态以及具体的流量信息。  准备环境 在部署 HAProxy 之前，需准备好以下环境。</description>
    </item>
    
    <item>
      <title>Highly Concurrent Write Best Practices</title>
      <link>https://pingcap.com/docs/dev/reference/best-practices/high-concurrency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/best-practices/high-concurrency/</guid>
      <description>Learn best practices for highly-concurrent write-intensive workloads in TiDB.</description>
    </item>
    
    <item>
      <title>Highly Concurrent Write Best Practices</title>
      <link>https://pingcap.com/docs/stable/reference/best-practices/high-concurrency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/best-practices/high-concurrency/</guid>
      <description>Learn best practices for highly-concurrent write-intensive workloads in TiDB.</description>
    </item>
    
    <item>
      <title>Highly Concurrent Write Best Practices</title>
      <link>https://pingcap.com/docs/v3.1/reference/best-practices/high-concurrency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/best-practices/high-concurrency/</guid>
      <description>Learn best practices for highly-concurrent write-intensive workloads in TiDB.</description>
    </item>
    
    <item>
      <title>Horizontal Scaling</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/scaling/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/scaling/overview/</guid>
      <description>Horizontal Scaling  Transcript Welcome back. In this video, we are going to talk about scaling, which for the TiDB platform you can independently perform across two different dimensions.
First, you can scale the SQL processing by changing the number of TiDB Servers. Since TiDB servers are stateless, this is a very quick operation, both in terms of scaling out by increasing the count of TiDB instances and in terms of scaling in by decreasing the count.</description>
    </item>
    
    <item>
      <title>How to become a contributor</title>
      <link>https://pingcap.com/tidb-planet/become-a-contributor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-planet/become-a-contributor/</guid>
      <description>Have fun adventure on TiDB Planet!</description>
    </item>
    
    <item>
      <title>How to Run TPC-C Test on TiDB</title>
      <link>https://pingcap.com/docs/dev/benchmark/how-to-run-tpcc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/benchmark/how-to-run-tpcc/</guid>
      <description>How to Run TPC-C Test on TiDB This document describes how to test TiDB using TPC-C.
TPC-C is an online transaction processing (OLTP) benchmark. It tests the OLTP system by using a commodity sales model that involves the following five transactions of different types:
 NewOrder Payment OrderStatus Delivery StockLevel  Prepare Before testing, TPC-C Benchmark specifies the initial state of the database, which is the rule for data generation in the database.</description>
    </item>
    
    <item>
      <title>How to Run TPC-C Test on TiDB</title>
      <link>https://pingcap.com/docs/stable/benchmark/how-to-run-tpcc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/benchmark/how-to-run-tpcc/</guid>
      <description>How to Run TPC-C Test on TiDB This document describes how to test TiDB using TPC-C.
TPC-C is an online transaction processing (OLTP) benchmark. It tests the OLTP system by using a commodity sales model that involves the following five transactions of different types:
 NewOrder Payment OrderStatus Delivery StockLevel  Prepare Before testing, TPC-C Benchmark specifies the initial state of the database, which is the rule for data generation in the database.</description>
    </item>
    
    <item>
      <title>How to Run TPC-C Test on TiDB</title>
      <link>https://pingcap.com/docs/v3.1/benchmark/how-to-run-tpcc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/benchmark/how-to-run-tpcc/</guid>
      <description>How to Run TPC-C Test on TiDB This document describes how to test TiDB using TPC-C.
TPC-C is an online transaction processing (OLTP) benchmark. It tests the OLTP system by using a commodity sales model that involves the following five transactions of different types:
 NewOrder Payment OrderStatus Delivery StockLevel  Prepare Before testing, TPC-C Benchmark specifies the initial state of the database, which is the rule for data generation in the database.</description>
    </item>
    
    <item>
      <title>How to Test TiDB Using Sysbench</title>
      <link>https://pingcap.com/docs/dev/benchmark/how-to-run-sysbench/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/benchmark/how-to-run-sysbench/</guid>
      <description>How to Test TiDB Using Sysbench In this test, Sysbench 1.0.14 and TiDB 3.0 Beta are used. It is recommended to use Sysbench 1.0 or later, which can be downloaded here.
Test environment   Hardware recommendations
  The TiDB cluster is deployed according to the TiDB Deployment Guide. Suppose there are 3 servers in total. It is recommended to deploy 1 TiDB instance, 1 PD instance and 1 TiKV instance on each server.</description>
    </item>
    
    <item>
      <title>How to Test TiDB Using Sysbench</title>
      <link>https://pingcap.com/docs/stable/benchmark/how-to-run-sysbench/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/benchmark/how-to-run-sysbench/</guid>
      <description>How to Test TiDB Using Sysbench In this test, Sysbench 1.0.14 and TiDB 3.0 Beta are used. It is recommended to use Sysbench 1.0 or later, which can be downloaded here.
Test environment   Hardware recommendations
  The TiDB cluster is deployed according to the TiDB Deployment Guide. Suppose there are 3 servers in total. It is recommended to deploy 1 TiDB instance, 1 PD instance and 1 TiKV instance on each server.</description>
    </item>
    
    <item>
      <title>How to Test TiDB Using Sysbench</title>
      <link>https://pingcap.com/docs/v2.1/benchmark/how-to-run-sysbench/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/benchmark/how-to-run-sysbench/</guid>
      <description>How to Test TiDB Using Sysbench In this test, Sysbench 1.0.14 and TiDB 3.0 Beta are used. It is recommended to use Sysbench 1.0 or later, which can be downloaded here.
Test environment   Hardware recommendations
  The TiDB cluster is deployed according to the TiDB Deployment Guide. Suppose there are 3 servers in total. It is recommended to deploy 1 TiDB instance, 1 PD instance and 1 TiKV instance on each server.</description>
    </item>
    
    <item>
      <title>How to Test TiDB Using Sysbench</title>
      <link>https://pingcap.com/docs/v3.1/benchmark/how-to-run-sysbench/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/benchmark/how-to-run-sysbench/</guid>
      <description>How to Test TiDB Using Sysbench In this test, Sysbench 1.0.14 and TiDB 3.0 Beta are used. It is recommended to use Sysbench 1.0 or later, which can be downloaded here.
Test environment   Hardware recommendations
  The TiDB cluster is deployed according to the TiDB Deployment Guide. Suppose there are 3 servers in total. It is recommended to deploy 1 TiDB instance, 1 PD instance and 1 TiKV instance on each server.</description>
    </item>
    
    <item>
      <title>HR Management Trainee</title>
      <link>https://pingcap.com/about-cn/recruit/campus/campus-2020-hr-management-trainee/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/campus/campus-2020-hr-management-trainee/</guid>
      <description>人力资源管培生 岗位职责：
  与 Team 小伙伴一起制定公司招聘计划并实施落地，搭建人才地图；
  与 Team 小伙伴一起搭建组织发展、绩效评估体系，进行员工关系管理及入、离、调、转等；
  与 Team 小伙伴一起搭建与完善公司培训体系，进行人才梯队建设及重点人才培养，企业文化宣传、落地等；
  与 Team 小伙伴一起为业务体系提供专业的人力资源支持与服务。
  任职要求：
  对人力资源及 High Tech 有强烈的好奇心；
  积极主动，具备较好的逻辑思维能力及强烈的求知欲，乐于不断接受新的挑战；
  英语好，善于与人交流和收集信息，有计算机相关知识或互联网公司实习经验的优先。
  待遇：
8K - 15K，13薪 + 奖金，优秀者可面议
联系方式：
hire@pingcap.com
工作地点：
北京</description>
    </item>
    
    <item>
      <title>HTAP</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/htap/lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/htap/lab/</guid>
      <description>Tutorial for deploying TiDB on Google Cloud using Kubernetes.</description>
    </item>
    
    <item>
      <title>HTAP</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/htap/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/htap/overview/</guid>
      <description>HTAP  Transcript Welcome back.
A few sections back we talked about query optimization, and the examples used mostly fit into the category of what we call OLTP or online transaction processing.
In this section we, are going to talk about a different type of query, which is used as part of a business&amp;rsquo; reporting needs or decision support systems. These queries tend to be more expensive to execute as they often read a lot of data and aggregate it.</description>
    </item>
    
    <item>
      <title>Identify Expensive Queries</title>
      <link>https://pingcap.com/docs/dev/how-to/maintain/identify-abnormal-queries/identify-expensive-queries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/maintain/identify-abnormal-queries/identify-expensive-queries/</guid>
      <description>Identify Expensive Queries TiDB allows you to identify expensive queries during SQL execution, so you can diagnose and improve the performance of SQL execution. Specifically, TiDB prints the information about statements whose execution time exceeds tidb_expensive_query_time_threshold (60 seconds by default) or memory usage exceeds mem-quota-query (1 GB by default) to the tidb-server log file (&amp;ldquo;tidb.log&amp;rdquo; by default).
 Note:
The expensive query log differs from the slow query log in this way: TiDB prints statement information to the expensive query log as soon as the statement exceeds the threshold of resource usage (execution time or memory usage); while TiDB prints statement information to the slow query log after the statement execution.</description>
    </item>
    
    <item>
      <title>Identify Expensive Queries</title>
      <link>https://pingcap.com/docs/stable/how-to/maintain/identify-abnormal-queries/identify-expensive-queries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/maintain/identify-abnormal-queries/identify-expensive-queries/</guid>
      <description>Identify Expensive Queries TiDB allows you to identify expensive queries during SQL execution, so you can diagnose and improve the performance of SQL execution. Specifically, TiDB prints the information about statements whose execution time exceeds tidb_expensive_query_time_threshold (60 seconds by default) or memory usage exceeds mem-quota-query (32 GB by default) to the tidb-server log file (&amp;ldquo;tidb.log&amp;rdquo; by default).
 Note:
The expensive query log differs from the slow query log in this way: TiDB prints statement information to the expensive query log as soon as the statement exceeds the threshold of resource usage (execution time or memory usage); while TiDB prints statement information to the slow query log after the statement execution.</description>
    </item>
    
    <item>
      <title>Identify Expensive Queries</title>
      <link>https://pingcap.com/docs/v3.1/how-to/maintain/identify-abnormal-queries/identify-expensive-queries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/maintain/identify-abnormal-queries/identify-expensive-queries/</guid>
      <description>Identify Expensive Queries TiDB allows you to identify expensive queries during SQL execution, so you can diagnose and improve the performance of SQL execution. Specifically, TiDB prints the information about statements whose execution time exceeds tidb_expensive_query_time_threshold (60 seconds by default) or memory usage exceeds mem-quota-query (32 GB by default) to the tidb-server log file (&amp;ldquo;tidb.log&amp;rdquo; by default).
 Note:
The expensive query log differs from the slow query log in this way: TiDB prints statement information to the expensive query log as soon as the statement exceeds the threshold of resource usage (execution time or memory usage); while TiDB prints statement information to the slow query log after the statement execution.</description>
    </item>
    
    <item>
      <title>Identify Slow Queries</title>
      <link>https://pingcap.com/docs/dev/how-to/maintain/identify-abnormal-queries/identify-slow-queries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/maintain/identify-abnormal-queries/identify-slow-queries/</guid>
      <description>Use the slow query log to identify problematic SQL statements.</description>
    </item>
    
    <item>
      <title>Identify Slow Queries</title>
      <link>https://pingcap.com/docs/stable/how-to/maintain/identify-abnormal-queries/identify-slow-queries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/maintain/identify-abnormal-queries/identify-slow-queries/</guid>
      <description>Use the slow query log to identify problematic SQL statements.</description>
    </item>
    
    <item>
      <title>Identify Slow Queries</title>
      <link>https://pingcap.com/docs/v2.1/how-to/maintain/identify-slow-queries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/maintain/identify-slow-queries/</guid>
      <description>Use the slow query log to identify problematic SQL statements.</description>
    </item>
    
    <item>
      <title>Identify Slow Queries</title>
      <link>https://pingcap.com/docs/v3.1/how-to/maintain/identify-abnormal-queries/identify-slow-queries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/maintain/identify-abnormal-queries/identify-slow-queries/</guid>
      <description>Use the slow query log to identify problematic SQL statements.</description>
    </item>
    
    <item>
      <title>Import Example Database</title>
      <link>https://pingcap.com/docs/dev/how-to/get-started/import-example-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/get-started/import-example-database/</guid>
      <description>Install the Bikeshare example database.</description>
    </item>
    
    <item>
      <title>Import Example Database</title>
      <link>https://pingcap.com/docs/stable/how-to/get-started/import-example-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/get-started/import-example-database/</guid>
      <description>Install the Bikeshare example database.</description>
    </item>
    
    <item>
      <title>Import Example Database</title>
      <link>https://pingcap.com/docs/v2.1/how-to/get-started/import-example-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/get-started/import-example-database/</guid>
      <description>Install the Bikeshare example database.</description>
    </item>
    
    <item>
      <title>Import Example Database</title>
      <link>https://pingcap.com/docs/v3.1/how-to/get-started/import-example-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/get-started/import-example-database/</guid>
      <description>Install the Bikeshare example database.</description>
    </item>
    
    <item>
      <title>Information Functions</title>
      <link>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/information-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/information-functions/</guid>
      <description>Learn about the information functions.</description>
    </item>
    
    <item>
      <title>Information Functions</title>
      <link>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/information-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/information-functions/</guid>
      <description>Learn about the information functions.</description>
    </item>
    
    <item>
      <title>Information Functions</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/information-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/information-functions/</guid>
      <description>Learn about the information functions.</description>
    </item>
    
    <item>
      <title>Information Functions</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/information-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/information-functions/</guid>
      <description>Learn about the information functions.</description>
    </item>
    
    <item>
      <title>Information Schema</title>
      <link>https://pingcap.com/docs-cn/dev/reference/system-databases/information-schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/system-databases/information-schema/</guid>
      <description>Information Schema 为了和 MySQL 保持兼容，TiDB 支持很多 INFORMATION_SCHEMA 表，其中有不少表都支持相应的 SHOW 命令。查询 INFORMATION_SCHEMA 表也为表的连接操作提供了可能。
ANALYZE_STATUS 表 ANALYZE_STATUS 表提供正在执行的收集统计信息的任务以及有限条历史任务记录。
 select * from `ANALYZE_STATUS`; +--------------+------------+----------------+-------------------+----------------+---------------------+----------+ | TABLE_SCHEMA | TABLE_NAME | PARTITION_NAME | JOB_INFO | PROCESSED_ROWS | START_TIME | STATE | +--------------+------------+----------------+-------------------+----------------+---------------------+----------+ | test | t | | analyze index idx | 2 | 2019-06-21 19:51:14 | finished | | test | t | | analyze columns | 2 | 2019-06-21 19:51:14 | finished | | test | t1 | p0 | analyze columns | 0 | 2019-06-21 19:51:15 | finished | | test | t1 | p3 | analyze columns | 0 | 2019-06-21 19:51:15 | finished | | test | t1 | p1 | analyze columns | 0 | 2019-06-21 19:51:15 | finished | | test | t1 | p2 | analyze columns | 1 | 2019-06-21 19:51:15 | finished | +--------------+------------+----------------+-------------------+----------------+---------------------+----------+ 6 rows in set CHARACTER_SETS 表 CHARACTER_SETS 表提供字符集相关的信息。TiDB 目前仅支持部分字符集。</description>
    </item>
    
    <item>
      <title>Information Schema</title>
      <link>https://pingcap.com/docs-cn/stable/reference/system-databases/information-schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/system-databases/information-schema/</guid>
      <description>Information Schema 为了和 MySQL 保持兼容，TiDB 支持很多 INFORMATION_SCHEMA 表，其中有不少表都支持相应的 SHOW 命令。查询 INFORMATION_SCHEMA 表也为表的连接操作提供了可能。
ANALYZE_STATUS 表 ANALYZE_STATUS 表提供正在执行的收集统计信息的任务以及有限条历史任务记录。
 select * from `ANALYZE_STATUS`; +--------------+------------+----------------+-------------------+----------------+---------------------+----------+ | TABLE_SCHEMA | TABLE_NAME | PARTITION_NAME | JOB_INFO | PROCESSED_ROWS | START_TIME | STATE | +--------------+------------+----------------+-------------------+----------------+---------------------+----------+ | test | t | | analyze index idx | 2 | 2019-06-21 19:51:14 | finished | | test | t | | analyze columns | 2 | 2019-06-21 19:51:14 | finished | | test | t1 | p0 | analyze columns | 0 | 2019-06-21 19:51:15 | finished | | test | t1 | p3 | analyze columns | 0 | 2019-06-21 19:51:15 | finished | | test | t1 | p1 | analyze columns | 0 | 2019-06-21 19:51:15 | finished | | test | t1 | p2 | analyze columns | 1 | 2019-06-21 19:51:15 | finished | +--------------+------------+----------------+-------------------+----------------+---------------------+----------+ 6 rows in set CHARACTER_SETS 表 CHARACTER_SETS 表提供字符集相关的信息。TiDB 目前仅支持部分字符集。</description>
    </item>
    
    <item>
      <title>Information Schema</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/system-databases/information-schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/system-databases/information-schema/</guid>
      <description>Information Schema 为了和 MySQL 保持兼容，TiDB 支持很多 INFORMATION_SCHEMA 表，其中有不少表都支持相应的 SHOW 命令。查询 INFORMATION_SCHEMA 表也为表的连接操作提供了可能。
CHARACTER_SETS Table CHARACTER_SETS 表提供字符集相关的信息。TiDB 目前仅支持部分字符集。
mysql&amp;gt; SELECT * FROM character_sets; +--------------------+----------------------+---------------+--------+ | CHARACTER_SET_NAME | DEFAULT_COLLATE_NAME | DESCRIPTION | MAXLEN | +--------------------+----------------------+---------------+--------+ | utf8 | utf8_bin | UTF-8 Unicode | 3 | | utf8mb4 | utf8mb4_bin | UTF-8 Unicode | 4 | | ascii | ascii_bin | US ASCII | 1 | | latin1 | latin1_bin | Latin1 | 1 | | binary | binary | binary | 1 | +--------------------+----------------------+---------------+--------+ 5 rows in set (0.</description>
    </item>
    
    <item>
      <title>Information Schema</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/system-databases/information-schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/system-databases/information-schema/</guid>
      <description>Information Schema 为了和 MySQL 保持兼容，TiDB 支持很多 INFORMATION_SCHEMA 表，其中有不少表都支持相应的 SHOW 命令。查询 INFORMATION_SCHEMA 表也为表的连接操作提供了可能。
ANALYZE_STATUS 表 ANALYZE_STATUS 表提供正在执行的收集统计信息的任务以及有限条历史任务记录。
 select * from `ANALYZE_STATUS`; +--------------+------------+----------------+-------------------+----------------+---------------------+----------+ | TABLE_SCHEMA | TABLE_NAME | PARTITION_NAME | JOB_INFO | PROCESSED_ROWS | START_TIME | STATE | +--------------+------------+----------------+-------------------+----------------+---------------------+----------+ | test | t | | analyze index idx | 2 | 2019-06-21 19:51:14 | finished | | test | t | | analyze columns | 2 | 2019-06-21 19:51:14 | finished | | test | t1 | p0 | analyze columns | 0 | 2019-06-21 19:51:15 | finished | | test | t1 | p3 | analyze columns | 0 | 2019-06-21 19:51:15 | finished | | test | t1 | p1 | analyze columns | 0 | 2019-06-21 19:51:15 | finished | | test | t1 | p2 | analyze columns | 1 | 2019-06-21 19:51:15 | finished | +--------------+------------+----------------+-------------------+----------------+---------------------+----------+ 6 rows in set CHARACTER_SETS 表 CHARACTER_SETS 表提供字符集相关的信息。TiDB 目前仅支持部分字符集。</description>
    </item>
    
    <item>
      <title>Information Schema</title>
      <link>https://pingcap.com/docs/dev/reference/system-databases/information-schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/system-databases/information-schema/</guid>
      <description>Learn how to use Information Schema in TiDB.</description>
    </item>
    
    <item>
      <title>Information Schema</title>
      <link>https://pingcap.com/docs/stable/reference/system-databases/information-schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/system-databases/information-schema/</guid>
      <description>Learn how to use Information Schema in TiDB.</description>
    </item>
    
    <item>
      <title>Information Schema</title>
      <link>https://pingcap.com/docs/v2.1/reference/system-databases/information-schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/system-databases/information-schema/</guid>
      <description>Learn how to use Information Schema in TiDB.</description>
    </item>
    
    <item>
      <title>Information Schema</title>
      <link>https://pingcap.com/docs/v3.1/reference/system-databases/information-schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/system-databases/information-schema/</guid>
      <description>Learn how to use Information Schema in TiDB.</description>
    </item>
    
    <item>
      <title>Infrastructure Engineer</title>
      <link>https://pingcap.com/about-cn/recruit/campus/campus-2020-infrastructure-engineer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/campus/campus-2020-infrastructure-engineer/</guid>
      <description>Infrastructure Engineer 职位描述：
如果你：
  内心不安，喜欢挑战和创新；
  熟悉分布式系统，大数据或者数据库领域；
  想和简单有爱的 PingCAP 的工程师们一起做世界级的开源项目。
  那么你就是我们要找的人。
在分布式数据库领域有很多迷人的问题需要去解决，如果你对任何一个问题感到无比的好奇，想要深挖究竟，都可以来和我们聊聊。
  想深入理解业界最前沿的分布式数据库 Spanner 的设计和思考，如何从 0 到 1 落地实现；
  如何设计和实现世界前沿的分布式 SQL 优化器，让一个复杂的 SQL 查询变的无比轻快智能；
  如何在成千上万台集群规模的情况下，实现无阻塞的表结构变更操作，而不影响任何在线的业务；
  如何实现一个高效的分布式事务管理器，让 ACID 事务在大规模并发的分布式存场景下依然可以高效可靠；
  如何基于一致性的 Raft 协议实现快速稳定的数据复制和自动故障恢复，确保数据安全；
  如何在一个 PR 提交之后，快速验证千万级别的 tests 是否全部通过，性能有没有显著提升；
  &amp;hellip;&amp;hellip;
  待遇：
15K - 20K + 期权, 13薪 + 奖金，优秀者可面议
联系方式：</description>
    </item>
    
    <item>
      <title>Initialize a TiDB Cluster in Kubernetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/initialize-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/initialize-cluster/</guid>
      <description>Learn how to initialize a TiDB cluster in K8s.</description>
    </item>
    
    <item>
      <title>Initialize a TiDB Cluster in Kubernetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/initialize-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/initialize-cluster/</guid>
      <description>Learn how to initialize a TiDB cluster in K8s.</description>
    </item>
    
    <item>
      <title>Initialize a TiDB Cluster in Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/initialize-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/initialize-cluster/</guid>
      <description>Learn how to initialize a TiDB cluster in K8s.</description>
    </item>
    
    <item>
      <title>INSERT</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/insert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/insert/</guid>
      <description>TiDB 数据库中 INSERT 的使用概况。</description>
    </item>
    
    <item>
      <title>INSERT</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/insert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/insert/</guid>
      <description>TiDB 数据库中 INSERT 的使用概况。</description>
    </item>
    
    <item>
      <title>INSERT</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/insert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/insert/</guid>
      <description>TiDB 数据库中 INSERT 的使用概况。</description>
    </item>
    
    <item>
      <title>INSERT</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/insert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/insert/</guid>
      <description>TiDB 数据库中 INSERT 的使用概况。</description>
    </item>
    
    <item>
      <title>INSERT | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/insert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/insert/</guid>
      <description>An overview of the usage of INSERT for the TiDB database.</description>
    </item>
    
    <item>
      <title>INSERT | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/insert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/insert/</guid>
      <description>An overview of the usage of INSERT for the TiDB database.</description>
    </item>
    
    <item>
      <title>INSERT | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/insert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/insert/</guid>
      <description>An overview of the usage of INSERT for the TiDB database.</description>
    </item>
    
    <item>
      <title>INSERT | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/insert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/insert/</guid>
      <description>An overview of the usage of INSERT for the TiDB database.</description>
    </item>
    
    <item>
      <title>Install from DBdeployer</title>
      <link>https://pingcap.com/docs/dev/how-to/get-started/deploy-tidb-from-dbdeployer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/get-started/deploy-tidb-from-dbdeployer/</guid>
      <description>Install TiDB using the DBdeployer package manager.</description>
    </item>
    
    <item>
      <title>Install from DBdeployer</title>
      <link>https://pingcap.com/docs/stable/how-to/get-started/deploy-tidb-from-dbdeployer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/get-started/deploy-tidb-from-dbdeployer/</guid>
      <description>Install TiDB using the DBdeployer package manager.</description>
    </item>
    
    <item>
      <title>Install from DBdeployer</title>
      <link>https://pingcap.com/docs/v3.1/how-to/get-started/deploy-tidb-from-dbdeployer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/get-started/deploy-tidb-from-dbdeployer/</guid>
      <description>Install TiDB using the DBdeployer package manager.</description>
    </item>
    
    <item>
      <title>Install from Homebrew</title>
      <link>https://pingcap.com/docs/dev/how-to/get-started/deploy-tidb-from-homebrew/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/get-started/deploy-tidb-from-homebrew/</guid>
      <description>Install TiDB using the Homebrew package manager.</description>
    </item>
    
    <item>
      <title>Interaction Test on Online Workloads and `ADD INDEX` Operations</title>
      <link>https://pingcap.com/docs/dev/benchmark/add-index-with-load/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/benchmark/add-index-with-load/</guid>
      <description>This document tests the interaction effects between online workloads and &lt;code&gt;ADD INDEX&lt;/code&gt; operations.</description>
    </item>
    
    <item>
      <title>Interaction Test on Online Workloads and `ADD INDEX` Operations</title>
      <link>https://pingcap.com/docs/stable/benchmark/add-index-with-load/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/benchmark/add-index-with-load/</guid>
      <description>This document tests the interaction effects between online workloads and &lt;code&gt;ADD INDEX&lt;/code&gt; operations.</description>
    </item>
    
    <item>
      <title>Interaction Test on Online Workloads and `ADD INDEX` Operations</title>
      <link>https://pingcap.com/docs/v3.1/benchmark/add-index-with-load/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/benchmark/add-index-with-load/</guid>
      <description>This document tests the interaction effects between online workloads and &lt;code&gt;ADD INDEX&lt;/code&gt; operations.</description>
    </item>
    
    <item>
      <title>Introduction to Distributed Databases</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/introduction/distributed-databases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/introduction/distributed-databases/</guid>
      <description>Introduction to Distributed Databases  Transcript In introducing TiDB, I want to start by taking a quick tour of databases and answer what TiDB is, and why it exists.
Our story begins in the 1960s with the first generation of databases. They were not yet relational, and the query language that was used to access records was closely tied to the storage format. So this meant that there was very little in the way of vendor independence, and changing the storage format (perhaps to add an optimization) necessitated changing how you accessed the data.</description>
    </item>
    
    <item>
      <title>Introduction to Statistics</title>
      <link>https://pingcap.com/docs/dev/reference/performance/statistics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/performance/statistics/</guid>
      <description>Learn how the statistics collect table-level and column-level information.</description>
    </item>
    
    <item>
      <title>Introduction to Statistics</title>
      <link>https://pingcap.com/docs/stable/reference/performance/statistics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/performance/statistics/</guid>
      <description>Learn how the statistics collect table-level and column-level information.</description>
    </item>
    
    <item>
      <title>Introduction to Statistics</title>
      <link>https://pingcap.com/docs/v2.1/reference/performance/statistics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/performance/statistics/</guid>
      <description>Learn how the statistics collect table-level and column-level information.</description>
    </item>
    
    <item>
      <title>Introduction to Statistics</title>
      <link>https://pingcap.com/docs/v3.1/reference/performance/statistics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/performance/statistics/</guid>
      <description>Learn how the statistics collect table-level and column-level information.</description>
    </item>
    
    <item>
      <title>Join Reorder 算法简介</title>
      <link>https://pingcap.com/docs-cn/dev/reference/performance/join-reorder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/performance/join-reorder/</guid>
      <description>Join Reorder 算法简介 在实际的业务场景中，多个表的 Join 语句是很常见的，而 Join 的执行效率和各个表参与 Join 的顺序有关系。如 select * from t1, t2, t3 where t1.a=t2.a and t3.a=t2.a，这个 SQL 中可能的执行顺序有“t1 和 t2 先做 Join，然后再和 t3 做 Join”以及“t2 和 t3 先做 Join，然后再和 t1 做 Join”两种情况。根据 t1 和 t3 的数据量及数据分布，这两种执行顺序会有不同的性能表现。
因此优化器需要实现一种决定 Join 顺序的算法。目前 TiDB 中使用的算法是 Join Reorder 算法，又称贪心算法。
Join Reorder 算法实例 以三个表 t1、t2、t3 的 Join 为例。首先获取所有参与 Join 的节点，将所有节点按照行数多少，从少到多进行排序。
之后选定其中最小的表，将其与其他两个表分别做一次 Join，观察输出的结果集大小，选择其中结果更小的一对。
然后进入下一轮的选择，如果这时是四个表，那么就继续比较输出结果集的大小，进行选择。这里只有三个表，因此就直接得到了最终的 Join 结果。
以上就是当前 TiDB 中使用的 Join reorder 算法。
Join reorder 算法限制 当前的 Join Reorder 算法存在如下限制</description>
    </item>
    
    <item>
      <title>JSON Functions</title>
      <link>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/json-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/json-functions/</guid>
      <description>Learn about JSON functions.</description>
    </item>
    
    <item>
      <title>JSON Functions</title>
      <link>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/json-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/json-functions/</guid>
      <description>Learn about JSON functions.</description>
    </item>
    
    <item>
      <title>JSON Functions</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/json-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/json-functions/</guid>
      <description>Learn about JSON functions.</description>
    </item>
    
    <item>
      <title>JSON Functions</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/json-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/json-functions/</guid>
      <description>Learn about JSON functions.</description>
    </item>
    
    <item>
      <title>JSON 函数及语法糖</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/json-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/json-functions/</guid>
      <description>JSON 函数及语法糖 TiDB 支持 MySQL 5.7 GA 版本发布的大多数 JSON 函数。MySQL 5.7 发布后，又增加了更多 JSON 函数，TiDB 并未支持所有这些函数（参见未支持的函数）。
创建 JSON 值的函数    函数及语法糖 功能描述     JSON_ARRAY([val[, val] &amp;hellip;]) 根据一系列元素创建一个 JSON 文档   JSON_OBJECT(key, val[, key, val] &amp;hellip;) 根据一系列 K/V 对创建一个 JSON 文档   JSON_QUOTE(string) 返回一个字符串，该字符串为带引号的 JSON 值    搜索 JSON 值的函数    函数及语法糖 功能描述     JSON_CONTAINS(target, candidate[, path]) 通过返回 1 或 0 来表示目标 JSON 文档中是否包含给定的 candidate JSON 文档   JSON_CONTAINS_PATH(json_doc, one_or_all, path[, path] &amp;hellip;) 通过返回 0 或 1 来表示一个 JSON 文档在给定路径是否包含数据   JSON_EXTRACT(json_doc, path[, path] &amp;hellip;) 从 JSON 文档中解出某一路径对应的子文档   -&amp;gt; 返回执行路径后面的 JSON 列的值；JSON_EXTRACT(doc, path_literal) 的语法糖   -&amp;raquo; 返回执行路径后面的 JSON 列的值和转义后的结果； JSON_UNQUOTE(JSON_EXTRACT(doc, path_literal)) 的语法糖   JSON_KEYS(json_doc[, path]) 返回从 JSON 对象的顶级值作为 JSON array 的键，如果给定了路径参数，则从选定路径中获取顶级键    修改 JSON 值的函数    函数及语法糖 功能描述     JSON_INSERT(json_doc, path, val[, path, val] &amp;hellip;) 在 JSON 文档中在某一路径下插入子文档   JSON_MERGE(json_doc, json_doc[, json_doc] &amp;hellip;) 已废弃的 JSON_MERGE_PRESERVE 别名   JSON_MERGE_PRESERVE(json_doc, json_doc[, json_doc] &amp;hellip;) 将两个或多个 JSON 文档合并成一个文档，并返回合并结果   JSON_REMOVE(json_doc, path[, path] &amp;hellip;) 移除 JSON 文档中某一路径下的子文档   JSON_REPLACE(json_doc, path, val[, path, val] &amp;hellip;) 替换 JSON 文档中的某一路径下的子文档   JSON_SET(json_doc, path, val[, path, val] &amp;hellip;) 在 JSON 文档中为某一路径设置子文档   JSON_UNQUOTE(json_val) 去掉 JSON 值外面的引号，返回结果为字符串    返回 JSON 值属性的函数    函数及语法糖 功能描述     JSON_DEPTH(json_doc) 返回 JSON 文档的最大深度   JSON_LENGTH(json_doc[, path]) 返回 JSON 文档的长度；如果路径参数已定，则返回该路径下值的长度   JSON_TYPE(json_val) 检查某 JSON 文档内部内容的类型    未支持的函数 TiDB 暂未支持以下 JSON 函数。相关进展参见 TiDB #7546:</description>
    </item>
    
    <item>
      <title>JSON 函数及语法糖</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/json-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/json-functions/</guid>
      <description>JSON 函数及语法糖 TiDB 支持 MySQL 5.7 GA 版本发布的大多数 JSON 函数。MySQL 5.7 发布后，又增加了更多 JSON 函数，TiDB 并未支持所有这些函数（参见未支持的函数）。
创建 JSON 值的函数    函数及语法糖 功能描述     JSON_ARRAY([val[, val] &amp;hellip;]) 根据一系列元素创建一个 JSON 文档   JSON_OBJECT(key, val[, key, val] &amp;hellip;) 根据一系列 K/V 对创建一个 JSON 文档   JSON_QUOTE(string) 返回一个字符串，该字符串为带引号的 JSON 值    搜索 JSON 值的函数    函数及语法糖 功能描述     JSON_CONTAINS(target, candidate[, path]) 通过返回 1 或 0 来表示目标 JSON 文档中是否包含给定的 candidate JSON 文档   JSON_CONTAINS_PATH(json_doc, one_or_all, path[, path] &amp;hellip;) 通过返回 0 或 1 来表示一个 JSON 文档在给定路径是否包含数据   JSON_EXTRACT(json_doc, path[, path] &amp;hellip;) 从 JSON 文档中解出某一路径对应的子文档   -&amp;gt; 返回执行路径后面的 JSON 列的值；JSON_EXTRACT(doc, path_literal) 的语法糖   -&amp;raquo; 返回执行路径后面的 JSON 列的值和转义后的结果； JSON_UNQUOTE(JSON_EXTRACT(doc, path_literal)) 的语法糖   JSON_KEYS(json_doc[, path]) 返回从 JSON 对象的顶级值作为 JSON array 的键，如果给定了路径参数，则从选定路径中获取顶级键    修改 JSON 值的函数    函数及语法糖 功能描述     JSON_INSERT(json_doc, path, val[, path, val] &amp;hellip;) 在 JSON 文档中在某一路径下插入子文档   JSON_MERGE(json_doc, json_doc[, json_doc] &amp;hellip;) 已废弃的 JSON_MERGE_PRESERVE 别名   JSON_MERGE_PRESERVE(json_doc, json_doc[, json_doc] &amp;hellip;) 将两个或多个 JSON 文档合并成一个文档，并返回合并结果   JSON_REMOVE(json_doc, path[, path] &amp;hellip;) 移除 JSON 文档中某一路径下的子文档   JSON_REPLACE(json_doc, path, val[, path, val] &amp;hellip;) 替换 JSON 文档中的某一路径下的子文档   JSON_SET(json_doc, path, val[, path, val] &amp;hellip;) 在 JSON 文档中为某一路径设置子文档   JSON_UNQUOTE(json_val) 去掉 JSON 值外面的引号，返回结果为字符串    返回 JSON 值属性的函数    函数及语法糖 功能描述     JSON_DEPTH(json_doc) 返回 JSON 文档的最大深度   JSON_LENGTH(json_doc[, path]) 返回 JSON 文档的长度；如果路径参数已定，则返回该路径下值的长度   JSON_TYPE(json_val) 检查某 JSON 文档内部内容的类型    未支持的函数 TiDB 暂未支持以下 JSON 函数。相关进展参见 TiDB #7546:</description>
    </item>
    
    <item>
      <title>JSON 函数及语法糖</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/json-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/json-functions/</guid>
      <description>JSON 函数及语法糖 TiDB 支持 MySQL 5.7 GA 版本发布的大多数 JSON 函数。MySQL 5.7 发布后，又增加了更多 JSON 函数，TiDB 并未支持所有这些函数（参见未支持的函数）。
创建 JSON 值的函数    函数及语法糖 功能描述     JSON_ARRAY([val[, val] &amp;hellip;]) 根据一系列元素创建一个 JSON 文档   JSON_OBJECT(key, val[, key, val] &amp;hellip;) 根据一系列 K/V 对创建一个 JSON 文档   JSON_QUOTE(string) 返回一个字符串，该字符串为带引号的 JSON 值    搜索 JSON 值的函数    函数及语法糖 功能描述     JSON_CONTAINS(target, candidate[, path]) 通过返回 1 或 0 来表示目标 JSON 文档中是否包含给定的 candidate JSON 文档   JSON_CONTAINS_PATH(json_doc, one_or_all, path[, path] &amp;hellip;) 通过返回 0 或 1 来表示一个 JSON 文档在给定路径是否包含数据   JSON_EXTRACT(json_doc, path[, path] &amp;hellip;) 从 JSON 文档中解出某一路径对应的子文档   -&amp;gt; 返回执行路径后面的 JSON 列的值；JSON_EXTRACT(doc, path_literal) 的语法糖   -&amp;raquo; 返回执行路径后面的 JSON 列的值和转义后的结果； JSON_UNQUOTE(JSON_EXTRACT(doc, path_literal)) 的语法糖   JSON_KEYS(json_doc[, path]) 返回从 JSON 对象的顶级值作为 JSON array 的键，如果给定了路径参数，则从选定路径中获取顶级键    修改 JSON 值的函数    函数及语法糖 功能描述     JSON_INSERT(json_doc, path, val[, path, val] &amp;hellip;) 在 JSON 文档中在某一路径下插入子文档   JSON_MERGE(json_doc, json_doc[, json_doc] &amp;hellip;) 已废弃的 JSON_MERGE_PRESERVE 别名   JSON_MERGE_PRESERVE(json_doc, json_doc[, json_doc] &amp;hellip;) 将两个或多个 JSON 文档合并成一个文档，并返回合并结果   JSON_REMOVE(json_doc, path[, path] &amp;hellip;) 移除 JSON 文档中某一路径下的子文档   JSON_REPLACE(json_doc, path, val[, path, val] &amp;hellip;) 替换 JSON 文档中的某一路径下的子文档   JSON_SET(json_doc, path, val[, path, val] &amp;hellip;) 在 JSON 文档中为某一路径设置子文档   JSON_UNQUOTE(json_val) 去掉 JSON 值外面的引号，返回结果为字符串    返回 JSON 值属性的函数    函数及语法糖 功能描述     JSON_DEPTH(json_doc) 返回 JSON 文档的最大深度   JSON_LENGTH(json_doc[, path]) 返回 JSON 文档的长度；如果路径参数已定，则返回该路径下值的长度   JSON_TYPE(json_val) 检查某 JSON 文档内部内容的类型    未支持的函数 TiDB 暂未支持以下 JSON 函数。相关进展参见 TiDB #7546:</description>
    </item>
    
    <item>
      <title>JSON 函数及语法糖</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/json-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/json-functions/</guid>
      <description>JSON 函数及语法糖 TiDB 支持 MySQL 5.7 GA 版本发布的大多数 JSON 函数。MySQL 5.7 发布后，又增加了更多 JSON 函数，TiDB 并未支持所有这些函数（参见未支持的函数）。
创建 JSON 值的函数    函数及语法糖 功能描述     JSON_ARRAY([val[, val] &amp;hellip;]) 根据一系列元素创建一个 JSON 文档   JSON_OBJECT(key, val[, key, val] &amp;hellip;) 根据一系列 K/V 对创建一个 JSON 文档   JSON_QUOTE(string) 返回一个字符串，该字符串为带引号的 JSON 值    搜索 JSON 值的函数    函数及语法糖 功能描述     JSON_CONTAINS(target, candidate[, path]) 通过返回 1 或 0 来表示目标 JSON 文档中是否包含给定的 candidate JSON 文档   JSON_CONTAINS_PATH(json_doc, one_or_all, path[, path] &amp;hellip;) 通过返回 0 或 1 来表示一个 JSON 文档在给定路径是否包含数据   JSON_EXTRACT(json_doc, path[, path] &amp;hellip;) 从 JSON 文档中解出某一路径对应的子文档   -&amp;gt; 返回执行路径后面的 JSON 列的值；JSON_EXTRACT(doc, path_literal) 的语法糖   -&amp;raquo; 返回执行路径后面的 JSON 列的值和转义后的结果； JSON_UNQUOTE(JSON_EXTRACT(doc, path_literal)) 的语法糖   JSON_KEYS(json_doc[, path]) 返回从 JSON 对象的顶级值作为 JSON array 的键，如果给定了路径参数，则从选定路径中获取顶级键    修改 JSON 值的函数    函数及语法糖 功能描述     JSON_INSERT(json_doc, path, val[, path, val] &amp;hellip;) 在 JSON 文档中在某一路径下插入子文档   JSON_MERGE(json_doc, json_doc[, json_doc] &amp;hellip;) 已废弃的 JSON_MERGE_PRESERVE 别名   JSON_MERGE_PRESERVE(json_doc, json_doc[, json_doc] &amp;hellip;) 将两个或多个 JSON 文档合并成一个文档，并返回合并结果   JSON_REMOVE(json_doc, path[, path] &amp;hellip;) 移除 JSON 文档中某一路径下的子文档   JSON_REPLACE(json_doc, path, val[, path, val] &amp;hellip;) 替换 JSON 文档中的某一路径下的子文档   JSON_SET(json_doc, path, val[, path, val] &amp;hellip;) 在 JSON 文档中为某一路径设置子文档   JSON_UNQUOTE(json_val) 去掉 JSON 值外面的引号，返回结果为字符串    返回 JSON 值属性的函数    函数及语法糖 功能描述     JSON_DEPTH(json_doc) 返回 JSON 文档的最大深度   JSON_LENGTH(json_doc[, path]) 返回 JSON 文档的长度；如果路径参数已定，则返回该路径下值的长度   JSON_TYPE(json_val) 检查某 JSON 文档内部内容的类型    未支持的函数 TiDB 暂未支持以下 JSON 函数。相关进展参见 TiDB #7546:</description>
    </item>
    
    <item>
      <title>JSON 类型</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/data-types/json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/data-types/json/</guid>
      <description>JSON 类型 JSON 类型可以存储 JSON 这种半结构化的数据，相比于直接将 JSON 存储为字符串，它的好处在于：
 使用 Binary 格式进行序列化，对 JSON 的内部字段的查询、解析加快； 多了 JSON 合法性验证的步骤，只有合法的 JSON 文档才可以放入这个字段中；  JSON 字段本身上，并不能创建索引。相反，可以对 JSON 文档中的某个子字段创建索引。例如：
 CREATE TABLE city ( id INT PRIMARY KEY, detail JSON, population INT AS (JSON_EXTRACT(detail, &amp;#39;$.population&amp;#39;)) ); INSERT INTO city (id,detail) VALUES (1, &amp;#39;{&amp;#34;name&amp;#34;: &amp;#34;Beijing&amp;#34;, &amp;#34;population&amp;#34;: 100}&amp;#39;); SELECT id FROM city WHERE population &amp;gt;= 100; </description>
    </item>
    
    <item>
      <title>JSON 类型</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/data-types/json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/data-types/json/</guid>
      <description>JSON 类型 JSON 类型可以存储 JSON 这种半结构化的数据，相比于直接将 JSON 存储为字符串，它的好处在于：
 使用 Binary 格式进行序列化，对 JSON 的内部字段的查询、解析加快； 多了 JSON 合法性验证的步骤，只有合法的 JSON 文档才可以放入这个字段中；  JSON 字段本身上，并不能创建索引。相反，可以对 JSON 文档中的某个子字段创建索引。例如：
 CREATE TABLE city ( id INT PRIMARY KEY, detail JSON, population INT AS (JSON_EXTRACT(detail, &amp;#39;$.population&amp;#39;)) ); INSERT INTO city (id,detail) VALUES (1, &amp;#39;{&amp;#34;name&amp;#34;: &amp;#34;Beijing&amp;#34;, &amp;#34;population&amp;#34;: 100}&amp;#39;); SELECT id FROM city WHERE population &amp;gt;= 100; </description>
    </item>
    
    <item>
      <title>JSON 类型</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/data-types/json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/data-types/json/</guid>
      <description>JSON 类型 JSON 类型可以存储 JSON 这种半结构化的数据，相比于直接将 JSON 存储为字符串，它的好处在于：
 使用 Binary 格式进行序列化，对 JSON 的内部字段的查询、解析加快； 多了 JSON 合法性验证的步骤，只有合法的 JSON 文档才可以放入这个字段中；  JSON 字段本身上，并不能创建索引。相反，可以对 JSON 文档中的某个子字段创建索引。例如：
 CREATE TABLE city ( id INT PRIMARY KEY, detail JSON, population INT AS (JSON_EXTRACT(detail, &amp;#39;$.population&amp;#39;)) ); INSERT INTO city (id,detail) VALUES (1, &amp;#39;{&amp;#34;name&amp;#34;: &amp;#34;Beijing&amp;#34;, &amp;#34;population&amp;#34;: 100}&amp;#39;); SELECT id FROM city WHERE population &amp;gt;= 100; </description>
    </item>
    
    <item>
      <title>JSON 类型</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/data-types/json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/data-types/json/</guid>
      <description>JSON 类型 JSON 类型可以存储 JSON 这种半结构化的数据，相比于直接将 JSON 存储为字符串，它的好处在于：
 使用 Binary 格式进行序列化，对 JSON 的内部字段的查询、解析加快； 多了 JSON 合法性验证的步骤，只有合法的 JSON 文档才可以放入这个字段中；  JSON 字段本身上，并不能创建索引。相反，可以对 JSON 文档中的某个子字段创建索引。例如：
 CREATE TABLE city ( id INT PRIMARY KEY, detail JSON, population INT AS (JSON_EXTRACT(detail, &amp;#39;$.population&amp;#39;)) ); INSERT INTO city (id,detail) VALUES (1, &amp;#39;{&amp;#34;name&amp;#34;: &amp;#34;Beijing&amp;#34;, &amp;#34;population&amp;#34;: 100}&amp;#39;); SELECT id FROM city WHERE population &amp;gt;= 100; </description>
    </item>
    
    <item>
      <title>Key Features</title>
      <link>https://pingcap.com/docs/dev/key-features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/key-features/</guid>
      <description>Key features of the TiDB database platform.</description>
    </item>
    
    <item>
      <title>Key Features</title>
      <link>https://pingcap.com/docs/stable/key-features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/key-features/</guid>
      <description>Key features of the TiDB database platform.</description>
    </item>
    
    <item>
      <title>Key Features</title>
      <link>https://pingcap.com/docs/v2.1/key-features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/key-features/</guid>
      <description>Key features of the TiDB database platform.</description>
    </item>
    
    <item>
      <title>Key Features</title>
      <link>https://pingcap.com/docs/v3.1/key-features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/key-features/</guid>
      <description>Key features of the TiDB database platform.</description>
    </item>
    
    <item>
      <title>Key Metrics</title>
      <link>https://pingcap.com/docs/dev/reference/key-monitoring-metrics/overview-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/key-monitoring-metrics/overview-dashboard/</guid>
      <description>Learn some key metrics displayed on the Grafana Overview dashboard.</description>
    </item>
    
    <item>
      <title>Key Metrics</title>
      <link>https://pingcap.com/docs/stable/reference/key-monitoring-metrics/overview-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/key-monitoring-metrics/overview-dashboard/</guid>
      <description>Learn some key metrics displayed on the Grafana Overview dashboard.</description>
    </item>
    
    <item>
      <title>Key Metrics</title>
      <link>https://pingcap.com/docs/v2.1/reference/key-monitoring-metrics/overview-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/key-monitoring-metrics/overview-dashboard/</guid>
      <description>Learn some key metrics displayed on the Grafana Overview dashboard.</description>
    </item>
    
    <item>
      <title>Key Metrics</title>
      <link>https://pingcap.com/docs/v3.1/reference/key-monitoring-metrics/overview-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/key-monitoring-metrics/overview-dashboard/</guid>
      <description>Learn some key metrics displayed on the Grafana Overview dashboard.</description>
    </item>
    
    <item>
      <title>Key Monitoring Metrics of PD</title>
      <link>https://pingcap.com/docs/dev/reference/key-monitoring-metrics/pd-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/key-monitoring-metrics/pd-dashboard/</guid>
      <description>Learn some key metrics displayed on the Grafana PD dashboard.</description>
    </item>
    
    <item>
      <title>Key Monitoring Metrics of PD</title>
      <link>https://pingcap.com/docs/stable/reference/key-monitoring-metrics/pd-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/key-monitoring-metrics/pd-dashboard/</guid>
      <description>Learn some key metrics displayed on the Grafana PD dashboard.</description>
    </item>
    
    <item>
      <title>Key Monitoring Metrics of PD</title>
      <link>https://pingcap.com/docs/v2.1/reference/key-monitoring-metrics/pd-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/key-monitoring-metrics/pd-dashboard/</guid>
      <description>Learn some key metrics displayed on the Grafana PD dashboard.</description>
    </item>
    
    <item>
      <title>Key Monitoring Metrics of PD</title>
      <link>https://pingcap.com/docs/v3.1/reference/key-monitoring-metrics/pd-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/key-monitoring-metrics/pd-dashboard/</guid>
      <description>Learn some key metrics displayed on the Grafana PD dashboard.</description>
    </item>
    
    <item>
      <title>Key Monitoring Metrics of TiKV</title>
      <link>https://pingcap.com/docs/dev/reference/key-monitoring-metrics/tikv-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/key-monitoring-metrics/tikv-dashboard/</guid>
      <description>Learn some key metrics displayed on the Grafana TiKV dashboard.</description>
    </item>
    
    <item>
      <title>Key Monitoring Metrics of TiKV</title>
      <link>https://pingcap.com/docs/stable/reference/key-monitoring-metrics/tikv-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/key-monitoring-metrics/tikv-dashboard/</guid>
      <description>Learn some key metrics displayed on the Grafana TiKV dashboard.</description>
    </item>
    
    <item>
      <title>Key Monitoring Metrics of TiKV</title>
      <link>https://pingcap.com/docs/v2.1/reference/key-monitoring-metrics/tikv-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/key-monitoring-metrics/tikv-dashboard/</guid>
      <description>Learn some key metrics displayed on the Grafana TiKV dashboard.</description>
    </item>
    
    <item>
      <title>Key Monitoring Metrics of TiKV</title>
      <link>https://pingcap.com/docs/v3.1/reference/key-monitoring-metrics/tikv-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/key-monitoring-metrics/tikv-dashboard/</guid>
      <description>Learn some key metrics displayed on the Grafana TiKV dashboard.</description>
    </item>
    
    <item>
      <title>Keywords and Reserved Words</title>
      <link>https://pingcap.com/docs/dev/reference/sql/language-structure/keywords-and-reserved-words/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/language-structure/keywords-and-reserved-words/</guid>
      <description>Learn about the keywords and reserved words in TiDB.</description>
    </item>
    
    <item>
      <title>Keywords and Reserved Words</title>
      <link>https://pingcap.com/docs/stable/reference/sql/language-structure/keywords-and-reserved-words/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/language-structure/keywords-and-reserved-words/</guid>
      <description>Learn about the keywords and reserved words in TiDB.</description>
    </item>
    
    <item>
      <title>Keywords and Reserved Words</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/language-structure/keywords-and-reserved-words/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/language-structure/keywords-and-reserved-words/</guid>
      <description>Learn about the keywords and reserved words in TiDB.</description>
    </item>
    
    <item>
      <title>Keywords and Reserved Words</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/language-structure/keywords-and-reserved-words/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/language-structure/keywords-and-reserved-words/</guid>
      <description>Learn about the keywords and reserved words in TiDB.</description>
    </item>
    
    <item>
      <title>KILL [TIDB]</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/kill/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/kill/</guid>
      <description>TiDB 数据库中 KILL [TIDB] 的使用概况。</description>
    </item>
    
    <item>
      <title>KILL [TIDB]</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/kill/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/kill/</guid>
      <description>TiDB 数据库中 KILL [TIDB] 的使用概况。</description>
    </item>
    
    <item>
      <title>KILL [TIDB]</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/kill/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/kill/</guid>
      <description>TiDB 数据库中 KILL [TIDB] 的使用概况。</description>
    </item>
    
    <item>
      <title>KILL [TIDB]</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/kill/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/kill/</guid>
      <description>TiDB 数据库中 KILL [TIDB] 的使用概况。</description>
    </item>
    
    <item>
      <title>KILL [TIDB] | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/kill/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/kill/</guid>
      <description>An overview of the usage of KILL [TIDB] for the TiDB database.</description>
    </item>
    
    <item>
      <title>KILL [TIDB] | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/kill/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/kill/</guid>
      <description>An overview of the usage of KILL [TIDB] for the TiDB database.</description>
    </item>
    
    <item>
      <title>KILL [TIDB] | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/kill/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/kill/</guid>
      <description>An overview of the usage of KILL [TIDB] for the TiDB database.</description>
    </item>
    
    <item>
      <title>KILL [TIDB] | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/kill/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/kill/</guid>
      <description>An overview of the usage of KILL [TIDB] for the TiDB database.</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB Binlog Drainer 配置</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/reference/configuration/tidb-drainer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/reference/configuration/tidb-drainer/</guid>
      <description>了解 Kubernetes 上的 TiDB Binlog Drainer 配置</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB Binlog Drainer 配置</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/reference/configuration/tidb-drainer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/reference/configuration/tidb-drainer/</guid>
      <description>了解 Kubernetes 上的 TiDB Binlog Drainer 配置</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB Binlog Drainer 配置</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/reference/configuration/tidb-drainer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/reference/configuration/tidb-drainer/</guid>
      <description>了解 Kubernetes 上的 TiDB Binlog Drainer 配置</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 工具指南</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/reference/tools/in-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/reference/tools/in-kubernetes/</guid>
      <description>Kubernetes 上的 TiDB 工具指南 Kubernetes 上的 TiDB 运维管理需要使用一些开源工具。同时，在 Kubernetes 上使用 TiDB 生态工具时，也有特殊的操作要求。本文档详细描述 Kubernetes 上的 TiDB 相关的工具及其使用方法。
在 Kubernetes 上使用 PD Control PD Control 是 PD 的命令行工具，在使用 PD Control 操作 Kubernetes 上的 TiDB 集群时，需要先使用 kubectl port-forward 打开本地到 PD 服务的连接：
 kubectl port-forward -n &amp;lt;namespace&amp;gt; svc/&amp;lt;cluster-name&amp;gt;-pd 2379:2379 &amp;amp;&amp;gt;/tmp/portforward-pd.log &amp;amp; 执行上述命令后，就可以通过 127.0.0.1:2379 访问到 PD 服务，从而直接使用 pd-ctl 命令的默认参数执行操作，如：
 pd-ctl -d config show 假如你本地的 2379 被占据，则需要选择其它端口：
 kubectl port-forward -n &amp;lt;namespace&amp;gt; svc/&amp;lt;cluster-name&amp;gt;-pd &amp;lt;local-port&amp;gt;:2379 &amp;amp;&amp;gt;/tmp/portforward-pd.log &amp;amp; 此时，需要为 pd-ctl 命令显式指定 PD 端口：</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 工具指南</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/reference/tools/in-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/reference/tools/in-kubernetes/</guid>
      <description>Kubernetes 上的 TiDB 工具指南 Kubernetes 上的 TiDB 运维管理需要使用一些开源工具。同时，在 Kubernetes 上使用 TiDB 生态工具时，也有特殊的操作要求。本文档详细描述 Kubernetes 上的 TiDB 相关的工具及其使用方法。
在 Kubernetes 上使用 PD Control PD Control 是 PD 的命令行工具，在使用 PD Control 操作 Kubernetes 上的 TiDB 集群时，需要先使用 kubectl port-forward 打开本地到 PD 服务的连接：
 kubectl port-forward -n &amp;lt;namespace&amp;gt; svc/&amp;lt;cluster-name&amp;gt;-pd 2379:2379 &amp;amp;&amp;gt;/tmp/portforward-pd.log &amp;amp; 执行上述命令后，就可以通过 127.0.0.1:2379 访问到 PD 服务，从而直接使用 pd-ctl 命令的默认参数执行操作，如：
 pd-ctl -d config show 假如你本地的 2379 被占据，则需要选择其它端口：
 kubectl port-forward -n &amp;lt;namespace&amp;gt; svc/&amp;lt;cluster-name&amp;gt;-pd &amp;lt;local-port&amp;gt;:2379 &amp;amp;&amp;gt;/tmp/portforward-pd.log &amp;amp; 此时，需要为 pd-ctl 命令显式指定 PD 端口：</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 工具指南</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/reference/tools/in-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/reference/tools/in-kubernetes/</guid>
      <description>Kubernetes 上的 TiDB 工具指南 Kubernetes 上的 TiDB 运维管理需要使用一些开源工具。同时，在 Kubernetes 上使用 TiDB 生态工具时，也有特殊的操作要求。本文档详细描述 Kubernetes 上的 TiDB 相关的工具及其使用方法。
在 Kubernetes 上使用 PD Control PD Control 是 PD 的命令行工具，在使用 PD Control 操作 Kubernetes 上的 TiDB 集群时，需要先使用 kubectl port-forward 打开本地到 PD 服务的连接：
 kubectl port-forward -n &amp;lt;namespace&amp;gt; svc/&amp;lt;cluster-name&amp;gt;-pd 2379:2379 &amp;amp;&amp;gt;/tmp/portforward-pd.log &amp;amp; 执行上述命令后，就可以通过 127.0.0.1:2379 访问到 PD 服务，从而直接使用 pd-ctl 命令的默认参数执行操作，如：
 pd-ctl -d config show 假如你本地的 2379 被占据，则需要选择其它端口：
 kubectl port-forward -n &amp;lt;namespace&amp;gt; svc/&amp;lt;cluster-name&amp;gt;-pd &amp;lt;local-port&amp;gt;:2379 &amp;amp;&amp;gt;/tmp/portforward-pd.log &amp;amp; 此时，需要为 pd-ctl 命令显式指定 PD 端口：</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群备份配置</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/reference/configuration/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/reference/configuration/backup/</guid>
      <description>Kubernetes 上的 TiDB 集群备份配置 tidb-backup 是一个用于 Kubernetes 上 TiDB 集群备份和恢复的 Helm Chart。本文详细介绍了 tidb-backup 的可配置参数。
mode  运行模式 默认：&amp;ldquo;backup&amp;rdquo; 可选值为 backup（备份集群数据）和 restore（恢复集群数据）  clusterName  目标集群名字 默认：&amp;ldquo;demo&amp;rdquo; 指定要从哪个集群进行备份或将数据恢复到哪个集群中  name  备份名 默认值：&amp;ldquo;fullbackup-&amp;rdquo;，&amp;lt;date&amp;gt; 是备份的开始时间，精确到分钟 备份名用于区分不同的备份数据  secretName   访问目标集群时使用的凭据
  默认：&amp;ldquo;backup-secret&amp;rdquo;
  该 Kubernetes Secret 中需要存储目标集群的登录用户名和密码，你可以通过以下命令来创建这个 Secret：
 kubectl create secret generic backup-secret -n &amp;lt;namespace&amp;gt; --from-literal=user=root --from-literal=password=&amp;lt;password&amp;gt;   storage.className  Kubernetes StorageClass 默认：&amp;ldquo;local-storage&amp;rdquo; 备份任务需要绑定一个持久卷 (Persistent Volume, PV) 来永久或临时存储备份数据，StorageClass 用于声明持久卷使用的存储类型，需要确保该 StorageClass 在 Kubernetes 集群中存在。  storage.</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群备份配置</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/reference/configuration/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/reference/configuration/backup/</guid>
      <description>Kubernetes 上的 TiDB 集群备份配置 tidb-backup 是一个用于 Kubernetes 上 TiDB 集群备份和恢复的 Helm Chart。本文详细介绍了 tidb-backup 的可配置参数。
mode  运行模式 默认：&amp;ldquo;backup&amp;rdquo; 可选值为 backup（备份集群数据）和 restore（恢复集群数据）  clusterName  目标集群名字 默认：&amp;ldquo;demo&amp;rdquo; 指定要从哪个集群进行备份或将数据恢复到哪个集群中  name  备份名 默认值：&amp;ldquo;fullbackup-&amp;rdquo;，&amp;lt;date&amp;gt; 是备份的开始时间，精确到分钟 备份名用于区分不同的备份数据  secretName   访问目标集群时使用的凭据
  默认：&amp;ldquo;backup-secret&amp;rdquo;
  该 Kubernetes Secret 中需要存储目标集群的登录用户名和密码，你可以通过以下命令来创建这个 Secret：
 kubectl create secret generic backup-secret -n &amp;lt;namespace&amp;gt; --from-literal=user=root --from-literal=password=&amp;lt;password&amp;gt;   storage.className  Kubernetes StorageClass 默认：&amp;ldquo;local-storage&amp;rdquo; 备份任务需要绑定一个持久卷 (Persistent Volume, PV) 来永久或临时存储备份数据，StorageClass 用于声明持久卷使用的存储类型，需要确保该 StorageClass 在 Kubernetes 集群中存在。  storage.</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群备份配置</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/reference/configuration/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/reference/configuration/backup/</guid>
      <description>Kubernetes 上的 TiDB 集群备份配置 tidb-backup 是一个用于 Kubernetes 上 TiDB 集群备份和恢复的 Helm Chart。本文详细介绍了 tidb-backup 的可配置参数。
mode  运行模式 默认：&amp;ldquo;backup&amp;rdquo; 可选值为 backup（备份集群数据）和 restore（恢复集群数据）  clusterName  目标集群名字 默认：&amp;ldquo;demo&amp;rdquo; 指定要从哪个集群进行备份或将数据恢复到哪个集群中  name  备份名 默认值：&amp;ldquo;fullbackup-&amp;rdquo;，&amp;lt;date&amp;gt; 是备份的开始时间，精确到分钟 备份名用于区分不同的备份数据  secretName   访问目标集群时使用的凭据
  默认：&amp;ldquo;backup-secret&amp;rdquo;
  该 Kubernetes Secret 中需要存储目标集群的登录用户名和密码，你可以通过以下命令来创建这个 Secret：
 kubectl create secret generic backup-secret -n &amp;lt;namespace&amp;gt; --from-literal=user=root --from-literal=password=&amp;lt;password&amp;gt;   storage.className  Kubernetes StorageClass 默认：&amp;ldquo;local-storage&amp;rdquo; 备份任务需要绑定一个持久卷 (Persistent Volume, PV) 来永久或临时存储备份数据，StorageClass 用于声明持久卷使用的存储类型，需要确保该 StorageClass 在 Kubernetes 集群中存在。  storage.</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群常见问题</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/faq/</guid>
      <description>Kubernetes 上的 TiDB 集群常见问题 本文介绍 Kubernetes 上的 TiDB 集群常见问题以及解决方案。
如何修改时区设置？ 默认情况下，在 Kubernetes 集群上部署的 TiDB 集群各组件容器中的时区为 UTC，如果要修改时区配置，有下面两种情况：
  第一次部署集群
在 TiDB 集群的 values.yaml 文件中，修改 timezone 配置，例如：timezone: Asia/Shanghai，然后部署 TiDB 集群。
  集群已经在运行
如果 TiDB 集群已经在运行，需要做如下修改：
 在 TiDB 集群的 values.yaml 文件中，修改 timezone 配置，例如：timezone: Asia/Shanghai，然后升级 TiDB 集群。 参考时区支持，修改 TiDB 服务时区配置。    TiDB 相关组件可以配置 HPA 或 VPA 么？ TiDB 集群目前还不支持 HPA（Horizontal Pod Autoscaling，自动水平扩缩容）和 VPA（Vertical Pod Autoscaling，自动垂直扩缩容），因为对于数据库这种有状态应用而言，实现自动扩缩容难度较大，无法仅通过 CPU 和 memory 监控数据来简单地实现。</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群常见问题</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/faq/</guid>
      <description>Kubernetes 上的 TiDB 集群常见问题 本文介绍 Kubernetes 上的 TiDB 集群常见问题以及解决方案。
如何修改时区设置？ 默认情况下，在 Kubernetes 集群上部署的 TiDB 集群各组件容器中的时区为 UTC，如果要修改时区配置，有下面两种情况：
  第一次部署集群
在 TiDB 集群的 values.yaml 文件中，修改 timezone 配置，例如：timezone: Asia/Shanghai，然后部署 TiDB 集群。
  集群已经在运行
如果 TiDB 集群已经在运行，需要做如下修改：
 在 TiDB 集群的 values.yaml 文件中，修改 timezone 配置，例如：timezone: Asia/Shanghai，然后升级 TiDB 集群。 参考时区支持，修改 TiDB 服务时区配置。    TiDB 相关组件可以配置 HPA 或 VPA 么？ TiDB 集群目前还不支持 HPA（Horizontal Pod Autoscaling，自动水平扩缩容）和 VPA（Vertical Pod Autoscaling，自动垂直扩缩容），因为对于数据库这种有状态应用而言，实现自动扩缩容难度较大，无法仅通过 CPU 和 memory 监控数据来简单地实现。</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群常见问题</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/faq/</guid>
      <description>Kubernetes 上的 TiDB 集群常见问题 本文介绍 Kubernetes 上的 TiDB 集群常见问题以及解决方案。
如何修改时区设置？ 默认情况下，在 Kubernetes 集群上部署的 TiDB 集群各组件容器中的时区为 UTC，如果要修改时区配置，有下面两种情况：
  第一次部署集群
在 TiDB 集群的 values.yaml 文件中，修改 timezone 配置，例如：timezone: Asia/Shanghai，然后部署 TiDB 集群。
  集群已经在运行
如果 TiDB 集群已经在运行，需要做如下修改：
 在 TiDB 集群的 values.yaml 文件中，修改 timezone 配置，例如：timezone: Asia/Shanghai，然后升级 TiDB 集群。 参考时区支持，修改 TiDB 服务时区配置。    TiDB 相关组件可以配置 HPA 或 VPA 么？ TiDB 集群目前还不支持 HPA（Horizontal Pod Autoscaling，自动水平扩缩容）和 VPA（Vertical Pod Autoscaling，自动垂直扩缩容），因为对于数据库这种有状态应用而言，实现自动扩缩容难度较大，无法仅通过 CPU 和 memory 监控数据来简单地实现。</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群扩缩容</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/scale-in-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/scale-in-kubernetes/</guid>
      <description>Kubernetes 上的 TiDB 集群扩缩容 本文介绍 TiDB 在 Kubernetes 中如何进行水平扩缩容和垂直扩缩容。
水平扩缩容 TiDB 水平扩缩容操作指的是通过增加或减少节点的数量，来达到集群扩缩容的目的。扩缩容 TiDB 集群时，会按照填入的 replicas 值，对 PD、TiKV、TiDB 进行顺序扩缩容操作。扩容操作按照节点编号由小到大增加节点，缩容操作按照节点编号由大到小删除节点。
水平扩缩容操作   修改集群的 value.yaml 文件中的 pd.replicas、tidb.replicas、tikv.replicas 至期望值。
  执行 helm upgrade 命令进行扩缩容：
 helm upgrade &amp;lt;release-name&amp;gt; pingcap/tidb-cluster -f values.yaml --version=&amp;lt;chart-version&amp;gt;   查看集群水平扩缩容状态：
 watch kubectl -n &amp;lt;namespace&amp;gt; get pod -o wide 当所有组件的 Pod 数量都达到了预设值，并且都进入 Running 状态后，水平扩缩容完成。
   注意：
 PD、TiKV 组件在滚动升级的过程中不会触发扩缩容操作。 TiKV 组件在缩容过程中会调用 PD 接口将对应 TiKV 标记为下线，然后将其上数据迁移到其它 TiKV 节点，在数据迁移期间 TiKV Pod 依然是 Running 状态，数据迁移完成后对应 Pod 才会被删除，缩容时间与待缩容的 TiKV 上的数据量有关，可以通过 kubectl get tidbcluster -n &amp;lt;namespace&amp;gt; &amp;lt;release-name&amp;gt; -o json | jq &#39;.</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群扩缩容</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/scale-in-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/scale-in-kubernetes/</guid>
      <description>Kubernetes 上的 TiDB 集群扩缩容 本文介绍 TiDB 在 Kubernetes 中如何进行水平扩缩容和垂直扩缩容。
水平扩缩容 TiDB 水平扩缩容操作指的是通过增加或减少节点的数量，来达到集群扩缩容的目的。扩缩容 TiDB 集群时，会按照填入的 replicas 值，对 PD、TiKV、TiDB 进行顺序扩缩容操作。扩容操作按照节点编号由小到大增加节点，缩容操作按照节点编号由大到小删除节点。
水平扩缩容操作   修改集群的 value.yaml 文件中的 pd.replicas、tidb.replicas、tikv.replicas 至期望值。
  执行 helm upgrade 命令进行扩缩容：
 helm upgrade &amp;lt;release-name&amp;gt; pingcap/tidb-cluster -f values.yaml --version=&amp;lt;chart-version&amp;gt;   查看集群水平扩缩容状态：
 watch kubectl -n &amp;lt;namespace&amp;gt; get pod -o wide 当所有组件的 Pod 数量都达到了预设值，并且都进入 Running 状态后，水平扩缩容完成。
   注意：
 PD、TiKV 组件在滚动升级的过程中不会触发扩缩容操作。 TiKV 组件在缩容过程中会调用 PD 接口将对应 TiKV 标记为下线，然后将其上数据迁移到其它 TiKV 节点，在数据迁移期间 TiKV Pod 依然是 Running 状态，数据迁移完成后对应 Pod 才会被删除，缩容时间与待缩容的 TiKV 上的数据量有关，可以通过 kubectl get tidbcluster -n &amp;lt;namespace&amp;gt; &amp;lt;release-name&amp;gt; -o json | jq &#39;.</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群扩缩容</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/scale-in-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/scale-in-kubernetes/</guid>
      <description>Kubernetes 上的 TiDB 集群扩缩容 本文介绍 TiDB 在 Kubernetes 中如何进行水平扩缩容和垂直扩缩容。
水平扩缩容 TiDB 水平扩缩容操作指的是通过增加或减少节点的数量，来达到集群扩缩容的目的。扩缩容 TiDB 集群时，会按照填入的 replicas 值，对 PD、TiKV、TiDB 进行顺序扩缩容操作。扩容操作按照节点编号由小到大增加节点，缩容操作按照节点编号由大到小删除节点。
水平扩缩容操作   修改集群的 value.yaml 文件中的 pd.replicas、tidb.replicas、tikv.replicas 至期望值。
  执行 helm upgrade 命令进行扩缩容：
 helm upgrade &amp;lt;release-name&amp;gt; pingcap/tidb-cluster -f values.yaml --version=&amp;lt;chart-version&amp;gt;   查看集群水平扩缩容状态：
 watch kubectl -n &amp;lt;namespace&amp;gt; get pod -o wide 当所有组件的 Pod 数量都达到了预设值，并且都进入 Running 状态后，水平扩缩容完成。
   注意：
 PD、TiKV 组件在滚动升级的过程中不会触发扩缩容操作。 TiKV 组件在缩容过程中会调用 PD 接口将对应 TiKV 标记为下线，然后将其上数据迁移到其它 TiKV 节点，在数据迁移期间 TiKV Pod 依然是 Running 状态，数据迁移完成后对应 Pod 才会被删除，缩容时间与待缩容的 TiKV 上的数据量有关，可以通过 kubectl get tidbcluster -n &amp;lt;namespace&amp;gt; &amp;lt;release-name&amp;gt; -o json | jq &#39;.</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群故障自动转移</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/auto-failover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/auto-failover/</guid>
      <description>Kubernetes 上的 TiDB 集群故障自动转移 故障自动转移是指在 TiDB 集群的某些节点出现故障时，TiDB Operator 会自动添加一个节点，保证 TiDB 集群的高可用，类似于 K8s 的 Deployment 行为。
由于 TiDB Operator 基于 StatefulSet 来管理 Pod，但 StatefulSet 在某些 Pod 发生故障时不会自动创建新节点来替换旧节点，所以，TiDB Operator 扩展了 StatefulSet 的这种行为，添加了 Auto Failover 功能。
Auto Failover 功能在 TiDB Operator 中默认关闭。部署 TiDB Operator 时，可通过设置 charts/tidb-operator/values.yaml 文件的 controllerManager.autoFailover 为 true 开启该功能：
controllerManager: serviceAccount: tidb-controller-manager logLevel: 2 replicas: 1 resources: limits: cpu: 250m memory: 150Mi requests: cpu: 80m memory: 50Mi # autoFailover is whether tidb-operator should auto failover when failure occurs autoFailover: true # pd failover period default(5m) pdFailoverPeriod: 5m # tikv failover period default(5m) tikvFailoverPeriod: 5m # tidb failover period default(5m) tidbFailoverPeriod: 5m pdFailoverPeriod、tikvFailoverPeriod 和 tidbFailoverPeriod 默认均为 5 分钟，它们的含义是在确认实例故障后的等待超时时间，超过这个时间后，TiDB Operator 就开始做自动的故障转移。</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群故障自动转移</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/auto-failover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/auto-failover/</guid>
      <description>Kubernetes 上的 TiDB 集群故障自动转移 故障自动转移是指在 TiDB 集群的某些节点出现故障时，TiDB Operator 会自动添加一个节点，保证 TiDB 集群的高可用，类似于 K8s 的 Deployment 行为。
由于 TiDB Operator 基于 StatefulSet 来管理 Pod，但 StatefulSet 在某些 Pod 发生故障时不会自动创建新节点来替换旧节点，所以，TiDB Operator 扩展了 StatefulSet 的这种行为，添加了 Auto Failover 功能。
Auto Failover 功能在 TiDB Operator 中默认关闭。部署 TiDB Operator 时，可通过设置 charts/tidb-operator/values.yaml 文件的 controllerManager.autoFailover 为 true 开启该功能：
controllerManager: serviceAccount: tidb-controller-manager logLevel: 2 replicas: 1 resources: limits: cpu: 250m memory: 150Mi requests: cpu: 80m memory: 50Mi # autoFailover is whether tidb-operator should auto failover when failure occurs autoFailover: true # pd failover period default(5m) pdFailoverPeriod: 5m # tikv failover period default(5m) tikvFailoverPeriod: 5m # tidb failover period default(5m) tidbFailoverPeriod: 5m pdFailoverPeriod、tikvFailoverPeriod 和 tidbFailoverPeriod 默认均为 5 分钟，它们的含义是在确认实例故障后的等待超时时间，超过这个时间后，TiDB Operator 就开始做自动的故障转移。</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群故障自动转移</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/auto-failover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/auto-failover/</guid>
      <description>Kubernetes 上的 TiDB 集群故障自动转移 故障自动转移是指在 TiDB 集群的某些节点出现故障时，TiDB Operator 会自动添加一个节点，保证 TiDB 集群的高可用，类似于 K8s 的 Deployment 行为。
由于 TiDB Operator 基于 StatefulSet 来管理 Pod，但 StatefulSet 在某些 Pod 发生故障时不会自动创建新节点来替换旧节点，所以，TiDB Operator 扩展了 StatefulSet 的这种行为，添加了 Auto Failover 功能。
Auto Failover 功能在 TiDB Operator 中默认关闭。部署 TiDB Operator 时，可通过设置 charts/tidb-operator/values.yaml 文件的 controllerManager.autoFailover 为 true 开启该功能：
controllerManager: serviceAccount: tidb-controller-manager logLevel: 2 replicas: 1 resources: limits: cpu: 250m memory: 150Mi requests: cpu: 80m memory: 50Mi # autoFailover is whether tidb-operator should auto failover when failure occurs autoFailover: true # pd failover period default(5m) pdFailoverPeriod: 5m # tikv failover period default(5m) tikvFailoverPeriod: 5m # tidb failover period default(5m) tidbFailoverPeriod: 5m pdFailoverPeriod、tikvFailoverPeriod 和 tidbFailoverPeriod 默认均为 5 分钟，它们的含义是在确认实例故障后的等待超时时间，超过这个时间后，TiDB Operator 就开始做自动的故障转移。</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群故障诊断</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/troubleshoot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/troubleshoot/</guid>
      <description>Kubernetes 上的 TiDB 集群故障诊断 本文介绍了 Kubernetes 上 TiDB 集群的一些常见故障以及诊断解决方案。
诊断模式 当 Pod 处于 CrashLoopBackoff 状态时，Pod 内会容器不断退出，导致无法正常使用 kubectl exec 或 tkctl debug，给诊断带来不便。为了解决这个问题，TiDB in Kubernetes 提供了 PD/TiKV/TiDB Pod 诊断模式。在诊断模式下，Pod 内的容器启动后会直接挂起，不会再进入重复 Crash 的状态，此时，便可以通过 kubectl exec 或 tkctl debug 连接 Pod 内的容器进行诊断。
操作方式：
首先，为待诊断的 Pod 添加 Annotation：
 kubectl annotate pod &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt; runmode=debug 在 Pod 内的容器下次重启时，会检测到该 Annotation，进入诊断模式。等待 Pod 进入 Running 状态即可开始诊断：
 watch kubectl get pod &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt; 下面是使用 kubectl exec 进入容器进行诊断工作的例子：</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群故障诊断</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/troubleshoot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/troubleshoot/</guid>
      <description>Kubernetes 上的 TiDB 集群故障诊断 本文介绍了 Kubernetes 上 TiDB 集群的一些常见故障以及诊断解决方案。
诊断模式 当 Pod 处于 CrashLoopBackoff 状态时，Pod 内会容器不断退出，导致无法正常使用 kubectl exec 或 tkctl debug，给诊断带来不便。为了解决这个问题，TiDB in Kubernetes 提供了 PD/TiKV/TiDB Pod 诊断模式。在诊断模式下，Pod 内的容器启动后会直接挂起，不会再进入重复 Crash 的状态，此时，便可以通过 kubectl exec 或 tkctl debug 连接 Pod 内的容器进行诊断。
操作方式：
首先，为待诊断的 Pod 添加 Annotation：
 kubectl annotate pod &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt; runmode=debug 在 Pod 内的容器下次重启时，会检测到该 Annotation，进入诊断模式。等待 Pod 进入 Running 状态即可开始诊断：
 watch kubectl get pod &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt; 下面是使用 kubectl exec 进入容器进行诊断工作的例子：</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群故障诊断</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/troubleshoot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/troubleshoot/</guid>
      <description>Kubernetes 上的 TiDB 集群故障诊断 本文介绍了 Kubernetes 上 TiDB 集群的一些常见故障以及诊断解决方案。
诊断模式 当 Pod 处于 CrashLoopBackoff 状态时，Pod 内会容器不断退出，导致无法正常使用 kubectl exec 或 tkctl debug，给诊断带来不便。为了解决这个问题，TiDB in Kubernetes 提供了 PD/TiKV/TiDB Pod 诊断模式。在诊断模式下，Pod 内的容器启动后会直接挂起，不会再进入重复 Crash 的状态，此时，便可以通过 kubectl exec 或 tkctl debug 连接 Pod 内的容器进行诊断。
操作方式：
首先，为待诊断的 Pod 添加 Annotation：
 kubectl annotate pod &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt; runmode=debug 在 Pod 内的容器下次重启时，会检测到该 Annotation，进入诊断模式。等待 Pod 进入 Running 状态即可开始诊断：
 watch kubectl get pod &amp;lt;pod-name&amp;gt; -n &amp;lt;namespace&amp;gt; 下面是使用 kubectl exec 进入容器进行诊断工作的例子：</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群环境需求</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/deploy/prerequisites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/deploy/prerequisites/</guid>
      <description>Kubernetes 上的 TiDB 集群环境需求 本文介绍在 Kubernetes 上部署 TiDB 集群的软硬件环境需求。
软件版本要求    软件名称 版本     Docker Docker CE 18.09.6   Kubernetes v1.12.5+   CentOS CentOS 7.6，内核要求为 3.10.0-957 或之后版本    内核参数设置    配置项 设置值     net.core.somaxconn 32768   vm.swappiness 0   net.ipv4.tcp_syncookies 0   net.ipv4.ip_forward 1   fs.file-max 1000000   fs.inotify.max_user_watches 1048576   fs.</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群环境需求</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/deploy/prerequisites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/deploy/prerequisites/</guid>
      <description>Kubernetes 上的 TiDB 集群环境需求 本文介绍在 Kubernetes 上部署 TiDB 集群的软硬件环境需求。
软件版本要求    软件名称 版本     Docker Docker CE 18.09.6   Kubernetes v1.12.5+   CentOS CentOS 7.6，内核要求为 3.10.0-957 或之后版本    内核参数设置    配置项 设置值     net.core.somaxconn 32768   vm.swappiness 0   net.ipv4.tcp_syncookies 0   net.ipv4.ip_forward 1   fs.file-max 1000000   fs.inotify.max_user_watches 1048576   fs.</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群环境需求</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/deploy/prerequisites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/deploy/prerequisites/</guid>
      <description>Kubernetes 上的 TiDB 集群环境需求 本文介绍在 Kubernetes 上部署 TiDB 集群的软硬件环境需求。
软件版本要求    软件名称 版本     Docker Docker CE 18.09.6   Kubernetes v1.12.5+   CentOS CentOS 7.6，内核要求为 3.10.0-957 或之后版本    内核参数设置    配置项 设置值     net.core.somaxconn 32768   vm.swappiness 0   net.ipv4.tcp_syncookies 0   net.ipv4.ip_forward 1   fs.file-max 1000000   fs.inotify.max_user_watches 1048576   fs.</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群监控</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/monitor/tidb-in-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/monitor/tidb-in-kubernetes/</guid>
      <description>Kubernetes 上的 TiDB 集群监控 基于 Kubernetes 环境部署的 TiDB 集群监控可以大体分为两个部分：对 TiDB 集群本身的监控、对 Kubernetes 集群及 TiDB Operator 的监控。本文将对两者进行简要说明。
TiDB 集群的监控 TiDB 通过 Prometheus 和 Grafana 监控 TiDB 集群。在通过 TiDB Operator 创建新的 TiDB 集群时，对于每个 TiDB 集群，会同时创建、配置一套独立的监控系统，与 TiDB 集群运行在同一 Namespace，包括 Prometheus 和 Grafana 两个组件。
监控数据默认没有持久化，如果由于某些原因监控容器重启，已有的监控数据会丢失。可以在 values.yaml 中设置 monitor.persistent 为 true 来持久化监控数据。开启此选项时应将 storageClass 设置为一个当前集群中已有的存储，并且此存储应当支持将数据持久化，否则仍然会存在数据丢失的风险。
在 TiDB 集群监控中有一些监控系统配置的细节可供参考。
查看监控面板 可以通过 kubectl port-forward 查看监控面板：
 kubectl port-forward -n &amp;lt;namespace&amp;gt; svc/&amp;lt;release-name&amp;gt;-grafana 3000:3000 &amp;amp;&amp;gt;/tmp/portforward-grafana.log &amp;amp; 然后在浏览器中打开 http://localhost:3000，默认用户名和密码都为 admin。
Grafana 服务默认通过 NodePort 暴露，如果 Kubernetes 集群支持负载均衡器，你可以在 values.</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群监控</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/monitor/tidb-in-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/monitor/tidb-in-kubernetes/</guid>
      <description>Kubernetes 上的 TiDB 集群监控 基于 Kubernetes 环境部署的 TiDB 集群监控可以大体分为两个部分：对 TiDB 集群本身的监控、对 Kubernetes 集群及 TiDB Operator 的监控。本文将对两者进行简要说明。
TiDB 集群的监控 TiDB 通过 Prometheus 和 Grafana 监控 TiDB 集群。在通过 TiDB Operator 创建新的 TiDB 集群时，对于每个 TiDB 集群，会同时创建、配置一套独立的监控系统，与 TiDB 集群运行在同一 Namespace，包括 Prometheus 和 Grafana 两个组件。
监控数据默认没有持久化，如果由于某些原因监控容器重启，已有的监控数据会丢失。可以在 values.yaml 中设置 monitor.persistent 为 true 来持久化监控数据。开启此选项时应将 storageClass 设置为一个当前集群中已有的存储，并且此存储应当支持将数据持久化，否则仍然会存在数据丢失的风险。
在 TiDB 集群监控中有一些监控系统配置的细节可供参考。
查看监控面板 可以通过 kubectl port-forward 查看监控面板：
 kubectl port-forward -n &amp;lt;namespace&amp;gt; svc/&amp;lt;release-name&amp;gt;-grafana 3000:3000 &amp;amp;&amp;gt;/tmp/portforward-grafana.log 然后在浏览器中打开 http://localhost:3000，默认用户名和密码都为 admin。
Grafana 服务默认通过 NodePort 暴露，如果 Kubernetes 集群支持负载均衡器，你可以在 values.</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群监控</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/monitor/tidb-in-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/monitor/tidb-in-kubernetes/</guid>
      <description>Kubernetes 上的 TiDB 集群监控 基于 Kubernetes 环境部署的 TiDB 集群监控可以大体分为两个部分：对 TiDB 集群本身的监控、对 Kubernetes 集群及 TiDB Operator 的监控。本文将对两者进行简要说明。
TiDB 集群的监控 TiDB 通过 Prometheus 和 Grafana 监控 TiDB 集群。在通过 TiDB Operator 创建新的 TiDB 集群时，对于每个 TiDB 集群，会同时创建、配置一套独立的监控系统，与 TiDB 集群运行在同一 Namespace，包括 Prometheus 和 Grafana 两个组件。
监控数据默认没有持久化，如果由于某些原因监控容器重启，已有的监控数据会丢失。可以在 values.yaml 中设置 monitor.persistent 为 true 来持久化监控数据。开启此选项时应将 storageClass 设置为一个当前集群中已有的存储，并且此存储应当支持将数据持久化，否则仍然会存在数据丢失的风险。
在 TiDB 集群监控中有一些监控系统配置的细节可供参考。
查看监控面板 可以通过 kubectl port-forward 查看监控面板：
 kubectl port-forward -n &amp;lt;namespace&amp;gt; svc/&amp;lt;release-name&amp;gt;-grafana 3000:3000 &amp;amp;&amp;gt;/tmp/portforward-grafana.log 然后在浏览器中打开 http://localhost:3000，默认用户名和密码都为 admin。
Grafana 服务默认通过 NodePort 暴露，如果 Kubernetes 集群支持负载均衡器，你可以在 values.</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群配置</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/reference/configuration/tidb-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/reference/configuration/tidb-cluster/</guid>
      <description>Kubernetes 上的 TiDB 集群配置 本文介绍 Kubernetes 上 TiDB 集群的配置参数、资源配置，以及容灾配置。
配置参数 TiDB Operator 使用 Helm 部署和管理 TiDB 集群。通过 Helm 获取的配置文件默认提供了基本的配置，通过这个基本配置，可以快速启动一个 TiDB 集群。但是如果用户需要特殊配置或是用于生产环境，则需要根据以下配置参数列表手动配置对应的配置项。
 注意：
下文用 values.yaml 指代要修改的 TiDB 集群配置文件。
    参数名 说明 默认值     rbac.create 是否启用 Kubernetes 的 RBAC true   clusterName TiDB 集群名，默认不设置该变量，tidb-cluster 会直接用执行安装时的 ReleaseName 代替 nil   extraLabels 添加额外的 labels 到 TidbCluster 对象 (CRD) 上，参考：labels {}   schedulerName TiDB 集群使用的调度器 tidb-scheduler   timezone TiDB 集群默认时区 UTC   pvReclaimPolicy TiDB 集群使用的 PV (Persistent Volume)的 reclaim policy Retain   services[0].</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群配置</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/reference/configuration/tidb-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/reference/configuration/tidb-cluster/</guid>
      <description>Kubernetes 上的 TiDB 集群配置 本文介绍 Kubernetes 上 TiDB 集群的配置参数、资源配置，以及容灾配置。
配置参数 TiDB Operator 使用 Helm 部署和管理 TiDB 集群。通过 Helm 获取的配置文件默认提供了基本的配置，通过这个基本配置，可以快速启动一个 TiDB 集群。但是如果用户需要特殊配置或是用于生产环境，则需要根据以下配置参数列表手动配置对应的配置项。
 注意：
下文用 values.yaml 指代要修改的 TiDB 集群配置文件。
    参数名 说明 默认值     rbac.create 是否启用 Kubernetes 的 RBAC true   clusterName TiDB 集群名，默认不设置该变量，tidb-cluster 会直接用执行安装时的 ReleaseName 代替 nil   extraLabels 添加额外的 labels 到 TidbCluster 对象 (CRD) 上，参考：labels {}   schedulerName TiDB 集群使用的调度器 tidb-scheduler   timezone TiDB 集群默认时区 UTC   pvReclaimPolicy TiDB 集群使用的 PV (Persistent Volume)的 reclaim policy Retain   services[0].</description>
    </item>
    
    <item>
      <title>Kubernetes 上的 TiDB 集群配置</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/reference/configuration/tidb-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/reference/configuration/tidb-cluster/</guid>
      <description>Kubernetes 上的 TiDB 集群配置 本文介绍 Kubernetes 上 TiDB 集群的配置参数、资源配置，以及容灾配置。
配置参数 TiDB Operator 使用 Helm 部署和管理 TiDB 集群。通过 Helm 获取的配置文件默认提供了基本的配置，通过这个基本配置，可以快速启动一个 TiDB 集群。但是如果用户需要特殊配置或是用于生产环境，则需要根据以下配置参数列表手动配置对应的配置项。
 注意：
下文用 values.yaml 指代要修改的 TiDB 集群配置文件。
    参数名 说明 默认值     rbac.create 是否启用 Kubernetes 的 RBAC true   clusterName TiDB 集群名，默认不设置该变量，tidb-cluster 会直接用执行安装时的 ReleaseName 代替 nil   extraLabels 添加额外的 labels 到 TidbCluster 对象 (CRD) 上，参考：labels {}   schedulerName TiDB 集群使用的调度器 tidb-scheduler   timezone TiDB 集群默认时区 UTC   pvReclaimPolicy TiDB 集群使用的 PV (Persistent Volume)的 reclaim policy Retain   services[0].</description>
    </item>
    
    <item>
      <title>Kubernetes 上的持久化存储类型配置</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/reference/configuration/storage-class/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/reference/configuration/storage-class/</guid>
      <description>Kubernetes 上的持久化存储类型配置 TiDB 集群中 PD、TiKV、监控等组件以及 TiDB Binlog 和备份等工具都需要使用将数据持久化的存储。Kubernetes 上的数据持久化需要使用 PersistentVolume (PV)。Kubernetes 提供多种存储类型，主要分为两大类：
  网络存储
存储介质不在当前节点，而是通过网络方式挂载到当前节点。一般有多副本冗余提供高可用保证，在节点出现故障时，对应网络存储可以再挂载到其它节点继续使用。
  本地存储
存储介质在当前节点，通常能提供比网络存储更低的延迟，但没有多副本冗余，一旦节点出故障，数据就有可能丢失。如果是 IDC 服务器，节点故障可以一定程度上对数据进行恢复，但公有云上使用本地盘的虚拟机在节点故障后，数据是无法找回的。
  PV 一般由系统管理员或 volume provisioner 自动创建，PV 与 Pod 是通过 PersistentVolumeClaim (PVC) 进行关联的。普通用户在使用 PV 时并不需要直接创建 PV，而是通过 PVC 来申请使用 PV，对应的 volume provisioner 根据 PVC 创建符合要求的 PV，并将 PVC 与该 PV 进行绑定。
 警告：
为了数据安全，任何情况下都不要直接删除 PV，除非对 volume provisioner 原理非常清楚。
 TiDB 集群推荐存储类型 TiKV 自身借助 Raft 实现了数据复制，出现节点故障后，PD 会自动进行数据调度补齐缺失的数据副本，同时 TiKV 要求存储有较低的读写延迟，所以生产环境强烈推荐使用本地 SSD 存储。</description>
    </item>
    
    <item>
      <title>Kubernetes 上的持久化存储类型配置</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/reference/configuration/storage-class/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/reference/configuration/storage-class/</guid>
      <description>Kubernetes 上的持久化存储类型配置 TiDB 集群中 PD、TiKV、监控等组件以及 TiDB Binlog 和备份等工具都需要使用将数据持久化的存储。Kubernetes 上的数据持久化需要使用 PersistentVolume (PV)。Kubernetes 提供多种存储类型，主要分为两大类：
  网络存储
存储介质不在当前节点，而是通过网络方式挂载到当前节点。一般有多副本冗余提供高可用保证，在节点出现故障时，对应网络存储可以再挂载到其它节点继续使用。
  本地存储
存储介质在当前节点，通常能提供比网络存储更低的延迟，但没有多副本冗余，一旦节点出故障，数据就有可能丢失。如果是 IDC 服务器，节点故障可以一定程度上对数据进行恢复，但公有云上使用本地盘的虚拟机在节点故障后，数据是无法找回的。
  PV 一般由系统管理员或 volume provisioner 自动创建，PV 与 Pod 是通过 PersistentVolumeClaim (PVC) 进行关联的。普通用户在使用 PV 时并不需要直接创建 PV，而是通过 PVC 来申请使用 PV，对应的 volume provisioner 根据 PVC 创建符合要求的 PV，并将 PVC 与该 PV 进行绑定。
 警告：
为了数据安全，任何情况下都不要直接删除 PV，除非对 volume provisioner 原理非常清楚。
 TiDB 集群推荐存储类型 TiKV 自身借助 Raft 实现了数据复制，出现节点故障后，PD 会自动进行数据调度补齐缺失的数据副本，同时 TiKV 要求存储有较低的读写延迟，所以生产环境强烈推荐使用本地 SSD 存储。</description>
    </item>
    
    <item>
      <title>Kubernetes 上的持久化存储类型配置</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/reference/configuration/storage-class/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/reference/configuration/storage-class/</guid>
      <description>Kubernetes 上的持久化存储类型配置 TiDB 集群中 PD、TiKV、监控等组件以及 TiDB Binlog 和备份等工具都需要使用将数据持久化的存储。Kubernetes 上的数据持久化需要使用 PersistentVolume (PV)。Kubernetes 提供多种存储类型，主要分为两大类：
  网络存储
存储介质不在当前节点，而是通过网络方式挂载到当前节点。一般有多副本冗余提供高可用保证，在节点出现故障时，对应网络存储可以再挂载到其它节点继续使用。
  本地存储
存储介质在当前节点，通常能提供比网络存储更低的延迟，但没有多副本冗余，一旦节点出故障，数据就有可能丢失。如果是 IDC 服务器，节点故障可以一定程度上对数据进行恢复，但公有云上使用本地盘的虚拟机在节点故障后，数据是无法找回的。
  PV 一般由系统管理员或 volume provisioner 自动创建，PV 与 Pod 是通过 PersistentVolumeClaim (PVC) 进行关联的。普通用户在使用 PV 时并不需要直接创建 PV，而是通过 PVC 来申请使用 PV，对应的 volume provisioner 根据 PVC 创建符合要求的 PV，并将 PVC 与该 PV 进行绑定。
 警告：
为了数据安全，任何情况下都不要直接删除 PV，除非对 volume provisioner 原理非常清楚。
 TiDB 集群推荐存储类型 TiKV 自身借助 Raft 实现了数据复制，出现节点故障后，PD 会自动进行数据调度补齐缺失的数据副本，同时 TiKV 要求存储有较低的读写延迟，所以生产环境强烈推荐使用本地 SSD 存储。</description>
    </item>
    
    <item>
      <title>Kubernetes 上的集群初始化配置</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/initialize-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/initialize-cluster/</guid>
      <description>Kubernetes 上的集群初始化配置 本文介绍如何对 Kubernetes 上的集群进行初始化配置完成初始化账号和密码设置，以及批量自动执行 SQL 语句对数据库进行初始化。
 注意：
以下功能只在第一次创建集群时有作用，集群创建之后再设置或修改不会生效。
 设置初始化账号和密码 集群创建时默认会创建 root 账号，但是密码为空，这会带来一些安全性问题。可以通过如下步骤为 root 账号设置初始密码：
  创建 Namespace
在部署集群前通过下面命令创建 Namespace：
 kubectl create namespace &amp;lt;namespace&amp;gt;   创建 Secret
在部署集群前通过下面命令创建 Secret 指定 root 账号密码：
 kubectl create secret generic tidb-secret --from-literal=root=&amp;lt;root-password&amp;gt; --namespace=&amp;lt;namespace&amp;gt; 如果希望能自动创建其它用户，可以在上面命令里面再加上其他用户的 username 和 password，例如：
 kubectl create secret generic tidb-secret --from-literal=root=&amp;lt;root-password&amp;gt; --from-literal=developer=&amp;lt;developer-passowrd&amp;gt; --namespace=&amp;lt;namespace&amp;gt; 该命令会创建 root 和 developer 两个用户的密码，存到 tidb-secret 的 Secret 里面。并且创建的普通用户 developer 默认只有 USAGE 权限，其他权限请在 tidb.</description>
    </item>
    
    <item>
      <title>Kubernetes 上的集群初始化配置</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/initialize-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/initialize-cluster/</guid>
      <description>Kubernetes 上的集群初始化配置 本文介绍如何对 Kubernetes 上的集群进行初始化配置完成初始化账号和密码设置，以及批量自动执行 SQL 语句对数据库进行初始化。
 注意：
以下功能只在第一次创建集群时有作用，集群创建之后再设置或修改不会生效。
 设置初始化账号和密码 集群创建时默认会创建 root 账号，但是密码为空，这会带来一些安全性问题。可以通过如下步骤为 root 账号设置初始密码：
  创建 Namespace
在部署集群前通过下面命令创建 Namespace：
 kubectl create namespace &amp;lt;namespace&amp;gt;   创建 Secret
在部署集群前通过下面命令创建 Secret 指定 root 账号密码：
 kubectl create secret generic tidb-secret --from-literal=root=&amp;lt;root-password&amp;gt; --namespace=&amp;lt;namespace&amp;gt; 如果希望能自动创建其它用户，可以在上面命令里面再加上其他用户的 username 和 password，例如：
 kubectl create secret generic tidb-secret --from-literal=root=&amp;lt;root-password&amp;gt; --from-literal=developer=&amp;lt;developer-passowrd&amp;gt; --namespace=&amp;lt;namespace&amp;gt; 该命令会创建 root 和 developer 两个用户的密码，存到 tidb-secret 的 Secret 里面。并且创建的普通用户 developer 默认只有 USAGE 权限，其他权限请在 tidb.</description>
    </item>
    
    <item>
      <title>Kubernetes 上的集群初始化配置</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/initialize-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/initialize-cluster/</guid>
      <description>Kubernetes 上的集群初始化配置 本文介绍如何对 Kubernetes 上的集群进行初始化配置完成初始化账号和密码设置，以及批量自动执行 SQL 语句对数据库进行初始化。
 注意：
以下功能只在第一次创建集群时有作用，集群创建之后再设置或修改不会生效。
 设置初始化账号和密码 集群创建时默认会创建 root 账号，但是密码为空，这会带来一些安全性问题。可以通过如下步骤为 root 账号设置初始密码：
  创建 Namespace
在部署集群前通过下面命令创建 Namespace：
 kubectl create namespace &amp;lt;namespace&amp;gt;   创建 Secret
在部署集群前通过下面命令创建 Secret 指定 root 账号密码：
 kubectl create secret generic tidb-secret --from-literal=root=&amp;lt;root-password&amp;gt; --namespace=&amp;lt;namespace&amp;gt; 如果希望能自动创建其它用户，可以在上面命令里面再加上其他用户的 username 和 password，例如：
 kubectl create secret generic tidb-secret --from-literal=root=&amp;lt;root-password&amp;gt; --from-literal=developer=&amp;lt;developer-passowrd&amp;gt; --namespace=&amp;lt;namespace&amp;gt; 该命令会创建 root 和 developer 两个用户的密码，存到 tidb-secret 的 Secret 里面。并且创建的普通用户 developer 默认只有 USAGE 权限，其他权限请在 tidb.</description>
    </item>
    
    <item>
      <title>Lab Recap: Query Optimization</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/query-optimization/lab-recap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/query-optimization/lab-recap/</guid>
      <description>Lab Recap: Query Optimization  </description>
    </item>
    
    <item>
      <title>Lab Recap: TiDB Platform Lab</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/tidb-overview/lab-recap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/tidb-overview/lab-recap/</guid>
      <description>Lab Recap: TiDB Platform Lab  </description>
    </item>
    
    <item>
      <title>List of Expressions for Pushdown</title>
      <link>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/expressions-pushed-down/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/expressions-pushed-down/</guid>
      <description>Learn a list of expressions that can be pushed down to TiKV and the related operations.</description>
    </item>
    
    <item>
      <title>List of Expressions for Pushdown</title>
      <link>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/expressions-pushed-down/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/expressions-pushed-down/</guid>
      <description>Learn a list of expressions that can be pushed down to TiKV and the related operations.</description>
    </item>
    
    <item>
      <title>List of Expressions for Pushdown</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/expressions-pushed-down/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/expressions-pushed-down/</guid>
      <description>Learn a list of expressions that can be pushed down to TiKV and the related operations.</description>
    </item>
    
    <item>
      <title>Literal Values</title>
      <link>https://pingcap.com/docs/dev/reference/sql/language-structure/literal-values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/language-structure/literal-values/</guid>
      <description>Learn how to use various literal values.</description>
    </item>
    
    <item>
      <title>Literal Values</title>
      <link>https://pingcap.com/docs/stable/reference/sql/language-structure/literal-values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/language-structure/literal-values/</guid>
      <description>Learn how to use various literal values.</description>
    </item>
    
    <item>
      <title>Literal Values</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/language-structure/literal-values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/language-structure/literal-values/</guid>
      <description>Learn how to use various literal values.</description>
    </item>
    
    <item>
      <title>Literal Values</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/language-structure/literal-values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/language-structure/literal-values/</guid>
      <description>Learn how to use various literal values.</description>
    </item>
    
    <item>
      <title>LOAD DATA</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/load-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/load-data/</guid>
      <description>TiDB 数据库中 LOAD DATA 的使用概况。</description>
    </item>
    
    <item>
      <title>LOAD DATA</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/load-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/load-data/</guid>
      <description>TiDB 数据库中 LOAD DATA 的使用概况。</description>
    </item>
    
    <item>
      <title>LOAD DATA</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/load-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/load-data/</guid>
      <description>TiDB 数据库中 LOAD DATA 的使用概况。</description>
    </item>
    
    <item>
      <title>LOAD DATA</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/load-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/load-data/</guid>
      <description>TiDB 数据库中 LOAD DATA 的使用概况。</description>
    </item>
    
    <item>
      <title>LOAD DATA | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/load-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/load-data/</guid>
      <description>An overview of the usage of LOAD DATA for the TiDB database.</description>
    </item>
    
    <item>
      <title>LOAD DATA | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/load-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/load-data/</guid>
      <description>An overview of the usage of LOAD DATA for the TiDB database.</description>
    </item>
    
    <item>
      <title>LOAD DATA | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/load-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/load-data/</guid>
      <description>An overview of the usage of LOAD DATA for the TiDB database.</description>
    </item>
    
    <item>
      <title>LOAD DATA | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/load-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/load-data/</guid>
      <description>An overview of the usage of LOAD DATA for the TiDB database.</description>
    </item>
    
    <item>
      <title>Load Sample Data</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/mysql-compatibility/lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/mysql-compatibility/lab/</guid>
      <description>Tutorial for deploying TiDB on Google Cloud using Kubernetes.</description>
    </item>
    
    <item>
      <title>Loader Instructions</title>
      <link>https://pingcap.com/docs/dev/reference/tools/loader/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/loader/</guid>
      <description>Use Loader to load data to TiDB.</description>
    </item>
    
    <item>
      <title>Loader Instructions</title>
      <link>https://pingcap.com/docs/stable/reference/tools/loader/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/loader/</guid>
      <description>Use Loader to load data to TiDB.</description>
    </item>
    
    <item>
      <title>Loader Instructions</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/loader/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/loader/</guid>
      <description>Use Loader to load data to TiDB.</description>
    </item>
    
    <item>
      <title>Loader Instructions</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/loader/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/loader/</guid>
      <description>Use Loader to load data to TiDB.</description>
    </item>
    
    <item>
      <title>Loader 使用文档</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/loader/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/loader/</guid>
      <description>Loader 使用文档 Loader 简介 Loader 是由 PingCAP 开发的数据导入工具，用于向 TiDB 中导入数据。
Loader 包含在 tidb-enterprise-tools 安装包中，可在此下载。
为什么我们要做这个工具 当数据量比较大的时候，如果用 mysqldump 这样的工具迁移数据会比较慢。我们尝试了 Mydumper/myloader 套件，能够多线程导出和导入数据。在使用过程中，Mydumper 问题不大，但是 myloader 由于缺乏出错重试、断点续传这样的功能，使用起来很不方便。所以我们开发了 loader，能够读取 Mydumper 的输出数据文件，通过 MySQL protocol 向 TiDB/MySQL 中导入数据。
Loader 有哪些优点  多线程导入 支持表级别的并发导入，分散写入热点 支持对单个大表并发导入，分散写入热点 支持 Mydumper 数据格式 出错重试 断点续导 通过 system variable 优化 TiDB 导入数据速度  使用方法 注意事项 请勿使用 loader 导入 MySQL 实例中 mysql 系统数据库到下游 TiDB。
如果 Mydumper 使用 -m 参数，会导出不带表结构的数据，这时 loader 无法导入数据。
如果使用默认的 checkpoint-schema 参数，在导完一个 database 数据库后，请 drop database tidb_loader 后再开始导入下一个 database。</description>
    </item>
    
    <item>
      <title>Loader 使用文档</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/loader/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/loader/</guid>
      <description>Loader 使用文档 Loader 简介 Loader 是由 PingCAP 开发的数据导入工具，用于向 TiDB 中导入数据。
Loader 包含在 tidb-enterprise-tools 安装包中，可在此下载。
为什么我们要做这个工具 当数据量比较大的时候，如果用 mysqldump 这样的工具迁移数据会比较慢。我们尝试了 Mydumper/myloader 套件，能够多线程导出和导入数据。在使用过程中，Mydumper 问题不大，但是 myloader 由于缺乏出错重试、断点续传这样的功能，使用起来很不方便。所以我们开发了 loader，能够读取 Mydumper 的输出数据文件，通过 MySQL protocol 向 TiDB/MySQL 中导入数据。
Loader 有哪些优点  多线程导入 支持表级别的并发导入，分散写入热点 支持对单个大表并发导入，分散写入热点 支持 Mydumper 数据格式 出错重试 断点续导 通过 system variable 优化 TiDB 导入数据速度  使用方法 注意事项 请勿使用 loader 导入 MySQL 实例中 mysql 系统数据库到下游 TiDB。
如果 Mydumper 使用 -m 参数，会导出不带表结构的数据，这时 loader 无法导入数据。
如果使用默认的 checkpoint-schema 参数，在导完一个 database 数据库后，请 drop database tidb_loader 后再开始导入下一个 database。</description>
    </item>
    
    <item>
      <title>Loader 使用文档</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/loader/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/loader/</guid>
      <description>Loader 使用文档 Loader 简介 Loader 是由 PingCAP 开发的数据导入工具，用于向 TiDB 中导入数据。
Loader 包含在 tidb-enterprise-tools 安装包中，可在此下载。
为什么我们要做这个工具 当数据量比较大的时候，如果用 mysqldump 这样的工具迁移数据会比较慢。我们尝试了 Mydumper/myloader 套件，能够多线程导出和导入数据。在使用过程中，Mydumper 问题不大，但是 myloader 由于缺乏出错重试、断点续传这样的功能，使用起来很不方便。所以我们开发了 loader，能够读取 Mydumper 的输出数据文件，通过 MySQL protocol 向 TiDB/MySQL 中导入数据。
Loader 有哪些优点  多线程导入 支持表级别的并发导入，分散写入热点 支持对单个大表并发导入，分散写入热点 支持 Mydumper 数据格式 出错重试 断点续导 通过 system variable 优化 TiDB 导入数据速度  使用方法 注意事项 请勿使用 loader 导入 MySQL 实例中 mysql 系统数据库到下游 TiDB。
如果 Mydumper 使用 -m 参数，会导出不带表结构的数据，这时 loader 无法导入数据。
如果使用默认的 checkpoint-schema 参数，在导完一个 database 数据库后，请 drop database tidb_loader 后再开始导入下一个 database。</description>
    </item>
    
    <item>
      <title>Loader 使用文档</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/loader/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/loader/</guid>
      <description>Loader 使用文档 Loader 简介 Loader 是由 PingCAP 开发的数据导入工具，用于向 TiDB 中导入数据。
Loader 包含在 tidb-enterprise-tools 安装包中，可在此下载。
为什么我们要做这个工具 当数据量比较大的时候，如果用 mysqldump 这样的工具迁移数据会比较慢。我们尝试了 Mydumper/myloader 套件，能够多线程导出和导入数据。在使用过程中，Mydumper 问题不大，但是 myloader 由于缺乏出错重试、断点续传这样的功能，使用起来很不方便。所以我们开发了 loader，能够读取 Mydumper 的输出数据文件，通过 MySQL protocol 向 TiDB/MySQL 中导入数据。
Loader 有哪些优点  多线程导入 支持表级别的并发导入，分散写入热点 支持对单个大表并发导入，分散写入热点 支持 Mydumper 数据格式 出错重试 断点续导 通过 system variable 优化 TiDB 导入数据速度  使用方法 注意事项 请勿使用 loader 导入 MySQL 实例中 mysql 系统数据库到下游 TiDB。
如果 Mydumper 使用 -m 参数，会导出不带表结构的数据，这时 loader 无法导入数据。
如果使用默认的 checkpoint-schema 参数，在导完一个 database 数据库后，请 drop database tidb_loader 后再开始导入下一个 database。</description>
    </item>
    
    <item>
      <title>Local Deployment from Binary Tarball</title>
      <link>https://pingcap.com/docs/dev/how-to/get-started/deploy-tidb-from-binary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/get-started/deploy-tidb-from-binary/</guid>
      <description>Use the binary to deploy a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Local Deployment from Binary Tarball</title>
      <link>https://pingcap.com/docs/stable/how-to/get-started/deploy-tidb-from-binary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/get-started/deploy-tidb-from-binary/</guid>
      <description>Use the binary to deploy a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Local Deployment from Binary Tarball</title>
      <link>https://pingcap.com/docs/v2.1/how-to/get-started/deploy-tidb-from-binary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/get-started/deploy-tidb-from-binary/</guid>
      <description>Use the binary to deploy a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Local Deployment from Binary Tarball</title>
      <link>https://pingcap.com/docs/v3.1/how-to/get-started/deploy-tidb-from-binary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/get-started/deploy-tidb-from-binary/</guid>
      <description>Use the binary to deploy a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Maintain Kubernetes Nodes that Hold the TiDB Cluster</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/maintain/kubernetes-node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/maintain/kubernetes-node/</guid>
      <description>Learn how to maintain Kubernetes nodes that hold the TiDB cluster.</description>
    </item>
    
    <item>
      <title>Maintain Kubernetes Nodes that Hold the TiDB Cluster</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/maintain/kubernetes-node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/maintain/kubernetes-node/</guid>
      <description>Learn how to maintain Kubernetes nodes that hold the TiDB cluster.</description>
    </item>
    
    <item>
      <title>Maintain Kubernetes Nodes that Hold the TiDB Cluster</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/maintain/kubernetes-node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/maintain/kubernetes-node/</guid>
      <description>Learn how to maintain Kubernetes nodes that hold the TiDB cluster.</description>
    </item>
    
    <item>
      <title>Maintain TiDB Binlog</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/maintain/tidb-binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/maintain/tidb-binlog/</guid>
      <description>Learn how to maintain TiDB Binlog of a TiDB cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>Maintain TiDB Binlog</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/maintain/tidb-binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/maintain/tidb-binlog/</guid>
      <description>Learn how to maintain TiDB Binlog of a TiDB cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>Maintain TiDB Binlog</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/maintain/tidb-binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/maintain/tidb-binlog/</guid>
      <description>Learn how to maintain TiDB Binlog of a TiDB cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>Manage the Data Replication Task</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/manage-tasks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/manage-tasks/</guid>
      <description>Use dmctl to manage the data replication task.</description>
    </item>
    
    <item>
      <title>Manage the Data Replication Task</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/manage-tasks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/manage-tasks/</guid>
      <description>Use dmctl to manage the data replication task.</description>
    </item>
    
    <item>
      <title>Manage the Data Replication Task</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/manage-tasks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/manage-tasks/</guid>
      <description>Use dmctl to manage the data replication task.</description>
    </item>
    
    <item>
      <title>Manage the Data Replication Task</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/manage-tasks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/manage-tasks/</guid>
      <description>Use dmctl to manage the data replication task.</description>
    </item>
    
    <item>
      <title>Marketing Specialist</title>
      <link>https://pingcap.com/about-cn/recruit/campus/campus-2020-marketing-specialist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/campus/campus-2020-marketing-specialist/</guid>
      <description>市场专员 岗位职责：
  市场营销策略的战术执行和专项营销活动的支持，包括品牌、社区、营销类活动的信息收集，执行和活动后传播及效果汇总；
  协助社区的用户运营和内容运营，构建及完善社区成员关系网，提升活跃度；
  跟踪和分析市场运营数据及媒体指标，负责市场类标准信息的定期更新和整理分类；
  周边衍生品的开发及制作，管理供应商，以及物料的日常分发管理。
  任职要求：
  计算机、市场营销、语言类专业，对编程有基础或有了解者优先；
  具有较强的逻辑思维能力、协调能力与文字功底；
  良好的沟通技能及团队合作能力，做事细致，责任感强。
  加分项：
熟悉技术开源社区，对社区需求有敏感性。
待遇：
8K - 15K，13薪 + 奖金，优秀者可面议
联系方式：
hire@pingcap.com
工作地点：
北京</description>
    </item>
    
    <item>
      <title>Merge and Replicate Data from Sharded Tables</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/features/shard-merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/features/shard-merge/</guid>
      <description>Learn how DM merges and replicates data from sharded tables.</description>
    </item>
    
    <item>
      <title>Merge and Replicate Data from Sharded Tables</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/features/shard-merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/features/shard-merge/</guid>
      <description>Learn how DM merges and replicates data from sharded tables.</description>
    </item>
    
    <item>
      <title>Merge and Replicate Data from Sharded Tables</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/features/shard-merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/features/shard-merge/</guid>
      <description>Learn how DM merges and replicates data from sharded tables.</description>
    </item>
    
    <item>
      <title>Merge and Replicate Data from Sharded Tables</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/features/shard-merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/features/shard-merge/</guid>
      <description>Learn how DM merges and replicates data from sharded tables.</description>
    </item>
    
    <item>
      <title>Migrate Data from MySQL to TiDB</title>
      <link>https://pingcap.com/docs/v2.1/how-to/migrate/from-mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/migrate/from-mysql/</guid>
      <description>Use &lt;code&gt;mydumper&lt;/code&gt; and &lt;code&gt;loader&lt;/code&gt; to migrate data from MySQL to TiDB.</description>
    </item>
    
    <item>
      <title>Migrate from MySQL (Amazon Aurora)</title>
      <link>https://pingcap.com/docs/dev/how-to/migrate/from-mysql-aurora/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/migrate/from-mysql-aurora/</guid>
      <description>Learn how to migrate from MySQL (using a case of Amazon Aurora) to TiDB by using TiDB Data Migration (DM).</description>
    </item>
    
    <item>
      <title>Migrate from MySQL (Amazon Aurora)</title>
      <link>https://pingcap.com/docs/stable/how-to/migrate/from-mysql-aurora/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/migrate/from-mysql-aurora/</guid>
      <description>Learn how to migrate from MySQL (using a case of Amazon Aurora) to TiDB by using TiDB Data Migration (DM).</description>
    </item>
    
    <item>
      <title>Migrate from MySQL (Amazon Aurora)</title>
      <link>https://pingcap.com/docs/v3.1/how-to/migrate/from-mysql-aurora/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/migrate/from-mysql-aurora/</guid>
      <description>Learn how to migrate from MySQL (using a case of Amazon Aurora) to TiDB by using TiDB Data Migration (DM).</description>
    </item>
    
    <item>
      <title>Migrate from MySQL (Amazon Aurora) to TiDB</title>
      <link>https://pingcap.com/docs/v2.1/how-to/migrate/from-aurora/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/migrate/from-aurora/</guid>
      <description>Learn how to migrate from MySQL (using a case of Amazon Aurora) to TiDB by using TiDB Data Migration (DM).</description>
    </item>
    
    <item>
      <title>Migrate Incrementally Using Syncer</title>
      <link>https://pingcap.com/docs/v2.1/how-to/migrate/incrementally-from-mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/migrate/incrementally-from-mysql/</guid>
      <description>Use &lt;code&gt;mydumper&lt;/code&gt;, &lt;code&gt;loader&lt;/code&gt; and &lt;code&gt;syncer&lt;/code&gt; tools to migrate data from MySQL to TiDB.</description>
    </item>
    
    <item>
      <title>Migration Overview</title>
      <link>https://pingcap.com/docs/v2.1/how-to/migrate/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/migrate/overview/</guid>
      <description>Learn how to migrate data into TiDB.</description>
    </item>
    
    <item>
      <title>Migrations</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/upgrades/migration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/upgrades/migration/</guid>
      <description>Migrations  Resources  ProxySQL mirroring pt-upgrade  Transcript A migration is similar to an upgrade, in that it typically happens on a less sensitive timeframe, but also in that as well as bringing great new features; there is a higher chance there may be performance or functionality regressions.
When we talk about performance in a very broad sense, with users interacting with databases, they tend to feel the variance and not the mean.</description>
    </item>
    
    <item>
      <title>Milestones</title>
      <link>https://pingcap.com/tidb-planet/milestones/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-planet/milestones/</guid>
      <description>Have fun adventure on TiDB Planet!</description>
    </item>
    
    <item>
      <title>Miscellaneous Functions</title>
      <link>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/miscellaneous-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/miscellaneous-functions/</guid>
      <description>Learn about miscellaneous functions in TiDB.</description>
    </item>
    
    <item>
      <title>Miscellaneous Functions</title>
      <link>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/miscellaneous-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/miscellaneous-functions/</guid>
      <description>Learn about miscellaneous functions in TiDB.</description>
    </item>
    
    <item>
      <title>Miscellaneous Functions</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/miscellaneous-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/miscellaneous-functions/</guid>
      <description>Learn about miscellaneous functions in TiDB.</description>
    </item>
    
    <item>
      <title>Miscellaneous Functions</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/miscellaneous-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/miscellaneous-functions/</guid>
      <description>Learn about miscellaneous functions in TiDB.</description>
    </item>
    
    <item>
      <title>MODIFY COLUMN</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/modify-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/modify-column/</guid>
      <description>TiDB 数据库中 MODIFY COLUMN 的使用概况。</description>
    </item>
    
    <item>
      <title>MODIFY COLUMN</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/modify-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/modify-column/</guid>
      <description>TiDB 数据库中 MODIFY COLUMN 的使用概况。</description>
    </item>
    
    <item>
      <title>MODIFY COLUMN</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/modify-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/modify-column/</guid>
      <description>TiDB 数据库中 MODIFY COLUMN 的使用概况。</description>
    </item>
    
    <item>
      <title>MODIFY COLUMN</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/modify-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/modify-column/</guid>
      <description>TiDB 数据库中 MODIFY COLUMN 的使用概况。</description>
    </item>
    
    <item>
      <title>MODIFY COLUMN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/modify-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/modify-column/</guid>
      <description>An overview of the usage of MODIFY COLUMN for the TiDB database.</description>
    </item>
    
    <item>
      <title>MODIFY COLUMN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/modify-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/modify-column/</guid>
      <description>An overview of the usage of MODIFY COLUMN for the TiDB database.</description>
    </item>
    
    <item>
      <title>MODIFY COLUMN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/modify-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/modify-column/</guid>
      <description>An overview of the usage of MODIFY COLUMN for the TiDB database.</description>
    </item>
    
    <item>
      <title>MODIFY COLUMN | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/modify-column/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/modify-column/</guid>
      <description>An overview of the usage of MODIFY COLUMN for the TiDB database.</description>
    </item>
    
    <item>
      <title>Monitor a TiDB Cluster</title>
      <link>https://pingcap.com/docs/dev/how-to/monitor/monitor-a-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/monitor/monitor-a-cluster/</guid>
      <description>Learn how to monitor the state of a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Monitor a TiDB Cluster</title>
      <link>https://pingcap.com/docs/stable/how-to/monitor/monitor-a-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/monitor/monitor-a-cluster/</guid>
      <description>Learn how to monitor the state of a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Monitor a TiDB Cluster</title>
      <link>https://pingcap.com/docs/v2.1/how-to/monitor/monitor-a-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/monitor/monitor-a-cluster/</guid>
      <description>Learn how to monitor the state of a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Monitor a TiDB Cluster</title>
      <link>https://pingcap.com/docs/v3.1/how-to/monitor/monitor-a-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/monitor/monitor-a-cluster/</guid>
      <description>Learn how to monitor the state of a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Monitor a TiDB Cluster in Kubernetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/monitor/tidb-in-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/monitor/tidb-in-kubernetes/</guid>
      <description>Learn how to monitor a TiDB cluster in kubernetes.</description>
    </item>
    
    <item>
      <title>Monitor a TiDB Cluster in Kubernetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/monitor/tidb-in-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/monitor/tidb-in-kubernetes/</guid>
      <description>Learn how to monitor a TiDB cluster in kubernetes.</description>
    </item>
    
    <item>
      <title>Monitor a TiDB Cluster in Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/monitor/tidb-in-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/monitor/tidb-in-kubernetes/</guid>
      <description>Learn how to monitor a TiDB cluster in kubernetes.</description>
    </item>
    
    <item>
      <title>Monitoring</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/monitoring/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/monitoring/overview/</guid>
      <description>Monitoring  Resources  Raft Consensus  Transcript In this section we are going to cover two topics which often get grouped together. Monitoring is about detecting problems and anomalies. Observability is about looking into the system and being able to see how it operates. Most systems can be monitored, but not all are necessarily designed to be observed. If we use a microscope as an analogy, observability is the slide.</description>
    </item>
    
    <item>
      <title>Mydumper Instructions</title>
      <link>https://pingcap.com/docs/dev/reference/tools/mydumper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/mydumper/</guid>
      <description>Use Mydumper to export data from TiDB.</description>
    </item>
    
    <item>
      <title>Mydumper Instructions</title>
      <link>https://pingcap.com/docs/stable/reference/tools/mydumper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/mydumper/</guid>
      <description>Use Mydumper to export data from TiDB.</description>
    </item>
    
    <item>
      <title>Mydumper Instructions</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/mydumper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/mydumper/</guid>
      <description>Use Mydumper to export data from TiDB.</description>
    </item>
    
    <item>
      <title>Mydumper Instructions</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/mydumper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/mydumper/</guid>
      <description>Use Mydumper to export data from TiDB.</description>
    </item>
    
    <item>
      <title>Mydumper 使用文档</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/mydumper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/mydumper/</guid>
      <description>使用 Mydumper 从 TiDB 导出数据。</description>
    </item>
    
    <item>
      <title>Mydumper 使用文档</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/mydumper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/mydumper/</guid>
      <description>使用 Mydumper 从 TiDB 导出数据。</description>
    </item>
    
    <item>
      <title>Mydumper 使用文档</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/mydumper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/mydumper/</guid>
      <description>使用 Mydumper 从 TiDB 导出数据。</description>
    </item>
    
    <item>
      <title>Mydumper 使用文档</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/mydumper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/mydumper/</guid>
      <description>使用 Mydumper 从 TiDB 导出数据。</description>
    </item>
    
    <item>
      <title>MySQL Compatibility</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/mysql-compatibility/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/mysql-compatibility/overview/</guid>
      <description>MySQL Compatibility  Resources  MySQL Compatibility TiDB Roadmap  Transcript What does it mean to be compatible with MySQL? First, I think it is important to clarify that MySQL is a moving target, as newer versions are released, new features will be added, and existing features may change slightly. In some specific cases, features may also be removed. For example, in MySQL 8.0, weaker crypto functions like ENCODE/DECODE were removed and this has been previously deprecated.</description>
    </item>
    
    <item>
      <title>News</title>
      <link>https://pingcap.com/news/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/news/</guid>
      <description>PingCAP is focused on developing distributed NewSQL and is the team building TiDB, an open-source distributed NewSQL database.</description>
    </item>
    
    <item>
      <title>Numeric Functions and Operators</title>
      <link>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/numeric-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/numeric-functions-and-operators/</guid>
      <description>Learn about the numeric functions and operators.</description>
    </item>
    
    <item>
      <title>Numeric Functions and Operators</title>
      <link>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/numeric-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/numeric-functions-and-operators/</guid>
      <description>Learn about the numeric functions and operators.</description>
    </item>
    
    <item>
      <title>Numeric Functions and Operators</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/numeric-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/numeric-functions-and-operators/</guid>
      <description>Learn about the numeric functions and operators.</description>
    </item>
    
    <item>
      <title>Numeric Functions and Operators</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/numeric-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/numeric-functions-and-operators/</guid>
      <description>Learn about the numeric functions and operators.</description>
    </item>
    
    <item>
      <title>Numeric Types</title>
      <link>https://pingcap.com/docs/dev/reference/sql/data-types/numeric/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/data-types/numeric/</guid>
      <description>Learn about numeric data types supported in TiDB.</description>
    </item>
    
    <item>
      <title>Numeric Types</title>
      <link>https://pingcap.com/docs/stable/reference/sql/data-types/numeric/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/data-types/numeric/</guid>
      <description>Learn about numeric data types supported in TiDB.</description>
    </item>
    
    <item>
      <title>Numeric Types</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/data-types/numeric/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/data-types/numeric/</guid>
      <description>Learn about numeric data types supported in TiDB.</description>
    </item>
    
    <item>
      <title>Numeric Types</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/data-types/numeric/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/data-types/numeric/</guid>
      <description>Learn about numeric data types supported in TiDB.</description>
    </item>
    
    <item>
      <title>Observability</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/monitoring/observability/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/monitoring/observability/</guid>
      <description>Observability  Resources  Prometheus Grafana  Transcript If you come from a MySQL background, the built-in system for observability is performance_schema. There are some secondary observability commands, but in recent MySQL releases, this has become the gold standard.
Performance Schema is implemented as a storage engine inside of MySQL. Recent MySQL servers are very well instrumented with Performance Schema too: any time the server is allocating memory, waiting on locks or performing I/O: you can query that with regular SQL and find out!</description>
    </item>
    
    <item>
      <title>Observing TiDB Cluster Metrics</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/monitoring/lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/monitoring/lab/</guid>
      <description>Tutorial for deploying TiDB on Google Cloud using Kubernetes.</description>
    </item>
    
    <item>
      <title>OLAP 引擎研发工程师</title>
      <link>https://pingcap.com/about-cn/recruit/engineering/olap-engineer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/engineering/olap-engineer/</guid>
      <description>OLAP 引擎研发工程师 岗位职责：
  负责分布式数据库底层系统存储系统的设计和开发；
  （可选）指导新人，进行代码和设计审核；
  （可选）参与和负责数据库计算层的设计和开发。
  任职要求：
  三年以上相关领域开发经验，扎实的编程能力，熟悉 C/C++；
  对分布式存储系统的架构和原理有比较深入的了解；
  熟悉开源分布式文件系统如 Ceph/HDFS/GlusterFS 等，或 NoSQL 数据库如 Kudu/Cassandra/HBase 等其中的至少一个，并阅读过源代码；
  熟悉分布式系统的性能分析；
  优秀的发现和解决问题能力，良好的沟通能力，具备团队合作精神。
  加分项：
  拥抱开源，对前沿技术有浓厚的热情和探索欲望，有开源项目经历；
  熟悉分布式计算引擎或数据库，例如 Spark/Greenplumn/Clickhouse，并阅读过其中的源码；
  熟悉分布式系统性能调优。
  待遇：
20K - 45K + 期权，13薪 + 奖金，优秀者可面议
工作地点：
北京，上海，广州，杭州，成都，特别优秀可 Remote</description>
    </item>
    
    <item>
      <title>Online DDL</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/ddl/lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/ddl/lab/</guid>
      <description>Tutorial for deploying TiDB on Google Cloud using Kubernetes.</description>
    </item>
    
    <item>
      <title>Operators</title>
      <link>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/operators/</guid>
      <description>Learn about the operators precedence, comparison functions and operators, logical operators, and assignment operators.</description>
    </item>
    
    <item>
      <title>Operators</title>
      <link>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/operators/</guid>
      <description>Learn about the operators precedence, comparison functions and operators, logical operators, and assignment operators.</description>
    </item>
    
    <item>
      <title>Operators</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/operators/</guid>
      <description>Learn about the operators precedence, comparison functions and operators, logical operators, and assignment operators.</description>
    </item>
    
    <item>
      <title>Operators</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/operators/</guid>
      <description>Learn about the operators precedence, comparison functions and operators, logical operators, and assignment operators.</description>
    </item>
    
    <item>
      <title>Optimizer Hints</title>
      <link>https://pingcap.com/docs-cn/dev/reference/performance/optimizer-hints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/performance/optimizer-hints/</guid>
      <description>Optimizer Hints TiDB 支持 Optimizer Hints 语法，它基于 MySQL 5.7 中介绍的类似 comment 的语法，例如 /*+ HINT_NAME(t1, t2) */。当 TiDB 优化器选择的不是最优查询计划时，建议使用 Optimizer Hints。
 注意：
MySQL 命令行客户端在 5.7.7 版本之前默认清除了 Optimizer Hints。如果需要在这些早期版本的客户端中使用 Hint 语法，需要在启动客户端时加上 --comments 选项，例如 mysql -h 127.0.0.1 -P 4000 -uroot --comments。
 语法 Optimizer Hints 通过 /*+ ... */ 注释的形式跟在 SELECT、UPDATE 或 DELETE 关键字的后面，常见形式如 /*+ HINT_NAME([t1_name [, t2_name] ...]) */。Hint 名称不区分大小写，多个不同的 Hint 之间需用逗号隔开。例如：
 select /*+ USE_INDEX(t1, idx1), HASH_AGG(), HASH_JOIN(t1) */ count(*) from t t1, t t2 where t1.</description>
    </item>
    
    <item>
      <title>Optimizer Hints</title>
      <link>https://pingcap.com/docs-cn/stable/reference/performance/optimizer-hints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/performance/optimizer-hints/</guid>
      <description>Optimizer Hints TiDB 支持 Optimizer Hints 语法，它基于 MySQL 5.7 中介绍的类似 comment 的语法，例如 /*+ TIDB_XX(t1, t2) */。当 TiDB 优化器选择的不是最优查询计划时，建议使用 Optimizer Hints。
 注意：
MySQL 命令行客户端在 5.7.7 版本之前默认清除了 Optimizer Hints。如果需要在这些早期版本的客户端中使用 Hint 语法，需要在启动客户端时加上 --comments 选项，例如 mysql -h 127.0.0.1 -P 4000 -uroot --comments。
 语法 TIDB_SMJ(t1, t2)  SELECT /*+ TIDB_SMJ(t1, t2) */ * from t1，t2 where t1.id = t2.id; 提示优化器使用 Sort Merge Join 算法，这个算法通常会占用更少的内存，但执行时间会更久。 当数据量太大，或系统内存不足时，建议尝试使用。
TIDB_INLJ(t1, t2)  SELECT /*+ TIDB_INLJ(t1, t2) */ * from t1，t2 where t1.</description>
    </item>
    
    <item>
      <title>Optimizer Hints</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/performance/optimizer-hints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/performance/optimizer-hints/</guid>
      <description>Optimizer Hints TiDB 支持 Optimizer Hints 语法，它基于 MySQL 5.7 中介绍的类似 comment 的语法，例如 /*+ TIDB_XX(t1, t2) */。当 TiDB 优化器选择的不是最优查询计划时，建议使用 Optimizer Hints。
 注意：
MySQL 命令行客户端在 5.7.7 版本之前默认清除了 Optimizer Hints。如果需要在这些早期版本的客户端中使用 Hint 语法，需要在启动客户端时加上 --comments 选项，例如 mysql -h 127.0.0.1 -P 4000 -uroot --comments。
 语法 TIDB_SMJ(t1, t2) SELECT /*+ TIDB_SMJ(t1, t2) */ * from t1，t2 where t1.id = t2.id 提示优化器使用 Sort Merge Join 算法，这个算法通常会占用更少的内存，但执行时间会更久。 当数据量太大，或系统内存不足时，建议尝试使用。
TIDB_INLJ(t1, t2) SELECT /*+ TIDB_INLJ(t1, t2) */ * from t1，t2 where t1.</description>
    </item>
    
    <item>
      <title>Optimizer Hints</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/performance/optimizer-hints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/performance/optimizer-hints/</guid>
      <description>Optimizer Hints TiDB 支持 Optimizer Hints 语法，它基于 MySQL 5.7 中介绍的类似 comment 的语法，例如 /*+ HINT_NAME(t1, t2) */。当 TiDB 优化器选择的不是最优查询计划时，建议使用 Optimizer Hints。
 注意：
MySQL 命令行客户端在 5.7.7 版本之前默认清除了 Optimizer Hints。如果需要在这些早期版本的客户端中使用 Hint 语法，需要在启动客户端时加上 --comments 选项，例如 mysql -h 127.0.0.1 -P 4000 -uroot --comments。
 语法 Optimizer Hints 通过 /*+ ... */ 注释的形式跟在 SELECT、UPDATE 或 DELETE 关键字的后面，常见形式如 /*+ HINT_NAME([t1_name [, t2_name] ...]) */。Hint 名称不区分大小写，多个不同的 Hint 之间需用逗号隔开。例如：
 select /*+ USE_INDEX(t1, idx1), HASH_AGG(), HASH_JOIN(t1) */ count(*) from t t1, t t2 where t1.</description>
    </item>
    
    <item>
      <title>Optimizer Hints</title>
      <link>https://pingcap.com/docs/dev/reference/performance/optimizer-hints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/performance/optimizer-hints/</guid>
      <description>Use Optimizer Hints to influence query execution plans</description>
    </item>
    
    <item>
      <title>Optimizer Hints</title>
      <link>https://pingcap.com/docs/stable/reference/performance/optimizer-hints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/performance/optimizer-hints/</guid>
      <description>Use Optimizer Hints to influence query execution plans</description>
    </item>
    
    <item>
      <title>Optimizer Hints</title>
      <link>https://pingcap.com/docs/v2.1/reference/performance/optimizer-hints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/performance/optimizer-hints/</guid>
      <description>Use Optimizer Hints to influence query execution plans</description>
    </item>
    
    <item>
      <title>Optimizer Hints</title>
      <link>https://pingcap.com/docs/v3.1/reference/performance/optimizer-hints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/performance/optimizer-hints/</guid>
      <description>Use Optimizer Hints to influence query execution plans</description>
    </item>
    
    <item>
      <title>Optional Components: TiSpark</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/tidb-overview/optional-components-tispark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/tidb-overview/optional-components-tispark/</guid>
      <description>Optional Components: TiSpark  Transcript In the last video, we talked about the three core components that make up the TiDB Platform:
 TiKV for distributed storage The TiDB server for SQL processing PD for cluster management  There is one additional component to the TiDB Platform which you can considered optional, and that&#39;s TiSpark.
TiSpark allows you to bypass the SQL layer and have Apache Spark connect to TiKV directly.</description>
    </item>
    
    <item>
      <title>Overview of TiDB Operator</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/tidb-operator-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/tidb-operator-overview/</guid>
      <description>Learn the overview of TiDB Operator.</description>
    </item>
    
    <item>
      <title>Overview of TiDB Operator</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/tidb-operator-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/tidb-operator-overview/</guid>
      <description>Learn the overview of TiDB Operator.</description>
    </item>
    
    <item>
      <title>Overview of TiDB Operator</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/tidb-operator-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/tidb-operator-overview/</guid>
      <description>Learn the overview of TiDB Operator.</description>
    </item>
    
    <item>
      <title>Overview 面板重要监控指标详解</title>
      <link>https://pingcap.com/docs-cn/dev/reference/key-monitoring-metrics/overview-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/key-monitoring-metrics/overview-dashboard/</guid>
      <description>Overview 面板重要监控指标详解 使用 Ansible 部署 TiDB 集群时，一键部署监控系统 (Prometheus/Grafana)，监控架构请看 TiDB 监控框架概述。
目前 Grafana Dashboard 整体分为 PD、TiDB、TiKV、Node_exporter、Overview 等。
对于日常运维，我们单独挑选出重要的 Metrics 放在 Overview 页面，方便日常运维人员观察集群组件 (PD, TiDB, TiKV) 使用状态以及集群使用状态。
以下为 Overview Dashboard 监控说明：
Services Port Status  Services Online：各服务在线节点数量 Services Offline：各服务 Down 掉节点数量  PD  Storage Capacity：TiDB 集群总可用数据库空间大小 Current Storage Size：TiDB 集群目前已用数据库空间大小 Number of Regions：当前集群的 Region 总量 Leader Balance Ratio：Leader 数量最多和最少节点相差的百分比，一般小于 5%，节点重启时会有比较大的波动 Region Balance Ratio：Region 数量最多和最少节点相差的百分比，一般小于 5%，新增/下线节点时相差比较大 Store Status：集群 TiKV 节点的状态  Up Stores：正常运行的 TiKV 节点数量 Disconnect Stores：短时间内通信异常的 TiKV 节点数量 LowSpace Stores：剩余可用空间小于 20% 的 TiKV 节点数量 Down Stores：停止工作的 TiKV 节点数量，如果大于 0，说明有节点不正常 Offline Stores：正在下线的 TiKV 节点数量（正在下线的 TiKV 节点还在提供服务） Tombstone Stores：下线成功的 TiKV 节点数量   99% completed_cmds_duration_seconds：单位时间内，99% 的 pd-server 请求执行时间小于监控曲线的值，一般 &amp;lt;= 5ms handle_requests_duration_seconds：PD 发送请求的网络耗时  TiDB  Statement OPS：SQL 执行数量统计（包含 select、insert、update 等） Duration：SQL 执行的时间 QPS By Instance：每个 TiDB 上的 QPS Failed Query OPM：失败 SQL 的统计，例如语法错误、主键冲突等 Connection count：每个 TiDB 的连接数 Heap Memory Usage：每个 TiDB 使用的堆内存大小 Transaction OPS：事务执行数量统计 Transaction Duration：事务执行的时间 KV Cmd OPS：KV 命令执行数量统计 KV Cmd Duration 99：KV 命令执行的时间 PD TSO OPS：TiDB 从 PD 获取 TSO 的数量 PD TSO Wait Duration：TiDB 从 PD 获取 TS 的时间 TiClient Region Error OPS：TiKV 返回 Region 相关错误信息的数量 Lock Resolve OPS：事务冲突相关的数量 Load Schema Duration：TiDB 从 TiKV 获取 Schema 的时间 KV Backoff OPS：TiKV 返回错误信息的数量（事务冲突等）  TiKV  leader：各个 TiKV 节点上 Leader 的数量分布 region：各个 TiKV 节点上 Region 的数量分布 CPU：各个 TiKV 节点的 CPU 使用率 Memory：各个 TiKV 节点的内存使用量 store size：各个 TiKV 节点存储的数据量 cf size：集群不同 CF 存储的数据量 channel full：正常情况显示 No data，如果有了监控值，说明对应 TiKV 节点的消息处理不过来了 server report failures：正常情况显示 No data，如果出现了 Unreachable，说明 TiKV 之间通信有问题 scheduler pending commands：写入堆积的数量，偶尔出现峰值属于正常现象 coprocessor pending requests：正常情况监控为 0 或者数量很少 coprocessor executor count：不同类型的查询操作数量 coprocessor request duration：TiKV 中查询消耗的时间 raft store CPU：raftstore 线程的 CPU 使用率，线程数量默认为 2 (通过 raftstore.</description>
    </item>
    
    <item>
      <title>Overview 面板重要监控指标详解</title>
      <link>https://pingcap.com/docs-cn/stable/reference/key-monitoring-metrics/overview-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/key-monitoring-metrics/overview-dashboard/</guid>
      <description>Overview 面板重要监控指标详解 使用 Ansible 部署 TiDB 集群时，一键部署监控系统 (Prometheus/Grafana)，监控架构请看 TiDB 监控框架概述。
目前 Grafana Dashboard 整体分为 PD、TiDB、TiKV、Node_exporter、Overview 等。
对于日常运维，我们单独挑选出重要的 Metrics 放在 Overview 页面，方便日常运维人员观察集群组件 (PD, TiDB, TiKV) 使用状态以及集群使用状态。
以下为 Overview Dashboard 监控说明：
Services Port Status  Services Online：各服务在线节点数量 Services Offline：各服务 Down 掉节点数量  PD  Storage Capacity：TiDB 集群总可用数据库空间大小 Current Storage Size：TiDB 集群目前已用数据库空间大小 Number of Regions：当前集群的 Region 总量 Leader Balance Ratio：Leader 数量最多和最少节点相差的百分比，一般小于 5%，节点重启时会有比较大的波动 Region Balance Ratio：Region 数量最多和最少节点相差的百分比，一般小于 5%，新增/下线节点时相差比较大 Store Status：集群 TiKV 节点的状态  Up Stores：正常运行的 TiKV 节点数量 Disconnect Stores：短时间内通信异常的 TiKV 节点数量 LowSpace Stores：剩余可用空间小于 20% 的 TiKV 节点数量 Down Stores：停止工作的 TiKV 节点数量，如果大于 0，说明有节点不正常 Offline Stores：正在下线的 TiKV 节点数量（正在下线的 TiKV 节点还在提供服务） Tombstone Stores：下线成功的 TiKV 节点数量   99% completed_cmds_duration_seconds：单位时间内，99% 的 pd-server 请求执行时间小于监控曲线的值，一般 &amp;lt;= 5ms handle_requests_duration_seconds：PD 发送请求的网络耗时  TiDB  Statement OPS：SQL 执行数量统计（包含 select、insert、update 等） Duration：SQL 执行的时间 QPS By Instance：每个 TiDB 上的 QPS Failed Query OPM：失败 SQL 的统计，例如语法错误、主键冲突等 Connection count：每个 TiDB 的连接数 Heap Memory Usage：每个 TiDB 使用的堆内存大小 Transaction OPS：事务执行数量统计 Transaction Duration：事务执行的时间 KV Cmd OPS：KV 命令执行数量统计 KV Cmd Duration 99：KV 命令执行的时间 PD TSO OPS：TiDB 从 PD 获取 TSO 的数量 PD TSO Wait Duration：TiDB 从 PD 获取 TS 的时间 TiClient Region Error OPS：TiKV 返回 Region 相关错误信息的数量 Lock Resolve OPS：事务冲突相关的数量 Load Schema Duration：TiDB 从 TiKV 获取 Schema 的时间 KV Backoff OPS：TiKV 返回错误信息的数量（事务冲突等）  TiKV  leader：各个 TiKV 节点上 Leader 的数量分布 region：各个 TiKV 节点上 Region 的数量分布 CPU：各个 TiKV 节点的 CPU 使用率 Memory：各个 TiKV 节点的内存使用量 store size：各个 TiKV 节点存储的数据量 cf size：集群不同 CF 存储的数据量 channel full：正常情况显示 No data，如果有了监控值，说明对应 TiKV 节点的消息处理不过来了 server report failures：正常情况显示 No data，如果出现了 Unreachable，说明 TiKV 之间通信有问题 scheduler pending commands：写入堆积的数量，偶尔出现峰值属于正常现象 coprocessor pending requests：正常情况监控为 0 或者数量很少 coprocessor executor count：不同类型的查询操作数量 coprocessor request duration：TiKV 中查询消耗的时间 raft store CPU：raftstore 线程的 CPU 使用率，线程数量默认为 2 (通过 raftstore.</description>
    </item>
    
    <item>
      <title>Overview 面板重要监控指标详解</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/key-monitoring-metrics/overview-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/key-monitoring-metrics/overview-dashboard/</guid>
      <description>Overview 面板重要监控指标详解 使用 Ansible 部署 TiDB 集群时，一键部署监控系统 (Prometheus/Grafana)，监控架构请看 TiDB 监控框架概述。
目前 Grafana Dashboard 整体分为 PD、TiDB、TiKV、Node_exporter、Overview 等。
对于日常运维，我们单独挑选出重要的 Metrics 放在 Overview 页面，方便日常运维人员观察集群组件 (PD, TiDB, TiKV) 使用状态以及集群使用状态。
以下为 Overview Dashboard 监控说明：
Services Port Status  Services Online：各服务在线节点数量 Services Offline：各服务 Down 掉节点数量  PD  Storage Capacity：TiDB 集群总可用数据库空间大小 Current Storage Size：TiDB 集群目前已用数据库空间大小 Number of Regions：当前集群的 Region 总量 Leader Balance Ratio：Leader 数量最多和最少节点相差的百分比，一般小于 5%，节点重启时会有比较大的波动 Region Balance Ratio：Region 数量最多和最少节点相差的百分比，一般小于 5%，新增/下线节点时相差比较大 Store Status：集群 TiKV 节点的状态  Up Stores：正常运行的 TiKV 节点数量 Disconnect Stores：短时间内通信异常的 TiKV 节点数量 LowSpace Stores：剩余可用空间小于 20% 的 TiKV 节点数量 Down Stores：停止工作的 TiKV 节点数量，如果大于 0，说明有节点不正常 Offline Stores：正在下线的 TiKV 节点数量（正在下线的 TiKV 节点还在提供服务） Tombstone Stores：下线成功的 TiKV 节点数量   99% completed_cmds_duration_seconds：单位时间内，99% 的 pd-server 请求执行时间小于监控曲线的值，一般 &amp;lt;= 5ms handle_requests_duration_seconds：PD 发送请求的网络耗时  TiDB  Statement OPS：SQL 执行数量统计（包含 select、insert、update 等） Duration：SQL 执行的时间 QPS By Instance：每个 TiDB 上的 QPS Failed Query OPM：失败 SQL 的统计，例如语法错误、主键冲突等 Connection count：每个 TiDB 的连接数 Heap Memory Usage：每个 TiDB 使用的堆内存大小 Transaction OPS：事务执行数量统计 Transaction Duration：事务执行的时间 KV Cmd OPS：KV 命令执行数量统计 KV Cmd Duration 99：KV 命令执行的时间 PD TSO OPS：TiDB 从 PD 获取 TSO 的数量 PD TSO Wait Duration：TiDB 从 PD 获取 TS 的时间 TiClient Region Error OPS：TiKV 返回 Region 相关错误信息的数量 Lock Resolve OPS：事务冲突相关的数量 Load Schema Duration：TiDB 从 TiKV 获取 Schema 的时间 KV Backoff OPS：TiKV 返回错误信息的数量（事务冲突等）  TiKV  leader：各个 TiKV 节点上 Leader 的数量分布 region：各个 TiKV 节点上 Region 的数量分布 CPU：各个 TiKV 节点的 CPU 使用率 Memory：各个 TiKV 节点的内存使用量 store size：各个 TiKV 节点存储的数据量 cf size：集群不同 CF 存储的数据量 channel full：正常情况显示 No data，如果有了监控值，说明对应 TiKV 节点的消息处理不过来了 server report failures：正常情况显示 No data，如果出现了 Unreachable，说明 TiKV 之间通信有问题 scheduler pending commands：写入堆积的数量，偶尔出现峰值属于正常现象 coprocessor pending requests：正常情况监控为 0 或者数量很少 coprocessor executor count：不同类型的查询操作数量 coprocessor request duration：TiKV 中查询消耗的时间 raft store CPU：raftstore 线程的 CPU 使用率，目前为单线程，超过 80% 说明使用率很高 Coprocessor CPU：TiKV 查询线程的 CPU 使用率，和业务相关，复杂查询会使用大量的 CPU 资源  System Info  Vcores：CPU 核心数量 Memory：内存总大小 CPU Usage：CPU 使用率，最大为 100% Load [1m]：1 分钟的负载情况 Memory Available：剩余内存大小 Network Traffic：网卡流量统计 TCP Retrans：网络监控，TCP 相关信息统计 IO Util：磁盘使用率，最高为 100%，一般到 80% - 90% 就需要考虑加节点  图例 </description>
    </item>
    
    <item>
      <title>Overview 面板重要监控指标详解</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/key-monitoring-metrics/overview-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/key-monitoring-metrics/overview-dashboard/</guid>
      <description>Overview 面板重要监控指标详解 使用 Ansible 部署 TiDB 集群时，一键部署监控系统 (Prometheus/Grafana)，监控架构请看 TiDB 监控框架概述。
目前 Grafana Dashboard 整体分为 PD、TiDB、TiKV、Node_exporter、Overview 等。
对于日常运维，我们单独挑选出重要的 Metrics 放在 Overview 页面，方便日常运维人员观察集群组件 (PD, TiDB, TiKV) 使用状态以及集群使用状态。
以下为 Overview Dashboard 监控说明：
Services Port Status  Services Online：各服务在线节点数量 Services Offline：各服务 Down 掉节点数量  PD  Storage Capacity：TiDB 集群总可用数据库空间大小 Current Storage Size：TiDB 集群目前已用数据库空间大小 Number of Regions：当前集群的 Region 总量 Leader Balance Ratio：Leader 数量最多和最少节点相差的百分比，一般小于 5%，节点重启时会有比较大的波动 Region Balance Ratio：Region 数量最多和最少节点相差的百分比，一般小于 5%，新增/下线节点时相差比较大 Store Status：集群 TiKV 节点的状态  Up Stores：正常运行的 TiKV 节点数量 Disconnect Stores：短时间内通信异常的 TiKV 节点数量 LowSpace Stores：剩余可用空间小于 20% 的 TiKV 节点数量 Down Stores：停止工作的 TiKV 节点数量，如果大于 0，说明有节点不正常 Offline Stores：正在下线的 TiKV 节点数量（正在下线的 TiKV 节点还在提供服务） Tombstone Stores：下线成功的 TiKV 节点数量   99% completed_cmds_duration_seconds：单位时间内，99% 的 pd-server 请求执行时间小于监控曲线的值，一般 &amp;lt;= 5ms handle_requests_duration_seconds：PD 发送请求的网络耗时  TiDB  Statement OPS：SQL 执行数量统计（包含 select、insert、update 等） Duration：SQL 执行的时间 QPS By Instance：每个 TiDB 上的 QPS Failed Query OPM：失败 SQL 的统计，例如语法错误、主键冲突等 Connection count：每个 TiDB 的连接数 Heap Memory Usage：每个 TiDB 使用的堆内存大小 Transaction OPS：事务执行数量统计 Transaction Duration：事务执行的时间 KV Cmd OPS：KV 命令执行数量统计 KV Cmd Duration 99：KV 命令执行的时间 PD TSO OPS：TiDB 从 PD 获取 TSO 的数量 PD TSO Wait Duration：TiDB 从 PD 获取 TS 的时间 TiClient Region Error OPS：TiKV 返回 Region 相关错误信息的数量 Lock Resolve OPS：事务冲突相关的数量 Load Schema Duration：TiDB 从 TiKV 获取 Schema 的时间 KV Backoff OPS：TiKV 返回错误信息的数量（事务冲突等）  TiKV  leader：各个 TiKV 节点上 Leader 的数量分布 region：各个 TiKV 节点上 Region 的数量分布 CPU：各个 TiKV 节点的 CPU 使用率 Memory：各个 TiKV 节点的内存使用量 store size：各个 TiKV 节点存储的数据量 cf size：集群不同 CF 存储的数据量 channel full：正常情况显示 No data，如果有了监控值，说明对应 TiKV 节点的消息处理不过来了 server report failures：正常情况显示 No data，如果出现了 Unreachable，说明 TiKV 之间通信有问题 scheduler pending commands：写入堆积的数量，偶尔出现峰值属于正常现象 coprocessor pending requests：正常情况监控为 0 或者数量很少 coprocessor executor count：不同类型的查询操作数量 coprocessor request duration：TiKV 中查询消耗的时间 raft store CPU：raftstore 线程的 CPU 使用率，线程数量默认为 2 (通过 raftstore.</description>
    </item>
    
    <item>
      <title>Partitioning</title>
      <link>https://pingcap.com/docs/dev/reference/sql/partitioning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/partitioning/</guid>
      <description>Learn how to use partitioning in TiDB.</description>
    </item>
    
    <item>
      <title>Partitioning</title>
      <link>https://pingcap.com/docs/stable/reference/sql/partitioning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/partitioning/</guid>
      <description>Learn how to use partitioning in TiDB.</description>
    </item>
    
    <item>
      <title>Partitioning</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/partitioning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/partitioning/</guid>
      <description>Learn how to use partitioning in TiDB.</description>
    </item>
    
    <item>
      <title>PD Configuration File</title>
      <link>https://pingcap.com/docs/dev/reference/configuration/pd-server/configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/configuration/pd-server/configuration-file/</guid>
      <description>Learn the PD configuration file.</description>
    </item>
    
    <item>
      <title>PD Configuration File</title>
      <link>https://pingcap.com/docs/stable/reference/configuration/pd-server/configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/configuration/pd-server/configuration-file/</guid>
      <description>Learn the PD configuration file.</description>
    </item>
    
    <item>
      <title>PD Configuration File</title>
      <link>https://pingcap.com/docs/v3.1/reference/configuration/pd-server/configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/configuration/pd-server/configuration-file/</guid>
      <description>Learn the PD configuration file.</description>
    </item>
    
    <item>
      <title>PD Configuration Flags</title>
      <link>https://pingcap.com/docs/dev/reference/configuration/pd-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/configuration/pd-server/configuration/</guid>
      <description>Learn some configuration flags of PD.</description>
    </item>
    
    <item>
      <title>PD Configuration Flags</title>
      <link>https://pingcap.com/docs/stable/reference/configuration/pd-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/configuration/pd-server/configuration/</guid>
      <description>Learn some configuration flags of PD.</description>
    </item>
    
    <item>
      <title>PD Configuration Flags</title>
      <link>https://pingcap.com/docs/v2.1/reference/configuration/pd-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/configuration/pd-server/configuration/</guid>
      <description>Learn some configuration flags of PD.</description>
    </item>
    
    <item>
      <title>PD Configuration Flags</title>
      <link>https://pingcap.com/docs/v3.1/reference/configuration/pd-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/configuration/pd-server/configuration/</guid>
      <description>Learn some configuration flags of PD.</description>
    </item>
    
    <item>
      <title>PD Control User Guide</title>
      <link>https://pingcap.com/docs/dev/reference/tools/pd-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/pd-control/</guid>
      <description>Use PD Control to obtain the state information of a cluster and tune a cluster.</description>
    </item>
    
    <item>
      <title>PD Control User Guide</title>
      <link>https://pingcap.com/docs/stable/reference/tools/pd-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/pd-control/</guid>
      <description>Use PD Control to obtain the state information of a cluster and tune a cluster.</description>
    </item>
    
    <item>
      <title>PD Control User Guide</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/pd-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/pd-control/</guid>
      <description>Use PD Control to obtain the state information of a cluster and tune a cluster.</description>
    </item>
    
    <item>
      <title>PD Control User Guide</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/pd-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/pd-control/</guid>
      <description>Use PD Control to obtain the state information of a cluster and tune a cluster.</description>
    </item>
    
    <item>
      <title>PD Control 使用说明</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/pd-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/pd-control/</guid>
      <description>PD Control 使用说明 PD Control 是 PD 的命令行工具，用于获取集群状态信息和调整集群。
源码编译  Go Version 1.9 以上 在 PD 项目根目录使用 make 命令进行编译，生成 bin/pd-ctl  下载安装包 如需下载最新版本的 pd-ctl，直接下载 TiDB 安装包即可，因为 pd-ctl 包含在 TiDB 安装包中。
   安装包 操作系统 架构 SHA256 校验和     https://download.pingcap.org/tidb-{version}-linux-amd64.tar.gz (pd-ctl) Linux amd64 https://download.pingcap.org/tidb-{version}-linux-amd64.sha256     注意：
下载链接中的 {version} 为 TiDB 的版本号。例如 v3.0.5 版本的下载链接为 https://download.pingcap.org/tidb-v3.0.5-linux-amd64.tar.gz。也可以使用 latest 替代 {version} 来下载最新的未发布版本。
 简单例子 单命令模式：
 ./pd-ctl store -u http://127.</description>
    </item>
    
    <item>
      <title>PD Control 使用说明</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/pd-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/pd-control/</guid>
      <description>PD Control 使用说明 PD Control 是 PD 的命令行工具，用于获取集群状态信息和调整集群。
源码编译  Go Version 1.9 以上 在 PD 项目根目录使用 make 命令进行编译，生成 bin/pd-ctl  下载安装包 如需下载最新版本的 pd-ctl，直接下载 TiDB 安装包即可，因为 pd-ctl 包含在 TiDB 安装包中。
   安装包 操作系统 架构 SHA256 校验和     https://download.pingcap.org/tidb-{version}-linux-amd64.tar.gz (pd-ctl) Linux amd64 https://download.pingcap.org/tidb-{version}-linux-amd64.sha256     注意：
下载链接中的 {version} 为 TiDB 的版本号。例如 v3.0.5 版本的下载链接为 https://download.pingcap.org/tidb-v3.0.5-linux-amd64.tar.gz。也可以使用 latest 替代 {version} 来下载最新的未发布版本。
 简单例子 单命令模式：
 ./pd-ctl store -u http://127.</description>
    </item>
    
    <item>
      <title>PD Control 使用说明</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/pd-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/pd-control/</guid>
      <description>PD Control 使用说明 PD Control 是 PD 的命令行工具，用于获取集群状态信息和调整集群。
源码编译  Go Version 1.9 以上 在 PD 项目根目录使用 make 命令进行编译，生成 bin/pd-ctl  下载安装包 如需下载最新版本的 pd-ctl，直接下载 TiDB 安装包即可，因为 pd-ctl 包含在 TiDB 安装包中。
   安装包 操作系统 架构 SHA256 校验和     https://download.pingcap.org/tidb-{version}-linux-amd64.tar.gz (pd-ctl) Linux amd64 https://download.pingcap.org/tidb-{version}-linux-amd64.sha256     注意：
下载链接中的 {version} 为 TiDB 的版本号。例如 v2.1.17 版本的下载链接为 https://download.pingcap.org/tidb-v2.1.17-linux-amd64.tar.gz。也可以使用 latest 替代 {version} 来下载最新的未发布版本。
 简单例子 单命令模式：
./pd-ctl store -d -u http://127.</description>
    </item>
    
    <item>
      <title>PD Control 使用说明</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/pd-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/pd-control/</guid>
      <description>PD Control 使用说明 PD Control 是 PD 的命令行工具，用于获取集群状态信息和调整集群。
源码编译  Go Version 1.9 以上 在 PD 项目根目录使用 make 命令进行编译，生成 bin/pd-ctl  下载安装包 如需下载最新版本的 pd-ctl，直接下载 TiDB 安装包即可，因为 pd-ctl 包含在 TiDB 安装包中。
   安装包 操作系统 架构 SHA256 校验和     https://download.pingcap.org/tidb-{version}-linux-amd64.tar.gz (pd-ctl) Linux amd64 https://download.pingcap.org/tidb-{version}-linux-amd64.sha256     注意：
下载链接中的 {version} 为 TiDB 的版本号。例如 latest 版本的下载链接为 https://download.pingcap.org/tidb-latest-linux-amd64.tar.gz。也可以使用 latest 替代 {version} 来下载最新的未发布版本。
 简单例子 单命令模式：
 ./pd-ctl store -u http://127.</description>
    </item>
    
    <item>
      <title>PD Recover User Guide</title>
      <link>https://pingcap.com/docs/dev/reference/tools/pd-recover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/pd-recover/</guid>
      <description>Use PD Recover to recover a PD cluster which cannot start or provide services normally.</description>
    </item>
    
    <item>
      <title>PD Recover User Guide</title>
      <link>https://pingcap.com/docs/stable/reference/tools/pd-recover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/pd-recover/</guid>
      <description>Use PD Recover to recover a PD cluster which cannot start or provide services normally.</description>
    </item>
    
    <item>
      <title>PD Recover User Guide</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/pd-recover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/pd-recover/</guid>
      <description>Use PD Recover to recover a PD cluster which cannot start or provide services normally.</description>
    </item>
    
    <item>
      <title>PD Recover User Guide</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/pd-recover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/pd-recover/</guid>
      <description>Use PD Recover to recover a PD cluster which cannot start or provide services normally.</description>
    </item>
    
    <item>
      <title>PD Recover 使用文档</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/pd-recover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/pd-recover/</guid>
      <description>PD Recover 使用文档 PD Recover 是对 PD 进行灾难性恢复的工具，用于恢复无法正常启动或服务的 PD 集群。
源码编译  Go Version 1.9 以上 在 PD 项目根目录使用 make 命令进行编译，生成 bin/pd-recover  使用方法 参数说明 -alloc-id uint指定比原集群已分配过的 ID 更大的数-cacert string指定 PEM 格式的受信任 CA 的证书文件路径-cert string指定 PEM 格式的 SSL 证书文件路径-key string指定 PEM 格式的 SSL 证书密钥文件路径，即 `--cert` 所指定的证书的私钥-cluster-id uint指定原集群的 cluster ID-endpoints string指定 PD 的地址 (default &amp;#34;http://127.0.0.1:2379&amp;#34;)恢复流程  从当前集群中找到集群的 Cluster ID 和 Alloc ID。一般在 PD，TiKV 或 TiDB 的日志中都可以获取 Cluster ID。已经分配过的 Alloc ID 可以从 PD 日志获得。另外也可以从 PD 的监控面板的 Metadata Information 监控项中获得。在指定 alloc-id 时需指定一个比当前最大的 Alloc ID 更大的值。如果没有途径获取 Alloc ID，可以根据集群中的 Region，Store 数预估一个较大的数，一般可取高几个数量级的数。 停止整个集群，清空 PD 数据目录，重启 PD 集群。 使用 PD recover 进行恢复，注意指定正确的 cluster-id 和合适的 alloc-id。 提示恢复成功后，重启整个集群。  </description>
    </item>
    
    <item>
      <title>PD Recover 使用文档</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/pd-recover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/pd-recover/</guid>
      <description>PD Recover 使用文档 PD Recover 是对 PD 进行灾难性恢复的工具，用于恢复无法正常启动或服务的 PD 集群。
源码编译  Go Version 1.9 以上 在 PD 项目根目录使用 make 命令进行编译，生成 bin/pd-recover  使用方法 参数说明 -alloc-id uint指定比原集群已分配过的 ID 更大的数-cacert string指定 PEM 格式的受信任 CA 的证书文件路径-cert string指定 PEM 格式的 SSL 证书文件路径-key string指定 PEM 格式的 SSL 证书密钥文件路径，即 `--cert` 所指定的证书的私钥-cluster-id uint指定原集群的 cluster ID-endpoints string指定 PD 的地址 (default &amp;#34;http://127.0.0.1:2379&amp;#34;)恢复流程  从当前集群中找到集群的 Cluster ID 和 Alloc ID。一般在 PD，TiKV 或 TiDB 的日志中都可以获取 Cluster ID。已经分配过的 Alloc ID 可以从 PD 日志获得。另外也可以从 PD 的监控面板的 Metadata Information 监控项中获得。在指定 alloc-id 时需指定一个比当前最大的 Alloc ID 更大的值。如果没有途径获取 Alloc ID，可以根据集群中的 Region，Store 数预估一个较大的数，一般可取高几个数量级的数。 停止整个集群，清空 PD 数据目录，重启 PD 集群。 使用 PD recover 进行恢复，注意指定正确的 cluster-id 和合适的 alloc-id。 提示恢复成功后，重启整个集群。  </description>
    </item>
    
    <item>
      <title>PD Recover 使用文档</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/pd-recover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/pd-recover/</guid>
      <description>PD Recover 使用文档 PD Recover 是对 PD 进行灾难性恢复的工具，用于恢复无法正常启动或服务的 PD 集群。
源码编译  Go Version 1.9 以上 在 PD 项目根目录使用 make 命令进行编译，生成 bin/pd-recover  使用方法 参数说明 -alloc-id uint指定比原集群已分配过的 ID 更大的数-cacert string指定 PEM 格式的受信任 CA 的证书文件路径-cert string指定 PEM 格式的 SSL 证书文件路径-key string指定 PEM 格式的 SSL 证书密钥文件路径，即 `--cert` 所指定的证书的私钥-cluster-id uint指定原集群的 cluster ID-endpoints string指定 PD 的地址 (default &amp;#34;http://127.0.0.1:2379&amp;#34;)恢复流程  从当前集群中找到集群的 Cluster ID 和 Alloc ID。一般在 PD，TiKV 或 TiDB 的日志中都可以获取 Cluster ID。已经分配过的 Alloc ID 可以从 PD 日志获得。另外也可以从 PD 的监控面板的 Metadata Information 监控项中获得。在指定 alloc-id 时需指定一个比当前最大的 Alloc ID 更大的值。如果没有途径获取 Alloc ID，可以根据集群中的 Region，Store 数预估一个较大的数，一般可取高几个数量级的数。 停止整个集群，清空 PD 数据目录，重启 PD 集群。 使用 PD recover 进行恢复，注意指定正确的 cluster-id 和合适的 alloc-id。 提示恢复成功后，重启整个集群。  </description>
    </item>
    
    <item>
      <title>PD Recover 使用文档</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/pd-recover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/pd-recover/</guid>
      <description>PD Recover 使用文档 PD Recover 是对 PD 进行灾难性恢复的工具，用于恢复无法正常启动或服务的 PD 集群。
源码编译  Go Version 1.9 以上 在 PD 项目根目录使用 make 命令进行编译，生成 bin/pd-recover  使用方法 参数说明 -alloc-id uint指定比原集群已分配过的 ID 更大的数-cacert string指定 PEM 格式的受信任 CA 的证书文件路径-cert string指定 PEM 格式的 SSL 证书文件路径-key string指定 PEM 格式的 SSL 证书密钥文件路径，即 `--cert` 所指定的证书的私钥-cluster-id uint指定原集群的 cluster ID-endpoints string指定 PD 的地址 (default &amp;#34;http://127.0.0.1:2379&amp;#34;)恢复流程  从当前集群中找到集群的 Cluster ID 和 Alloc ID。一般在 PD，TiKV 或 TiDB 的日志中都可以获取 Cluster ID。已经分配过的 Alloc ID 可以从 PD 日志获得。另外也可以从 PD 的监控面板的 Metadata Information 监控项中获得。在指定 alloc-id 时需指定一个比当前最大的 Alloc ID 更大的值。如果没有途径获取 Alloc ID，可以根据集群中的 Region，Store 数预估一个较大的数，一般可取高几个数量级的数。 停止整个集群，清空 PD 数据目录，重启 PD 集群。 使用 PD recover 进行恢复，注意指定正确的 cluster-id 和合适的 alloc-id。 提示恢复成功后，重启整个集群。  </description>
    </item>
    
    <item>
      <title>PD Scheduling Best Practices</title>
      <link>https://pingcap.com/docs/dev/reference/best-practices/pd-scheduling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/best-practices/pd-scheduling/</guid>
      <description>Learn best practice and strategy for PD scheduling.</description>
    </item>
    
    <item>
      <title>PD Scheduling Best Practices</title>
      <link>https://pingcap.com/docs/stable/reference/best-practices/pd-scheduling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/best-practices/pd-scheduling/</guid>
      <description>Learn best practice and strategy for PD scheduling.</description>
    </item>
    
    <item>
      <title>PD Scheduling Best Practices</title>
      <link>https://pingcap.com/docs/v2.1/reference/best-practices/pd-scheduling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/best-practices/pd-scheduling/</guid>
      <description>Learn best practice and strategy for PD scheduling.</description>
    </item>
    
    <item>
      <title>PD Scheduling Best Practices</title>
      <link>https://pingcap.com/docs/v3.1/reference/best-practices/pd-scheduling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/best-practices/pd-scheduling/</guid>
      <description>Learn best practice and strategy for PD scheduling.</description>
    </item>
    
    <item>
      <title>PD 研发工程师</title>
      <link>https://pingcap.com/about-cn/recruit/engineering/pd-engineer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/engineering/pd-engineer/</guid>
      <description>PD 研发工程师 岗位职责：
负责 TiDB 集群中心控制组件 Placement Driver (PD) 的开发工作，包括但不限于：
  负责集群全局调度系统的设计，开发，文档撰写；
  负责集群模拟器的开发；
  负责集群可视化系统的开发。
  任职要求：
  三年以上相关领域开发经验，扎实的编程能力，熟悉 C/C++/Go/Java/Python 中的一种；
  对分布式系统的架构和原理有比较深入的了解；
  优秀的发现和解决问题能力，良好的沟通能力，良好的抗压能力，具备团队合作精神。
  加分项：
  精通 Go 语言，能熟练使用 Go pprof 分析和解决性能问题；
  有分布式调度系统相关开发经验；
  有开源项目经历，对前沿技术有浓厚的热情；
  有 Rust 语言开发经验。
  待遇：
20K - 45K，13薪 + 奖金，优秀者可面议
工作地点：
北京，上海，广州，杭州，成都，特别优秀可 Remote</description>
    </item>
    
    <item>
      <title>PD 调度策略最佳实践</title>
      <link>https://pingcap.com/docs-cn/dev/reference/best-practices/pd-scheduling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/best-practices/pd-scheduling/</guid>
      <description>了解 PD 调度策略的最佳实践和调优方式</description>
    </item>
    
    <item>
      <title>PD 调度策略最佳实践</title>
      <link>https://pingcap.com/docs-cn/stable/reference/best-practices/pd-scheduling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/best-practices/pd-scheduling/</guid>
      <description>了解 PD 调度策略的最佳实践和调优方式</description>
    </item>
    
    <item>
      <title>PD 调度策略最佳实践</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/best-practices/pd-scheduling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/best-practices/pd-scheduling/</guid>
      <description>了解 PD 调度策略的最佳实践和调优方式</description>
    </item>
    
    <item>
      <title>PD 调度策略最佳实践</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/best-practices/pd-scheduling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/best-practices/pd-scheduling/</guid>
      <description>了解 PD 调度策略的最佳实践和调优方式</description>
    </item>
    
    <item>
      <title>PD 配置参数</title>
      <link>https://pingcap.com/docs-cn/dev/reference/configuration/pd-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/configuration/pd-server/configuration/</guid>
      <description>PD 配置参数 PD 可以通过命令行参数或环境变量配置。
--advertise-client-urls  对外客户端访问 URL 列表。 默认：${client-urls} 在某些情况下，譬如 docker，或者 NAT 网络环境，客户端并不能通过 PD 自己监听的 client URLs 来访问到 PD，这时候，你就可以设置 advertise urls 来让客户端访问 例如，docker 内部 IP 地址为 172.17.0.1，而宿主机的 IP 地址为 192.168.100.113 并且设置了端口映射 -p 2379:2379，那么可以设置为 --advertise-client-urls=&amp;quot;http://192.168.100.113:2379&amp;quot;，客户端可以通过 http://192.168.100.113:2379 来找到这个服务。  --advertise-peer-urls  对外其他 PD 节点访问 URL 列表。 默认：${peer-urls} 在某些情况下，譬如 docker，或者 NAT 网络环境，其他节点并不能通过 PD 自己监听的 peer URLs 来访问到 PD，这时候，你就可以设置 advertise urls 来让其他节点访问 例如，docker 内部 IP 地址为 172.17.0.1，而宿主机的 IP 地址为 192.168.100.113 并且设置了端口映射 -p 2380:2380，那么可以设置为 --advertise-peer-urls=&amp;quot;http://192.</description>
    </item>
    
    <item>
      <title>PD 配置参数</title>
      <link>https://pingcap.com/docs-cn/stable/reference/configuration/pd-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/configuration/pd-server/configuration/</guid>
      <description>PD 配置参数 PD 可以通过命令行参数或环境变量配置。
--advertise-client-urls  对外客户端访问 URL 列表。 默认：${client-urls} 在某些情况下，譬如 docker，或者 NAT 网络环境，客户端并不能通过 PD 自己监听的 client URLs 来访问到 PD，这时候，你就可以设置 advertise urls 来让客户端访问 例如，docker 内部 IP 地址为 172.17.0.1，而宿主机的 IP 地址为 192.168.100.113 并且设置了端口映射 -p 2379:2379，那么可以设置为 --advertise-client-urls=&amp;quot;http://192.168.100.113:2379&amp;quot;，客户端可以通过 http://192.168.100.113:2379 来找到这个服务。  --advertise-peer-urls  对外其他 PD 节点访问 URL 列表。 默认：${peer-urls} 在某些情况下，譬如 docker，或者 NAT 网络环境，其他节点并不能通过 PD 自己监听的 peer URLs 来访问到 PD，这时候，你就可以设置 advertise urls 来让其他节点访问 例如，docker 内部 IP 地址为 172.17.0.1，而宿主机的 IP 地址为 192.168.100.113 并且设置了端口映射 -p 2380:2380，那么可以设置为 --advertise-peer-urls=&amp;quot;http://192.</description>
    </item>
    
    <item>
      <title>PD 配置参数</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/configuration/pd-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/configuration/pd-server/configuration/</guid>
      <description>PD 配置参数 PD 可以通过命令行参数或环境变量配置。
--advertise-client-urls  对外客户端访问 URL 列表。 默认：${client-urls} 在某些情况下，譬如 docker，或者 NAT 网络环境，客户端并不能通过 PD 自己监听的 client URLs 来访问到 PD，这时候，你就可以设置 advertise urls 来让客户端访问 例如，docker 内部 IP 地址为 172.17.0.1，而宿主机的 IP 地址为 192.168.100.113 并且设置了端口映射 -p 2379:2379，那么可以设置为 --advertise-client-urls=&amp;quot;http://192.168.100.113:2379&amp;quot;，客户端可以通过 http://192.168.100.113:2379 来找到这个服务。  --advertise-peer-urls  对外其他 PD 节点访问 URL 列表。 默认：${peer-urls} 在某些情况下，譬如 docker，或者 NAT 网络环境，其他节点并不能通过 PD 自己监听的 peer URLs 来访问到 PD，这时候，你就可以设置 advertise urls 来让其他节点访问 例如，docker 内部 IP 地址为 172.17.0.1，而宿主机的 IP 地址为 192.168.100.113 并且设置了端口映射 -p 2380:2380，那么可以设置为 --advertise-peer-urls=&amp;quot;http://192.</description>
    </item>
    
    <item>
      <title>PD 配置参数</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/configuration/pd-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/configuration/pd-server/configuration/</guid>
      <description>PD 配置参数 PD 可以通过命令行参数或环境变量配置。
--advertise-client-urls  对外客户端访问 URL 列表。 默认：${client-urls} 在某些情况下，譬如 docker，或者 NAT 网络环境，客户端并不能通过 PD 自己监听的 client URLs 来访问到 PD，这时候，你就可以设置 advertise urls 来让客户端访问 例如，docker 内部 IP 地址为 172.17.0.1，而宿主机的 IP 地址为 192.168.100.113 并且设置了端口映射 -p 2379:2379，那么可以设置为 --advertise-client-urls=&amp;quot;http://192.168.100.113:2379&amp;quot;，客户端可以通过 http://192.168.100.113:2379 来找到这个服务。  --advertise-peer-urls  对外其他 PD 节点访问 URL 列表。 默认：${peer-urls} 在某些情况下，譬如 docker，或者 NAT 网络环境，其他节点并不能通过 PD 自己监听的 peer URLs 来访问到 PD，这时候，你就可以设置 advertise urls 来让其他节点访问 例如，docker 内部 IP 地址为 172.17.0.1，而宿主机的 IP 地址为 192.168.100.113 并且设置了端口映射 -p 2380:2380，那么可以设置为 --advertise-peer-urls=&amp;quot;http://192.</description>
    </item>
    
    <item>
      <title>PD 配置文件描述</title>
      <link>https://pingcap.com/docs-cn/dev/reference/configuration/pd-server/configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/configuration/pd-server/configuration-file/</guid>
      <description>PD 配置文件描述 PD 配置文件比命令行参数支持更多的选项。你可以在 conf/config.toml 找到默认的配置文件。
本文档只阐述未包含在命令行参数中的参数，命令行参数参见 PD 配置参数。
lease  PD Leader Key 租约超时时间，超时系统重新选举 Leader。 默认：3 单位：秒  tso-save-interval  TSO 分配的时间窗口,实时持久存储。 默认：3s  initial-cluster-state  集群初始状态 默认：new  enable-prevote  开启 raft prevote 的开关。 默认：true  quota-backend-bytes  元信息数据库存储空间的大小，默认 2GB。 默认：2147483648  auto-compaction-mod  元信息数据库自动压缩的模式，可选项为 periodic（按周期），revision（按版本数）。 默认：periodic  auto-compaction-retention  compaction-mode 为 periodic 时为元信息数据库自动压缩的间隔时间；compaction-mode 设置为 revision 时为自动压缩的版本数。 默认：1h  force-new-cluster  强制让该 PD 以一个新集群启动，且修改 raft 成员数为 1。 默认：false  tick-interval  etcd raft 的 tick 周期。 默认：100ms  election-interval  etcd leader 选举的超时时间。 默认：3s  use-region-storage  开启独立的 region 存储。 默认：false  security 安全相关配置项。</description>
    </item>
    
    <item>
      <title>PD 配置文件描述</title>
      <link>https://pingcap.com/docs-cn/stable/reference/configuration/pd-server/configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/configuration/pd-server/configuration-file/</guid>
      <description>PD 配置文件描述 PD 配置文件比命令行参数支持更多的选项。你可以在 conf/config.toml 找到默认的配置文件。
本文档只阐述未包含在命令行参数中的参数，命令行参数参见 PD 配置参数。
lease  PD Leader Key 租约超时时间，超时系统重新选举 Leader。 默认：3 单位：秒  tso-save-interval  TSO 分配的时间窗口,实时持久存储。 默认：3s  initial-cluster-state  集群初始状态 默认：new  enable-prevote  开启 raft prevote 的开关。 默认：true  quota-backend-bytes  元信息数据库存储空间的大小，默认 2GB。 默认：2147483648  auto-compaction-mod  元信息数据库自动压缩的模式，可选项为 periodic（按周期），revision（按版本数）。 默认：periodic  auto-compaction-retention  compaction-mode 为 periodic 时为元信息数据库自动压缩的间隔时间；compaction-mode 设置为 revision 时为自动压缩的版本数。 默认：1h  force-new-cluster  强制让该 PD 以一个新集群启动，且修改 raft 成员数为 1。 默认：false  tick-interval  etcd raft 的 tick 周期。 默认：100ms  election-interval  etcd leader 选举的超时时间。 默认：3s  use-region-storage  开启独立的 region 存储。 默认：false  security 安全相关配置项。</description>
    </item>
    
    <item>
      <title>PD 配置文件描述</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/configuration/pd-server/configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/configuration/pd-server/configuration-file/</guid>
      <description>PD 配置文件描述 PD 配置文件比命令行参数支持更多的选项。你可以在 conf/config.toml 找到默认的配置文件。
本文档只阐述未包含在命令行参数中的参数，命令行参数参见 PD 配置参数。
lease  PD Leader Key 租约超时时间，超时系统重新选举 Leader。 默认：3 单位：秒  tso-save-interval  TSO 分配的时间窗口,实时持久存储。 默认：3s  initial-cluster-state  集群初始状态 默认：new  enable-prevote  开启 raft prevote 的开关。 默认：true  quota-backend-bytes  元信息数据库存储空间的大小，默认 2GB。 默认：2147483648  auto-compaction-mod  元信息数据库自动压缩的模式，可选项为 periodic（按周期），revision（按版本数）。 默认：periodic  auto-compaction-retention  compaction-mode 为 periodic 时为元信息数据库自动压缩的间隔时间；compaction-mode 设置为 revision 时为自动压缩的版本数。 默认：1h  force-new-cluster  强制让该 PD 以一个新集群启动，且修改 raft 成员数为 1。 默认：false  tick-interval  etcd raft 的 tick 周期。 默认：100ms  election-interval  etcd leader 选举的超时时间。 默认：3s  use-region-storage  开启独立的 region 存储。 默认：false  security 安全相关配置项。</description>
    </item>
    
    <item>
      <title>PD 重要监控指标详解</title>
      <link>https://pingcap.com/docs-cn/dev/reference/key-monitoring-metrics/pd-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/key-monitoring-metrics/pd-dashboard/</guid>
      <description>PD 重要监控指标详解 使用 Ansible 部署 TiDB 集群时，一键部署监控系统 (Prometheus/Grafana)，监控架构请看 TiDB 监控框架概述。
目前 Grafana Dashboard 整体分为 PD、TiDB、TiKV、Node_exporter、Overview 等。
对于日常运维，我们通过观察 PD 面板上的 Metrics，可以了解 PD 当前的状态。
以下为 PD Dashboard 监控说明：
Cluster  PD role：当前 PD 的角色 Storage capacity：TiDB 集群总可用数据库空间大小 Current storage size：TiDB 集群目前已用数据库空间大小 Current storage usage：TiDB 集群存储空间的使用率 Normal stores：处于正常状态的节点数目 Number of Regions：当前集群的 Region 总量 PD scheduler config：PD 调度配置列表 Region label isolation level：不同 label 所在的 level 的 Region 数量 Label distribution：集群中 TiKV 节点的 label 分布情况 Abnormal stores：处于异常状态的节点数目，正常情况应当为 0 pd_cluster_metadata：记录集群 ID，时间戳和生成的 ID Current peer count：当前集群 peer 的总量 Region health：每个 Region 的状态，通常情况下，pending 的 peer 应该少于 100，miss 的 peer 不能一直大于 0  Operator  Schedule operator create：新创建的不同 operator 的数量 Schedule operator check：已检查的 operator 的数量，主要检查是否当前步骤已经执行完成，如果是，则执行下一个步骤 Schedule operator finish：已完成调度的 operator 的数量 Schedule operator timeout：已超时的 operator 的数量 Schedule operator replaced or canceled：已取消或者被替换的 operator 的数量 Schedule operators count by state：不同状态的 operator 的数量 99% Operator finish duration：99% 已完成 operator 所花费的最长时间 50% Operator finish duration：50% 已完成 operator 所花费的最长时间 99% Operator step duration：99% 已完成的 operator 步骤所花费的最长时间 50% Operator step duration：50% 已完成的 operator 步骤所花费的最长时间  Statistics - Balance  Store capacity：每个 TiKV 实例的总的空间大小 Store available：每个 TiKV 实例的可用空间大小 Store used：每个 TiKV 实例的已使用空间大小 Size amplification：每个 TiKV 实例的空间放大比率 Size available ratio：每个 TiKV 实例的可用空间比率 Store leader score：每个 TiKV 实例的 leader 分数 Store Region score：每个 TiKV 实例的 Region 分数 Store leader size：每个 TiKV 实例上所有 leader 的大小 Store Region size：每个 TiKV 实例上所有 Region 的大小 Store leader count：每个 TiKV 实例上所有 leader 的数量 Store Region count：每个 TiKV 实例上所有 Region 的数量  Statistics - hotspot  Hot write Region&#39;s leader distribution：每个 TiKV 实例上是写入热点的 leader 的数量 Hot write Region&#39;s peer distribution：每个 TiKV 实例上是写入热点的 peer 的数量 Hot write Region&#39;s leader written bytes：每个 TiKV 实例上热点的 leader 的写入大小 Hot write Region&#39;s peer written bytes：每个 TiKV 实例上热点的 peer 的写入大小 Hot read Region&#39;s leader distribution：每个 TiKV 实例上是读取热点的 leader 的数量 Hot read Region&#39;s peer distribution：每个 TiKV 实例上是读取热点的 peer 的数量 Hot read Region&#39;s leader read bytes：每个 TiKV 实例上热点的 leader 的读取大小 Hot read Region&#39;s peer read bytes：每个 TiKV 实例上热点的 peer 的读取字节数  Scheduler  Scheduler is running：所有正在运行的 scheduler Balance leader movement：leader 移动的详细情况 Balance Region movement：Region 移动的详细情况 Balance leader event：balance leader 的事件数量 Balance Region event：balance Region 的事件数量 Balance leader scheduler：balance-leader scheduler 的状态 Balance Region scheduler：balance-region scheduler 的状态 Namespace checker：namespace checker 的状态 Replica checker：replica checker 的状态 Region merge checker：merge checker 的状态 Filter target：尝试选择 Store 作为调度 taget 时没有通过 Filter 的计数 Filter source：尝试选择 Store 作为调度 source 时没有通过 Filter 的计数 Balance Direction：Store 被选作调度 target 或 source 的次数 Store Limit：Store 的调度限流状态  gRPC  Completed commands rate：gRPC 命令的完成速率 99% Completed commands duration：99% 命令的最长消耗时间  etcd  Handle transactions count：etcd 的事务个数 99% Handle transactions duration：99% 的情况下，处理 etcd 事务所需花费的时间 99% WAL fsync duration：99% 的情况下，持久化 WAL 所需花费的时间，这个值通常应该小于 1s 99% Peer round trip time seconds：99% 的情况下，etcd 的网络延时，这个值通常应该小于 1s etcd disk WAL fsync rate：etcd 持久化 WAL 的速率 Raft term：当前 Raft 的 term Raft committed index：最后一次 commit 的 Raft index Raft applied index：最后一次 apply 的 Raft index  TiDB  Handle requests count：TiDB 的请求数量 Handle requests duration：每个请求所花费的时间，99% 的情况下，应该小于 100ms  Heartbeat  Region heartbeat report：TiKV 向 PD 发送的心跳个数 Region heartbeat report error：TiKV 向 PD 发送的异常的心跳个数 Region heartbeat report active：TiKV 向 PD 发送的正常的心跳个数 Region schedule push：PD 向 TiKV 发送的调度命令的个数 99% Region heartbeat latency：99% 的情况下，心跳的延迟  Region storage  Syncer Index：Leader 记录 Region 变更历史的最大 index history last index：Follower 成功同步的 Region 变更历史的 index  </description>
    </item>
    
    <item>
      <title>PD 重要监控指标详解</title>
      <link>https://pingcap.com/docs-cn/stable/reference/key-monitoring-metrics/pd-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/key-monitoring-metrics/pd-dashboard/</guid>
      <description>PD 重要监控指标详解 使用 Ansible 部署 TiDB 集群时，一键部署监控系统 (Prometheus/Grafana)，监控架构请看 TiDB 监控框架概述。
目前 Grafana Dashboard 整体分为 PD、TiDB、TiKV、Node_exporter、Overview 等。
对于日常运维，我们通过观察 PD 面板上的 Metrics，可以了解 PD 当前的状态。
以下为 PD Dashboard 监控说明：
Cluster  PD role：当前 PD 的角色 Storage capacity：TiDB 集群总可用数据库空间大小 Current storage size：TiDB 集群目前已用数据库空间大小 Current storage usage：TiDB 集群存储空间的使用率 Normal stores：处于正常状态的节点数目 Number of Regions：当前集群的 Region 总量 PD scheduler config：PD 调度配置列表 Region label isolation level：不同 label 所在的 level 的 Region 数量 Label distribution：集群中 TiKV 节点的 label 分布情况 Abnormal stores：处于异常状态的节点数目，正常情况应当为 0 pd_cluster_metadata：记录集群 ID，时间戳和生成的 ID Current peer count：当前集群 peer 的总量 Region health：每个 Region 的状态，通常情况下，pending 的 peer 应该少于 100，miss 的 peer 不能一直大于 0  Operator  Schedule operator create：新创建的不同 operator 的数量 Schedule operator check：已检查的 operator 的数量，主要检查是否当前步骤已经执行完成，如果是，则执行下一个步骤 Schedule operator finish：已完成调度的 operator 的数量 Schedule operator timeout：已超时的 operator 的数量 Schedule operator replaced or canceled：已取消或者被替换的 operator 的数量 Schedule operators count by state：不同状态的 operator 的数量 99% Operator finish duration：99% 已完成 operator 所花费的最长时间 50% Operator finish duration：50% 已完成 operator 所花费的最长时间 99% Operator step duration：99% 已完成的 operator 步骤所花费的最长时间 50% Operator step duration：50% 已完成的 operator 步骤所花费的最长时间  Statistics - Balance  Store capacity：每个 TiKV 实例的总的空间大小 Store available：每个 TiKV 实例的可用空间大小 Store used：每个 TiKV 实例的已使用空间大小 Size amplification：每个 TiKV 实例的空间放大比率 Size available ratio：每个 TiKV 实例的可用空间比率 Store leader score：每个 TiKV 实例的 leader 分数 Store Region score：每个 TiKV 实例的 Region 分数 Store leader size：每个 TiKV 实例上所有 leader 的大小 Store Region size：每个 TiKV 实例上所有 Region 的大小 Store leader count：每个 TiKV 实例上所有 leader 的数量 Store Region count：每个 TiKV 实例上所有 Region 的数量  Statistics - hotspot  Hot write Region&#39;s leader distribution：每个 TiKV 实例上是写入热点的 leader 的数量 Hot write Region&#39;s peer distribution：每个 TiKV 实例上是写入热点的 peer 的数量 Hot write Region&#39;s leader written bytes：每个 TiKV 实例上热点的 leader 的写入大小 Hot write Region&#39;s peer written bytes：每个 TiKV 实例上热点的 peer 的写入大小 Hot read Region&#39;s leader distribution：每个 TiKV 实例上是读取热点的 leader 的数量 Hot read Region&#39;s peer distribution：每个 TiKV 实例上是读取热点的 peer 的数量 Hot read Region&#39;s leader read bytes：每个 TiKV 实例上热点的 leader 的读取大小 Hot read Region&#39;s peer read bytes：每个 TiKV 实例上热点的 peer 的读取字节数  Scheduler  Scheduler is running：所有正在运行的 scheduler Balance leader movement：leader 移动的详细情况 Balance Region movement：Region 移动的详细情况 Balance leader event：balance leader 的事件数量 Balance Region event：balance Region 的事件数量 Balance leader scheduler：balance-leader scheduler 的状态 Balance Region scheduler：balance-region scheduler 的状态 Namespace checker：namespace checker 的状态 Replica checker：replica checker 的状态 Region merge checker：merge checker 的状态 Filter target：尝试选择 Store 作为调度 taget 时没有通过 Filter 的计数 Filter source：尝试选择 Store 作为调度 source 时没有通过 Filter 的计数 Balance Direction：Store 被选作调度 target 或 source 的次数 Store Limit：Store 的调度限流状态  gRPC  Completed commands rate：gRPC 命令的完成速率 99% Completed commands duration：99% 命令的最长消耗时间  etcd  Handle transactions count：etcd 的事务个数 99% Handle transactions duration：99% 的情况下，处理 etcd 事务所需花费的时间 99% WAL fsync duration：99% 的情况下，持久化 WAL 所需花费的时间，这个值通常应该小于 1s 99% Peer round trip time seconds：99% 的情况下，etcd 的网络延时，这个值通常应该小于 1s etcd disk WAL fsync rate：etcd 持久化 WAL 的速率 Raft term：当前 Raft 的 term Raft committed index：最后一次 commit 的 Raft index Raft applied index：最后一次 apply 的 Raft index  TiDB  Handle requests count：TiDB 的请求数量 Handle requests duration：每个请求所花费的时间，99% 的情况下，应该小于 100ms  Heartbeat  Region heartbeat report：TiKV 向 PD 发送的心跳个数 Region heartbeat report error：TiKV 向 PD 发送的异常的心跳个数 Region heartbeat report active：TiKV 向 PD 发送的正常的心跳个数 Region schedule push：PD 向 TiKV 发送的调度命令的个数 99% Region heartbeat latency：99% 的情况下，心跳的延迟  Region storage  Syncer Index：Leader 记录 Region 变更历史的最大 index history last index：Follower 成功同步的 Region 变更历史的 index  </description>
    </item>
    
    <item>
      <title>PD 重要监控指标详解</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/key-monitoring-metrics/pd-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/key-monitoring-metrics/pd-dashboard/</guid>
      <description>PD 重要监控指标详解 使用 Ansible 部署 TiDB 集群时，一键部署监控系统 (Prometheus/Grafana)，监控架构请看 TiDB 监控框架概述。
目前 Grafana Dashboard 整体分为 PD、TiDB、TiKV、Node_exporter、Overview 等。
对于日常运维，我们通过观察 PD 面板上的 Metrics，可以了解 PD 当前的状态。
以下为 PD Dashboard 监控说明：
Cluster  PD role：当前 PD 的角色 Storage capacity：TiDB 集群总可用数据库空间大小 Current storage size：TiDB 集群目前已用数据库空间大小 Number of Regions：当前集群的 Region 总量 Leader balance ratio：Leader 数量最多和最少节点相差的百分比，一般小于 5%，节点重启时会有比较大的波动 Region balance ratio：Region 数量最多和最少节点相差的百分比，一般小于 5%，新增/下线节点时相差比较大 Normal stores：处于正常状态的节点数目 Abnormal stores：处于异常状态的节点数目，正常情况应当为 0 Current storage usage：TiDB 集群存储空间的使用率 Current peer count：当前集群 peer 的总量 Metadata information：记录集群 ID，时间戳和生成的 ID Region label isolation level：不同 label 所在的 level 的 Region 数量 Region health：每个 Region 的状态，通常情况下，pending 的 peer 应该少于 100，miss 的 peer 不能一直大于 0  Balance  Store capacity：每个 TiKV 实例的总的空间大小 Store available：每个 TiKV 实例的可用空间大小 Store used：每个 TiKV 实例的已使用空间大小 Size amplification：每个 TiKV 实例的空间放大比率 Size available ratio：每个 TiKV 实例的可用空间比率 Store leader score：每个 TiKV 实例的 leader 分数 Store Region score：每个 TiKV 实例的 Region 分数 Store leader size：每个 TiKV 实例上所有 leader 的大小 Store Region size：每个 TiKV 实例上所有 Region 的大小 Store leader count：每个 TiKV 实例上所有 leader 的数量 Store Region count：每个 TiKV 实例上所有 Region 的数量  HotRegion  Hot write Region&#39;s leader distribution：每个 TiKV 实例上是写入热点的 leader 的数量 Hot write Region&#39;s peer distribution：每个 TiKV 实例上是写入热点的 peer 的数量 Hot write Region&#39;s leader written bytes：每个 TiKV 实例上热点的 leader 的写入大小 Hot write Region&#39;s peer written bytes：每个 TiKV 实例上热点的 peer 的写入大小 Hot read Region&#39;s leader distribution：每个 TiKV 实例上是读取热点的 leader 的数量 Hot read Region&#39;s peer distribution：每个 TiKV 实例上是读取热点的 peer 的数量 Hot read Region&#39;s leader read bytes：每个 TiKV 实例上热点的 leader 的读取大小 Hot read Region&#39;s peer read bytes：每个 TiKV 实例上热点的 peer 的读取大小  Scheduler  Scheduler is running：所有正在运行的 scheduler Balance leader movement：leader 移动的详细情况 Balance Region movement：Region 移动的详细情况 Balance leader event：balance leader 的事件数量 Balance Region event：balance Region 的事件数量 Balance leader scheduler：balance-leader scheduler 的状态 Balance Region scheduler：balance-region scheduler 的状态 Namespace checker：namespace checker 的状态 Replica checker：replica checker 的状态 Region merge checker：merge checker 的状态  Operator  Schedule operator create：新创建的不同 operator 的数量 Schedule operator check：已检查的 operator 的数量，主要检查是否当前步骤已经执行完成，如果是，则执行下一个步骤 Schedule operator finish：已完成的 operator 的数量 Schedule operator timeout：已超时的 operator 的数量 Schedule operator replaced or canceled：已取消或者被替换的 operator 的数量 Schedule operators count by state：不同状态的 operator 的数量 99% Operator finish duration：已完成的 operator 中，99% 所需花费的时间 50% Operator finish duration：已完成的 operator 中，50% 所需花费的时间 99% Operator step duration：已完成的 operator 的步骤中，99% 所需花费的时间 50% Operator step duration：已完成的 operator 的步骤中，50% 所需花费的时间  gRPC  Completed commands rate：gRPC 命令的完成速率 99% Completed commands duration：99% 的情况下，命令的完成时间  etcd  Handle transactions count：etcd 的事务个数 99% Handle transactions duration：99% 的情况下，处理 etcd 事务所需花费的时间 99% WAL fsync duration：99% 的情况下，持久化 WAL 所需花费的时间，这个值通常应该小于 1s 99% Peer round trip time seconds：99% 的情况下，etcd 的网络延时，这个值通常应该小于 1s etcd disk WAL fsync rate：etcd 持久化 WAL 的速率 Raft term：当前 Raft 的 term Raft committed index：最后一次 commit 的 Raft index Raft applied index：最后一次 apply 的 Raft index  TiDB  Handle requests count：TiDB 的请求数量 Handle requests duration：每个请求所花费的时间，99% 的情况下，应该小于 100ms  Heartbeat  Region heartbeat report：TiKV 向 PD 发送的心跳个数 Region heartbeat report error：TiKV 向 PD 发送的异常的心跳个数 Region heartbeat report active：TiKV 向 PD 发送的正常的心跳个数 Region schedule push：PD 向 TiKV 发送的调度命令的个数 99% Region heartbeat latency：99% 的情况下，心跳的延迟  </description>
    </item>
    
    <item>
      <title>PD 重要监控指标详解</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/key-monitoring-metrics/pd-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/key-monitoring-metrics/pd-dashboard/</guid>
      <description>PD 重要监控指标详解 使用 Ansible 部署 TiDB 集群时，一键部署监控系统 (Prometheus/Grafana)，监控架构请看 TiDB 监控框架概述。
目前 Grafana Dashboard 整体分为 PD、TiDB、TiKV、Node_exporter、Overview 等。
对于日常运维，我们通过观察 PD 面板上的 Metrics，可以了解 PD 当前的状态。
以下为 PD Dashboard 监控说明：
Cluster  PD role：当前 PD 的角色 Storage capacity：TiDB 集群总可用数据库空间大小 Current storage size：TiDB 集群目前已用数据库空间大小 Current storage usage：TiDB 集群存储空间的使用率 Normal stores：处于正常状态的节点数目 Number of Regions：当前集群的 Region 总量 PD scheduler config：PD 调度配置列表 Region label isolation level：不同 label 所在的 level 的 Region 数量 Label distribution：集群中 TiKV 节点的 label 分布情况 Abnormal stores：处于异常状态的节点数目，正常情况应当为 0 pd_cluster_metadata：记录集群 ID，时间戳和生成的 ID Current peer count：当前集群 peer 的总量 Region health：每个 Region 的状态，通常情况下，pending 的 peer 应该少于 100，miss 的 peer 不能一直大于 0  Operator  Schedule operator create：新创建的不同 operator 的数量 Schedule operator check：已检查的 operator 的数量，主要检查是否当前步骤已经执行完成，如果是，则执行下一个步骤 Schedule operator finish：已完成调度的 operator 的数量 Schedule operator timeout：已超时的 operator 的数量 Schedule operator replaced or canceled：已取消或者被替换的 operator 的数量 Schedule operators count by state：不同状态的 operator 的数量 99% Operator finish duration：99% 已完成 operator 所花费的最长时间 50% Operator finish duration：50% 已完成 operator 所花费的最长时间 99% Operator step duration：99% 已完成的 operator 步骤所花费的最长时间 50% Operator step duration：50% 已完成的 operator 步骤所花费的最长时间  Statistics - Balance  Store capacity：每个 TiKV 实例的总的空间大小 Store available：每个 TiKV 实例的可用空间大小 Store used：每个 TiKV 实例的已使用空间大小 Size amplification：每个 TiKV 实例的空间放大比率 Size available ratio：每个 TiKV 实例的可用空间比率 Store leader score：每个 TiKV 实例的 leader 分数 Store Region score：每个 TiKV 实例的 Region 分数 Store leader size：每个 TiKV 实例上所有 leader 的大小 Store Region size：每个 TiKV 实例上所有 Region 的大小 Store leader count：每个 TiKV 实例上所有 leader 的数量 Store Region count：每个 TiKV 实例上所有 Region 的数量  Statistics - hotspot  Hot write Region&#39;s leader distribution：每个 TiKV 实例上是写入热点的 leader 的数量 Hot write Region&#39;s peer distribution：每个 TiKV 实例上是写入热点的 peer 的数量 Hot write Region&#39;s leader written bytes：每个 TiKV 实例上热点的 leader 的写入大小 Hot write Region&#39;s peer written bytes：每个 TiKV 实例上热点的 peer 的写入大小 Hot read Region&#39;s leader distribution：每个 TiKV 实例上是读取热点的 leader 的数量 Hot read Region&#39;s peer distribution：每个 TiKV 实例上是读取热点的 peer 的数量 Hot read Region&#39;s leader read bytes：每个 TiKV 实例上热点的 leader 的读取大小 Hot read Region&#39;s peer read bytes：每个 TiKV 实例上热点的 peer 的读取字节数  Scheduler  Scheduler is running：所有正在运行的 scheduler Balance leader movement：leader 移动的详细情况 Balance Region movement：Region 移动的详细情况 Balance leader event：balance leader 的事件数量 Balance Region event：balance Region 的事件数量 Balance leader scheduler：balance-leader scheduler 的状态 Balance Region scheduler：balance-region scheduler 的状态 Namespace checker：namespace checker 的状态 Replica checker：replica checker 的状态 Region merge checker：merge checker 的状态 Filter target：尝试选择 Store 作为调度 taget 时没有通过 Filter 的计数 Filter source：尝试选择 Store 作为调度 source 时没有通过 Filter 的计数 Balance Direction：Store 被选作调度 target 或 source 的次数 Store Limit：Store 的调度限流状态  gRPC  Completed commands rate：gRPC 命令的完成速率 99% Completed commands duration：99% 命令的最长消耗时间  etcd  Handle transactions count：etcd 的事务个数 99% Handle transactions duration：99% 的情况下，处理 etcd 事务所需花费的时间 99% WAL fsync duration：99% 的情况下，持久化 WAL 所需花费的时间，这个值通常应该小于 1s 99% Peer round trip time seconds：99% 的情况下，etcd 的网络延时，这个值通常应该小于 1s etcd disk WAL fsync rate：etcd 持久化 WAL 的速率 Raft term：当前 Raft 的 term Raft committed index：最后一次 commit 的 Raft index Raft applied index：最后一次 apply 的 Raft index  TiDB  Handle requests count：TiDB 的请求数量 Handle requests duration：每个请求所花费的时间，99% 的情况下，应该小于 100ms  Heartbeat  Region heartbeat report：TiKV 向 PD 发送的心跳个数 Region heartbeat report error：TiKV 向 PD 发送的异常的心跳个数 Region heartbeat report active：TiKV 向 PD 发送的正常的心跳个数 Region schedule push：PD 向 TiKV 发送的调度命令的个数 99% Region heartbeat latency：99% 的情况下，心跳的延迟  Region storage  Syncer Index：Leader 记录 Region 变更历史的最大 index history last index：Follower 成功同步的 Region 变更历史的 index  </description>
    </item>
    
    <item>
      <title>Perform a Rolling Update to a TiDB Cluster in Kubernetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/upgrade/tidb-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/upgrade/tidb-cluster/</guid>
      <description>Learn how to perform a rolling update to a TiDB cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>Perform a Rolling Update to a TiDB Cluster in Kubernetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/upgrade/tidb-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/upgrade/tidb-cluster/</guid>
      <description>Learn how to perform a rolling update to a TiDB cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>Perform a Rolling Update to a TiDB Cluster in Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/upgrade/tidb-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/upgrade/tidb-cluster/</guid>
      <description>Learn how to perform a rolling update to a TiDB cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>Persistent Storage Class Configuration in Kubernetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/reference/configuration/storage-class/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/reference/configuration/storage-class/</guid>
      <description>Learn how to configure local PVs and network PVs.</description>
    </item>
    
    <item>
      <title>Persistent Storage Class Configuration in Kubernetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/reference/configuration/storage-class/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/reference/configuration/storage-class/</guid>
      <description>Learn how to configure local PVs and network PVs.</description>
    </item>
    
    <item>
      <title>Persistent Storage Class Configuration in Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/reference/configuration/storage-class/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/reference/configuration/storage-class/</guid>
      <description>Learn how to configure local PVs and network PVs.</description>
    </item>
    
    <item>
      <title>PingCAP University 培训专家</title>
      <link>https://pingcap.com/about-cn/recruit/user-ecosystem/tidb-training-expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/user-ecosystem/tidb-training-expert/</guid>
      <description>PingCAP University 培训专家 岗位职责：
  精通技术培训体系，精通数据库技术，面向企业用户及个人用户，制定、规划 PingCAP University 课程体系、讲师体系；
  负责课程内容架构设计，协同技术内容专家，完成有趣有料的课程开发；
  研究技术人员的学习行为和反馈，持续提升课程质量及提升用户学习体验；
  负责 PingCAP University 运营，包括线上推广、渠道商合作体系建立与管理。
  任职要求：
  三年以上数据库领域从业经验；熟悉数据库技术理论、至少精通一种数据库产品（Oracle 、 MySQL 、大数据等），对前沿数据库技术有一定研究；高度认同 NewSQL 技术方向；
  两年以上技术课程设计和运营经验；
  熟悉常见培训推广策略，熟悉线上学习平台经验优先；
  具备较强的系统性思维、跨团队沟通协调能力；执行力强，抗压能力强；拥有良好的用户导向思维；
  从事过 Oracle、MySQL、HBase 等关系型数据库或者大数据培训经历的优先。
  待遇：
15K - 40K ， 13 薪 + 奖金，优秀者可面议
工作地点：
北京，上海</description>
    </item>
    
    <item>
      <title>Placement Driver</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/scaling/pd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/scaling/pd/</guid>
      <description>Placement Driver  Resources  pd-ctl  </description>
    </item>
    
    <item>
      <title>Pre-GA release notes</title>
      <link>https://pingcap.com/docs/dev/releases/prega/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/prega/</guid>
      <description>Pre-GA Release Notes On August 30, 2017, TiDB Pre-GA is released! This release is focused on MySQL compatibility, SQL optimization, stability, and performance.
TiDB  The SQL query optimizer:  Adjust the cost model Use index scan to handle the where clause with the compare expression which has different types on each side Support the Greedy algorithm based Join Reorder   Many enhancements have been introduced to be more compatible with MySQL Support Natural Join Support the JSON type (Experimental), including the query, update and index of the JSON fields Prune the useless data to reduce the consumption of the executor memory Support configuring prioritization in the SQL statements and automatically set the prioritization for some of the statements according to the query type Completed the expression refactor and the speed is increased by about 30%  Placement Driver (PD)  Support manually changing the leader of the PD cluster  TiKV  Use dedicated Rocksdb instance to store Raft log Use DeleteRange to speed up the deleting of replicas Coprocessor now supports more pushdown operators Improve the performance and stability  TiDB Connector for Spark Beta Release  Implement the predicates pushdown Implement the aggregation pushdown Implement range pruning Capable of running full set of TPC+H except for one query that needs view support  </description>
    </item>
    
    <item>
      <title>Pre-GA release notes</title>
      <link>https://pingcap.com/docs/stable/releases/prega/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/prega/</guid>
      <description>Pre-GA Release Notes On August 30, 2017, TiDB Pre-GA is released! This release is focused on MySQL compatibility, SQL optimization, stability, and performance.
TiDB  The SQL query optimizer:  Adjust the cost model Use index scan to handle the where clause with the compare expression which has different types on each side Support the Greedy algorithm based Join Reorder   Many enhancements have been introduced to be more compatible with MySQL Support Natural Join Support the JSON type (Experimental), including the query, update and index of the JSON fields Prune the useless data to reduce the consumption of the executor memory Support configuring prioritization in the SQL statements and automatically set the prioritization for some of the statements according to the query type Completed the expression refactor and the speed is increased by about 30%  Placement Driver (PD)  Support manually changing the leader of the PD cluster  TiKV  Use dedicated Rocksdb instance to store Raft log Use DeleteRange to speed up the deleting of replicas Coprocessor now supports more pushdown operators Improve the performance and stability  TiDB Connector for Spark Beta Release  Implement the predicates pushdown Implement the aggregation pushdown Implement range pruning Capable of running full set of TPC+H except for one query that needs view support  </description>
    </item>
    
    <item>
      <title>Pre-GA release notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/prega/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/prega/</guid>
      <description>Pre-GA Release Notes On August 30, 2017, TiDB Pre-GA is released! This release is focused on MySQL compatibility, SQL optimization, stability, and performance.
TiDB  The SQL query optimizer:  Adjust the cost model Use index scan to handle the where clause with the compare expression which has different types on each side Support the Greedy algorithm based Join Reorder   Many enhancements have been introduced to be more compatible with MySQL Support Natural Join Support the JSON type (Experimental), including the query, update and index of the JSON fields Prune the useless data to reduce the consumption of the executor memory Support configuring prioritization in the SQL statements and automatically set the prioritization for some of the statements according to the query type Completed the expression refactor and the speed is increased by about 30%  Placement Driver (PD)  Support manually changing the leader of the PD cluster  TiKV  Use dedicated Rocksdb instance to store Raft log Use DeleteRange to speed up the deleting of replicas Coprocessor now supports more pushdown operators Improve the performance and stability  TiDB Connector for Spark Beta Release  Implement the predicates pushdown Implement the aggregation pushdown Implement range pruning Capable of running full set of TPC+H except for one query that needs view support  </description>
    </item>
    
    <item>
      <title>Pre-GA release notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/prega/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/prega/</guid>
      <description>Pre-GA Release Notes On August 30, 2017, TiDB Pre-GA is released! This release is focused on MySQL compatibility, SQL optimization, stability, and performance.
TiDB  The SQL query optimizer:  Adjust the cost model Use index scan to handle the where clause with the compare expression which has different types on each side Support the Greedy algorithm based Join Reorder   Many enhancements have been introduced to be more compatible with MySQL Support Natural Join Support the JSON type (Experimental), including the query, update and index of the JSON fields Prune the useless data to reduce the consumption of the executor memory Support configuring prioritization in the SQL statements and automatically set the prioritization for some of the statements according to the query type Completed the expression refactor and the speed is increased by about 30%  Placement Driver (PD)  Support manually changing the leader of the PD cluster  TiKV  Use dedicated Rocksdb instance to store Raft log Use DeleteRange to speed up the deleting of replicas Coprocessor now supports more pushdown operators Improve the performance and stability  TiDB Connector for Spark Beta Release  Implement the predicates pushdown Implement the aggregation pushdown Implement range pruning Capable of running full set of TPC+H except for one query that needs view support  </description>
    </item>
    
    <item>
      <title>Precheck the upstream MySQL instance configuration</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/precheck/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/precheck/</guid>
      <description>Use the precheck feature provided by DM to detect errors in the upstream MySQL instance configuration.</description>
    </item>
    
    <item>
      <title>Precheck the upstream MySQL instance configuration</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/precheck/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/precheck/</guid>
      <description>Use the precheck feature provided by DM to detect errors in the upstream MySQL instance configuration.</description>
    </item>
    
    <item>
      <title>Precheck the upstream MySQL instance configuration</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/precheck/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/precheck/</guid>
      <description>Use the precheck feature provided by DM to detect errors in the upstream MySQL instance configuration.</description>
    </item>
    
    <item>
      <title>Precheck the upstream MySQL instance configuration</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/precheck/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/precheck/</guid>
      <description>Use the precheck feature provided by DM to detect errors in the upstream MySQL instance configuration.</description>
    </item>
    
    <item>
      <title>Precision Math</title>
      <link>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/precision-math/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/precision-math/</guid>
      <description>Learn about the precision math in TiDB.</description>
    </item>
    
    <item>
      <title>Precision Math</title>
      <link>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/precision-math/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/precision-math/</guid>
      <description>Learn about the precision math in TiDB.</description>
    </item>
    
    <item>
      <title>Precision Math</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/precision-math/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/precision-math/</guid>
      <description>Learn about the precision math in TiDB.</description>
    </item>
    
    <item>
      <title>Precision Math</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/precision-math/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/precision-math/</guid>
      <description>Learn about the precision math in TiDB.</description>
    </item>
    
    <item>
      <title>PREPARE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/prepare/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/prepare/</guid>
      <description>TiDB 数据库中 PREPARE 的使用概况。</description>
    </item>
    
    <item>
      <title>PREPARE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/prepare/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/prepare/</guid>
      <description>TiDB 数据库中 PREPARE 的使用概况。</description>
    </item>
    
    <item>
      <title>PREPARE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/prepare/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/prepare/</guid>
      <description>TiDB 数据库中 PREPARE 的使用概况。</description>
    </item>
    
    <item>
      <title>PREPARE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/prepare/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/prepare/</guid>
      <description>TiDB 数据库中 PREPARE 的使用概况。</description>
    </item>
    
    <item>
      <title>PREPARE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/prepare/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/prepare/</guid>
      <description>An overview of the usage of PREPARE for the TiDB database.</description>
    </item>
    
    <item>
      <title>PREPARE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/prepare/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/prepare/</guid>
      <description>An overview of the usage of PREPARE for the TiDB database.</description>
    </item>
    
    <item>
      <title>PREPARE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/prepare/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/prepare/</guid>
      <description>An overview of the usage of PREPARE for the TiDB database.</description>
    </item>
    
    <item>
      <title>PREPARE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/prepare/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/prepare/</guid>
      <description>An overview of the usage of PREPARE for the TiDB database.</description>
    </item>
    
    <item>
      <title>Prerequisites for TiDB in Kubernetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/deploy/prerequisites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/deploy/prerequisites/</guid>
      <description>Learn the prerequisites for TiDB in Kubernetes.</description>
    </item>
    
    <item>
      <title>Prerequisites for TiDB in Kubernetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/deploy/prerequisites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/deploy/prerequisites/</guid>
      <description>Learn the prerequisites for TiDB in Kubernetes.</description>
    </item>
    
    <item>
      <title>Prerequisites for TiDB in Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/deploy/prerequisites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/deploy/prerequisites/</guid>
      <description>Learn the prerequisites for TiDB in Kubernetes.</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>https://pingcap.com/privacy-policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/privacy-policy/</guid>
      <description>PINGCAP PRIVACY POLICY Effective Date: October 10, 2018
PingCAP obtains and uses personal information about individuals to enhance our ability to deliver the highest level of service, but we also recognize that you expect us to treat this information appropriately. This privacy policy explains how PingCAP uses, shares and protects personal information that it collects on pingcap.com and any related mobile applications and websites operated by PingCAP (&amp;ldquo;Site&amp;rdquo;).
By visiting the Site or purchasing, enrolling in or using our product and services, you agree to this Privacy Policy, as it may be amended from time to time.</description>
    </item>
    
    <item>
      <title>Privilege Management</title>
      <link>https://pingcap.com/docs/dev/reference/security/privilege-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/security/privilege-system/</guid>
      <description>Learn how to manage the privilege.</description>
    </item>
    
    <item>
      <title>Privilege Management</title>
      <link>https://pingcap.com/docs/stable/reference/security/privilege-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/security/privilege-system/</guid>
      <description>Learn how to manage the privilege.</description>
    </item>
    
    <item>
      <title>Privilege Management</title>
      <link>https://pingcap.com/docs/v2.1/reference/security/privilege-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/security/privilege-system/</guid>
      <description>Learn how to manage the privilege.</description>
    </item>
    
    <item>
      <title>Privilege Management</title>
      <link>https://pingcap.com/docs/v3.1/reference/security/privilege-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/security/privilege-system/</guid>
      <description>Learn how to manage the privilege.</description>
    </item>
    
    <item>
      <title>Production Deployment from Binary Tarball</title>
      <link>https://pingcap.com/docs/dev/how-to/deploy/from-tarball/production-environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/deploy/from-tarball/production-environment/</guid>
      <description>Use the binary to deploy a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Production Deployment from Binary Tarball</title>
      <link>https://pingcap.com/docs/stable/how-to/deploy/from-tarball/production-environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/deploy/from-tarball/production-environment/</guid>
      <description>Use the binary to deploy a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Production Deployment from Binary Tarball</title>
      <link>https://pingcap.com/docs/v2.1/how-to/deploy/from-tarball/production-environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/deploy/from-tarball/production-environment/</guid>
      <description>Use the binary to deploy a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Production Deployment from Binary Tarball</title>
      <link>https://pingcap.com/docs/v3.1/how-to/deploy/from-tarball/production-environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/deploy/from-tarball/production-environment/</guid>
      <description>Use the binary to deploy a TiDB cluster.</description>
    </item>
    
    <item>
      <title>QA 研发工程师</title>
      <link>https://pingcap.com/about-cn/recruit/engineering/qa-engineer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/engineering/qa-engineer/</guid>
      <description>QA 研发工程师 岗位职责：
  通过研发的手段保证 TiDB 产品质量；
  参与自动化测试平台的开发建设；
  参与混沌工程平台的研发设计。
  任职要求：
  扎实的编程能力，熟悉 C/C++/Go/Java/Python 中的一种，熟悉 Shell；
  对数据库、分布式系统、Linux 有深入了解；
  对软件质量保证体系有浓厚的兴趣，善于发现、分析和总结问题；
  有良好的沟通能力，具备团队合作精神。
  加分项：
  有大型分布式系统的质量保障体系构建经验；
  有数据库、存储类产品的质量保障经验；
  精通 MySQL，熟悉 Docker、k8s 等技术。
  待遇：
15K - 40K + 期权，13薪 + 奖金，优秀者可面议
工作地点：
北京，上海，广州，杭州，成都，特别优秀可 Remote</description>
    </item>
    
    <item>
      <title>Query Optimization</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/query-optimization/lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/query-optimization/lab/</guid>
      <description>Tutorial for deploying TiDB on Google Cloud using Kubernetes.</description>
    </item>
    
    <item>
      <title>Query Optimization</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/query-optimization/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/query-optimization/overview/</guid>
      <description>Query Optimization  Transcript When you look at a query, such as SELECT * FROM trips WHERE bike_id = &#39;x&#39;, you can&#39;t actually tell if it executes efficiently. This is because SQL is declarative and it defines what the result or the output should look like. It is not procedural or a set of steps on how to produce that result. For example, do x, then do y, then combine the two.</description>
    </item>
    
    <item>
      <title>Read Historical Data</title>
      <link>https://pingcap.com/docs/dev/how-to/get-started/read-historical-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/get-started/read-historical-data/</guid>
      <description>Learn about how TiDB reads data from history versions.</description>
    </item>
    
    <item>
      <title>Read Historical Data</title>
      <link>https://pingcap.com/docs/stable/how-to/get-started/read-historical-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/get-started/read-historical-data/</guid>
      <description>Learn about how TiDB reads data from history versions.</description>
    </item>
    
    <item>
      <title>Read Historical Data</title>
      <link>https://pingcap.com/docs/v2.1/how-to/get-started/read-historical-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/get-started/read-historical-data/</guid>
      <description>Learn about how TiDB reads data from history versions.</description>
    </item>
    
    <item>
      <title>Read Historical Data</title>
      <link>https://pingcap.com/docs/v3.1/how-to/get-started/read-historical-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/get-started/read-historical-data/</guid>
      <description>Learn about how TiDB reads data from history versions.</description>
    </item>
    
    <item>
      <title>Recap: Backup and Restore</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/backup/backup-and-restore-lab-recap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/backup/backup-and-restore-lab-recap/</guid>
      <description>Recap: Backup and Restore  </description>
    </item>
    
    <item>
      <title>Recap: HTAP</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/htap/lab-recap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/htap/lab-recap/</guid>
      <description>Recap: HTAP  </description>
    </item>
    
    <item>
      <title>Recap: Load Sample Data Lab</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/mysql-compatibility/lab-recap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/mysql-compatibility/lab-recap/</guid>
      <description>Recap: Load Sample Data Lab  </description>
    </item>
    
    <item>
      <title>Recap: Prometheus and Grafana</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/monitoring/lab-recap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/monitoring/lab-recap/</guid>
      <description>Recap: Prometheus and Grafana  </description>
    </item>
    
    <item>
      <title>Recap: Restore from Accidental Delete</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/backup/restore-from-accidental-delete-lab-recap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/backup/restore-from-accidental-delete-lab-recap/</guid>
      <description>Recap: Restore from Accidental Delete  </description>
    </item>
    
    <item>
      <title>Recap: Scaling</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/scaling/lab-recap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/scaling/lab-recap/</guid>
      <description>Recap: Scaling  </description>
    </item>
    
    <item>
      <title>Recap: Schema Changes</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/ddl/lab-recap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/ddl/lab-recap/</guid>
      <description>Recap: Schema Changes  </description>
    </item>
    
    <item>
      <title>Recover from Disaster</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/backup/backup-and-restore-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/backup/backup-and-restore-lab/</guid>
      <description>Tutorial for deploying TiDB on Google Cloud using Kubernetes.</description>
    </item>
    
    <item>
      <title>RECOVER TABLE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/recover-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/recover-table/</guid>
      <description>RECOVER TABLE RECOVER TABLE 的功能是恢复被删除的表及其数据。在 DROP TABLE 后，在 GC life time 时间内，可以用 RECOVER TABLE 语句恢复被删除的表以及其数据。
语法  RECOVER TABLE table_name  RECOVER TABLE BY JOB ddl_job_id 注意事项 如果删除表后并过了 GC lifetime，就不能再用 RECOVER TABLE 来恢复被删除的表了，执行 RECOVER TABLE 语句会返回类似错误：snapshot is older than GC safe point 2019-07-10 13:45:57 +0800 CST。
对于 3.0.0 及之后的 TiDB 版本，不推荐在使用 TiDB Binlog 的情况下使用 RECOVER TABLE 功能。
TiDB Binlog 在 3.0.1 支持 RECOVER TABLE 后，可在下面的情况下使用 RECOVER TABLE：
 3.0.1+ 版本的 TiDB Binlog 主从集群都使用 TiDB 3.</description>
    </item>
    
    <item>
      <title>RECOVER TABLE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/recover-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/recover-table/</guid>
      <description>RECOVER TABLE RECOVER TABLE 的功能是恢复被删除的表及其数据。在 DROP TABLE 后，在 GC life time 时间内，可以用 RECOVER TABLE 语句恢复被删除的表以及其数据。
语法  RECOVER TABLE table_name  RECOVER TABLE BY JOB ddl_job_id 注意事项 如果删除表后并过了 GC lifetime，就不能再用 RECOVER TABLE 来恢复被删除的表了，执行 RECOVER TABLE 语句会返回类似错误：snapshot is older than GC safe point 2019-07-10 13:45:57 +0800 CST。
对于 3.0.0 及之后的 TiDB 版本，不推荐在使用 TiDB Binlog 的情况下使用 RECOVER TABLE 功能。
TiDB Binlog 在 3.0.1 支持 RECOVER TABLE 后，可在下面的情况下使用 RECOVER TABLE：
 3.0.1+ 版本的 TiDB Binlog 主从集群都使用 TiDB 3.</description>
    </item>
    
    <item>
      <title>RECOVER TABLE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/recover-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/recover-table/</guid>
      <description>RECOVER TABLE RECOVER TABLE 的功能是恢复被删除的表及其数据。在 DROP TABLE 后，在 GC life time 时间内，可以用 RECOVER TABLE 语句恢复被删除的表以及其数据。
语法  RECOVER TABLE table_name  RECOVER TABLE BY JOB ddl_job_id 注意事项 如果删除表后并过了 GC lifetime，就不能再用 RECOVER TABLE 来恢复被删除的表了，执行 RECOVER TABLE 语句会返回类似错误：snapshot is older than GC safe point 2019-07-10 13:45:57 +0800 CST。
对于 3.0.0 及之后的 TiDB 版本，不推荐在使用 TiDB Binlog 的情况下使用 RECOVER TABLE 功能。
TiDB Binlog 在 3.0.1 支持 RECOVER TABLE 后，可在下面的情况下使用 RECOVER TABLE：
 3.0.1+ 版本的 TiDB Binlog 主从集群都使用 TiDB 3.</description>
    </item>
    
    <item>
      <title>RECOVER TABLE</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/recover-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/recover-table/</guid>
      <description>An overview of the usage of RECOVER TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>RECOVER TABLE</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/recover-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/recover-table/</guid>
      <description>An overview of the usage of RECOVER TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>RECOVER TABLE</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/recover-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/recover-table/</guid>
      <description>An overview of the usage of RECOVER TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/rn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/rn/</guid>
      <description>TiDB Release Notes 4.0  4.0.0-beta.1 4.0.0-beta  3.1  3.1.0-beta.2 3.1.0-beta.1 3.1.0-beta  3.0  3.0.12 3.0.11 3.0.10 3.0.9 3.0.8 3.0.7 3.0.6 3.0.5 3.0.4 3.0.3 3.0.2 3.0.1 3.0 GA 3.0.0-rc.3 3.0.0-rc.2 3.0.0-rc.1 3.0.0-beta.1 3.0.0-beta  2.1  2.1.19 2.1.18 2.1.17 2.1.16 2.1.15 2.1.14 2.1.13 2.1.12 2.1.11 2.1.10 2.1.9 2.1.8 2.1.7 2.1.6 2.1.5 2.1.4 2.1.3 2.1.2 2.1.1 2.1 GA 2.1 RC5 2.1 RC4 2.1 RC3 2.1 RC2 2.1 RC1 2.1 Beta  2.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/rn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/rn/</guid>
      <description>TiDB Release Notes 3.0  3.0.12 3.0.11 3.0.10 3.0.9 3.0.8 3.0.7 3.0.6 3.0.5 3.0.4 3.0.3 3.0.2 3.0.1 3.0 GA 3.0.0-rc.3 3.0.0-rc.2 3.0.0-rc.1 3.0.0-beta.1 3.0.0-beta  2.1  2.1.19 2.1.18 2.1.17 2.1.16 2.1.15 2.1.14 2.1.13 2.1.12 2.1.11 2.1.10 2.1.9 2.1.8 2.1.7 2.1.6 2.1.5 2.1.4 2.1.3 2.1.2 2.1.1 2.1 GA 2.1 RC5 2.1 RC4 2.1 RC3 2.1 RC2 2.1 RC1 2.1 Beta  2.0  2.0.11 2.0.10 2.0.9 2.0.8 2.0.7 2.0.6 2.0.5 2.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/rn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/rn/</guid>
      <description>TiDB Release Notes 3.0  3.0.1 3.0 GA 3.0.0-rc.3 3.0.0-rc.2 3.0.0-rc.1 3.0.0-beta.1 3.0.0-beta  2.1  2.1.19 2.1.18 2.1.17 2.1.16 2.1.15 2.1.14 2.1.13 2.1.12 2.1.11 2.1.10 2.1.9 2.1.8 2.1.7 2.1.6 2.1.5 2.1.4 2.1.3 2.1.2 2.1.1 2.1 GA 2.1 RC5 2.1 RC4 2.1 RC3 2.1 RC2 2.1 RC1 2.1 Beta  2.0  2.0.11 2.0.10 2.0.9 2.0.8 2.0.7 2.0.6 2.0.5 2.0.4 2.0.3 2.0.2 2.0.1 2.0 2.0 RC5 2.0 RC4 2.0 RC3 2.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/rn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/rn/</guid>
      <description>TiDB Release Notes 3.1  3.1.0-beta.2 3.1.0-beta.1 3.1.0-beta  3.0  3.0.12 3.0.11 3.0.10 3.0.9 3.0.8 3.0.7 3.0.6 3.0.5 3.0.4 3.0.3 3.0.2 3.0.1 3.0 GA 3.0.0-rc.3 3.0.0-rc.2 3.0.0-rc.1 3.0.0-beta.1 3.0.0-beta  2.1  2.1.19 2.1.18 2.1.17 2.1.16 2.1.15 2.1.14 2.1.13 2.1.12 2.1.11 2.1.10 2.1.9 2.1.8 2.1.7 2.1.6 2.1.5 2.1.4 2.1.3 2.1.2 2.1.1 2.1 GA 2.1 RC5 2.1 RC4 2.1 RC3 2.1 RC2 2.1 RC1 2.1 Beta  2.0  2.0.11 2.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>https://pingcap.com/tidb-planet/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-planet/release-notes/</guid>
      <description>Have fun adventure on TiDB Planet!</description>
    </item>
    
    <item>
      <title>RENAME INDEX</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/rename-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/rename-index/</guid>
      <description>TiDB 数据库中 RENAME INDEX 的使用概况。</description>
    </item>
    
    <item>
      <title>RENAME INDEX</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/rename-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/rename-index/</guid>
      <description>TiDB 数据库中 RENAME INDEX 的使用概况。</description>
    </item>
    
    <item>
      <title>RENAME INDEX</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/rename-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/rename-index/</guid>
      <description>TiDB 数据库中 RENAME INDEX 的使用概况。</description>
    </item>
    
    <item>
      <title>RENAME INDEX</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/rename-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/rename-index/</guid>
      <description>TiDB 数据库中 RENAME INDEX 的使用概况。</description>
    </item>
    
    <item>
      <title>RENAME INDEX | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/rename-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/rename-index/</guid>
      <description>An overview of the usage of RENAME INDEX for the TiDB database.</description>
    </item>
    
    <item>
      <title>RENAME INDEX | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/rename-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/rename-index/</guid>
      <description>An overview of the usage of RENAME INDEX for the TiDB database.</description>
    </item>
    
    <item>
      <title>RENAME INDEX | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/rename-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/rename-index/</guid>
      <description>An overview of the usage of RENAME INDEX for the TiDB database.</description>
    </item>
    
    <item>
      <title>RENAME INDEX | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/rename-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/rename-index/</guid>
      <description>An overview of the usage of RENAME INDEX for the TiDB database.</description>
    </item>
    
    <item>
      <title>RENAME TABLE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/rename-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/rename-table/</guid>
      <description>TiDB 数据库中 RENAME TABLE 的使用概况。</description>
    </item>
    
    <item>
      <title>RENAME TABLE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/rename-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/rename-table/</guid>
      <description>TiDB 数据库中 RENAME TABLE 的使用概况。</description>
    </item>
    
    <item>
      <title>RENAME TABLE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/rename-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/rename-table/</guid>
      <description>TiDB 数据库中 RENAME TABLE 的使用概况。</description>
    </item>
    
    <item>
      <title>RENAME TABLE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/rename-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/rename-table/</guid>
      <description>TiDB 数据库中 RENAME TABLE 的使用概况。</description>
    </item>
    
    <item>
      <title>RENAME TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/rename-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/rename-table/</guid>
      <description>An overview of the usage of RENAME TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>RENAME TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/rename-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/rename-table/</guid>
      <description>An overview of the usage of RENAME TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>RENAME TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/rename-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/rename-table/</guid>
      <description>An overview of the usage of RENAME TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>RENAME TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/rename-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/rename-table/</guid>
      <description>An overview of the usage of RENAME TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>Reparo User Guide</title>
      <link>https://pingcap.com/docs/dev/reference/tidb-binlog/reparo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tidb-binlog/reparo/</guid>
      <description>Learn to use Reparo.</description>
    </item>
    
    <item>
      <title>Reparo User Guide</title>
      <link>https://pingcap.com/docs/stable/reference/tidb-binlog/reparo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tidb-binlog/reparo/</guid>
      <description>Learn to use Reparo.</description>
    </item>
    
    <item>
      <title>Reparo User Guide</title>
      <link>https://pingcap.com/docs/v2.1/reference/tidb-binlog/reparo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tidb-binlog/reparo/</guid>
      <description>Learn to use Reparo.</description>
    </item>
    
    <item>
      <title>Reparo User Guide</title>
      <link>https://pingcap.com/docs/v3.1/reference/tidb-binlog/reparo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tidb-binlog/reparo/</guid>
      <description>Learn to use Reparo.</description>
    </item>
    
    <item>
      <title>Reparo 使用文档</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/reparo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/reparo/</guid>
      <description>Reparo 使用文档 Reparo 是 TiDB Binlog 的一个配套工具，用于增量的恢复。使用 TiDB Binlog 中的 Drainer 将 binlog 按照 protobuf 格式输出到文件，通过这种方式来备份增量数据。当需要恢复增量数据时，使用 Reparo 解析文件中的 binlog，并将其应用到 TiDB／MySQL 中。
下载链接：tidb-binlog-cluster-latest-linux-amd64.tar.gz
Reparo 使用 命令行参数说明 Usage of Reparo: -L string 日志输出信息等级设置：debug, info, warn, error, fatal（默认值：info）。 -V 打印版本信息。 -c int 同步下游的并发数，该值设置越高同步的吞吐性能越好（默认 16）。 -config string 配置文件路径，如果指定了配置文件，Reparo 会首先读取配置文件的配置；如果对应的配置在命令行参数里面也存在，Reparo 就会使用命令行参数的配置来覆盖配置文件里面的。 -data-dir string Drainer 输出的 protobuf 格式 binlog 文件的存储路径 (默认值： data.drainer)。 -dest-type string 下游服务类型。 取值为 print, mysql（默认值：print）。当值为 print 时，只做解析打印到标准输出，不执行 SQL；如果为 mysql，则需要在配置文件内配置 host、port、user、password 等信息。 -log-file string log 文件路径。 -log-rotate string log 文件切换频率，取值为 hour、day。 -start-datetime string 用于指定开始恢复的时间点，格式为 “2006-01-02 15:04:05”。如果不设置该参数则从最早的 binlog 文件开始恢复。 -stop-datetime string 用于指定结束恢复的时间点，格式同上。如果不设置该参数则恢复到最后一个 binlog 文件。 -safe-mode bool 指定是否开启安全模式，开启后可支持反复同步。 -txn-batch int 输出到下游数据库一个事务的 SQL 语句数量（默认 20）。 配置文件说明 # Drainer 输出的 protobuf 格式 binlog 文件的存储路径。 data-dir = &amp;#34;.</description>
    </item>
    
    <item>
      <title>Reparo 使用文档</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/reparo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/reparo/</guid>
      <description>Reparo 使用文档 Reparo 是 TiDB Binlog 的一个配套工具，用于增量的恢复。使用 TiDB Binlog 中的 Drainer 将 binlog 按照 protobuf 格式输出到文件，通过这种方式来备份增量数据。当需要恢复增量数据时，使用 Reparo 解析文件中的 binlog，并将其应用到 TiDB／MySQL 中。
下载链接：tidb-binlog-cluster-latest-linux-amd64.tar.gz
Reparo 使用 命令行参数说明 Usage of Reparo: -L string 日志输出信息等级设置：debug, info, warn, error, fatal（默认值：info）。 -V 打印版本信息。 -c int 同步下游的并发数，该值设置越高同步的吞吐性能越好（默认 16）。 -config string 配置文件路径，如果指定了配置文件，Reparo 会首先读取配置文件的配置；如果对应的配置在命令行参数里面也存在，Reparo 就会使用命令行参数的配置来覆盖配置文件里面的。 -data-dir string Drainer 输出的 protobuf 格式 binlog 文件的存储路径 (默认值： data.drainer)。 -dest-type string 下游服务类型。 取值为 print, mysql（默认值：print）。当值为 print 时，只做解析打印到标准输出，不执行 SQL；如果为 mysql，则需要在配置文件内配置 host、port、user、password 等信息。 -log-file string log 文件路径。 -log-rotate string log 文件切换频率，取值为 hour、day。 -start-datetime string 用于指定开始恢复的时间点，格式为 “2006-01-02 15:04:05”。如果不设置该参数则从最早的 binlog 文件开始恢复。 -stop-datetime string 用于指定结束恢复的时间点，格式同上。如果不设置该参数则恢复到最后一个 binlog 文件。 -safe-mode bool 指定是否开启安全模式，开启后可支持反复同步。 -txn-batch int 输出到下游数据库一个事务的 SQL 语句数量（默认 20）。 配置文件说明 # Drainer 输出的 protobuf 格式 binlog 文件的存储路径。 data-dir = &amp;#34;.</description>
    </item>
    
    <item>
      <title>Reparo 使用文档</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/reparo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/reparo/</guid>
      <description>Reparo 使用文档 Reparo 是 TiDB Binlog 的一个配套工具，用于增量的恢复。使用 TiDB Binlog 中的 Drainer 将 binlog 按照 protobuf 格式输出到文件，通过这种方式来备份增量数据。当需要恢复增量数据时，使用 Reparo 解析文件中的 binlog，并将其应用到 TiDB／MySQL 中。
下载链接：tidb-binlog-cluster-latest-linux-amd64.tar.gz
Reparo 使用 命令行参数说明 Usage of Reparo: -L string 日志输出信息等级设置：debug, info, warn, error, fatal（默认值：info）。 -V 打印版本信息。 -c int 同步下游的并发数，该值设置越高同步的吞吐性能越好（默认 16）。 -config string 配置文件路径，如果指定了配置文件，Reparo 会首先读取配置文件的配置；如果对应的配置在命令行参数里面也存在，Reparo 就会使用命令行参数的配置来覆盖配置文件里面的。 -data-dir string Drainer 输出的 protobuf 格式 binlog 文件的存储路径 (默认值： data.drainer)。 -dest-type string 下游服务类型。 取值为 print, mysql（默认值：print）。当值为 print 时，只做解析打印到标准输出，不执行 SQL；如果为 mysql，则需要在配置文件内配置 host、port、user、password 等信息。 -log-file string log 文件路径。 -log-rotate string log 文件切换频率，取值为 hour、day。 -start-datetime string 用于指定开始恢复的时间点，格式为 “2006-01-02 15:04:05”。如果不设置该参数则从最早的 binlog 文件开始恢复。 -stop-datetime string 用于指定结束恢复的时间点，格式同上。如果不设置该参数则恢复到最后一个 binlog 文件。 -safe-mode bool 指定是否开启安全模式，开启后可支持反复同步。 -txn-batch int 输出到下游数据库一个事务的 SQL 语句数量（默认 20）。 配置文件说明 # Drainer 输出的 protobuf 格式 binlog 文件的存储路径。 data-dir = &amp;#34;.</description>
    </item>
    
    <item>
      <title>Reparo 使用文档</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/reparo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/reparo/</guid>
      <description>Reparo 使用文档 Reparo 是 TiDB Binlog 的一个配套工具，用于增量的恢复。使用 TiDB Binlog 中的 Drainer 将 binlog 按照 protobuf 格式输出到文件，通过这种方式来备份增量数据。当需要恢复增量数据时，使用 Reparo 解析文件中的 binlog，并将其应用到 TiDB／MySQL 中。
下载链接：tidb-binlog-cluster-latest-linux-amd64.tar.gz
Reparo 使用 命令行参数说明 Usage of Reparo: -L string 日志输出信息等级设置：debug, info, warn, error, fatal（默认值：info）。 -V 打印版本信息。 -c int 同步下游的并发数，该值设置越高同步的吞吐性能越好（默认 16）。 -config string 配置文件路径，如果指定了配置文件，Reparo 会首先读取配置文件的配置；如果对应的配置在命令行参数里面也存在，Reparo 就会使用命令行参数的配置来覆盖配置文件里面的。 -data-dir string Drainer 输出的 protobuf 格式 binlog 文件的存储路径 (默认值： data.drainer)。 -dest-type string 下游服务类型。 取值为 print, mysql（默认值：print）。当值为 print 时，只做解析打印到标准输出，不执行 SQL；如果为 mysql，则需要在配置文件内配置 host、port、user、password 等信息。 -log-file string log 文件路径。 -log-rotate string log 文件切换频率，取值为 hour、day。 -start-datetime string 用于指定开始恢复的时间点，格式为 “2006-01-02 15:04:05”。如果不设置该参数则从最早的 binlog 文件开始恢复。 -stop-datetime string 用于指定结束恢复的时间点，格式同上。如果不设置该参数则恢复到最后一个 binlog 文件。 -safe-mode bool 指定是否开启安全模式，开启后可支持反复同步。 -txn-batch int 输出到下游数据库一个事务的 SQL 语句数量（默认 20）。 配置文件说明 # Drainer 输出的 protobuf 格式 binlog 文件的存储路径。 data-dir = &amp;#34;.</description>
    </item>
    
    <item>
      <title>REPLACE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/replace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/replace/</guid>
      <description>TiDB 数据库中 REPLACE 的使用概况。</description>
    </item>
    
    <item>
      <title>REPLACE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/replace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/replace/</guid>
      <description>TiDB 数据库中 REPLACE 的使用概况。</description>
    </item>
    
    <item>
      <title>REPLACE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/replace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/replace/</guid>
      <description>TiDB 数据库中 REPLACE 的使用概况。</description>
    </item>
    
    <item>
      <title>REPLACE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/replace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/replace/</guid>
      <description>TiDB 数据库中 REPLACE 的使用概况。</description>
    </item>
    
    <item>
      <title>REPLACE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/replace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/replace/</guid>
      <description>An overview of the usage of REPLACE for the TiDB database.</description>
    </item>
    
    <item>
      <title>REPLACE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/replace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/replace/</guid>
      <description>An overview of the usage of REPLACE for the TiDB database.</description>
    </item>
    
    <item>
      <title>REPLACE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/replace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/replace/</guid>
      <description>An overview of the usage of REPLACE for the TiDB database.</description>
    </item>
    
    <item>
      <title>REPLACE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/replace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/replace/</guid>
      <description>An overview of the usage of REPLACE for the TiDB database.</description>
    </item>
    
    <item>
      <title>Replicate Data Using Data Migration</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/deploy/</guid>
      <description>Use the Data Migration tool to replicate the full data and the incremental data.</description>
    </item>
    
    <item>
      <title>Replicate Data Using Data Migration</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/deploy/</guid>
      <description>Use the Data Migration tool to replicate the full data and the incremental data.</description>
    </item>
    
    <item>
      <title>Replicate Data Using Data Migration</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/deploy/</guid>
      <description>Use the Data Migration tool to replicate the full data and the incremental data.</description>
    </item>
    
    <item>
      <title>Replicate Data Using Data Migration</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/deploy/</guid>
      <description>Use the Data Migration tool to replicate the full data and the incremental data.</description>
    </item>
    
    <item>
      <title>Report an Issue</title>
      <link>https://pingcap.com/docs/dev/report-issue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/report-issue/</guid>
      <description>Report an issue with your TiDB installation.</description>
    </item>
    
    <item>
      <title>Report an Issue</title>
      <link>https://pingcap.com/docs/stable/report-issue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/report-issue/</guid>
      <description>Report an issue with your TiDB installation.</description>
    </item>
    
    <item>
      <title>Report an Issue</title>
      <link>https://pingcap.com/docs/v2.1/report-issue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/report-issue/</guid>
      <description>Report an issue with your TiDB installation.</description>
    </item>
    
    <item>
      <title>Report an Issue</title>
      <link>https://pingcap.com/docs/v3.1/report-issue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/report-issue/</guid>
      <description>Report an issue with your TiDB installation.</description>
    </item>
    
    <item>
      <title>Restart a TiDB Cluster in Kubernetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/maintain/restart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/maintain/restart/</guid>
      <description>Learn how to restart a TiDB cluster in the Kubernetes cluster.</description>
    </item>
    
    <item>
      <title>Restart a TiDB Cluster in Kubernetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/maintain/restart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/maintain/restart/</guid>
      <description>Learn how to restart a TiDB cluster in the Kubernetes cluster.</description>
    </item>
    
    <item>
      <title>Restart a TiDB Cluster in Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/maintain/restart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/maintain/restart/</guid>
      <description>Learn how to restart a TiDB cluster in the Kubernetes cluster.</description>
    </item>
    
    <item>
      <title>Restore Data into TiDB in Kubernetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/maintain/lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/maintain/lightning/</guid>
      <description>Learn how to quickly restore data into a TiDB cluster in Kubernetes with TiDB Lightning.</description>
    </item>
    
    <item>
      <title>Restore Data into TiDB in Kubernetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/maintain/lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/maintain/lightning/</guid>
      <description>Learn how to quickly restore data into a TiDB cluster in Kubernetes with TiDB Lightning.</description>
    </item>
    
    <item>
      <title>Restore Data into TiDB in Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/maintain/lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/maintain/lightning/</guid>
      <description>Learn how to quickly restore data into a TiDB cluster in Kubernetes with TiDB Lightning.</description>
    </item>
    
    <item>
      <title>Restore from Accidental Delete</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/backup/restore-from-accidental-delete-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/backup/restore-from-accidental-delete-lab/</guid>
      <description>Tutorial for deploying TiDB on Google Cloud using Kubernetes.</description>
    </item>
    
    <item>
      <title>REVOKE &lt;privileges&gt;</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/revoke-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/revoke-privileges/</guid>
      <description>&lt;p&gt;TiDB 数据库中 REVOKE &lt;privileges&gt; 的使用概况。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>REVOKE &lt;privileges&gt;</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/revoke-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/revoke-privileges/</guid>
      <description>&lt;p&gt;TiDB 数据库中 REVOKE &lt;privileges&gt; 的使用概况。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>REVOKE &lt;privileges&gt;</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/revoke-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/revoke-privileges/</guid>
      <description>&lt;p&gt;TiDB 数据库中 REVOKE &lt;privileges&gt; 的使用概况。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>REVOKE &lt;privileges&gt;</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/revoke-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/revoke-privileges/</guid>
      <description>&lt;p&gt;TiDB 数据库中 REVOKE &lt;privileges&gt; 的使用概况。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>REVOKE &lt;privileges&gt; | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/revoke-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/revoke-privileges/</guid>
      <description>&lt;p&gt;An overview of the usage of REVOKE &lt;privileges&gt; for the TiDB database.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>REVOKE &lt;privileges&gt; | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/revoke-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/revoke-privileges/</guid>
      <description>&lt;p&gt;An overview of the usage of REVOKE &lt;privileges&gt; for the TiDB database.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>REVOKE &lt;privileges&gt; | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/revoke-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/revoke-privileges/</guid>
      <description>&lt;p&gt;An overview of the usage of REVOKE &lt;privileges&gt; for the TiDB database.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>REVOKE &lt;privileges&gt; | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/revoke-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/revoke-privileges/</guid>
      <description>&lt;p&gt;An overview of the usage of REVOKE &lt;privileges&gt; for the TiDB database.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RocksDB</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/rocksdb/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/rocksdb/overview/</guid>
      <description>RocksDB  Transcript As I mentioned in our first introduction to TiKV, the storage is based on RocksDB. In fact, you could consider TiKV to be the equivalent to be &amp;ldquo;distributed RocksDB with built-in replication&amp;rdquo;.
So what is RocksDB? RocksDB is the MySQL equivalent of InnoDB. It is an embedded database library developed by the team at Facebook, who forked an earlier database named LevelDB (developed by Google).
In MySQL you can choose between various storage engine options, such as InnoDB or MyISAM.</description>
    </item>
    
    <item>
      <title>RocksDB Configuration</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/rocksdb/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/rocksdb/configuration/</guid>
      <description>RocksDB Configuration Resources  Tune TiKV  Transcript Under the hood, it is worth noting that each TiKV server instance uses two instances of RocksDB. The default instance is storing your used data, with the second storing the Raft logs (used for distributed consensus between TiKV servers).
Data is organized into Column Families, which in MySQL terminology you can think of as similar to Table Partition, with the exception that instead of a table being partitioned horizontally by rows, it is being partitioned and grouped into sets of columns.</description>
    </item>
    
    <item>
      <title>Role-Based Access Control</title>
      <link>https://pingcap.com/docs/dev/reference/security/role-based-access-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/security/role-based-access-control/</guid>
      <description>This document introduces TiDB RBAC operations and implementation.</description>
    </item>
    
    <item>
      <title>Role-Based Access Control</title>
      <link>https://pingcap.com/docs/stable/reference/security/role-based-access-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/security/role-based-access-control/</guid>
      <description>This document introduces TiDB RBAC operations and implementation.</description>
    </item>
    
    <item>
      <title>Role-Based Access Control</title>
      <link>https://pingcap.com/docs/v3.1/reference/security/role-based-access-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/security/role-based-access-control/</guid>
      <description>This document introduces TiDB RBAC operations and implementation.</description>
    </item>
    
    <item>
      <title>ROLLBACK</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/rollback/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/rollback/</guid>
      <description>TiDB 数据库中 ROLLBACK 的使用概况。</description>
    </item>
    
    <item>
      <title>ROLLBACK</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/rollback/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/rollback/</guid>
      <description>TiDB 数据库中 ROLLBACK 的使用概况。</description>
    </item>
    
    <item>
      <title>ROLLBACK</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/rollback/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/rollback/</guid>
      <description>TiDB 数据库中 ROLLBACK 的使用概况。</description>
    </item>
    
    <item>
      <title>ROLLBACK</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/rollback/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/rollback/</guid>
      <description>TiDB 数据库中 ROLLBACK 的使用概况。</description>
    </item>
    
    <item>
      <title>ROLLBACK | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/rollback/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/rollback/</guid>
      <description>An overview of the usage of ROLLBACK for the TiDB database.</description>
    </item>
    
    <item>
      <title>ROLLBACK | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/rollback/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/rollback/</guid>
      <description>An overview of the usage of ROLLBACK for the TiDB database.</description>
    </item>
    
    <item>
      <title>ROLLBACK | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/rollback/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/rollback/</guid>
      <description>An overview of the usage of ROLLBACK for the TiDB database.</description>
    </item>
    
    <item>
      <title>ROLLBACK | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/rollback/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/rollback/</guid>
      <description>An overview of the usage of ROLLBACK for the TiDB database.</description>
    </item>
    
    <item>
      <title>Scale a TiDB cluster</title>
      <link>https://pingcap.com/docs/dev/how-to/scale/horizontally/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/scale/horizontally/</guid>
      <description>Learn how to add or delete PD, TiKV and TiDB nodes.</description>
    </item>
    
    <item>
      <title>Scale a TiDB cluster</title>
      <link>https://pingcap.com/docs/stable/how-to/scale/horizontally/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/scale/horizontally/</guid>
      <description>Learn how to add or delete PD, TiKV and TiDB nodes.</description>
    </item>
    
    <item>
      <title>Scale a TiDB cluster</title>
      <link>https://pingcap.com/docs/v2.1/how-to/scale/horizontally/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/scale/horizontally/</guid>
      <description>Learn how to add or delete PD, TiKV and TiDB nodes.</description>
    </item>
    
    <item>
      <title>Scale a TiDB cluster</title>
      <link>https://pingcap.com/docs/v3.1/how-to/scale/horizontally/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/scale/horizontally/</guid>
      <description>Learn how to add or delete PD, TiKV and TiDB nodes.</description>
    </item>
    
    <item>
      <title>Scale the TiDB Cluster Using TiDB Ansible</title>
      <link>https://pingcap.com/docs/dev/how-to/scale/with-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/scale/with-ansible/</guid>
      <description>Use TiDB Ansible to increase/decrease the capacity of a TiDB/TiKV/PD node.</description>
    </item>
    
    <item>
      <title>Scale the TiDB Cluster Using TiDB Ansible</title>
      <link>https://pingcap.com/docs/stable/how-to/scale/with-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/scale/with-ansible/</guid>
      <description>Use TiDB Ansible to increase/decrease the capacity of a TiDB/TiKV/PD node.</description>
    </item>
    
    <item>
      <title>Scale the TiDB Cluster Using TiDB Ansible</title>
      <link>https://pingcap.com/docs/v2.1/how-to/scale/with-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/scale/with-ansible/</guid>
      <description>Use TiDB Ansible to increase/decrease the capacity of a TiDB/TiKV/PD node.</description>
    </item>
    
    <item>
      <title>Scale the TiDB Cluster Using TiDB Ansible</title>
      <link>https://pingcap.com/docs/v3.1/how-to/scale/with-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/scale/with-ansible/</guid>
      <description>Use TiDB Ansible to increase/decrease the capacity of a TiDB/TiKV/PD node.</description>
    </item>
    
    <item>
      <title>Scale TiDB in Kubernetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/scale-in-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/scale-in-kubernetes/</guid>
      <description>Learn how to horizontally and vertically scale up and down a TiDB cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>Scale TiDB in Kubernetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/scale-in-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/scale-in-kubernetes/</guid>
      <description>Learn how to horizontally and vertically scale up and down a TiDB cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>Scale TiDB in Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/scale-in-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/scale-in-kubernetes/</guid>
      <description>Learn how to horizontally and vertically scale up and down a TiDB cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>Scaling Patterns</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/scaling/patterns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/scaling/patterns/</guid>
      <description>Scaling Patterns  Transcript So in just a second, we will have a lab where we will scale out both TiDB and TiKV, but before we get there, I wanted to cover at a higher level when you would scale one over the other, as well as other performance considerations.
So let&#39;s go over some scenarios:
  TiDB servers are stateless. They make heavy use of CPUs and memory, and if you notice you are constrained on either, it might be time to scale out and add additional servers.</description>
    </item>
    
    <item>
      <title>Scaling TiDB</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/scaling/lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/scaling/lab/</guid>
      <description>Tutorial for deploying TiDB on Google Cloud using Kubernetes.</description>
    </item>
    
    <item>
      <title>Schema Changes</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/ddl/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/ddl/overview/</guid>
      <description>Schema Changes  Transcript Welcome back.
Recent versions of MySQL have improved support for making schema changes, or DDL. For example, you can add indexes online, which means that while the index is being added, other users of the system can still read and write to the table. There are some limitations to this - for example, not all DDL changes are online. If you wanted to change a column from an integer to a bigint, that would require the table to be locked so that no write operations can occur during this operation.</description>
    </item>
    
    <item>
      <title>Schema Object Names</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/language-structure/schema-object-names/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/language-structure/schema-object-names/</guid>
      <description>Schema Object Names 在 TiDB 中，包括 database，table，index，column，alias 等等都被认为是 identifier (标识符，之后阐述用英文).
在 TiDB 中，identifier可以被反引号 (`) 包裹，为了阐述方便，我们叫这种情况为 被引用。identifier 也可以不被 ` 包裹。但是如果一个 identifier 存在一个特殊符号或者是一个保留关键字，那么你必须要 引用 它。
 SELECT * FROM `table` WHERE `table`.id = 20; 如果ANSI_QUOTES sql mode 被设置了，那么我们认为被双引号 &amp;quot; 包裹的字符串为 identifier。
 CREATE TABLE &amp;#34;test&amp;#34; (a varchar(10)); ERROR 1105 (HY000): line 0 column 19 near &amp;#34; (a varchar(10))&amp;#34; (total length 35)  SET SESSION sql_mode=&amp;#39;ANSI_QUOTES&amp;#39;; Query OK, 0 rows affected (0.00 sec)  CREATE TABLE &amp;#34;test&amp;#34; (a varchar(10)); Query OK, 0 rows affected (0.</description>
    </item>
    
    <item>
      <title>Schema Object Names</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/language-structure/schema-object-names/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/language-structure/schema-object-names/</guid>
      <description>Schema Object Names 在 TiDB 中，包括 database，table，index，column，alias 等等都被认为是 identifier (标识符，之后阐述用英文).
在 TiDB 中，identifier可以被反引号 (`) 包裹，为了阐述方便，我们叫这种情况为 被引用。identifier 也可以不被 ` 包裹。但是如果一个 identifier 存在一个特殊符号或者是一个保留关键字，那么你必须要 引用 它。
 SELECT * FROM `table` WHERE `table`.id = 20; 如果ANSI_QUOTES sql mode 被设置了，那么我们认为被双引号 &amp;quot; 包裹的字符串为 identifier。
 CREATE TABLE &amp;#34;test&amp;#34; (a varchar(10)); ERROR 1105 (HY000): line 0 column 19 near &amp;#34; (a varchar(10))&amp;#34; (total length 35)  SET SESSION sql_mode=&amp;#39;ANSI_QUOTES&amp;#39;; Query OK, 0 rows affected (0.00 sec)  CREATE TABLE &amp;#34;test&amp;#34; (a varchar(10)); Query OK, 0 rows affected (0.</description>
    </item>
    
    <item>
      <title>Schema Object Names</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/language-structure/schema-object-names/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/language-structure/schema-object-names/</guid>
      <description>Schema Object Names 在 TiDB 中，包括 database，table，index，column，alias 等等都被认为是 identifier (标识符，之后阐述用英文).
在 TiDB 中，identifier可以被反引号 (`) 包裹，为了阐述方便，我们叫这种情况为 被引用。identifier 也可以不被 ` 包裹。但是如果一个 identifier 存在一个特殊符号或者是一个保留关键字，那么你必须要 引用 它。
mysql&amp;gt; SELECT * FROM `table` WHERE `table`.id = 20; 如果ANSI_QUOTES sql mode 被设置了，那么我们认为被双引号 &amp;quot; 包裹的字符串为 identifier。
mysql&amp;gt; CREATE TABLE &amp;#34;test&amp;#34; (a varchar(10)); ERROR 1105 (HY000): line 0 column 19 near &amp;#34;(a varchar(10))&amp;#34; (total length 35) mysql&amp;gt; SET SESSION sql_mode=&amp;#39;ANSI_QUOTES&amp;#39;; Query OK, 0 rows affected (0.00 sec) mysql&amp;gt; CREATE TABLE &amp;#34;test&amp;#34; (a varchar(10)); Query OK, 0 rows affected (0.</description>
    </item>
    
    <item>
      <title>Schema Object Names</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/language-structure/schema-object-names/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/language-structure/schema-object-names/</guid>
      <description>Schema Object Names 在 TiDB 中，包括 database，table，index，column，alias 等等都被认为是 identifier (标识符，之后阐述用英文).
在 TiDB 中，identifier可以被反引号 (`) 包裹，为了阐述方便，我们叫这种情况为 被引用。identifier 也可以不被 ` 包裹。但是如果一个 identifier 存在一个特殊符号或者是一个保留关键字，那么你必须要 引用 它。
 SELECT * FROM `table` WHERE `table`.id = 20; 如果ANSI_QUOTES sql mode 被设置了，那么我们认为被双引号 &amp;quot; 包裹的字符串为 identifier。
 CREATE TABLE &amp;#34;test&amp;#34; (a varchar(10)); ERROR 1105 (HY000): line 0 column 19 near &amp;#34; (a varchar(10))&amp;#34; (total length 35)  SET SESSION sql_mode=&amp;#39;ANSI_QUOTES&amp;#39;; Query OK, 0 rows affected (0.00 sec)  CREATE TABLE &amp;#34;test&amp;#34; (a varchar(10)); Query OK, 0 rows affected (0.</description>
    </item>
    
    <item>
      <title>Schema Object Names</title>
      <link>https://pingcap.com/docs/dev/reference/sql/language-structure/schema-object-names/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/language-structure/schema-object-names/</guid>
      <description>Learn about the schema object names (identifiers) in TiDB.</description>
    </item>
    
    <item>
      <title>Schema Object Names</title>
      <link>https://pingcap.com/docs/stable/reference/sql/language-structure/schema-object-names/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/language-structure/schema-object-names/</guid>
      <description>Learn about the schema object names (identifiers) in TiDB.</description>
    </item>
    
    <item>
      <title>Schema Object Names</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/language-structure/schema-object-names/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/language-structure/schema-object-names/</guid>
      <description>Learn about the schema object names (identifiers) in TiDB.</description>
    </item>
    
    <item>
      <title>Schema Object Names</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/language-structure/schema-object-names/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/language-structure/schema-object-names/</guid>
      <description>Learn about the schema object names (identifiers) in TiDB.</description>
    </item>
    
    <item>
      <title>Search Result</title>
      <link>https://pingcap.com/search/docs-cn/dev/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/search/docs-cn/dev/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Search Result</title>
      <link>https://pingcap.com/search/docs-cn/stable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/search/docs-cn/stable/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Search Result</title>
      <link>https://pingcap.com/search/docs-cn/v2.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/search/docs-cn/v2.1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Search Result</title>
      <link>https://pingcap.com/search/docs-cn/v3.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/search/docs-cn/v3.1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Search Result</title>
      <link>https://pingcap.com/search/docs/dev/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/search/docs/dev/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Search Result</title>
      <link>https://pingcap.com/search/docs/stable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/search/docs/stable/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Search Result</title>
      <link>https://pingcap.com/search/docs/v2.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/search/docs/v2.1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Search Result</title>
      <link>https://pingcap.com/search/docs/v3.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/search/docs/v3.1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Security Compatibility with MySQL</title>
      <link>https://pingcap.com/docs/dev/reference/security/compatibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/security/compatibility/</guid>
      <description>Learn TiDB&#39;s security compatibilities with MySQL.</description>
    </item>
    
    <item>
      <title>Security Compatibility with MySQL</title>
      <link>https://pingcap.com/docs/stable/reference/security/compatibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/security/compatibility/</guid>
      <description>Learn TiDB&#39;s security compatibilities with MySQL.</description>
    </item>
    
    <item>
      <title>Security Compatibility with MySQL</title>
      <link>https://pingcap.com/docs/v2.1/reference/security/compatibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/security/compatibility/</guid>
      <description>Learn TiDB&#39;s security compatibilities with MySQL.</description>
    </item>
    
    <item>
      <title>Security Compatibility with MySQL</title>
      <link>https://pingcap.com/docs/v3.1/reference/security/compatibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/security/compatibility/</guid>
      <description>Learn TiDB&#39;s security compatibilities with MySQL.</description>
    </item>
    
    <item>
      <title>SELECT</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/select/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/select/</guid>
      <description>TiDB 数据库中 SELECT 的使用概况。</description>
    </item>
    
    <item>
      <title>SELECT</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/select/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/select/</guid>
      <description>TiDB 数据库中 SELECT 的使用概况。</description>
    </item>
    
    <item>
      <title>SELECT</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/select/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/select/</guid>
      <description>TiDB 数据库中 SELECT 的使用概况。</description>
    </item>
    
    <item>
      <title>SELECT</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/select/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/select/</guid>
      <description>TiDB 数据库中 SELECT 的使用概况。</description>
    </item>
    
    <item>
      <title>SELECT | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/select/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/select/</guid>
      <description>An overview of the usage of SELECT for the TiDB database.</description>
    </item>
    
    <item>
      <title>SELECT | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/select/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/select/</guid>
      <description>An overview of the usage of SELECT for the TiDB database.</description>
    </item>
    
    <item>
      <title>SELECT | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/select/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/select/</guid>
      <description>An overview of the usage of SELECT for the TiDB database.</description>
    </item>
    
    <item>
      <title>SELECT | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/select/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/select/</guid>
      <description>An overview of the usage of SELECT for the TiDB database.</description>
    </item>
    
    <item>
      <title>SET [GLOBAL|SESSION] &lt;variable&gt;</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/set-variable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/set-variable/</guid>
      <description>TiDB 数据库中 SET [GLOBAL|SESSION] &lt;variable&gt; 的使用概况。</description>
    </item>
    
    <item>
      <title>SET [GLOBAL|SESSION] &lt;variable&gt;</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/set-variable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/set-variable/</guid>
      <description>TiDB 数据库中 SET [GLOBAL|SESSION] &lt;variable&gt; 的使用概况。</description>
    </item>
    
    <item>
      <title>SET [GLOBAL|SESSION] &lt;variable&gt;</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/set-variable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/set-variable/</guid>
      <description>TiDB 数据库中 SET [GLOBAL|SESSION] &lt;variable&gt; 的使用概况。</description>
    </item>
    
    <item>
      <title>SET [GLOBAL|SESSION] &lt;variable&gt;</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/set-variable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/set-variable/</guid>
      <description>TiDB 数据库中 SET [GLOBAL|SESSION] &lt;variable&gt; 的使用概况。</description>
    </item>
    
    <item>
      <title>SET [GLOBAL|SESSION] &lt;variable&gt; | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/set-variable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/set-variable/</guid>
      <description>An overview of the usage of SET [GLOBAL|SESSION] &lt;variable&gt; for the TiDB database.</description>
    </item>
    
    <item>
      <title>SET [GLOBAL|SESSION] &lt;variable&gt; | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/set-variable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/set-variable/</guid>
      <description>An overview of the usage of SET [GLOBAL|SESSION] &lt;variable&gt; for the TiDB database.</description>
    </item>
    
    <item>
      <title>SET [GLOBAL|SESSION] &lt;variable&gt; | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/set-variable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/set-variable/</guid>
      <description>An overview of the usage of SET [GLOBAL|SESSION] &lt;variable&gt; for the TiDB database.</description>
    </item>
    
    <item>
      <title>SET [GLOBAL|SESSION] &lt;variable&gt; | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/set-variable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/set-variable/</guid>
      <description>An overview of the usage of SET [GLOBAL|SESSION] &lt;variable&gt; for the TiDB database.</description>
    </item>
    
    <item>
      <title>SET [NAMES|CHARACTER SET]</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/set-names/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/set-names/</guid>
      <description>TiDB 数据库中 SET [NAMES|CHARACTER SET] 的使用概况。</description>
    </item>
    
    <item>
      <title>SET [NAMES|CHARACTER SET]</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/set-names/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/set-names/</guid>
      <description>TiDB 数据库中 SET [NAMES|CHARACTER SET] 的使用概况。</description>
    </item>
    
    <item>
      <title>SET [NAMES|CHARACTER SET]</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/set-names/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/set-names/</guid>
      <description>TiDB 数据库中 SET [NAMES|CHARACTER SET] 的使用概况。</description>
    </item>
    
    <item>
      <title>SET [NAMES|CHARACTER SET]</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/set-names/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/set-names/</guid>
      <description>TiDB 数据库中 SET [NAMES|CHARACTER SET] 的使用概况。</description>
    </item>
    
    <item>
      <title>SET [NAMES|CHARACTER SET] |  TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/set-names/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/set-names/</guid>
      <description>An overview of the usage of SET [NAMES|CHARACTER SET] for the TiDB database.</description>
    </item>
    
    <item>
      <title>SET [NAMES|CHARACTER SET] |  TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/set-names/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/set-names/</guid>
      <description>An overview of the usage of SET [NAMES|CHARACTER SET] for the TiDB database.</description>
    </item>
    
    <item>
      <title>SET [NAMES|CHARACTER SET] |  TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/set-names/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/set-names/</guid>
      <description>An overview of the usage of SET [NAMES|CHARACTER SET] for the TiDB database.</description>
    </item>
    
    <item>
      <title>SET [NAMES|CHARACTER SET] |  TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/set-names/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/set-names/</guid>
      <description>An overview of the usage of SET [NAMES|CHARACTER SET] for the TiDB database.</description>
    </item>
    
    <item>
      <title>SET PASSWORD</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/set-password/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/set-password/</guid>
      <description>TiDB 数据库中 SET PASSWORD 的使用概况。</description>
    </item>
    
    <item>
      <title>SET PASSWORD</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/set-password/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/set-password/</guid>
      <description>TiDB 数据库中 SET PASSWORD 的使用概况。</description>
    </item>
    
    <item>
      <title>SET PASSWORD</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/set-password/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/set-password/</guid>
      <description>TiDB 数据库中 SET PASSWORD 的使用概况。</description>
    </item>
    
    <item>
      <title>SET PASSWORD</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/set-password/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/set-password/</guid>
      <description>TiDB 数据库中 SET PASSWORD 的使用概况。</description>
    </item>
    
    <item>
      <title>SET PASSWORD | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/set-password/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/set-password/</guid>
      <description>An overview of the usage of SET PASSWORD for the TiDB database.</description>
    </item>
    
    <item>
      <title>SET PASSWORD | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/set-password/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/set-password/</guid>
      <description>An overview of the usage of SET PASSWORD for the TiDB database.</description>
    </item>
    
    <item>
      <title>SET PASSWORD | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/set-password/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/set-password/</guid>
      <description>An overview of the usage of SET PASSWORD for the TiDB database.</description>
    </item>
    
    <item>
      <title>SET PASSWORD | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/set-password/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/set-password/</guid>
      <description>An overview of the usage of SET PASSWORD for the TiDB database.</description>
    </item>
    
    <item>
      <title>SET TRANSACTION</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/set-transaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/set-transaction/</guid>
      <description>TiDB 数据库中 SET TRANSACTION 的使用概况。</description>
    </item>
    
    <item>
      <title>SET TRANSACTION</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/set-transaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/set-transaction/</guid>
      <description>TiDB 数据库中 SET TRANSACTION 的使用概况。</description>
    </item>
    
    <item>
      <title>SET TRANSACTION</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/set-transaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/set-transaction/</guid>
      <description>TiDB 数据库中 SET TRANSACTION 的使用概况。</description>
    </item>
    
    <item>
      <title>SET TRANSACTION</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/set-transaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/set-transaction/</guid>
      <description>TiDB 数据库中 SET TRANSACTION 的使用概况。</description>
    </item>
    
    <item>
      <title>SET TRANSACTION | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/set-transaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/set-transaction/</guid>
      <description>An overview of the usage of SET TRANSACTION for the TiDB database.</description>
    </item>
    
    <item>
      <title>SET TRANSACTION | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/set-transaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/set-transaction/</guid>
      <description>An overview of the usage of SET TRANSACTION for the TiDB database.</description>
    </item>
    
    <item>
      <title>SET TRANSACTION | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/set-transaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/set-transaction/</guid>
      <description>An overview of the usage of SET TRANSACTION for the TiDB database.</description>
    </item>
    
    <item>
      <title>SET TRANSACTION | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/set-transaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/set-transaction/</guid>
      <description>An overview of the usage of SET TRANSACTION for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [FULL] COLUMNS FROM</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-columns-from/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-columns-from/</guid>
      <description>TiDB 数据库中 SHOW [FULL] COLUMNS FROM 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [FULL] COLUMNS FROM</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-columns-from/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-columns-from/</guid>
      <description>TiDB 数据库中 SHOW [FULL] COLUMNS FROM 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [FULL] COLUMNS FROM</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-columns-from/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-columns-from/</guid>
      <description>TiDB 数据库中 SHOW [FULL] COLUMNS FROM 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [FULL] COLUMNS FROM</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-columns-from/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-columns-from/</guid>
      <description>TiDB 数据库中 SHOW [FULL] COLUMNS FROM 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [FULL] COLUMNS FROM | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-columns-from/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-columns-from/</guid>
      <description>An overview of the usage of SHOW [FULL] COLUMNS FROM for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [FULL] COLUMNS FROM | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-columns-from/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-columns-from/</guid>
      <description>An overview of the usage of SHOW [FULL] COLUMNS FROM for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [FULL] COLUMNS FROM | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-columns-from/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-columns-from/</guid>
      <description>An overview of the usage of SHOW [FULL] COLUMNS FROM for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [FULL] COLUMNS FROM | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-columns-from/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-columns-from/</guid>
      <description>An overview of the usage of SHOW [FULL] COLUMNS FROM for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [FULL] FIELDS FROM</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-fields-from/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-fields-from/</guid>
      <description>TiDB 数据库中 SHOW [FULL] FIELDS FROM 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [FULL] FIELDS FROM</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-fields-from/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-fields-from/</guid>
      <description>TiDB 数据库中 SHOW [FULL] FIELDS FROM 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [FULL] FIELDS FROM</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-fields-from/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-fields-from/</guid>
      <description>TiDB 数据库中 SHOW [FULL] FIELDS FROM 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [FULL] FIELDS FROM</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-fields-from/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-fields-from/</guid>
      <description>TiDB 数据库中 SHOW [FULL] FIELDS FROM 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [FULL] FIELDS FROM | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-fields-from/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-fields-from/</guid>
      <description>An overview of the usage of SHOW [FULL] FIELDS FROM for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [FULL] FIELDS FROM | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-fields-from/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-fields-from/</guid>
      <description>An overview of the usage of SHOW [FULL] FIELDS FROM for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [FULL] FIELDS FROM | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-fields-from/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-fields-from/</guid>
      <description>An overview of the usage of SHOW [FULL] FIELDS FROM for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [FULL] FIELDS FROM | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-fields-from/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-fields-from/</guid>
      <description>An overview of the usage of SHOW [FULL] FIELDS FROM for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [FULL] PROCESSLIST</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-processlist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-processlist/</guid>
      <description>TiDB 数据库中 SHOW [FULL] PROCESSLIST 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [FULL] PROCESSLIST</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-processlist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-processlist/</guid>
      <description>TiDB 数据库中 SHOW [FULL] PROCESSLIST 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [FULL] PROCESSLIST</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-processlist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-processlist/</guid>
      <description>TiDB 数据库中 SHOW [FULL] PROCESSLIST 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [FULL] PROCESSLIST</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-processlist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-processlist/</guid>
      <description>TiDB 数据库中 SHOW [FULL] PROCESSLIST 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [FULL] PROCESSLIST | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-processlist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-processlist/</guid>
      <description>An overview of the usage of SHOW [FULL] PROCESSLIST for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [FULL] PROCESSLIST | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-processlist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-processlist/</guid>
      <description>An overview of the usage of SHOW [FULL] PROCESSLIST for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [FULL] PROCESSLIST | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-processlist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-processlist/</guid>
      <description>An overview of the usage of SHOW [FULL] PROCESSLIST for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [FULL] PROCESSLIST | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-processlist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-processlist/</guid>
      <description>An overview of the usage of SHOW [FULL] PROCESSLIST for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [FULL] TABLES</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-tables/</guid>
      <description>TiDB 数据库中 SHOW [FULL] TABLES 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [FULL] TABLES</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-tables/</guid>
      <description>TiDB 数据库中 SHOW [FULL] TABLES 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [FULL] TABLES</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-tables/</guid>
      <description>TiDB 数据库中 SHOW [FULL] TABLES 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [FULL] TABLES</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-tables/</guid>
      <description>TiDB 数据库中 SHOW [FULL] TABLES 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [FULL] TABLES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-tables/</guid>
      <description>An overview of the usage of SHOW [FULL] TABLES for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [FULL] TABLES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-tables/</guid>
      <description>An overview of the usage of SHOW [FULL] TABLES for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [FULL] TABLES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-tables/</guid>
      <description>An overview of the usage of SHOW [FULL] TABLES for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [FULL] TABLES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-tables/</guid>
      <description>An overview of the usage of SHOW [FULL] TABLES for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [GLOBAL|SESSION] STATUS</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-status/</guid>
      <description>TiDB 数据库中 SHOW [GLOBAL|SESSION] STATUS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [GLOBAL|SESSION] STATUS</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-status/</guid>
      <description>TiDB 数据库中 SHOW [GLOBAL|SESSION] STATUS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [GLOBAL|SESSION] STATUS</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-status/</guid>
      <description>TiDB 数据库中 SHOW [GLOBAL|SESSION] STATUS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [GLOBAL|SESSION] STATUS</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-status/</guid>
      <description>TiDB 数据库中 SHOW [GLOBAL|SESSION] STATUS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [GLOBAL|SESSION] STATUS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-status/</guid>
      <description>An overview of the usage of SHOW [GLOBAL|SESSION] STATUS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [GLOBAL|SESSION] STATUS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-status/</guid>
      <description>An overview of the usage of SHOW [GLOBAL|SESSION] STATUS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [GLOBAL|SESSION] STATUS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-status/</guid>
      <description>An overview of the usage of SHOW [GLOBAL|SESSION] STATUS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [GLOBAL|SESSION] STATUS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-status/</guid>
      <description>An overview of the usage of SHOW [GLOBAL|SESSION] STATUS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [GLOBAL|SESSION] VARIABLES</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-variables/</guid>
      <description>TiDB 数据库中 SHOW [GLOBAL|SESSION] VARIABLES 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [GLOBAL|SESSION] VARIABLES</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-variables/</guid>
      <description>TiDB 数据库中 SHOW [GLOBAL|SESSION] VARIABLES 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [GLOBAL|SESSION] VARIABLES</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-variables/</guid>
      <description>TiDB 数据库中 SHOW [GLOBAL|SESSION] VARIABLES 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [GLOBAL|SESSION] VARIABLES</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-variables/</guid>
      <description>TiDB 数据库中 SHOW [GLOBAL|SESSION] VARIABLES 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW [GLOBAL|SESSION] VARIABLES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-variables/</guid>
      <description>An overview of the usage of SHOW [GLOBAL|SESSION] VARIABLES for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [GLOBAL|SESSION] VARIABLES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-variables/</guid>
      <description>An overview of the usage of SHOW [GLOBAL|SESSION] VARIABLES for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [GLOBAL|SESSION] VARIABLES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-variables/</guid>
      <description>An overview of the usage of SHOW [GLOBAL|SESSION] VARIABLES for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW [GLOBAL|SESSION] VARIABLES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-variables/</guid>
      <description>An overview of the usage of SHOW [GLOBAL|SESSION] VARIABLES for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW CHARACTER SET</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-character-set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-character-set/</guid>
      <description>TiDB 数据库中 SHOW CHARACTER SET 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW CHARACTER SET</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-character-set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-character-set/</guid>
      <description>TiDB 数据库中 SHOW CHARACTER SET 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW CHARACTER SET</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-character-set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-character-set/</guid>
      <description>TiDB 数据库中 SHOW CHARACTER SET 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW CHARACTER SET</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-character-set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-character-set/</guid>
      <description>TiDB 数据库中 SHOW CHARACTER SET 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW CHARACTER SET | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-character-set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-character-set/</guid>
      <description>An overview of the usage of SHOW CHARACTER SET for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW CHARACTER SET | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-character-set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-character-set/</guid>
      <description>An overview of the usage of SHOW CHARACTER SET for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW CHARACTER SET | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-character-set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-character-set/</guid>
      <description>An overview of the usage of SHOW CHARACTER SET for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW CHARACTER SET | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-character-set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-character-set/</guid>
      <description>An overview of the usage of SHOW CHARACTER SET for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW COLLATION</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-collation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-collation/</guid>
      <description>TiDB 数据库中 SHOW COLLATION 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW COLLATION</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-collation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-collation/</guid>
      <description>TiDB 数据库中 SHOW COLLATION 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW COLLATION</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-collation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-collation/</guid>
      <description>TiDB 数据库中 SHOW COLLATION 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW COLLATION</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-collation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-collation/</guid>
      <description>TiDB 数据库中 SHOW COLLATION 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW COLLATION | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-collation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-collation/</guid>
      <description>An overview of the usage of SHOW COLLATION for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW COLLATION | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-collation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-collation/</guid>
      <description>An overview of the usage of SHOW COLLATION for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW COLLATION | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-collation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-collation/</guid>
      <description>An overview of the usage of SHOW COLLATION for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW COLLATION | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-collation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-collation/</guid>
      <description>An overview of the usage of SHOW COLLATION for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW CREATE SEQUENCE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-create-sequence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-create-sequence/</guid>
      <description>TiDB 数据库中 SHOW CREATE SEQUENCE 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW CREATE TABLE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-create-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-create-table/</guid>
      <description>TiDB 数据库中 SHOW CREATE TABLE 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW CREATE TABLE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-create-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-create-table/</guid>
      <description>TiDB 数据库中 SHOW CREATE TABLE 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW CREATE TABLE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-create-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-create-table/</guid>
      <description>TiDB 数据库中 SHOW CREATE TABLE 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW CREATE TABLE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-create-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-create-table/</guid>
      <description>TiDB 数据库中 SHOW CREATE TABLE 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW CREATE TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-create-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-create-table/</guid>
      <description>An overview of the usage of SHOW CREATE TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW CREATE TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-create-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-create-table/</guid>
      <description>An overview of the usage of SHOW CREATE TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW CREATE TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-create-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-create-table/</guid>
      <description>An overview of the usage of SHOW CREATE TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW CREATE TABLE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-create-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-create-table/</guid>
      <description>An overview of the usage of SHOW CREATE TABLE for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW CREATE USER</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-create-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-create-user/</guid>
      <description>TiDB 数据库中 SHOW CREATE USER 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW CREATE USER</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-create-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-create-user/</guid>
      <description>TiDB 数据库中 SHOW CREATE USER 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW CREATE USER</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-create-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-create-user/</guid>
      <description>TiDB 数据库中 SHOW CREATE USER 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW CREATE USER | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-create-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-create-user/</guid>
      <description>An overview of the usage of SHOW CREATE USER for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW CREATE USER | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-create-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-create-user/</guid>
      <description>An overview of the usage of SHOW CREATE USER for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW CREATE USER | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-create-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-create-user/</guid>
      <description>An overview of the usage of SHOW CREATE USER for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW DATABASES</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-databases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-databases/</guid>
      <description>TiDB 数据库中 SHOW DATABASES 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW DATABASES</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-databases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-databases/</guid>
      <description>TiDB 数据库中 SHOW DATABASES 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW DATABASES</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-databases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-databases/</guid>
      <description>TiDB 数据库中 SHOW DATABASES 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW DATABASES</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-databases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-databases/</guid>
      <description>TiDB 数据库中 SHOW DATABASES 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW DATABASES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-databases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-databases/</guid>
      <description>An overview of the usage of SHOW DATABASES for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW DATABASES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-databases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-databases/</guid>
      <description>An overview of the usage of SHOW DATABASES for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW DATABASES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-databases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-databases/</guid>
      <description>An overview of the usage of SHOW DATABASES for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW DATABASES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-databases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-databases/</guid>
      <description>An overview of the usage of SHOW DATABASES for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW ENGINES</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-engines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-engines/</guid>
      <description>TiDB 数据库中 SHOW ENGINES 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW ENGINES</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-engines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-engines/</guid>
      <description>TiDB 数据库中 SHOW ENGINES 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW ENGINES</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-engines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-engines/</guid>
      <description>TiDB 数据库中 SHOW ENGINES 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW ENGINES</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-engines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-engines/</guid>
      <description>TiDB 数据库中 SHOW ENGINES 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW ENGINES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-engines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-engines/</guid>
      <description>An overview of the usage of SHOW ENGINES for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW ENGINES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-engines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-engines/</guid>
      <description>An overview of the usage of SHOW ENGINES for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW ENGINES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-engines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-engines/</guid>
      <description>An overview of the usage of SHOW ENGINES for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW ENGINES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-engines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-engines/</guid>
      <description>An overview of the usage of SHOW ENGINES for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW ERRORS</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-errors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-errors/</guid>
      <description>TiDB 数据库中 SHOW ERRORS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW ERRORS</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-errors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-errors/</guid>
      <description>TiDB 数据库中 SHOW ERRORS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW ERRORS</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-errors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-errors/</guid>
      <description>TiDB 数据库中 SHOW ERRORS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW ERRORS</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-errors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-errors/</guid>
      <description>TiDB 数据库中 SHOW ERRORS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW ERRORS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-errors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-errors/</guid>
      <description>An overview of the usage of SHOW ERRORS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW ERRORS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-errors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-errors/</guid>
      <description>An overview of the usage of SHOW ERRORS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW ERRORS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-errors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-errors/</guid>
      <description>An overview of the usage of SHOW ERRORS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW ERRORS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-errors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-errors/</guid>
      <description>An overview of the usage of SHOW ERRORS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW GRANTS</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-grants/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-grants/</guid>
      <description>TiDB 数据库中 SHOW GRANTS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW GRANTS</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-grants/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-grants/</guid>
      <description>TiDB 数据库中 SHOW GRANTS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW GRANTS</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-grants/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-grants/</guid>
      <description>TiDB 数据库中 SHOW GRANTS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW GRANTS</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-grants/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-grants/</guid>
      <description>TiDB 数据库中 SHOW GRANTS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW GRANTS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-grants/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-grants/</guid>
      <description>An overview of the usage of SHOW GRANTS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW GRANTS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-grants/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-grants/</guid>
      <description>An overview of the usage of SHOW GRANTS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW GRANTS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-grants/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-grants/</guid>
      <description>An overview of the usage of SHOW GRANTS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW GRANTS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-grants/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-grants/</guid>
      <description>An overview of the usage of SHOW GRANTS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW INDEX [FROM|IN]</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-index/</guid>
      <description>TiDB 数据库中 SHOW INDEX [FROM|IN] 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW INDEX [FROM|IN]</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-index/</guid>
      <description>TiDB 数据库中 SHOW INDEX [FROM|IN] 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW INDEX [FROM|IN]</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-index/</guid>
      <description>TiDB 数据库中 SHOW INDEX [FROM|IN] 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW INDEX [FROM|IN]</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-index/</guid>
      <description>TiDB 数据库中 SHOW INDEX [FROM|IN] 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW INDEX [FROM|IN] | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-index/</guid>
      <description>An overview of the usage of SHOW INDEX [FROM|IN] for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW INDEX [FROM|IN] | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-index/</guid>
      <description>An overview of the usage of SHOW INDEX [FROM|IN] for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW INDEX [FROM|IN] | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-index/</guid>
      <description>An overview of the usage of SHOW INDEX [FROM|IN] for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW INDEX [FROM|IN] | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-index/</guid>
      <description>An overview of the usage of SHOW INDEX [FROM|IN] for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW INDEXES [FROM|IN]</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-indexes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-indexes/</guid>
      <description>TiDB 数据库中 SHOW INDEXES [FROM|IN] 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW INDEXES [FROM|IN]</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-indexes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-indexes/</guid>
      <description>TiDB 数据库中 SHOW INDEXES [FROM|IN] 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW INDEXES [FROM|IN]</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-indexes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-indexes/</guid>
      <description>TiDB 数据库中 SHOW INDEXES [FROM|IN] 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW INDEXES [FROM|IN]</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-indexes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-indexes/</guid>
      <description>TiDB 数据库中 SHOW INDEXES [FROM|IN] 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW INDEXES [FROM|IN] | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-indexes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-indexes/</guid>
      <description>An overview of the usage of SHOW INDEXES [FROM|IN] for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW INDEXES [FROM|IN] | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-indexes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-indexes/</guid>
      <description>An overview of the usage of SHOW INDEXES [FROM|IN] for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW INDEXES [FROM|IN] | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-indexes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-indexes/</guid>
      <description>An overview of the usage of SHOW INDEXES [FROM|IN] for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW INDEXES [FROM|IN] | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-indexes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-indexes/</guid>
      <description>An overview of the usage of SHOW INDEXES [FROM|IN] for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW KEYS [FROM|IN]</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-keys/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-keys/</guid>
      <description>TiDB 数据库中 SHOW KEYS [FROM|IN] 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW KEYS [FROM|IN]</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-keys/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-keys/</guid>
      <description>TiDB 数据库中 SHOW KEYS [FROM|IN] 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW KEYS [FROM|IN]</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-keys/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-keys/</guid>
      <description>TiDB 数据库中 SHOW KEYS [FROM|IN] 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW KEYS [FROM|IN]</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-keys/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-keys/</guid>
      <description>TiDB 数据库中 SHOW KEYS [FROM|IN] 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW KEYS [FROM|IN] | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-keys/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-keys/</guid>
      <description>An overview of the usage of SHOW KEYS [FROM|IN] for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW KEYS [FROM|IN] | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-keys/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-keys/</guid>
      <description>An overview of the usage of SHOW KEYS [FROM|IN] for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW KEYS [FROM|IN] | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-keys/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-keys/</guid>
      <description>An overview of the usage of SHOW KEYS [FROM|IN] for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW KEYS [FROM|IN] | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-keys/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-keys/</guid>
      <description>An overview of the usage of SHOW KEYS [FROM|IN] for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW PRIVILEGES</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-privileges/</guid>
      <description>TiDB 数据库中 SHOW PRIVILEGES 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW PRIVILEGES</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-privileges/</guid>
      <description>TiDB 数据库中 SHOW PRIVILEGES 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW PRIVILEGES</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-privileges/</guid>
      <description>TiDB 数据库中 SHOW PRIVILEGES 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW PRIVILEGES</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-privileges/</guid>
      <description>TiDB 数据库中 SHOW PRIVILEGES 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW PRIVILEGES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-privileges/</guid>
      <description>An overview of the usage of SHOW PRIVILEGES for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW PRIVILEGES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-privileges/</guid>
      <description>An overview of the usage of SHOW PRIVILEGES for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW PRIVILEGES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-privileges/</guid>
      <description>An overview of the usage of SHOW PRIVILEGES for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW PRIVILEGES | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-privileges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-privileges/</guid>
      <description>An overview of the usage of SHOW PRIVILEGES for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW SCHEMAS</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-schemas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-schemas/</guid>
      <description>TiDB 数据库中 SHOW SCHEMAS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW SCHEMAS</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-schemas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-schemas/</guid>
      <description>TiDB 数据库中 SHOW SCHEMAS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW SCHEMAS</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-schemas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-schemas/</guid>
      <description>TiDB 数据库中 SHOW SCHEMAS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW SCHEMAS</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-schemas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-schemas/</guid>
      <description>TiDB 数据库中 SHOW SCHEMAS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW SCHEMAS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-schemas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-schemas/</guid>
      <description>An overview of the usage of SHOW SCHEMAS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW SCHEMAS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-schemas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-schemas/</guid>
      <description>An overview of the usage of SHOW SCHEMAS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW SCHEMAS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-schemas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-schemas/</guid>
      <description>An overview of the usage of SHOW SCHEMAS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW SCHEMAS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-schemas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-schemas/</guid>
      <description>An overview of the usage of SHOW SCHEMAS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW TABLE REGIONS</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-table-regions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-table-regions/</guid>
      <description>了解如何使用 TiDB 数据库中的 SHOW TABLE REGIONS。</description>
    </item>
    
    <item>
      <title>SHOW TABLE REGIONS</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-table-regions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-table-regions/</guid>
      <description>了解如何使用 TiDB 数据库中的 SHOW TABLE REGIONS。</description>
    </item>
    
    <item>
      <title>SHOW TABLE REGIONS</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-table-regions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-table-regions/</guid>
      <description>了解如何使用 TiDB 数据库中的 SHOW TABLE REGIONS。</description>
    </item>
    
    <item>
      <title>SHOW TABLE REGIONS</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-table-regions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-table-regions/</guid>
      <description>了解如何使用 TiDB 数据库中的 SHOW TABLE REGIONS。</description>
    </item>
    
    <item>
      <title>SHOW TABLE REGIONS</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-table-regions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-table-regions/</guid>
      <description>Learn how to use SHOW TABLE REGIONS in TiDB.</description>
    </item>
    
    <item>
      <title>SHOW TABLE REGIONS</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-table-regions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-table-regions/</guid>
      <description>Learn how to use SHOW TABLE REGIONS in TiDB.</description>
    </item>
    
    <item>
      <title>SHOW TABLE REGIONS</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-table-regions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-table-regions/</guid>
      <description>Learn how to use SHOW TABLE REGIONS in TiDB.</description>
    </item>
    
    <item>
      <title>SHOW TABLE REGIONS</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-table-regions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-table-regions/</guid>
      <description>Learn how to use SHOW TABLE REGIONS in TiDB.</description>
    </item>
    
    <item>
      <title>SHOW TABLE STATUS</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-table-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-table-status/</guid>
      <description>TiDB 数据库中 SHOW TABLE STATUS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW TABLE STATUS</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-table-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-table-status/</guid>
      <description>TiDB 数据库中 SHOW TABLE STATUS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW TABLE STATUS</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-table-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-table-status/</guid>
      <description>TiDB 数据库中 SHOW TABLE STATUS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW TABLE STATUS</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-table-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-table-status/</guid>
      <description>TiDB 数据库中 SHOW TABLE STATUS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW TABLE STATUS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-table-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-table-status/</guid>
      <description>An overview of the usage of SHOW TABLE STATUS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW TABLE STATUS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-table-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-table-status/</guid>
      <description>An overview of the usage of SHOW TABLE STATUS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW TABLE STATUS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-table-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-table-status/</guid>
      <description>An overview of the usage of SHOW TABLE STATUS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW TABLE STATUS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-table-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-table-status/</guid>
      <description>An overview of the usage of SHOW TABLE STATUS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW WARNINGS</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-warnings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/show-warnings/</guid>
      <description>TiDB 数据库中 SHOW WARNINGS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW WARNINGS</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-warnings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/show-warnings/</guid>
      <description>TiDB 数据库中 SHOW WARNINGS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW WARNINGS</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-warnings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/show-warnings/</guid>
      <description>TiDB 数据库中 SHOW WARNINGS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW WARNINGS</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-warnings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/show-warnings/</guid>
      <description>TiDB 数据库中 SHOW WARNINGS 的使用概况。</description>
    </item>
    
    <item>
      <title>SHOW WARNINGS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/show-warnings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/show-warnings/</guid>
      <description>An overview of the usage of SHOW WARNINGS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW WARNINGS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/show-warnings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/show-warnings/</guid>
      <description>An overview of the usage of SHOW WARNINGS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW WARNINGS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/show-warnings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/show-warnings/</guid>
      <description>An overview of the usage of SHOW WARNINGS for the TiDB database.</description>
    </item>
    
    <item>
      <title>SHOW WARNINGS | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/show-warnings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/show-warnings/</guid>
      <description>An overview of the usage of SHOW WARNINGS for the TiDB database.</description>
    </item>
    
    <item>
      <title>Sink URI 配置规则</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/ticdc/sink/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/ticdc/sink/</guid>
      <description>Sink URI sink URI 需要按照以下格式进行配置，目前 scheme 支持 mysql/tidb/kafka。
 [scheme]://[userinfo@][host]:[port][/path]?[query_parameters] Sink URI 配置 mysql/tidb 配置样例如下所示：
 --sink-uri=&amp;#34;mysql://root:123456@127.0.0.1:3306/?worker-count=16&amp;amp;max-txn-row=5000&amp;#34; 以上配置命令中的参数解析如下：
   参数 解析     root 下游数据库的用户名   123456 下游数据库密码   127.0.0.1 下游数据库的 IP   3306 下游数据的连接端口   worker-count 向下游执行 SQL 的并发度（可选，默认值为 16）   max-txn-row 向下游执行 SQL 的 batch 大小（可选，默认值为 256）    Sink URI 配置 kakfa 配置样例如下所示：
 --sink-uri=&amp;#34;kafka://127.0.0.1:9092/cdc-test?kafka-version=2.4.0&amp;amp;partition-num=6&amp;amp;max-message-bytes=67108864&amp;amp;replication-factor=1&amp;#34; 以上配置命令中的参数解析如下：
   参数 解析     127.</description>
    </item>
    
    <item>
      <title>Skip or Replace Abnormal SQL Statements</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/skip-replace-sqls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/skip-replace-sqls/</guid>
      <description>Learn how to skip or replace abnormal SQL statements when you use Data Migration.</description>
    </item>
    
    <item>
      <title>Skip or Replace Abnormal SQL Statements</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/skip-replace-sqls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/skip-replace-sqls/</guid>
      <description>Learn how to skip or replace abnormal SQL statements when you use Data Migration.</description>
    </item>
    
    <item>
      <title>Skip or Replace Abnormal SQL Statements</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/skip-replace-sqls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/skip-replace-sqls/</guid>
      <description>Learn how to skip or replace abnormal SQL statements when you use Data Migration.</description>
    </item>
    
    <item>
      <title>Skip or Replace Abnormal SQL Statements</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/skip-replace-sqls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/skip-replace-sqls/</guid>
      <description>Learn how to skip or replace abnormal SQL statements when you use Data Migration.</description>
    </item>
    
    <item>
      <title>Software and Hardware Recommendations</title>
      <link>https://pingcap.com/docs/dev/how-to/deploy/hardware-recommendations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/deploy/hardware-recommendations/</guid>
      <description>Learn the software and hardware recommendations for deploying and running TiDB.</description>
    </item>
    
    <item>
      <title>Software and Hardware Recommendations</title>
      <link>https://pingcap.com/docs/stable/how-to/deploy/hardware-recommendations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/deploy/hardware-recommendations/</guid>
      <description>Learn the software and hardware recommendations for deploying and running TiDB.</description>
    </item>
    
    <item>
      <title>Software and Hardware Recommendations</title>
      <link>https://pingcap.com/docs/v2.1/how-to/deploy/hardware-recommendations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/deploy/hardware-recommendations/</guid>
      <description>Learn the software and hardware recommendations for deploying and running TiDB.</description>
    </item>
    
    <item>
      <title>Software and Hardware Recommendations</title>
      <link>https://pingcap.com/docs/v3.1/how-to/deploy/hardware-recommendations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/deploy/hardware-recommendations/</guid>
      <description>Learn the software and hardware recommendations for deploying and running TiDB.</description>
    </item>
    
    <item>
      <title>Split Region</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/split-region/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/split-region/</guid>
      <description>An overview of the usage of Split Region for the TiDB database.</description>
    </item>
    
    <item>
      <title>Split Region</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/split-region/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/split-region/</guid>
      <description>An overview of the usage of Split Region for the TiDB database.</description>
    </item>
    
    <item>
      <title>Split Region</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/split-region/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/split-region/</guid>
      <description>An overview of the usage of Split Region for the TiDB database.</description>
    </item>
    
    <item>
      <title>Split Region</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/split-region/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/split-region/</guid>
      <description>An overview of the usage of Split Region for the TiDB database.</description>
    </item>
    
    <item>
      <title>Split Region 使用文档</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/split-region/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/split-region/</guid>
      <description>Split Region 使用文档 在 TiDB 中新建一个表后，默认会单独切分出 1 个 Region 来存储这个表的数据，这个默认行为由配置文件中的 split-table 控制。当这个 Region 中的数据超过默认 Region 大小限制后，这个 Region 会开始分裂成 2 个 Region。
上述情况中，如果在新建的表上发生大批量写入，则会造成热点，因为开始只有一个 Region，所有的写请求都发生在该 Region 所在的那台 TiKV 上。
为解决上述场景中的热点问题，TiDB 引入了预切分 Region 的功能，即可以根据指定的参数，预先为某个表切分出多个 Region，并打散到各个 TiKV 上去。
Split Region 的使用 Split Region 有 2 种不同的语法，具体如下：
SPLIT TABLE table_name [INDEX index_name] BETWEEN (lower_value) AND (upper_value) REGIONS region_num BETWEEN lower_value AND upper_value REGIONS region_num 语法是通过指定上、下边界和 Region 数量，然后在上、下边界之间均匀切分出 region_num 个 Region。
SPLIT TABLE table_name [INDEX index_name] BY (value_list) [, (value_list)] .</description>
    </item>
    
    <item>
      <title>Split Region 使用文档</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/split-region/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/split-region/</guid>
      <description>Split Region 使用文档 在 TiDB 中新建一个表后，默认会单独切分出 1 个 Region 来存储这个表的数据，这个默认行为由配置文件中的 split-table 控制。当这个 Region 中的数据超过默认 Region 大小限制后，这个 Region 会开始分裂成 2 个 Region。
上述情况中，如果在新建的表上发生大批量写入，则会造成热点，因为开始只有一个 Region，所有的写请求都发生在该 Region 所在的那台 TiKV 上。
为解决上述场景中的热点问题，TiDB 引入了预切分 Region 的功能，即可以根据指定的参数，预先为某个表切分出多个 Region，并打散到各个 TiKV 上去。
Split Region 的使用 Split Region 有 2 种不同的语法，具体如下：
SPLIT TABLE table_name [INDEX index_name] BETWEEN (lower_value) AND (upper_value) REGIONS region_num BETWEEN lower_value AND upper_value REGIONS region_num 语法是通过指定上、下边界和 Region 数量，然后在上、下边界之间均匀切分出 region_num 个 Region。
SPLIT TABLE table_name [INDEX index_name] BY (value_list) [, (value_list)] .</description>
    </item>
    
    <item>
      <title>Split Region 使用文档</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/split-region/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/split-region/</guid>
      <description>Split Region 使用文档 在 TiDB 中新建一个表后，默认会单独切分出 1 个 Region 来存储这个表的数据，这个默认行为由配置文件中的 split-table 控制。当这个 Region 中的数据超过默认 Region 大小限制后，这个 Region 会开始分裂成 2 个 Region。
上述情况中，如果在新建的表上发生大批量写入，则会造成热点，因为开始只有一个 Region，所有的写请求都发生在该 Region 所在的那台 TiKV 上。
为解决上述场景中的热点问题，TiDB 引入了预切分 Region 的功能，即可以根据指定的参数，预先为某个表切分出多个 Region，并打散到各个 TiKV 上去。
Split Region 的使用 Split Region 有 2 种不同的语法，具体如下：
 SPLIT TABLE table_name [INDEX index_name] BETWEEN (lower_value) AND (upper_value) REGIONS region_num BETWEEN lower_value AND upper_value REGIONS region_num 语法是通过指定上、下边界和 Region 数量，然后在上、下边界之间均匀切分出 region_num 个 Region。
 SPLIT TABLE table_name [INDEX index_name] BY (value_list) [, (value_list)] .</description>
    </item>
    
    <item>
      <title>Split Region 使用文档</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/split-region/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/split-region/</guid>
      <description>Split Region 使用文档 在 TiDB 中新建一个表后，默认会单独切分出 1 个 Region 来存储这个表的数据，这个默认行为由配置文件中的 split-table 控制。当这个 Region 中的数据超过默认 Region 大小限制后，这个 Region 会开始分裂成 2 个 Region。
上述情况中，如果在新建的表上发生大批量写入，则会造成热点，因为开始只有一个 Region，所有的写请求都发生在该 Region 所在的那台 TiKV 上。
为解决上述场景中的热点问题，TiDB 引入了预切分 Region 的功能，即可以根据指定的参数，预先为某个表切分出多个 Region，并打散到各个 TiKV 上去。
Split Region 的使用 Split Region 有 2 种不同的语法，具体如下：
SPLIT TABLE table_name [INDEX index_name] BETWEEN (lower_value) AND (upper_value) REGIONS region_num BETWEEN lower_value AND upper_value REGIONS region_num 语法是通过指定上、下边界和 Region 数量，然后在上、下边界之间均匀切分出 region_num 个 Region。
SPLIT TABLE table_name [INDEX index_name] BY (value_list) [, (value_list)] .</description>
    </item>
    
    <item>
      <title>SQL Mode</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/sql-mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/sql-mode/</guid>
      <description>SQL 模式 TiDB 服务器采用不同 SQL 模式来操作，且不同客户端可以应用不同模式。SQL 模式定义 TiDB 支持哪些 SQL 语法及执行哪种数据验证检查.
TiDB 启动之前采用修改 --sql-mode=&amp;quot;modes&amp;quot; 配项设置 SQL 模式。
TiDB 启动之后采用 SET [ SESSION | GLOBAL ] sql_mode=&#39;modes&#39;设置 SQL 模式。设置 GLOBAL 级别的 SQL 模式时用户需要有 SUPER 权限，并且只会影响到从设置 SQL 模式开始后续新建立的连接（注：老连接不受影响)。 SESSION 级别的 SQL 模式的变化只会影响当前的客户端。
Modes 是用逗号 (&#39;,&#39;) 间隔开的一系列不同的模式。使用 SELECT @@sql_mode 语句查询当前 SQL 模式，SQL 模式默认值：ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION。
重要的 sql_mode 值  ANSI: 符合标准 SQL ，对数据进行校验，如果不符合定义类型或长度，对数据类型调整或截断保存，且返回warning警告。 STRICT_TRANS_TABLES: 严格模式，对数据进严格校验，但数据出现错误时，插入到表中，并且返回错误。 TRADITIONAL: 采用此模式使 TiDB 的行为象 &amp;ldquo;传统&amp;rdquo; SQL 数据库系统，当在列中插入不正确的值时“给出错误而不是警告”，一旦发现错误立即放弃INSERT/UPDATE。  SQL mode 列表，如下    名称 含义     PIPES_AS_CONCAT 将 &amp;ldquo;||&amp;rdquo; 视为字符串连接操作符（＋）(同CONCAT())，而不视为OR（支持)   ANSI_QUOTES 将 &amp;quot; 视为识别符，如果启用 ANSI_QUOTES，只单引号内的会被认为是 String Literals，双引号被解释为识别符，因此不能用双引号来引用字符串（支持）   IGNORE_SPACE 若开启该模式，系统忽略空格。例如：“user” 和 “user “ 是相同的（支持）   ONLY_FULL_GROUP_BY 如果 GROUP BY 出现的列并没有在 SELECT，HAVING，ORDER BY 中出现，此 SQL 不合法，因为不在 GROUP BY 中的列被查询展示出来不符合正常现象 （支持)   NO_UNSIGNED_SUBTRACTION 在减运算中，如果某个操作数没有符号，不要将结果标记为UNSIGNED （支持）   NO_DIR_IN_CREATE 创建表时，忽视所有 INDEX DIRECTORY 和 DATA DIRECTORY 指令，该选项仅对从复制服务器有用 （仅语法支持）   NO_KEY_OPTIONS 使用 SHOW CREATE TABLE 时不会输出 MySQL 特有的语法部分，如 ENGINE ，使用 mysqldump 跨DB种类迁移的时需要考虑此选项（仅语法支持）   NO_FIELD_OPTIONS 使用 SHOW CREATE TABLE 时不会输出 MySQL 特有的语法部分，如 ENGINE ，使用 mysqldump 跨DB种类迁移的时需要考虑此选项（仅语法支持）   NO_TABLE_OPTIONS 使用 SHOW CREATE TABLE 时不会输出 MySQL 特有的语法部分，如 ENGINE ，使用 mysqldump 跨DB种类迁移的时需要考虑此选项（仅语法支持）   NO_AUTO_VALUE_ON_ZERO 若启用该模式，在AUTO_INCREMENT列的处理传入的值是 0 或者具体数值时系统直接将该值写入此列，传入 NULL 时系统自动生成下一个序列号（支持）   NO_BACKSLASH_ESCAPES 若启用该模式，\ 反斜杠符号仅代表它自己（支持）   STRICT_TRANS_TABLES 对于事务存储引擎启用严格模式，insert非法值之后，回滚整条语句（支持）   STRICT_ALL_TABLES 对于事务型表，写入非法值之后，回滚整个事务语句（支持）   NO_ZERO_IN_DATE 在严格模式，不接受月或日部分为0的日期。如果使用IGNORE选项，我们为类似的日期插入&#39;0000-00-00&amp;rsquo;。在非严格模式，可以接受该日期，但会生成警告 （支持）   NO_ZERO_DATE 在严格模式，不要将 &amp;lsquo;0000-00-00&#39;做为合法日期。你仍然可以用IGNORE选项插入零日期。在非严格模式，可以接受该日期，但会生成警告 （支持）   ALLOW_INVALID_DATES 不检查全部日期的合法性，仅检查月份值在 1 到 12 及 日期值在 1 到31 之间，仅适用于 DATE 和 DATATIME 列，TIMESTAMP 列需要全部检查其合法性 （支持）   ERROR_FOR_DIVISION_BY_ZERO 若启用该模式，在 INSERT 或 UPDATE 过程中，被除数为 0 值时，系统产生错误 若未启用该模式，被除数为 0 值时，系统产生警告，并用 NULL 代替 （支持）   NO_AUTO_CREATE_USER 防止GRANT自动创建新用户，但指定密码除外 （支持）   HIGH_NOT_PRECEDENCE NOT 操作符的优先级是表达式。例如： NOT a BETWEEN b AND c 被解释为 NOT (a BETWEEN b AND c)。在部份旧版本MySQL中， 表达式被解释为(NOT a) BETWEEN b AND c (支持)   NO_ENGINE_SUBSTITUTION 如果需要的存储引擎被禁用或未编译，可以防止自动替换存储引擎 （仅语法支持）   PAD_CHAR_TO_FULL_LENGTH 若启用该模式，系统对于 CHAR 类型不会截断尾部空格（支持）   REAL_AS_FLOAT 将REAL视为FLOAT的同义词，而不是DOUBLE的同义词 （支持）   POSTGRESQL 等同于 PIPES_AS_CONCAT、ANSI_QUOTES、IGNORE_SPACE、NO_KEY_OPTIONS、NO_TABLE_OPTIONS、NO_FIELD_OPTIONS （支持）   MSSQL 等同于 PIPES_AS_CONCAT、ANSI_QUOTES、IGNORE_SPACE、NO_KEY_OPTIONS、NO_TABLE_OPTIONS、 NO_FIELD_OPTIONS （支持）   DB2 等同于 PIPES_AS_CONCAT、ANSI_QUOTES、IGNORE_SPACE、NO_KEY_OPTIONS、NO_TABLE_OPTIONS、NO_FIELD_OPTIONS （支持）   MAXDB 等同于 PIPES_AS_CONCAT、ANSI_QUOTES、IGNORE_SPACE、NO_KEY_OPTIONS、NO_TABLE_OPTIONS、NO_FIELD_OPTIONS、NO_AUTO_CREATE_USER （支持）   MySQL323 等同于 NO_FIELD_OPTIONS、HIGH_NOT_PRECEDENCE (支持)   MYSQL40 等同于 NO_FIELD_OPTIONS、HIGH_NOT_PRECEDENCE （支持）   ANSI 等同于 REAL_AS_FLOAT、PIPES_AS_CONCAT、ANSI_QUOTES、IGNORE_SPACE （支持）   TRADITIONAL 等同于 STRICT_TRANS_TABLES、STRICT_ALL_TABLES、NO_ZERO_IN_DATE、NO_ZERO_DATE、ERROR_FOR_DIVISION_BY_ZERO、NO_AUTO_CREATE_USER(支持)   ORACLE 等同于 PIPES_AS_CONCAT、ANSI_QUOTES、IGNORE_SPACE、NO_KEY_OPTIONS、NO_TABLE_OPTIONS、NO_FIELD_OPTIONS、NO_AUTO_CREATE_USER （支持）    </description>
    </item>
    
    <item>
      <title>SQL Mode</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/sql-mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/sql-mode/</guid>
      <description>SQL 模式 TiDB 服务器采用不同 SQL 模式来操作，且不同客户端可以应用不同模式。SQL 模式定义 TiDB 支持哪些 SQL 语法及执行哪种数据验证检查.
TiDB 启动之前采用修改 --sql-mode=&amp;quot;modes&amp;quot; 配项设置 SQL 模式。
TiDB 启动之后采用 SET [ SESSION | GLOBAL ] sql_mode=&#39;modes&#39;设置 SQL 模式。设置 GLOBAL 级别的 SQL 模式时用户需要有 SUPER 权限，并且只会影响到从设置 SQL 模式开始后续新建立的连接（注：老连接不受影响)。 SESSION 级别的 SQL 模式的变化只会影响当前的客户端。
Modes 是用逗号 (&#39;,&#39;) 间隔开的一系列不同的模式。使用 SELECT @@sql_mode 语句查询当前 SQL 模式，SQL 模式默认值：ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION。
重要的 sql_mode 值  ANSI: 符合标准 SQL ，对数据进行校验，如果不符合定义类型或长度，对数据类型调整或截断保存，且返回warning警告。 STRICT_TRANS_TABLES: 严格模式，对数据进严格校验，但数据出现错误时，插入到表中，并且返回错误。 TRADITIONAL: 采用此模式使 TiDB 的行为象 &amp;ldquo;传统&amp;rdquo; SQL 数据库系统，当在列中插入不正确的值时“给出错误而不是警告”，一旦发现错误立即放弃INSERT/UPDATE。  SQL mode 列表    名称 含义     PIPES_AS_CONCAT 将 &amp;ldquo;||&amp;rdquo; 视为字符串连接操作符（＋）(同CONCAT())，而不视为OR（支持)   ANSI_QUOTES 将 &amp;quot; 视为识别符，如果启用 ANSI_QUOTES，只单引号内的会被认为是 String Literals，双引号被解释为识别符，因此不能用双引号来引用字符串（支持）   IGNORE_SPACE 若开启该模式，系统忽略空格。例如：“user” 和 “user “ 是相同的（支持）   ONLY_FULL_GROUP_BY 如果 GROUP BY 出现的列并没有在 SELECT，HAVING，ORDER BY 中出现，此 SQL 不合法，因为不在 GROUP BY 中的列被查询展示出来不符合正常现象 （支持)   NO_UNSIGNED_SUBTRACTION 在减运算中，如果某个操作数没有符号，不要将结果标记为UNSIGNED （支持）   NO_DIR_IN_CREATE 创建表时，忽视所有 INDEX DIRECTORY 和 DATA DIRECTORY 指令，该选项仅对从复制服务器有用 （仅语法支持）   NO_KEY_OPTIONS 使用 SHOW CREATE TABLE 时不会输出 MySQL 特有的语法部分，如 ENGINE ，使用 mysqldump 跨DB种类迁移的时需要考虑此选项（仅语法支持）   NO_FIELD_OPTIONS 使用 SHOW CREATE TABLE 时不会输出 MySQL 特有的语法部分，如 ENGINE ，使用 mysqldump 跨DB种类迁移的时需要考虑此选项（仅语法支持）   NO_TABLE_OPTIONS 使用 SHOW CREATE TABLE 时不会输出 MySQL 特有的语法部分，如 ENGINE ，使用 mysqldump 跨DB种类迁移的时需要考虑此选项（仅语法支持）   NO_AUTO_VALUE_ON_ZERO 若启用该模式，在AUTO_INCREMENT列的处理传入的值是 0 或者具体数值时系统直接将该值写入此列，传入 NULL 时系统自动生成下一个序列号（支持）   NO_BACKSLASH_ESCAPES 若启用该模式，\ 反斜杠符号仅代表它自己（支持）   STRICT_TRANS_TABLES 对于事务存储引擎启用严格模式，insert非法值之后，回滚整条语句（支持）   STRICT_ALL_TABLES 对于事务型表，写入非法值之后，回滚整个事务语句（支持）   NO_ZERO_IN_DATE 在严格模式，不接受月或日部分为0的日期。如果使用IGNORE选项，我们为类似的日期插入&#39;0000-00-00&amp;rsquo;。在非严格模式，可以接受该日期，但会生成警告 （支持）   NO_ZERO_DATE 在严格模式，不要将 &amp;lsquo;0000-00-00&#39;做为合法日期。你仍然可以用IGNORE选项插入零日期。在非严格模式，可以接受该日期，但会生成警告 （支持）   ALLOW_INVALID_DATES 不检查全部日期的合法性，仅检查月份值在 1 到 12 及 日期值在 1 到31 之间，仅适用于 DATE 和 DATATIME 列，TIMESTAMP 列需要全部检查其合法性 （支持）   ERROR_FOR_DIVISION_BY_ZERO 若启用该模式，在 INSERT 或 UPDATE 过程中，被除数为 0 值时，系统产生错误 若未启用该模式，被除数为 0 值时，系统产生警告，并用 NULL 代替 （支持）   NO_AUTO_CREATE_USER 防止GRANT自动创建新用户，但指定密码除外 （支持）   HIGH_NOT_PRECEDENCE NOT 操作符的优先级是表达式。例如： NOT a BETWEEN b AND c 被解释为 NOT (a BETWEEN b AND c)。在部份旧版本MySQL中， 表达式被解释为(NOT a) BETWEEN b AND c (支持)   NO_ENGINE_SUBSTITUTION 如果需要的存储引擎被禁用或未编译，可以防止自动替换存储引擎 （仅语法支持）   PAD_CHAR_TO_FULL_LENGTH 若启用该模式，系统对于 CHAR 类型不会截断尾部空格（支持）   REAL_AS_FLOAT 将REAL视为FLOAT的同义词，而不是DOUBLE的同义词 （支持）   POSTGRESQL 等同于 PIPES_AS_CONCAT、ANSI_QUOTES、IGNORE_SPACE、NO_KEY_OPTIONS、NO_TABLE_OPTIONS、NO_FIELD_OPTIONS （支持）   MSSQL 等同于 PIPES_AS_CONCAT、ANSI_QUOTES、IGNORE_SPACE、NO_KEY_OPTIONS、NO_TABLE_OPTIONS、 NO_FIELD_OPTIONS （支持）   DB2 等同于 PIPES_AS_CONCAT、ANSI_QUOTES、IGNORE_SPACE、NO_KEY_OPTIONS、NO_TABLE_OPTIONS、NO_FIELD_OPTIONS （支持）   MAXDB 等同于 PIPES_AS_CONCAT、ANSI_QUOTES、IGNORE_SPACE、NO_KEY_OPTIONS、NO_TABLE_OPTIONS、NO_FIELD_OPTIONS、NO_AUTO_CREATE_USER （支持）   MySQL323 等同于 NO_FIELD_OPTIONS、HIGH_NOT_PRECEDENCE (支持)   MYSQL40 等同于 NO_FIELD_OPTIONS、HIGH_NOT_PRECEDENCE （支持）   ANSI 等同于 REAL_AS_FLOAT、PIPES_AS_CONCAT、ANSI_QUOTES、IGNORE_SPACE （支持）   TRADITIONAL 等同于 STRICT_TRANS_TABLES、STRICT_ALL_TABLES、NO_ZERO_IN_DATE、NO_ZERO_DATE、ERROR_FOR_DIVISION_BY_ZERO、NO_AUTO_CREATE_USER(支持)   ORACLE 等同于 PIPES_AS_CONCAT、ANSI_QUOTES、IGNORE_SPACE、NO_KEY_OPTIONS、NO_TABLE_OPTIONS、NO_FIELD_OPTIONS、NO_AUTO_CREATE_USER （支持）    </description>
    </item>
    
    <item>
      <title>SQL Mode</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/sql-mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/sql-mode/</guid>
      <description>SQL 模式 TiDB 服务器采用不同 SQL 模式来操作，且不同客户端可以应用不同模式。SQL 模式定义 TiDB 支持哪些 SQL 语法及执行哪种数据验证检查.
TiDB 启动之前采用修改 --sql-mode=&amp;quot;modes&amp;quot; 配项设置 SQL 模式。
TiDB 启动之后采用 SET [ SESSION | GLOBAL ] sql_mode=&#39;modes&#39;设置 SQL 模式。设置 GLOBAL 级别的 SQL 模式时用户需要有 SUPER 权限，并且只会影响到从设置 SQL 模式开始后续新建立的连接（注：老连接不受影响)。 SESSION 级别的 SQL 模式的变化只会影响当前的客户端。
Modes 是用逗号 (&#39;,&#39;) 间隔开的一系列不同的模式。使用 SELECT @@sql_mode 语句查询当前 SQL 模式，SQL 模式默认值：ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION。
重要的 sql_mode 值  ANSI: 符合标准 SQL ，对数据进行校验，如果不符合定义类型或长度，对数据类型调整或截断保存，且返回warning警告。 STRICT_TRANS_TABLES: 严格模式，对数据进严格校验，但数据出现错误时，插入到表中，并且返回错误。 TRADITIONAL: 采用此模式使 TiDB 的行为象 &amp;ldquo;传统&amp;rdquo; SQL 数据库系统，当在列中插入不正确的值时“给出错误而不是警告”，一旦发现错误立即放弃INSERT/UPDATE。  SQL mode 列表    名称 含义     PIPES_AS_CONCAT 将 &amp;ldquo;||&amp;rdquo; 视为字符串连接操作符（＋）(同CONCAT())，而不视为OR（支持)   ANSI_QUOTES 将 &amp;quot; 视为识别符，如果启用 ANSI_QUOTES，只单引号内的会被认为是 String Literals，双引号被解释为识别符，因此不能用双引号来引用字符串（支持）   IGNORE_SPACE 若开启该模式，系统忽略空格。例如：“user” 和 “user “ 是相同的（支持）   ONLY_FULL_GROUP_BY 如果 GROUP BY 出现的列并没有在 SELECT，HAVING，ORDER BY 中出现，此 SQL 不合法，因为不在 GROUP BY 中的列被查询展示出来不符合正常现象 （支持)   NO_UNSIGNED_SUBTRACTION 在减运算中，如果某个操作数没有符号，不要将结果标记为UNSIGNED （支持）   NO_DIR_IN_CREATE 创建表时，忽视所有 INDEX DIRECTORY 和 DATA DIRECTORY 指令，该选项仅对从复制服务器有用 （仅语法支持）   NO_KEY_OPTIONS 使用 SHOW CREATE TABLE 时不会输出 MySQL 特有的语法部分，如 ENGINE ，使用 mysqldump 跨DB种类迁移的时需要考虑此选项（仅语法支持）   NO_FIELD_OPTIONS 使用 SHOW CREATE TABLE 时不会输出 MySQL 特有的语法部分，如 ENGINE ，使用 mysqldump 跨DB种类迁移的时需要考虑此选项（仅语法支持）   NO_TABLE_OPTIONS 使用 SHOW CREATE TABLE 时不会输出 MySQL 特有的语法部分，如 ENGINE ，使用 mysqldump 跨DB种类迁移的时需要考虑此选项（仅语法支持）   NO_AUTO_VALUE_ON_ZERO 若启用该模式，在AUTO_INCREMENT列的处理传入的值是 0 或者具体数值时系统直接将该值写入此列，传入 NULL 时系统自动生成下一个序列号（支持）   NO_BACKSLASH_ESCAPES 若启用该模式，\ 反斜杠符号仅代表它自己（支持）   STRICT_TRANS_TABLES 对于事务存储引擎启用严格模式，insert非法值之后，回滚整条语句（支持）   STRICT_ALL_TABLES 对于事务型表，写入非法值之后，回滚整个事务语句（支持）   NO_ZERO_IN_DATE 在严格模式，不接受月或日部分为0的日期。如果使用IGNORE选项，我们为类似的日期插入&#39;0000-00-00&amp;rsquo;。在非严格模式，可以接受该日期，但会生成警告 （支持）   NO_ZERO_DATE 在严格模式，不要将 &amp;lsquo;0000-00-00&#39;做为合法日期。你仍然可以用IGNORE选项插入零日期。在非严格模式，可以接受该日期，但会生成警告 （支持）   ALLOW_INVALID_DATES 不检查全部日期的合法性，仅检查月份值在 1 到 12 及 日期值在 1 到31 之间，仅适用于 DATE 和 DATATIME 列，TIMESTAMP 列需要全部检查其合法性 （支持）   ERROR_FOR_DIVISION_BY_ZERO 若启用该模式，在 INSERT 或 UPDATE 过程中，被除数为 0 值时，系统产生错误 若未启用该模式，被除数为 0 值时，系统产生警告，并用 NULL 代替 （支持）   NO_AUTO_CREATE_USER 防止GRANT自动创建新用户，但指定密码除外 （支持）   HIGH_NOT_PRECEDENCE NOT 操作符的优先级是表达式。例如： NOT a BETWEEN b AND c 被解释为 NOT (a BETWEEN b AND c)。在部份旧版本MySQL中， 表达式被解释为(NOT a) BETWEEN b AND c (支持)   NO_ENGINE_SUBSTITUTION 如果需要的存储引擎被禁用或未编译，可以防止自动替换存储引擎 （仅语法支持）   PAD_CHAR_TO_FULL_LENGTH 若启用该模式，系统对于 CHAR 类型不会截断尾部空格（支持）   REAL_AS_FLOAT 将REAL视为FLOAT的同义词，而不是DOUBLE的同义词 （支持）   POSTGRESQL 等同于 PIPES_AS_CONCAT、ANSI_QUOTES、IGNORE_SPACE、NO_KEY_OPTIONS、NO_TABLE_OPTIONS、NO_FIELD_OPTIONS （支持）   MSSQL 等同于 PIPES_AS_CONCAT、ANSI_QUOTES、IGNORE_SPACE、NO_KEY_OPTIONS、NO_TABLE_OPTIONS、 NO_FIELD_OPTIONS （支持）   DB2 等同于 PIPES_AS_CONCAT、ANSI_QUOTES、IGNORE_SPACE、NO_KEY_OPTIONS、NO_TABLE_OPTIONS、NO_FIELD_OPTIONS （支持）   MAXDB 等同于 PIPES_AS_CONCAT、ANSI_QUOTES、IGNORE_SPACE、NO_KEY_OPTIONS、NO_TABLE_OPTIONS、NO_FIELD_OPTIONS、NO_AUTO_CREATE_USER （支持）   MySQL323 等同于 NO_FIELD_OPTIONS、HIGH_NOT_PRECEDENCE (支持)   MYSQL40 等同于 NO_FIELD_OPTIONS、HIGH_NOT_PRECEDENCE （支持）   ANSI 等同于 REAL_AS_FLOAT、PIPES_AS_CONCAT、ANSI_QUOTES、IGNORE_SPACE （支持）   TRADITIONAL 等同于 STRICT_TRANS_TABLES、STRICT_ALL_TABLES、NO_ZERO_IN_DATE、NO_ZERO_DATE、ERROR_FOR_DIVISION_BY_ZERO、NO_AUTO_CREATE_USER(支持)   ORACLE 等同于 PIPES_AS_CONCAT、ANSI_QUOTES、IGNORE_SPACE、NO_KEY_OPTIONS、NO_TABLE_OPTIONS、NO_FIELD_OPTIONS、NO_AUTO_CREATE_USER （支持）    </description>
    </item>
    
    <item>
      <title>SQL Mode</title>
      <link>https://pingcap.com/docs/dev/reference/sql/sql-mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/sql-mode/</guid>
      <description>Learn SQL mode.</description>
    </item>
    
    <item>
      <title>SQL Mode</title>
      <link>https://pingcap.com/docs/stable/reference/sql/sql-mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/sql-mode/</guid>
      <description>Learn SQL mode.</description>
    </item>
    
    <item>
      <title>SQL Mode</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/sql-mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/sql-mode/</guid>
      <description>Learn SQL mode.</description>
    </item>
    
    <item>
      <title>SQL Optimization Process</title>
      <link>https://pingcap.com/docs/dev/reference/performance/sql-optimizer-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/performance/sql-optimizer-overview/</guid>
      <description>Learn about the logical and physical optimization of SQL in TiDB.</description>
    </item>
    
    <item>
      <title>SQL Optimization Process</title>
      <link>https://pingcap.com/docs/stable/reference/performance/sql-optimizer-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/performance/sql-optimizer-overview/</guid>
      <description>Learn about the logical and physical optimization of SQL in TiDB.</description>
    </item>
    
    <item>
      <title>SQL Optimization Process</title>
      <link>https://pingcap.com/docs/v2.1/reference/performance/sql-optimizer-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/performance/sql-optimizer-overview/</guid>
      <description>Learn about the logical and physical optimization of SQL in TiDB.</description>
    </item>
    
    <item>
      <title>SQL Optimization Process</title>
      <link>https://pingcap.com/docs/v3.1/reference/performance/sql-optimizer-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/performance/sql-optimizer-overview/</guid>
      <description>Learn about the logical and physical optimization of SQL in TiDB.</description>
    </item>
    
    <item>
      <title>SQL 优化流程简介</title>
      <link>https://pingcap.com/docs-cn/dev/reference/performance/sql-optimizer-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/performance/sql-optimizer-overview/</guid>
      <description>SQL 优化流程简介 在 TiDB 中，SQL 优化过程分为逻辑优化和物理优化两个阶段。
逻辑优化简介 逻辑优化是基于规则的优化，对输入的逻辑执行计划按顺序应用一些优化规则，从而使整个逻辑执行计划变得更好。这些优化规则包括：
 列裁剪 投影消除 关联子查询去关联 Max/Min 消除 谓词下推 分区裁剪 TopN 和 Limit 下推 Join Reorder  物理优化简介 物理优化是基于代价的优化，为上一阶段产生的逻辑执行计划制定物理执行计划。这一阶段中，优化器会为逻辑执行计划中的每个算子选择具体的物理实现。逻辑算子的不同物理实现有着不同的时间复杂度、资源消耗和物理属性等。在这个过程中，优化器会根据数据的统计信息来确定不同物理实现的代价，并选择整体代价最小的物理执行计划。
逻辑执行计划是一个树形结构，每个节点对应 SQL 中的一个逻辑算子。同样的，物理执行计划也是一个树形结构，每个节点对应 SQL 中的一个物理算子。逻辑算子只描述这个算子的功能，而物理算子则描述了完成这个功能的具体算法。对于同一个逻辑算子，可能有多个物理算子实现，比如 LogicalAggregate，它的实现可以是采用哈希算法的 HashAggregate，也可以是流式的 StreamAggregate。不同的物理算子具有不同的物理属性，也对其子节点有着不同的物理属性的要求。物理属性包括数据的顺序和分布等。TiDB 中现在只考虑了数据的顺序。</description>
    </item>
    
    <item>
      <title>SQL 优化流程简介</title>
      <link>https://pingcap.com/docs-cn/stable/reference/performance/sql-optimizer-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/performance/sql-optimizer-overview/</guid>
      <description>SQL 优化流程简介 在 TiDB 中，SQL 优化过程分为逻辑优化和物理优化两个阶段。
逻辑优化简介 逻辑优化是基于规则的优化，对输入的逻辑执行计划按顺序应用一些优化规则，从而使整个逻辑执行计划变得更好。这些优化规则包括：
 列裁剪 投影消除 关联子查询去关联 Max/Min 消除 谓词下推 分区裁剪 TopN 和 Limit 下推  物理优化简介 物理优化是基于代价的优化，为上一阶段产生的逻辑执行计划制定物理执行计划。这一阶段中，优化器会为逻辑执行计划中的每个算子选择具体的物理实现。逻辑算子的不同物理实现有着不同的时间复杂度、资源消耗和物理属性等。在这个过程中，优化器会根据数据的统计信息来确定不同物理实现的代价，并选择整体代价最小的物理执行计划。
逻辑执行计划是一个树形结构，每个节点对应 SQL 中的一个逻辑算子。同样的，物理执行计划也是一个树形结构，每个节点对应 SQL 中的一个物理算子。逻辑算子只描述这个算子的功能，而物理算子则描述了完成这个功能的具体算法。对于同一个逻辑算子，可能有多个物理算子实现，比如 LogicalAggregate，它的实现可以是采用哈希算法的 HashAggregate，也可以是流式的 StreamAggregate。不同的物理算子具有不同的物理属性，也对其子节点有着不同的物理属性的要求。物理属性包括数据的顺序和分布等。TiDB 中现在只考虑了数据的顺序。</description>
    </item>
    
    <item>
      <title>SQL 优化流程简介</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/performance/sql-optimizer-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/performance/sql-optimizer-overview/</guid>
      <description>SQL 优化流程简介 在 TiDB 中，SQL 优化过程分为逻辑优化和物理优化两个阶段。
逻辑优化简介 逻辑优化是基于规则的优化，对输入的逻辑执行计划按顺序应用一些优化规则，从而使整个逻辑执行计划变得更好。这些优化规则包括：
 列裁剪 投影消除 关联子查询去关联 Max/Min 消除 谓词下推 分区裁剪 TopN 和 Limit 下推  物理优化简介 物理优化是基于代价的优化，为上一阶段产生的逻辑执行计划制定物理执行计划。这一阶段中，优化器会为逻辑执行计划中的每个算子选择具体的物理实现。逻辑算子的不同物理实现有着不同的时间复杂度、资源消耗和物理属性等。在这个过程中，优化器会根据数据的统计信息来确定不同物理实现的代价，并选择整体代价最小的物理执行计划。
逻辑执行计划是一个树形结构，每个节点对应 SQL 中的一个逻辑算子。同样的，物理执行计划也是一个树形结构，每个节点对应 SQL 中的一个物理算子。逻辑算子只描述这个算子的功能，而物理算子则描述了完成这个功能的具体算法。对于同一个逻辑算子，可能有多个物理算子实现，比如 LogicalAggregate，它的实现可以是采用哈希算法的 HashAggregate，也可以是流式的 StreamAggregate。不同的物理算子具有不同的物理属性，也对其子节点有着不同的物理属性的要求。物理属性包括数据的顺序和分布等。TiDB 中现在只考虑了数据的顺序。</description>
    </item>
    
    <item>
      <title>SQL 优化流程简介</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/performance/sql-optimizer-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/performance/sql-optimizer-overview/</guid>
      <description>SQL 优化流程简介 在 TiDB 中，SQL 优化过程分为逻辑优化和物理优化两个阶段。
逻辑优化简介 逻辑优化是基于规则的优化，对输入的逻辑执行计划按顺序应用一些优化规则，从而使整个逻辑执行计划变得更好。这些优化规则包括：
 列裁剪 投影消除 关联子查询去关联 Max/Min 消除 谓词下推 分区裁剪 TopN 和 Limit 下推  物理优化简介 物理优化是基于代价的优化，为上一阶段产生的逻辑执行计划制定物理执行计划。这一阶段中，优化器会为逻辑执行计划中的每个算子选择具体的物理实现。逻辑算子的不同物理实现有着不同的时间复杂度、资源消耗和物理属性等。在这个过程中，优化器会根据数据的统计信息来确定不同物理实现的代价，并选择整体代价最小的物理执行计划。
逻辑执行计划是一个树形结构，每个节点对应 SQL 中的一个逻辑算子。同样的，物理执行计划也是一个树形结构，每个节点对应 SQL 中的一个物理算子。逻辑算子只描述这个算子的功能，而物理算子则描述了完成这个功能的具体算法。对于同一个逻辑算子，可能有多个物理算子实现，比如 LogicalAggregate，它的实现可以是采用哈希算法的 HashAggregate，也可以是流式的 StreamAggregate。不同的物理算子具有不同的物理属性，也对其子节点有着不同的物理属性的要求。物理属性包括数据的顺序和分布等。TiDB 中现在只考虑了数据的顺序。</description>
    </item>
    
    <item>
      <title>START TRANSACTION</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/start-transaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/start-transaction/</guid>
      <description>TiDB 数据库中 START TRANSACTION 的使用概况。</description>
    </item>
    
    <item>
      <title>START TRANSACTION</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/start-transaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/start-transaction/</guid>
      <description>TiDB 数据库中 START TRANSACTION 的使用概况。</description>
    </item>
    
    <item>
      <title>START TRANSACTION</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/start-transaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/start-transaction/</guid>
      <description>TiDB 数据库中 START TRANSACTION 的使用概况。</description>
    </item>
    
    <item>
      <title>START TRANSACTION</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/start-transaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/start-transaction/</guid>
      <description>TiDB 数据库中 START TRANSACTION 的使用概况。</description>
    </item>
    
    <item>
      <title>START TRANSACTION | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/start-transaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/start-transaction/</guid>
      <description>An overview of the usage of START TRANSACTION for the TiDB database.</description>
    </item>
    
    <item>
      <title>START TRANSACTION | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/start-transaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/start-transaction/</guid>
      <description>An overview of the usage of START TRANSACTION for the TiDB database.</description>
    </item>
    
    <item>
      <title>START TRANSACTION | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/start-transaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/start-transaction/</guid>
      <description>An overview of the usage of START TRANSACTION for the TiDB database.</description>
    </item>
    
    <item>
      <title>START TRANSACTION | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/start-transaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/start-transaction/</guid>
      <description>An overview of the usage of START TRANSACTION for the TiDB database.</description>
    </item>
    
    <item>
      <title>Statement Summary Tables</title>
      <link>https://pingcap.com/docs-cn/dev/reference/performance/statement-summary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/performance/statement-summary/</guid>
      <description>Statement Summary Tables 针对 SQL 性能相关的问题，MySQL 在 performance_schema 提供了 statement summary tables，用来监控和统计 SQL。例如其中的一张表 events_statements_summary_by_digest，提供了丰富的字段，包括延迟、执行次数、扫描行数、全表扫描次数等，有助于用户定位 SQL 问题。
为此，从 3.0.4 版本开始，TiDB 也提供系统表 events_statements_summary_by_digest，从 3.0.8 开始提供系统表 events_statements_summary_by_digest_history。本文将详细介绍这两张表，以及如何利用它们来排查 SQL 性能问题。
events_statements_summary_by_digest events_statements_summary_by_digest 是 performance_schema 里的一张系统表，它把 SQL 按 SQL digest 和 plan digest 分组，统计每一组的 SQL 信息。
此处的 SQL digest 与 slow log 里的 SQL digest 一样，是把 SQL 规一化后算出的唯一标识符。SQL 的规一化会忽略常量、空白符、大小写的差别。即语法一致的 SQL 语句，其 digest 也相同。
例如：
SELECT * FROM employee WHERE id IN (1, 2, 3) AND salary BETWEEN 1000 AND 2000; select * from EMPLOYEE where ID in (4, 5) and SALARY between 3000 and 4000; 规一化后都是：</description>
    </item>
    
    <item>
      <title>Statement Summary Tables</title>
      <link>https://pingcap.com/docs-cn/stable/reference/performance/statement-summary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/performance/statement-summary/</guid>
      <description>Statement Summary Tables 针对 SQL 性能相关的问题，MySQL 在 performance_schema 提供了 statement summary tables，用来监控和统计 SQL。例如其中的一张表 events_statements_summary_by_digest，提供了丰富的字段，包括延迟、执行次数、扫描行数、全表扫描次数等，有助于用户定位 SQL 问题。
为此，从 3.0.4 版本开始，TiDB 也提供系统表 events_statements_summary_by_digest，从 3.0.8 开始提供系统表 events_statements_summary_by_digest_history。本文将详细介绍这两张表，以及如何利用它们来排查 SQL 性能问题。
events_statements_summary_by_digest events_statements_summary_by_digest 是 performance_schema 里的一张系统表，它把 SQL 按 SQL digest 和 plan digest 分组，统计每一组的 SQL 信息。
此处的 SQL digest 与 slow log 里的 SQL digest 一样，是把 SQL 规一化后算出的唯一标识符。SQL 的规一化会忽略常量、空白符、大小写的差别。即语法一致的 SQL 语句，其 digest 也相同。
例如：
SELECT * FROM employee WHERE id IN (1, 2, 3) AND salary BETWEEN 1000 AND 2000; select * from EMPLOYEE where ID in (4, 5) and SALARY between 3000 and 4000; 规一化后都是：</description>
    </item>
    
    <item>
      <title>Statement Summary Tables</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/performance/statement-summary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/performance/statement-summary/</guid>
      <description>Statement Summary Tables 针对 SQL 性能相关的问题，MySQL 在 performance_schema 提供了 statement summary tables，用来监控和统计 SQL。例如其中的一张表 events_statements_summary_by_digest，提供了丰富的字段，包括延迟、执行次数、扫描行数、全表扫描次数等，有助于用户定位 SQL 问题。
为此，从 3.1.0-beta 版本开始，TiDB 也提供系统表 events_statements_summary_by_digest，从 3.1.0-beta.1 开始提供系统表 events_statements_summary_by_digest_history。本文将详细介绍这两张表，以及如何利用它们来排查 SQL 性能问题。
events_statements_summary_by_digest events_statements_summary_by_digest 是 performance_schema 里的一张系统表，它把 SQL 按 SQL digest 和 plan digest 分组，统计每一组的 SQL 信息。
此处的 SQL digest 与 slow log 里的 SQL digest 一样，是把 SQL 规一化后算出的唯一标识符。SQL 的规一化会忽略常量、空白符、大小写的差别。即语法一致的 SQL 语句，其 digest 也相同。
例如：
SELECT * FROM employee WHERE id IN (1, 2, 3) AND salary BETWEEN 1000 AND 2000; select * from EMPLOYEE where ID in (4, 5) and SALARY between 3000 and 4000; 规一化后都是：</description>
    </item>
    
    <item>
      <title>Statement Summary Tables</title>
      <link>https://pingcap.com/docs/dev/reference/performance/statement-summary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/performance/statement-summary/</guid>
      <description>Learn about Statement Summary Table in TiDB.</description>
    </item>
    
    <item>
      <title>Statement Summary Tables</title>
      <link>https://pingcap.com/docs/stable/reference/performance/statement-summary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/performance/statement-summary/</guid>
      <description>Learn about Statement Summary Table in TiDB.</description>
    </item>
    
    <item>
      <title>Statement Summary Tables</title>
      <link>https://pingcap.com/docs/v3.1/reference/performance/statement-summary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/performance/statement-summary/</guid>
      <description>Learn about Statement Summary Table in TiDB.</description>
    </item>
    
    <item>
      <title>String Functions</title>
      <link>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/string-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/string-functions/</guid>
      <description>Learn about the string functions in TiDB.</description>
    </item>
    
    <item>
      <title>String Functions</title>
      <link>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/string-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/string-functions/</guid>
      <description>Learn about the string functions in TiDB.</description>
    </item>
    
    <item>
      <title>String Functions</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/string-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/string-functions/</guid>
      <description>Learn about the string functions in TiDB.</description>
    </item>
    
    <item>
      <title>String Functions</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/string-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/string-functions/</guid>
      <description>Learn about the string functions in TiDB.</description>
    </item>
    
    <item>
      <title>String types</title>
      <link>https://pingcap.com/docs/dev/reference/sql/data-types/string/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/data-types/string/</guid>
      <description>Learn about the string types supported in TiDB.</description>
    </item>
    
    <item>
      <title>String types</title>
      <link>https://pingcap.com/docs/stable/reference/sql/data-types/string/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/data-types/string/</guid>
      <description>Learn about the string types supported in TiDB.</description>
    </item>
    
    <item>
      <title>String types</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/data-types/string/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/data-types/string/</guid>
      <description>Learn about the string types supported in TiDB.</description>
    </item>
    
    <item>
      <title>String types</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/data-types/string/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/data-types/string/</guid>
      <description>Learn about the string types supported in TiDB.</description>
    </item>
    
    <item>
      <title>Success Stories</title>
      <link>https://pingcap.com/success-stories/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/success-stories/</guid>
      <description>PingCAP is focused on developing distributed NewSQL and is the team building TiDB, an open-source distributed NewSQL database.</description>
    </item>
    
    <item>
      <title>Support Resources</title>
      <link>https://pingcap.com/docs/dev/support-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/support-resources/</guid>
      <description>Find support resources for your TiDB installation.</description>
    </item>
    
    <item>
      <title>Support Resources</title>
      <link>https://pingcap.com/docs/stable/support-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/support-resources/</guid>
      <description>Find support resources for your TiDB installation.</description>
    </item>
    
    <item>
      <title>Support Resources</title>
      <link>https://pingcap.com/docs/v2.1/support-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/support-resources/</guid>
      <description>Find support resources for your TiDB installation.</description>
    </item>
    
    <item>
      <title>Support Resources</title>
      <link>https://pingcap.com/docs/v3.1/support-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/support-resources/</guid>
      <description>Find support resources for your TiDB installation.</description>
    </item>
    
    <item>
      <title>sync-diff-inspector User Guide</title>
      <link>https://pingcap.com/docs/dev/reference/tools/sync-diff-inspector/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/sync-diff-inspector/overview/</guid>
      <description>Use sync-diff-inspector to compare data and repair inconsistent data.</description>
    </item>
    
    <item>
      <title>sync-diff-inspector User Guide</title>
      <link>https://pingcap.com/docs/stable/reference/tools/sync-diff-inspector/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/sync-diff-inspector/overview/</guid>
      <description>Use sync-diff-inspector to compare data and repair inconsistent data.</description>
    </item>
    
    <item>
      <title>sync-diff-inspector User Guide</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/sync-diff-inspector/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/sync-diff-inspector/overview/</guid>
      <description>Use sync-diff-inspector to compare data and repair inconsistent data.</description>
    </item>
    
    <item>
      <title>sync-diff-inspector User Guide</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/sync-diff-inspector/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/sync-diff-inspector/overview/</guid>
      <description>Use sync-diff-inspector to compare data and repair inconsistent data.</description>
    </item>
    
    <item>
      <title>sync-diff-inspector 用户文档</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/sync-diff-inspector/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/sync-diff-inspector/overview/</guid>
      <description>sync-diff-inspector 用户文档 sync-diff-inspector 是一个用于校验 MySQL／TiDB 中两份数据是否一致的工具。该工具提供了修复数据的功能（适用于修复少量不一致的数据）。
主要功能：
 对比表结构和数据 如果数据不一致，则生成用于修复数据的 SQL 语句 支持不同库名或表名的数据校验 支持分库分表场景下的数据校验 支持 TiDB 主从集群的数据校验  GitHub 地址：sync-diff-inspector
下载地址：tidb-enterprise-tools-latest-linux-amd64
sync-diff-inspector 的使用 使用限制   目前不支持在线校验，需要保证上下游校验的表中没有数据写入，或者保证某个范围内的数据不再变更，通过配置 range 来校验这个范围内的数据。
  不支持 JSON、BIT、BINARY、BLOB 等类型的数据，在校验时需要设置 ignore-columns 忽略检查这些类型的数据。
  FLOAT、DOUBLE 等浮点数类型在 TiDB 和 MySQL 中的实现方式不同，在计算 checksum 时可能存在差异，如果发现因为这些类型的数据导致的数据校验不一致，需要设置 ignore-columns 忽略这些列的检查。
  数据库权限 sync-diff-inspector 需要获取表结构信息、查询数据、建 checkpoint 库保存断点信息，需要的数据库权限如下：
  上游数据库
  SELECT（查数据进行对比）
  SHOW_DATABASES (查看库名)
  RELOAD (查看表结构)
    下游数据库</description>
    </item>
    
    <item>
      <title>sync-diff-inspector 用户文档</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/sync-diff-inspector/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/sync-diff-inspector/overview/</guid>
      <description>sync-diff-inspector 用户文档 sync-diff-inspector 是一个用于校验 MySQL／TiDB 中两份数据是否一致的工具。该工具提供了修复数据的功能（适用于修复少量不一致的数据）。
主要功能：
 对比表结构和数据 如果数据不一致，则生成用于修复数据的 SQL 语句 支持不同库名或表名的数据校验 支持分库分表场景下的数据校验 支持 TiDB 主从集群的数据校验  GitHub 地址：sync-diff-inspector
下载地址：tidb-enterprise-tools-latest-linux-amd64
sync-diff-inspector 的使用 使用限制   目前不支持在线校验，需要保证上下游校验的表中没有数据写入，或者保证某个范围内的数据不再变更，通过配置 range 来校验这个范围内的数据。
  不支持 JSON、BIT、BINARY、BLOB 等类型的数据，在校验时需要设置 ignore-columns 忽略检查这些类型的数据。
  FLOAT、DOUBLE 等浮点数类型在 TiDB 和 MySQL 中的实现方式不同，在计算 checksum 时可能存在差异，如果发现因为这些类型的数据导致的数据校验不一致，需要设置 ignore-columns 忽略这些列的检查。
  数据库权限 sync-diff-inspector 需要获取表结构信息、查询数据、建 checkpoint 库保存断点信息，需要的数据库权限如下：
  上游数据库
  SELECT（查数据进行对比）
  SHOW_DATABASES (查看库名)
  RELOAD (查看表结构)
    下游数据库</description>
    </item>
    
    <item>
      <title>sync-diff-inspector 用户文档</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/sync-diff-inspector/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/sync-diff-inspector/overview/</guid>
      <description>sync-diff-inspector 用户文档 sync-diff-inspector 是一个用于校验 MySQL／TiDB 中两份数据是否一致的工具。该工具提供了修复数据的功能（适用于修复少量不一致的数据）。
主要功能：
 对比表结构和数据 如果数据不一致，则生成用于修复数据的 SQL 语句 支持不同库名或表名的数据校验 支持分库分表场景下的数据校验 支持 TiDB 主从集群的数据校验  GitHub 地址：sync-diff-inspector
下载地址：tidb-enterprise-tools-latest-linux-amd64
sync-diff-inspector 的使用 使用限制   目前不支持在线校验，需要保证上下游校验的表中没有数据写入，或者保证某个范围内的数据不再变更，通过配置 range 来校验这个范围内的数据。
  不支持 JSON、BIT、BINARY、BLOB 等类型的数据，在校验时需要设置 ignore-columns 忽略检查这些类型的数据。
  FLOAT、DOUBLE 等浮点数类型在 TiDB 和 MySQL 中的实现方式不同，在计算 checksum 时可能存在差异，如果发现因为这些类型的数据导致的数据校验不一致，需要设置 ignore-columns 忽略这些列的检查。
  数据库权限 sync-diff-inspector 需要获取表结构信息、查询数据、建 checkpoint 库保存断点信息，需要的数据库权限如下：
  上游数据库
  SELECT（查数据进行对比）
  SHOW_DATABASES (查看库名)
  RELOAD (查看表结构)
    下游数据库</description>
    </item>
    
    <item>
      <title>sync-diff-inspector 用户文档</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/sync-diff-inspector/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/sync-diff-inspector/overview/</guid>
      <description>sync-diff-inspector 用户文档 sync-diff-inspector 是一个用于校验 MySQL／TiDB 中两份数据是否一致的工具。该工具提供了修复数据的功能（适用于修复少量不一致的数据）。
主要功能：
 对比表结构和数据 如果数据不一致，则生成用于修复数据的 SQL 语句 支持不同库名或表名的数据校验 支持分库分表场景下的数据校验 支持 TiDB 主从集群的数据校验  GitHub 地址：sync-diff-inspector
下载地址：tidb-enterprise-tools-latest-linux-amd64
sync-diff-inspector 的使用 使用限制   目前不支持在线校验，需要保证上下游校验的表中没有数据写入，或者保证某个范围内的数据不再变更，通过配置 range 来校验这个范围内的数据。
  不支持 JSON、BIT、BINARY、BLOB 等类型的数据，在校验时需要设置 ignore-columns 忽略检查这些类型的数据。
  FLOAT、DOUBLE 等浮点数类型在 TiDB 和 MySQL 中的实现方式不同，在计算 checksum 时可能存在差异，如果发现因为这些类型的数据导致的数据校验不一致，需要设置 ignore-columns 忽略这些列的检查。
  数据库权限 sync-diff-inspector 需要获取表结构信息、查询数据、建 checkpoint 库保存断点信息，需要的数据库权限如下：
  上游数据库
  SELECT（查数据进行对比）
  SHOW_DATABASES (查看库名)
  RELOAD (查看表结构)
    下游数据库</description>
    </item>
    
    <item>
      <title>Syncer User Guide</title>
      <link>https://pingcap.com/docs/dev/reference/tools/syncer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/syncer/</guid>
      <description>Use Syncer to import data incrementally to TiDB.</description>
    </item>
    
    <item>
      <title>Syncer User Guide</title>
      <link>https://pingcap.com/docs/stable/reference/tools/syncer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/syncer/</guid>
      <description>Use Syncer to import data incrementally to TiDB.</description>
    </item>
    
    <item>
      <title>Syncer User Guide</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/syncer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/syncer/</guid>
      <description>Use Syncer to import data incrementally to TiDB.</description>
    </item>
    
    <item>
      <title>Syncer User Guide</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/syncer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/syncer/</guid>
      <description>Use Syncer to import data incrementally to TiDB.</description>
    </item>
    
    <item>
      <title>Syncer 使用文档</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/syncer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/syncer/</guid>
      <description>Syncer 使用文档 Syncer 简介 Syncer 是一个数据导入工具，能方便地将 MySQL 的数据增量导入到 TiDB。
Syncer 包含在 tidb-enterprise-tools 安装包中，可在此下载。
Syncer 架构 Syncer 部署位置 Syncer 可以部署在任一台可以连通对应的 MySQL 和 TiDB 集群的机器上，推荐部署在 TiDB 集群。
Syncer 增量导入数据示例 使用前请详细阅读 Syncer 同步前预检查。
设置同步开始的 position 设置 Syncer 的 meta 文件, 这里假设 meta 文件是 syncer.meta:
 cat syncer.meta binlog-name = &amp;#34;mysql-bin.000003&amp;#34; binlog-pos = 930143241 binlog-gtid = &amp;#34;2bfabd22-fff7-11e6-97f7-f02fa73bcb01:1-23,61ccbb5d-c82d-11e6-ac2e-487b6bd31bf7:1-4&amp;#34;  注意：
 syncer.meta 只需要第一次使用的时候配置，后续 Syncer 同步新的 binlog 之后会自动将其更新到最新的 position。 如果使用 binlog position 同步则只需要配置 binlog-name 和 binlog-pos；如果使用 binlog-gtid 同步则需要设置 binlog-gtid，且启动 Syncer 时带有 --enable-gtid。   启动 Syncer Syncer 的命令行参数说明：</description>
    </item>
    
    <item>
      <title>Syncer 使用文档</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/syncer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/syncer/</guid>
      <description>Syncer 使用文档 Syncer 简介 Syncer 是一个数据导入工具，能方便地将 MySQL 的数据增量导入到 TiDB。
Syncer 包含在 tidb-enterprise-tools 安装包中，可在此下载。
Syncer 架构 Syncer 部署位置 Syncer 可以部署在任一台可以连通对应的 MySQL 和 TiDB 集群的机器上，推荐部署在 TiDB 集群。
Syncer 增量导入数据示例 使用前请详细阅读 Syncer 同步前预检查。
设置同步开始的 position 设置 Syncer 的 meta 文件, 这里假设 meta 文件是 syncer.meta:
 cat syncer.meta binlog-name = &amp;#34;mysql-bin.000003&amp;#34; binlog-pos = 930143241 binlog-gtid = &amp;#34;2bfabd22-fff7-11e6-97f7-f02fa73bcb01:1-23,61ccbb5d-c82d-11e6-ac2e-487b6bd31bf7:1-4&amp;#34;  注意：
 syncer.meta 只需要第一次使用的时候配置，后续 Syncer 同步新的 binlog 之后会自动将其更新到最新的 position。 如果使用 binlog position 同步则只需要配置 binlog-name 和 binlog-pos；如果使用 binlog-gtid 同步则需要设置 binlog-gtid，且启动 Syncer 时带有 --enable-gtid。   启动 Syncer Syncer 的命令行参数说明：</description>
    </item>
    
    <item>
      <title>Syncer 使用文档</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/syncer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/syncer/</guid>
      <description>Syncer 使用文档 Syncer 简介 Syncer 是一个数据导入工具，能方便地将 MySQL 的数据增量导入到 TiDB。
Syncer 包含在 tidb-enterprise-tools 安装包中，可在此下载。
Syncer 架构 Syncer 部署位置 Syncer 可以部署在任一台可以连通对应的 MySQL 和 TiDB 集群的机器上，推荐部署在 TiDB 集群。
Syncer 增量导入数据示例 使用前请详细阅读 Syncer 同步前预检查。
设置同步开始的 position 设置 Syncer 的 meta 文件, 这里假设 meta 文件是 syncer.meta:
# cat syncer.meta binlog-name = &amp;#34;mysql-bin.000003&amp;#34; binlog-pos = 930143241 binlog-gtid = &amp;#34;2bfabd22-fff7-11e6-97f7-f02fa73bcb01:1-23,61ccbb5d-c82d-11e6-ac2e-487b6bd31bf7:1-4&amp;#34;  注意：
 syncer.meta 只需要第一次使用的时候配置，后续 Syncer 同步新的 binlog 之后会自动将其更新到最新的 position。 如果使用 binlog position 同步则只需要配置 binlog-name 和 binlog-pos；如果使用 binlog-gtid 同步则需要设置 binlog-gtid，且启动 Syncer 时带有 --enable-gtid。   启动 Syncer Syncer 的命令行参数说明：</description>
    </item>
    
    <item>
      <title>Syncer 使用文档</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/syncer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/syncer/</guid>
      <description>Syncer 使用文档 Syncer 简介 Syncer 是一个数据导入工具，能方便地将 MySQL 的数据增量导入到 TiDB。
Syncer 包含在 tidb-enterprise-tools 安装包中，可在此下载。
Syncer 架构 Syncer 部署位置 Syncer 可以部署在任一台可以连通对应的 MySQL 和 TiDB 集群的机器上，推荐部署在 TiDB 集群。
Syncer 增量导入数据示例 使用前请详细阅读 Syncer 同步前预检查。
设置同步开始的 position 设置 Syncer 的 meta 文件, 这里假设 meta 文件是 syncer.meta:
 cat syncer.meta binlog-name = &amp;#34;mysql-bin.000003&amp;#34; binlog-pos = 930143241 binlog-gtid = &amp;#34;2bfabd22-fff7-11e6-97f7-f02fa73bcb01:1-23,61ccbb5d-c82d-11e6-ac2e-487b6bd31bf7:1-4&amp;#34;  注意：
 syncer.meta 只需要第一次使用的时候配置，后续 Syncer 同步新的 binlog 之后会自动将其更新到最新的 position。 如果使用 binlog position 同步则只需要配置 binlog-name 和 binlog-pos；如果使用 binlog-gtid 同步则需要设置 binlog-gtid，且启动 Syncer 时带有 --enable-gtid。   启动 Syncer Syncer 的命令行参数说明：</description>
    </item>
    
    <item>
      <title>Table Selector</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/table-selector/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/table-selector/</guid>
      <description>介绍 DM 的 Table Selector</description>
    </item>
    
    <item>
      <title>Table Selector</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/table-selector/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/table-selector/</guid>
      <description>介绍 DM 的 Table Selector</description>
    </item>
    
    <item>
      <title>Table Selector</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/table-selector/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/table-selector/</guid>
      <description>介绍 DM 的 Table Selector</description>
    </item>
    
    <item>
      <title>Table Selector</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/table-selector/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/table-selector/</guid>
      <description>介绍 DM 的 Table Selector</description>
    </item>
    
    <item>
      <title>Table Selector</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/table-selector/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/table-selector/</guid>
      <description>Learn about Table Selector used by the table routing, binlog event filtering, and column mapping rule of Data Migration.</description>
    </item>
    
    <item>
      <title>Table Selector</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/table-selector/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/table-selector/</guid>
      <description>Learn about Table Selector used by the table routing, binlog event filtering, and column mapping rule of Data Migration.</description>
    </item>
    
    <item>
      <title>Table Selector</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/table-selector/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/table-selector/</guid>
      <description>Learn about Table Selector used by the table routing, binlog event filtering, and column mapping rule of Data Migration.</description>
    </item>
    
    <item>
      <title>Table Selector</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/table-selector/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/table-selector/</guid>
      <description>Learn about Table Selector used by the table routing, binlog event filtering, and column mapping rule of Data Migration.</description>
    </item>
    
    <item>
      <title>Technical Writing Project Ideas</title>
      <link>https://pingcap.com/docs/dev/technical-writing-project-ideas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/technical-writing-project-ideas/</guid>
      <description>Learn about the project ideas of TiDB documentation.</description>
    </item>
    
    <item>
      <title>Technical Writing Project Ideas</title>
      <link>https://pingcap.com/docs/stable/technical-writing-project-ideas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/technical-writing-project-ideas/</guid>
      <description>Learn about the project ideas of TiDB documentation.</description>
    </item>
    
    <item>
      <title>Technical Writing Project Ideas</title>
      <link>https://pingcap.com/docs/v2.1/technical-writing-project-ideas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/technical-writing-project-ideas/</guid>
      <description>Learn about the project ideas of TiDB documentation.</description>
    </item>
    
    <item>
      <title>Technical Writing Project Ideas</title>
      <link>https://pingcap.com/docs/v3.1/technical-writing-project-ideas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/technical-writing-project-ideas/</guid>
      <description>Learn about the project ideas of TiDB documentation.</description>
    </item>
    
    <item>
      <title>Terms of Service</title>
      <link>https://pingcap.com/terms-of-service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/terms-of-service/</guid>
      <description>Terms of Service Last Updated: October 10, 2018
By using PingCAP.com and any of PingCAP’s associated mobile applications and websites (“the Site”), you agree to be bound by these Terms of Service and to use the Site in accordance with these Terms of Service and our Privacy Policy. These Terms of Service constitute a binding legal contract between you and PingCAP and govern your use of the Site.
We reserve the right to change these Terms of Service or to impose new conditions on use of the Site, from time to time, in which case we will post the revised Terms of Service on this Site and update the “Last Updated” date to reflect the date of the changes.</description>
    </item>
    
    <item>
      <title>Testing Deployment from Binary Tarball</title>
      <link>https://pingcap.com/docs/dev/how-to/deploy/from-tarball/testing-environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/deploy/from-tarball/testing-environment/</guid>
      <description>Use the binary to deploy a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Testing Deployment from Binary Tarball</title>
      <link>https://pingcap.com/docs/stable/how-to/deploy/from-tarball/testing-environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/deploy/from-tarball/testing-environment/</guid>
      <description>Use the binary to deploy a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Testing Deployment from Binary Tarball</title>
      <link>https://pingcap.com/docs/v2.1/how-to/deploy/from-tarball/testing-environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/deploy/from-tarball/testing-environment/</guid>
      <description>Use the binary to deploy a TiDB cluster.</description>
    </item>
    
    <item>
      <title>Testing Deployment from Binary Tarball</title>
      <link>https://pingcap.com/docs/v3.1/how-to/deploy/from-tarball/testing-environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/deploy/from-tarball/testing-environment/</guid>
      <description>Use the binary to deploy a TiDB cluster.</description>
    </item>
    
    <item>
      <title>The Backup Configuration of TiDB in Kubernetetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/reference/configuration/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/reference/configuration/backup/</guid>
      <description>Learn the backup configurations of TiDB in Kubernetetes.</description>
    </item>
    
    <item>
      <title>The Backup Configuration of TiDB in Kubernetetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/reference/configuration/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/reference/configuration/backup/</guid>
      <description>Learn the backup configurations of TiDB in Kubernetetes.</description>
    </item>
    
    <item>
      <title>The Backup Configuration of TiDB in Kubernetetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/reference/configuration/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/reference/configuration/backup/</guid>
      <description>Learn the backup configurations of TiDB in Kubernetetes.</description>
    </item>
    
    <item>
      <title>The Coprocessor</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/query-optimization/coprocessor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/query-optimization/coprocessor/</guid>
      <description>The Coprocessor  Transcript Welcome back. Now that you&#39;ve had a chance to experiment with EXPLAIN, let&#39;s talk about the coprocessor in more detail. For performance reasons, TiDB pushes parts of the query execution down to TiKV for coprocessing. This saves on copying data around which tends to be inefficient. So to revisit our earlier query, we can say that the coprocessor supports the count(*) function:
EXPLAIN SELECT count(*) FROM trips WHERE start_date BETWEEN &amp;#39;2017-07-01 00:00:00&amp;#39; AND &amp;#39;2017-07-01 23:59:59&amp;#39;; I am also going to drop the index start_date which was added earlier.</description>
    </item>
    
    <item>
      <title>The KOST Stack</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/tidb-overview/the-kost-stack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/tidb-overview/the-kost-stack/</guid>
      <description>The KOST Stack  Transcript In MySQL, you have the LAMP stack. With MongoDB there is the MEAN stack. So what is the KOST Stack?
Because the TiDB Platform uses a component based architecture, we have some choices as to how we deploy it. KOST is an infrastructure pattern which consists of Kubernetes, Operator, Spark, and TiDB. We have already introduced the last two letters, so in this video I&#39;m going to introduce Kubernetes and Operator:</description>
    </item>
    
    <item>
      <title>The System Variables</title>
      <link>https://pingcap.com/docs/dev/reference/configuration/tidb-server/mysql-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/configuration/tidb-server/mysql-variables/</guid>
      <description>Learn how to use the system variables in TiDB.</description>
    </item>
    
    <item>
      <title>The System Variables</title>
      <link>https://pingcap.com/docs/stable/reference/configuration/tidb-server/mysql-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/configuration/tidb-server/mysql-variables/</guid>
      <description>Learn how to use the system variables in TiDB.</description>
    </item>
    
    <item>
      <title>The System Variables</title>
      <link>https://pingcap.com/docs/v2.1/reference/configuration/tidb-server/mysql-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/configuration/tidb-server/mysql-variables/</guid>
      <description>Learn how to use the system variables in TiDB.</description>
    </item>
    
    <item>
      <title>The System Variables</title>
      <link>https://pingcap.com/docs/v3.1/reference/configuration/tidb-server/mysql-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/configuration/tidb-server/mysql-variables/</guid>
      <description>Learn how to use the system variables in TiDB.</description>
    </item>
    
    <item>
      <title>TiCDC 简介</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/ticdc/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/ticdc/overview/</guid>
      <description>TiCDC 简介 TiCDC 是一款通过拉取 TiKV 变更日志实现的 TiDB 增量数据同步工具，具有将数据还原到与上游任意 TSO 一致状态的能力，同时提供开放数据协议，支持其他系统订阅数据变更。
TiCDC 架构 TiCDC 运行时是一种无状态节点，通过 PD 内部的 etcd 实现高可用。TiCDC 集群支持创建多个同步任务，向多个不同的下游进行数据同步。TiCDC 的系统架构如下图所示：
系统角色   TiKV CDC component: 只输出 key-value (KV) change log。
 内部逻辑拼装 KV change log。 提供输出 KV change log 的接口，发送数据包括实时 change log 和增量扫的 change log。    capture: TiCDC 运行进程，多个 capture 组成一个 TiCDC 集群，负责 KV change log 的同步。
 每个 capture 负责拉取一部分 KV change log。 对拉取的一个或多个 KV change log 进行排序。 向下游还原事务或按照 TiCDC open protocol 进行输出。    同步功能介绍 本部分介绍 TiCDC 的同步功能。</description>
    </item>
    
    <item>
      <title>TiDB</title>
      <link>https://pingcap.com/en/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/en/</guid>
      <description>Amazon Aurora alternative on GCP. TiDB is an open source MySQL-compatible distributed database that handles hybrid transactional and analytical processing (HTAP) workloads and can empower Amazon Aurora users with an HTAP database.</description>
    </item>
    
    <item>
      <title>TiDB &#43; Apache Spark</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/htap/spark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/htap/spark/</guid>
      <description>TiDB + Apache Spark  Transcript For those that are confused with the overlap between the TiDB Server and Apache Spark, which can both execute SQL queries, here is a general rule to differentiate the two:
 TiDB aims to handle 100% of OLTP queries. TiDB aims to handle 80% of adhoc OLAP queries.  Spark has some advantages for very long running queries from its managed execution environment. Jobs can be automatically re-run on failure.</description>
    </item>
    
    <item>
      <title>TiDB 1.0 release notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/ga/</guid>
      <description>TiDB 1.0 Release Notes 2017 年 10 月 16 日，TiDB 发布 GA 版（TiDB 1.0）。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。
TiDB   SQL 查询优化器
 调整代价模型 Analyze 下推 函数签名下推    优化内部数据格式，减小中间结果大小
  提升 MySQL 兼容性
  支持 NO_SQL_CACHE 语法，控制存储引擎对缓存的使用
  重构 Hash Aggregator 算子，降低内存使用
  支持 Stream Aggragator 算子
  PD  支持基于读流量的热点调度 支持设置 Store 权重，以及基于权重的调度  TiKV  Coprocessor 支持更多下推函数 支持取样操作下推 支持手动触发数据 Compact，用于快速回收空间 提升性能和稳定性 增加 Debug API，方便调试  TiSpark Beta Release  支持可配置框架 支持 ThriftSever/JDBC 和 Spark SQL 脚本入口  源码地址 源码地址</description>
    </item>
    
    <item>
      <title>TiDB 1.0 release notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/ga/</guid>
      <description>TiDB 1.0 Release Notes 2017 年 10 月 16 日，TiDB 发布 GA 版（TiDB 1.0）。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。
TiDB   SQL 查询优化器
 调整代价模型 Analyze 下推 函数签名下推    优化内部数据格式，减小中间结果大小
  提升 MySQL 兼容性
  支持 NO_SQL_CACHE 语法，控制存储引擎对缓存的使用
  重构 Hash Aggregator 算子，降低内存使用
  支持 Stream Aggragator 算子
  PD  支持基于读流量的热点调度 支持设置 Store 权重，以及基于权重的调度  TiKV  Coprocessor 支持更多下推函数 支持取样操作下推 支持手动触发数据 Compact，用于快速回收空间 提升性能和稳定性 增加 Debug API，方便调试  TiSpark Beta Release  支持可配置框架 支持 ThriftSever/JDBC 和 Spark SQL 脚本入口  源码地址 源码地址</description>
    </item>
    
    <item>
      <title>TiDB 1.0 release notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/ga/</guid>
      <description>TiDB 1.0 Release Notes 2017 年 10 月 16 日，TiDB 发布 GA 版（TiDB 1.0）。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。
TiDB   SQL 查询优化器
 调整代价模型 Analyze 下推 函数签名下推    优化内部数据格式，减小中间结果大小
  提升 MySQL 兼容性
  支持 NO_SQL_CACHE 语法，控制存储引擎对缓存的使用
  重构 Hash Aggregator 算子，降低内存使用
  支持 Stream Aggragator 算子
  PD  支持基于读流量的热点调度 支持设置 Store 权重，以及基于权重的调度  TiKV  Coprocessor 支持更多下推函数 支持取样操作下推 支持手动触发数据 Compact，用于快速回收空间 提升性能和稳定性 增加 Debug API，方便调试  TiSpark Beta Release  支持可配置框架 支持 ThriftSever/JDBC 和 Spark SQL 脚本入口  源码地址 源码地址</description>
    </item>
    
    <item>
      <title>TiDB 1.0 release notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/ga/</guid>
      <description>TiDB 1.0 Release Notes 2017 年 10 月 16 日，TiDB 发布 GA 版（TiDB 1.0）。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。
TiDB   SQL 查询优化器
 调整代价模型 Analyze 下推 函数签名下推    优化内部数据格式，减小中间结果大小
  提升 MySQL 兼容性
  支持 NO_SQL_CACHE 语法，控制存储引擎对缓存的使用
  重构 Hash Aggregator 算子，降低内存使用
  支持 Stream Aggragator 算子
  PD  支持基于读流量的热点调度 支持设置 Store 权重，以及基于权重的调度  TiKV  Coprocessor 支持更多下推函数 支持取样操作下推 支持手动触发数据 Compact，用于快速回收空间 提升性能和稳定性 增加 Debug API，方便调试  TiSpark Beta Release  支持可配置框架 支持 ThriftSever/JDBC 和 Spark SQL 脚本入口  源码地址 源码地址</description>
    </item>
    
    <item>
      <title>TiDB 1.0 release notes</title>
      <link>https://pingcap.com/docs/dev/releases/ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/ga/</guid>
      <description>TiDB 1.0 Release Notes On October 16, 2017, TiDB 1.0 is now released! This release is focused on MySQL compatibility, SQL optimization, stability, and performance.
TiDB  The SQL query optimizer:  Adjust the cost model Analyze pushdown Function signature pushdown   Optimize the internal data format to reduce the interim data size Enhance the MySQL compatibility Support the NO_SQL_CACHE syntax and limit the cache usage in the storage engine Refactor the Hash Aggregator operator to reduce the memory usage Support the Stream Aggregator operator  PD  Support read flow based balancing Support setting the Store weight and weight based balancing  TiKV  Coprocessor now supports more pushdown functions Support pushing down the sampling operation Support manually triggering data compact to collect space quickly Improve the performance and stability Add a Debug API for debugging TiSpark Beta Release: Support configuration framework Support ThriftSever/JDBC and Spark SQL  Acknowledgement Special thanks to the following enterprises and teams  Archon Mobike Samsung Electronics SpeedyCloud Tencent Cloud UCloud  Thanks to the open source software and services from the following organizations and individuals  Asta Xie CNCF CoreOS Databricks Docker Github Grafana gRPC Jepsen Kubernetes Namazu Prometheus RedHat RocksDB Team Rust Team  Thanks to the individual contributors  8cbx Akihiro Suda aliyx alston111111 andelf Andy Librian Arthur Yang astaxie Bai, Yang bailaohe Bin Liu Blame cosmos Breezewish Carlos Ferreira Ce Gao Changjian Zhang Cheng Lian Cholerae Hu Chu Chao coldwater Cole R Lawrence cuiqiu cuiyuan Cwen Dagang David Chen David Ding dawxy dcadevil Deshi Xiao Di Tang disksing dongxu dreamquster Drogon Du Chuan Dylan Wen eBoyy Eric Romano Ewan Chou Fiisio follitude Fred Wang fud fudali gaoyangxiaozhu Gogs goroutine Gregory Ian Guanqun Lu Guilherme Hübner Franco Haibin Xie Han Fei hawkingrei Hiroaki Nakamura hiwjd Hongyuan Wang Hu Ming Hu Ziming Huachao Huang HuaiyuXu Huxley Hu iamxy Ian insion iroi44 Ivan.</description>
    </item>
    
    <item>
      <title>TiDB 1.0 release notes</title>
      <link>https://pingcap.com/docs/stable/releases/ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/ga/</guid>
      <description>TiDB 1.0 Release Notes On October 16, 2017, TiDB 1.0 is now released! This release is focused on MySQL compatibility, SQL optimization, stability, and performance.
TiDB  The SQL query optimizer:  Adjust the cost model Analyze pushdown Function signature pushdown   Optimize the internal data format to reduce the interim data size Enhance the MySQL compatibility Support the NO_SQL_CACHE syntax and limit the cache usage in the storage engine Refactor the Hash Aggregator operator to reduce the memory usage Support the Stream Aggregator operator  PD  Support read flow based balancing Support setting the Store weight and weight based balancing  TiKV  Coprocessor now supports more pushdown functions Support pushing down the sampling operation Support manually triggering data compact to collect space quickly Improve the performance and stability Add a Debug API for debugging TiSpark Beta Release: Support configuration framework Support ThriftSever/JDBC and Spark SQL  Acknowledgement Special thanks to the following enterprises and teams  Archon Mobike Samsung Electronics SpeedyCloud Tencent Cloud UCloud  Thanks to the open source software and services from the following organizations and individuals  Asta Xie CNCF CoreOS Databricks Docker Github Grafana gRPC Jepsen Kubernetes Namazu Prometheus RedHat RocksDB Team Rust Team  Thanks to the individual contributors  8cbx Akihiro Suda aliyx alston111111 andelf Andy Librian Arthur Yang astaxie Bai, Yang bailaohe Bin Liu Blame cosmos Breezewish Carlos Ferreira Ce Gao Changjian Zhang Cheng Lian Cholerae Hu Chu Chao coldwater Cole R Lawrence cuiqiu cuiyuan Cwen Dagang David Chen David Ding dawxy dcadevil Deshi Xiao Di Tang disksing dongxu dreamquster Drogon Du Chuan Dylan Wen eBoyy Eric Romano Ewan Chou Fiisio follitude Fred Wang fud fudali gaoyangxiaozhu Gogs goroutine Gregory Ian Guanqun Lu Guilherme Hübner Franco Haibin Xie Han Fei hawkingrei Hiroaki Nakamura hiwjd Hongyuan Wang Hu Ming Hu Ziming Huachao Huang HuaiyuXu Huxley Hu iamxy Ian insion iroi44 Ivan.</description>
    </item>
    
    <item>
      <title>TiDB 1.0 release notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/ga/</guid>
      <description>TiDB 1.0 Release Notes On October 16, 2017, TiDB 1.0 is now released! This release is focused on MySQL compatibility, SQL optimization, stability, and performance.
TiDB  The SQL query optimizer:  Adjust the cost model Analyze pushdown Function signature pushdown   Optimize the internal data format to reduce the interim data size Enhance the MySQL compatibility Support the NO_SQL_CACHE syntax and limit the cache usage in the storage engine Refactor the Hash Aggregator operator to reduce the memory usage Support the Stream Aggregator operator  PD  Support read flow based balancing Support setting the Store weight and weight based balancing  TiKV  Coprocessor now supports more pushdown functions Support pushing down the sampling operation Support manually triggering data compact to collect space quickly Improve the performance and stability Add a Debug API for debugging TiSpark Beta Release: Support configuration framework Support ThriftSever/JDBC and Spark SQL  Acknowledgement Special thanks to the following enterprises and teams  Archon Mobike Samsung Electronics SpeedyCloud Tencent Cloud UCloud  Thanks to the open source software and services from the following organizations and individuals  Asta Xie CNCF CoreOS Databricks Docker Github Grafana gRPC Jepsen Kubernetes Namazu Prometheus RedHat RocksDB Team Rust Team  Thanks to the individual contributors  8cbx Akihiro Suda aliyx alston111111 andelf Andy Librian Arthur Yang astaxie Bai, Yang bailaohe Bin Liu Blame cosmos Breezewish Carlos Ferreira Ce Gao Changjian Zhang Cheng Lian Cholerae Hu Chu Chao coldwater Cole R Lawrence cuiqiu cuiyuan Cwen Dagang David Chen David Ding dawxy dcadevil Deshi Xiao Di Tang disksing dongxu dreamquster Drogon Du Chuan Dylan Wen eBoyy Eric Romano Ewan Chou Fiisio follitude Fred Wang fud fudali gaoyangxiaozhu Gogs goroutine Gregory Ian Guanqun Lu Guilherme Hübner Franco Haibin Xie Han Fei hawkingrei Hiroaki Nakamura hiwjd Hongyuan Wang Hu Ming Hu Ziming Huachao Huang HuaiyuXu Huxley Hu iamxy Ian insion iroi44 Ivan.</description>
    </item>
    
    <item>
      <title>TiDB 1.0 release notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/ga/</guid>
      <description>TiDB 1.0 Release Notes On October 16, 2017, TiDB 1.0 is now released! This release is focused on MySQL compatibility, SQL optimization, stability, and performance.
TiDB  The SQL query optimizer:  Adjust the cost model Analyze pushdown Function signature pushdown   Optimize the internal data format to reduce the interim data size Enhance the MySQL compatibility Support the NO_SQL_CACHE syntax and limit the cache usage in the storage engine Refactor the Hash Aggregator operator to reduce the memory usage Support the Stream Aggregator operator  PD  Support read flow based balancing Support setting the Store weight and weight based balancing  TiKV  Coprocessor now supports more pushdown functions Support pushing down the sampling operation Support manually triggering data compact to collect space quickly Improve the performance and stability Add a Debug API for debugging TiSpark Beta Release: Support configuration framework Support ThriftSever/JDBC and Spark SQL  Acknowledgement Special thanks to the following enterprises and teams  Archon Mobike Samsung Electronics SpeedyCloud Tencent Cloud UCloud  Thanks to the open source software and services from the following organizations and individuals  Asta Xie CNCF CoreOS Databricks Docker Github Grafana gRPC Jepsen Kubernetes Namazu Prometheus RedHat RocksDB Team Rust Team  Thanks to the individual contributors  8cbx Akihiro Suda aliyx alston111111 andelf Andy Librian Arthur Yang astaxie Bai, Yang bailaohe Bin Liu Blame cosmos Breezewish Carlos Ferreira Ce Gao Changjian Zhang Cheng Lian Cholerae Hu Chu Chao coldwater Cole R Lawrence cuiqiu cuiyuan Cwen Dagang David Chen David Ding dawxy dcadevil Deshi Xiao Di Tang disksing dongxu dreamquster Drogon Du Chuan Dylan Wen eBoyy Eric Romano Ewan Chou Fiisio follitude Fred Wang fud fudali gaoyangxiaozhu Gogs goroutine Gregory Ian Guanqun Lu Guilherme Hübner Franco Haibin Xie Han Fei hawkingrei Hiroaki Nakamura hiwjd Hongyuan Wang Hu Ming Hu Ziming Huachao Huang HuaiyuXu Huxley Hu iamxy Ian insion iroi44 Ivan.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.1 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/101/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/101/</guid>
      <description>TiDB 1.0.1 Release Notes On November 1, 2017, TiDB 1.0.1 is released with the following updates:
TiDB  Support canceling DDL Job. Optimize the IN expression. Correct the result type of the Show statement. Support log slow query into a separate log file. Fix bugs.  TiKV  Support flow control with write bytes. Reduce Raft allocation. Increase coprocessor stack size to 10MB. Remove the useless log from the coprocessor.  </description>
    </item>
    
    <item>
      <title>TiDB 1.0.1 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/101/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/101/</guid>
      <description>TiDB 1.0.1 Release Notes On November 1, 2017, TiDB 1.0.1 is released with the following updates:
TiDB  Support canceling DDL Job. Optimize the IN expression. Correct the result type of the Show statement. Support log slow query into a separate log file. Fix bugs.  TiKV  Support flow control with write bytes. Reduce Raft allocation. Increase coprocessor stack size to 10MB. Remove the useless log from the coprocessor.  </description>
    </item>
    
    <item>
      <title>TiDB 1.0.1 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/101/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/101/</guid>
      <description>TiDB 1.0.1 Release Notes On November 1, 2017, TiDB 1.0.1 is released with the following updates:
TiDB  Support canceling DDL Job. Optimize the IN expression. Correct the result type of the Show statement. Support log slow query into a separate log file. Fix bugs.  TiKV  Support flow control with write bytes. Reduce Raft allocation. Increase coprocessor stack size to 10MB. Remove the useless log from the coprocessor.  </description>
    </item>
    
    <item>
      <title>TiDB 1.0.1 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/101/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/101/</guid>
      <description>TiDB 1.0.1 Release Notes On November 1, 2017, TiDB 1.0.1 is released with the following updates:
TiDB  Support canceling DDL Job. Optimize the IN expression. Correct the result type of the Show statement. Support log slow query into a separate log file. Fix bugs.  TiKV  Support flow control with write bytes. Reduce Raft allocation. Increase coprocessor stack size to 10MB. Remove the useless log from the coprocessor.  </description>
    </item>
    
    <item>
      <title>TiDB 1.0.2 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/102/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/102/</guid>
      <description>TiDB 1.0.2 Release Notes On November 13, 2017, TiDB 1.0.2 is released with the following updates:
TiDB  Optimize the cost estimation of index point query Support the Alter Table Add Column (ColumnDef ColumnPosition) syntax Optimize the queries whose where conditions are contradictory Optimize the Add Index operation to rectify the progress and reduce repetitive operations Optimize the  Index Look Join operator to accelerate the query speed for small data size Fix the issue with prefix index judgment  Placement Driver (PD)  Improve the stability of scheduling under exceptional situations  TiKV  Support splitting table to ensure one region does not contain data from multiple tables Limit the length of a key to be no more than 4 KB More accurate read traffic statistics Implement deep protection on the coprocessor stack Fix the LIKE behavior and the do_div_mod bug  </description>
    </item>
    
    <item>
      <title>TiDB 1.0.2 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/102/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/102/</guid>
      <description>TiDB 1.0.2 Release Notes On November 13, 2017, TiDB 1.0.2 is released with the following updates:
TiDB  Optimize the cost estimation of index point query Support the Alter Table Add Column (ColumnDef ColumnPosition) syntax Optimize the queries whose where conditions are contradictory Optimize the Add Index operation to rectify the progress and reduce repetitive operations Optimize the Index Look Join operator to accelerate the query speed for small data size Fix the issue with prefix index judgment  Placement Driver (PD)  Improve the stability of scheduling under exceptional situations  TiKV  Support splitting table to ensure one region does not contain data from multiple tables Limit the length of a key to be no more than 4 KB More accurate read traffic statistics Implement deep protection on the coprocessor stack Fix the LIKE behavior and the do_div_mod bug  </description>
    </item>
    
    <item>
      <title>TiDB 1.0.2 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/102/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/102/</guid>
      <description>TiDB 1.0.2 Release Notes On November 13, 2017, TiDB 1.0.2 is released with the following updates:
TiDB  Optimize the cost estimation of index point query Support the Alter Table Add Column (ColumnDef ColumnPosition) syntax Optimize the queries whose where conditions are contradictory Optimize the Add Index operation to rectify the progress and reduce repetitive operations Optimize the Index Look Join operator to accelerate the query speed for small data size Fix the issue with prefix index judgment  Placement Driver (PD)  Improve the stability of scheduling under exceptional situations  TiKV  Support splitting table to ensure one region does not contain data from multiple tables Limit the length of a key to be no more than 4 KB More accurate read traffic statistics Implement deep protection on the coprocessor stack Fix the LIKE behavior and the do_div_mod bug  </description>
    </item>
    
    <item>
      <title>TiDB 1.0.2 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/102/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/102/</guid>
      <description>TiDB 1.0.2 Release Notes On November 13, 2017, TiDB 1.0.2 is released with the following updates:
TiDB  Optimize the cost estimation of index point query Support the Alter Table Add Column (ColumnDef ColumnPosition) syntax Optimize the queries whose where conditions are contradictory Optimize the Add Index operation to rectify the progress and reduce repetitive operations Optimize the Index Look Join operator to accelerate the query speed for small data size Fix the issue with prefix index judgment  Placement Driver (PD)  Improve the stability of scheduling under exceptional situations  TiKV  Support splitting table to ensure one region does not contain data from multiple tables Limit the length of a key to be no more than 4 KB More accurate read traffic statistics Implement deep protection on the coprocessor stack Fix the LIKE behavior and the do_div_mod bug  </description>
    </item>
    
    <item>
      <title>TiDB 1.0.3 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/103/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/103/</guid>
      <description>TiDB 1.0.3 Release Notes On November 28, 2017, TiDB 1.0.3 is released with the following updates:
TiDB  Optimize the performance in transaction conflicts scenario Add the TokenLimit option in the config file Output the default database in slow query logs Remove the DDL statement from query duration metrics Optimize the query cost estimation Fix the index prefix issue when creating tables Support pushing down the expressions for the Float type to TiKV Fix the issue that it is slow to add index for tables with discrete integer primary index Reduce the unnecessary statistics updates Fix a potential issue during the transaction retry  PD  Support adding more types of schedulers using API  TiKV  Fix the deadlock issue with the PD client Fix the issue that the wrong leader value is prompted for NotLeader Fix the issue that the chunk size is too large in the coprocessor  To upgrade from 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.3 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/103/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/103/</guid>
      <description>TiDB 1.0.3 Release Notes On November 28, 2017, TiDB 1.0.3 is released with the following updates:
TiDB  Optimize the performance in transaction conflicts scenario Add the TokenLimit option in the config file Output the default database in slow query logs Remove the DDL statement from query duration metrics Optimize the query cost estimation Fix the index prefix issue when creating tables Support pushing down the expressions for the Float type to TiKV Fix the issue that it is slow to add index for tables with discrete integer primary index Reduce the unnecessary statistics updates Fix a potential issue during the transaction retry  PD  Support adding more types of schedulers using API  TiKV  Fix the deadlock issue with the PD client Fix the issue that the wrong leader value is prompted for NotLeader Fix the issue that the chunk size is too large in the coprocessor  To upgrade from 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.3 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/103/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/103/</guid>
      <description>TiDB 1.0.3 Release Notes On November 28, 2017, TiDB 1.0.3 is released with the following updates:
TiDB  Optimize the performance in transaction conflicts scenario Add the TokenLimit option in the config file Output the default database in slow query logs Remove the DDL statement from query duration metrics Optimize the query cost estimation Fix the index prefix issue when creating tables Support pushing down the expressions for the Float type to TiKV Fix the issue that it is slow to add index for tables with discrete integer primary index Reduce the unnecessary statistics updates Fix a potential issue during the transaction retry  PD  Support adding more types of schedulers using API  TiKV  Fix the deadlock issue with the PD client Fix the issue that the wrong leader value is prompted for NotLeader Fix the issue that the chunk size is too large in the coprocessor  To upgrade from 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.3 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/103/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/103/</guid>
      <description>TiDB 1.0.3 Release Notes On November 28, 2017, TiDB 1.0.3 is released with the following updates:
TiDB  Optimize the performance in transaction conflicts scenario Add the TokenLimit option in the config file Output the default database in slow query logs Remove the DDL statement from query duration metrics Optimize the query cost estimation Fix the index prefix issue when creating tables Support pushing down the expressions for the Float type to TiKV Fix the issue that it is slow to add index for tables with discrete integer primary index Reduce the unnecessary statistics updates Fix a potential issue during the transaction retry  PD  Support adding more types of schedulers using API  TiKV  Fix the deadlock issue with the PD client Fix the issue that the wrong leader value is prompted for NotLeader Fix the issue that the chunk size is too large in the coprocessor  To upgrade from 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.4 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/104/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/104/</guid>
      <description>TiDB 1.0.4 Release Notes On December 11, 2017, TiDB 1.0.4 is released with the following updates:
TiDB  Speed up the loading of the statistics when starting the tidb-server Improve the performance of the show variables statement Fix a potential issue when using the Add Index statement to handle the combined indexes Fix a potential issue when using the Rename Table statement to move a table to another database Accelerate the effectiveness for the Alter/Drop User statement  TiKV  Fix a possible performance issue when a snapshot is applied Fix the performance issue for reverse scan after removing a lot of data Fix the wrong encoded result for the Decimal type under special circumstances  To upgrade from 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.4 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/104/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/104/</guid>
      <description>TiDB 1.0.4 Release Notes On December 11, 2017, TiDB 1.0.4 is released with the following updates:
TiDB  Speed up the loading of the statistics when starting the tidb-server Improve the performance of the show variables statement Fix a potential issue when using the Add Index statement to handle the combined indexes Fix a potential issue when using the Rename Table statement to move a table to another database Accelerate the effectiveness for the Alter/Drop User statement  TiKV  Fix a possible performance issue when a snapshot is applied Fix the performance issue for reverse scan after removing a lot of data Fix the wrong encoded result for the Decimal type under special circumstances  To upgrade from 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.4 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/104/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/104/</guid>
      <description>TiDB 1.0.4 Release Notes On December 11, 2017, TiDB 1.0.4 is released with the following updates:
TiDB  Speed up the loading of the statistics when starting the tidb-server Improve the performance of the show variables statement Fix a potential issue when using the Add Index statement to handle the combined indexes Fix a potential issue when using the Rename Table statement to move a table to another database Accelerate the effectiveness for the Alter/Drop User statement  TiKV  Fix a possible performance issue when a snapshot is applied Fix the performance issue for reverse scan after removing a lot of data Fix the wrong encoded result for the Decimal type under special circumstances  To upgrade from 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.4 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/104/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/104/</guid>
      <description>TiDB 1.0.4 Release Notes On December 11, 2017, TiDB 1.0.4 is released with the following updates:
TiDB  Speed up the loading of the statistics when starting the tidb-server Improve the performance of the show variables statement Fix a potential issue when using the Add Index statement to handle the combined indexes Fix a potential issue when using the Rename Table statement to move a table to another database Accelerate the effectiveness for the Alter/Drop User statement  TiKV  Fix a possible performance issue when a snapshot is applied Fix the performance issue for reverse scan after removing a lot of data Fix the wrong encoded result for the Decimal type under special circumstances  To upgrade from 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.5 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/105/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/105/</guid>
      <description>TiDB 1.0.5 Release Notes On December 26, 2017, TiDB 1.0.5 is released with the following updates:
TiDB  Add the max value for the current Auto_Increment ID in the Show Create Table statement. Fix a potential goroutine leak. Support outputting slow queries into a separate file. Load the TimeZone variable from TiKV when creating a new session. Support the schema state check so that the Show Create Tableand Analyze statements process the public table/index only.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.5 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/105/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/105/</guid>
      <description>TiDB 1.0.5 Release Notes On December 26, 2017, TiDB 1.0.5 is released with the following updates:
TiDB  Add the max value for the current Auto_Increment ID in the Show Create Table statement. Fix a potential goroutine leak. Support outputting slow queries into a separate file. Load the TimeZone variable from TiKV when creating a new session. Support the schema state check so that the Show Create Tableand Analyze statements process the public table/index only.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.5 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/105/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/105/</guid>
      <description>TiDB 1.0.5 Release Notes On December 26, 2017, TiDB 1.0.5 is released with the following updates:
TiDB  Add the max value for the current Auto_Increment ID in the Show Create Table statement. Fix a potential goroutine leak. Support outputting slow queries into a separate file. Load the TimeZone variable from TiKV when creating a new session. Support the schema state check so that the Show Create Tableand Analyze statements process the public table/index only.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.5 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/105/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/105/</guid>
      <description>TiDB 1.0.5 Release Notes On December 26, 2017, TiDB 1.0.5 is released with the following updates:
TiDB  Add the max value for the current Auto_Increment ID in the Show Create Table statement. Fix a potential goroutine leak. Support outputting slow queries into a separate file. Load the TimeZone variable from TiKV when creating a new session. Support the schema state check so that the Show Create Tableand Analyze statements process the public table/index only.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.6 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/106/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/106/</guid>
      <description>TiDB 1.0.6 Release Notes On January 08, 2018, TiDB 1.0.6 is released with the following updates:
TiDB  Support the Alter Table Auto_Increment syntax Fix the bug in Cost Based computation and the Null Json issue in statistics Support the extension syntax to shard the implicit row ID to avoid write hot spot for a single table Fix a potential DDL issue Consider the timezone setting in the curtime, sysdate and curdate functions Support the SEPARATOR syntax in the GROUP_CONCAT function Fix the wrong return type issue of the GROUP_CONCAT function.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.6 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/106/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/106/</guid>
      <description>TiDB 1.0.6 Release Notes On January 08, 2018, TiDB 1.0.6 is released with the following updates:
TiDB  Support the Alter Table Auto_Increment syntax Fix the bug in Cost Based computation and the Null Json issue in statistics Support the extension syntax to shard the implicit row ID to avoid write hot spot for a single table Fix a potential DDL issue Consider the timezone setting in the curtime, sysdate and curdate functions Support the SEPARATOR syntax in the GROUP_CONCAT function Fix the wrong return type issue of the GROUP_CONCAT function.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.6 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/106/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/106/</guid>
      <description>TiDB 1.0.6 Release Notes On January 08, 2018, TiDB 1.0.6 is released with the following updates:
TiDB  Support the Alter Table Auto_Increment syntax Fix the bug in Cost Based computation and the Null Json issue in statistics Support the extension syntax to shard the implicit row ID to avoid write hot spot for a single table Fix a potential DDL issue Consider the timezone setting in the curtime, sysdate and curdate functions Support the SEPARATOR syntax in the GROUP_CONCAT function Fix the wrong return type issue of the GROUP_CONCAT function.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.6 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/106/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/106/</guid>
      <description>TiDB 1.0.6 Release Notes On January 08, 2018, TiDB 1.0.6 is released with the following updates:
TiDB  Support the Alter Table Auto_Increment syntax Fix the bug in Cost Based computation and the Null Json issue in statistics Support the extension syntax to shard the implicit row ID to avoid write hot spot for a single table Fix a potential DDL issue Consider the timezone setting in the curtime, sysdate and curdate functions Support the SEPARATOR syntax in the GROUP_CONCAT function Fix the wrong return type issue of the GROUP_CONCAT function.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.7 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/107/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/107/</guid>
      <description>TiDB 1.0.7 Release Notes On January 22, 2018, TiDB 1.0.7 is released with the following updates:
TiDB  Optimize the FIELD_LIST command Fix data race of the information schema Avoid adding read-only statements to history Add the session variable to control the log query Fix the resource leak issue in statistics Fix the goroutine leak issue Add schema info API for the http status server Fix an issue about IndexJoin Update the behavior when RunWorker is false in DDL Improve the stability of test results in statistics Support PACK_KEYS syntax for the CREATE TABLE statement Add row_id column for the null pushdown schema to optimize performance  PD  Fix possible scheduling loss issue in abnormal conditions Fix the compatibility issue with proto3 Add the log  TiKV  Support Table Scan Support the remote mode in tikv-ctl Fix the format compatibility issue of tikv-ctl proto Fix the loss of scheduling command from PD Add timeout in Push metric  To upgrade from 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.7 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/107/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/107/</guid>
      <description>TiDB 1.0.7 Release Notes On January 22, 2018, TiDB 1.0.7 is released with the following updates:
TiDB  Optimize the FIELD_LIST command Fix data race of the information schema Avoid adding read-only statements to history Add the session variable to control the log query Fix the resource leak issue in statistics Fix the goroutine leak issue Add schema info API for the http status server Fix an issue about IndexJoin Update the behavior when RunWorker is false in DDL Improve the stability of test results in statistics Support PACK_KEYS syntax for the CREATE TABLE statement Add row_id column for the null pushdown schema to optimize performance  PD  Fix possible scheduling loss issue in abnormal conditions Fix the compatibility issue with proto3 Add the log  TiKV  Support Table Scan Support the remote mode in tikv-ctl Fix the format compatibility issue of tikv-ctl proto Fix the loss of scheduling command from PD Add timeout in Push metric  To upgrade from 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.7 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/107/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/107/</guid>
      <description>TiDB 1.0.7 Release Notes On January 22, 2018, TiDB 1.0.7 is released with the following updates:
TiDB  Optimize the FIELD_LIST command Fix data race of the information schema Avoid adding read-only statements to history Add the session variable to control the log query Fix the resource leak issue in statistics Fix the goroutine leak issue Add schema info API for the http status server Fix an issue about IndexJoin Update the behavior when RunWorker is false in DDL Improve the stability of test results in statistics Support PACK_KEYS syntax for the CREATE TABLE statement Add row_id column for the null pushdown schema to optimize performance  PD  Fix possible scheduling loss issue in abnormal conditions Fix the compatibility issue with proto3 Add the log  TiKV  Support Table Scan Support the remote mode in tikv-ctl Fix the format compatibility issue of tikv-ctl proto Fix the loss of scheduling command from PD Add timeout in Push metric  To upgrade from 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.7 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/107/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/107/</guid>
      <description>TiDB 1.0.7 Release Notes On January 22, 2018, TiDB 1.0.7 is released with the following updates:
TiDB  Optimize the FIELD_LIST command Fix data race of the information schema Avoid adding read-only statements to history Add the session variable to control the log query Fix the resource leak issue in statistics Fix the goroutine leak issue Add schema info API for the http status server Fix an issue about IndexJoin Update the behavior when RunWorker is false in DDL Improve the stability of test results in statistics Support PACK_KEYS syntax for the CREATE TABLE statement Add row_id column for the null pushdown schema to optimize performance  PD  Fix possible scheduling loss issue in abnormal conditions Fix the compatibility issue with proto3 Add the log  TiKV  Support Table Scan Support the remote mode in tikv-ctl Fix the format compatibility issue of tikv-ctl proto Fix the loss of scheduling command from PD Add timeout in Push metric  To upgrade from 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.8 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/108/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/108/</guid>
      <description>TiDB 1.0.8 Release Notes On February 11, 2018, TiDB 1.0.8 is released with the following updates:
TiDB  Fix issues in the Outer Join result in some scenarios Optimize the performance of the InsertIntoIgnore statement Fix the issue in the ShardRowID option Add limitation (Configurable, the default value is 5000) to the DML statements number within a transaction Fix an issue in the Table/Column aliases returned by the Prepare statement Fix an issue in updating statistics delta Fix a panic error in the Drop Column statement Fix an DML issue when running the Add Column After statement Improve the stability of the GC process by ignoring the regions with GC errors Run GC concurrently to accelerate the GC process Provide syntax support for the CREATE INDEX statement  PD  Reduce the lock overheat of the region heartbeats Fix the issue that a hot region scheduler selects the wrong Leader  TiKV  Use DeleteFilesInRanges to clear stale data and improve the TiKV starting speed Using Decimal in Coprocessor sum Sync the metadata of the received Snapshot compulsorily to ensure its safety  To upgrade from 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.8 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/108/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/108/</guid>
      <description>TiDB 1.0.8 Release Notes On February 11, 2018, TiDB 1.0.8 is released with the following updates:
TiDB  Fix issues in the Outer Join result in some scenarios Optimize the performance of the InsertIntoIgnore statement Fix the issue in the ShardRowID option Add limitation (Configurable, the default value is 5000) to the DML statements number within a transaction Fix an issue in the Table/Column aliases returned by the Prepare statement Fix an issue in updating statistics delta Fix a panic error in the Drop Column statement Fix an DML issue when running the Add Column After statement Improve the stability of the GC process by ignoring the regions with GC errors Run GC concurrently to accelerate the GC process Provide syntax support for the CREATE INDEX statement  PD  Reduce the lock overheat of the region heartbeats Fix the issue that a hot region scheduler selects the wrong Leader  TiKV  Use DeleteFilesInRanges to clear stale data and improve the TiKV starting speed Using Decimal in Coprocessor sum Sync the metadata of the received Snapshot compulsorily to ensure its safety  To upgrade from 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.8 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/108/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/108/</guid>
      <description>TiDB 1.0.8 Release Notes On February 11, 2018, TiDB 1.0.8 is released with the following updates:
TiDB  Fix issues in the Outer Join result in some scenarios Optimize the performance of the InsertIntoIgnore statement Fix the issue in the ShardRowID option Add limitation (Configurable, the default value is 5000) to the DML statements number within a transaction Fix an issue in the Table/Column aliases returned by the Prepare statement Fix an issue in updating statistics delta Fix a panic error in the Drop Column statement Fix an DML issue when running the Add Column After statement Improve the stability of the GC process by ignoring the regions with GC errors Run GC concurrently to accelerate the GC process Provide syntax support for the CREATE INDEX statement  PD  Reduce the lock overheat of the region heartbeats Fix the issue that a hot region scheduler selects the wrong Leader  TiKV  Use DeleteFilesInRanges to clear stale data and improve the TiKV starting speed Using Decimal in Coprocessor sum Sync the metadata of the received Snapshot compulsorily to ensure its safety  To upgrade from 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.0.8 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/108/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/108/</guid>
      <description>TiDB 1.0.8 Release Notes On February 11, 2018, TiDB 1.0.8 is released with the following updates:
TiDB  Fix issues in the Outer Join result in some scenarios Optimize the performance of the InsertIntoIgnore statement Fix the issue in the ShardRowID option Add limitation (Configurable, the default value is 5000) to the DML statements number within a transaction Fix an issue in the Table/Column aliases returned by the Prepare statement Fix an issue in updating statistics delta Fix a panic error in the Drop Column statement Fix an DML issue when running the Add Column After statement Improve the stability of the GC process by ignoring the regions with GC errors Run GC concurrently to accelerate the GC process Provide syntax support for the CREATE INDEX statement  PD  Reduce the lock overheat of the region heartbeats Fix the issue that a hot region scheduler selects the wrong Leader  TiKV  Use DeleteFilesInRanges to clear stale data and improve the TiKV starting speed Using Decimal in Coprocessor sum Sync the metadata of the received Snapshot compulsorily to ensure its safety  To upgrade from 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.1 Alpha Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/11alpha/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/11alpha/</guid>
      <description>TiDB 1.1 Alpha Release Notes 2018 年 1 月 19 日，TiDB 发布 1.1 Alpha 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。
TiDB  SQL parser  兼容更多语法   SQL 查询优化器  统计信息减小内存占用 优化统计信息启动时载入的时间 更精确的代价估算 使用 Count-Min Sketch 更精确地估算点查的代价 支持更复杂的条件，更充分使用索引   SQL 执行器  使用 Chunk 结构重构所有执行器算子，提升分析型语句执行性能，减少内存占用 优化 INSERT IGNORE 语句性能 下推更多的类型和函数 支持更多的 SQL_MODE 优化 Load Data 性能，速度提升 10 倍 优化 Use Database 性能 支持对物理算子内存使用进行统计   Server  支持 PROXY protocol    PD  增加更多的 API 支持 TLS 给 Simulator 增加更多的 case 调度适应不同的 Region size Fix 了一些调度的 bug  TiKV  支持 Raft learner 优化 Raft Snapshot，减少 I/O 开销 支持 TLS 优化 RocksDB 配置，提升性能 优化 Coprocessor count (*) 和点查 unique index 的性能 增加更多的 Failpoint 以及稳定性测试 case 解决 PD 和 TiKV 之间重连的问题 增强数据恢复工具 tikv-ctl 的功能 Region 支持按 table 进行分裂 支持 Delete Range 功能 支持设置 snapshot 导致的 I/O 上限 完善流控机制  </description>
    </item>
    
    <item>
      <title>TiDB 1.1 Alpha Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/11alpha/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/11alpha/</guid>
      <description>TiDB 1.1 Alpha Release Notes 2018 年 1 月 19 日，TiDB 发布 1.1 Alpha 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。
TiDB  SQL parser  兼容更多语法   SQL 查询优化器  统计信息减小内存占用 优化统计信息启动时载入的时间 更精确的代价估算 使用 Count-Min Sketch 更精确地估算点查的代价 支持更复杂的条件，更充分使用索引   SQL 执行器  使用 Chunk 结构重构所有执行器算子，提升分析型语句执行性能，减少内存占用 优化 INSERT IGNORE 语句性能 下推更多的类型和函数 支持更多的 SQL_MODE 优化 Load Data 性能，速度提升 10 倍 优化 Use Database 性能 支持对物理算子内存使用进行统计   Server  支持 PROXY protocol    PD  增加更多的 API 支持 TLS 给 Simulator 增加更多的 case 调度适应不同的 Region size Fix 了一些调度的 bug  TiKV  支持 Raft learner 优化 Raft Snapshot，减少 I/O 开销 支持 TLS 优化 RocksDB 配置，提升性能 优化 Coprocessor count (*) 和点查 unique index 的性能 增加更多的 Failpoint 以及稳定性测试 case 解决 PD 和 TiKV 之间重连的问题 增强数据恢复工具 tikv-ctl 的功能 Region 支持按 table 进行分裂 支持 Delete Range 功能 支持设置 snapshot 导致的 I/O 上限 完善流控机制  </description>
    </item>
    
    <item>
      <title>TiDB 1.1 Alpha Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/11alpha/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/11alpha/</guid>
      <description>TiDB 1.1 Alpha Release Notes 2018 年 1 月 19 日，TiDB 发布 1.1 Alpha 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。
TiDB  SQL parser  兼容更多语法   SQL 查询优化器  统计信息减小内存占用 优化统计信息启动时载入的时间 更精确的代价估算 使用 Count-Min Sketch 更精确地估算点查的代价 支持更复杂的条件，更充分使用索引   SQL 执行器  使用 Chunk 结构重构所有执行器算子，提升分析型语句执行性能，减少内存占用 优化 INSERT IGNORE 语句性能 下推更多的类型和函数 支持更多的 SQL_MODE 优化 Load Data 性能，速度提升 10 倍 优化 Use Database 性能 支持对物理算子内存使用进行统计   Server  支持 PROXY protocol    PD  增加更多的 API 支持 TLS 给 Simulator 增加更多的 case 调度适应不同的 Region size Fix 了一些调度的 bug  TiKV  支持 Raft learner 优化 Raft Snapshot，减少 I/O 开销 支持 TLS 优化 RocksDB 配置，提升性能 优化 Coprocessor count (*) 和点查 unique index 的性能 增加更多的 Failpoint 以及稳定性测试 case 解决 PD 和 TiKV 之间重连的问题 增强数据恢复工具 tikv-ctl 的功能 Region 支持按 table 进行分裂 支持 Delete Range 功能 支持设置 snapshot 导致的 I/O 上限 完善流控机制  </description>
    </item>
    
    <item>
      <title>TiDB 1.1 Alpha Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/11alpha/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/11alpha/</guid>
      <description>TiDB 1.1 Alpha Release Notes 2018 年 1 月 19 日，TiDB 发布 1.1 Alpha 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。
TiDB  SQL parser  兼容更多语法   SQL 查询优化器  统计信息减小内存占用 优化统计信息启动时载入的时间 更精确的代价估算 使用 Count-Min Sketch 更精确地估算点查的代价 支持更复杂的条件，更充分使用索引   SQL 执行器  使用 Chunk 结构重构所有执行器算子，提升分析型语句执行性能，减少内存占用 优化 INSERT IGNORE 语句性能 下推更多的类型和函数 支持更多的 SQL_MODE 优化 Load Data 性能，速度提升 10 倍 优化 Use Database 性能 支持对物理算子内存使用进行统计   Server  支持 PROXY protocol    PD  增加更多的 API 支持 TLS 给 Simulator 增加更多的 case 调度适应不同的 Region size Fix 了一些调度的 bug  TiKV  支持 Raft learner 优化 Raft Snapshot，减少 I/O 开销 支持 TLS 优化 RocksDB 配置，提升性能 优化 Coprocessor count (*) 和点查 unique index 的性能 增加更多的 Failpoint 以及稳定性测试 case 解决 PD 和 TiKV 之间重连的问题 增强数据恢复工具 tikv-ctl 的功能 Region 支持按 table 进行分裂 支持 Delete Range 功能 支持设置 snapshot 导致的 I/O 上限 完善流控机制  </description>
    </item>
    
    <item>
      <title>TiDB 1.1 Alpha Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/11alpha/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/11alpha/</guid>
      <description>TiDB 1.1 Alpha Release Notes On January 19, 2018, TiDB 1.1 Alpha is released. This release has great improvement in MySQL compatibility, SQL optimization, stability, and performance.
TiDB  SQL parser  Support more syntax   SQL query optimizer  Use more compact structure to reduce statistics info memory usage Speed up loading statistics info when starting tidb-server Provide more accurate query cost evaluation Use Count-Min Sketch to estimate the cost of queries using unique index more accurately Support more complex conditions to make full use of index   SQL executor  Refactor all executor operators using Chunk architecture, improve the execution performance of analytical statements and reduce memory usage Optimize performance of the INSERT IGNORE statement Push down more types and functions to TiKV Support more SQL_MODE Optimize the Load Data performance to increase the speed by 10 times Optimize the Use Database performance Support statistics on the memory usage of physical operators   Server  Support the PROXY protocol    PD  Add more APIs Support TLS Add more cases for scheduling Simulator Schedule to adapt to different Region sizes Fix some bugs about scheduling  TiKV  Support Raft learner Optimize Raft Snapshot and reduce the I/O overhead Support TLS Optimize the RocksDB configuration to improve performance Optimize count (*) and query performance of unique index in Coprocessor Add more failpoints and stability test cases Solve the reconnection issue between PD and TiKV Enhance the features of the data recovery tool tikv-ctl Support splitting according to table in Region Support the Delete Range feature Support setting the I/O limit caused by snapshot Improve the flow control mechanism  </description>
    </item>
    
    <item>
      <title>TiDB 1.1 Alpha Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/11alpha/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/11alpha/</guid>
      <description>TiDB 1.1 Alpha Release Notes On January 19, 2018, TiDB 1.1 Alpha is released. This release has great improvement in MySQL compatibility, SQL optimization, stability, and performance.
TiDB  SQL parser  Support more syntax   SQL query optimizer  Use more compact structure to reduce statistics info memory usage Speed up loading statistics info when starting tidb-server Provide more accurate query cost evaluation Use Count-Min Sketch to estimate the cost of queries using unique index more accurately Support more complex conditions to make full use of index   SQL executor  Refactor all executor operators using Chunk architecture, improve the execution performance of analytical statements and reduce memory usage Optimize performance of the INSERT IGNORE statement Push down more types and functions to TiKV Support more SQL_MODE Optimize the Load Data performance to increase the speed by 10 times Optimize the Use Database performance Support statistics on the memory usage of physical operators   Server  Support the PROXY protocol    PD  Add more APIs Support TLS Add more cases for scheduling Simulator Schedule to adapt to different Region sizes Fix some bugs about scheduling  TiKV  Support Raft learner Optimize Raft Snapshot and reduce the I/O overhead Support TLS Optimize the RocksDB configuration to improve performance Optimize count (*) and query performance of unique index in Coprocessor Add more failpoints and stability test cases Solve the reconnection issue between PD and TiKV Enhance the features of the data recovery tool tikv-ctl Support splitting according to table in Region Support the Delete Range feature Support setting the I/O limit caused by snapshot Improve the flow control mechanism  </description>
    </item>
    
    <item>
      <title>TiDB 1.1 Alpha Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/11alpha/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/11alpha/</guid>
      <description>TiDB 1.1 Alpha Release Notes On January 19, 2018, TiDB 1.1 Alpha is released. This release has great improvement in MySQL compatibility, SQL optimization, stability, and performance.
TiDB  SQL parser  Support more syntax   SQL query optimizer  Use more compact structure to reduce statistics info memory usage Speed up loading statistics info when starting tidb-server Provide more accurate query cost evaluation Use Count-Min Sketch to estimate the cost of queries using unique index more accurately Support more complex conditions to make full use of index   SQL executor  Refactor all executor operators using Chunk architecture, improve the execution performance of analytical statements and reduce memory usage Optimize performance of the INSERT IGNORE statement Push down more types and functions to TiKV Support more SQL_MODE Optimize the Load Data performance to increase the speed by 10 times Optimize the Use Database performance Support statistics on the memory usage of physical operators   Server  Support the PROXY protocol    PD  Add more APIs Support TLS Add more cases for scheduling Simulator Schedule to adapt to different Region sizes Fix some bugs about scheduling  TiKV  Support Raft learner Optimize Raft Snapshot and reduce the I/O overhead Support TLS Optimize the RocksDB configuration to improve performance Optimize count (*) and query performance of unique index in Coprocessor Add more failpoints and stability test cases Solve the reconnection issue between PD and TiKV Enhance the features of the data recovery tool tikv-ctl Support splitting according to table in Region Support the Delete Range feature Support setting the I/O limit caused by snapshot Improve the flow control mechanism  </description>
    </item>
    
    <item>
      <title>TiDB 1.1 Alpha Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/11alpha/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/11alpha/</guid>
      <description>TiDB 1.1 Alpha Release Notes On January 19, 2018, TiDB 1.1 Alpha is released. This release has great improvement in MySQL compatibility, SQL optimization, stability, and performance.
TiDB  SQL parser  Support more syntax   SQL query optimizer  Use more compact structure to reduce statistics info memory usage Speed up loading statistics info when starting tidb-server Provide more accurate query cost evaluation Use Count-Min Sketch to estimate the cost of queries using unique index more accurately Support more complex conditions to make full use of index   SQL executor  Refactor all executor operators using Chunk architecture, improve the execution performance of analytical statements and reduce memory usage Optimize performance of the INSERT IGNORE statement Push down more types and functions to TiKV Support more SQL_MODE Optimize the Load Data performance to increase the speed by 10 times Optimize the Use Database performance Support statistics on the memory usage of physical operators   Server  Support the PROXY protocol    PD  Add more APIs Support TLS Add more cases for scheduling Simulator Schedule to adapt to different Region sizes Fix some bugs about scheduling  TiKV  Support Raft learner Optimize Raft Snapshot and reduce the I/O overhead Support TLS Optimize the RocksDB configuration to improve performance Optimize count (*) and query performance of unique index in Coprocessor Add more failpoints and stability test cases Solve the reconnection issue between PD and TiKV Enhance the features of the data recovery tool tikv-ctl Support splitting according to table in Region Support the Delete Range feature Support setting the I/O limit caused by snapshot Improve the flow control mechanism  </description>
    </item>
    
    <item>
      <title>TiDB 1.1 Beta Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/11beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/11beta/</guid>
      <description>TiDB 1.1 Beta Release Notes 2018 年 2 月 24 日，TiDB 发布 1.1 Beta 版。该版本在 1.1 Alpha 版的基础上，对 MySQL 兼容性、系统稳定性做了很多改进。
TiDB  添加更多监控项, 优化日志 兼容更多 MySQL 语法 在 information_schema 中支持显示建表时间 提速包含 MaxOneRow 算子的查询 控制 Join 产生的中间结果集大小，进一步减少 Join 的内存使用 增加 tidb_config session 变量，输出当前 TiDB 配置 修复 Union 和 Index Join 算子中遇到的 panic 问题 修复 Sort Merge Join 算子在部分场景下结果错误的问题 修复 Show Index 语句显示正在添加过程中的索引的问题 修复 Drop Stats 语句失败的问题 优化 SQL 引擎查询性能，Sysbench 的 Select/OLTP 测试结果提升 10% 使用新的执行引擎提升优化器中的子查询计算速度；相比 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.1 Beta Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/11beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/11beta/</guid>
      <description>TiDB 1.1 Beta Release Notes 2018 年 2 月 24 日，TiDB 发布 1.1 Beta 版。该版本在 1.1 Alpha 版的基础上，对 MySQL 兼容性、系统稳定性做了很多改进。
TiDB  添加更多监控项, 优化日志 兼容更多 MySQL 语法 在 information_schema 中支持显示建表时间 提速包含 MaxOneRow 算子的查询 控制 Join 产生的中间结果集大小，进一步减少 Join 的内存使用 增加 tidb_config session 变量，输出当前 TiDB 配置 修复 Union 和 Index Join 算子中遇到的 panic 问题 修复 Sort Merge Join 算子在部分场景下结果错误的问题 修复 Show Index 语句显示正在添加过程中的索引的问题 修复 Drop Stats 语句失败的问题 优化 SQL 引擎查询性能，Sysbench 的 Select/OLTP 测试结果提升 10% 使用新的执行引擎提升优化器中的子查询计算速度；相比 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.1 Beta Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/11beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/11beta/</guid>
      <description>TiDB 1.1 Beta Release Notes 2018 年 2 月 24 日，TiDB 发布 1.1 Beta 版。该版本在 1.1 Alpha 版的基础上，对 MySQL 兼容性、系统稳定性做了很多改进。
TiDB  添加更多监控项, 优化日志 兼容更多 MySQL 语法 在 information_schema 中支持显示建表时间 提速包含 MaxOneRow 算子的查询 控制 Join 产生的中间结果集大小，进一步减少 Join 的内存使用 增加 tidb_config session 变量，输出当前 TiDB 配置 修复 Union 和 Index Join 算子中遇到的 panic 问题 修复 Sort Merge Join 算子在部分场景下结果错误的问题 修复 Show Index 语句显示正在添加过程中的索引的问题 修复 Drop Stats 语句失败的问题 优化 SQL 引擎查询性能，Sysbench 的 Select/OLTP 测试结果提升 10% 使用新的执行引擎提升优化器中的子查询计算速度；相比 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.1 Beta Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/11beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/11beta/</guid>
      <description>TiDB 1.1 Beta Release Notes 2018 年 2 月 24 日，TiDB 发布 1.1 Beta 版。该版本在 1.1 Alpha 版的基础上，对 MySQL 兼容性、系统稳定性做了很多改进。
TiDB  添加更多监控项, 优化日志 兼容更多 MySQL 语法 在 information_schema 中支持显示建表时间 提速包含 MaxOneRow 算子的查询 控制 Join 产生的中间结果集大小，进一步减少 Join 的内存使用 增加 tidb_config session 变量，输出当前 TiDB 配置 修复 Union 和 Index Join 算子中遇到的 panic 问题 修复 Sort Merge Join 算子在部分场景下结果错误的问题 修复 Show Index 语句显示正在添加过程中的索引的问题 修复 Drop Stats 语句失败的问题 优化 SQL 引擎查询性能，Sysbench 的 Select/OLTP 测试结果提升 10% 使用新的执行引擎提升优化器中的子查询计算速度；相比 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.1 Beta Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/11beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/11beta/</guid>
      <description>TiDB 1.1 Beta Release Notes On February 24, 2018, TiDB 1.1 Beta is released. This release has great improvement in MySQL compatibility, SQL optimization, stability, and performance.
TiDB  Add more monitoring metrics and refine the log Compatible with more MySQL syntax Support displaying the table creating time in information_schema Optimize queries containing the MaxOneRow operator Configure the size of intermediate result sets generated by Join, to further reduce the memory used by Join Add the tidb_config session variable to output the current TiDB configuration Fix the panic issue in the Union and Index Join operators Fix the wrong result issue of the Sort Merge Join operator in some scenarios Fix the issue that the Show Index statement shows indexes that are in the process of adding Fix the failure of the Drop Stats statement Optimize the query performance of the SQL engine to improve the test result of the Sysbench Select/OLTP by 10% Improve the computing speed of subqueries in the optimizer using the new execution engine; compared with TiDB 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.1 Beta Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/11beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/11beta/</guid>
      <description>TiDB 1.1 Beta Release Notes On February 24, 2018, TiDB 1.1 Beta is released. This release has great improvement in MySQL compatibility, SQL optimization, stability, and performance.
TiDB  Add more monitoring metrics and refine the log Compatible with more MySQL syntax Support displaying the table creating time in information_schema Optimize queries containing the MaxOneRow operator Configure the size of intermediate result sets generated by Join, to further reduce the memory used by Join Add the tidb_config session variable to output the current TiDB configuration Fix the panic issue in the Union and Index Join operators Fix the wrong result issue of the Sort Merge Join operator in some scenarios Fix the issue that the Show Index statement shows indexes that are in the process of adding Fix the failure of the Drop Stats statement Optimize the query performance of the SQL engine to improve the test result of the Sysbench Select/OLTP by 10% Improve the computing speed of subqueries in the optimizer using the new execution engine; compared with TiDB 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.1 Beta Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/11beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/11beta/</guid>
      <description>TiDB 1.1 Beta Release Notes On February 24, 2018, TiDB 1.1 Beta is released. This release has great improvement in MySQL compatibility, SQL optimization, stability, and performance.
TiDB  Add more monitoring metrics and refine the log Compatible with more MySQL syntax Support displaying the table creating time in information_schema Optimize queries containing the MaxOneRow operator Configure the size of intermediate result sets generated by Join, to further reduce the memory used by Join Add the tidb_config session variable to output the current TiDB configuration Fix the panic issue in the Union and Index Join operators Fix the wrong result issue of the Sort Merge Join operator in some scenarios Fix the issue that the Show Index statement shows indexes that are in the process of adding Fix the failure of the Drop Stats statement Optimize the query performance of the SQL engine to improve the test result of the Sysbench Select/OLTP by 10% Improve the computing speed of subqueries in the optimizer using the new execution engine; compared with TiDB 1.</description>
    </item>
    
    <item>
      <title>TiDB 1.1 Beta Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/11beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/11beta/</guid>
      <description>TiDB 1.1 Beta Release Notes On February 24, 2018, TiDB 1.1 Beta is released. This release has great improvement in MySQL compatibility, SQL optimization, stability, and performance.
TiDB  Add more monitoring metrics and refine the log Compatible with more MySQL syntax Support displaying the table creating time in information_schema Optimize queries containing the MaxOneRow operator Configure the size of intermediate result sets generated by Join, to further reduce the memory used by Join Add the tidb_config session variable to output the current TiDB configuration Fix the panic issue in the Union and Index Join operators Fix the wrong result issue of the Sort Merge Join operator in some scenarios Fix the issue that the Show Index statement shows indexes that are in the process of adding Fix the failure of the Drop Stats statement Optimize the query performance of the SQL engine to improve the test result of the Sysbench Select/OLTP by 10% Improve the computing speed of subqueries in the optimizer using the new execution engine; compared with TiDB 1.</description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2rc1/</guid>
      <description>TiDB 2.0 RC1 Release Notes 2018 年 3 月 9 日，TiDB 发布 2.0 RC1 版。该版本在上一版的基础上，对 MySQL 兼容性、系统稳定性和优化器做了很多改进。
TiDB  支持限制单条 SQL 语句使用内存的大小，减少程序 OOM 风险 支持下推流式聚合算子到 TiKV 支持配置文件的合法性检测 支持 HTTP API 获取 TiDB 参数信息 Parser 兼容更多 MySQL 语法 提升对 Navicat 的兼容性 优化器提升，提取多个 OR 条件的公共表达式，选取更优执行计划 优化器提升，在更多场景下将子查询转换成 Join 算子，选取更优查询计划 使用 Batch 方式 Resolve Lock，提升垃圾回收速度 修复 Boolean 类型的字段长度，提升兼容性 优化 Add Index 操作，所有的读写操作采用低优先级，减小对在线业务的影响  PD  优化检查 Region 状态的代码逻辑，提升程序性能 优化异常情况下日志信息输出，便于调试 修复监控中关于 TiKV 节点磁盘空间不足情况的统计 修复开启 TLS 时健康检查接口误报的问题 修复同时添加副本数量可能超过配置阈值的问题，提升程序稳定性  TiKV  修复 PD leader 切换，gRPC call 没被 cancel 的问题 对重要配置进行保护，第一次设置之后不允许变更 增加获取 metrics 的 gRPC API 启动时候，检查是否使用 SSD 使用 ReadPool 优化读性能，raw get 测试性能提升 30% 完善 metrics，优化 metrics 的使用  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2rc1/</guid>
      <description>TiDB 2.0 RC1 Release Notes 2018 年 3 月 9 日，TiDB 发布 2.0 RC1 版。该版本在上一版的基础上，对 MySQL 兼容性、系统稳定性和优化器做了很多改进。
TiDB  支持限制单条 SQL 语句使用内存的大小，减少程序 OOM 风险 支持下推流式聚合算子到 TiKV 支持配置文件的合法性检测 支持 HTTP API 获取 TiDB 参数信息 Parser 兼容更多 MySQL 语法 提升对 Navicat 的兼容性 优化器提升，提取多个 OR 条件的公共表达式，选取更优执行计划 优化器提升，在更多场景下将子查询转换成 Join 算子，选取更优查询计划 使用 Batch 方式 Resolve Lock，提升垃圾回收速度 修复 Boolean 类型的字段长度，提升兼容性 优化 Add Index 操作，所有的读写操作采用低优先级，减小对在线业务的影响  PD  优化检查 Region 状态的代码逻辑，提升程序性能 优化异常情况下日志信息输出，便于调试 修复监控中关于 TiKV 节点磁盘空间不足情况的统计 修复开启 TLS 时健康检查接口误报的问题 修复同时添加副本数量可能超过配置阈值的问题，提升程序稳定性  TiKV  修复 PD leader 切换，gRPC call 没被 cancel 的问题 对重要配置进行保护，第一次设置之后不允许变更 增加获取 metrics 的 gRPC API 启动时候，检查是否使用 SSD 使用 ReadPool 优化读性能，raw get 测试性能提升 30% 完善 metrics，优化 metrics 的使用  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2rc1/</guid>
      <description>TiDB 2.0 RC1 Release Notes 2018 年 3 月 9 日，TiDB 发布 2.0 RC1 版。该版本在上一版的基础上，对 MySQL 兼容性、系统稳定性和优化器做了很多改进。
TiDB  支持限制单条 SQL 语句使用内存的大小，减少程序 OOM 风险 支持下推流式聚合算子到 TiKV 支持配置文件的合法性检测 支持 HTTP API 获取 TiDB 参数信息 Parser 兼容更多 MySQL 语法 提升对 Navicat 的兼容性 优化器提升，提取多个 OR 条件的公共表达式，选取更优执行计划 优化器提升，在更多场景下将子查询转换成 Join 算子，选取更优查询计划 使用 Batch 方式 Resolve Lock，提升垃圾回收速度 修复 Boolean 类型的字段长度，提升兼容性 优化 Add Index 操作，所有的读写操作采用低优先级，减小对在线业务的影响  PD  优化检查 Region 状态的代码逻辑，提升程序性能 优化异常情况下日志信息输出，便于调试 修复监控中关于 TiKV 节点磁盘空间不足情况的统计 修复开启 TLS 时健康检查接口误报的问题 修复同时添加副本数量可能超过配置阈值的问题，提升程序稳定性  TiKV  修复 PD leader 切换，gRPC call 没被 cancel 的问题 对重要配置进行保护，第一次设置之后不允许变更 增加获取 metrics 的 gRPC API 启动时候，检查是否使用 SSD 使用 ReadPool 优化读性能，raw get 测试性能提升 30% 完善 metrics，优化 metrics 的使用  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2rc1/</guid>
      <description>TiDB 2.0 RC1 Release Notes 2018 年 3 月 9 日，TiDB 发布 2.0 RC1 版。该版本在上一版的基础上，对 MySQL 兼容性、系统稳定性和优化器做了很多改进。
TiDB  支持限制单条 SQL 语句使用内存的大小，减少程序 OOM 风险 支持下推流式聚合算子到 TiKV 支持配置文件的合法性检测 支持 HTTP API 获取 TiDB 参数信息 Parser 兼容更多 MySQL 语法 提升对 Navicat 的兼容性 优化器提升，提取多个 OR 条件的公共表达式，选取更优执行计划 优化器提升，在更多场景下将子查询转换成 Join 算子，选取更优查询计划 使用 Batch 方式 Resolve Lock，提升垃圾回收速度 修复 Boolean 类型的字段长度，提升兼容性 优化 Add Index 操作，所有的读写操作采用低优先级，减小对在线业务的影响  PD  优化检查 Region 状态的代码逻辑，提升程序性能 优化异常情况下日志信息输出，便于调试 修复监控中关于 TiKV 节点磁盘空间不足情况的统计 修复开启 TLS 时健康检查接口误报的问题 修复同时添加副本数量可能超过配置阈值的问题，提升程序稳定性  TiKV  修复 PD leader 切换，gRPC call 没被 cancel 的问题 对重要配置进行保护，第一次设置之后不允许变更 增加获取 metrics 的 gRPC API 启动时候，检查是否使用 SSD 使用 ReadPool 优化读性能，raw get 测试性能提升 30% 完善 metrics，优化 metrics 的使用  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC1 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2rc1/</guid>
      <description>TiDB 2.0 RC1 Release Notes On March 9, 2018, TiDB 2.0 RC1 is released. This release has great improvement in MySQL compatibility, SQL optimization and stability.
TiDB  Support limiting the memory usage by a single SQL statement, to reduce the risk of OOM Support pushing the Stream Aggregate operator down to TiKV Support validating the configuration file Support obtaining the information of TiDB configuration through HTTP API Compatible with more MySQL syntax in Parser Improve the compatibility with Navicat Improve the optimizer and extract common expressions with multiple OR conditions, to choose better query plan Improve the optimizer and convert subqueries to Join operators in more scenarios, to choose better query plan Resolve Lock in the Batch mode to increase the garbage collection speed Fix the length of Boolean field to improve compatibility Optimize the Add Index operation and give lower priority to all write and read operations, to reduce the impact on online business  PD  Optimize the logic of code used to check the Region status to improve performance Optimize the output of log information in abnormal conditions to facilitate debugging Fix the monitor statistics that the disk space of TiKV nodes is not enough Fix the wrong reporting issue of the health interface when TLS is enabled Fix the issue that concurrent addition of replicas might exceed the threshold value of configuration, to improve stability  TiKV  Fix the issue that gRPC call is not cancelled when PD leaders switch Protect important configuration which cannot be changed after initial configuration Add gRPC APIs used to obtain metrics Check whether SSD is used when you start the cluster Optimize the read performance using ReadPool, and improve the performance by 30% in the raw get test Improve metrics and optimize the usage of metrics  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC1 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2rc1/</guid>
      <description>TiDB 2.0 RC1 Release Notes On March 9, 2018, TiDB 2.0 RC1 is released. This release has great improvement in MySQL compatibility, SQL optimization and stability.
TiDB  Support limiting the memory usage by a single SQL statement, to reduce the risk of OOM Support pushing the Stream Aggregate operator down to TiKV Support validating the configuration file Support obtaining the information of TiDB configuration through HTTP API Compatible with more MySQL syntax in Parser Improve the compatibility with Navicat Improve the optimizer and extract common expressions with multiple OR conditions, to choose better query plan Improve the optimizer and convert subqueries to Join operators in more scenarios, to choose better query plan Resolve Lock in the Batch mode to increase the garbage collection speed Fix the length of Boolean field to improve compatibility Optimize the Add Index operation and give lower priority to all write and read operations, to reduce the impact on online business  PD  Optimize the logic of code used to check the Region status to improve performance Optimize the output of log information in abnormal conditions to facilitate debugging Fix the monitor statistics that the disk space of TiKV nodes is not enough Fix the wrong reporting issue of the health interface when TLS is enabled Fix the issue that concurrent addition of replicas might exceed the threshold value of configuration, to improve stability  TiKV  Fix the issue that gRPC call is not cancelled when PD leaders switch Protect important configuration which cannot be changed after initial configuration Add gRPC APIs used to obtain metrics Check whether SSD is used when you start the cluster Optimize the read performance using ReadPool, and improve the performance by 30% in the raw get test Improve metrics and optimize the usage of metrics  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC1 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2rc1/</guid>
      <description>TiDB 2.0 RC1 Release Notes On March 9, 2018, TiDB 2.0 RC1 is released. This release has great improvement in MySQL compatibility, SQL optimization and stability.
TiDB  Support limiting the memory usage by a single SQL statement, to reduce the risk of OOM Support pushing the Stream Aggregate operator down to TiKV Support validating the configuration file Support obtaining the information of TiDB configuration through HTTP API Compatible with more MySQL syntax in Parser Improve the compatibility with Navicat Improve the optimizer and extract common expressions with multiple OR conditions, to choose better query plan Improve the optimizer and convert subqueries to Join operators in more scenarios, to choose better query plan Resolve Lock in the Batch mode to increase the garbage collection speed Fix the length of Boolean field to improve compatibility Optimize the Add Index operation and give lower priority to all write and read operations, to reduce the impact on online business  PD  Optimize the logic of code used to check the Region status to improve performance Optimize the output of log information in abnormal conditions to facilitate debugging Fix the monitor statistics that the disk space of TiKV nodes is not enough Fix the wrong reporting issue of the health interface when TLS is enabled Fix the issue that concurrent addition of replicas might exceed the threshold value of configuration, to improve stability  TiKV  Fix the issue that gRPC call is not cancelled when PD leaders switch Protect important configuration which cannot be changed after initial configuration Add gRPC APIs used to obtain metrics Check whether SSD is used when you start the cluster Optimize the read performance using ReadPool, and improve the performance by 30% in the raw get test Improve metrics and optimize the usage of metrics  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC1 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2rc1/</guid>
      <description>TiDB 2.0 RC1 Release Notes On March 9, 2018, TiDB 2.0 RC1 is released. This release has great improvement in MySQL compatibility, SQL optimization and stability.
TiDB  Support limiting the memory usage by a single SQL statement, to reduce the risk of OOM Support pushing the Stream Aggregate operator down to TiKV Support validating the configuration file Support obtaining the information of TiDB configuration through HTTP API Compatible with more MySQL syntax in Parser Improve the compatibility with Navicat Improve the optimizer and extract common expressions with multiple OR conditions, to choose better query plan Improve the optimizer and convert subqueries to Join operators in more scenarios, to choose better query plan Resolve Lock in the Batch mode to increase the garbage collection speed Fix the length of Boolean field to improve compatibility Optimize the Add Index operation and give lower priority to all write and read operations, to reduce the impact on online business  PD  Optimize the logic of code used to check the Region status to improve performance Optimize the output of log information in abnormal conditions to facilitate debugging Fix the monitor statistics that the disk space of TiKV nodes is not enough Fix the wrong reporting issue of the health interface when TLS is enabled Fix the issue that concurrent addition of replicas might exceed the threshold value of configuration, to improve stability  TiKV  Fix the issue that gRPC call is not cancelled when PD leaders switch Protect important configuration which cannot be changed after initial configuration Add gRPC APIs used to obtain metrics Check whether SSD is used when you start the cluster Optimize the read performance using ReadPool, and improve the performance by 30% in the raw get test Improve metrics and optimize the usage of metrics  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2rc3/</guid>
      <description>TiDB 2.0 RC3 Release Notes 2018 年 3 月 23 日，TiDB 发布 2.0 RC3 版。该版本在 2.0 RC2 版的基础上，对 MySQL 兼容性、系统稳定性和优化器做了很多改进。
TiDB  修复部分场景下 MAX/MIN 结果不正确的问题 修复部分场景下 Sort Merge Join 结果未按照 Join Key 有序的问题 修复边界条件下 uint 和 int 比较的错误 完善浮点数类型的长度和精度检查，提升 MySQL 兼容性 完善时间类型解析报错日志，添加更多错误信息 完善内存控制，新增对 IndexLookupExecutor 的内存统计 优化 ADD INDEX 的执行速度，部分场景下速度大幅度提升 GROUP BY 子句为空时使用 Stream Aggregation 算子，提升速度 支持通过 STRAIGHT_JOIN 来关闭优化器的 Join Reorder 优化 ADMIN SHOW DDL JOBS 输出更详细的 DDL 任务状态信息 支持 ADMIN SHOW DDL JOB QUERIES 查询当前正在运行的 DDL 任务的原始语句 支持 ADMIN RECOVER INDEX 命令，用于灾难恢复情况下修复索引数据 ADD INDEX 操作变更为低优先级，降低对线上业务影响 支持参数为 JSON 类型的 SUM/AVG 等聚合函数 支持配置文件修改 lower_case_table_names 系统变量，用于支持 OGG 数据同步工具 提升对 Navicat 管理工具的兼容性 支持在 CRUD 操作中使用隐式的行 ID  PD  支持 Region Merge，合并数据删除后产生的空 Region 或小 Region 添加副本时忽略有大量 pending peer 的节点，提升恢复副本及下线的速度 优化有大量空 Region 时产生的频繁调度问题 优化不同 label 中资源不均衡的场景中 leader balance 调度的速度 添加更多异常 Region 的统计  TiKV  支持 Region Merge Raft snapshot 流程完成之后立刻通知 PD，加速调度 增加 Raw DeleteRange API 增加 GetMetric API 减缓 RocksDB sync 文件造成的 I/O 波动 优化了对 delete 掉数据的空间回收机制 完善数据恢复工具 tikv-ctl 解决了由于 snapshot 导致下线节点慢的问题 Coprocessor 支持 streaming 支持 Readpool，raw_get/get/batch_get 性能提升 30% 支持配置 Coprocessor 请求超时时间 Coprocessor 支持 streaming aggregation 上报 Region heartbeat 时携带时间信息 限制 snapshot 文件的空间使用，防止占用过多磁盘空间 对长时间不能选出 leader 的 Region 进行记录上报 加速启动阶段的垃圾清理工作 根据 compaction 事件及时更新对应 Region 的 size 信息 对 scan lock 的大小进行限制，防止请求超时 使用 DeleteRange 加速 Region 删除 支持在线修改 RocksDB 的参数  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2rc3/</guid>
      <description>TiDB 2.0 RC3 Release Notes 2018 年 3 月 23 日，TiDB 发布 2.0 RC3 版。该版本在 2.0 RC2 版的基础上，对 MySQL 兼容性、系统稳定性和优化器做了很多改进。
TiDB  修复部分场景下 MAX/MIN 结果不正确的问题 修复部分场景下 Sort Merge Join 结果未按照 Join Key 有序的问题 修复边界条件下 uint 和 int 比较的错误 完善浮点数类型的长度和精度检查，提升 MySQL 兼容性 完善时间类型解析报错日志，添加更多错误信息 完善内存控制，新增对 IndexLookupExecutor 的内存统计 优化 ADD INDEX 的执行速度，部分场景下速度大幅度提升 GROUP BY 子句为空时使用 Stream Aggregation 算子，提升速度 支持通过 STRAIGHT_JOIN 来关闭优化器的 Join Reorder 优化 ADMIN SHOW DDL JOBS 输出更详细的 DDL 任务状态信息 支持 ADMIN SHOW DDL JOB QUERIES 查询当前正在运行的 DDL 任务的原始语句 支持 ADMIN RECOVER INDEX 命令，用于灾难恢复情况下修复索引数据 ADD INDEX 操作变更为低优先级，降低对线上业务影响 支持参数为 JSON 类型的 SUM/AVG 等聚合函数 支持配置文件修改 lower_case_table_names 系统变量，用于支持 OGG 数据同步工具 提升对 Navicat 管理工具的兼容性 支持在 CRUD 操作中使用隐式的行 ID  PD  支持 Region Merge，合并数据删除后产生的空 Region 或小 Region 添加副本时忽略有大量 pending peer 的节点，提升恢复副本及下线的速度 优化有大量空 Region 时产生的频繁调度问题 优化不同 label 中资源不均衡的场景中 leader balance 调度的速度 添加更多异常 Region 的统计  TiKV  支持 Region Merge Raft snapshot 流程完成之后立刻通知 PD，加速调度 增加 Raw DeleteRange API 增加 GetMetric API 减缓 RocksDB sync 文件造成的 I/O 波动 优化了对 delete 掉数据的空间回收机制 完善数据恢复工具 tikv-ctl 解决了由于 snapshot 导致下线节点慢的问题 Coprocessor 支持 streaming 支持 Readpool，raw_get/get/batch_get 性能提升 30% 支持配置 Coprocessor 请求超时时间 Coprocessor 支持 streaming aggregation 上报 Region heartbeat 时携带时间信息 限制 snapshot 文件的空间使用，防止占用过多磁盘空间 对长时间不能选出 leader 的 Region 进行记录上报 加速启动阶段的垃圾清理工作 根据 compaction 事件及时更新对应 Region 的 size 信息 对 scan lock 的大小进行限制，防止请求超时 使用 DeleteRange 加速 Region 删除 支持在线修改 RocksDB 的参数  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2rc3/</guid>
      <description>TiDB 2.0 RC3 Release Notes 2018 年 3 月 23 日，TiDB 发布 2.0 RC3 版。该版本在 2.0 RC2 版的基础上，对 MySQL 兼容性、系统稳定性和优化器做了很多改进。
TiDB  修复部分场景下 MAX/MIN 结果不正确的问题 修复部分场景下 Sort Merge Join 结果未按照 Join Key 有序的问题 修复边界条件下 uint 和 int 比较的错误 完善浮点数类型的长度和精度检查，提升 MySQL 兼容性 完善时间类型解析报错日志，添加更多错误信息 完善内存控制，新增对 IndexLookupExecutor 的内存统计 优化 ADD INDEX 的执行速度，部分场景下速度大幅度提升 GROUP BY 子句为空时使用 Stream Aggregation 算子，提升速度 支持通过 STRAIGHT_JOIN 来关闭优化器的 Join Reorder 优化 ADMIN SHOW DDL JOBS 输出更详细的 DDL 任务状态信息 支持 ADMIN SHOW DDL JOB QUERIES 查询当前正在运行的 DDL 任务的原始语句 支持 ADMIN RECOVER INDEX 命令，用于灾难恢复情况下修复索引数据 ADD INDEX 操作变更为低优先级，降低对线上业务影响 支持参数为 JSON 类型的 SUM/AVG 等聚合函数 支持配置文件修改 lower_case_table_names 系统变量，用于支持 OGG 数据同步工具 提升对 Navicat 管理工具的兼容性 支持在 CRUD 操作中使用隐式的行 ID  PD  支持 Region Merge，合并数据删除后产生的空 Region 或小 Region 添加副本时忽略有大量 pending peer 的节点，提升恢复副本及下线的速度 优化有大量空 Region 时产生的频繁调度问题 优化不同 label 中资源不均衡的场景中 leader balance 调度的速度 添加更多异常 Region 的统计  TiKV  支持 Region Merge Raft snapshot 流程完成之后立刻通知 PD，加速调度 增加 Raw DeleteRange API 增加 GetMetric API 减缓 RocksDB sync 文件造成的 I/O 波动 优化了对 delete 掉数据的空间回收机制 完善数据恢复工具 tikv-ctl 解决了由于 snapshot 导致下线节点慢的问题 Coprocessor 支持 streaming 支持 Readpool，raw_get/get/batch_get 性能提升 30% 支持配置 Coprocessor 请求超时时间 Coprocessor 支持 streaming aggregation 上报 Region heartbeat 时携带时间信息 限制 snapshot 文件的空间使用，防止占用过多磁盘空间 对长时间不能选出 leader 的 Region 进行记录上报 加速启动阶段的垃圾清理工作 根据 compaction 事件及时更新对应 Region 的 size 信息 对 scan lock 的大小进行限制，防止请求超时 使用 DeleteRange 加速 Region 删除 支持在线修改 RocksDB 的参数  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2rc3/</guid>
      <description>TiDB 2.0 RC3 Release Notes 2018 年 3 月 23 日，TiDB 发布 2.0 RC3 版。该版本在 2.0 RC2 版的基础上，对 MySQL 兼容性、系统稳定性和优化器做了很多改进。
TiDB  修复部分场景下 MAX/MIN 结果不正确的问题 修复部分场景下 Sort Merge Join 结果未按照 Join Key 有序的问题 修复边界条件下 uint 和 int 比较的错误 完善浮点数类型的长度和精度检查，提升 MySQL 兼容性 完善时间类型解析报错日志，添加更多错误信息 完善内存控制，新增对 IndexLookupExecutor 的内存统计 优化 ADD INDEX 的执行速度，部分场景下速度大幅度提升 GROUP BY 子句为空时使用 Stream Aggregation 算子，提升速度 支持通过 STRAIGHT_JOIN 来关闭优化器的 Join Reorder 优化 ADMIN SHOW DDL JOBS 输出更详细的 DDL 任务状态信息 支持 ADMIN SHOW DDL JOB QUERIES 查询当前正在运行的 DDL 任务的原始语句 支持 ADMIN RECOVER INDEX 命令，用于灾难恢复情况下修复索引数据 ADD INDEX 操作变更为低优先级，降低对线上业务影响 支持参数为 JSON 类型的 SUM/AVG 等聚合函数 支持配置文件修改 lower_case_table_names 系统变量，用于支持 OGG 数据同步工具 提升对 Navicat 管理工具的兼容性 支持在 CRUD 操作中使用隐式的行 ID  PD  支持 Region Merge，合并数据删除后产生的空 Region 或小 Region 添加副本时忽略有大量 pending peer 的节点，提升恢复副本及下线的速度 优化有大量空 Region 时产生的频繁调度问题 优化不同 label 中资源不均衡的场景中 leader balance 调度的速度 添加更多异常 Region 的统计  TiKV  支持 Region Merge Raft snapshot 流程完成之后立刻通知 PD，加速调度 增加 Raw DeleteRange API 增加 GetMetric API 减缓 RocksDB sync 文件造成的 I/O 波动 优化了对 delete 掉数据的空间回收机制 完善数据恢复工具 tikv-ctl 解决了由于 snapshot 导致下线节点慢的问题 Coprocessor 支持 streaming 支持 Readpool，raw_get/get/batch_get 性能提升 30% 支持配置 Coprocessor 请求超时时间 Coprocessor 支持 streaming aggregation 上报 Region heartbeat 时携带时间信息 限制 snapshot 文件的空间使用，防止占用过多磁盘空间 对长时间不能选出 leader 的 Region 进行记录上报 加速启动阶段的垃圾清理工作 根据 compaction 事件及时更新对应 Region 的 size 信息 对 scan lock 的大小进行限制，防止请求超时 使用 DeleteRange 加速 Region 删除 支持在线修改 RocksDB 的参数  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC3 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2rc3/</guid>
      <description>TiDB 2.0 RC3 Release Notes On March 23, 2018, TiDB 2.0 RC3 is released. This release has great improvement in MySQL compatibility, SQL optimization and stability.
TiDB  Fix the wrong result issue of MAX/MIN in some scenarios Fix the issue that the result of Sort Merge Join does not show in order of Join Key in some scenarios Fix the error of comparison between uint and int in boundary conditions Optimize checks on length and precision of the floating point type, to improve compatibility with MySQL Improve the parsing error log of time type and add more error information Improve memory control and add statistics about IndexLookupExecutor memory Optimize the execution speed of ADD INDEX to greatly increase the speed in some scenarios Use the Stream Aggregation operator when the GROUP BY substatement is empty, to increase the speed Support closing the Join Reorder optimization in the optimizer using STRAIGHT_JOIN Output more detailed status information of DDL jobs in ADMIN SHOW DDL JOBS Support querying the original statements of currently running DDL jobs using ADMIN SHOW DDL JOB QUERIES Support recovering the index data using ADMIN RECOVER INDEX for disaster recovery Attach a lower priority to the ADD INDEX operation to reduce the impact on online business Support aggregation functions with JSON type parameters, such as SUM/AVG Support modifying the lower_case_table_names system variable in the configuration file, to support the OGG data replication tool Improve compatibility with the Navicat management tool Support using implicit RowID in CRUD operations  PD  Support Region Merge, to merge empty Regions or small Regions after deleting data Ignore the nodes that have a lot of pending peers during adding replicas, to improve the speed of restoring replicas or making nodes offline Fix the frequent scheduling issue caused by a large number of empty Regions Optimize the scheduling speed of leader balance in scenarios of unbalanced resources within different labels Add more statistics about abnormal Regions  TiKV  Support Region Merge Inform PD immediately once the Raft snapshot process is completed, to speed up balancing Add the Raw DeleteRange API Add the GetMetric API Reduce the I/O fluctuation caused by RocksDB sync files Optimize the space reclaiming mechanism after deleting data Improve the data recovery tool tikv-ctl Fix the issue that it is slow to make nodes down caused by snapshot Support streaming in Coprocessor Support Readpool and increase the raw_get/get/batch_get by 30% Support configuring the request timeout of Coprocessor Support streaming aggregation in Coprocessor Carry time information in Region heartbeats Limit the space usage of snapshot files to avoid consuming too much disk space Record and report the Regions that cannot elect a leader for a long time Speed up garbage cleaning when starting the server Update the size information about the corresponding Region according to compaction events Limit the size of scan lock to avoid request timeout Use DeleteRange to speed up Region deletion Support modifying RocksDB parameters online  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC3 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2rc3/</guid>
      <description>TiDB 2.0 RC3 Release Notes On March 23, 2018, TiDB 2.0 RC3 is released. This release has great improvement in MySQL compatibility, SQL optimization and stability.
TiDB  Fix the wrong result issue of MAX/MIN in some scenarios Fix the issue that the result of Sort Merge Join does not show in order of Join Key in some scenarios Fix the error of comparison between uint and int in boundary conditions Optimize checks on length and precision of the floating point type, to improve compatibility with MySQL Improve the parsing error log of time type and add more error information Improve memory control and add statistics about IndexLookupExecutor memory Optimize the execution speed of ADD INDEX to greatly increase the speed in some scenarios Use the Stream Aggregation operator when the GROUP BY substatement is empty, to increase the speed Support closing the Join Reorder optimization in the optimizer using STRAIGHT_JOIN Output more detailed status information of DDL jobs in ADMIN SHOW DDL JOBS Support querying the original statements of currently running DDL jobs using ADMIN SHOW DDL JOB QUERIES Support recovering the index data using ADMIN RECOVER INDEX for disaster recovery Attach a lower priority to the ADD INDEX operation to reduce the impact on online business Support aggregation functions with JSON type parameters, such as SUM/AVG Support modifying the lower_case_table_names system variable in the configuration file, to support the OGG data replication tool Improve compatibility with the Navicat management tool Support using implicit RowID in CRUD operations  PD  Support Region Merge, to merge empty Regions or small Regions after deleting data Ignore the nodes that have a lot of pending peers during adding replicas, to improve the speed of restoring replicas or making nodes offline Fix the frequent scheduling issue caused by a large number of empty Regions Optimize the scheduling speed of leader balance in scenarios of unbalanced resources within different labels Add more statistics about abnormal Regions  TiKV  Support Region Merge Inform PD immediately once the Raft snapshot process is completed, to speed up balancing Add the Raw DeleteRange API Add the GetMetric API Reduce the I/O fluctuation caused by RocksDB sync files Optimize the space reclaiming mechanism after deleting data Improve the data recovery tool tikv-ctl Fix the issue that it is slow to make nodes down caused by snapshot Support streaming in Coprocessor Support Readpool and increase the raw_get/get/batch_get by 30% Support configuring the request timeout of Coprocessor Support streaming aggregation in Coprocessor Carry time information in Region heartbeats Limit the space usage of snapshot files to avoid consuming too much disk space Record and report the Regions that cannot elect a leader for a long time Speed up garbage cleaning when starting the server Update the size information about the corresponding Region according to compaction events Limit the size of scan lock to avoid request timeout Use DeleteRange to speed up Region deletion Support modifying RocksDB parameters online  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC3 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2rc3/</guid>
      <description>TiDB 2.0 RC3 Release Notes On March 23, 2018, TiDB 2.0 RC3 is released. This release has great improvement in MySQL compatibility, SQL optimization and stability.
TiDB  Fix the wrong result issue of MAX/MIN in some scenarios Fix the issue that the result of Sort Merge Join does not show in order of Join Key in some scenarios Fix the error of comparison between uint and int in boundary conditions Optimize checks on length and precision of the floating point type, to improve compatibility with MySQL Improve the parsing error log of time type and add more error information Improve memory control and add statistics about IndexLookupExecutor memory Optimize the execution speed of ADD INDEX to greatly increase the speed in some scenarios Use the Stream Aggregation operator when the GROUP BY substatement is empty, to increase the speed Support closing the Join Reorder optimization in the optimizer using STRAIGHT_JOIN Output more detailed status information of DDL jobs in ADMIN SHOW DDL JOBS Support querying the original statements of currently running DDL jobs using ADMIN SHOW DDL JOB QUERIES Support recovering the index data using ADMIN RECOVER INDEX for disaster recovery Attach a lower priority to the ADD INDEX operation to reduce the impact on online business Support aggregation functions with JSON type parameters, such as SUM/AVG Support modifying the lower_case_table_names system variable in the configuration file, to support the OGG data replication tool Improve compatibility with the Navicat management tool Support using implicit RowID in CRUD operations  PD  Support Region Merge, to merge empty Regions or small Regions after deleting data Ignore the nodes that have a lot of pending peers during adding replicas, to improve the speed of restoring replicas or making nodes offline Fix the frequent scheduling issue caused by a large number of empty Regions Optimize the scheduling speed of leader balance in scenarios of unbalanced resources within different labels Add more statistics about abnormal Regions  TiKV  Support Region Merge Inform PD immediately once the Raft snapshot process is completed, to speed up balancing Add the Raw DeleteRange API Add the GetMetric API Reduce the I/O fluctuation caused by RocksDB sync files Optimize the space reclaiming mechanism after deleting data Improve the data recovery tool tikv-ctl Fix the issue that it is slow to make nodes down caused by snapshot Support streaming in Coprocessor Support Readpool and increase the raw_get/get/batch_get by 30% Support configuring the request timeout of Coprocessor Support streaming aggregation in Coprocessor Carry time information in Region heartbeats Limit the space usage of snapshot files to avoid consuming too much disk space Record and report the Regions that cannot elect a leader for a long time Speed up garbage cleaning when starting the server Update the size information about the corresponding Region according to compaction events Limit the size of scan lock to avoid request timeout Use DeleteRange to speed up Region deletion Support modifying RocksDB parameters online  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC3 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2rc3/</guid>
      <description>TiDB 2.0 RC3 Release Notes On March 23, 2018, TiDB 2.0 RC3 is released. This release has great improvement in MySQL compatibility, SQL optimization and stability.
TiDB  Fix the wrong result issue of MAX/MIN in some scenarios Fix the issue that the result of Sort Merge Join does not show in order of Join Key in some scenarios Fix the error of comparison between uint and int in boundary conditions Optimize checks on length and precision of the floating point type, to improve compatibility with MySQL Improve the parsing error log of time type and add more error information Improve memory control and add statistics about IndexLookupExecutor memory Optimize the execution speed of ADD INDEX to greatly increase the speed in some scenarios Use the Stream Aggregation operator when the GROUP BY substatement is empty, to increase the speed Support closing the Join Reorder optimization in the optimizer using STRAIGHT_JOIN Output more detailed status information of DDL jobs in ADMIN SHOW DDL JOBS Support querying the original statements of currently running DDL jobs using ADMIN SHOW DDL JOB QUERIES Support recovering the index data using ADMIN RECOVER INDEX for disaster recovery Attach a lower priority to the ADD INDEX operation to reduce the impact on online business Support aggregation functions with JSON type parameters, such as SUM/AVG Support modifying the lower_case_table_names system variable in the configuration file, to support the OGG data replication tool Improve compatibility with the Navicat management tool Support using implicit RowID in CRUD operations  PD  Support Region Merge, to merge empty Regions or small Regions after deleting data Ignore the nodes that have a lot of pending peers during adding replicas, to improve the speed of restoring replicas or making nodes offline Fix the frequent scheduling issue caused by a large number of empty Regions Optimize the scheduling speed of leader balance in scenarios of unbalanced resources within different labels Add more statistics about abnormal Regions  TiKV  Support Region Merge Inform PD immediately once the Raft snapshot process is completed, to speed up balancing Add the Raw DeleteRange API Add the GetMetric API Reduce the I/O fluctuation caused by RocksDB sync files Optimize the space reclaiming mechanism after deleting data Improve the data recovery tool tikv-ctl Fix the issue that it is slow to make nodes down caused by snapshot Support streaming in Coprocessor Support Readpool and increase the raw_get/get/batch_get by 30% Support configuring the request timeout of Coprocessor Support streaming aggregation in Coprocessor Carry time information in Region heartbeats Limit the space usage of snapshot files to avoid consuming too much disk space Record and report the Regions that cannot elect a leader for a long time Speed up garbage cleaning when starting the server Update the size information about the corresponding Region according to compaction events Limit the size of scan lock to avoid request timeout Use DeleteRange to speed up Region deletion Support modifying RocksDB parameters online  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2rc4/</guid>
      <description>TiDB 2.0 RC4 Release Notes 2018 年 3 月 30 日，TiDB 发布 2.0 RC4 版。该版本在 2.0 RC3 版的基础上，对 MySQL 兼容性、系统稳定性和优化器做了很多改进。
TiDB  支持 SHOW GRANTS FOR CURRENT_USER(); 修复 UnionScan 里的 Expression 没有 Clone 的问题 支持 SET TRANSACTION 语法 修复 copIterator 中潜在的 goroutine 泄露问题 修复 admin check table 对包含 null 的 unique index 误判的问题 支持用科学计数法显示浮点数 修复 binary literal 计算时的类型推导 修复解析 CREATE VIEW 语句的问题 修复语句中同时包含 ORDER BY 和 LIMIT 0 时 panic 的问题 提升 DecodeBytes 执行性能 优化 LIMIT 0 为 TableDual，避免无用的执行计划构建  PD  支持手动 split Region，可用于处理单 Region 热点的问题 修复 pdctl 运行 config show all 不显示 label property 的问题 metrics 及代码结构相关的优化  TiKV  限制接收 snapshot 时的内存使用，解决极端情况下的 OOM 可以配置 Coprocessor 在遇到 warnings 时的行为 TiKV 支持导数据模式 支持 Region 从正中间分裂 提升 CI test 的速度 使用 crossbeam channel 改善 TiKV 在被隔离的情况下由于 leader missing 输出太多日志的问题  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2rc4/</guid>
      <description>TiDB 2.0 RC4 Release Notes 2018 年 3 月 30 日，TiDB 发布 2.0 RC4 版。该版本在 2.0 RC3 版的基础上，对 MySQL 兼容性、系统稳定性和优化器做了很多改进。
TiDB  支持 SHOW GRANTS FOR CURRENT_USER(); 修复 UnionScan 里的 Expression 没有 Clone 的问题 支持 SET TRANSACTION 语法 修复 copIterator 中潜在的 goroutine 泄露问题 修复 admin check table 对包含 null 的 unique index 误判的问题 支持用科学计数法显示浮点数 修复 binary literal 计算时的类型推导 修复解析 CREATE VIEW 语句的问题 修复语句中同时包含 ORDER BY 和 LIMIT 0 时 panic 的问题 提升 DecodeBytes 执行性能 优化 LIMIT 0 为 TableDual，避免无用的执行计划构建  PD  支持手动 split Region，可用于处理单 Region 热点的问题 修复 pdctl 运行 config show all 不显示 label property 的问题 metrics 及代码结构相关的优化  TiKV  限制接收 snapshot 时的内存使用，解决极端情况下的 OOM 可以配置 Coprocessor 在遇到 warnings 时的行为 TiKV 支持导数据模式 支持 Region 从正中间分裂 提升 CI test 的速度 使用 crossbeam channel 改善 TiKV 在被隔离的情况下由于 leader missing 输出太多日志的问题  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2rc4/</guid>
      <description>TiDB 2.0 RC4 Release Notes 2018 年 3 月 30 日，TiDB 发布 2.0 RC4 版。该版本在 2.0 RC3 版的基础上，对 MySQL 兼容性、系统稳定性和优化器做了很多改进。
TiDB  支持 SHOW GRANTS FOR CURRENT_USER(); 修复 UnionScan 里的 Expression 没有 Clone 的问题 支持 SET TRANSACTION 语法 修复 copIterator 中潜在的 goroutine 泄露问题 修复 admin check table 对包含 null 的 unique index 误判的问题 支持用科学计数法显示浮点数 修复 binary literal 计算时的类型推导 修复解析 CREATE VIEW 语句的问题 修复语句中同时包含 ORDER BY 和 LIMIT 0 时 panic 的问题 提升 DecodeBytes 执行性能 优化 LIMIT 0 为 TableDual，避免无用的执行计划构建  PD  支持手动 split Region，可用于处理单 Region 热点的问题 修复 pdctl 运行 config show all 不显示 label property 的问题 metrics 及代码结构相关的优化  TiKV  限制接收 snapshot 时的内存使用，解决极端情况下的 OOM 可以配置 Coprocessor 在遇到 warnings 时的行为 TiKV 支持导数据模式 支持 Region 从正中间分裂 提升 CI test 的速度 使用 crossbeam channel 改善 TiKV 在被隔离的情况下由于 leader missing 输出太多日志的问题  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2rc4/</guid>
      <description>TiDB 2.0 RC4 Release Notes 2018 年 3 月 30 日，TiDB 发布 2.0 RC4 版。该版本在 2.0 RC3 版的基础上，对 MySQL 兼容性、系统稳定性和优化器做了很多改进。
TiDB  支持 SHOW GRANTS FOR CURRENT_USER(); 修复 UnionScan 里的 Expression 没有 Clone 的问题 支持 SET TRANSACTION 语法 修复 copIterator 中潜在的 goroutine 泄露问题 修复 admin check table 对包含 null 的 unique index 误判的问题 支持用科学计数法显示浮点数 修复 binary literal 计算时的类型推导 修复解析 CREATE VIEW 语句的问题 修复语句中同时包含 ORDER BY 和 LIMIT 0 时 panic 的问题 提升 DecodeBytes 执行性能 优化 LIMIT 0 为 TableDual，避免无用的执行计划构建  PD  支持手动 split Region，可用于处理单 Region 热点的问题 修复 pdctl 运行 config show all 不显示 label property 的问题 metrics 及代码结构相关的优化  TiKV  限制接收 snapshot 时的内存使用，解决极端情况下的 OOM 可以配置 Coprocessor 在遇到 warnings 时的行为 TiKV 支持导数据模式 支持 Region 从正中间分裂 提升 CI test 的速度 使用 crossbeam channel 改善 TiKV 在被隔离的情况下由于 leader missing 输出太多日志的问题  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC4 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2rc4/</guid>
      <description>TiDB 2.0 RC4 Release Notes On March 30, 2018, TiDB 2.0 RC4 is released. This release has great improvement in MySQL compatibility, SQL optimization and stability.
TiDB  Support SHOW GRANTS FOR CURRENT_USER(); Fix the issue that the Expression in UnionScan is not cloned Support the SET TRANSACTION syntax Fix the potential goroutine leak issue in copIterator Fix the issue that admin check table misjudges the unique index including null Support displaying floating point numbers using scientific notation Fix the type inference issue during binary literal computing Fix the issue in parsing the CREATE VIEW statement Fix the panic issue when one statement contains both ORDER BY and LIMIT 0 Improve the execution performance of DecodeBytes Optimize LIMIT 0 to TableDual, to avoid building useless execution plans  PD  Support splitting Region manually to handle the hot spot in a single Region Fix the issue that the label property is not displayed when pdctl runs config show all Optimize metrics and code structure  TiKV  Limit the memory usage during receiving snapshots, to avoid OOM in extreme conditions Support configuring the behavior of Coprocessor when it encounters warnings Support importing the data pattern in TiKV Support splitting Region in the middle Increase the speed of CI test Use crossbeam channel Fix the issue that too many logs are output caused by leader missing when TiKV is isolated  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC4 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2rc4/</guid>
      <description>TiDB 2.0 RC4 Release Notes On March 30, 2018, TiDB 2.0 RC4 is released. This release has great improvement in MySQL compatibility, SQL optimization and stability.
TiDB  Support SHOW GRANTS FOR CURRENT_USER(); Fix the issue that the Expression in UnionScan is not cloned Support the SET TRANSACTION syntax Fix the potential goroutine leak issue in copIterator Fix the issue that admin check table misjudges the unique index including null Support displaying floating point numbers using scientific notation Fix the type inference issue during binary literal computing Fix the issue in parsing the CREATE VIEW statement Fix the panic issue when one statement contains both ORDER BY and LIMIT 0 Improve the execution performance of DecodeBytes Optimize LIMIT 0 to TableDual, to avoid building useless execution plans  PD  Support splitting Region manually to handle the hot spot in a single Region Fix the issue that the label property is not displayed when pdctl runs config show all Optimize metrics and code structure  TiKV  Limit the memory usage during receiving snapshots, to avoid OOM in extreme conditions Support configuring the behavior of Coprocessor when it encounters warnings Support importing the data pattern in TiKV Support splitting Region in the middle Increase the speed of CI test Use crossbeam channel Fix the issue that too many logs are output caused by leader missing when TiKV is isolated  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC4 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2rc4/</guid>
      <description>TiDB 2.0 RC4 Release Notes On March 30, 2018, TiDB 2.0 RC4 is released. This release has great improvement in MySQL compatibility, SQL optimization and stability.
TiDB  Support SHOW GRANTS FOR CURRENT_USER(); Fix the issue that the Expression in UnionScan is not cloned Support the SET TRANSACTION syntax Fix the potential goroutine leak issue in copIterator Fix the issue that admin check table misjudges the unique index including null Support displaying floating point numbers using scientific notation Fix the type inference issue during binary literal computing Fix the issue in parsing the CREATE VIEW statement Fix the panic issue when one statement contains both ORDER BY and LIMIT 0 Improve the execution performance of DecodeBytes Optimize LIMIT 0 to TableDual, to avoid building useless execution plans  PD  Support splitting Region manually to handle the hot spot in a single Region Fix the issue that the label property is not displayed when pdctl runs config show all Optimize metrics and code structure  TiKV  Limit the memory usage during receiving snapshots, to avoid OOM in extreme conditions Support configuring the behavior of Coprocessor when it encounters warnings Support importing the data pattern in TiKV Support splitting Region in the middle Increase the speed of CI test Use crossbeam channel Fix the issue that too many logs are output caused by leader missing when TiKV is isolated  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC4 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2rc4/</guid>
      <description>TiDB 2.0 RC4 Release Notes On March 30, 2018, TiDB 2.0 RC4 is released. This release has great improvement in MySQL compatibility, SQL optimization and stability.
TiDB  Support SHOW GRANTS FOR CURRENT_USER(); Fix the issue that the Expression in UnionScan is not cloned Support the SET TRANSACTION syntax Fix the potential goroutine leak issue in copIterator Fix the issue that admin check table misjudges the unique index including null Support displaying floating point numbers using scientific notation Fix the type inference issue during binary literal computing Fix the issue in parsing the CREATE VIEW statement Fix the panic issue when one statement contains both ORDER BY and LIMIT 0 Improve the execution performance of DecodeBytes Optimize LIMIT 0 to TableDual, to avoid building useless execution plans  PD  Support splitting Region manually to handle the hot spot in a single Region Fix the issue that the label property is not displayed when pdctl runs config show all Optimize metrics and code structure  TiKV  Limit the memory usage during receiving snapshots, to avoid OOM in extreme conditions Support configuring the behavior of Coprocessor when it encounters warnings Support importing the data pattern in TiKV Support splitting Region in the middle Increase the speed of CI test Use crossbeam channel Fix the issue that too many logs are output caused by leader missing when TiKV is isolated  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC5 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2rc5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2rc5/</guid>
      <description>TiDB 2.0 RC5 Release Notes 2018 年 4 月 17 日，TiDB 发布 2.0 RC5 版。该版本在 RC4 版的基础上，对 MySQL 兼容性、系统稳定性和优化器做了很多改进。
TiDB  修复应用 Top-N 下推规则的问题 修复对包含 NULL 值的列的行数估算 修复 Binary 类型的 0 值 修复事务内的 BatchGet 问题 回滚 Add Index 操作的时候，清除清除已写入的数据，减少空间占用 优化 insert on duplicate key update 语句性能，提升 10 倍以上 修复 UNIX_TIMESTAMP 函数返回结果类型问题返回结果类型问题 修复在添加 NOT NULL 列的过程中，插入 NULL 值的问题 Show Process List 语句支持显示执行语句的内存占用 修复极端情况下 Alter Table Modify Column 出错问题 支持通过 Alter 语句设置 table comment  PD  添加 Raft Learner 支持 优化 Balance Region Scheduler，减少调度开销 调整默认 schedule-limit 配置 修复频繁分配 ID 问题 修复添加调度兼容性问题  TiKV  tikv-ctl 支持 compact 指定的 Region Raw KV 支持 Batch Put、Batch Get、Batch Delete 和 Batch Scan 解决太多 snapshot 导致的 OOM 问题 Coprocessor 返回更详细的错误信息 支持通过 tikv-ctl 动态修改 TiKV 的 block-cache-size 进一步完善 importer 功能 简化 ImportSST::Upload 接口 设置 gRPC 的 keepalive 属性 tikv-importer 作为独立的 binary 从 TiKV 中分离出来 统计 Coprocessor 每个 scan range 命令扫描了多少行数据 解决在 macOS 系统上的编译问题 优化 metric 相关的内容 解决 snapshot 相关的一个潜在 bug 解决误用了一个 RocksDB metric 的问题 Coprocessor 支持 overflow as warning 选项  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC5 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2rc5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2rc5/</guid>
      <description>TiDB 2.0 RC5 Release Notes 2018 年 4 月 17 日，TiDB 发布 2.0 RC5 版。该版本在 RC4 版的基础上，对 MySQL 兼容性、系统稳定性和优化器做了很多改进。
TiDB  修复应用 Top-N 下推规则的问题 修复对包含 NULL 值的列的行数估算 修复 Binary 类型的 0 值 修复事务内的 BatchGet 问题 回滚 Add Index 操作的时候，清除清除已写入的数据，减少空间占用 优化 insert on duplicate key update 语句性能，提升 10 倍以上 修复 UNIX_TIMESTAMP 函数返回结果类型问题返回结果类型问题 修复在添加 NOT NULL 列的过程中，插入 NULL 值的问题 Show Process List 语句支持显示执行语句的内存占用 修复极端情况下 Alter Table Modify Column 出错问题 支持通过 Alter 语句设置 table comment  PD  添加 Raft Learner 支持 优化 Balance Region Scheduler，减少调度开销 调整默认 schedule-limit 配置 修复频繁分配 ID 问题 修复添加调度兼容性问题  TiKV  tikv-ctl 支持 compact 指定的 Region Raw KV 支持 Batch Put、Batch Get、Batch Delete 和 Batch Scan 解决太多 snapshot 导致的 OOM 问题 Coprocessor 返回更详细的错误信息 支持通过 tikv-ctl 动态修改 TiKV 的 block-cache-size 进一步完善 importer 功能 简化 ImportSST::Upload 接口 设置 gRPC 的 keepalive 属性 tikv-importer 作为独立的 binary 从 TiKV 中分离出来 统计 Coprocessor 每个 scan range 命令扫描了多少行数据 解决在 macOS 系统上的编译问题 优化 metric 相关的内容 解决 snapshot 相关的一个潜在 bug 解决误用了一个 RocksDB metric 的问题 Coprocessor 支持 overflow as warning 选项  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC5 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2rc5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2rc5/</guid>
      <description>TiDB 2.0 RC5 Release Notes 2018 年 4 月 17 日，TiDB 发布 2.0 RC5 版。该版本在 RC4 版的基础上，对 MySQL 兼容性、系统稳定性和优化器做了很多改进。
TiDB  修复应用 Top-N 下推规则的问题 修复对包含 NULL 值的列的行数估算 修复 Binary 类型的 0 值 修复事务内的 BatchGet 问题 回滚 Add Index 操作的时候，清除清除已写入的数据，减少空间占用 优化 insert on duplicate key update 语句性能，提升 10 倍以上 修复 UNIX_TIMESTAMP 函数返回结果类型问题返回结果类型问题 修复在添加 NOT NULL 列的过程中，插入 NULL 值的问题 Show Process List 语句支持显示执行语句的内存占用 修复极端情况下 Alter Table Modify Column 出错问题 支持通过 Alter 语句设置 table comment  PD  添加 Raft Learner 支持 优化 Balance Region Scheduler，减少调度开销 调整默认 schedule-limit 配置 修复频繁分配 ID 问题 修复添加调度兼容性问题  TiKV  tikv-ctl 支持 compact 指定的 Region Raw KV 支持 Batch Put、Batch Get、Batch Delete 和 Batch Scan 解决太多 snapshot 导致的 OOM 问题 Coprocessor 返回更详细的错误信息 支持通过 tikv-ctl 动态修改 TiKV 的 block-cache-size 进一步完善 importer 功能 简化 ImportSST::Upload 接口 设置 gRPC 的 keepalive 属性 tikv-importer 作为独立的 binary 从 TiKV 中分离出来 统计 Coprocessor 每个 scan range 命令扫描了多少行数据 解决在 macOS 系统上的编译问题 优化 metric 相关的内容 解决 snapshot 相关的一个潜在 bug 解决误用了一个 RocksDB metric 的问题 Coprocessor 支持 overflow as warning 选项  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC5 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2rc5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2rc5/</guid>
      <description>TiDB 2.0 RC5 Release Notes 2018 年 4 月 17 日，TiDB 发布 2.0 RC5 版。该版本在 RC4 版的基础上，对 MySQL 兼容性、系统稳定性和优化器做了很多改进。
TiDB  修复应用 Top-N 下推规则的问题 修复对包含 NULL 值的列的行数估算 修复 Binary 类型的 0 值 修复事务内的 BatchGet 问题 回滚 Add Index 操作的时候，清除清除已写入的数据，减少空间占用 优化 insert on duplicate key update 语句性能，提升 10 倍以上 修复 UNIX_TIMESTAMP 函数返回结果类型问题返回结果类型问题 修复在添加 NOT NULL 列的过程中，插入 NULL 值的问题 Show Process List 语句支持显示执行语句的内存占用 修复极端情况下 Alter Table Modify Column 出错问题 支持通过 Alter 语句设置 table comment  PD  添加 Raft Learner 支持 优化 Balance Region Scheduler，减少调度开销 调整默认 schedule-limit 配置 修复频繁分配 ID 问题 修复添加调度兼容性问题  TiKV  tikv-ctl 支持 compact 指定的 Region Raw KV 支持 Batch Put、Batch Get、Batch Delete 和 Batch Scan 解决太多 snapshot 导致的 OOM 问题 Coprocessor 返回更详细的错误信息 支持通过 tikv-ctl 动态修改 TiKV 的 block-cache-size 进一步完善 importer 功能 简化 ImportSST::Upload 接口 设置 gRPC 的 keepalive 属性 tikv-importer 作为独立的 binary 从 TiKV 中分离出来 统计 Coprocessor 每个 scan range 命令扫描了多少行数据 解决在 macOS 系统上的编译问题 优化 metric 相关的内容 解决 snapshot 相关的一个潜在 bug 解决误用了一个 RocksDB metric 的问题 Coprocessor 支持 overflow as warning 选项  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC5 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2rc5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2rc5/</guid>
      <description>TiDB 2.0 RC5 Release Notes On April 17, 2018, TiDB 2.0 RC5 is released. This release has great improvement in MySQL compatibility, SQL optimization and stability.
TiDB  Fix the issue about applying the Top-N pushdown rule Fix the estimation of the number of rows for the columns that contain NULL values Fix the zero value of the Binary type Fix the BatchGet issue within a transaction Clean up the written data while rolling back the Add Index operation, to reduce consumed space Optimize the insert on duplicate key update statement to improve the performance by 10 times Fix the issue about the type of the results returned by the UNIX_TIMESTAMP function Fix the issue that the NULL value is inserted while adding NOT NULL columns Support showing memory usage of the executing statements in the Show Process List statement Fix the issue that Alter Table Modify Column reports an error in extreme conditions Support setting the table comment using the Alter statement  PD  Add support for Raft Learner Optimize the Balance Region Scheduler to reduce scheduling overhead Adjust the default value of schedule-limit configuration Fix the issue of allocating ID frequently Fix the compatibility issue when adding a new scheduler  TiKV  Support the Region specified by compact in tikv-ctl Support Batch Put, Batch Get, Batch Delete and Batch Scan in the RawKVClient Fix the OOM issue caused by too many snapshots Return more detailed error information in Coprocessor Support dynamically modifying the block-cache-size in TiKV through tikv-ctl Further improve importer Simplify the ImportSST::Upload interface Configure the keepalive property of gRPC Split tikv-importer from TiKV as an independent binary Provide statistics about the number of rows scanned by each scan range in Coprocessor Fix the compilation issue on the macOS system Fix the issue of misusing a RocksDB metric Support the overflow as warning option in Coprocessor  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC5 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2rc5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2rc5/</guid>
      <description>TiDB 2.0 RC5 Release Notes On April 17, 2018, TiDB 2.0 RC5 is released. This release has great improvement in MySQL compatibility, SQL optimization and stability.
TiDB  Fix the issue about applying the Top-N pushdown rule Fix the estimation of the number of rows for the columns that contain NULL values Fix the zero value of the Binary type Fix the BatchGet issue within a transaction Clean up the written data while rolling back the Add Index operation, to reduce consumed space Optimize the insert on duplicate key update statement to improve the performance by 10 times Fix the issue about the type of the results returned by the UNIX_TIMESTAMP function Fix the issue that the NULL value is inserted while adding NOT NULL columns Support showing memory usage of the executing statements in the Show Process List statement Fix the issue that Alter Table Modify Column reports an error in extreme conditions Support setting the table comment using the Alter statement  PD  Add support for Raft Learner Optimize the Balance Region Scheduler to reduce scheduling overhead Adjust the default value of schedule-limit configuration Fix the issue of allocating ID frequently Fix the compatibility issue when adding a new scheduler  TiKV  Support the Region specified by compact in tikv-ctl Support Batch Put, Batch Get, Batch Delete and Batch Scan in the RawKVClient Fix the OOM issue caused by too many snapshots Return more detailed error information in Coprocessor Support dynamically modifying the block-cache-size in TiKV through tikv-ctl Further improve importer Simplify the ImportSST::Upload interface Configure the keepalive property of gRPC Split tikv-importer from TiKV as an independent binary Provide statistics about the number of rows scanned by each scan range in Coprocessor Fix the compilation issue on the macOS system Fix the issue of misusing a RocksDB metric Support the overflow as warning option in Coprocessor  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC5 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2rc5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2rc5/</guid>
      <description>TiDB 2.0 RC5 Release Notes On April 17, 2018, TiDB 2.0 RC5 is released. This release has great improvement in MySQL compatibility, SQL optimization and stability.
TiDB  Fix the issue about applying the Top-N pushdown rule Fix the estimation of the number of rows for the columns that contain NULL values Fix the zero value of the Binary type Fix the BatchGet issue within a transaction Clean up the written data while rolling back the Add Index operation, to reduce consumed space Optimize the insert on duplicate key update statement to improve the performance by 10 times Fix the issue about the type of the results returned by the UNIX_TIMESTAMP function Fix the issue that the NULL value is inserted while adding NOT NULL columns Support showing memory usage of the executing statements in the Show Process List statement Fix the issue that Alter Table Modify Column reports an error in extreme conditions Support setting the table comment using the Alter statement  PD  Add support for Raft Learner Optimize the Balance Region Scheduler to reduce scheduling overhead Adjust the default value of schedule-limit configuration Fix the issue of allocating ID frequently Fix the compatibility issue when adding a new scheduler  TiKV  Support the Region specified by compact in tikv-ctl Support Batch Put, Batch Get, Batch Delete and Batch Scan in the RawKVClient Fix the OOM issue caused by too many snapshots Return more detailed error information in Coprocessor Support dynamically modifying the block-cache-size in TiKV through tikv-ctl Further improve importer Simplify the ImportSST::Upload interface Configure the keepalive property of gRPC Split tikv-importer from TiKV as an independent binary Provide statistics about the number of rows scanned by each scan range in Coprocessor Fix the compilation issue on the macOS system Fix the issue of misusing a RocksDB metric Support the overflow as warning option in Coprocessor  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 RC5 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2rc5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2rc5/</guid>
      <description>TiDB 2.0 RC5 Release Notes On April 17, 2018, TiDB 2.0 RC5 is released. This release has great improvement in MySQL compatibility, SQL optimization and stability.
TiDB  Fix the issue about applying the Top-N pushdown rule Fix the estimation of the number of rows for the columns that contain NULL values Fix the zero value of the Binary type Fix the BatchGet issue within a transaction Clean up the written data while rolling back the Add Index operation, to reduce consumed space Optimize the insert on duplicate key update statement to improve the performance by 10 times Fix the issue about the type of the results returned by the UNIX_TIMESTAMP function Fix the issue that the NULL value is inserted while adding NOT NULL columns Support showing memory usage of the executing statements in the Show Process List statement Fix the issue that Alter Table Modify Column reports an error in extreme conditions Support setting the table comment using the Alter statement  PD  Add support for Raft Learner Optimize the Balance Region Scheduler to reduce scheduling overhead Adjust the default value of schedule-limit configuration Fix the issue of allocating ID frequently Fix the compatibility issue when adding a new scheduler  TiKV  Support the Region specified by compact in tikv-ctl Support Batch Put, Batch Get, Batch Delete and Batch Scan in the RawKVClient Fix the OOM issue caused by too many snapshots Return more detailed error information in Coprocessor Support dynamically modifying the block-cache-size in TiKV through tikv-ctl Further improve importer Simplify the ImportSST::Upload interface Configure the keepalive property of gRPC Split tikv-importer from TiKV as an independent binary Provide statistics about the number of rows scanned by each scan range in Coprocessor Fix the compilation issue on the macOS system Fix the issue of misusing a RocksDB metric Support the overflow as warning option in Coprocessor  </description>
    </item>
    
    <item>
      <title>TiDB 2.0 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.0ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.0ga/</guid>
      <description>TiDB 2.0 Release Notes On April 27, 2018, TiDB 2.0 GA is released! Compared with TiDB 1.0, this release has great improvement in MySQL compatibility, SQL optimizer, executor, and stability.
TiDB  SQL Optimizer  Use more compact data structure to reduce the memory usage of statistics information Speed up loading statistics information when starting a tidb-server process Support updating statistics information dynamically [experimental] Optimize the cost model to provide more accurate query cost evaluation Use Count-Min Sketch to estimate the cost of point queries more accurately Support analyzing more complex conditions to make full use of indexes Support manually specifying the Join order using the STRAIGHT_JOIN syntax Use the Stream Aggregation operator when the GROUP BY clause is empty to improve the performance Support using indexes for the MAX/MIN function Optimize the processing algorithms for correlated subqueries to support decorrelating more types of correlated subqueries and transform them to Left Outer Join Extend IndexLookupJoin to be used in matching the index prefix   SQL Execution Engine  Refactor all operators using the Chunk architecture, improve the execution performance of analytical queries, and reduce memory usage.</description>
    </item>
    
    <item>
      <title>TiDB 2.0 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.0ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.0ga/</guid>
      <description>TiDB 2.0 Release Notes On April 27, 2018, TiDB 2.0 GA is released! Compared with TiDB 1.0, this release has great improvement in MySQL compatibility, SQL optimizer, executor, and stability.
TiDB  SQL Optimizer  Use more compact data structure to reduce the memory usage of statistics information Speed up loading statistics information when starting a tidb-server process Support updating statistics information dynamically [experimental] Optimize the cost model to provide more accurate query cost evaluation Use Count-Min Sketch to estimate the cost of point queries more accurately Support analyzing more complex conditions to make full use of indexes Support manually specifying the Join order using the STRAIGHT_JOIN syntax Use the Stream Aggregation operator when the GROUP BY clause is empty to improve the performance Support using indexes for the MAX/MIN function Optimize the processing algorithms for correlated subqueries to support decorrelating more types of correlated subqueries and transform them to Left Outer Join Extend IndexLookupJoin to be used in matching the index prefix   SQL Execution Engine  Refactor all operators using the Chunk architecture, improve the execution performance of analytical queries, and reduce memory usage.</description>
    </item>
    
    <item>
      <title>TiDB 2.0 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.0ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.0ga/</guid>
      <description>TiDB 2.0 Release Notes On April 27, 2018, TiDB 2.0 GA is released! Compared with TiDB 1.0, this release has great improvement in MySQL compatibility, SQL optimizer, executor, and stability.
TiDB  SQL Optimizer  Use more compact data structure to reduce the memory usage of statistics information Speed up loading statistics information when starting a tidb-server process Support updating statistics information dynamically [experimental] Optimize the cost model to provide more accurate query cost evaluation Use Count-Min Sketch to estimate the cost of point queries more accurately Support analyzing more complex conditions to make full use of indexes Support manually specifying the Join order using the STRAIGHT_JOIN syntax Use the Stream Aggregation operator when the GROUP BY clause is empty to improve the performance Support using indexes for the MAX/MIN function Optimize the processing algorithms for correlated subqueries to support decorrelating more types of correlated subqueries and transform them to Left Outer Join Extend IndexLookupJoin to be used in matching the index prefix   SQL Execution Engine  Refactor all operators using the Chunk architecture, improve the execution performance of analytical queries, and reduce memory usage.</description>
    </item>
    
    <item>
      <title>TiDB 2.0 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.0ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.0ga/</guid>
      <description>TiDB 2.0 Release Notes On April 27, 2018, TiDB 2.0 GA is released! Compared with TiDB 1.0, this release has great improvement in MySQL compatibility, SQL optimizer, executor, and stability.
TiDB  SQL Optimizer  Use more compact data structure to reduce the memory usage of statistics information Speed up loading statistics information when starting a tidb-server process Support updating statistics information dynamically [experimental] Optimize the cost model to provide more accurate query cost evaluation Use Count-Min Sketch to estimate the cost of point queries more accurately Support analyzing more complex conditions to make full use of indexes Support manually specifying the Join order using the STRAIGHT_JOIN syntax Use the Stream Aggregation operator when the GROUP BY clause is empty to improve the performance Support using indexes for the MAX/MIN function Optimize the processing algorithms for correlated subqueries to support decorrelating more types of correlated subqueries and transform them to Left Outer Join Extend IndexLookupJoin to be used in matching the index prefix   SQL Execution Engine  Refactor all operators using the Chunk architecture, improve the execution performance of analytical queries, and reduce memory usage.</description>
    </item>
    
    <item>
      <title>TiDB 2.0 release notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.0ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.0ga/</guid>
      <description>TiDB 2.0 Release Notes 2018 年 4 月 27 日，TiDB 发布 2.0 GA 版。相比 1.0 版本，该版本对 MySQL 兼容性、系统稳定性、优化器和执行器做了很多改进。
TiDB  SQL 优化器  精简统计信息数据结构，减小内存占用 加快进程启动时加载统计信息速度 支持统计信息动态更新 [experimental] 优化代价模型，对代价估算更精准 使用 Count-Min Sketch 更精确地估算点查的代价 支持分析更复杂的条件，尽可能充分的使用索引 支持通过 STRAIGHT_JOIN 语法手动指定 Join 顺序 GROUP BY子句为空时使用 Stream Aggregation 算子，提升性能 支持使用索引计算 Max/Min 函数 优化关联子查询处理算法，支持将更多类型的关联子查询解关联并转化成 Left Outer Join 扩大 IndexLookupJoin 的使用范围，索引前缀匹配的场景也可以使用该算法   SQL 执行引擎  使用 Chunk 结构重构所有执行器算子，提升分析型语句执行性能，减少内存占用，显著提升 TPC-H 结果 支持 Streaming Aggregation 算子下推 优化 Insert Into Ignore 语句性能，提升 10 倍以上 优化 Insert On Duplicate Key Update 语句性能，提升 10 倍以上 下推更多的数据类型和函数到 TiKV 计算 优化 Load Data 性能，提升 10 倍以上 支持对物理算子内存使用进行统计，通过配置文件以及系统变量指定超过阈值后的处理行为 支持限制单条 SQL 语句使用内存的大小，减少程序 OOM 风险 支持在 CRUD 操作中使用隐式的行 ID 提升点查性能   Server  支持 Proxy Protocol 添加大量监控项, 优化日志 支持配置文件的合法性检测 支持 HTTP API 获取 TiDB 参数信息 使用 Batch 方式 Resolve Lock，提升垃圾回收速度 支持多线程垃圾回收 支持 TLS   兼容性  支持更多 MySQL 语法 支持配置文件修改 lower_case_table_names 系统变量，用于支持 OGG 数据同步工具 提升对 Navicat 的兼容性 在 Information_Schema 中支持显示建表时间 修复部分函数/表达式返回类型和 MySQL 不同的问题 提升对 JDBC 兼容性 支持更多的 SQL_MODE   DDL  优化 Add Index 的执行速度，部分场景下速度大幅度提升 Add Index 操作变更为低优先级，降低对线上业务影响 Admin Show DDL Jobs 输出更详细的 DDL 任务状态信息 支持 Admin Show DDL Job Queries JobID 查询当前正在运行的 DDL 任务的原始语句 支持 Admin Recover Index 命令，用于灾难恢复情况下修复索引数据 支持通过 Alter 语句修改 Table Options    PD  增加 Region Merge 支持，合并数据删除后产生的空 Region [experimental] 增加 Raft Learner 支持 [experimental] 调度器优化  调度器适应不同的 Region size 提升 TiKV 宕机时数据恢复的优先级和恢复速度 提升下线 TiKV 节点搬迁数据的速度 优化 TiKV 节点空间不足时的调度策略，尽可能防止空间不足时磁盘被写满 提升 balance-leader scheduler 的调度效率 减少 balance-region scheduler 调度开销 优化 hot-region scheduler 的执行效率   运维接口及配置  增加 TLS 支持 支持设置 PD leader 优先级 支持基于 label 配置属性 支持配置特定 label 的节点不调度 Region leader 支持手动 Split Region，可用于处理单 Region 热点的问题 支持打散指定 Region，用于某些情况下手动调整热点 Region 分布 增加配置参数检查规则，完善配置项的合法性较验   调试接口  增加 Drop Region 调试接口 增加枚举各个 PD health 状态的接口   统计相关  添加异常 Region 的统计 添加 Region 隔离级别的统计 添加调度相关 metrics   性能优化  PD leader 尽量与 etcd leader 保持同步，提升写入性能 优化 Region heartbeat 性能，现可支持超过 100 万 Region    TiKV  功能  保护关键配置，防止错误修改 支持 Region Merge [experimental] 添加 Raw DeleteRange API 添加 GetMetric API 添加 Raw Batch Put，Raw Batch Get，Raw Batch Delete 和 Raw Batch Scan 给 Raw KV API 增加 Column Family 参数，能对特定 Column Family 进行操作 Coprocessor 支持 streaming 模式，支持 streaming 聚合 支持配置 Coprocessor 请求的超时时间 心跳包携带时间戳 支持在线修改 RocksDB 的一些参数，包括 block-cache-size 大小等 支持配置 Coprocessor 遇到某些错误时的行为 支持以导数据模式启动，减少导数据过程中的写放大 支持手动对 region 进行对半 split 完善数据修复工具 tikv-ctl Coprocessor 返回更多的统计信息，以便指导 TiDB 的行为 支持 ImportSST API，可以用于 SST 文件导入 [experimental] 新增 TiKV Importer 二进制，与 TiDB Lightning 集成用于快速导入数据 [experimental]   性能  使用 ReadPool 优化读性能，raw_get/get/batch_get 提升 30% 提升 metrics 的性能 Raft snapshot 处理完之后立即通知 PD，加快调度速度 解决 RocksDB 刷盘导致性能抖动问题 提升在数据删除之后的空间回收 加速启动过程中的垃圾清理过程 使用 DeleteFilesInRanges 减少副本迁移时 I/O 开销   稳定性  解决在 PD leader 发送切换的情况下 gRPC call 不返回问题 解决由于 snapshot 导致下线节点慢的问题 限制搬移副本临时占用的空间大小 如果有 Region 长时间没有 Leader，进行上报 根据 compaction 事件及时更新统计的 Region size 限制单次 scan lock 请求的扫描的数据量，防止超时 限制接收 snapshot 过程中的内存占用，防止 OOM 提升 CI test 的速度 解决由于 snapshot 太多导致的 OOM 问题 配置 gRPC 的 keepalive 参数 修复 Region 增多容易 OOM 的问题    TiSpark TiSpark 使用独立的版本号，现为 1.</description>
    </item>
    
    <item>
      <title>TiDB 2.0 release notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.0ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.0ga/</guid>
      <description>TiDB 2.0 Release Notes 2018 年 4 月 27 日，TiDB 发布 2.0 GA 版。相比 1.0 版本，该版本对 MySQL 兼容性、系统稳定性、优化器和执行器做了很多改进。
TiDB  SQL 优化器  精简统计信息数据结构，减小内存占用 加快进程启动时加载统计信息速度 支持统计信息动态更新 [experimental] 优化代价模型，对代价估算更精准 使用 Count-Min Sketch 更精确地估算点查的代价 支持分析更复杂的条件，尽可能充分的使用索引 支持通过 STRAIGHT_JOIN 语法手动指定 Join 顺序 GROUP BY子句为空时使用 Stream Aggregation 算子，提升性能 支持使用索引计算 Max/Min 函数 优化关联子查询处理算法，支持将更多类型的关联子查询解关联并转化成 Left Outer Join 扩大 IndexLookupJoin 的使用范围，索引前缀匹配的场景也可以使用该算法   SQL 执行引擎  使用 Chunk 结构重构所有执行器算子，提升分析型语句执行性能，减少内存占用，显著提升 TPC-H 结果 支持 Streaming Aggregation 算子下推 优化 Insert Into Ignore 语句性能，提升 10 倍以上 优化 Insert On Duplicate Key Update 语句性能，提升 10 倍以上 下推更多的数据类型和函数到 TiKV 计算 优化 Load Data 性能，提升 10 倍以上 支持对物理算子内存使用进行统计，通过配置文件以及系统变量指定超过阈值后的处理行为 支持限制单条 SQL 语句使用内存的大小，减少程序 OOM 风险 支持在 CRUD 操作中使用隐式的行 ID 提升点查性能   Server  支持 Proxy Protocol 添加大量监控项, 优化日志 支持配置文件的合法性检测 支持 HTTP API 获取 TiDB 参数信息 使用 Batch 方式 Resolve Lock，提升垃圾回收速度 支持多线程垃圾回收 支持 TLS   兼容性  支持更多 MySQL 语法 支持配置文件修改 lower_case_table_names 系统变量，用于支持 OGG 数据同步工具 提升对 Navicat 的兼容性 在 Information_Schema 中支持显示建表时间 修复部分函数/表达式返回类型和 MySQL 不同的问题 提升对 JDBC 兼容性 支持更多的 SQL_MODE   DDL  优化 Add Index 的执行速度，部分场景下速度大幅度提升 Add Index 操作变更为低优先级，降低对线上业务影响 Admin Show DDL Jobs 输出更详细的 DDL 任务状态信息 支持 Admin Show DDL Job Queries JobID 查询当前正在运行的 DDL 任务的原始语句 支持 Admin Recover Index 命令，用于灾难恢复情况下修复索引数据 支持通过 Alter 语句修改 Table Options    PD  增加 Region Merge 支持，合并数据删除后产生的空 Region [experimental] 增加 Raft Learner 支持 [experimental] 调度器优化  调度器适应不同的 Region size 提升 TiKV 宕机时数据恢复的优先级和恢复速度 提升下线 TiKV 节点搬迁数据的速度 优化 TiKV 节点空间不足时的调度策略，尽可能防止空间不足时磁盘被写满 提升 balance-leader scheduler 的调度效率 减少 balance-region scheduler 调度开销 优化 hot-region scheduler 的执行效率   运维接口及配置  增加 TLS 支持 支持设置 PD leader 优先级 支持基于 label 配置属性 支持配置特定 label 的节点不调度 Region leader 支持手动 Split Region，可用于处理单 Region 热点的问题 支持打散指定 Region，用于某些情况下手动调整热点 Region 分布 增加配置参数检查规则，完善配置项的合法性较验   调试接口  增加 Drop Region 调试接口 增加枚举各个 PD health 状态的接口   统计相关  添加异常 Region 的统计 添加 Region 隔离级别的统计 添加调度相关 metrics   性能优化  PD leader 尽量与 etcd leader 保持同步，提升写入性能 优化 Region heartbeat 性能，现可支持超过 100 万 Region    TiKV  功能  保护关键配置，防止错误修改 支持 Region Merge [experimental] 添加 Raw DeleteRange API 添加 GetMetric API 添加 Raw Batch Put，Raw Batch Get，Raw Batch Delete 和 Raw Batch Scan 给 Raw KV API 增加 Column Family 参数，能对特定 Column Family 进行操作 Coprocessor 支持 streaming 模式，支持 streaming 聚合 支持配置 Coprocessor 请求的超时时间 心跳包携带时间戳 支持在线修改 RocksDB 的一些参数，包括 block-cache-size 大小等 支持配置 Coprocessor 遇到某些错误时的行为 支持以导数据模式启动，减少导数据过程中的写放大 支持手动对 region 进行对半 split 完善数据修复工具 tikv-ctl Coprocessor 返回更多的统计信息，以便指导 TiDB 的行为 支持 ImportSST API，可以用于 SST 文件导入 [experimental] 新增 TiKV Importer 二进制，与 TiDB Lightning 集成用于快速导入数据 [experimental]   性能  使用 ReadPool 优化读性能，raw_get/get/batch_get 提升 30% 提升 metrics 的性能 Raft snapshot 处理完之后立即通知 PD，加快调度速度 解决 RocksDB 刷盘导致性能抖动问题 提升在数据删除之后的空间回收 加速启动过程中的垃圾清理过程 使用 DeleteFilesInRanges 减少副本迁移时 I/O 开销   稳定性  解决在 PD leader 发送切换的情况下 gRPC call 不返回问题 解决由于 snapshot 导致下线节点慢的问题 限制搬移副本临时占用的空间大小 如果有 Region 长时间没有 Leader，进行上报 根据 compaction 事件及时更新统计的 Region size 限制单次 scan lock 请求的扫描的数据量，防止超时 限制接收 snapshot 过程中的内存占用，防止 OOM 提升 CI test 的速度 解决由于 snapshot 太多导致的 OOM 问题 配置 gRPC 的 keepalive 参数 修复 Region 增多容易 OOM 的问题    TiSpark TiSpark 使用独立的版本号，现为 1.</description>
    </item>
    
    <item>
      <title>TiDB 2.0 release notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.0ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.0ga/</guid>
      <description>TiDB 2.0 Release Notes 2018 年 4 月 27 日，TiDB 发布 2.0 GA 版。相比 1.0 版本，该版本对 MySQL 兼容性、系统稳定性、优化器和执行器做了很多改进。
TiDB  SQL 优化器  精简统计信息数据结构，减小内存占用 加快进程启动时加载统计信息速度 支持统计信息动态更新 [experimental] 优化代价模型，对代价估算更精准 使用 Count-Min Sketch 更精确地估算点查的代价 支持分析更复杂的条件，尽可能充分的使用索引 支持通过 STRAIGHT_JOIN 语法手动指定 Join 顺序 GROUP BY子句为空时使用 Stream Aggregation 算子，提升性能 支持使用索引计算 Max/Min 函数 优化关联子查询处理算法，支持将更多类型的关联子查询解关联并转化成 Left Outer Join 扩大 IndexLookupJoin 的使用范围，索引前缀匹配的场景也可以使用该算法   SQL 执行引擎  使用 Chunk 结构重构所有执行器算子，提升分析型语句执行性能，减少内存占用，显著提升 TPC-H 结果 支持 Streaming Aggregation 算子下推 优化 Insert Into Ignore 语句性能，提升 10 倍以上 优化 Insert On Duplicate Key Update 语句性能，提升 10 倍以上 下推更多的数据类型和函数到 TiKV 计算 优化 Load Data 性能，提升 10 倍以上 支持对物理算子内存使用进行统计，通过配置文件以及系统变量指定超过阈值后的处理行为 支持限制单条 SQL 语句使用内存的大小，减少程序 OOM 风险 支持在 CRUD 操作中使用隐式的行 ID 提升点查性能   Server  支持 Proxy Protocol 添加大量监控项, 优化日志 支持配置文件的合法性检测 支持 HTTP API 获取 TiDB 参数信息 使用 Batch 方式 Resolve Lock，提升垃圾回收速度 支持多线程垃圾回收 支持 TLS   兼容性  支持更多 MySQL 语法 支持配置文件修改 lower_case_table_names 系统变量，用于支持 OGG 数据同步工具 提升对 Navicat 的兼容性 在 Information_Schema 中支持显示建表时间 修复部分函数/表达式返回类型和 MySQL 不同的问题 提升对 JDBC 兼容性 支持更多的 SQL_MODE   DDL  优化 Add Index 的执行速度，部分场景下速度大幅度提升 Add Index 操作变更为低优先级，降低对线上业务影响 Admin Show DDL Jobs 输出更详细的 DDL 任务状态信息 支持 Admin Show DDL Job Queries JobID 查询当前正在运行的 DDL 任务的原始语句 支持 Admin Recover Index 命令，用于灾难恢复情况下修复索引数据 支持通过 Alter 语句修改 Table Options    PD  增加 Region Merge 支持，合并数据删除后产生的空 Region [experimental] 增加 Raft Learner 支持 [experimental] 调度器优化  调度器适应不同的 Region size 提升 TiKV 宕机时数据恢复的优先级和恢复速度 提升下线 TiKV 节点搬迁数据的速度 优化 TiKV 节点空间不足时的调度策略，尽可能防止空间不足时磁盘被写满 提升 balance-leader scheduler 的调度效率 减少 balance-region scheduler 调度开销 优化 hot-region scheduler 的执行效率   运维接口及配置  增加 TLS 支持 支持设置 PD leader 优先级 支持基于 label 配置属性 支持配置特定 label 的节点不调度 Region leader 支持手动 Split Region，可用于处理单 Region 热点的问题 支持打散指定 Region，用于某些情况下手动调整热点 Region 分布 增加配置参数检查规则，完善配置项的合法性较验   调试接口  增加 Drop Region 调试接口 增加枚举各个 PD health 状态的接口   统计相关  添加异常 Region 的统计 添加 Region 隔离级别的统计 添加调度相关 metrics   性能优化  PD leader 尽量与 etcd leader 保持同步，提升写入性能 优化 Region heartbeat 性能，现可支持超过 100 万 Region    TiKV  功能  保护关键配置，防止错误修改 支持 Region Merge [experimental] 添加 Raw DeleteRange API 添加 GetMetric API 添加 Raw Batch Put，Raw Batch Get，Raw Batch Delete 和 Raw Batch Scan 给 Raw KV API 增加 Column Family 参数，能对特定 Column Family 进行操作 Coprocessor 支持 streaming 模式，支持 streaming 聚合 支持配置 Coprocessor 请求的超时时间 心跳包携带时间戳 支持在线修改 RocksDB 的一些参数，包括 block-cache-size 大小等 支持配置 Coprocessor 遇到某些错误时的行为 支持以导数据模式启动，减少导数据过程中的写放大 支持手动对 region 进行对半 split 完善数据修复工具 tikv-ctl Coprocessor 返回更多的统计信息，以便指导 TiDB 的行为 支持 ImportSST API，可以用于 SST 文件导入 [experimental] 新增 TiKV Importer 二进制，与 TiDB Lightning 集成用于快速导入数据 [experimental]   性能  使用 ReadPool 优化读性能，raw_get/get/batch_get 提升 30% 提升 metrics 的性能 Raft snapshot 处理完之后立即通知 PD，加快调度速度 解决 RocksDB 刷盘导致性能抖动问题 提升在数据删除之后的空间回收 加速启动过程中的垃圾清理过程 使用 DeleteFilesInRanges 减少副本迁移时 I/O 开销   稳定性  解决在 PD leader 发送切换的情况下 gRPC call 不返回问题 解决由于 snapshot 导致下线节点慢的问题 限制搬移副本临时占用的空间大小 如果有 Region 长时间没有 Leader，进行上报 根据 compaction 事件及时更新统计的 Region size 限制单次 scan lock 请求的扫描的数据量，防止超时 限制接收 snapshot 过程中的内存占用，防止 OOM 提升 CI test 的速度 解决由于 snapshot 太多导致的 OOM 问题 配置 gRPC 的 keepalive 参数 修复 Region 增多容易 OOM 的问题    TiSpark TiSpark 使用独立的版本号，现为 1.</description>
    </item>
    
    <item>
      <title>TiDB 2.0 release notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.0ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.0ga/</guid>
      <description>TiDB 2.0 Release Notes 2018 年 4 月 27 日，TiDB 发布 2.0 GA 版。相比 1.0 版本，该版本对 MySQL 兼容性、系统稳定性、优化器和执行器做了很多改进。
TiDB  SQL 优化器  精简统计信息数据结构，减小内存占用 加快进程启动时加载统计信息速度 支持统计信息动态更新 [experimental] 优化代价模型，对代价估算更精准 使用 Count-Min Sketch 更精确地估算点查的代价 支持分析更复杂的条件，尽可能充分的使用索引 支持通过 STRAIGHT_JOIN 语法手动指定 Join 顺序 GROUP BY子句为空时使用 Stream Aggregation 算子，提升性能 支持使用索引计算 Max/Min 函数 优化关联子查询处理算法，支持将更多类型的关联子查询解关联并转化成 Left Outer Join 扩大 IndexLookupJoin 的使用范围，索引前缀匹配的场景也可以使用该算法   SQL 执行引擎  使用 Chunk 结构重构所有执行器算子，提升分析型语句执行性能，减少内存占用，显著提升 TPC-H 结果 支持 Streaming Aggregation 算子下推 优化 Insert Into Ignore 语句性能，提升 10 倍以上 优化 Insert On Duplicate Key Update 语句性能，提升 10 倍以上 下推更多的数据类型和函数到 TiKV 计算 优化 Load Data 性能，提升 10 倍以上 支持对物理算子内存使用进行统计，通过配置文件以及系统变量指定超过阈值后的处理行为 支持限制单条 SQL 语句使用内存的大小，减少程序 OOM 风险 支持在 CRUD 操作中使用隐式的行 ID 提升点查性能   Server  支持 Proxy Protocol 添加大量监控项, 优化日志 支持配置文件的合法性检测 支持 HTTP API 获取 TiDB 参数信息 使用 Batch 方式 Resolve Lock，提升垃圾回收速度 支持多线程垃圾回收 支持 TLS   兼容性  支持更多 MySQL 语法 支持配置文件修改 lower_case_table_names 系统变量，用于支持 OGG 数据同步工具 提升对 Navicat 的兼容性 在 Information_Schema 中支持显示建表时间 修复部分函数/表达式返回类型和 MySQL 不同的问题 提升对 JDBC 兼容性 支持更多的 SQL_MODE   DDL  优化 Add Index 的执行速度，部分场景下速度大幅度提升 Add Index 操作变更为低优先级，降低对线上业务影响 Admin Show DDL Jobs 输出更详细的 DDL 任务状态信息 支持 Admin Show DDL Job Queries JobID 查询当前正在运行的 DDL 任务的原始语句 支持 Admin Recover Index 命令，用于灾难恢复情况下修复索引数据 支持通过 Alter 语句修改 Table Options    PD  增加 Region Merge 支持，合并数据删除后产生的空 Region [experimental] 增加 Raft Learner 支持 [experimental] 调度器优化  调度器适应不同的 Region size 提升 TiKV 宕机时数据恢复的优先级和恢复速度 提升下线 TiKV 节点搬迁数据的速度 优化 TiKV 节点空间不足时的调度策略，尽可能防止空间不足时磁盘被写满 提升 balance-leader scheduler 的调度效率 减少 balance-region scheduler 调度开销 优化 hot-region scheduler 的执行效率   运维接口及配置  增加 TLS 支持 支持设置 PD leader 优先级 支持基于 label 配置属性 支持配置特定 label 的节点不调度 Region leader 支持手动 Split Region，可用于处理单 Region 热点的问题 支持打散指定 Region，用于某些情况下手动调整热点 Region 分布 增加配置参数检查规则，完善配置项的合法性较验   调试接口  增加 Drop Region 调试接口 增加枚举各个 PD health 状态的接口   统计相关  添加异常 Region 的统计 添加 Region 隔离级别的统计 添加调度相关 metrics   性能优化  PD leader 尽量与 etcd leader 保持同步，提升写入性能 优化 Region heartbeat 性能，现可支持超过 100 万 Region    TiKV  功能  保护关键配置，防止错误修改 支持 Region Merge [experimental] 添加 Raw DeleteRange API 添加 GetMetric API 添加 Raw Batch Put，Raw Batch Get，Raw Batch Delete 和 Raw Batch Scan 给 Raw KV API 增加 Column Family 参数，能对特定 Column Family 进行操作 Coprocessor 支持 streaming 模式，支持 streaming 聚合 支持配置 Coprocessor 请求的超时时间 心跳包携带时间戳 支持在线修改 RocksDB 的一些参数，包括 block-cache-size 大小等 支持配置 Coprocessor 遇到某些错误时的行为 支持以导数据模式启动，减少导数据过程中的写放大 支持手动对 region 进行对半 split 完善数据修复工具 tikv-ctl Coprocessor 返回更多的统计信息，以便指导 TiDB 的行为 支持 ImportSST API，可以用于 SST 文件导入 [experimental] 新增 TiKV Importer 二进制，与 TiDB Lightning 集成用于快速导入数据 [experimental]   性能  使用 ReadPool 优化读性能，raw_get/get/batch_get 提升 30% 提升 metrics 的性能 Raft snapshot 处理完之后立即通知 PD，加快调度速度 解决 RocksDB 刷盘导致性能抖动问题 提升在数据删除之后的空间回收 加速启动过程中的垃圾清理过程 使用 DeleteFilesInRanges 减少副本迁移时 I/O 开销   稳定性  解决在 PD leader 发送切换的情况下 gRPC call 不返回问题 解决由于 snapshot 导致下线节点慢的问题 限制搬移副本临时占用的空间大小 如果有 Region 长时间没有 Leader，进行上报 根据 compaction 事件及时更新统计的 Region size 限制单次 scan lock 请求的扫描的数据量，防止超时 限制接收 snapshot 过程中的内存占用，防止 OOM 提升 CI test 的速度 解决由于 snapshot 太多导致的 OOM 问题 配置 gRPC 的 keepalive 参数 修复 Region 增多容易 OOM 的问题    TiSpark TiSpark 使用独立的版本号，现为 1.</description>
    </item>
    
    <item>
      <title>TiDB 2.0.1 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/201/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/201/</guid>
      <description>TiDB 2.0.1 Release Notes On May 16, 2018, TiDB 2.0.1 is released. Compared with TiDB 2.0.0 (GA), this release has great improvement in MySQL compatibility and system stability.
TiDB  Update the progress of Add Index to the DDL job information in real time Add the tidb_auto_analyze_ratio session variable to control the threshold value of automatic statistics update Fix an issue that not all residual states are cleaned up when the transaction commit fails Fix a bug about adding indexes in some conditions Fix the correctness related issue when DDL modifies surface operations in some concurrent scenarios Fix a bug that the result of LIMIT is incorrect in some conditions Fix a capitalization issue of the ADMIN CHECK INDEX statement to make its index name case insensitive Fix a compatibility issue of the UNION statement Fix a compatibility issue when inserting data of TIME type Fix a goroutine leak issue caused by copIteratorTaskSender in some conditions Add an option for TiDB to control the behaviour of Binlog failure Refactor the Coprocessor slow log to distinguish between the scenario of tasks with long processing time and long waiting time Log nothing when meeting MySQL protocol handshake error, to avoid too many logs caused by the load balancer Keep Alive mechanism Refine the “Out of range value for column” error message Fix a bug when there is a subquery in an Update statement Change the behaviour of handling SIGTERM, and do not wait for all queries to terminate anymore  PD  Add the Scatter Range scheduler to balance Regions with the specified key range Optimize the scheduling of Merge Region to prevent the newly split Region from being merged Add Learner related metrics Fix the issue that the scheduler is mistakenly deleted after restart Fix the error that occurs when parsing the configuration file Fix the issue that the etcd leader and the PD leader are not replicated Fix the issue that Learner still appears after it is closed Fix the issue that Regions fail to load because the packet size is too large  TiKV  Fix the issue that SELECT FOR UPDATE prevents others from reading Optimize the slow query log Reduce the number of thread_yield calls Fix the bug that raftstore is accidentally blocked when generating the snapshot Fix the issue that Learner cannot be successfully elected in special conditions Fix the issue that split might cause dirty read in extreme conditions Correct the default value of the read thread pool configuration Speed up Delete Range  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.1 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/201/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/201/</guid>
      <description>TiDB 2.0.1 Release Notes On May 16, 2018, TiDB 2.0.1 is released. Compared with TiDB 2.0.0 (GA), this release has great improvement in MySQL compatibility and system stability.
TiDB  Update the progress of Add Index to the DDL job information in real time Add the tidb_auto_analyze_ratio session variable to control the threshold value of automatic statistics update Fix an issue that not all residual states are cleaned up when the transaction commit fails Fix a bug about adding indexes in some conditions Fix the correctness related issue when DDL modifies surface operations in some concurrent scenarios Fix a bug that the result of LIMIT is incorrect in some conditions Fix a capitalization issue of the ADMIN CHECK INDEX statement to make its index name case insensitive Fix a compatibility issue of the UNION statement Fix a compatibility issue when inserting data of TIME type Fix a goroutine leak issue caused by copIteratorTaskSender in some conditions Add an option for TiDB to control the behaviour of Binlog failure Refactor the Coprocessor slow log to distinguish between the scenario of tasks with long processing time and long waiting time Log nothing when meeting MySQL protocol handshake error, to avoid too many logs caused by the load balancer Keep Alive mechanism Refine the “Out of range value for column” error message Fix a bug when there is a subquery in an Update statement Change the behaviour of handling SIGTERM, and do not wait for all queries to terminate anymore  PD  Add the Scatter Range scheduler to balance Regions with the specified key range Optimize the scheduling of Merge Region to prevent the newly split Region from being merged Add Learner related metrics Fix the issue that the scheduler is mistakenly deleted after restart Fix the error that occurs when parsing the configuration file Fix the issue that the etcd leader and the PD leader are not replicated Fix the issue that Learner still appears after it is closed Fix the issue that Regions fail to load because the packet size is too large  TiKV  Fix the issue that SELECT FOR UPDATE prevents others from reading Optimize the slow query log Reduce the number of thread_yield calls Fix the bug that raftstore is accidentally blocked when generating the snapshot Fix the issue that Learner cannot be successfully elected in special conditions Fix the issue that split might cause dirty read in extreme conditions Correct the default value of the read thread pool configuration Speed up Delete Range  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.1 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/201/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/201/</guid>
      <description>TiDB 2.0.1 Release Notes On May 16, 2018, TiDB 2.0.1 is released. Compared with TiDB 2.0.0 (GA), this release has great improvement in MySQL compatibility and system stability.
TiDB  Update the progress of Add Index to the DDL job information in real time Add the tidb_auto_analyze_ratio session variable to control the threshold value of automatic statistics update Fix an issue that not all residual states are cleaned up when the transaction commit fails Fix a bug about adding indexes in some conditions Fix the correctness related issue when DDL modifies surface operations in some concurrent scenarios Fix a bug that the result of LIMIT is incorrect in some conditions Fix a capitalization issue of the ADMIN CHECK INDEX statement to make its index name case insensitive Fix a compatibility issue of the UNION statement Fix a compatibility issue when inserting data of TIME type Fix a goroutine leak issue caused by copIteratorTaskSender in some conditions Add an option for TiDB to control the behaviour of Binlog failure Refactor the Coprocessor slow log to distinguish between the scenario of tasks with long processing time and long waiting time Log nothing when meeting MySQL protocol handshake error, to avoid too many logs caused by the load balancer Keep Alive mechanism Refine the “Out of range value for column” error message Fix a bug when there is a subquery in an Update statement Change the behaviour of handling SIGTERM, and do not wait for all queries to terminate anymore  PD  Add the Scatter Range scheduler to balance Regions with the specified key range Optimize the scheduling of Merge Region to prevent the newly split Region from being merged Add Learner related metrics Fix the issue that the scheduler is mistakenly deleted after restart Fix the error that occurs when parsing the configuration file Fix the issue that the etcd leader and the PD leader are not replicated Fix the issue that Learner still appears after it is closed Fix the issue that Regions fail to load because the packet size is too large  TiKV  Fix the issue that SELECT FOR UPDATE prevents others from reading Optimize the slow query log Reduce the number of thread_yield calls Fix the bug that raftstore is accidentally blocked when generating the snapshot Fix the issue that Learner cannot be successfully elected in special conditions Fix the issue that split might cause dirty read in extreme conditions Correct the default value of the read thread pool configuration Speed up Delete Range  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.1 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/201/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/201/</guid>
      <description>TiDB 2.0.1 Release Notes On May 16, 2018, TiDB 2.0.1 is released. Compared with TiDB 2.0.0 (GA), this release has great improvement in MySQL compatibility and system stability.
TiDB  Update the progress of Add Index to the DDL job information in real time Add the tidb_auto_analyze_ratio session variable to control the threshold value of automatic statistics update Fix an issue that not all residual states are cleaned up when the transaction commit fails Fix a bug about adding indexes in some conditions Fix the correctness related issue when DDL modifies surface operations in some concurrent scenarios Fix a bug that the result of LIMIT is incorrect in some conditions Fix a capitalization issue of the ADMIN CHECK INDEX statement to make its index name case insensitive Fix a compatibility issue of the UNION statement Fix a compatibility issue when inserting data of TIME type Fix a goroutine leak issue caused by copIteratorTaskSender in some conditions Add an option for TiDB to control the behaviour of Binlog failure Refactor the Coprocessor slow log to distinguish between the scenario of tasks with long processing time and long waiting time Log nothing when meeting MySQL protocol handshake error, to avoid too many logs caused by the load balancer Keep Alive mechanism Refine the “Out of range value for column” error message Fix a bug when there is a subquery in an Update statement Change the behaviour of handling SIGTERM, and do not wait for all queries to terminate anymore  PD  Add the Scatter Range scheduler to balance Regions with the specified key range Optimize the scheduling of Merge Region to prevent the newly split Region from being merged Add Learner related metrics Fix the issue that the scheduler is mistakenly deleted after restart Fix the error that occurs when parsing the configuration file Fix the issue that the etcd leader and the PD leader are not replicated Fix the issue that Learner still appears after it is closed Fix the issue that Regions fail to load because the packet size is too large  TiKV  Fix the issue that SELECT FOR UPDATE prevents others from reading Optimize the slow query log Reduce the number of thread_yield calls Fix the bug that raftstore is accidentally blocked when generating the snapshot Fix the issue that Learner cannot be successfully elected in special conditions Fix the issue that split might cause dirty read in extreme conditions Correct the default value of the read thread pool configuration Speed up Delete Range  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.1 release notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/201/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/201/</guid>
      <description>TiDB 2.0.1 Release Notes 2018 年 5 月 16 日，TiDB 发布 2.0.1 版。该版本在 2.0.0 (GA) 版的基础上，对 MySQL 兼容性、系统稳定性做出了改进。
TiDB  实时更新 Add Index 的进度到 DDL 任务信息中 添加 Session 变量 tidb_auto_analyze_ratio 控制统计信息自动更新阈值 修复当事务提交失败时可能未清理所有的残留状态的问题 修复加索引在部分情况下的 Bug 修复 DDL 修改表面操作在某些并发场景下的正确性问题 修复某些情况下 LIMIT 结果不正确的问题 修复 ADMIN CHECK INDEX 语句索引名字区分大小写问题 修复 UNION 语句的兼容性问题 修复插入 TIME 类型数据的兼容性问题 修复某些情况下 copIteratorTaskSender 导致的 goroutine 泄漏问题 增加一个选项，用于设置 TiDB 在写 Binlog 失败的情况下的行为 优化 Coprocessor 慢请求日志格式，区分处理时间长与排队时间长的任务 MySQL 协议握手阶段发生错误不打印日志，避免 KeepAlive 造成大量日志 优化 Out of range value for column 的错误信息 修复 Update 语句中遇到子查询导致结果错误的问题 调整 TiDB 进程处理 SIGTERM 的行为，不等待正在执行的 Query 完成  PD  添加 Scatter Range 调度，调度指定 Key Range 包含的 Region 优化 Merge Region 调度，使新分裂不久的 Region 不能被合并 添加 learner 相关的 metrics 修复重启误删 scheduler 的问题 修复解析配置文件出错问题 修复 etcd leader 和 PD leader 不同步的问题 修复关闭 learner 情况下还有 learner 出现的问题 修复读取包过大造成 load Regions 失败的问题  TiKV  修复 SELECT FOR UPDATE 阻止其他人读的问题 优化慢查询的日志 减少 thread_yield 的调用次数 修复生成 snapshot 会意外阻塞 raftstore 的 bug 修复特殊情况下开启 learner 无法选举成功的问题 修复极端情况下分裂可能导致的脏读问题 修正读线程池的配置默认值 修正删大数据表会影响写性能的问题  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.1 release notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/201/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/201/</guid>
      <description>TiDB 2.0.1 Release Notes 2018 年 5 月 16 日，TiDB 发布 2.0.1 版。该版本在 2.0.0 (GA) 版的基础上，对 MySQL 兼容性、系统稳定性做出了改进。
TiDB  实时更新 Add Index 的进度到 DDL 任务信息中 添加 Session 变量 tidb_auto_analyze_ratio 控制统计信息自动更新阈值 修复当事务提交失败时可能未清理所有的残留状态的问题 修复加索引在部分情况下的 Bug 修复 DDL 修改表面操作在某些并发场景下的正确性问题 修复某些情况下 LIMIT 结果不正确的问题 修复 ADMIN CHECK INDEX 语句索引名字区分大小写问题 修复 UNION 语句的兼容性问题 修复插入 TIME 类型数据的兼容性问题 修复某些情况下 copIteratorTaskSender 导致的 goroutine 泄漏问题 增加一个选项，用于设置 TiDB 在写 Binlog 失败的情况下的行为 优化 Coprocessor 慢请求日志格式，区分处理时间长与排队时间长的任务 MySQL 协议握手阶段发生错误不打印日志，避免 KeepAlive 造成大量日志 优化 Out of range value for column 的错误信息 修复 Update 语句中遇到子查询导致结果错误的问题 调整 TiDB 进程处理 SIGTERM 的行为，不等待正在执行的 Query 完成  PD  添加 Scatter Range 调度，调度指定 Key Range 包含的 Region 优化 Merge Region 调度，使新分裂不久的 Region 不能被合并 添加 learner 相关的 metrics 修复重启误删 scheduler 的问题 修复解析配置文件出错问题 修复 etcd leader 和 PD leader 不同步的问题 修复关闭 learner 情况下还有 learner 出现的问题 修复读取包过大造成 load Regions 失败的问题  TiKV  修复 SELECT FOR UPDATE 阻止其他人读的问题 优化慢查询的日志 减少 thread_yield 的调用次数 修复生成 snapshot 会意外阻塞 raftstore 的 bug 修复特殊情况下开启 learner 无法选举成功的问题 修复极端情况下分裂可能导致的脏读问题 修正读线程池的配置默认值 修正删大数据表会影响写性能的问题  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.1 release notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/201/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/201/</guid>
      <description>TiDB 2.0.1 Release Notes 2018 年 5 月 16 日，TiDB 发布 2.0.1 版。该版本在 2.0.0 (GA) 版的基础上，对 MySQL 兼容性、系统稳定性做出了改进。
TiDB  实时更新 Add Index 的进度到 DDL 任务信息中 添加 Session 变量 tidb_auto_analyze_ratio 控制统计信息自动更新阈值 修复当事务提交失败时可能未清理所有的残留状态的问题 修复加索引在部分情况下的 Bug 修复 DDL 修改表面操作在某些并发场景下的正确性问题 修复某些情况下 LIMIT 结果不正确的问题 修复 ADMIN CHECK INDEX 语句索引名字区分大小写问题 修复 UNION 语句的兼容性问题 修复插入 TIME 类型数据的兼容性问题 修复某些情况下 copIteratorTaskSender 导致的 goroutine 泄漏问题 增加一个选项，用于设置 TiDB 在写 Binlog 失败的情况下的行为 优化 Coprocessor 慢请求日志格式，区分处理时间长与排队时间长的任务 MySQL 协议握手阶段发生错误不打印日志，避免 KeepAlive 造成大量日志 优化 Out of range value for column 的错误信息 修复 Update 语句中遇到子查询导致结果错误的问题 调整 TiDB 进程处理 SIGTERM 的行为，不等待正在执行的 Query 完成  PD  添加 Scatter Range 调度，调度指定 Key Range 包含的 Region 优化 Merge Region 调度，使新分裂不久的 Region 不能被合并 添加 learner 相关的 metrics 修复重启误删 scheduler 的问题 修复解析配置文件出错问题 修复 etcd leader 和 PD leader 不同步的问题 修复关闭 learner 情况下还有 learner 出现的问题 修复读取包过大造成 load Regions 失败的问题  TiKV  修复 SELECT FOR UPDATE 阻止其他人读的问题 优化慢查询的日志 减少 thread_yield 的调用次数 修复生成 snapshot 会意外阻塞 raftstore 的 bug 修复特殊情况下开启 learner 无法选举成功的问题 修复极端情况下分裂可能导致的脏读问题 修正读线程池的配置默认值 修正删大数据表会影响写性能的问题  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.1 release notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/201/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/201/</guid>
      <description>TiDB 2.0.1 Release Notes 2018 年 5 月 16 日，TiDB 发布 2.0.1 版。该版本在 2.0.0 (GA) 版的基础上，对 MySQL 兼容性、系统稳定性做出了改进。
TiDB  实时更新 Add Index 的进度到 DDL 任务信息中 添加 Session 变量 tidb_auto_analyze_ratio 控制统计信息自动更新阈值 修复当事务提交失败时可能未清理所有的残留状态的问题 修复加索引在部分情况下的 Bug 修复 DDL 修改表面操作在某些并发场景下的正确性问题 修复某些情况下 LIMIT 结果不正确的问题 修复 ADMIN CHECK INDEX 语句索引名字区分大小写问题 修复 UNION 语句的兼容性问题 修复插入 TIME 类型数据的兼容性问题 修复某些情况下 copIteratorTaskSender 导致的 goroutine 泄漏问题 增加一个选项，用于设置 TiDB 在写 Binlog 失败的情况下的行为 优化 Coprocessor 慢请求日志格式，区分处理时间长与排队时间长的任务 MySQL 协议握手阶段发生错误不打印日志，避免 KeepAlive 造成大量日志 优化 Out of range value for column 的错误信息 修复 Update 语句中遇到子查询导致结果错误的问题 调整 TiDB 进程处理 SIGTERM 的行为，不等待正在执行的 Query 完成  PD  添加 Scatter Range 调度，调度指定 Key Range 包含的 Region 优化 Merge Region 调度，使新分裂不久的 Region 不能被合并 添加 learner 相关的 metrics 修复重启误删 scheduler 的问题 修复解析配置文件出错问题 修复 etcd leader 和 PD leader 不同步的问题 修复关闭 learner 情况下还有 learner 出现的问题 修复读取包过大造成 load Regions 失败的问题  TiKV  修复 SELECT FOR UPDATE 阻止其他人读的问题 优化慢查询的日志 减少 thread_yield 的调用次数 修复生成 snapshot 会意外阻塞 raftstore 的 bug 修复特殊情况下开启 learner 无法选举成功的问题 修复极端情况下分裂可能导致的脏读问题 修正读线程池的配置默认值 修正删大数据表会影响写性能的问题  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.10 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.0.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.0.10/</guid>
      <description>TiDB 2.0.10 Release Notes 2018 年 12 月 18 日，TiDB 发布 2.0.10 版，TiDB Ansible 相应发布 2.0.10 版本。该版本在 2.0.9 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  修复取消 DDL 任务的时候可能导致的问题 #8513 修复 ORDER BY，UNION 语句无法引用带表名的列的问题 #8514 修复 UNCOMPRESS 函数没有判断错误输入长度的问题 #8607 修复 ANSI_QUOTES SQL_MODE 在 TiDB 升级的时候遇到的问题 #8575 修复某些情况下 select 返回结果错误的问题 #8570 修复 TiDB 在收到退出信号的时候可能无法退出的问题 #8501 修复某些情况下 IndexLookUpJoin 返回错误结果的问题 #8508 避免下推有 GetVar 或 SetVar 的 filter #8454 修复某些情况下 UNION 语句结果长度错误的问题 #8491 修复 PREPARE FROM @var_name 的问题 #8488 修复某些情况下导出统计信息 panic 的问题 #8464 修复统计信息某些情况下对点查估算的问题 #8493 修复某些情况下返回 Enum 默认值为字符串导致的 panic #8476 修复在宽表场景下，占用太多内存的问题 #8467 修复 Parser 对取模操作错误格式化导致的问题 #8431 修复某些情况下添加外键约束导致的 panic 问题 #8421，#8410 修复 YEAR 类型错误转换零值的问题 #8396 修复 VALUES 函数在参数不为列的时候 panic 的问题 #8404 存在子查询的语句禁用 Plan Cache #8395  PD  修复 RaftCluster 在退出时可能的死锁问题 #1370  TiKV  修复迁移 Leader 到新节点时造成请求延时问题 #3929 修复多余的 Region 心跳 #3930  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.10 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.0.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.0.10/</guid>
      <description>TiDB 2.0.10 Release Notes 2018 年 12 月 18 日，TiDB 发布 2.0.10 版，TiDB Ansible 相应发布 2.0.10 版本。该版本在 2.0.9 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  修复取消 DDL 任务的时候可能导致的问题 #8513 修复 ORDER BY，UNION 语句无法引用带表名的列的问题 #8514 修复 UNCOMPRESS 函数没有判断错误输入长度的问题 #8607 修复 ANSI_QUOTES SQL_MODE 在 TiDB 升级的时候遇到的问题 #8575 修复某些情况下 select 返回结果错误的问题 #8570 修复 TiDB 在收到退出信号的时候可能无法退出的问题 #8501 修复某些情况下 IndexLookUpJoin 返回错误结果的问题 #8508 避免下推有 GetVar 或 SetVar 的 filter #8454 修复某些情况下 UNION 语句结果长度错误的问题 #8491 修复 PREPARE FROM @var_name 的问题 #8488 修复某些情况下导出统计信息 panic 的问题 #8464 修复统计信息某些情况下对点查估算的问题 #8493 修复某些情况下返回 Enum 默认值为字符串导致的 panic #8476 修复在宽表场景下，占用太多内存的问题 #8467 修复 Parser 对取模操作错误格式化导致的问题 #8431 修复某些情况下添加外键约束导致的 panic 问题 #8421，#8410 修复 YEAR 类型错误转换零值的问题 #8396 修复 VALUES 函数在参数不为列的时候 panic 的问题 #8404 存在子查询的语句禁用 Plan Cache #8395  PD  修复 RaftCluster 在退出时可能的死锁问题 #1370  TiKV  修复迁移 Leader 到新节点时造成请求延时问题 #3929 修复多余的 Region 心跳 #3930  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.10 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.0.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.0.10/</guid>
      <description>TiDB 2.0.10 Release Notes 2018 年 12 月 18 日，TiDB 发布 2.0.10 版，TiDB Ansible 相应发布 2.0.10 版本。该版本在 2.0.9 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  修复取消 DDL 任务的时候可能导致的问题 #8513 修复 ORDER BY，UNION 语句无法引用带表名的列的问题 #8514 修复 UNCOMPRESS 函数没有判断错误输入长度的问题 #8607 修复 ANSI_QUOTES SQL_MODE 在 TiDB 升级的时候遇到的问题 #8575 修复某些情况下 select 返回结果错误的问题 #8570 修复 TiDB 在收到退出信号的时候可能无法退出的问题 #8501 修复某些情况下 IndexLookUpJoin 返回错误结果的问题 #8508 避免下推有 GetVar 或 SetVar 的 filter #8454 修复某些情况下 UNION 语句结果长度错误的问题 #8491 修复 PREPARE FROM @var_name 的问题 #8488 修复某些情况下导出统计信息 panic 的问题 #8464 修复统计信息某些情况下对点查估算的问题 #8493 修复某些情况下返回 Enum 默认值为字符串导致的 panic #8476 修复在宽表场景下，占用太多内存的问题 #8467 修复 Parser 对取模操作错误格式化导致的问题 #8431 修复某些情况下添加外键约束导致的 panic 问题 #8421，#8410 修复 YEAR 类型错误转换零值的问题 #8396 修复 VALUES 函数在参数不为列的时候 panic 的问题 #8404 存在子查询的语句禁用 Plan Cache #8395  PD  修复 RaftCluster 在退出时可能的死锁问题 #1370  TiKV  修复迁移 Leader 到新节点时造成请求延时问题 #3929 修复多余的 Region 心跳 #3930  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.10 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.0.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.0.10/</guid>
      <description>TiDB 2.0.10 Release Notes 2018 年 12 月 18 日，TiDB 发布 2.0.10 版，TiDB Ansible 相应发布 2.0.10 版本。该版本在 2.0.9 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  修复取消 DDL 任务的时候可能导致的问题 #8513 修复 ORDER BY，UNION 语句无法引用带表名的列的问题 #8514 修复 UNCOMPRESS 函数没有判断错误输入长度的问题 #8607 修复 ANSI_QUOTES SQL_MODE 在 TiDB 升级的时候遇到的问题 #8575 修复某些情况下 select 返回结果错误的问题 #8570 修复 TiDB 在收到退出信号的时候可能无法退出的问题 #8501 修复某些情况下 IndexLookUpJoin 返回错误结果的问题 #8508 避免下推有 GetVar 或 SetVar 的 filter #8454 修复某些情况下 UNION 语句结果长度错误的问题 #8491 修复 PREPARE FROM @var_name 的问题 #8488 修复某些情况下导出统计信息 panic 的问题 #8464 修复统计信息某些情况下对点查估算的问题 #8493 修复某些情况下返回 Enum 默认值为字符串导致的 panic #8476 修复在宽表场景下，占用太多内存的问题 #8467 修复 Parser 对取模操作错误格式化导致的问题 #8431 修复某些情况下添加外键约束导致的 panic 问题 #8421，#8410 修复 YEAR 类型错误转换零值的问题 #8396 修复 VALUES 函数在参数不为列的时候 panic 的问题 #8404 存在子查询的语句禁用 Plan Cache #8395  PD  修复 RaftCluster 在退出时可能的死锁问题 #1370  TiKV  修复迁移 Leader 到新节点时造成请求延时问题 #3929 修复多余的 Region 心跳 #3930  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.10 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.0.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.0.10/</guid>
      <description>TiDB 2.0.10 Release Notes On December 18, 2018, TiDB 2.0.10 is released. The corresponding TiDB Ansible 2.0.10 is also released. Compared with TiDB 2.0.9, this release has great improvement in system compatibility and stability.
TiDB  Fix the possible issue caused by canceling a DDL job #8513 Fix the issue that the ORDER BY and UNION clauses cannot quote the column including a table name #8514 Fix the issue that the UNCOMPRESS function does not judge the incorrect input length #8607 Fix the issue encountered by ANSI_QUOTES SQL_MODE when upgrading TiDB #8575 Fix the issue that select returns the wrong result in some cases #8570 Fix the possible issue that TiDB cannot exit when it receives the exit signal #8501 Fix the issue that IndexLookUpJoin returns the wrong result in some cases #8508 Avoid pushing down the filter containing GetVar or SetVar #8454 Fix the issue that the result length of the UNION clauses is incorrect in some cases #8491 Fix the issue of PREPARE FROM @var_name #8488 Fix the panic issue when dumping statistics information in some cases #8464 Fix the statistics estimation issue of point queries in some cases #8493 Fix the panic issue when the returned default enum value is a string #8476 Fix the issue that too much memory is consumed in the scenario of wide tables #8467 Fix the issue encountered when Parser incorrectly formats the mod opcode #8431 Fix the panic issue caused by adding foreign key constraints in some cases #8421, #8410 Fix the issue that the YEAR column type incorrectly converts the zero value #8396 Fix the panic issue occurred when the argument of the VALUES function is not a column #8404 Disable Plan Cache for statements containing subqueries #8395  PD  Fix the possible issue that RaftCluster cannot stop caused by deadlock #1370  TiKV  Avoid transferring the leader to a newly created peer, to optimize the possible delay #3929 Fix redundant Region heartbeats #3930  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.10 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.0.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.0.10/</guid>
      <description>TiDB 2.0.10 Release Notes On December 18, 2018, TiDB 2.0.10 is released. The corresponding TiDB Ansible 2.0.10 is also released. Compared with TiDB 2.0.9, this release has great improvement in system compatibility and stability.
TiDB  Fix the possible issue caused by canceling a DDL job #8513 Fix the issue that the ORDER BY and UNION clauses cannot quote the column including a table name #8514 Fix the issue that the UNCOMPRESS function does not judge the incorrect input length #8607 Fix the issue encountered by ANSI_QUOTES SQL_MODE when upgrading TiDB #8575 Fix the issue that select returns the wrong result in some cases #8570 Fix the possible issue that TiDB cannot exit when it receives the exit signal #8501 Fix the issue that IndexLookUpJoin returns the wrong result in some cases #8508 Avoid pushing down the filter containing GetVar or SetVar #8454 Fix the issue that the result length of the UNION clauses is incorrect in some cases #8491 Fix the issue of PREPARE FROM @var_name #8488 Fix the panic issue when dumping statistics information in some cases #8464 Fix the statistics estimation issue of point queries in some cases #8493 Fix the panic issue when the returned default enum value is a string #8476 Fix the issue that too much memory is consumed in the scenario of wide tables #8467 Fix the issue encountered when Parser incorrectly formats the mod opcode #8431 Fix the panic issue caused by adding foreign key constraints in some cases #8421, #8410 Fix the issue that the YEAR column type incorrectly converts the zero value #8396 Fix the panic issue occurred when the argument of the VALUES function is not a column #8404 Disable Plan Cache for statements containing subqueries #8395  PD  Fix the possible issue that RaftCluster cannot stop caused by deadlock #1370  TiKV  Avoid transferring the leader to a newly created peer, to optimize the possible delay #3929 Fix redundant Region heartbeats #3930  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.10 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.0.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.0.10/</guid>
      <description>TiDB 2.0.10 Release Notes On December 18, 2018, TiDB 2.0.10 is released. The corresponding TiDB Ansible 2.0.10 is also released. Compared with TiDB 2.0.9, this release has great improvement in system compatibility and stability.
TiDB  Fix the possible issue caused by canceling a DDL job #8513 Fix the issue that the ORDER BY and UNION clauses cannot quote the column including a table name #8514 Fix the issue that the UNCOMPRESS function does not judge the incorrect input length #8607 Fix the issue encountered by ANSI_QUOTES SQL_MODE when upgrading TiDB #8575 Fix the issue that select returns the wrong result in some cases #8570 Fix the possible issue that TiDB cannot exit when it receives the exit signal #8501 Fix the issue that IndexLookUpJoin returns the wrong result in some cases #8508 Avoid pushing down the filter containing GetVar or SetVar #8454 Fix the issue that the result length of the UNION clauses is incorrect in some cases #8491 Fix the issue of PREPARE FROM @var_name #8488 Fix the panic issue when dumping statistics information in some cases #8464 Fix the statistics estimation issue of point queries in some cases #8493 Fix the panic issue when the returned default enum value is a string #8476 Fix the issue that too much memory is consumed in the scenario of wide tables #8467 Fix the issue encountered when Parser incorrectly formats the mod opcode #8431 Fix the panic issue caused by adding foreign key constraints in some cases #8421, #8410 Fix the issue that the YEAR column type incorrectly converts the zero value #8396 Fix the panic issue occurred when the argument of the VALUES function is not a column #8404 Disable Plan Cache for statements containing subqueries #8395  PD  Fix the possible issue that RaftCluster cannot stop caused by deadlock #1370  TiKV  Avoid transferring the leader to a newly created peer, to optimize the possible delay #3929 Fix redundant Region heartbeats #3930  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.10 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.0.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.0.10/</guid>
      <description>TiDB 2.0.10 Release Notes On December 18, 2018, TiDB 2.0.10 is released. The corresponding TiDB Ansible 2.0.10 is also released. Compared with TiDB 2.0.9, this release has great improvement in system compatibility and stability.
TiDB  Fix the possible issue caused by canceling a DDL job #8513 Fix the issue that the ORDER BY and UNION clauses cannot quote the column including a table name #8514 Fix the issue that the UNCOMPRESS function does not judge the incorrect input length #8607 Fix the issue encountered by ANSI_QUOTES SQL_MODE when upgrading TiDB #8575 Fix the issue that select returns the wrong result in some cases #8570 Fix the possible issue that TiDB cannot exit when it receives the exit signal #8501 Fix the issue that IndexLookUpJoin returns the wrong result in some cases #8508 Avoid pushing down the filter containing GetVar or SetVar #8454 Fix the issue that the result length of the UNION clauses is incorrect in some cases #8491 Fix the issue of PREPARE FROM @var_name #8488 Fix the panic issue when dumping statistics information in some cases #8464 Fix the statistics estimation issue of point queries in some cases #8493 Fix the panic issue when the returned default enum value is a string #8476 Fix the issue that too much memory is consumed in the scenario of wide tables #8467 Fix the issue encountered when Parser incorrectly formats the mod opcode #8431 Fix the panic issue caused by adding foreign key constraints in some cases #8421, #8410 Fix the issue that the YEAR column type incorrectly converts the zero value #8396 Fix the panic issue occurred when the argument of the VALUES function is not a column #8404 Disable Plan Cache for statements containing subqueries #8395  PD  Fix the possible issue that RaftCluster cannot stop caused by deadlock #1370  TiKV  Avoid transferring the leader to a newly created peer, to optimize the possible delay #3929 Fix redundant Region heartbeats #3930  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.11 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.0.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.0.11/</guid>
      <description>TiDB 2.0.11 Release Notes 2019 年 1 月 3 日，TiDB 发布 2.0.11 版，TiDB Ansible 相应发布 2.0.11 版本。该版本在 2.0.10 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  修复 PD 发生异常的情况下，Error 没有被正确处理的问题 #8764 修复 Rename 相同表的行为，跟 MySQL 保持一致 #8809 修复 ADMIN CHECK TABLE 在 ADD INDEX 过程中误报的问题 #8750 修复前缀索引在某些情况下，开闭范围区间错误的问题 #8877 修复在某些添加列的情况下，UPDATE 语句 panic 的问题 #8904  TiKV  修复了两个 Region merge 相关的问题 #4003，#4004  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.11 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.0.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.0.11/</guid>
      <description>TiDB 2.0.11 Release Notes 2019 年 1 月 3 日，TiDB 发布 2.0.11 版，TiDB Ansible 相应发布 2.0.11 版本。该版本在 2.0.10 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  修复 PD 发生异常的情况下，Error 没有被正确处理的问题 #8764 修复 Rename 相同表的行为，跟 MySQL 保持一致 #8809 修复 ADMIN CHECK TABLE 在 ADD INDEX 过程中误报的问题 #8750 修复前缀索引在某些情况下，开闭范围区间错误的问题 #8877 修复在某些添加列的情况下，UPDATE 语句 panic 的问题 #8904  TiKV  修复了两个 Region merge 相关的问题 #4003，#4004  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.11 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.0.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.0.11/</guid>
      <description>TiDB 2.0.11 Release Notes 2019 年 1 月 3 日，TiDB 发布 2.0.11 版，TiDB Ansible 相应发布 2.0.11 版本。该版本在 2.0.10 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  修复 PD 发生异常的情况下，Error 没有被正确处理的问题 #8764 修复 Rename 相同表的行为，跟 MySQL 保持一致 #8809 修复 ADMIN CHECK TABLE 在 ADD INDEX 过程中误报的问题 #8750 修复前缀索引在某些情况下，开闭范围区间错误的问题 #8877 修复在某些添加列的情况下，UPDATE 语句 panic 的问题 #8904  TiKV  修复了两个 Region merge 相关的问题 #4003，#4004  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.11 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.0.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.0.11/</guid>
      <description>TiDB 2.0.11 Release Notes 2019 年 1 月 3 日，TiDB 发布 2.0.11 版，TiDB Ansible 相应发布 2.0.11 版本。该版本在 2.0.10 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  修复 PD 发生异常的情况下，Error 没有被正确处理的问题 #8764 修复 Rename 相同表的行为，跟 MySQL 保持一致 #8809 修复 ADMIN CHECK TABLE 在 ADD INDEX 过程中误报的问题 #8750 修复前缀索引在某些情况下，开闭范围区间错误的问题 #8877 修复在某些添加列的情况下，UPDATE 语句 panic 的问题 #8904  TiKV  修复了两个 Region merge 相关的问题 #4003，#4004  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.11 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.0.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.0.11/</guid>
      <description>TiDB 2.0.11 Release Notes On January 03, 2019, TiDB 2.0.11 is released. The corresponding TiDB Ansible 2.0.11 is also released. Compared with TiDB 2.0.10, this release has great improvement in system compatibility and stability.
TiDB  Fix the issue that the error is not handled properly when PD is in an abnormal condition #8764 Fix the issue that the Rename operation on a table in TiDB is not compatible with that in MySQL #8809 Fix the issue that the error message is wrongly reported when the ADMIN CHECK TABLE operation is performed in the process of executing the ADD INDEX statement #8750 Fix the issue that the prefix index range is incorrect in some cases #8877 Fix the panic issue of the UPDATE statement when columns are added in some cases #8904  TiKV  Fix two issues about Region merge #4003, #4004  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.11 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.0.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.0.11/</guid>
      <description>TiDB 2.0.11 Release Notes On January 03, 2019, TiDB 2.0.11 is released. The corresponding TiDB Ansible 2.0.11 is also released. Compared with TiDB 2.0.10, this release has great improvement in system compatibility and stability.
TiDB  Fix the issue that the error is not handled properly when PD is in an abnormal condition #8764 Fix the issue that the Rename operation on a table in TiDB is not compatible with that in MySQL #8809 Fix the issue that the error message is wrongly reported when the ADMIN CHECK TABLE operation is performed in the process of executing the ADD INDEX statement #8750 Fix the issue that the prefix index range is incorrect in some cases #8877 Fix the panic issue of the UPDATE statement when columns are added in some cases #8904  TiKV  Fix two issues about Region merge #4003, #4004  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.11 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.0.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.0.11/</guid>
      <description>TiDB 2.0.11 Release Notes On January 03, 2019, TiDB 2.0.11 is released. The corresponding TiDB Ansible 2.0.11 is also released. Compared with TiDB 2.0.10, this release has great improvement in system compatibility and stability.
TiDB  Fix the issue that the error is not handled properly when PD is in an abnormal condition #8764 Fix the issue that the Rename operation on a table in TiDB is not compatible with that in MySQL #8809 Fix the issue that the error message is wrongly reported when the ADMIN CHECK TABLE operation is performed in the process of executing the ADD INDEX statement #8750 Fix the issue that the prefix index range is incorrect in some cases #8877 Fix the panic issue of the UPDATE statement when columns are added in some cases #8904  TiKV  Fix two issues about Region merge #4003, #4004  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.11 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.0.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.0.11/</guid>
      <description>TiDB 2.0.11 Release Notes On January 03, 2019, TiDB 2.0.11 is released. The corresponding TiDB Ansible 2.0.11 is also released. Compared with TiDB 2.0.10, this release has great improvement in system compatibility and stability.
TiDB  Fix the issue that the error is not handled properly when PD is in an abnormal condition #8764 Fix the issue that the Rename operation on a table in TiDB is not compatible with that in MySQL #8809 Fix the issue that the error message is wrongly reported when the ADMIN CHECK TABLE operation is performed in the process of executing the ADD INDEX statement #8750 Fix the issue that the prefix index range is incorrect in some cases #8877 Fix the panic issue of the UPDATE statement when columns are added in some cases #8904  TiKV  Fix two issues about Region merge #4003, #4004  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.2 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/202/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/202/</guid>
      <description>TiDB 2.0.2 Release Notes On May 21, 2018, TiDB 2.0.2 is released. Compared with TiDB 2.0.1, this release has great improvement in system stability.
TiDB  Fix the issue of pushing down the Decimal division expression Support using the USE INDEX syntax in the Delete statement Forbid using the shard_row_id_bits feature in columns with Auto-Increment Add the timeout mechanism for writing Binlog  PD  Make the balance leader scheduler filter the disconnected nodes Modify the timeout of the transfer leader operator to 10s Fix the issue that the label scheduler does not schedule when the cluster Regions are in an unhealthy state Fix the improper scheduling issue of evict leader scheduler  TiKV  Fix the issue that the Raft log is not printed Support configuring more gRPC related parameters Support configuring the timeout range of leader election Fix the issue that the obsolete learner is not deleted Fix the issue that the snapshot intermediate file is mistakenly deleted  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.2 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/202/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/202/</guid>
      <description>TiDB 2.0.2 Release Notes On May 21, 2018, TiDB 2.0.2 is released. Compared with TiDB 2.0.1, this release has great improvement in system stability.
TiDB  Fix the issue of pushing down the Decimal division expression Support using the USE INDEX syntax in the Delete statement Forbid using the shard_row_id_bits feature in columns with Auto-Increment Add the timeout mechanism for writing Binlog  PD  Make the balance leader scheduler filter the disconnected nodes Modify the timeout of the transfer leader operator to 10s Fix the issue that the label scheduler does not schedule when the cluster Regions are in an unhealthy state Fix the improper scheduling issue of evict leader scheduler  TiKV  Fix the issue that the Raft log is not printed Support configuring more gRPC related parameters Support configuring the timeout range of leader election Fix the issue that the obsolete learner is not deleted Fix the issue that the snapshot intermediate file is mistakenly deleted  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.2 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/202/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/202/</guid>
      <description>TiDB 2.0.2 Release Notes On May 21, 2018, TiDB 2.0.2 is released. Compared with TiDB 2.0.1, this release has great improvement in system stability.
TiDB  Fix the issue of pushing down the Decimal division expression Support using the USE INDEX syntax in the Delete statement Forbid using the shard_row_id_bits feature in columns with Auto-Increment Add the timeout mechanism for writing Binlog  PD  Make the balance leader scheduler filter the disconnected nodes Modify the timeout of the transfer leader operator to 10s Fix the issue that the label scheduler does not schedule when the cluster Regions are in an unhealthy state Fix the improper scheduling issue of evict leader scheduler  TiKV  Fix the issue that the Raft log is not printed Support configuring more gRPC related parameters Support configuring the timeout range of leader election Fix the issue that the obsolete learner is not deleted Fix the issue that the snapshot intermediate file is mistakenly deleted  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.2 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/202/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/202/</guid>
      <description>TiDB 2.0.2 Release Notes On May 21, 2018, TiDB 2.0.2 is released. Compared with TiDB 2.0.1, this release has great improvement in system stability.
TiDB  Fix the issue of pushing down the Decimal division expression Support using the USE INDEX syntax in the Delete statement Forbid using the shard_row_id_bits feature in columns with Auto-Increment Add the timeout mechanism for writing Binlog  PD  Make the balance leader scheduler filter the disconnected nodes Modify the timeout of the transfer leader operator to 10s Fix the issue that the label scheduler does not schedule when the cluster Regions are in an unhealthy state Fix the improper scheduling issue of evict leader scheduler  TiKV  Fix the issue that the Raft log is not printed Support configuring more gRPC related parameters Support configuring the timeout range of leader election Fix the issue that the obsolete learner is not deleted Fix the issue that the snapshot intermediate file is mistakenly deleted  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.2 release notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/202/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/202/</guid>
      <description>TiDB 2.0.2 Release Notes 2018 年 5 月 21 日，TiDB 发布 2.0.2 版。该版本在 2.0.1 版的基础上，对系统稳定性做出了改进。
TiDB  修复 Decimal 除法内置函数下推的问题 支持 Delete 语句中使用 USE INDEX 的语法 禁止在带有 Auto-Increment 的列中使用 shard_row_id_bits 特性 增加写入 Binlog 的超时机制  PD  使 balance leader scheduler 过滤失连节点 更改 transfer leader operator 的超时时间为 10 秒 修复 label scheduler 在集群 Regions 不健康状态下不调度的问题 修复 evict leader scheduler 调度不当的问题  TiKV  修复 Raft 日志没有打出来的问题 支持配置更多 gRPC 相关参数 支持配置选举超时的取值范围 修复过期 learner 没有删掉的问题 修复 snapshot 中间文件被误删的问题  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.2 release notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/202/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/202/</guid>
      <description>TiDB 2.0.2 Release Notes 2018 年 5 月 21 日，TiDB 发布 2.0.2 版。该版本在 2.0.1 版的基础上，对系统稳定性做出了改进。
TiDB  修复 Decimal 除法内置函数下推的问题 支持 Delete 语句中使用 USE INDEX 的语法 禁止在带有 Auto-Increment 的列中使用 shard_row_id_bits 特性 增加写入 Binlog 的超时机制  PD  使 balance leader scheduler 过滤失连节点 更改 transfer leader operator 的超时时间为 10 秒 修复 label scheduler 在集群 Regions 不健康状态下不调度的问题 修复 evict leader scheduler 调度不当的问题  TiKV  修复 Raft 日志没有打出来的问题 支持配置更多 gRPC 相关参数 支持配置选举超时的取值范围 修复过期 learner 没有删掉的问题 修复 snapshot 中间文件被误删的问题  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.2 release notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/202/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/202/</guid>
      <description>TiDB 2.0.2 Release Notes 2018 年 5 月 21 日，TiDB 发布 2.0.2 版。该版本在 2.0.1 版的基础上，对系统稳定性做出了改进。
TiDB  修复 Decimal 除法内置函数下推的问题 支持 Delete 语句中使用 USE INDEX 的语法 禁止在带有 Auto-Increment 的列中使用 shard_row_id_bits 特性 增加写入 Binlog 的超时机制  PD  使 balance leader scheduler 过滤失连节点 更改 transfer leader operator 的超时时间为 10 秒 修复 label scheduler 在集群 Regions 不健康状态下不调度的问题 修复 evict leader scheduler 调度不当的问题  TiKV  修复 Raft 日志没有打出来的问题 支持配置更多 gRPC 相关参数 支持配置选举超时的取值范围 修复过期 learner 没有删掉的问题 修复 snapshot 中间文件被误删的问题  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.2 release notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/202/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/202/</guid>
      <description>TiDB 2.0.2 Release Notes 2018 年 5 月 21 日，TiDB 发布 2.0.2 版。该版本在 2.0.1 版的基础上，对系统稳定性做出了改进。
TiDB  修复 Decimal 除法内置函数下推的问题 支持 Delete 语句中使用 USE INDEX 的语法 禁止在带有 Auto-Increment 的列中使用 shard_row_id_bits 特性 增加写入 Binlog 的超时机制  PD  使 balance leader scheduler 过滤失连节点 更改 transfer leader operator 的超时时间为 10 秒 修复 label scheduler 在集群 Regions 不健康状态下不调度的问题 修复 evict leader scheduler 调度不当的问题  TiKV  修复 Raft 日志没有打出来的问题 支持配置更多 gRPC 相关参数 支持配置选举超时的取值范围 修复过期 learner 没有删掉的问题 修复 snapshot 中间文件被误删的问题  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.3 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/203/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/203/</guid>
      <description>TiDB 2.0.3 Release Notes On June 1, 2018, TiDB 2.0.3 is released. Compared with TiDB 2.0.2, this release has great improvement in system compatibility and stability.
TiDB  Support modifying the log level online Support the COM_CHANGE_USER command Support using the TIME type parameters under the binary protocol Optimize the cost estimation of query conditions with the BETWEEN expression Do not display the FOREIGN KEY information in the result of SHOW CREATE TABLE Optimize the cost estimation for queries with the LIMIT clause Fix the issue about the YEAR type as the unique index Fix the issue about ON DUPLICATE KEY UPDATE in conditions without the unique index Fix the compatibility issue of the CEIL function Fix the accuracy issue of the DIV calculation in the DECIMAL type Fix the false alarm of ADMIN CHECK TABLE Fix the panic issue of MAX/MIN under specific expression parameters Fix the issue that the result of JOIN is null in special conditions Fix the IN expression issue when building and querying Range Fix a Range calculation issue when using Prepare to query and Plan Cache is enabled Fix the issue that the Schema information is frequently loaded in abnormal conditions  PD  Fix the panic issue when collecting hot-cache metrics in specific conditions Fix the issue about scheduling of the obsolete Regions  TiKV  Fix the bug that the learner flag mistakenly reports to PD Report an error instead of getting a result if divisor/dividend is 0 in do_div_mod  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.3 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/203/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/203/</guid>
      <description>TiDB 2.0.3 Release Notes On June 1, 2018, TiDB 2.0.3 is released. Compared with TiDB 2.0.2, this release has great improvement in system compatibility and stability.
TiDB  Support modifying the log level online Support the COM_CHANGE_USER command Support using the TIME type parameters under the binary protocol Optimize the cost estimation of query conditions with the BETWEEN expression Do not display the FOREIGN KEY information in the result of SHOW CREATE TABLE Optimize the cost estimation for queries with the LIMIT clause Fix the issue about the YEAR type as the unique index Fix the issue about ON DUPLICATE KEY UPDATE in conditions without the unique index Fix the compatibility issue of the CEIL function Fix the accuracy issue of the DIV calculation in the DECIMAL type Fix the false alarm of ADMIN CHECK TABLE Fix the panic issue of MAX/MIN under specific expression parameters Fix the issue that the result of JOIN is null in special conditions Fix the IN expression issue when building and querying Range Fix a Range calculation issue when using Prepare to query and Plan Cache is enabled Fix the issue that the Schema information is frequently loaded in abnormal conditions  PD  Fix the panic issue when collecting hot-cache metrics in specific conditions Fix the issue about scheduling of the obsolete Regions  TiKV  Fix the bug that the learner flag mistakenly reports to PD Report an error instead of getting a result if divisor/dividend is 0 in do_div_mod  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.3 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/203/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/203/</guid>
      <description>TiDB 2.0.3 Release Notes On June 1, 2018, TiDB 2.0.3 is released. Compared with TiDB 2.0.2, this release has great improvement in system compatibility and stability.
TiDB  Support modifying the log level online Support the COM_CHANGE_USER command Support using the TIME type parameters under the binary protocol Optimize the cost estimation of query conditions with the BETWEEN expression Do not display the FOREIGN KEY information in the result of SHOW CREATE TABLE Optimize the cost estimation for queries with the LIMIT clause Fix the issue about the YEAR type as the unique index Fix the issue about ON DUPLICATE KEY UPDATE in conditions without the unique index Fix the compatibility issue of the CEIL function Fix the accuracy issue of the DIV calculation in the DECIMAL type Fix the false alarm of ADMIN CHECK TABLE Fix the panic issue of MAX/MIN under specific expression parameters Fix the issue that the result of JOIN is null in special conditions Fix the IN expression issue when building and querying Range Fix a Range calculation issue when using Prepare to query and Plan Cache is enabled Fix the issue that the Schema information is frequently loaded in abnormal conditions  PD  Fix the panic issue when collecting hot-cache metrics in specific conditions Fix the issue about scheduling of the obsolete Regions  TiKV  Fix the bug that the learner flag mistakenly reports to PD Report an error instead of getting a result if divisor/dividend is 0 in do_div_mod  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.3 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/203/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/203/</guid>
      <description>TiDB 2.0.3 Release Notes On June 1, 2018, TiDB 2.0.3 is released. Compared with TiDB 2.0.2, this release has great improvement in system compatibility and stability.
TiDB  Support modifying the log level online Support the COM_CHANGE_USER command Support using the TIME type parameters under the binary protocol Optimize the cost estimation of query conditions with the BETWEEN expression Do not display the FOREIGN KEY information in the result of SHOW CREATE TABLE Optimize the cost estimation for queries with the LIMIT clause Fix the issue about the YEAR type as the unique index Fix the issue about ON DUPLICATE KEY UPDATE in conditions without the unique index Fix the compatibility issue of the CEIL function Fix the accuracy issue of the DIV calculation in the DECIMAL type Fix the false alarm of ADMIN CHECK TABLE Fix the panic issue of MAX/MIN under specific expression parameters Fix the issue that the result of JOIN is null in special conditions Fix the IN expression issue when building and querying Range Fix a Range calculation issue when using Prepare to query and Plan Cache is enabled Fix the issue that the Schema information is frequently loaded in abnormal conditions  PD  Fix the panic issue when collecting hot-cache metrics in specific conditions Fix the issue about scheduling of the obsolete Regions  TiKV  Fix the bug that the learner flag mistakenly reports to PD Report an error instead of getting a result if divisor/dividend is 0 in do_div_mod  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.3 release notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/203/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/203/</guid>
      <description>TiDB 2.0.3 Release Notes 2018 年 6 月 1 日，TiDB 发布 2.0.3 版。该版本在 2.0.2 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  支持在线更改日志级别 支持 COM_CHANGE_USER 命令 支持二进制协议情况下使用时间类型参数 优化带 BETWEEN 表达式的查询条件代价估算 在 SHOW CREATE TABLE 里不显示 FOREIGN KEY 信息 优化带 LIMIT 子句的查询代价估算 修复 YEAR 类型作为唯一索引的问题 修复在没有唯一索引的情况下 ON DUPLICATE KEY UPDATE 的问题 修复 CEIL 函数的兼容性问题 修复 DECIMAL 类型计算 DIV 的精度问题 修复 ADMIN CHECK TABLE 误报的问题 修复 MAX/MIN 在特定表达式参数下 panic 的问题 修复特殊情况下 JOIN 结果为空的问题 修复 IN 表达式构造查询 Range 的问题 修复使用 Prepare 方式进行查询且启用 Plan Cache 情况下的 Range 计算问题 修复异常情况下频繁加载 Schema 信息的问题  PD  修复在特定条件下收集 hot-cache metrics 会 panic 的问题 修复对旧的 Region 产生调度的问题  TiKV  修复 learner flag 错误上报给 PD 的 bug 在 do_div_mod 中 divisor/dividend 为 0 时返回错误  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.3 release notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/203/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/203/</guid>
      <description>TiDB 2.0.3 Release Notes 2018 年 6 月 1 日，TiDB 发布 2.0.3 版。该版本在 2.0.2 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  支持在线更改日志级别 支持 COM_CHANGE_USER 命令 支持二进制协议情况下使用时间类型参数 优化带 BETWEEN 表达式的查询条件代价估算 在 SHOW CREATE TABLE 里不显示 FOREIGN KEY 信息 优化带 LIMIT 子句的查询代价估算 修复 YEAR 类型作为唯一索引的问题 修复在没有唯一索引的情况下 ON DUPLICATE KEY UPDATE 的问题 修复 CEIL 函数的兼容性问题 修复 DECIMAL 类型计算 DIV 的精度问题 修复 ADMIN CHECK TABLE 误报的问题 修复 MAX/MIN 在特定表达式参数下 panic 的问题 修复特殊情况下 JOIN 结果为空的问题 修复 IN 表达式构造查询 Range 的问题 修复使用 Prepare 方式进行查询且启用 Plan Cache 情况下的 Range 计算问题 修复异常情况下频繁加载 Schema 信息的问题  PD  修复在特定条件下收集 hot-cache metrics 会 panic 的问题 修复对旧的 Region 产生调度的问题  TiKV  修复 learner flag 错误上报给 PD 的 bug 在 do_div_mod 中 divisor/dividend 为 0 时返回错误  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.3 release notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/203/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/203/</guid>
      <description>TiDB 2.0.3 Release Notes 2018 年 6 月 1 日，TiDB 发布 2.0.3 版。该版本在 2.0.2 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  支持在线更改日志级别 支持 COM_CHANGE_USER 命令 支持二进制协议情况下使用时间类型参数 优化带 BETWEEN 表达式的查询条件代价估算 在 SHOW CREATE TABLE 里不显示 FOREIGN KEY 信息 优化带 LIMIT 子句的查询代价估算 修复 YEAR 类型作为唯一索引的问题 修复在没有唯一索引的情况下 ON DUPLICATE KEY UPDATE 的问题 修复 CEIL 函数的兼容性问题 修复 DECIMAL 类型计算 DIV 的精度问题 修复 ADMIN CHECK TABLE 误报的问题 修复 MAX/MIN 在特定表达式参数下 panic 的问题 修复特殊情况下 JOIN 结果为空的问题 修复 IN 表达式构造查询 Range 的问题 修复使用 Prepare 方式进行查询且启用 Plan Cache 情况下的 Range 计算问题 修复异常情况下频繁加载 Schema 信息的问题  PD  修复在特定条件下收集 hot-cache metrics 会 panic 的问题 修复对旧的 Region 产生调度的问题  TiKV  修复 learner flag 错误上报给 PD 的 bug 在 do_div_mod 中 divisor/dividend 为 0 时返回错误  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.3 release notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/203/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/203/</guid>
      <description>TiDB 2.0.3 Release Notes 2018 年 6 月 1 日，TiDB 发布 2.0.3 版。该版本在 2.0.2 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  支持在线更改日志级别 支持 COM_CHANGE_USER 命令 支持二进制协议情况下使用时间类型参数 优化带 BETWEEN 表达式的查询条件代价估算 在 SHOW CREATE TABLE 里不显示 FOREIGN KEY 信息 优化带 LIMIT 子句的查询代价估算 修复 YEAR 类型作为唯一索引的问题 修复在没有唯一索引的情况下 ON DUPLICATE KEY UPDATE 的问题 修复 CEIL 函数的兼容性问题 修复 DECIMAL 类型计算 DIV 的精度问题 修复 ADMIN CHECK TABLE 误报的问题 修复 MAX/MIN 在特定表达式参数下 panic 的问题 修复特殊情况下 JOIN 结果为空的问题 修复 IN 表达式构造查询 Range 的问题 修复使用 Prepare 方式进行查询且启用 Plan Cache 情况下的 Range 计算问题 修复异常情况下频繁加载 Schema 信息的问题  PD  修复在特定条件下收集 hot-cache metrics 会 panic 的问题 修复对旧的 Region 产生调度的问题  TiKV  修复 learner flag 错误上报给 PD 的 bug 在 do_div_mod 中 divisor/dividend 为 0 时返回错误  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.4 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/204/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/204/</guid>
      <description>TiDB 2.0.4 Release Notes On June 15, 2018, TiDB 2.0.4 is released. Compared with TiDB 2.0.3, this release has great improvement in system compatibility and stability.
TiDB  Support the ALTER TABLE t DROP COLUMN a CASCADE syntax Support configuring the value of tidb_snapshot to TSO Refine the display of statement types in monitoring items Optimize the accuracy of query cost estimation Configure the backoff max delay parameter of gRPC Support configuring the memory threshold of a single statement in the configuration file Refactor the error of Optimizer Fix the side effects of the Cast Decimal data Fix the wrong result issue of the Merge Join operator in specific scenarios Fix the issue of converting the Null object to String Fix the issue of casting the JSON type of data to the JSON type Fix the issue that the result order is not consistent with MySQL in the condition of Union + OrderBy Fix the compliance rules issue when the Union statement checks the Limit/OrderBy clause Fix the compatibility issue of the Union All result Fix a bug in predicate pushdown Fix the compatibility issue of the Union statement with the For Update clause Fix the issue that the concat_ws function mistakenly truncates the result  PD  Improve the behavior of the unset scheduling argument max-pending-peer-count by changing it to no limit for the maximum number of PendingPeers  TiKV  Add the RocksDB PerfContext interface for debugging Remove the import-mode parameter Add the region-properties command for tikv-ctl Fix the issue that reverse-seek is slow when many RocksDB tombstones exist Fix the crash issue caused by do_sub Make GC record the log when GC encounters many versions of data  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.4 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/204/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/204/</guid>
      <description>TiDB 2.0.4 Release Notes On June 15, 2018, TiDB 2.0.4 is released. Compared with TiDB 2.0.3, this release has great improvement in system compatibility and stability.
TiDB  Support the ALTER TABLE t DROP COLUMN a CASCADE syntax Support configuring the value of tidb_snapshot to TSO Refine the display of statement types in monitoring items Optimize the accuracy of query cost estimation Configure the backoff max delay parameter of gRPC Support configuring the memory threshold of a single statement in the configuration file Refactor the error of Optimizer Fix the side effects of the Cast Decimal data Fix the wrong result issue of the Merge Join operator in specific scenarios Fix the issue of converting the Null object to String Fix the issue of casting the JSON type of data to the JSON type Fix the issue that the result order is not consistent with MySQL in the condition of Union + OrderBy Fix the compliance rules issue when the Union statement checks the Limit/OrderBy clause Fix the compatibility issue of the Union All result Fix a bug in predicate pushdown Fix the compatibility issue of the Union statement with the For Update clause Fix the issue that the concat_ws function mistakenly truncates the result  PD  Improve the behavior of the unset scheduling argument max-pending-peer-count by changing it to no limit for the maximum number of PendingPeers  TiKV  Add the RocksDB PerfContext interface for debugging Remove the import-mode parameter Add the region-properties command for tikv-ctl Fix the issue that reverse-seek is slow when many RocksDB tombstones exist Fix the crash issue caused by do_sub Make GC record the log when GC encounters many versions of data  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.4 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/204/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/204/</guid>
      <description>TiDB 2.0.4 Release Notes On June 15, 2018, TiDB 2.0.4 is released. Compared with TiDB 2.0.3, this release has great improvement in system compatibility and stability.
TiDB  Support the ALTER TABLE t DROP COLUMN a CASCADE syntax Support configuring the value of tidb_snapshot to TSO Refine the display of statement types in monitoring items Optimize the accuracy of query cost estimation Configure the backoff max delay parameter of gRPC Support configuring the memory threshold of a single statement in the configuration file Refactor the error of Optimizer Fix the side effects of the Cast Decimal data Fix the wrong result issue of the Merge Join operator in specific scenarios Fix the issue of converting the Null object to String Fix the issue of casting the JSON type of data to the JSON type Fix the issue that the result order is not consistent with MySQL in the condition of Union + OrderBy Fix the compliance rules issue when the Union statement checks the Limit/OrderBy clause Fix the compatibility issue of the Union All result Fix a bug in predicate pushdown Fix the compatibility issue of the Union statement with the For Update clause Fix the issue that the concat_ws function mistakenly truncates the result  PD  Improve the behavior of the unset scheduling argument max-pending-peer-count by changing it to no limit for the maximum number of PendingPeers  TiKV  Add the RocksDB PerfContext interface for debugging Remove the import-mode parameter Add the region-properties command for tikv-ctl Fix the issue that reverse-seek is slow when many RocksDB tombstones exist Fix the crash issue caused by do_sub Make GC record the log when GC encounters many versions of data  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.4 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/204/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/204/</guid>
      <description>TiDB 2.0.4 Release Notes On June 15, 2018, TiDB 2.0.4 is released. Compared with TiDB 2.0.3, this release has great improvement in system compatibility and stability.
TiDB  Support the ALTER TABLE t DROP COLUMN a CASCADE syntax Support configuring the value of tidb_snapshot to TSO Refine the display of statement types in monitoring items Optimize the accuracy of query cost estimation Configure the backoff max delay parameter of gRPC Support configuring the memory threshold of a single statement in the configuration file Refactor the error of Optimizer Fix the side effects of the Cast Decimal data Fix the wrong result issue of the Merge Join operator in specific scenarios Fix the issue of converting the Null object to String Fix the issue of casting the JSON type of data to the JSON type Fix the issue that the result order is not consistent with MySQL in the condition of Union + OrderBy Fix the compliance rules issue when the Union statement checks the Limit/OrderBy clause Fix the compatibility issue of the Union All result Fix a bug in predicate pushdown Fix the compatibility issue of the Union statement with the For Update clause Fix the issue that the concat_ws function mistakenly truncates the result  PD  Improve the behavior of the unset scheduling argument max-pending-peer-count by changing it to no limit for the maximum number of PendingPeers  TiKV  Add the RocksDB PerfContext interface for debugging Remove the import-mode parameter Add the region-properties command for tikv-ctl Fix the issue that reverse-seek is slow when many RocksDB tombstones exist Fix the crash issue caused by do_sub Make GC record the log when GC encounters many versions of data  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.4 release notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/204/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/204/</guid>
      <description>TiDB 2.0.4 Release Notes 2018 年 6 月 15 日，TiDB 发布 2.0.4 版。该版本在 2.0.3 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  支持 ALTER TABLE t DROP COLUMN a CASCADE 语法 支持设置 tidb_snapshot 变量的值为 TSO 优化监控项中语句类型展示 优化查询代价估计精度 设置 gRPC 的 backoff max delay 参数 支持通过配置文件设置单条语句的内存使用阈值 重构 Optimizer 的 error 解决 Cast Decimal 数据的副作用问题 解决特定场景下 Merge Join 算子结果错误的问题 解决转换 Null 对象到 String 的问题 解决 Cast JSON 数据为 JSON 类型的问题 解决 Union + OrderBy 情况下结果顺序和 MySQL 不一致的问题 解决 Union 语句中对 Limit/OrderBy 子句的合法性检查规则问题 解决 Union All 的结果兼容性问题 解决谓词下推中的一个 Bug 解决 Union 语句对 For Update 子句的兼容性问题 解决 concat_ws 函数对结果错误截断的问题  PD  改进 max-pending-peer-count 调度参数未设置时的行为，调整为不限制最大 PendingPeer 的数量  TiKV  新增 RocksDB PerfContext 接口用于调试 移除 import-mode 参数 为 tikv-ctl 添加 region-properties 命令 优化有大量 RocksDB tombstone 时 reverse-seek 过慢的问题 修复 do_sub 导致的崩溃问题 当 GC 遇到有太多版本的数据时记录日志  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.4 release notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/204/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/204/</guid>
      <description>TiDB 2.0.4 Release Notes 2018 年 6 月 15 日，TiDB 发布 2.0.4 版。该版本在 2.0.3 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  支持 ALTER TABLE t DROP COLUMN a CASCADE 语法 支持设置 tidb_snapshot 变量的值为 TSO 优化监控项中语句类型展示 优化查询代价估计精度 设置 gRPC 的 backoff max delay 参数 支持通过配置文件设置单条语句的内存使用阈值 重构 Optimizer 的 error 解决 Cast Decimal 数据的副作用问题 解决特定场景下 Merge Join 算子结果错误的问题 解决转换 Null 对象到 String 的问题 解决 Cast JSON 数据为 JSON 类型的问题 解决 Union + OrderBy 情况下结果顺序和 MySQL 不一致的问题 解决 Union 语句中对 Limit/OrderBy 子句的合法性检查规则问题 解决 Union All 的结果兼容性问题 解决谓词下推中的一个 Bug 解决 Union 语句对 For Update 子句的兼容性问题 解决 concat_ws 函数对结果错误截断的问题  PD  改进 max-pending-peer-count 调度参数未设置时的行为，调整为不限制最大 PendingPeer 的数量  TiKV  新增 RocksDB PerfContext 接口用于调试 移除 import-mode 参数 为 tikv-ctl 添加 region-properties 命令 优化有大量 RocksDB tombstone 时 reverse-seek 过慢的问题 修复 do_sub 导致的崩溃问题 当 GC 遇到有太多版本的数据时记录日志  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.4 release notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/204/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/204/</guid>
      <description>TiDB 2.0.4 Release Notes 2018 年 6 月 15 日，TiDB 发布 2.0.4 版。该版本在 2.0.3 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  支持 ALTER TABLE t DROP COLUMN a CASCADE 语法 支持设置 tidb_snapshot 变量的值为 TSO 优化监控项中语句类型展示 优化查询代价估计精度 设置 gRPC 的 backoff max delay 参数 支持通过配置文件设置单条语句的内存使用阈值 重构 Optimizer 的 error 解决 Cast Decimal 数据的副作用问题 解决特定场景下 Merge Join 算子结果错误的问题 解决转换 Null 对象到 String 的问题 解决 Cast JSON 数据为 JSON 类型的问题 解决 Union + OrderBy 情况下结果顺序和 MySQL 不一致的问题 解决 Union 语句中对 Limit/OrderBy 子句的合法性检查规则问题 解决 Union All 的结果兼容性问题 解决谓词下推中的一个 Bug 解决 Union 语句对 For Update 子句的兼容性问题 解决 concat_ws 函数对结果错误截断的问题  PD  改进 max-pending-peer-count 调度参数未设置时的行为，调整为不限制最大 PendingPeer 的数量  TiKV  新增 RocksDB PerfContext 接口用于调试 移除 import-mode 参数 为 tikv-ctl 添加 region-properties 命令 优化有大量 RocksDB tombstone 时 reverse-seek 过慢的问题 修复 do_sub 导致的崩溃问题 当 GC 遇到有太多版本的数据时记录日志  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.4 release notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/204/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/204/</guid>
      <description>TiDB 2.0.4 Release Notes 2018 年 6 月 15 日，TiDB 发布 2.0.4 版。该版本在 2.0.3 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  支持 ALTER TABLE t DROP COLUMN a CASCADE 语法 支持设置 tidb_snapshot 变量的值为 TSO 优化监控项中语句类型展示 优化查询代价估计精度 设置 gRPC 的 backoff max delay 参数 支持通过配置文件设置单条语句的内存使用阈值 重构 Optimizer 的 error 解决 Cast Decimal 数据的副作用问题 解决特定场景下 Merge Join 算子结果错误的问题 解决转换 Null 对象到 String 的问题 解决 Cast JSON 数据为 JSON 类型的问题 解决 Union + OrderBy 情况下结果顺序和 MySQL 不一致的问题 解决 Union 语句中对 Limit/OrderBy 子句的合法性检查规则问题 解决 Union All 的结果兼容性问题 解决谓词下推中的一个 Bug 解决 Union 语句对 For Update 子句的兼容性问题 解决 concat_ws 函数对结果错误截断的问题  PD  改进 max-pending-peer-count 调度参数未设置时的行为，调整为不限制最大 PendingPeer 的数量  TiKV  新增 RocksDB PerfContext 接口用于调试 移除 import-mode 参数 为 tikv-ctl 添加 region-properties 命令 优化有大量 RocksDB tombstone 时 reverse-seek 过慢的问题 修复 do_sub 导致的崩溃问题 当 GC 遇到有太多版本的数据时记录日志  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.5 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/205/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/205/</guid>
      <description>TiDB 2.0.5 Release Notes On July 6, 2018, TiDB 2.0.5 is released. Compared with TiDB 2.0.4, this release has great improvement in system compatibility and stability.
TiDB  New Features  Add the tidb_disable_txn_auto_retry system variable which is used to disable the automatic retry of transactions #6877   Improvements  Optimize the cost calculation of Selection to make the result more accurate #6989 Select the query condition that completely matches the unique index or the primary key as the query path directly #6966 Execute necessary cleanup when failing to start the service #6964 Handle \N as NULL in the Load Data statement #6962 Optimize the code structure of CBO #6953 Report the monitoring metrics earlier when starting the service #6931 Optimize the format of slow queries by removing the line breaks in SQL statements and adding user information #6920 Support multiple asterisks in comments #6858   Bug Fixes  Fix the issue that KILL QUERY always requires SUPER privilege #7003 Fix the issue that users might fail to login when the number of users exceeds 1024 #6986 Fix an issue about inserting unsigned float/double data #6940 Fix the compatibility of the COM_FIELD_LIST command to resolve the panic issue in some MariaDB clients #6929 Fix the CREATE TABLE IF NOT EXISTS LIKE behavior #6928 Fix an issue in the process of TopN pushdown #6923 Fix the ID record issue of the currently processing row when an error occurs in executing Add Index #6903    PD  Fix the issue that replicas migration uses up TiKV disks space in some scenarios Fix the crash issue caused by AdjacentRegionScheduler  TiKV  Fix the potential overflow issue in decimal operations Fix the dirty read issue that might occur in the process of merging  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.5 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/205/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/205/</guid>
      <description>TiDB 2.0.5 Release Notes On July 6, 2018, TiDB 2.0.5 is released. Compared with TiDB 2.0.4, this release has great improvement in system compatibility and stability.
TiDB  New Features  Add the tidb_disable_txn_auto_retry system variable which is used to disable the automatic retry of transactions #6877   Improvements  Optimize the cost calculation of Selection to make the result more accurate #6989 Select the query condition that completely matches the unique index or the primary key as the query path directly #6966 Execute necessary cleanup when failing to start the service #6964 Handle \N as NULL in the Load Data statement #6962 Optimize the code structure of CBO #6953 Report the monitoring metrics earlier when starting the service #6931 Optimize the format of slow queries by removing the line breaks in SQL statements and adding user information #6920 Support multiple asterisks in comments #6858   Bug Fixes  Fix the issue that KILL QUERY always requires SUPER privilege #7003 Fix the issue that users might fail to login when the number of users exceeds 1024 #6986 Fix an issue about inserting unsigned float/double data #6940 Fix the compatibility of the COM_FIELD_LIST command to resolve the panic issue in some MariaDB clients #6929 Fix the CREATE TABLE IF NOT EXISTS LIKE behavior #6928 Fix an issue in the process of TopN pushdown #6923 Fix the ID record issue of the currently processing row when an error occurs in executing Add Index #6903    PD  Fix the issue that replicas migration uses up TiKV disks space in some scenarios Fix the crash issue caused by AdjacentRegionScheduler  TiKV  Fix the potential overflow issue in decimal operations Fix the dirty read issue that might occur in the process of merging  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.5 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/205/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/205/</guid>
      <description>TiDB 2.0.5 Release Notes On July 6, 2018, TiDB 2.0.5 is released. Compared with TiDB 2.0.4, this release has great improvement in system compatibility and stability.
TiDB  New Features  Add the tidb_disable_txn_auto_retry system variable which is used to disable the automatic retry of transactions #6877   Improvements  Optimize the cost calculation of Selection to make the result more accurate #6989 Select the query condition that completely matches the unique index or the primary key as the query path directly #6966 Execute necessary cleanup when failing to start the service #6964 Handle \N as NULL in the Load Data statement #6962 Optimize the code structure of CBO #6953 Report the monitoring metrics earlier when starting the service #6931 Optimize the format of slow queries by removing the line breaks in SQL statements and adding user information #6920 Support multiple asterisks in comments #6858   Bug Fixes  Fix the issue that KILL QUERY always requires SUPER privilege #7003 Fix the issue that users might fail to login when the number of users exceeds 1024 #6986 Fix an issue about inserting unsigned float/double data #6940 Fix the compatibility of the COM_FIELD_LIST command to resolve the panic issue in some MariaDB clients #6929 Fix the CREATE TABLE IF NOT EXISTS LIKE behavior #6928 Fix an issue in the process of TopN pushdown #6923 Fix the ID record issue of the currently processing row when an error occurs in executing Add Index #6903    PD  Fix the issue that replicas migration uses up TiKV disks space in some scenarios Fix the crash issue caused by AdjacentRegionScheduler  TiKV  Fix the potential overflow issue in decimal operations Fix the dirty read issue that might occur in the process of merging  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.5 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/205/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/205/</guid>
      <description>TiDB 2.0.5 Release Notes On July 6, 2018, TiDB 2.0.5 is released. Compared with TiDB 2.0.4, this release has great improvement in system compatibility and stability.
TiDB  New Features  Add the tidb_disable_txn_auto_retry system variable which is used to disable the automatic retry of transactions #6877   Improvements  Optimize the cost calculation of Selection to make the result more accurate #6989 Select the query condition that completely matches the unique index or the primary key as the query path directly #6966 Execute necessary cleanup when failing to start the service #6964 Handle \N as NULL in the Load Data statement #6962 Optimize the code structure of CBO #6953 Report the monitoring metrics earlier when starting the service #6931 Optimize the format of slow queries by removing the line breaks in SQL statements and adding user information #6920 Support multiple asterisks in comments #6858   Bug Fixes  Fix the issue that KILL QUERY always requires SUPER privilege #7003 Fix the issue that users might fail to login when the number of users exceeds 1024 #6986 Fix an issue about inserting unsigned float/double data #6940 Fix the compatibility of the COM_FIELD_LIST command to resolve the panic issue in some MariaDB clients #6929 Fix the CREATE TABLE IF NOT EXISTS LIKE behavior #6928 Fix an issue in the process of TopN pushdown #6923 Fix the ID record issue of the currently processing row when an error occurs in executing Add Index #6903    PD  Fix the issue that replicas migration uses up TiKV disks space in some scenarios Fix the crash issue caused by AdjacentRegionScheduler  TiKV  Fix the potential overflow issue in decimal operations Fix the dirty read issue that might occur in the process of merging  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.5 release notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/205/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/205/</guid>
      <description>TiDB 2.0.5 Release Notes 2018 年 7 月 6 日，TiDB 发布 2.0.5 版。该版本在 2.0.4 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  New Features  增加一个系统变量 tidb_disable_txn_auto_retry，用于关闭事务自动重试 #6877   Improvements  调整计算 Selection 代价的方式，结果更准确 #6989 查询条件能够完全匹配唯一索引或者主键时，直接选择作为查询路径 #6966 启动服务失败时，做必要的清理工作 #6964 在 Load Data 语句中，将 \N 处理为 NULL #6962 优化 CBO 代码结构 #6953 启动服务时，尽早上报监控数据 #6931 对慢查询日志格式进行优化：去除 SQL 语句中的换行符，增加用户信息 #6920 支持注释中存在多个星号的情况 #6858   Bug Fixes  修复 KILL QUERY 语句权限检查问题 #7003 修复用户数量超过 1024 时可能造成无法登录的问题 #6986 修复一个写入无符号类型 float/double 数据的问题 #6940 修复 COM_FIELD_LIST 命令的兼容性，解决部分 MariaDB 客户端遇到 Panic 的问题 #6929 修复 CREATE TABLE IF NOT EXISTS LIKE 行为 #6928 修复一个 TopN 下推过程中的问题 #6923 修复 Add Index 过程中遇到错误时当前处理的行 ID 记录问题 #6903    PD  修复某些场景下副本迁移导致 TiKV 磁盘空间耗尽的问题 修复 AdjacentRegionScheduler 导致的崩溃问题  TiKV  修复 decimal 运算中潜在的溢出问题 修复 merge 过程中可能发生的脏读问题  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.5 release notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/205/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/205/</guid>
      <description>TiDB 2.0.5 Release Notes 2018 年 7 月 6 日，TiDB 发布 2.0.5 版。该版本在 2.0.4 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  New Features  增加一个系统变量 tidb_disable_txn_auto_retry，用于关闭事务自动重试 #6877   Improvements  调整计算 Selection 代价的方式，结果更准确 #6989 查询条件能够完全匹配唯一索引或者主键时，直接选择作为查询路径 #6966 启动服务失败时，做必要的清理工作 #6964 在 Load Data 语句中，将 \N 处理为 NULL #6962 优化 CBO 代码结构 #6953 启动服务时，尽早上报监控数据 #6931 对慢查询日志格式进行优化：去除 SQL 语句中的换行符，增加用户信息 #6920 支持注释中存在多个星号的情况 #6858   Bug Fixes  修复 KILL QUERY 语句权限检查问题 #7003 修复用户数量超过 1024 时可能造成无法登录的问题 #6986 修复一个写入无符号类型 float/double 数据的问题 #6940 修复 COM_FIELD_LIST 命令的兼容性，解决部分 MariaDB 客户端遇到 Panic 的问题 #6929 修复 CREATE TABLE IF NOT EXISTS LIKE 行为 #6928 修复一个 TopN 下推过程中的问题 #6923 修复 Add Index 过程中遇到错误时当前处理的行 ID 记录问题 #6903    PD  修复某些场景下副本迁移导致 TiKV 磁盘空间耗尽的问题 修复 AdjacentRegionScheduler 导致的崩溃问题  TiKV  修复 decimal 运算中潜在的溢出问题 修复 merge 过程中可能发生的脏读问题  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.5 release notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/205/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/205/</guid>
      <description>TiDB 2.0.5 Release Notes 2018 年 7 月 6 日，TiDB 发布 2.0.5 版。该版本在 2.0.4 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  New Features  增加一个系统变量 tidb_disable_txn_auto_retry，用于关闭事务自动重试 #6877   Improvements  调整计算 Selection 代价的方式，结果更准确 #6989 查询条件能够完全匹配唯一索引或者主键时，直接选择作为查询路径 #6966 启动服务失败时，做必要的清理工作 #6964 在 Load Data 语句中，将 \N 处理为 NULL #6962 优化 CBO 代码结构 #6953 启动服务时，尽早上报监控数据 #6931 对慢查询日志格式进行优化：去除 SQL 语句中的换行符，增加用户信息 #6920 支持注释中存在多个星号的情况 #6858   Bug Fixes  修复 KILL QUERY 语句权限检查问题 #7003 修复用户数量超过 1024 时可能造成无法登录的问题 #6986 修复一个写入无符号类型 float/double 数据的问题 #6940 修复 COM_FIELD_LIST 命令的兼容性，解决部分 MariaDB 客户端遇到 Panic 的问题 #6929 修复 CREATE TABLE IF NOT EXISTS LIKE 行为 #6928 修复一个 TopN 下推过程中的问题 #6923 修复 Add Index 过程中遇到错误时当前处理的行 ID 记录问题 #6903    PD  修复某些场景下副本迁移导致 TiKV 磁盘空间耗尽的问题 修复 AdjacentRegionScheduler 导致的崩溃问题  TiKV  修复 decimal 运算中潜在的溢出问题 修复 merge 过程中可能发生的脏读问题  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.5 release notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/205/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/205/</guid>
      <description>TiDB 2.0.5 Release Notes 2018 年 7 月 6 日，TiDB 发布 2.0.5 版。该版本在 2.0.4 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  New Features  增加一个系统变量 tidb_disable_txn_auto_retry，用于关闭事务自动重试 #6877   Improvements  调整计算 Selection 代价的方式，结果更准确 #6989 查询条件能够完全匹配唯一索引或者主键时，直接选择作为查询路径 #6966 启动服务失败时，做必要的清理工作 #6964 在 Load Data 语句中，将 \N 处理为 NULL #6962 优化 CBO 代码结构 #6953 启动服务时，尽早上报监控数据 #6931 对慢查询日志格式进行优化：去除 SQL 语句中的换行符，增加用户信息 #6920 支持注释中存在多个星号的情况 #6858   Bug Fixes  修复 KILL QUERY 语句权限检查问题 #7003 修复用户数量超过 1024 时可能造成无法登录的问题 #6986 修复一个写入无符号类型 float/double 数据的问题 #6940 修复 COM_FIELD_LIST 命令的兼容性，解决部分 MariaDB 客户端遇到 Panic 的问题 #6929 修复 CREATE TABLE IF NOT EXISTS LIKE 行为 #6928 修复一个 TopN 下推过程中的问题 #6923 修复 Add Index 过程中遇到错误时当前处理的行 ID 记录问题 #6903    PD  修复某些场景下副本迁移导致 TiKV 磁盘空间耗尽的问题 修复 AdjacentRegionScheduler 导致的崩溃问题  TiKV  修复 decimal 运算中潜在的溢出问题 修复 merge 过程中可能发生的脏读问题  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.6 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/206/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/206/</guid>
      <description>TiDB 2.0.6 Release Notes On August 6, 2018, TiDB 2.0.6 is released. Compared with TiDB 2.0.5, this release has great improvement in system compatibility and stability.
TiDB  Improvements  Make &amp;ldquo;set system variable&amp;rdquo; log shorter to save disk space #7031 Record slow operations during the execution of ADD INDEX in the log, to make troubleshooting easier #7083 Reduce transaction conflicts when updating statistics #7138 Improve the accuracy of row count estimation when the values pending to be estimated exceeds the statistics range #7185 Choose the table with a smaller estimated row count as the outer table for Index Join to improve its execution efficiency #7277 Add the recover mechanism for panics occurred during the execution of ANALYZE TABLE, to avoid that the tidb-server is unavailable caused by abnormal behavior in the process of collecting statistics #7228 Return NULL and the corresponding warning when the results of RPAD/LPAD exceed the value of the max_allowed_packet system variable, compatible with MySQL #7244 Set the upper limit of placeholders count in the PREPARE statement to 65535, compatible with MySQL #7250   Bug Fixes  Fix the issue that the DROP USER statement is incompatible with MySQL behavior in some cases #7014 Fix the issue that statements like INSERT/LOAD DATA meet OOM aftering opening tidb_batch_insert #7092 Fix the issue that the statistics fail to automatically update when the data of a table keeps updating #7093 Fix the issue that the firewall breaks inactive gPRC connections #7099 Fix the issue that prefix index returns a wrong result in some scenarios #7126 Fix the panic issue caused by outdated statistics in some scenarios #7155 Fix the issue that one piece of index data is missed after the ADD INDEX operation in some scenarios #7156 Fix the wrong result issue when querying NULL values using the unique index in some scenarios #7172 Fix the messy code issue of the DECIMAL multiplication result in some scenarios #7212 Fix the wrong result issue of DECIMAL modulo operation in some scenarios #7245 Fix the issue that the UPDATE/DELETE statement in a transaction returns a wrong result under some special sequence of statements #7219 Fix the panic issue of the UNION ALL/UPDATE statement during the process of building the execution plan in some scenarios #7225 Fix the issue that the range of prefix index is calculated incorrectly in some scenarios #7231 Fix the issue that the LOAD DATA statement fails to write the binlog in some scenarios #7242 Fix the wrong result issue of SHOW CREATE TABLE during the execution process of ADD INDEX in some scenarios #7243 Fix the issue that panic occurs when Index Join does not initialize timestamps in some scenarios #7246 Fix the false alarm issue when ADMIN CHECK TABLE mistakenly uses the timezone in the session #7258 Fix the issue that ADMIN CLEANUP INDEX does not clean up the index in some scenarios #7265 Disable the Read Committed isolation level #7282    TiKV  Improvements  Enlarge scheduler&#39;s default slots to reduce false conflicts Reduce continuous records of rollback transactions, to improve the Read performance when conflicts are extremely severe Limit the size and number of RocksDB log files, to reduce unnecessary disk usage in long-running condition   Bug Fixes  Fix the crash issue when converting the data type from string to decimal    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.6 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/206/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/206/</guid>
      <description>TiDB 2.0.6 Release Notes On August 6, 2018, TiDB 2.0.6 is released. Compared with TiDB 2.0.5, this release has great improvement in system compatibility and stability.
TiDB  Improvements  Make &amp;ldquo;set system variable&amp;rdquo; log shorter to save disk space #7031 Record slow operations during the execution of ADD INDEX in the log, to make troubleshooting easier #7083 Reduce transaction conflicts when updating statistics #7138 Improve the accuracy of row count estimation when the values pending to be estimated exceeds the statistics range #7185 Choose the table with a smaller estimated row count as the outer table for Index Join to improve its execution efficiency #7277 Add the recover mechanism for panics occurred during the execution of ANALYZE TABLE, to avoid that the tidb-server is unavailable caused by abnormal behavior in the process of collecting statistics #7228 Return NULL and the corresponding warning when the results of RPAD/LPAD exceed the value of the max_allowed_packet system variable, compatible with MySQL #7244 Set the upper limit of placeholders count in the PREPARE statement to 65535, compatible with MySQL #7250   Bug Fixes  Fix the issue that the DROP USER statement is incompatible with MySQL behavior in some cases #7014 Fix the issue that statements like INSERT/LOAD DATA meet OOM aftering opening tidb_batch_insert #7092 Fix the issue that the statistics fail to automatically update when the data of a table keeps updating #7093 Fix the issue that the firewall breaks inactive gPRC connections #7099 Fix the issue that prefix index returns a wrong result in some scenarios #7126 Fix the panic issue caused by outdated statistics in some scenarios #7155 Fix the issue that one piece of index data is missed after the ADD INDEX operation in some scenarios #7156 Fix the wrong result issue when querying NULL values using the unique index in some scenarios #7172 Fix the messy code issue of the DECIMAL multiplication result in some scenarios #7212 Fix the wrong result issue of DECIMAL modulo operation in some scenarios #7245 Fix the issue that the UPDATE/DELETE statement in a transaction returns a wrong result under some special sequence of statements #7219 Fix the panic issue of the UNION ALL/UPDATE statement during the process of building the execution plan in some scenarios #7225 Fix the issue that the range of prefix index is calculated incorrectly in some scenarios #7231 Fix the issue that the LOAD DATA statement fails to write the binlog in some scenarios #7242 Fix the wrong result issue of SHOW CREATE TABLE during the execution process of ADD INDEX in some scenarios #7243 Fix the issue that panic occurs when Index Join does not initialize timestamps in some scenarios #7246 Fix the false alarm issue when ADMIN CHECK TABLE mistakenly uses the timezone in the session #7258 Fix the issue that ADMIN CLEANUP INDEX does not clean up the index in some scenarios #7265 Disable the Read Committed isolation level #7282    TiKV  Improvements  Enlarge scheduler&#39;s default slots to reduce false conflicts Reduce continuous records of rollback transactions, to improve the Read performance when conflicts are extremely severe Limit the size and number of RocksDB log files, to reduce unnecessary disk usage in long-running condition   Bug Fixes  Fix the crash issue when converting the data type from string to decimal    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.6 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/206/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/206/</guid>
      <description>TiDB 2.0.6 Release Notes On August 6, 2018, TiDB 2.0.6 is released. Compared with TiDB 2.0.5, this release has great improvement in system compatibility and stability.
TiDB  Improvements  Make &amp;ldquo;set system variable&amp;rdquo; log shorter to save disk space #7031 Record slow operations during the execution of ADD INDEX in the log, to make troubleshooting easier #7083 Reduce transaction conflicts when updating statistics #7138 Improve the accuracy of row count estimation when the values pending to be estimated exceeds the statistics range #7185 Choose the table with a smaller estimated row count as the outer table for Index Join to improve its execution efficiency #7277 Add the recover mechanism for panics occurred during the execution of ANALYZE TABLE, to avoid that the tidb-server is unavailable caused by abnormal behavior in the process of collecting statistics #7228 Return NULL and the corresponding warning when the results of RPAD/LPAD exceed the value of the max_allowed_packet system variable, compatible with MySQL #7244 Set the upper limit of placeholders count in the PREPARE statement to 65535, compatible with MySQL #7250   Bug Fixes  Fix the issue that the DROP USER statement is incompatible with MySQL behavior in some cases #7014 Fix the issue that statements like INSERT/LOAD DATA meet OOM aftering opening tidb_batch_insert #7092 Fix the issue that the statistics fail to automatically update when the data of a table keeps updating #7093 Fix the issue that the firewall breaks inactive gPRC connections #7099 Fix the issue that prefix index returns a wrong result in some scenarios #7126 Fix the panic issue caused by outdated statistics in some scenarios #7155 Fix the issue that one piece of index data is missed after the ADD INDEX operation in some scenarios #7156 Fix the wrong result issue when querying NULL values using the unique index in some scenarios #7172 Fix the messy code issue of the DECIMAL multiplication result in some scenarios #7212 Fix the wrong result issue of DECIMAL modulo operation in some scenarios #7245 Fix the issue that the UPDATE/DELETE statement in a transaction returns a wrong result under some special sequence of statements #7219 Fix the panic issue of the UNION ALL/UPDATE statement during the process of building the execution plan in some scenarios #7225 Fix the issue that the range of prefix index is calculated incorrectly in some scenarios #7231 Fix the issue that the LOAD DATA statement fails to write the binlog in some scenarios #7242 Fix the wrong result issue of SHOW CREATE TABLE during the execution process of ADD INDEX in some scenarios #7243 Fix the issue that panic occurs when Index Join does not initialize timestamps in some scenarios #7246 Fix the false alarm issue when ADMIN CHECK TABLE mistakenly uses the timezone in the session #7258 Fix the issue that ADMIN CLEANUP INDEX does not clean up the index in some scenarios #7265 Disable the Read Committed isolation level #7282    TiKV  Improvements  Enlarge scheduler&#39;s default slots to reduce false conflicts Reduce continuous records of rollback transactions, to improve the Read performance when conflicts are extremely severe Limit the size and number of RocksDB log files, to reduce unnecessary disk usage in long-running condition   Bug Fixes  Fix the crash issue when converting the data type from string to decimal    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.6 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/206/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/206/</guid>
      <description>TiDB 2.0.6 Release Notes On August 6, 2018, TiDB 2.0.6 is released. Compared with TiDB 2.0.5, this release has great improvement in system compatibility and stability.
TiDB  Improvements  Make &amp;ldquo;set system variable&amp;rdquo; log shorter to save disk space #7031 Record slow operations during the execution of ADD INDEX in the log, to make troubleshooting easier #7083 Reduce transaction conflicts when updating statistics #7138 Improve the accuracy of row count estimation when the values pending to be estimated exceeds the statistics range #7185 Choose the table with a smaller estimated row count as the outer table for Index Join to improve its execution efficiency #7277 Add the recover mechanism for panics occurred during the execution of ANALYZE TABLE, to avoid that the tidb-server is unavailable caused by abnormal behavior in the process of collecting statistics #7228 Return NULL and the corresponding warning when the results of RPAD/LPAD exceed the value of the max_allowed_packet system variable, compatible with MySQL #7244 Set the upper limit of placeholders count in the PREPARE statement to 65535, compatible with MySQL #7250   Bug Fixes  Fix the issue that the DROP USER statement is incompatible with MySQL behavior in some cases #7014 Fix the issue that statements like INSERT/LOAD DATA meet OOM aftering opening tidb_batch_insert #7092 Fix the issue that the statistics fail to automatically update when the data of a table keeps updating #7093 Fix the issue that the firewall breaks inactive gPRC connections #7099 Fix the issue that prefix index returns a wrong result in some scenarios #7126 Fix the panic issue caused by outdated statistics in some scenarios #7155 Fix the issue that one piece of index data is missed after the ADD INDEX operation in some scenarios #7156 Fix the wrong result issue when querying NULL values using the unique index in some scenarios #7172 Fix the messy code issue of the DECIMAL multiplication result in some scenarios #7212 Fix the wrong result issue of DECIMAL modulo operation in some scenarios #7245 Fix the issue that the UPDATE/DELETE statement in a transaction returns a wrong result under some special sequence of statements #7219 Fix the panic issue of the UNION ALL/UPDATE statement during the process of building the execution plan in some scenarios #7225 Fix the issue that the range of prefix index is calculated incorrectly in some scenarios #7231 Fix the issue that the LOAD DATA statement fails to write the binlog in some scenarios #7242 Fix the wrong result issue of SHOW CREATE TABLE during the execution process of ADD INDEX in some scenarios #7243 Fix the issue that panic occurs when Index Join does not initialize timestamps in some scenarios #7246 Fix the false alarm issue when ADMIN CHECK TABLE mistakenly uses the timezone in the session #7258 Fix the issue that ADMIN CLEANUP INDEX does not clean up the index in some scenarios #7265 Disable the Read Committed isolation level #7282    TiKV  Improvements  Enlarge scheduler&#39;s default slots to reduce false conflicts Reduce continuous records of rollback transactions, to improve the Read performance when conflicts are extremely severe Limit the size and number of RocksDB log files, to reduce unnecessary disk usage in long-running condition   Bug Fixes  Fix the crash issue when converting the data type from string to decimal    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.6 release notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/206/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/206/</guid>
      <description>TiDB 2.0.6 Release Notes 2018 年 8 月 6 日，TiDB 发布 2.0.6 版。该版本在 2.0.5 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  Improvements  精简 &amp;ldquo;set system variable&amp;rdquo; 日志的长度，减少日志文件体积 #7031 在日志中记录 ADD INDEX 执行过程中的慢操作，便于定位问题 #7083 减少更新统计信息操作中的事务冲突 #7138 当待估算的值超过统计信息范围时，提高行数估计的准确度 #7185 当使用 Index Join 时，选择行数估计较小的表作为驱动表，提高 Index Join 的执行效率 #7227 为 ANALYZE TABLE 语句执行过程中发生的 panic 添加 recover 机制，避免收集统计信息过程中的异常行为导致 tidb-server 不可用 #7228 当 RPAD/LPAD 的结果超过设置系统变量 max_allowed_packet 时，返回 NULL 和对应的 warning，兼容 MySQL #7244 设置 PREPARE 语句中占位符数量上限为 65535，兼容 MySQL #7250   Bug Fixes  修复某些情况下，DROP USER 语句和 MySQL 行为不兼容的问题 #7014 修复当 tidb_batch_insert 打开后，INSERT/LOAD DATA 等语句在某些场景下 OOM 的问题 #7092 修复某个表的数据持续更新时，其统计信息自动更新失效的问题 #7093 修复防火墙断掉不活跃的 gRPC 连接的问题 #7099 修复某些场景下使用前缀索引结果不正确的问题 #7126 修复某些场景下统计信息过时导致 panic 的问题 #7155 修复某些场景下 ADD INDEX 后索引数据少一条的问题 #7156 修复某些场景下查询唯一索引上的 NULL 值结果不正确的问题 #7172 修复某些场景下 DECIMAL 的乘法结果出现乱码的问题 #7212 修复某些场景下 DECIMAL 的取模运算结果不正确的问题 #7245 修复某些特殊语句序列下在事务中执行 UPDATE/DELETE 语句后结果不正确的问题 #7219 修复某些场景下 UNION ALL/UPDATE 语句在构造执行计划过程中 panic 的问题 #7225 修复某些场景下前缀索引的索引范围计算错误的问题 #7231 修复某些场景下 LOAD DATA 语句不写 binlog 的问题 #7242 修复某些场景下在 ADD INDEX 过程中 SHOW CREATE TABLE 结果不正确的问题 #7243 修复某些场景下 Index Join 因为没有初始化事务时间戳而 panic 的问题 #7246 修复 ADMIN CHECK TABLE 因为误用 session 中的时区而导致误报的问题 #7258 修复 ADMIN CLEANUP INDEX 在某些场景下索引没有清除干净的问题 #7265 禁用 Read Committed 事务隔离级别 #7282    TiKV  Improvements  扩大默认 scheduler slots 值以减少假冲突现象 减少回滚事务的连续标记以提升冲突极端严重下的读性能 限制 RocksDB log 文件的大小和个数以减少长时间运行下不必要的磁盘占用   Bug Fixes  修复字符串转 Decimal 时出现的 crash    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.6 release notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/206/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/206/</guid>
      <description>TiDB 2.0.6 Release Notes 2018 年 8 月 6 日，TiDB 发布 2.0.6 版。该版本在 2.0.5 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  Improvements  精简 &amp;ldquo;set system variable&amp;rdquo; 日志的长度，减少日志文件体积 #7031 在日志中记录 ADD INDEX 执行过程中的慢操作，便于定位问题 #7083 减少更新统计信息操作中的事务冲突 #7138 当待估算的值超过统计信息范围时，提高行数估计的准确度 #7185 当使用 Index Join 时，选择行数估计较小的表作为驱动表，提高 Index Join 的执行效率 #7227 为 ANALYZE TABLE 语句执行过程中发生的 panic 添加 recover 机制，避免收集统计信息过程中的异常行为导致 tidb-server 不可用 #7228 当 RPAD/LPAD 的结果超过设置系统变量 max_allowed_packet 时，返回 NULL 和对应的 warning，兼容 MySQL #7244 设置 PREPARE 语句中占位符数量上限为 65535，兼容 MySQL #7250   Bug Fixes  修复某些情况下，DROP USER 语句和 MySQL 行为不兼容的问题 #7014 修复当 tidb_batch_insert 打开后，INSERT/LOAD DATA 等语句在某些场景下 OOM 的问题 #7092 修复某个表的数据持续更新时，其统计信息自动更新失效的问题 #7093 修复防火墙断掉不活跃的 gRPC 连接的问题 #7099 修复某些场景下使用前缀索引结果不正确的问题 #7126 修复某些场景下统计信息过时导致 panic 的问题 #7155 修复某些场景下 ADD INDEX 后索引数据少一条的问题 #7156 修复某些场景下查询唯一索引上的 NULL 值结果不正确的问题 #7172 修复某些场景下 DECIMAL 的乘法结果出现乱码的问题 #7212 修复某些场景下 DECIMAL 的取模运算结果不正确的问题 #7245 修复某些特殊语句序列下在事务中执行 UPDATE/DELETE 语句后结果不正确的问题 #7219 修复某些场景下 UNION ALL/UPDATE 语句在构造执行计划过程中 panic 的问题 #7225 修复某些场景下前缀索引的索引范围计算错误的问题 #7231 修复某些场景下 LOAD DATA 语句不写 binlog 的问题 #7242 修复某些场景下在 ADD INDEX 过程中 SHOW CREATE TABLE 结果不正确的问题 #7243 修复某些场景下 Index Join 因为没有初始化事务时间戳而 panic 的问题 #7246 修复 ADMIN CHECK TABLE 因为误用 session 中的时区而导致误报的问题 #7258 修复 ADMIN CLEANUP INDEX 在某些场景下索引没有清除干净的问题 #7265 禁用 Read Committed 事务隔离级别 #7282    TiKV  Improvements  扩大默认 scheduler slots 值以减少假冲突现象 减少回滚事务的连续标记以提升冲突极端严重下的读性能 限制 RocksDB log 文件的大小和个数以减少长时间运行下不必要的磁盘占用   Bug Fixes  修复字符串转 Decimal 时出现的 crash    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.6 release notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/206/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/206/</guid>
      <description>TiDB 2.0.6 Release Notes 2018 年 8 月 6 日，TiDB 发布 2.0.6 版。该版本在 2.0.5 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  Improvements  精简 &amp;ldquo;set system variable&amp;rdquo; 日志的长度，减少日志文件体积 #7031 在日志中记录 ADD INDEX 执行过程中的慢操作，便于定位问题 #7083 减少更新统计信息操作中的事务冲突 #7138 当待估算的值超过统计信息范围时，提高行数估计的准确度 #7185 当使用 Index Join 时，选择行数估计较小的表作为驱动表，提高 Index Join 的执行效率 #7227 为 ANALYZE TABLE 语句执行过程中发生的 panic 添加 recover 机制，避免收集统计信息过程中的异常行为导致 tidb-server 不可用 #7228 当 RPAD/LPAD 的结果超过设置系统变量 max_allowed_packet 时，返回 NULL 和对应的 warning，兼容 MySQL #7244 设置 PREPARE 语句中占位符数量上限为 65535，兼容 MySQL #7250   Bug Fixes  修复某些情况下，DROP USER 语句和 MySQL 行为不兼容的问题 #7014 修复当 tidb_batch_insert 打开后，INSERT/LOAD DATA 等语句在某些场景下 OOM 的问题 #7092 修复某个表的数据持续更新时，其统计信息自动更新失效的问题 #7093 修复防火墙断掉不活跃的 gRPC 连接的问题 #7099 修复某些场景下使用前缀索引结果不正确的问题 #7126 修复某些场景下统计信息过时导致 panic 的问题 #7155 修复某些场景下 ADD INDEX 后索引数据少一条的问题 #7156 修复某些场景下查询唯一索引上的 NULL 值结果不正确的问题 #7172 修复某些场景下 DECIMAL 的乘法结果出现乱码的问题 #7212 修复某些场景下 DECIMAL 的取模运算结果不正确的问题 #7245 修复某些特殊语句序列下在事务中执行 UPDATE/DELETE 语句后结果不正确的问题 #7219 修复某些场景下 UNION ALL/UPDATE 语句在构造执行计划过程中 panic 的问题 #7225 修复某些场景下前缀索引的索引范围计算错误的问题 #7231 修复某些场景下 LOAD DATA 语句不写 binlog 的问题 #7242 修复某些场景下在 ADD INDEX 过程中 SHOW CREATE TABLE 结果不正确的问题 #7243 修复某些场景下 Index Join 因为没有初始化事务时间戳而 panic 的问题 #7246 修复 ADMIN CHECK TABLE 因为误用 session 中的时区而导致误报的问题 #7258 修复 ADMIN CLEANUP INDEX 在某些场景下索引没有清除干净的问题 #7265 禁用 Read Committed 事务隔离级别 #7282    TiKV  Improvements  扩大默认 scheduler slots 值以减少假冲突现象 减少回滚事务的连续标记以提升冲突极端严重下的读性能 限制 RocksDB log 文件的大小和个数以减少长时间运行下不必要的磁盘占用   Bug Fixes  修复字符串转 Decimal 时出现的 crash    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.6 release notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/206/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/206/</guid>
      <description>TiDB 2.0.6 Release Notes 2018 年 8 月 6 日，TiDB 发布 2.0.6 版。该版本在 2.0.5 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  Improvements  精简 &amp;ldquo;set system variable&amp;rdquo; 日志的长度，减少日志文件体积 #7031 在日志中记录 ADD INDEX 执行过程中的慢操作，便于定位问题 #7083 减少更新统计信息操作中的事务冲突 #7138 当待估算的值超过统计信息范围时，提高行数估计的准确度 #7185 当使用 Index Join 时，选择行数估计较小的表作为驱动表，提高 Index Join 的执行效率 #7227 为 ANALYZE TABLE 语句执行过程中发生的 panic 添加 recover 机制，避免收集统计信息过程中的异常行为导致 tidb-server 不可用 #7228 当 RPAD/LPAD 的结果超过设置系统变量 max_allowed_packet 时，返回 NULL 和对应的 warning，兼容 MySQL #7244 设置 PREPARE 语句中占位符数量上限为 65535，兼容 MySQL #7250   Bug Fixes  修复某些情况下，DROP USER 语句和 MySQL 行为不兼容的问题 #7014 修复当 tidb_batch_insert 打开后，INSERT/LOAD DATA 等语句在某些场景下 OOM 的问题 #7092 修复某个表的数据持续更新时，其统计信息自动更新失效的问题 #7093 修复防火墙断掉不活跃的 gRPC 连接的问题 #7099 修复某些场景下使用前缀索引结果不正确的问题 #7126 修复某些场景下统计信息过时导致 panic 的问题 #7155 修复某些场景下 ADD INDEX 后索引数据少一条的问题 #7156 修复某些场景下查询唯一索引上的 NULL 值结果不正确的问题 #7172 修复某些场景下 DECIMAL 的乘法结果出现乱码的问题 #7212 修复某些场景下 DECIMAL 的取模运算结果不正确的问题 #7245 修复某些特殊语句序列下在事务中执行 UPDATE/DELETE 语句后结果不正确的问题 #7219 修复某些场景下 UNION ALL/UPDATE 语句在构造执行计划过程中 panic 的问题 #7225 修复某些场景下前缀索引的索引范围计算错误的问题 #7231 修复某些场景下 LOAD DATA 语句不写 binlog 的问题 #7242 修复某些场景下在 ADD INDEX 过程中 SHOW CREATE TABLE 结果不正确的问题 #7243 修复某些场景下 Index Join 因为没有初始化事务时间戳而 panic 的问题 #7246 修复 ADMIN CHECK TABLE 因为误用 session 中的时区而导致误报的问题 #7258 修复 ADMIN CLEANUP INDEX 在某些场景下索引没有清除干净的问题 #7265 禁用 Read Committed 事务隔离级别 #7282    TiKV  Improvements  扩大默认 scheduler slots 值以减少假冲突现象 减少回滚事务的连续标记以提升冲突极端严重下的读性能 限制 RocksDB log 文件的大小和个数以减少长时间运行下不必要的磁盘占用   Bug Fixes  修复字符串转 Decimal 时出现的 crash    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.7 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/207/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/207/</guid>
      <description>TiDB 2.0.7 Release Notes On September 7, 2018, TiDB 2.0.7 is released. Compared with TiDB 2.0.6, this release has great improvement in system compatibility and stability.
TiDB  New Feature  Add the PROCESSLIST table in information_schema #7286   Improvement  Collect more details about SQL statement execution and output the information in the SLOW QUERY log #7364 Drop the partition information in SHOW CREATE TABLE #7388 Improve the execution efficiency of the ANALYZE statement by setting it to the RC isolation level and low priority #7500 Speed up adding a unique index #7562 Add an option of controlling the DDL concurrency #7563   Bug Fixes  Fix the issue that USE INDEX(PRIMARY) cannot be used in a table whose primary key is an integer #7298 Fix the issue that Merge Join and Index Join output incorrect results when the inner row is NULL #7301 Fix the issue that Join outputs an incorrect result when the chunk size is set too small #7315 Fix the panic issue caused by a statement of creating a table involving range column #7379 Fix the issue that admin check table mistakenly reports an error of a time-type column #7457 Fix the issue that the data with a default value current_timestamp cannot be queried using the = condition #7467 Fix the issue that the zero-length parameter inserted by using the ComStmtSendLongData command is mistakenly parsed to NULL #7508 Fix the issue that auto analyze is repeatedly executed in specific scenarios #7556 Fix the issue that the parser cannot parse a single line comment ended with a newline character #7635    TiKV  Improvement  Open the dynamic-level-bytes parameter in an empty cluster by default, to reduce space amplification   Bug Fix  Update approximate size and approximate keys count of a Region after Region merging    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.7 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/207/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/207/</guid>
      <description>TiDB 2.0.7 Release Notes On September 7, 2018, TiDB 2.0.7 is released. Compared with TiDB 2.0.6, this release has great improvement in system compatibility and stability.
TiDB  New Feature  Add the PROCESSLIST table in information_schema #7286   Improvement  Collect more details about SQL statement execution and output the information in the SLOW QUERY log #7364 Drop the partition information in SHOW CREATE TABLE #7388 Improve the execution efficiency of the ANALYZE statement by setting it to the RC isolation level and low priority #7500 Speed up adding a unique index #7562 Add an option of controlling the DDL concurrency #7563   Bug Fixes  Fix the issue that USE INDEX(PRIMARY) cannot be used in a table whose primary key is an integer #7298 Fix the issue that Merge Join and Index Join output incorrect results when the inner row is NULL #7301 Fix the issue that Join outputs an incorrect result when the chunk size is set too small #7315 Fix the panic issue caused by a statement of creating a table involving range column #7379 Fix the issue that admin check table mistakenly reports an error of a time-type column #7457 Fix the issue that the data with a default value current_timestamp cannot be queried using the = condition #7467 Fix the issue that the zero-length parameter inserted by using the ComStmtSendLongData command is mistakenly parsed to NULL #7508 Fix the issue that auto analyze is repeatedly executed in specific scenarios #7556 Fix the issue that the parser cannot parse a single line comment ended with a newline character #7635    TiKV  Improvement  Open the dynamic-level-bytes parameter in an empty cluster by default, to reduce space amplification   Bug Fix  Update approximate size and approximate keys count of a Region after Region merging    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.7 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/207/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/207/</guid>
      <description>TiDB 2.0.7 Release Notes On September 7, 2018, TiDB 2.0.7 is released. Compared with TiDB 2.0.6, this release has great improvement in system compatibility and stability.
TiDB  New Feature  Add the PROCESSLIST table in information_schema #7286   Improvement  Collect more details about SQL statement execution and output the information in the SLOW QUERY log #7364 Drop the partition information in SHOW CREATE TABLE #7388 Improve the execution efficiency of the ANALYZE statement by setting it to the RC isolation level and low priority #7500 Speed up adding a unique index #7562 Add an option of controlling the DDL concurrency #7563   Bug Fixes  Fix the issue that USE INDEX(PRIMARY) cannot be used in a table whose primary key is an integer #7298 Fix the issue that Merge Join and Index Join output incorrect results when the inner row is NULL #7301 Fix the issue that Join outputs an incorrect result when the chunk size is set too small #7315 Fix the panic issue caused by a statement of creating a table involving range column #7379 Fix the issue that admin check table mistakenly reports an error of a time-type column #7457 Fix the issue that the data with a default value current_timestamp cannot be queried using the = condition #7467 Fix the issue that the zero-length parameter inserted by using the ComStmtSendLongData command is mistakenly parsed to NULL #7508 Fix the issue that auto analyze is repeatedly executed in specific scenarios #7556 Fix the issue that the parser cannot parse a single line comment ended with a newline character #7635    TiKV  Improvement  Open the dynamic-level-bytes parameter in an empty cluster by default, to reduce space amplification   Bug Fix  Update approximate size and approximate keys count of a Region after Region merging    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.7 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/207/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/207/</guid>
      <description>TiDB 2.0.7 Release Notes On September 7, 2018, TiDB 2.0.7 is released. Compared with TiDB 2.0.6, this release has great improvement in system compatibility and stability.
TiDB  New Feature  Add the PROCESSLIST table in information_schema #7286   Improvement  Collect more details about SQL statement execution and output the information in the SLOW QUERY log #7364 Drop the partition information in SHOW CREATE TABLE #7388 Improve the execution efficiency of the ANALYZE statement by setting it to the RC isolation level and low priority #7500 Speed up adding a unique index #7562 Add an option of controlling the DDL concurrency #7563   Bug Fixes  Fix the issue that USE INDEX(PRIMARY) cannot be used in a table whose primary key is an integer #7298 Fix the issue that Merge Join and Index Join output incorrect results when the inner row is NULL #7301 Fix the issue that Join outputs an incorrect result when the chunk size is set too small #7315 Fix the panic issue caused by a statement of creating a table involving range column #7379 Fix the issue that admin check table mistakenly reports an error of a time-type column #7457 Fix the issue that the data with a default value current_timestamp cannot be queried using the = condition #7467 Fix the issue that the zero-length parameter inserted by using the ComStmtSendLongData command is mistakenly parsed to NULL #7508 Fix the issue that auto analyze is repeatedly executed in specific scenarios #7556 Fix the issue that the parser cannot parse a single line comment ended with a newline character #7635    TiKV  Improvement  Open the dynamic-level-bytes parameter in an empty cluster by default, to reduce space amplification   Bug Fix  Update approximate size and approximate keys count of a Region after Region merging    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.7 release notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/207/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/207/</guid>
      <description>TiDB 2.0.7 Release Notes 2018 年 9 月 7 日，TiDB 发布 2.0.7 版。该版本在 2.0.6 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  New Feature  在 information_schema 里添加 PROCESSLIST 表 #7286   Improvements  收集更多语句执行细节，并输出在 SLOW QUERY 日志里 #7364 SHOW CREATE TABLE 不再输出分区信息 #7388 通过设置 RC 隔离级别和低优先级优化 ANALYZE 语句执行效率 #7500 加速 ADD UNIQUE INDEX #7562 增加控制 DDL 并发度的选项 #7563   Bug Fixes  修复 PRIMARY KEY 为整数的表，无法使用 USE INDEX(PRIMARY) 的问题 #7298 修复 Merge Join 和 Index Join 在 inner row 为 NULL 时输出多余结果的问题 #7301 修复 chunk size 设置过小时，Join 输出多余结果的问题 #7315 修复建表语句中包含 range column 语法导致 panic 的问题 #7379 修复 admin check table 对时间类型的列误报的问题 #7457 修复以默认值 current_timestamp 插入的数据无法用 = 条件查询到的问题 #7467 修复以 ComStmtSendLongData 命令插入空字符串参数被误解析为 NULL 的问题 #7508 修复特定场景下 auto analyze 不断重复执行的问题 #7556 修复 parser 无法解析以换行符结尾的单行注释的问题 #7635    TiKV  Improvement  空集群默认打开 dynamic-level-bytes 参数减少空间放大   Bug Fix  在 Region merge 之后更新 Region 的 approximate size 和 keys    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.7 release notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/207/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/207/</guid>
      <description>TiDB 2.0.7 Release Notes 2018 年 9 月 7 日，TiDB 发布 2.0.7 版。该版本在 2.0.6 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  New Feature  在 information_schema 里添加 PROCESSLIST 表 #7286   Improvements  收集更多语句执行细节，并输出在 SLOW QUERY 日志里 #7364 SHOW CREATE TABLE 不再输出分区信息 #7388 通过设置 RC 隔离级别和低优先级优化 ANALYZE 语句执行效率 #7500 加速 ADD UNIQUE INDEX #7562 增加控制 DDL 并发度的选项 #7563   Bug Fixes  修复 PRIMARY KEY 为整数的表，无法使用 USE INDEX(PRIMARY) 的问题 #7298 修复 Merge Join 和 Index Join 在 inner row 为 NULL 时输出多余结果的问题 #7301 修复 chunk size 设置过小时，Join 输出多余结果的问题 #7315 修复建表语句中包含 range column 语法导致 panic 的问题 #7379 修复 admin check table 对时间类型的列误报的问题 #7457 修复以默认值 current_timestamp 插入的数据无法用 = 条件查询到的问题 #7467 修复以 ComStmtSendLongData 命令插入空字符串参数被误解析为 NULL 的问题 #7508 修复特定场景下 auto analyze 不断重复执行的问题 #7556 修复 parser 无法解析以换行符结尾的单行注释的问题 #7635    TiKV  Improvement  空集群默认打开 dynamic-level-bytes 参数减少空间放大   Bug Fix  在 Region merge 之后更新 Region 的 approximate size 和 keys    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.7 release notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/207/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/207/</guid>
      <description>TiDB 2.0.7 Release Notes 2018 年 9 月 7 日，TiDB 发布 2.0.7 版。该版本在 2.0.6 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  New Feature  在 information_schema 里添加 PROCESSLIST 表 #7286   Improvements  收集更多语句执行细节，并输出在 SLOW QUERY 日志里 #7364 SHOW CREATE TABLE 不再输出分区信息 #7388 通过设置 RC 隔离级别和低优先级优化 ANALYZE 语句执行效率 #7500 加速 ADD UNIQUE INDEX #7562 增加控制 DDL 并发度的选项 #7563   Bug Fixes  修复 PRIMARY KEY 为整数的表，无法使用 USE INDEX(PRIMARY) 的问题 #7298 修复 Merge Join 和 Index Join 在 inner row 为 NULL 时输出多余结果的问题 #7301 修复 chunk size 设置过小时，Join 输出多余结果的问题 #7315 修复建表语句中包含 range column 语法导致 panic 的问题 #7379 修复 admin check table 对时间类型的列误报的问题 #7457 修复以默认值 current_timestamp 插入的数据无法用 = 条件查询到的问题 #7467 修复以 ComStmtSendLongData 命令插入空字符串参数被误解析为 NULL 的问题 #7508 修复特定场景下 auto analyze 不断重复执行的问题 #7556 修复 parser 无法解析以换行符结尾的单行注释的问题 #7635    TiKV  Improvement  空集群默认打开 dynamic-level-bytes 参数减少空间放大   Bug Fix  在 Region merge 之后更新 Region 的 approximate size 和 keys    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.7 release notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/207/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/207/</guid>
      <description>TiDB 2.0.7 Release Notes 2018 年 9 月 7 日，TiDB 发布 2.0.7 版。该版本在 2.0.6 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  New Feature  在 information_schema 里添加 PROCESSLIST 表 #7286   Improvements  收集更多语句执行细节，并输出在 SLOW QUERY 日志里 #7364 SHOW CREATE TABLE 不再输出分区信息 #7388 通过设置 RC 隔离级别和低优先级优化 ANALYZE 语句执行效率 #7500 加速 ADD UNIQUE INDEX #7562 增加控制 DDL 并发度的选项 #7563   Bug Fixes  修复 PRIMARY KEY 为整数的表，无法使用 USE INDEX(PRIMARY) 的问题 #7298 修复 Merge Join 和 Index Join 在 inner row 为 NULL 时输出多余结果的问题 #7301 修复 chunk size 设置过小时，Join 输出多余结果的问题 #7315 修复建表语句中包含 range column 语法导致 panic 的问题 #7379 修复 admin check table 对时间类型的列误报的问题 #7457 修复以默认值 current_timestamp 插入的数据无法用 = 条件查询到的问题 #7467 修复以 ComStmtSendLongData 命令插入空字符串参数被误解析为 NULL 的问题 #7508 修复特定场景下 auto analyze 不断重复执行的问题 #7556 修复 parser 无法解析以换行符结尾的单行注释的问题 #7635    TiKV  Improvement  空集群默认打开 dynamic-level-bytes 参数减少空间放大   Bug Fix  在 Region merge 之后更新 Region 的 approximate size 和 keys    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.8 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/208/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/208/</guid>
      <description>TiDB 2.0.8 Release Notes On October 16, 2018, TiDB 2.0.8 is released. Compared with TiDB 2.0.7, this release has great improvement in system compatibility and stability.
TiDB  Improvement  Slow down the AUTO-ID increasing speed when the Update statement does not modify the corresponding AUTO-INCREMENT column #7846   Bug fixes  Quickly create a new etcd session to recover the service when the PD leader goes down #7810 Fix the issue that the time zone is not considered when the default value of the DateTime type is calculated #7672 Fix the issue that duplicate key update inserts values incorrectly in some conditions #7685 Fix the issue that the predicate conditions of UnionScan are not pushed down #7726 Fix the issue that the time zone is not correctly handled when you add the TIMESTAMP index #7812 Fix the memory leak issue caused by the statistics module in some conditions #7864 Fix the issue that the results of ANALYZE cannot be obtained in some abnormal conditions #7871 Do not fold the function SYSDATE, to ensure the returned results are correct #7894 Fix the substring_index panic issue in some conditions #7896 Fix the issue that OUTER JOIN is mistakenly converted to INNER JOIN in some conditions #7899    TiKV  Bug fix  Fix the issue that the memory consumed by Raftstore EntryCache keeps increasing when a node goes down #3529    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.8 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/208/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/208/</guid>
      <description>TiDB 2.0.8 Release Notes On October 16, 2018, TiDB 2.0.8 is released. Compared with TiDB 2.0.7, this release has great improvement in system compatibility and stability.
TiDB  Improvement  Slow down the AUTO-ID increasing speed when the Update statement does not modify the corresponding AUTO-INCREMENT column #7846   Bug fixes  Quickly create a new etcd session to recover the service when the PD leader goes down #7810 Fix the issue that the time zone is not considered when the default value of the DateTime type is calculated #7672 Fix the issue that duplicate key update inserts values incorrectly in some conditions #7685 Fix the issue that the predicate conditions of UnionScan are not pushed down #7726 Fix the issue that the time zone is not correctly handled when you add the TIMESTAMP index #7812 Fix the memory leak issue caused by the statistics module in some conditions #7864 Fix the issue that the results of ANALYZE cannot be obtained in some abnormal conditions #7871 Do not fold the function SYSDATE, to ensure the returned results are correct #7894 Fix the substring_index panic issue in some conditions #7896 Fix the issue that OUTER JOIN is mistakenly converted to INNER JOIN in some conditions #7899    TiKV  Bug fix  Fix the issue that the memory consumed by Raftstore EntryCache keeps increasing when a node goes down #3529    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.8 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/208/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/208/</guid>
      <description>TiDB 2.0.8 Release Notes On October 16, 2018, TiDB 2.0.8 is released. Compared with TiDB 2.0.7, this release has great improvement in system compatibility and stability.
TiDB  Improvement  Slow down the AUTO-ID increasing speed when the Update statement does not modify the corresponding AUTO-INCREMENT column #7846   Bug fixes  Quickly create a new etcd session to recover the service when the PD leader goes down #7810 Fix the issue that the time zone is not considered when the default value of the DateTime type is calculated #7672 Fix the issue that duplicate key update inserts values incorrectly in some conditions #7685 Fix the issue that the predicate conditions of UnionScan are not pushed down #7726 Fix the issue that the time zone is not correctly handled when you add the TIMESTAMP index #7812 Fix the memory leak issue caused by the statistics module in some conditions #7864 Fix the issue that the results of ANALYZE cannot be obtained in some abnormal conditions #7871 Do not fold the function SYSDATE, to ensure the returned results are correct #7894 Fix the substring_index panic issue in some conditions #7896 Fix the issue that OUTER JOIN is mistakenly converted to INNER JOIN in some conditions #7899    TiKV  Bug fix  Fix the issue that the memory consumed by Raftstore EntryCache keeps increasing when a node goes down #3529    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.8 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/208/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/208/</guid>
      <description>TiDB 2.0.8 Release Notes On October 16, 2018, TiDB 2.0.8 is released. Compared with TiDB 2.0.7, this release has great improvement in system compatibility and stability.
TiDB  Improvement  Slow down the AUTO-ID increasing speed when the Update statement does not modify the corresponding AUTO-INCREMENT column #7846   Bug fixes  Quickly create a new etcd session to recover the service when the PD leader goes down #7810 Fix the issue that the time zone is not considered when the default value of the DateTime type is calculated #7672 Fix the issue that duplicate key update inserts values incorrectly in some conditions #7685 Fix the issue that the predicate conditions of UnionScan are not pushed down #7726 Fix the issue that the time zone is not correctly handled when you add the TIMESTAMP index #7812 Fix the memory leak issue caused by the statistics module in some conditions #7864 Fix the issue that the results of ANALYZE cannot be obtained in some abnormal conditions #7871 Do not fold the function SYSDATE, to ensure the returned results are correct #7894 Fix the substring_index panic issue in some conditions #7896 Fix the issue that OUTER JOIN is mistakenly converted to INNER JOIN in some conditions #7899    TiKV  Bug fix  Fix the issue that the memory consumed by Raftstore EntryCache keeps increasing when a node goes down #3529    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.8 release notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/208/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/208/</guid>
      <description>TiDB 2.0.8 Release Notes 2018 年 10 月 16 日，TiDB 发布 2.0.8 版。该版本在 2.0.7 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  功能改进  在 Update 没有更改相应 AUTO-INCREMENT 列情况下，防止 AUTO-ID 被消耗过快 #7846   Bug 修复  在 PD Leader 异常宕机的情况下，TiDB 快速创建 etcd Session 恢复服务 #7810 修复 DateTime 类型使用默认值时候没有考虑时区的问题 #7672 修复 duplicate key update 在某些情况下没有正确插入值的问题 #7685 修复 UnionScan 中谓词条件没有下推的问题 #7726 修复增加 TIMESTAMP 索引没有正确处理时区的问题 #7812 修复某些情况下统计信息模块导致的内存泄露问题 #7864 修复在某些异常情况下，无法获得 ANALYZE 结果的问题 #7871 令 SYSDATE 不做表达式展开，以返回正确的结果 #7894 修复某些情况下，substring_index panic 的问题 #7896 修复某些情况下，错误将 OUTER JOIN 转为 INNER JOIN 的问题 #7899    TiKV  Bug 修复  修复节点宕机时 Raftstore EntryCache 占用内存持续上升的问题 #3529    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.8 release notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/208/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/208/</guid>
      <description>TiDB 2.0.8 Release Notes 2018 年 10 月 16 日，TiDB 发布 2.0.8 版。该版本在 2.0.7 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  功能改进  在 Update 没有更改相应 AUTO-INCREMENT 列情况下，防止 AUTO-ID 被消耗过快 #7846   Bug 修复  在 PD Leader 异常宕机的情况下，TiDB 快速创建 etcd Session 恢复服务 #7810 修复 DateTime 类型使用默认值时候没有考虑时区的问题 #7672 修复 duplicate key update 在某些情况下没有正确插入值的问题 #7685 修复 UnionScan 中谓词条件没有下推的问题 #7726 修复增加 TIMESTAMP 索引没有正确处理时区的问题 #7812 修复某些情况下统计信息模块导致的内存泄露问题 #7864 修复在某些异常情况下，无法获得 ANALYZE 结果的问题 #7871 令 SYSDATE 不做表达式展开，以返回正确的结果 #7894 修复某些情况下，substring_index panic 的问题 #7896 修复某些情况下，错误将 OUTER JOIN 转为 INNER JOIN 的问题 #7899    TiKV  Bug 修复  修复节点宕机时 Raftstore EntryCache 占用内存持续上升的问题 #3529    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.8 release notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/208/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/208/</guid>
      <description>TiDB 2.0.8 Release Notes 2018 年 10 月 16 日，TiDB 发布 2.0.8 版。该版本在 2.0.7 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  功能改进  在 Update 没有更改相应 AUTO-INCREMENT 列情况下，防止 AUTO-ID 被消耗过快 #7846   Bug 修复  在 PD Leader 异常宕机的情况下，TiDB 快速创建 etcd Session 恢复服务 #7810 修复 DateTime 类型使用默认值时候没有考虑时区的问题 #7672 修复 duplicate key update 在某些情况下没有正确插入值的问题 #7685 修复 UnionScan 中谓词条件没有下推的问题 #7726 修复增加 TIMESTAMP 索引没有正确处理时区的问题 #7812 修复某些情况下统计信息模块导致的内存泄露问题 #7864 修复在某些异常情况下，无法获得 ANALYZE 结果的问题 #7871 令 SYSDATE 不做表达式展开，以返回正确的结果 #7894 修复某些情况下，substring_index panic 的问题 #7896 修复某些情况下，错误将 OUTER JOIN 转为 INNER JOIN 的问题 #7899    TiKV  Bug 修复  修复节点宕机时 Raftstore EntryCache 占用内存持续上升的问题 #3529    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.8 release notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/208/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/208/</guid>
      <description>TiDB 2.0.8 Release Notes 2018 年 10 月 16 日，TiDB 发布 2.0.8 版。该版本在 2.0.7 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  功能改进  在 Update 没有更改相应 AUTO-INCREMENT 列情况下，防止 AUTO-ID 被消耗过快 #7846   Bug 修复  在 PD Leader 异常宕机的情况下，TiDB 快速创建 etcd Session 恢复服务 #7810 修复 DateTime 类型使用默认值时候没有考虑时区的问题 #7672 修复 duplicate key update 在某些情况下没有正确插入值的问题 #7685 修复 UnionScan 中谓词条件没有下推的问题 #7726 修复增加 TIMESTAMP 索引没有正确处理时区的问题 #7812 修复某些情况下统计信息模块导致的内存泄露问题 #7864 修复在某些异常情况下，无法获得 ANALYZE 结果的问题 #7871 令 SYSDATE 不做表达式展开，以返回正确的结果 #7894 修复某些情况下，substring_index panic 的问题 #7896 修复某些情况下，错误将 OUTER JOIN 转为 INNER JOIN 的问题 #7899    TiKV  Bug 修复  修复节点宕机时 Raftstore EntryCache 占用内存持续上升的问题 #3529    </description>
    </item>
    
    <item>
      <title>TiDB 2.0.9 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/209/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/209/</guid>
      <description>TiDB 2.0.9 Release Notes 2018 年 11 月 19 日，TiDB 发布 2.0.9 版。该版本在 2.0.8 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  修复统计信息直方图为空的时候导致的问题 #7927 修复 UNION ALL 语句在某些情况下 panic 的问题 #7942 修复错误的 DDL JOB 情况下导致的递归溢出问题 #7959 为 Commit 操作加上慢操作日志 #7983 修复 Limit 值太大的情况下导致的 panic 问题 #8004 支持 USING 子句指定 utf8mb4 字符集 #8048 内建函数 TRUNCATE 支持类型为 unsigned int 的参数 #8069 修复统计信息模块在某些情况下主键选择率估算的问题 #8150 增加 Session 变量来控制是否允许写入 _tidb_rowid #8126 修复 PhysicalProjection 在某些情况下 panic 的问题 #8154 修复 Union 语句在某些情况下结果不稳定的问题 #8168 修复在非插入语句下 values 没有返回 NULL 的问题 #8179 修复某些情况下统计信息模块无法清除过期统计数据的问题 #8184 让事务允许的最长运行时间变成一个可配置项 #8209 修复 expression rewriter 某些情况下错误的比较逻辑 #8288 消除 UNION ORDER BY 语句生成的多余列的问题 #8307 支持 admin show next_row_id 语句 #8274 修复 Show Create Table 语句中特殊字符转义的问题 #8321 修复 UNION 语句在某些情况下遇到非预期错误的问题 #8318 修复某些情况下取消 DDL 任务导致的 Schema 没有回滚的问题 #8312 把变量 tidb_max_chunk_size 变成全局环境变量 #8333 ticlient Scan 命令增加边界，解决数据扫出边界的问题 #8309 #8310  PD  修复 etcd 启动失败导致的服务挂起问题 #1267 修复 pd-ctl 读取 Region key 的相关问题 #1298 #1299 #1308 修复 regions/check API 输出错误的问题 #1311 修复 PD join 失败后无法重新 join 的问题 1279  TiKV  增加 kv_scan 接口扫描上界的限制 #3749 废弃配置 max-tasks-xxx 并新增 max-tasks-per-worker-xxx #3093 修复 RocksDB CompactFiles 的问题 #3789  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.9 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/209/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/209/</guid>
      <description>TiDB 2.0.9 Release Notes 2018 年 11 月 19 日，TiDB 发布 2.0.9 版。该版本在 2.0.8 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  修复统计信息直方图为空的时候导致的问题 #7927 修复 UNION ALL 语句在某些情况下 panic 的问题 #7942 修复错误的 DDL JOB 情况下导致的递归溢出问题 #7959 为 Commit 操作加上慢操作日志 #7983 修复 Limit 值太大的情况下导致的 panic 问题 #8004 支持 USING 子句指定 utf8mb4 字符集 #8048 内建函数 TRUNCATE 支持类型为 unsigned int 的参数 #8069 修复统计信息模块在某些情况下主键选择率估算的问题 #8150 增加 Session 变量来控制是否允许写入 _tidb_rowid #8126 修复 PhysicalProjection 在某些情况下 panic 的问题 #8154 修复 Union 语句在某些情况下结果不稳定的问题 #8168 修复在非插入语句下 values 没有返回 NULL 的问题 #8179 修复某些情况下统计信息模块无法清除过期统计数据的问题 #8184 让事务允许的最长运行时间变成一个可配置项 #8209 修复 expression rewriter 某些情况下错误的比较逻辑 #8288 消除 UNION ORDER BY 语句生成的多余列的问题 #8307 支持 admin show next_row_id 语句 #8274 修复 Show Create Table 语句中特殊字符转义的问题 #8321 修复 UNION 语句在某些情况下遇到非预期错误的问题 #8318 修复某些情况下取消 DDL 任务导致的 Schema 没有回滚的问题 #8312 把变量 tidb_max_chunk_size 变成全局环境变量 #8333 ticlient Scan 命令增加边界，解决数据扫出边界的问题 #8309 #8310  PD  修复 etcd 启动失败导致的服务挂起问题 #1267 修复 pd-ctl 读取 Region key 的相关问题 #1298 #1299 #1308 修复 regions/check API 输出错误的问题 #1311 修复 PD join 失败后无法重新 join 的问题 1279  TiKV  增加 kv_scan 接口扫描上界的限制 #3749 废弃配置 max-tasks-xxx 并新增 max-tasks-per-worker-xxx #3093 修复 RocksDB CompactFiles 的问题 #3789  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.9 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/209/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/209/</guid>
      <description>TiDB 2.0.9 Release Notes 2018 年 11 月 19 日，TiDB 发布 2.0.9 版。该版本在 2.0.8 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  修复统计信息直方图为空的时候导致的问题 #7927 修复 UNION ALL 语句在某些情况下 panic 的问题 #7942 修复错误的 DDL JOB 情况下导致的递归溢出问题 #7959 为 Commit 操作加上慢操作日志 #7983 修复 Limit 值太大的情况下导致的 panic 问题 #8004 支持 USING 子句指定 utf8mb4 字符集 #8048 内建函数 TRUNCATE 支持类型为 unsigned int 的参数 #8069 修复统计信息模块在某些情况下主键选择率估算的问题 #8150 增加 Session 变量来控制是否允许写入 _tidb_rowid #8126 修复 PhysicalProjection 在某些情况下 panic 的问题 #8154 修复 Union 语句在某些情况下结果不稳定的问题 #8168 修复在非插入语句下 values 没有返回 NULL 的问题 #8179 修复某些情况下统计信息模块无法清除过期统计数据的问题 #8184 让事务允许的最长运行时间变成一个可配置项 #8209 修复 expression rewriter 某些情况下错误的比较逻辑 #8288 消除 UNION ORDER BY 语句生成的多余列的问题 #8307 支持 admin show next_row_id 语句 #8274 修复 Show Create Table 语句中特殊字符转义的问题 #8321 修复 UNION 语句在某些情况下遇到非预期错误的问题 #8318 修复某些情况下取消 DDL 任务导致的 Schema 没有回滚的问题 #8312 把变量 tidb_max_chunk_size 变成全局环境变量 #8333 ticlient Scan 命令增加边界，解决数据扫出边界的问题 #8309 #8310  PD  修复 etcd 启动失败导致的服务挂起问题 #1267 修复 pd-ctl 读取 Region key 的相关问题 #1298 #1299 #1308 修复 regions/check API 输出错误的问题 #1311 修复 PD join 失败后无法重新 join 的问题 1279  TiKV  增加 kv_scan 接口扫描上界的限制 #3749 废弃配置 max-tasks-xxx 并新增 max-tasks-per-worker-xxx #3093 修复 RocksDB CompactFiles 的问题 #3789  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.9 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/209/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/209/</guid>
      <description>TiDB 2.0.9 Release Notes 2018 年 11 月 19 日，TiDB 发布 2.0.9 版。该版本在 2.0.8 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  修复统计信息直方图为空的时候导致的问题 #7927 修复 UNION ALL 语句在某些情况下 panic 的问题 #7942 修复错误的 DDL JOB 情况下导致的递归溢出问题 #7959 为 Commit 操作加上慢操作日志 #7983 修复 Limit 值太大的情况下导致的 panic 问题 #8004 支持 USING 子句指定 utf8mb4 字符集 #8048 内建函数 TRUNCATE 支持类型为 unsigned int 的参数 #8069 修复统计信息模块在某些情况下主键选择率估算的问题 #8150 增加 Session 变量来控制是否允许写入 _tidb_rowid #8126 修复 PhysicalProjection 在某些情况下 panic 的问题 #8154 修复 Union 语句在某些情况下结果不稳定的问题 #8168 修复在非插入语句下 values 没有返回 NULL 的问题 #8179 修复某些情况下统计信息模块无法清除过期统计数据的问题 #8184 让事务允许的最长运行时间变成一个可配置项 #8209 修复 expression rewriter 某些情况下错误的比较逻辑 #8288 消除 UNION ORDER BY 语句生成的多余列的问题 #8307 支持 admin show next_row_id 语句 #8274 修复 Show Create Table 语句中特殊字符转义的问题 #8321 修复 UNION 语句在某些情况下遇到非预期错误的问题 #8318 修复某些情况下取消 DDL 任务导致的 Schema 没有回滚的问题 #8312 把变量 tidb_max_chunk_size 变成全局环境变量 #8333 ticlient Scan 命令增加边界，解决数据扫出边界的问题 #8309 #8310  PD  修复 etcd 启动失败导致的服务挂起问题 #1267 修复 pd-ctl 读取 Region key 的相关问题 #1298 #1299 #1308 修复 regions/check API 输出错误的问题 #1311 修复 PD join 失败后无法重新 join 的问题 1279  TiKV  增加 kv_scan 接口扫描上界的限制 #3749 废弃配置 max-tasks-xxx 并新增 max-tasks-per-worker-xxx #3093 修复 RocksDB CompactFiles 的问题 #3789  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.9 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/209/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/209/</guid>
      <description>TiDB 2.0.9 Release Notes On November 19, 2018, TiDB 2.0.9 is released. Compared with TiDB 2.0.8, this release has great improvement in system compatibility and stability.
TiDB  Fix the issue caused by the empty statistics histogram #7927 Fix the panic issue of the UNION ALL statement in some cases #7942 Fix the stack overflow issue caused by wrong DDL Jobs #7959 Add the slow log for the Commit operation #7983 Fix the panic issue caused by the too large Limit value #8004 Support specifying the utf8mb4 character set in the USING clause #8048 Make the TRUNCATE built-in function support parameters of unsigned integer type #8069 Fix the selectivity estimation issue of the primary key for the statistics module in some cases #8150 Add the Session variable to control whether _tidb_rowid is allowed to be written in #8126 Fix the panic issue of PhysicalProjection in some cases #8154 Fix the unstable results of the Union statement in some cases #8168 Fix the issue that NULL is not returned by values in the non-Insert statement #8179 Fix the issue that the statistics module cannot clear the outdated data in some cases #8184 Make the maximum allowed running time for a transaction a configurable option 8209 Fix the wrong comparison algorithm of expression rewriter in some cases #8288 Eliminate the extra columns generated by the UNION ORDER BY statement #8307 Support the admin show next_row_id statement #8274 Fix the escape issue of special characters in the Show Create Table statement #8321 Fix the unexpected errors in the UNION statement in some cases #8318 Fix the issue that canceling a DDL job causes no rollback of a schema in some cases #8312 Change tidb_max_chunk_size to a global variable #8333 Add an upper bound to the Scan command of ticlient, to avoid overbound scan #8309 #8310  PD  Fix the issue that the PD server gets stuck caused by etcd startup failure #1267 Fix the issues related to pd-ctl reading the Region key #1298 #1299 #1308 Fix the issue that the regions/check API returns the wrong result #1311 Fix the issue that PD cannot restart join after a PD join failure #1279  TiKV  Add the end-key limit to the kv_scan interface #3749 Abandon the max-tasks-xxx configuration and add max-tasks-per-worker-xxx #3093 Fix the CompactFiles issue in RocksDB #3789  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.9 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/209/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/209/</guid>
      <description>TiDB 2.0.9 Release Notes On November 19, 2018, TiDB 2.0.9 is released. Compared with TiDB 2.0.8, this release has great improvement in system compatibility and stability.
TiDB  Fix the issue caused by the empty statistics histogram #7927 Fix the panic issue of the UNION ALL statement in some cases #7942 Fix the stack overflow issue caused by wrong DDL Jobs #7959 Add the slow log for the Commit operation #7983 Fix the panic issue caused by the too large Limit value #8004 Support specifying the utf8mb4 character set in the USING clause #8048 Make the TRUNCATE built-in function support parameters of unsigned integer type #8069 Fix the selectivity estimation issue of the primary key for the statistics module in some cases #8150 Add the Session variable to control whether _tidb_rowid is allowed to be written in #8126 Fix the panic issue of PhysicalProjection in some cases #8154 Fix the unstable results of the Union statement in some cases #8168 Fix the issue that NULL is not returned by values in the non-Insert statement #8179 Fix the issue that the statistics module cannot clear the outdated data in some cases #8184 Make the maximum allowed running time for a transaction a configurable option 8209 Fix the wrong comparison algorithm of expression rewriter in some cases #8288 Eliminate the extra columns generated by the UNION ORDER BY statement #8307 Support the admin show next_row_id statement #8274 Fix the escape issue of special characters in the Show Create Table statement #8321 Fix the unexpected errors in the UNION statement in some cases #8318 Fix the issue that canceling a DDL job causes no rollback of a schema in some cases #8312 Change tidb_max_chunk_size to a global variable #8333 Add an upper bound to the Scan command of ticlient, to avoid overbound scan #8309 #8310  PD  Fix the issue that the PD server gets stuck caused by etcd startup failure #1267 Fix the issues related to pd-ctl reading the Region key #1298 #1299 #1308 Fix the issue that the regions/check API returns the wrong result #1311 Fix the issue that PD cannot restart join after a PD join failure #1279  TiKV  Add the end-key limit to the kv_scan interface #3749 Abandon the max-tasks-xxx configuration and add max-tasks-per-worker-xxx #3093 Fix the CompactFiles issue in RocksDB #3789  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.9 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/209/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/209/</guid>
      <description>TiDB 2.0.9 Release Notes On November 19, 2018, TiDB 2.0.9 is released. Compared with TiDB 2.0.8, this release has great improvement in system compatibility and stability.
TiDB  Fix the issue caused by the empty statistics histogram #7927 Fix the panic issue of the UNION ALL statement in some cases #7942 Fix the stack overflow issue caused by wrong DDL Jobs #7959 Add the slow log for the Commit operation #7983 Fix the panic issue caused by the too large Limit value #8004 Support specifying the utf8mb4 character set in the USING clause #8048 Make the TRUNCATE built-in function support parameters of unsigned integer type #8069 Fix the selectivity estimation issue of the primary key for the statistics module in some cases #8150 Add the Session variable to control whether _tidb_rowid is allowed to be written in #8126 Fix the panic issue of PhysicalProjection in some cases #8154 Fix the unstable results of the Union statement in some cases #8168 Fix the issue that NULL is not returned by values in the non-Insert statement #8179 Fix the issue that the statistics module cannot clear the outdated data in some cases #8184 Make the maximum allowed running time for a transaction a configurable option 8209 Fix the wrong comparison algorithm of expression rewriter in some cases #8288 Eliminate the extra columns generated by the UNION ORDER BY statement #8307 Support the admin show next_row_id statement #8274 Fix the escape issue of special characters in the Show Create Table statement #8321 Fix the unexpected errors in the UNION statement in some cases #8318 Fix the issue that canceling a DDL job causes no rollback of a schema in some cases #8312 Change tidb_max_chunk_size to a global variable #8333 Add an upper bound to the Scan command of ticlient, to avoid overbound scan #8309 #8310  PD  Fix the issue that the PD server gets stuck caused by etcd startup failure #1267 Fix the issues related to pd-ctl reading the Region key #1298 #1299 #1308 Fix the issue that the regions/check API returns the wrong result #1311 Fix the issue that PD cannot restart join after a PD join failure #1279  TiKV  Add the end-key limit to the kv_scan interface #3749 Abandon the max-tasks-xxx configuration and add max-tasks-per-worker-xxx #3093 Fix the CompactFiles issue in RocksDB #3789  </description>
    </item>
    
    <item>
      <title>TiDB 2.0.9 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/209/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/209/</guid>
      <description>TiDB 2.0.9 Release Notes On November 19, 2018, TiDB 2.0.9 is released. Compared with TiDB 2.0.8, this release has great improvement in system compatibility and stability.
TiDB  Fix the issue caused by the empty statistics histogram #7927 Fix the panic issue of the UNION ALL statement in some cases #7942 Fix the stack overflow issue caused by wrong DDL Jobs #7959 Add the slow log for the Commit operation #7983 Fix the panic issue caused by the too large Limit value #8004 Support specifying the utf8mb4 character set in the USING clause #8048 Make the TRUNCATE built-in function support parameters of unsigned integer type #8069 Fix the selectivity estimation issue of the primary key for the statistics module in some cases #8150 Add the Session variable to control whether _tidb_rowid is allowed to be written in #8126 Fix the panic issue of PhysicalProjection in some cases #8154 Fix the unstable results of the Union statement in some cases #8168 Fix the issue that NULL is not returned by values in the non-Insert statement #8179 Fix the issue that the statistics module cannot clear the outdated data in some cases #8184 Make the maximum allowed running time for a transaction a configurable option 8209 Fix the wrong comparison algorithm of expression rewriter in some cases #8288 Eliminate the extra columns generated by the UNION ORDER BY statement #8307 Support the admin show next_row_id statement #8274 Fix the escape issue of special characters in the Show Create Table statement #8321 Fix the unexpected errors in the UNION statement in some cases #8318 Fix the issue that canceling a DDL job causes no rollback of a schema in some cases #8312 Change tidb_max_chunk_size to a global variable #8333 Add an upper bound to the Scan command of ticlient, to avoid overbound scan #8309 #8310  PD  Fix the issue that the PD server gets stuck caused by etcd startup failure #1267 Fix the issues related to pd-ctl reading the Region key #1298 #1299 #1308 Fix the issue that the regions/check API returns the wrong result #1311 Fix the issue that PD cannot restart join after a PD join failure #1279  TiKV  Add the end-key limit to the kv_scan interface #3749 Abandon the max-tasks-xxx configuration and add max-tasks-per-worker-xxx #3093 Fix the CompactFiles issue in RocksDB #3789  </description>
    </item>
    
    <item>
      <title>TiDB 2.1 Beta Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/21beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/21beta/</guid>
      <description>TiDB 2.1 Beta Release Notes 2018 年 6 月 29 日，TiDB 发布 2.1 Beta 版。相比 2.0 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  优化 Index Join 选择范围，提升执行性能 优化关联子查询，下推 Filter 和扩大索引选择范围，部分查询的效率有数量级的提升 在 UPDATE、DELETE 语句中支持 Index Hint 和 Join Hint 优化器 Hint TIDM_SMJ 在没有索引可用的情况下可生效 支持更多函数下推：ABS/CEIL/FLOOR/IS TRUE/IS FALSE 在常量折叠过程中特殊处理函数 IF 和 IFNULL 优化 EXPLAIN 语句输出格式   SQL 执行引擎  实现并行 Hash Aggregate 算子，部分场景下能提高 Hash Aggregate 计算性能 350% 实现并行 Project 算子，部分场景下性能提升达 74% 并发地读取 Hash Join 的 Inner 表和 Outer 表的数据，提升执行性能 修复部分场景下 INSERT … ON DUPLICATE KEY UPDATE … 结果不正确的问题 修复 CONCAT_WS/FLOOR/CEIL/DIV 内建函数的结果不正确的问题   Server  添加 HTTP API 打散 table 的 Regions 在 TiKV 集群中的分布 添加 auto_analyze_ratio 系统变量控制自动 analyze 的阈值 添加 HTTP API 控制是否打开 general log 添加 HTTP API 在线修改日志级别 在 general log 和 slow query log 中添加 user 信息 支持 Server side cursor   兼容性  支持更多 MySQL 语法 BIT 聚合函数支持 ALL 参数 支持 SHOW PRIVILEGES 语句   DML  减少 INSERT INTO SELECT 语句的内存占用 修复 Plan Cache 的性能问题 添加 tidb_retry_limit 系统变量控制事务自动重试的次数 添加 tidb_disable_txn_auto_retry 系统变量控制事务是否自动重试 修复写入 time 类型的数据精度问题 支持本地冲突事务排队，优化冲突事务性能 修复 UPDATE 语句的 Affected Rows 优化 insert ignore on duplicate key update 语句性能 优化 Create Table 语句的执行速度 优化 Add index 的速度，在某些场景下速度大幅提升 修复 Alter table add column 增加列超过表的列数限制的问题 修复在某些异常情况下 DDL 任务重试导致 TiKV 压力增加的问题 修复在某些异常情况下 TiDB 不断重载 Schema 信息的问题   DDL  Show Create Table 不再输出外键相关的内容 支持 select tidb_is_ddl_owner() 语句，方便判断 TiDB 是否为 DDL Owner 修复某些场景下 YEAR 类型删除索引的问题 修复并发执行场景下的 Rename table 的问题 支持 ALTER TABLE FORCE 语法 支持 ALTER TABLE RENAME KEY TO 语法 admin show ddl jobs 输出信息中添加表名、库名等信息    PD  PD 节点间开启 Raft PreVote，避免网络隔离后恢复时产生的重新选举 优化 Balance Scheduler 频繁调度小 Region 的问题 优化热点调度器，在流量统计信息抖动时适应性更好 region merge 调度时跳过数据行数较多的 Region 默认开启 raft learner 功能，降低调度时出现宕机导致数据不可用的风险 pd-recover 移除 max-replica 参数 增加 Filter 相关的 metrics 修复 tikv-ctl unsafe recovery 之后 Region 信息没更新的问题 修复某些场景下副本迁移导致 TiKV 磁盘空间耗尽的问题 兼容性提示  由于新版本存储引擎更新，不支持在升级后回退至 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 Beta Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/21beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/21beta/</guid>
      <description>TiDB 2.1 Beta Release Notes 2018 年 6 月 29 日，TiDB 发布 2.1 Beta 版。相比 2.0 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  优化 Index Join 选择范围，提升执行性能 优化关联子查询，下推 Filter 和扩大索引选择范围，部分查询的效率有数量级的提升 在 UPDATE、DELETE 语句中支持 Index Hint 和 Join Hint 优化器 Hint TIDM_SMJ 在没有索引可用的情况下可生效 支持更多函数下推：ABS/CEIL/FLOOR/IS TRUE/IS FALSE 在常量折叠过程中特殊处理函数 IF 和 IFNULL 优化 EXPLAIN 语句输出格式   SQL 执行引擎  实现并行 Hash Aggregate 算子，部分场景下能提高 Hash Aggregate 计算性能 350% 实现并行 Project 算子，部分场景下性能提升达 74% 并发地读取 Hash Join 的 Inner 表和 Outer 表的数据，提升执行性能 修复部分场景下 INSERT … ON DUPLICATE KEY UPDATE … 结果不正确的问题 修复 CONCAT_WS/FLOOR/CEIL/DIV 内建函数的结果不正确的问题   Server  添加 HTTP API 打散 table 的 Regions 在 TiKV 集群中的分布 添加 auto_analyze_ratio 系统变量控制自动 analyze 的阈值 添加 HTTP API 控制是否打开 general log 添加 HTTP API 在线修改日志级别 在 general log 和 slow query log 中添加 user 信息 支持 Server side cursor   兼容性  支持更多 MySQL 语法 BIT 聚合函数支持 ALL 参数 支持 SHOW PRIVILEGES 语句   DML  减少 INSERT INTO SELECT 语句的内存占用 修复 Plan Cache 的性能问题 添加 tidb_retry_limit 系统变量控制事务自动重试的次数 添加 tidb_disable_txn_auto_retry 系统变量控制事务是否自动重试 修复写入 time 类型的数据精度问题 支持本地冲突事务排队，优化冲突事务性能 修复 UPDATE 语句的 Affected Rows 优化 insert ignore on duplicate key update 语句性能 优化 Create Table 语句的执行速度 优化 Add index 的速度，在某些场景下速度大幅提升 修复 Alter table add column 增加列超过表的列数限制的问题 修复在某些异常情况下 DDL 任务重试导致 TiKV 压力增加的问题 修复在某些异常情况下 TiDB 不断重载 Schema 信息的问题   DDL  Show Create Table 不再输出外键相关的内容 支持 select tidb_is_ddl_owner() 语句，方便判断 TiDB 是否为 DDL Owner 修复某些场景下 YEAR 类型删除索引的问题 修复并发执行场景下的 Rename table 的问题 支持 ALTER TABLE FORCE 语法 支持 ALTER TABLE RENAME KEY TO 语法 admin show ddl jobs 输出信息中添加表名、库名等信息    PD  PD 节点间开启 Raft PreVote，避免网络隔离后恢复时产生的重新选举 优化 Balance Scheduler 频繁调度小 Region 的问题 优化热点调度器，在流量统计信息抖动时适应性更好 region merge 调度时跳过数据行数较多的 Region 默认开启 raft learner 功能，降低调度时出现宕机导致数据不可用的风险 pd-recover 移除 max-replica 参数 增加 Filter 相关的 metrics 修复 tikv-ctl unsafe recovery 之后 Region 信息没更新的问题 修复某些场景下副本迁移导致 TiKV 磁盘空间耗尽的问题 兼容性提示  由于新版本存储引擎更新，不支持在升级后回退至 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 Beta Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/21beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/21beta/</guid>
      <description>TiDB 2.1 Beta Release Notes 2018 年 6 月 29 日，TiDB 发布 2.1 Beta 版。相比 2.0 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  优化 Index Join 选择范围，提升执行性能 优化关联子查询，下推 Filter 和扩大索引选择范围，部分查询的效率有数量级的提升 在 UPDATE、DELETE 语句中支持 Index Hint 和 Join Hint 优化器 Hint TIDM_SMJ 在没有索引可用的情况下可生效 支持更多函数下推：ABS/CEIL/FLOOR/IS TRUE/IS FALSE 在常量折叠过程中特殊处理函数 IF 和 IFNULL 优化 EXPLAIN 语句输出格式   SQL 执行引擎  实现并行 Hash Aggregate 算子，部分场景下能提高 Hash Aggregate 计算性能 350% 实现并行 Project 算子，部分场景下性能提升达 74% 并发地读取 Hash Join 的 Inner 表和 Outer 表的数据，提升执行性能 修复部分场景下 INSERT … ON DUPLICATE KEY UPDATE … 结果不正确的问题 修复 CONCAT_WS/FLOOR/CEIL/DIV 内建函数的结果不正确的问题   Server  添加 HTTP API 打散 table 的 Regions 在 TiKV 集群中的分布 添加 auto_analyze_ratio 系统变量控制自动 analyze 的阈值 添加 HTTP API 控制是否打开 general log 添加 HTTP API 在线修改日志级别 在 general log 和 slow query log 中添加 user 信息 支持 Server side cursor   兼容性  支持更多 MySQL 语法 BIT 聚合函数支持 ALL 参数 支持 SHOW PRIVILEGES 语句   DML  减少 INSERT INTO SELECT 语句的内存占用 修复 Plan Cache 的性能问题 添加 tidb_retry_limit 系统变量控制事务自动重试的次数 添加 tidb_disable_txn_auto_retry 系统变量控制事务是否自动重试 修复写入 time 类型的数据精度问题 支持本地冲突事务排队，优化冲突事务性能 修复 UPDATE 语句的 Affected Rows 优化 insert ignore on duplicate key update 语句性能 优化 Create Table 语句的执行速度 优化 Add index 的速度，在某些场景下速度大幅提升 修复 Alter table add column 增加列超过表的列数限制的问题 修复在某些异常情况下 DDL 任务重试导致 TiKV 压力增加的问题 修复在某些异常情况下 TiDB 不断重载 Schema 信息的问题   DDL  Show Create Table 不再输出外键相关的内容 支持 select tidb_is_ddl_owner() 语句，方便判断 TiDB 是否为 DDL Owner 修复某些场景下 YEAR 类型删除索引的问题 修复并发执行场景下的 Rename table 的问题 支持 ALTER TABLE FORCE 语法 支持 ALTER TABLE RENAME KEY TO 语法 admin show ddl jobs 输出信息中添加表名、库名等信息    PD  PD 节点间开启 Raft PreVote，避免网络隔离后恢复时产生的重新选举 优化 Balance Scheduler 频繁调度小 Region 的问题 优化热点调度器，在流量统计信息抖动时适应性更好 region merge 调度时跳过数据行数较多的 Region 默认开启 raft learner 功能，降低调度时出现宕机导致数据不可用的风险 pd-recover 移除 max-replica 参数 增加 Filter 相关的 metrics 修复 tikv-ctl unsafe recovery 之后 Region 信息没更新的问题 修复某些场景下副本迁移导致 TiKV 磁盘空间耗尽的问题 兼容性提示  由于新版本存储引擎更新，不支持在升级后回退至 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 Beta Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/21beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/21beta/</guid>
      <description>TiDB 2.1 Beta Release Notes 2018 年 6 月 29 日，TiDB 发布 2.1 Beta 版。相比 2.0 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  优化 Index Join 选择范围，提升执行性能 优化关联子查询，下推 Filter 和扩大索引选择范围，部分查询的效率有数量级的提升 在 UPDATE、DELETE 语句中支持 Index Hint 和 Join Hint 优化器 Hint TIDM_SMJ 在没有索引可用的情况下可生效 支持更多函数下推：ABS/CEIL/FLOOR/IS TRUE/IS FALSE 在常量折叠过程中特殊处理函数 IF 和 IFNULL 优化 EXPLAIN 语句输出格式   SQL 执行引擎  实现并行 Hash Aggregate 算子，部分场景下能提高 Hash Aggregate 计算性能 350% 实现并行 Project 算子，部分场景下性能提升达 74% 并发地读取 Hash Join 的 Inner 表和 Outer 表的数据，提升执行性能 修复部分场景下 INSERT … ON DUPLICATE KEY UPDATE … 结果不正确的问题 修复 CONCAT_WS/FLOOR/CEIL/DIV 内建函数的结果不正确的问题   Server  添加 HTTP API 打散 table 的 Regions 在 TiKV 集群中的分布 添加 auto_analyze_ratio 系统变量控制自动 analyze 的阈值 添加 HTTP API 控制是否打开 general log 添加 HTTP API 在线修改日志级别 在 general log 和 slow query log 中添加 user 信息 支持 Server side cursor   兼容性  支持更多 MySQL 语法 BIT 聚合函数支持 ALL 参数 支持 SHOW PRIVILEGES 语句   DML  减少 INSERT INTO SELECT 语句的内存占用 修复 Plan Cache 的性能问题 添加 tidb_retry_limit 系统变量控制事务自动重试的次数 添加 tidb_disable_txn_auto_retry 系统变量控制事务是否自动重试 修复写入 time 类型的数据精度问题 支持本地冲突事务排队，优化冲突事务性能 修复 UPDATE 语句的 Affected Rows 优化 insert ignore on duplicate key update 语句性能 优化 Create Table 语句的执行速度 优化 Add index 的速度，在某些场景下速度大幅提升 修复 Alter table add column 增加列超过表的列数限制的问题 修复在某些异常情况下 DDL 任务重试导致 TiKV 压力增加的问题 修复在某些异常情况下 TiDB 不断重载 Schema 信息的问题   DDL  Show Create Table 不再输出外键相关的内容 支持 select tidb_is_ddl_owner() 语句，方便判断 TiDB 是否为 DDL Owner 修复某些场景下 YEAR 类型删除索引的问题 修复并发执行场景下的 Rename table 的问题 支持 ALTER TABLE FORCE 语法 支持 ALTER TABLE RENAME KEY TO 语法 admin show ddl jobs 输出信息中添加表名、库名等信息    PD  PD 节点间开启 Raft PreVote，避免网络隔离后恢复时产生的重新选举 优化 Balance Scheduler 频繁调度小 Region 的问题 优化热点调度器，在流量统计信息抖动时适应性更好 region merge 调度时跳过数据行数较多的 Region 默认开启 raft learner 功能，降低调度时出现宕机导致数据不可用的风险 pd-recover 移除 max-replica 参数 增加 Filter 相关的 metrics 修复 tikv-ctl unsafe recovery 之后 Region 信息没更新的问题 修复某些场景下副本迁移导致 TiKV 磁盘空间耗尽的问题 兼容性提示  由于新版本存储引擎更新，不支持在升级后回退至 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 Beta Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/21beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/21beta/</guid>
      <description>TiDB 2.1 Beta Release Notes On June 29, 2018, TiDB 2.1 Beta is released! Compared with TiDB 2.0, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer  Optimize the selection range of Index Join to improve the execution performance Optimize correlated subquery, push down Filter, and extend the index range, to improve the efficiency of some queries by orders of magnitude Support Index Hint and Join Hint in the UPDATE and DELETE statements Validate Hint TIDM_SMJ when no available index exists Support pushdown of the ABS, CEIL, FLOOR, IS TRUE, and IS FALSE functions Handle the IF and IFNULL functions especially in the constant folding process   SQL Execution Engine  Implement parallel Hash Aggregate operators and improve the computing performance of Hash Aggregate by 350% in some scenarios Implement parallel Project operators and improve the performance by 74% in some scenarios Read the data of the Inner table and Outer table of Hash Join concurrently to improve the execution performance Fix incorrect results of INSERT … ON DUPLICATE KEY UPDATE … in some scenarios Fix incorrect results of the CONCAT_WS, FLOOR, CEIL, and DIV built-in functions   Server  Add the HTTP API to scatter the distribution of table Regions in the TiKV cluster Add the auto_analyze_ratio system variable to control the threshold value of automatic Analyze Add the HTTP API to control whether to open the general log Add the HTTP API to modify the log level online Add the user information in the general log and the slow query log Support the server side cursor   Compatibility  Support more MySQL syntax Make the bit aggregate function support the ALL parameter Support the SHOW PRIVILEGES statement   DML  Decrease the memory usage of the INSERT INTO SELECT statement Fix the performance issue of PlanCache Add the tidb_retry_limit system variable to control the automatic retry times of transactions Add the tidb_disable_txn_auto_retry system variable to control whether the transaction tries automatically Fix the accuracy issue of the written data of the time type Support the queue of locally conflicted transactions to optimize the conflicted transaction performance Fix Affected Rows of the UPDATE statement Optimize the statement performance of insert ignore on duplicate key update   DDL  Optimize the execution speed of the CreateTable statement Optimize the execution speed of ADD INDEX and improve it greatly in some scenarios Fix the issue that the number of added columns by Alter table add column exceeds the limit of the number of table columns Fix the issue that DDL job retries lead to an increasing pressure on TiKV in abnormal conditions Fix the issue that TiDB continuously reloads the schema information in abnormal conditions Do not output the FOREIGN KEY related information in the result of SHOW CREATE TABLE Support the select tidb_is_ddl_owner() statement to facilitate judging whether TiDB is DDL Owner Fix the issue that the index is deleted in the Year type in some scenarios Fix the renaming table issue in the concurrent execution scenario Support the AlterTableForce syntax Support the AlterTableRenameIndex syntax with FromKey and ToKey Add the table name and database name in the output information of admin show ddl jobs    PD  Enable Raft PreVote between PD nodes to avoid leader reelection when network recovers after network isolation Optimize the issue that Balance Scheduler schedules small Regions frequently Optimize the hotspot scheduler to improve its adaptability in traffic statistics information jitters Skip the Regions with a large number of rows when scheduling region merge Enable raft learner by default to lower the risk of unavailable data caused by machine failure during scheduling Remove max-replica from pd-recover Add Filter metrics Fix the issue that Region information is not updated after tikv-ctl unsafe recovery Fix the issue that TiKV disk space is used up caused by replica migration in some scenarios Compatibility notes  Do not support rolling back to v2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 Beta Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/21beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/21beta/</guid>
      <description>TiDB 2.1 Beta Release Notes On June 29, 2018, TiDB 2.1 Beta is released! Compared with TiDB 2.0, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer  Optimize the selection range of Index Join to improve the execution performance Optimize correlated subquery, push down Filter, and extend the index range, to improve the efficiency of some queries by orders of magnitude Support Index Hint and Join Hint in the UPDATE and DELETE statements Validate Hint TIDM_SMJ when no available index exists Support pushdown of the ABS, CEIL, FLOOR, IS TRUE, and IS FALSE functions Handle the IF and IFNULL functions especially in the constant folding process   SQL Execution Engine  Implement parallel Hash Aggregate operators and improve the computing performance of Hash Aggregate by 350% in some scenarios Implement parallel Project operators and improve the performance by 74% in some scenarios Read the data of the Inner table and Outer table of Hash Join concurrently to improve the execution performance Fix incorrect results of INSERT … ON DUPLICATE KEY UPDATE … in some scenarios Fix incorrect results of the CONCAT_WS, FLOOR, CEIL, and DIV built-in functions   Server  Add the HTTP API to scatter the distribution of table Regions in the TiKV cluster Add the auto_analyze_ratio system variable to control the threshold value of automatic Analyze Add the HTTP API to control whether to open the general log Add the HTTP API to modify the log level online Add the user information in the general log and the slow query log Support the server side cursor   Compatibility  Support more MySQL syntax Make the bit aggregate function support the ALL parameter Support the SHOW PRIVILEGES statement   DML  Decrease the memory usage of the INSERT INTO SELECT statement Fix the performance issue of PlanCache Add the tidb_retry_limit system variable to control the automatic retry times of transactions Add the tidb_disable_txn_auto_retry system variable to control whether the transaction tries automatically Fix the accuracy issue of the written data of the time type Support the queue of locally conflicted transactions to optimize the conflicted transaction performance Fix Affected Rows of the UPDATE statement Optimize the statement performance of insert ignore on duplicate key update   DDL  Optimize the execution speed of the CreateTable statement Optimize the execution speed of ADD INDEX and improve it greatly in some scenarios Fix the issue that the number of added columns by Alter table add column exceeds the limit of the number of table columns Fix the issue that DDL job retries lead to an increasing pressure on TiKV in abnormal conditions Fix the issue that TiDB continuously reloads the schema information in abnormal conditions Do not output the FOREIGN KEY related information in the result of SHOW CREATE TABLE Support the select tidb_is_ddl_owner() statement to facilitate judging whether TiDB is DDL Owner Fix the issue that the index is deleted in the Year type in some scenarios Fix the renaming table issue in the concurrent execution scenario Support the AlterTableForce syntax Support the AlterTableRenameIndex syntax with FromKey and ToKey Add the table name and database name in the output information of admin show ddl jobs    PD  Enable Raft PreVote between PD nodes to avoid leader reelection when network recovers after network isolation Optimize the issue that Balance Scheduler schedules small Regions frequently Optimize the hotspot scheduler to improve its adaptability in traffic statistics information jitters Skip the Regions with a large number of rows when scheduling region merge Enable raft learner by default to lower the risk of unavailable data caused by machine failure during scheduling Remove max-replica from pd-recover Add Filter metrics Fix the issue that Region information is not updated after tikv-ctl unsafe recovery Fix the issue that TiKV disk space is used up caused by replica migration in some scenarios Compatibility notes  Do not support rolling back to v2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 Beta Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/21beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/21beta/</guid>
      <description>TiDB 2.1 Beta Release Notes On June 29, 2018, TiDB 2.1 Beta is released! Compared with TiDB 2.0, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer  Optimize the selection range of Index Join to improve the execution performance Optimize correlated subquery, push down Filter, and extend the index range, to improve the efficiency of some queries by orders of magnitude Support Index Hint and Join Hint in the UPDATE and DELETE statements Validate Hint TIDM_SMJ when no available index exists Support pushdown of the ABS, CEIL, FLOOR, IS TRUE, and IS FALSE functions Handle the IF and IFNULL functions especially in the constant folding process   SQL Execution Engine  Implement parallel Hash Aggregate operators and improve the computing performance of Hash Aggregate by 350% in some scenarios Implement parallel Project operators and improve the performance by 74% in some scenarios Read the data of the Inner table and Outer table of Hash Join concurrently to improve the execution performance Fix incorrect results of INSERT … ON DUPLICATE KEY UPDATE … in some scenarios Fix incorrect results of the CONCAT_WS, FLOOR, CEIL, and DIV built-in functions   Server  Add the HTTP API to scatter the distribution of table Regions in the TiKV cluster Add the auto_analyze_ratio system variable to control the threshold value of automatic Analyze Add the HTTP API to control whether to open the general log Add the HTTP API to modify the log level online Add the user information in the general log and the slow query log Support the server side cursor   Compatibility  Support more MySQL syntax Make the bit aggregate function support the ALL parameter Support the SHOW PRIVILEGES statement   DML  Decrease the memory usage of the INSERT INTO SELECT statement Fix the performance issue of PlanCache Add the tidb_retry_limit system variable to control the automatic retry times of transactions Add the tidb_disable_txn_auto_retry system variable to control whether the transaction tries automatically Fix the accuracy issue of the written data of the time type Support the queue of locally conflicted transactions to optimize the conflicted transaction performance Fix Affected Rows of the UPDATE statement Optimize the statement performance of insert ignore on duplicate key update   DDL  Optimize the execution speed of the CreateTable statement Optimize the execution speed of ADD INDEX and improve it greatly in some scenarios Fix the issue that the number of added columns by Alter table add column exceeds the limit of the number of table columns Fix the issue that DDL job retries lead to an increasing pressure on TiKV in abnormal conditions Fix the issue that TiDB continuously reloads the schema information in abnormal conditions Do not output the FOREIGN KEY related information in the result of SHOW CREATE TABLE Support the select tidb_is_ddl_owner() statement to facilitate judging whether TiDB is DDL Owner Fix the issue that the index is deleted in the Year type in some scenarios Fix the renaming table issue in the concurrent execution scenario Support the AlterTableForce syntax Support the AlterTableRenameIndex syntax with FromKey and ToKey Add the table name and database name in the output information of admin show ddl jobs    PD  Enable Raft PreVote between PD nodes to avoid leader reelection when network recovers after network isolation Optimize the issue that Balance Scheduler schedules small Regions frequently Optimize the hotspot scheduler to improve its adaptability in traffic statistics information jitters Skip the Regions with a large number of rows when scheduling region merge Enable raft learner by default to lower the risk of unavailable data caused by machine failure during scheduling Remove max-replica from pd-recover Add Filter metrics Fix the issue that Region information is not updated after tikv-ctl unsafe recovery Fix the issue that TiKV disk space is used up caused by replica migration in some scenarios Compatibility notes  Do not support rolling back to v2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 Beta Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/21beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/21beta/</guid>
      <description>TiDB 2.1 Beta Release Notes On June 29, 2018, TiDB 2.1 Beta is released! Compared with TiDB 2.0, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer  Optimize the selection range of Index Join to improve the execution performance Optimize correlated subquery, push down Filter, and extend the index range, to improve the efficiency of some queries by orders of magnitude Support Index Hint and Join Hint in the UPDATE and DELETE statements Validate Hint TIDM_SMJ when no available index exists Support pushdown of the ABS, CEIL, FLOOR, IS TRUE, and IS FALSE functions Handle the IF and IFNULL functions especially in the constant folding process   SQL Execution Engine  Implement parallel Hash Aggregate operators and improve the computing performance of Hash Aggregate by 350% in some scenarios Implement parallel Project operators and improve the performance by 74% in some scenarios Read the data of the Inner table and Outer table of Hash Join concurrently to improve the execution performance Fix incorrect results of INSERT … ON DUPLICATE KEY UPDATE … in some scenarios Fix incorrect results of the CONCAT_WS, FLOOR, CEIL, and DIV built-in functions   Server  Add the HTTP API to scatter the distribution of table Regions in the TiKV cluster Add the auto_analyze_ratio system variable to control the threshold value of automatic Analyze Add the HTTP API to control whether to open the general log Add the HTTP API to modify the log level online Add the user information in the general log and the slow query log Support the server side cursor   Compatibility  Support more MySQL syntax Make the bit aggregate function support the ALL parameter Support the SHOW PRIVILEGES statement   DML  Decrease the memory usage of the INSERT INTO SELECT statement Fix the performance issue of PlanCache Add the tidb_retry_limit system variable to control the automatic retry times of transactions Add the tidb_disable_txn_auto_retry system variable to control whether the transaction tries automatically Fix the accuracy issue of the written data of the time type Support the queue of locally conflicted transactions to optimize the conflicted transaction performance Fix Affected Rows of the UPDATE statement Optimize the statement performance of insert ignore on duplicate key update   DDL  Optimize the execution speed of the CreateTable statement Optimize the execution speed of ADD INDEX and improve it greatly in some scenarios Fix the issue that the number of added columns by Alter table add column exceeds the limit of the number of table columns Fix the issue that DDL job retries lead to an increasing pressure on TiKV in abnormal conditions Fix the issue that TiDB continuously reloads the schema information in abnormal conditions Do not output the FOREIGN KEY related information in the result of SHOW CREATE TABLE Support the select tidb_is_ddl_owner() statement to facilitate judging whether TiDB is DDL Owner Fix the issue that the index is deleted in the Year type in some scenarios Fix the renaming table issue in the concurrent execution scenario Support the AlterTableForce syntax Support the AlterTableRenameIndex syntax with FromKey and ToKey Add the table name and database name in the output information of admin show ddl jobs    PD  Enable Raft PreVote between PD nodes to avoid leader reelection when network recovers after network isolation Optimize the issue that Balance Scheduler schedules small Regions frequently Optimize the hotspot scheduler to improve its adaptability in traffic statistics information jitters Skip the Regions with a large number of rows when scheduling region merge Enable raft learner by default to lower the risk of unavailable data caused by machine failure during scheduling Remove max-replica from pd-recover Add Filter metrics Fix the issue that Region information is not updated after tikv-ctl unsafe recovery Fix the issue that TiKV disk space is used up caused by replica migration in some scenarios Compatibility notes  Do not support rolling back to v2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 GA Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.1ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.1ga/</guid>
      <description>TiDB 2.1 GA Release Notes 2018 年 11 月 30 日，TiDB 发布 2.1 GA 版。相比 2.0 版本，该版本对系统稳定性、性能、兼容性、易用性做了大量改进。
TiDB   SQL 优化器
 优化 Index Join 选择范围，提升执行性能 优化 Index Join 外表选择，使用估算的行数较少的表作为外表 扩大 Join Hint TIDB_SMJ 的作用范围，在没有合适索引可用的情况下也可使用 Merge Join 加强 Join Hint TIDB_INLJ 的能力，可以指定 Join 中的内表 优化关联子查询，包括下推 Filter 和扩大索引选择范围，部分查询的效率有数量级的提升 支持在 UPDATE 和 DELETE 语句中使用 Index Hint 和 Join Hint 支持更多函数下推：ABS/CEIL/FLOOR/IS TRUE/IS FALSE 优化内建函数 IF 和 IFNULL 的常量折叠算法 优化 EXPLAIN 语句输出格式, 使用层级结构表示算子之间的上下游关系    SQL 执行引擎</description>
    </item>
    
    <item>
      <title>TiDB 2.1 GA Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.1ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.1ga/</guid>
      <description>TiDB 2.1 GA Release Notes 2018 年 11 月 30 日，TiDB 发布 2.1 GA 版。相比 2.0 版本，该版本对系统稳定性、性能、兼容性、易用性做了大量改进。
TiDB   SQL 优化器
 优化 Index Join 选择范围，提升执行性能 优化 Index Join 外表选择，使用估算的行数较少的表作为外表 扩大 Join Hint TIDB_SMJ 的作用范围，在没有合适索引可用的情况下也可使用 Merge Join 加强 Join Hint TIDB_INLJ 的能力，可以指定 Join 中的内表 优化关联子查询，包括下推 Filter 和扩大索引选择范围，部分查询的效率有数量级的提升 支持在 UPDATE 和 DELETE 语句中使用 Index Hint 和 Join Hint 支持更多函数下推：ABS/CEIL/FLOOR/IS TRUE/IS FALSE 优化内建函数 IF 和 IFNULL 的常量折叠算法 优化 EXPLAIN 语句输出格式, 使用层级结构表示算子之间的上下游关系    SQL 执行引擎</description>
    </item>
    
    <item>
      <title>TiDB 2.1 GA Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.1ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.1ga/</guid>
      <description>TiDB 2.1 GA Release Notes 2018 年 11 月 30 日，TiDB 发布 2.1 GA 版。相比 2.0 版本，该版本对系统稳定性、性能、兼容性、易用性做了大量改进。
TiDB   SQL 优化器
 优化 Index Join 选择范围，提升执行性能 优化 Index Join 外表选择，使用估算的行数较少的表作为外表 扩大 Join Hint TIDB_SMJ 的作用范围，在没有合适索引可用的情况下也可使用 Merge Join 加强 Join Hint TIDB_INLJ 的能力，可以指定 Join 中的内表 优化关联子查询，包括下推 Filter 和扩大索引选择范围，部分查询的效率有数量级的提升 支持在 UPDATE 和 DELETE 语句中使用 Index Hint 和 Join Hint 支持更多函数下推：ABS/CEIL/FLOOR/IS TRUE/IS FALSE 优化内建函数 IF 和 IFNULL 的常量折叠算法 优化 EXPLAIN 语句输出格式, 使用层级结构表示算子之间的上下游关系    SQL 执行引擎</description>
    </item>
    
    <item>
      <title>TiDB 2.1 GA Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.1ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.1ga/</guid>
      <description>TiDB 2.1 GA Release Notes 2018 年 11 月 30 日，TiDB 发布 2.1 GA 版。相比 2.0 版本，该版本对系统稳定性、性能、兼容性、易用性做了大量改进。
TiDB   SQL 优化器
 优化 Index Join 选择范围，提升执行性能 优化 Index Join 外表选择，使用估算的行数较少的表作为外表 扩大 Join Hint TIDB_SMJ 的作用范围，在没有合适索引可用的情况下也可使用 Merge Join 加强 Join Hint TIDB_INLJ 的能力，可以指定 Join 中的内表 优化关联子查询，包括下推 Filter 和扩大索引选择范围，部分查询的效率有数量级的提升 支持在 UPDATE 和 DELETE 语句中使用 Index Hint 和 Join Hint 支持更多函数下推：ABS/CEIL/FLOOR/IS TRUE/IS FALSE 优化内建函数 IF 和 IFNULL 的常量折叠算法 优化 EXPLAIN 语句输出格式, 使用层级结构表示算子之间的上下游关系    SQL 执行引擎</description>
    </item>
    
    <item>
      <title>TiDB 2.1 GA Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.1ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.1ga/</guid>
      <description>TiDB 2.1 GA Release Notes On November 30, 2018, TiDB 2.1 GA is released. See the following updates in this release. Compared with TiDB 2.0, this release has great improvements in stability, performance, compatibility, and usability.
TiDB   SQL Optimizer
  Optimize the selection range of Index Join to improve the execution performance
  Optimize the selection of outer table for Index Join and use the table with smaller estimated value of Row Count the as the outer table</description>
    </item>
    
    <item>
      <title>TiDB 2.1 GA Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.1ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.1ga/</guid>
      <description>TiDB 2.1 GA Release Notes On November 30, 2018, TiDB 2.1 GA is released. See the following updates in this release. Compared with TiDB 2.0, this release has great improvements in stability, performance, compatibility, and usability.
TiDB   SQL Optimizer
  Optimize the selection range of Index Join to improve the execution performance
  Optimize the selection of outer table for Index Join and use the table with smaller estimated value of Row Count the as the outer table</description>
    </item>
    
    <item>
      <title>TiDB 2.1 GA Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.1ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.1ga/</guid>
      <description>TiDB 2.1 GA Release Notes On November 30, 2018, TiDB 2.1 GA is released. See the following updates in this release. Compared with TiDB 2.0, this release has great improvements in stability, performance, compatibility, and usability.
TiDB   SQL Optimizer
  Optimize the selection range of Index Join to improve the execution performance
  Optimize the selection of outer table for Index Join and use the table with smaller estimated value of Row Count the as the outer table</description>
    </item>
    
    <item>
      <title>TiDB 2.1 GA Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.1ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.1ga/</guid>
      <description>TiDB 2.1 GA Release Notes On November 30, 2018, TiDB 2.1 GA is released. See the following updates in this release. Compared with TiDB 2.0, this release has great improvements in stability, performance, compatibility, and usability.
TiDB   SQL Optimizer
  Optimize the selection range of Index Join to improve the execution performance
  Optimize the selection of outer table for Index Join and use the table with smaller estimated value of Row Count the as the outer table</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/21rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/21rc1/</guid>
      <description>TiDB 2.1 RC1 Release Notes 2018 年 8 月 24 日，TiDB 发布 2.1 RC1 版。相比 2.1 Beta 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  修复某些情况下关联子查询去关联后结果不正确的问题 #6972 优化 Explain 输出结果 #7011#7041 优化 IndexJoin 驱动表选择策略#7019 去掉非 PREPARE 语句的 Plan Cache #7040 修复某些情况下 INSERT 语句无法正常解析执行的问题 #7068 修复某些情况下 IndexJoin 结果不正确的问题 #7150 修复某些情况下使用唯一索引不能查询到 NULL 值的问题 #7163 修复 UTF-8 编码情况下前缀索引的范围计算不正确的问题 #7194 修复某些情况下 Project 算子消除导致的结果不正确的问题 #7257 修复主键为整数类型时无法使用 USE INDEX(PRIMARY) 的问题 #7316 修复某些情况下使用关联列无法计算索引范围的问题 #7357   SQL 执行引擎  修复某些情况下夏令时时间计算结果不正确的问题 #6823 重构聚合函数框架，提升 Stream 和 Hash 聚合算子的执行效率 #6852 修复某些情况下 Hash 聚合算子不能正常退出的问题 #6982 修复 BIT_AND/BIT_OR/BIT_XOR 没有正确处理非整型数据的问题 #6994 优化 REPLACE INTO 语句的执行速度，性能提升近 10 倍 #7027 优化时间类型的内存占用，时间类型数据的内存使用降低为原来的一半 #7043 修复 UNION 语句整合有符号和无符号型整数结果时与 MySQL 不兼容的问题 #7112 修复 LPAD/RPAD/TO_BASE64/FROM_BASE64/REPEAT 因为申请过多内存导致 TiDB panic 的问题 #7171 #7266 #7409 #7431 修复 MergeJoin/IndexJoin 在处理 NULL 值时结果不正确的问题 #7255 修复某些情况下 Outer Join 结果不正确的问题 #7288 增强 Data Truncated 的报错信息，便于定位出错的数据和表中对应的字段 #7401 修复某些情况下 Decimal 计算结果不正确的问题 #7001 #7113 #7202 #7208 优化点查的查询性能 #6937 禁用 Read Committed 隔离级别，避免潜在的问题 #7211 修复某些情况下 LTRIM/RTRIM/TRIM 结果不正确的问题 #7291 修复 MaxOneRow 算子无法保证返回结果不超过 1 行的问题 #7375 拆分 range 个数过多的 Coprocessor 请求 #7454   统计信息  优化统计信息动态收集机制 #6796 解决数据频繁更新场景下 Auto Analyze 不工作的问题 #7022 减少统计信息动态更新过程中的写入冲突 #7124 优化统计信息不准确情况下的代价估算 #7175 优化 AccessPath 的代价估算策略 #7233   Server  修复加载权限信息时的 bug #6976 修复 Kill 命令对权限的检查过严问题 #6954 解决 Binary 协议中某些数值类型移除的问题 #6922 精简日志输出 #7029 处理 mismatchClusterID 问题 #7053 增加 advertise-address 配置项 #7078 增加 GrpcKeepAlive 选项 #7100 增加连接或者 Token 时间监控 #7110 优化数据解码性能 #7149 INFORMMATION_SCHEMA 中增加 PROCESSLIST 表 #7236 解决权限验证时多条规则可以命中情况下的顺序问题 #7211 将部分编码相关的系统变量默认值改为 UTF-8 #7198 慢查询日志显示更详细的信息 #7302 支持在 PD 注册 tidb-server 的相关信息并通过 HTTP API 获取 #7082   兼容性  支持 Session 变量 warning_count 和 error_count #6945 读取系统变量时增加 Scope 检查 #6958 支持 MAX_EXECUTION_TIME 语法 #7012 支持更多的 SET 语法 #7020 Set 系统变量值过程中增加合法性校验 #7117 增加 Prepare 语句中 PlaceHolder 数量的校验 #7162 支持 set character_set_results = null #7353 支持 flush status 语法 #7369 修复 SET 和 ENUM 类型在 information_schema 里的 column size #7347 支持建表语句里的 NATIONAL CHARACTER 语法 #7378 支持 LOAD DATA 语句的 CHARACTER SET 语法 #7391 修复 SET 和 ENUM 类型的 column info #7417 支持 CREATE USER 语句的 IDENTIFIED WITH 语法 #7402 修复 TIMESTAMP 类型计算过程中丢失精度的问题 #7418 支持更多 SYSTEM 变量的合法性验证 #7196 修复 CHAR_LENGTH 函数在计算 binary string 时结果不正确的问题 #7410 修复在包含 GROUP BY 的语句里 CONCAT 结果不正确的问题 #7448 修复 DECIMAL 类型 CAST 到 STRING 类型时，类型长度不准确的问题 #7451   DML  解决 Load Data 语句的稳定性 #6927 解决一些 Batch 操作情况下的内存使用问题 #7086 提升 Replace Into 语句的性能 #7027 修复写入 CURRENT_TIMESTAMP 时，精度不一致的问题 #7355   DDL  改进 DDL 判断 Schema 是否已经同步的方法, 避免某些情况下的误判 #7319 修复在 ADD INDEX 过程中的 SHOW CREATE TABLE 结果 #6993 非严格 sql-mode 模式下, text/blob/json 的默认值可以为空 #7230 修复某些特定场景下 ADD INDEX 的问题 #7142 大幅度提升添加 UNIQUE-KEY 索引操作的速度 #7132 修复 Prefix-index 在 UTF-8 字符集的场景下的截断问题 #7109 增加环境变量 tidb_ddl_reorg_priority 来控制 add-index 操作的优先级 #7116 修复 information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/21rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/21rc1/</guid>
      <description>TiDB 2.1 RC1 Release Notes 2018 年 8 月 24 日，TiDB 发布 2.1 RC1 版。相比 2.1 Beta 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  修复某些情况下关联子查询去关联后结果不正确的问题 #6972 优化 Explain 输出结果 #7011#7041 优化 IndexJoin 驱动表选择策略#7019 去掉非 PREPARE 语句的 Plan Cache #7040 修复某些情况下 INSERT 语句无法正常解析执行的问题 #7068 修复某些情况下 IndexJoin 结果不正确的问题 #7150 修复某些情况下使用唯一索引不能查询到 NULL 值的问题 #7163 修复 UTF-8 编码情况下前缀索引的范围计算不正确的问题 #7194 修复某些情况下 Project 算子消除导致的结果不正确的问题 #7257 修复主键为整数类型时无法使用 USE INDEX(PRIMARY) 的问题 #7316 修复某些情况下使用关联列无法计算索引范围的问题 #7357   SQL 执行引擎  修复某些情况下夏令时时间计算结果不正确的问题 #6823 重构聚合函数框架，提升 Stream 和 Hash 聚合算子的执行效率 #6852 修复某些情况下 Hash 聚合算子不能正常退出的问题 #6982 修复 BIT_AND/BIT_OR/BIT_XOR 没有正确处理非整型数据的问题 #6994 优化 REPLACE INTO 语句的执行速度，性能提升近 10 倍 #7027 优化时间类型的内存占用，时间类型数据的内存使用降低为原来的一半 #7043 修复 UNION 语句整合有符号和无符号型整数结果时与 MySQL 不兼容的问题 #7112 修复 LPAD/RPAD/TO_BASE64/FROM_BASE64/REPEAT 因为申请过多内存导致 TiDB panic 的问题 #7171 #7266 #7409 #7431 修复 MergeJoin/IndexJoin 在处理 NULL 值时结果不正确的问题 #7255 修复某些情况下 Outer Join 结果不正确的问题 #7288 增强 Data Truncated 的报错信息，便于定位出错的数据和表中对应的字段 #7401 修复某些情况下 Decimal 计算结果不正确的问题 #7001 #7113 #7202 #7208 优化点查的查询性能 #6937 禁用 Read Committed 隔离级别，避免潜在的问题 #7211 修复某些情况下 LTRIM/RTRIM/TRIM 结果不正确的问题 #7291 修复 MaxOneRow 算子无法保证返回结果不超过 1 行的问题 #7375 拆分 range 个数过多的 Coprocessor 请求 #7454   统计信息  优化统计信息动态收集机制 #6796 解决数据频繁更新场景下 Auto Analyze 不工作的问题 #7022 减少统计信息动态更新过程中的写入冲突 #7124 优化统计信息不准确情况下的代价估算 #7175 优化 AccessPath 的代价估算策略 #7233   Server  修复加载权限信息时的 bug #6976 修复 Kill 命令对权限的检查过严问题 #6954 解决 Binary 协议中某些数值类型移除的问题 #6922 精简日志输出 #7029 处理 mismatchClusterID 问题 #7053 增加 advertise-address 配置项 #7078 增加 GrpcKeepAlive 选项 #7100 增加连接或者 Token 时间监控 #7110 优化数据解码性能 #7149 INFORMMATION_SCHEMA 中增加 PROCESSLIST 表 #7236 解决权限验证时多条规则可以命中情况下的顺序问题 #7211 将部分编码相关的系统变量默认值改为 UTF-8 #7198 慢查询日志显示更详细的信息 #7302 支持在 PD 注册 tidb-server 的相关信息并通过 HTTP API 获取 #7082   兼容性  支持 Session 变量 warning_count 和 error_count #6945 读取系统变量时增加 Scope 检查 #6958 支持 MAX_EXECUTION_TIME 语法 #7012 支持更多的 SET 语法 #7020 Set 系统变量值过程中增加合法性校验 #7117 增加 Prepare 语句中 PlaceHolder 数量的校验 #7162 支持 set character_set_results = null #7353 支持 flush status 语法 #7369 修复 SET 和 ENUM 类型在 information_schema 里的 column size #7347 支持建表语句里的 NATIONAL CHARACTER 语法 #7378 支持 LOAD DATA 语句的 CHARACTER SET 语法 #7391 修复 SET 和 ENUM 类型的 column info #7417 支持 CREATE USER 语句的 IDENTIFIED WITH 语法 #7402 修复 TIMESTAMP 类型计算过程中丢失精度的问题 #7418 支持更多 SYSTEM 变量的合法性验证 #7196 修复 CHAR_LENGTH 函数在计算 binary string 时结果不正确的问题 #7410 修复在包含 GROUP BY 的语句里 CONCAT 结果不正确的问题 #7448 修复 DECIMAL 类型 CAST 到 STRING 类型时，类型长度不准确的问题 #7451   DML  解决 Load Data 语句的稳定性 #6927 解决一些 Batch 操作情况下的内存使用问题 #7086 提升 Replace Into 语句的性能 #7027 修复写入 CURRENT_TIMESTAMP 时，精度不一致的问题 #7355   DDL  改进 DDL 判断 Schema 是否已经同步的方法, 避免某些情况下的误判 #7319 修复在 ADD INDEX 过程中的 SHOW CREATE TABLE 结果 #6993 非严格 sql-mode 模式下, text/blob/json 的默认值可以为空 #7230 修复某些特定场景下 ADD INDEX 的问题 #7142 大幅度提升添加 UNIQUE-KEY 索引操作的速度 #7132 修复 Prefix-index 在 UTF-8 字符集的场景下的截断问题 #7109 增加环境变量 tidb_ddl_reorg_priority 来控制 add-index 操作的优先级 #7116 修复 information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/21rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/21rc1/</guid>
      <description>TiDB 2.1 RC1 Release Notes 2018 年 8 月 24 日，TiDB 发布 2.1 RC1 版。相比 2.1 Beta 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  修复某些情况下关联子查询去关联后结果不正确的问题 #6972 优化 Explain 输出结果 #7011#7041 优化 IndexJoin 驱动表选择策略#7019 去掉非 PREPARE 语句的 Plan Cache #7040 修复某些情况下 INSERT 语句无法正常解析执行的问题 #7068 修复某些情况下 IndexJoin 结果不正确的问题 #7150 修复某些情况下使用唯一索引不能查询到 NULL 值的问题 #7163 修复 UTF-8 编码情况下前缀索引的范围计算不正确的问题 #7194 修复某些情况下 Project 算子消除导致的结果不正确的问题 #7257 修复主键为整数类型时无法使用 USE INDEX(PRIMARY) 的问题 #7316 修复某些情况下使用关联列无法计算索引范围的问题 #7357   SQL 执行引擎  修复某些情况下夏令时时间计算结果不正确的问题 #6823 重构聚合函数框架，提升 Stream 和 Hash 聚合算子的执行效率 #6852 修复某些情况下 Hash 聚合算子不能正常退出的问题 #6982 修复 BIT_AND/BIT_OR/BIT_XOR 没有正确处理非整型数据的问题 #6994 优化 REPLACE INTO 语句的执行速度，性能提升近 10 倍 #7027 优化时间类型的内存占用，时间类型数据的内存使用降低为原来的一半 #7043 修复 UNION 语句整合有符号和无符号型整数结果时与 MySQL 不兼容的问题 #7112 修复 LPAD/RPAD/TO_BASE64/FROM_BASE64/REPEAT 因为申请过多内存导致 TiDB panic 的问题 #7171 #7266 #7409 #7431 修复 MergeJoin/IndexJoin 在处理 NULL 值时结果不正确的问题 #7255 修复某些情况下 Outer Join 结果不正确的问题 #7288 增强 Data Truncated 的报错信息，便于定位出错的数据和表中对应的字段 #7401 修复某些情况下 Decimal 计算结果不正确的问题 #7001 #7113 #7202 #7208 优化点查的查询性能 #6937 禁用 Read Committed 隔离级别，避免潜在的问题 #7211 修复某些情况下 LTRIM/RTRIM/TRIM 结果不正确的问题 #7291 修复 MaxOneRow 算子无法保证返回结果不超过 1 行的问题 #7375 拆分 range 个数过多的 Coprocessor 请求 #7454   统计信息  优化统计信息动态收集机制 #6796 解决数据频繁更新场景下 Auto Analyze 不工作的问题 #7022 减少统计信息动态更新过程中的写入冲突 #7124 优化统计信息不准确情况下的代价估算 #7175 优化 AccessPath 的代价估算策略 #7233   Server  修复加载权限信息时的 bug #6976 修复 Kill 命令对权限的检查过严问题 #6954 解决 Binary 协议中某些数值类型移除的问题 #6922 精简日志输出 #7029 处理 mismatchClusterID 问题 #7053 增加 advertise-address 配置项 #7078 增加 GrpcKeepAlive 选项 #7100 增加连接或者 Token 时间监控 #7110 优化数据解码性能 #7149 INFORMMATION_SCHEMA 中增加 PROCESSLIST 表 #7236 解决权限验证时多条规则可以命中情况下的顺序问题 #7211 将部分编码相关的系统变量默认值改为 UTF-8 #7198 慢查询日志显示更详细的信息 #7302 支持在 PD 注册 tidb-server 的相关信息并通过 HTTP API 获取 #7082   兼容性  支持 Session 变量 warning_count 和 error_count #6945 读取系统变量时增加 Scope 检查 #6958 支持 MAX_EXECUTION_TIME 语法 #7012 支持更多的 SET 语法 #7020 Set 系统变量值过程中增加合法性校验 #7117 增加 Prepare 语句中 PlaceHolder 数量的校验 #7162 支持 set character_set_results = null #7353 支持 flush status 语法 #7369 修复 SET 和 ENUM 类型在 information_schema 里的 column size #7347 支持建表语句里的 NATIONAL CHARACTER 语法 #7378 支持 LOAD DATA 语句的 CHARACTER SET 语法 #7391 修复 SET 和 ENUM 类型的 column info #7417 支持 CREATE USER 语句的 IDENTIFIED WITH 语法 #7402 修复 TIMESTAMP 类型计算过程中丢失精度的问题 #7418 支持更多 SYSTEM 变量的合法性验证 #7196 修复 CHAR_LENGTH 函数在计算 binary string 时结果不正确的问题 #7410 修复在包含 GROUP BY 的语句里 CONCAT 结果不正确的问题 #7448 修复 DECIMAL 类型 CAST 到 STRING 类型时，类型长度不准确的问题 #7451   DML  解决 Load Data 语句的稳定性 #6927 解决一些 Batch 操作情况下的内存使用问题 #7086 提升 Replace Into 语句的性能 #7027 修复写入 CURRENT_TIMESTAMP 时，精度不一致的问题 #7355   DDL  改进 DDL 判断 Schema 是否已经同步的方法, 避免某些情况下的误判 #7319 修复在 ADD INDEX 过程中的 SHOW CREATE TABLE 结果 #6993 非严格 sql-mode 模式下, text/blob/json 的默认值可以为空 #7230 修复某些特定场景下 ADD INDEX 的问题 #7142 大幅度提升添加 UNIQUE-KEY 索引操作的速度 #7132 修复 Prefix-index 在 UTF-8 字符集的场景下的截断问题 #7109 增加环境变量 tidb_ddl_reorg_priority 来控制 add-index 操作的优先级 #7116 修复 information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/21rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/21rc1/</guid>
      <description>TiDB 2.1 RC1 Release Notes 2018 年 8 月 24 日，TiDB 发布 2.1 RC1 版。相比 2.1 Beta 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  修复某些情况下关联子查询去关联后结果不正确的问题 #6972 优化 Explain 输出结果 #7011#7041 优化 IndexJoin 驱动表选择策略#7019 去掉非 PREPARE 语句的 Plan Cache #7040 修复某些情况下 INSERT 语句无法正常解析执行的问题 #7068 修复某些情况下 IndexJoin 结果不正确的问题 #7150 修复某些情况下使用唯一索引不能查询到 NULL 值的问题 #7163 修复 UTF-8 编码情况下前缀索引的范围计算不正确的问题 #7194 修复某些情况下 Project 算子消除导致的结果不正确的问题 #7257 修复主键为整数类型时无法使用 USE INDEX(PRIMARY) 的问题 #7316 修复某些情况下使用关联列无法计算索引范围的问题 #7357   SQL 执行引擎  修复某些情况下夏令时时间计算结果不正确的问题 #6823 重构聚合函数框架，提升 Stream 和 Hash 聚合算子的执行效率 #6852 修复某些情况下 Hash 聚合算子不能正常退出的问题 #6982 修复 BIT_AND/BIT_OR/BIT_XOR 没有正确处理非整型数据的问题 #6994 优化 REPLACE INTO 语句的执行速度，性能提升近 10 倍 #7027 优化时间类型的内存占用，时间类型数据的内存使用降低为原来的一半 #7043 修复 UNION 语句整合有符号和无符号型整数结果时与 MySQL 不兼容的问题 #7112 修复 LPAD/RPAD/TO_BASE64/FROM_BASE64/REPEAT 因为申请过多内存导致 TiDB panic 的问题 #7171 #7266 #7409 #7431 修复 MergeJoin/IndexJoin 在处理 NULL 值时结果不正确的问题 #7255 修复某些情况下 Outer Join 结果不正确的问题 #7288 增强 Data Truncated 的报错信息，便于定位出错的数据和表中对应的字段 #7401 修复某些情况下 Decimal 计算结果不正确的问题 #7001 #7113 #7202 #7208 优化点查的查询性能 #6937 禁用 Read Committed 隔离级别，避免潜在的问题 #7211 修复某些情况下 LTRIM/RTRIM/TRIM 结果不正确的问题 #7291 修复 MaxOneRow 算子无法保证返回结果不超过 1 行的问题 #7375 拆分 range 个数过多的 Coprocessor 请求 #7454   统计信息  优化统计信息动态收集机制 #6796 解决数据频繁更新场景下 Auto Analyze 不工作的问题 #7022 减少统计信息动态更新过程中的写入冲突 #7124 优化统计信息不准确情况下的代价估算 #7175 优化 AccessPath 的代价估算策略 #7233   Server  修复加载权限信息时的 bug #6976 修复 Kill 命令对权限的检查过严问题 #6954 解决 Binary 协议中某些数值类型移除的问题 #6922 精简日志输出 #7029 处理 mismatchClusterID 问题 #7053 增加 advertise-address 配置项 #7078 增加 GrpcKeepAlive 选项 #7100 增加连接或者 Token 时间监控 #7110 优化数据解码性能 #7149 INFORMMATION_SCHEMA 中增加 PROCESSLIST 表 #7236 解决权限验证时多条规则可以命中情况下的顺序问题 #7211 将部分编码相关的系统变量默认值改为 UTF-8 #7198 慢查询日志显示更详细的信息 #7302 支持在 PD 注册 tidb-server 的相关信息并通过 HTTP API 获取 #7082   兼容性  支持 Session 变量 warning_count 和 error_count #6945 读取系统变量时增加 Scope 检查 #6958 支持 MAX_EXECUTION_TIME 语法 #7012 支持更多的 SET 语法 #7020 Set 系统变量值过程中增加合法性校验 #7117 增加 Prepare 语句中 PlaceHolder 数量的校验 #7162 支持 set character_set_results = null #7353 支持 flush status 语法 #7369 修复 SET 和 ENUM 类型在 information_schema 里的 column size #7347 支持建表语句里的 NATIONAL CHARACTER 语法 #7378 支持 LOAD DATA 语句的 CHARACTER SET 语法 #7391 修复 SET 和 ENUM 类型的 column info #7417 支持 CREATE USER 语句的 IDENTIFIED WITH 语法 #7402 修复 TIMESTAMP 类型计算过程中丢失精度的问题 #7418 支持更多 SYSTEM 变量的合法性验证 #7196 修复 CHAR_LENGTH 函数在计算 binary string 时结果不正确的问题 #7410 修复在包含 GROUP BY 的语句里 CONCAT 结果不正确的问题 #7448 修复 DECIMAL 类型 CAST 到 STRING 类型时，类型长度不准确的问题 #7451   DML  解决 Load Data 语句的稳定性 #6927 解决一些 Batch 操作情况下的内存使用问题 #7086 提升 Replace Into 语句的性能 #7027 修复写入 CURRENT_TIMESTAMP 时，精度不一致的问题 #7355   DDL  改进 DDL 判断 Schema 是否已经同步的方法, 避免某些情况下的误判 #7319 修复在 ADD INDEX 过程中的 SHOW CREATE TABLE 结果 #6993 非严格 sql-mode 模式下, text/blob/json 的默认值可以为空 #7230 修复某些特定场景下 ADD INDEX 的问题 #7142 大幅度提升添加 UNIQUE-KEY 索引操作的速度 #7132 修复 Prefix-index 在 UTF-8 字符集的场景下的截断问题 #7109 增加环境变量 tidb_ddl_reorg_priority 来控制 add-index 操作的优先级 #7116 修复 information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC1 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/21rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/21rc1/</guid>
      <description>TiDB 2.1 RC1 Release Notes On August 24, 2018, TiDB 2.1 RC1 is released! Compared with TiDB 2.1 Beta, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer  Fix the issue that a wrong result is returned after the correlated subquery is decorrelated in some cases #6972 Optimize the output result of Explain #7011#7041 Optimize the choosing strategy of the outer table for IndexJoin #7019 Remove the Plan Cache of the non-PREPARE statement #7040 Fix the issue that the INSERT statement is not parsed and executed correctly in some cases #7068 Fix the issue that the IndexJoin result is not correct in some cases #7150 Fix the issue that the NULL value cannot be found using the unique index in some cases #7163 Fix the range computing issue of the prefix index in UTF-8 #7194 Fix the issue that result is not correct caused by eliminating the Project operator in some cases #7257 Fix the issue that USE INDEX(PRIMARY) cannot be used when the primary key is an integer #7316 Fix the issue that the index range cannot be computed using the correlated column in some cases #7357   SQL Execution Engine  Fix the issue that the daylight saving time is not computed correctly in some cases #6823 Refactor the aggregation function framework to improve the execution efficiency of the Stream and Hash aggregation operators #6852 Fix the issue that the Hash aggregation operator cannot exit normally in some cases #6982 Fix the issue that BIT_AND/BIT_OR/BIT_XOR does not handle the non-integer data correctly #6994 Optimize the execution speed of the REPLACE INTO statement and increase the performance nearly 10 times #7027 Optimize the memory usage of time type data and decrease the memory usage of the time type data by fifty percent #7043 Fix the issue that the returned result is mixed with signed and unsigned integers in the UNION statement is not compatible with MySQL #7112 Fix the panic issue caused by the too much memory applied by LPAD/RPAD/TO_BASE64/FROM_BASE64/REPEAT #7171 #7266 #7409 #7431 Fix the incorrect result when MergeJoin/IndexJoin handles the NULL value #7255 Fix the incorrect result of Outer Join in some cases #7288 Improve the error message of Data Truncated to facilitate locating the wrong data and the corresponding field in the table #7401 Fix the incorrect result for decimal in some cases #7001 #7113 #7202 #7208 Optimize the point select performance #6937 Prohibit the isolation level of Read Committed to avoid the underlying problem #7211 Fix the incorrect result of LTRIM/RTRIM/TRIM in some cases #7291 Fix the issue that the MaxOneRow operator cannot guarantee that the returned result does not exceed one row #7375 Divide the Coprocessor requests with too many ranges #7454   Statistics  Optimize the mechanism of statistics dynamic collection #6796 Fix the issue that Auto Analyze does not work when data is updated frequently #7022 Decrease the Write conflicts during the statistics dynamic update process #7124 Optimize the cost estimation when the statistics is incorrect #7175 Optimize the AccessPath cost estimation strategy #7233   Server  Fix the bug in loading privilege information #6976 Fix the issue that the Kill command is too strict with privilege check #6954 Fix the issue of removing some binary numeric types #6922 Shorten the output log #7029 Handle the mismatchClusterID issue #7053 Add the advertise-address configuration item #7078 Add the GrpcKeepAlive option #7100 Add the connection or Token time monitor #7110 Optimize the data decoding performance #7149 Add the PROCESSLIST table in INFORMMATION_SCHEMA #7236 Fix the order issue when multiple rules are hit in verifying the privilege #7211 Change some default values of encoding related system variables to UTF-8 #7198 Make the slow query log show more detailed information #7302 Support registering tidb-server related information in PD and obtaining this information by HTTP API #7082   Compatibility  Support Session variables warning_count and error_count #6945 Add Scope check when reading the system variables #6958 Support the MAX_EXECUTION_TIME syntax #7012 Support more statements of the SET syntax #7020 Add validity check when setting system variables #7117 Add the verification of the number of PlaceHolders in the Prepare statement #7162 Support set character_set_results = null #7353 Support the flush status syntax #7369 Fix the column size of SET and ENUM types in information_schema #7347 Support the NATIONAL CHARACTER syntax of statements for creating a table #7378 Support the CHARACTER SET syntax in the LOAD DATA statement #7391 Fix the column information of the SET and ENUM types #7417 Support the IDENTIFIED WITH syntax in the CREATE USER statement #7402 Fix the precision losing issue during TIMESTAMP computing process #7418 Support the validity verification of more SYSTEM variables #7196 Fix the incorrect result when the CHAR_LENGTH function computes the binary string #7410 Fix the incorrect CONCAT result in a statement involving GROUP BY #7448 Fix the imprecise type length issue when casting the DECIMAL type to the STRING type #7451   DML  Fix the stability issue of the Load Data statement #6927 Fix the memory usage issue when performing some Batch operations #7086 Improve the performance of the Replace Into statement #7027 Fix the inconsistent precision issue when writing CURRENT_TIMESTAMP #7355   DDL  Improve the method of DDL judging whether Schema is replicated to avoid misjudgement in some cases #7319 Fix the SHOW CREATE TABLE result in adding index process #6993 Allow the default value of text/blob/json to be NULL in non-restrict sql-mode #7230 Fix the ADD INDEX issue in some cases #7142 Increase the speed of adding UNIQUE-KEY index operation largely #7132 Fix the truncating issue of the prefix index in UTF-8 character set #7109 Add the environment variable tidb_ddl_reorg_priority to control the priority of the add-index operation #7116 Fix the display issue of AUTO-INCREMENT in information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC1 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/21rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/21rc1/</guid>
      <description>TiDB 2.1 RC1 Release Notes On August 24, 2018, TiDB 2.1 RC1 is released! Compared with TiDB 2.1 Beta, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer  Fix the issue that a wrong result is returned after the correlated subquery is decorrelated in some cases #6972 Optimize the output result of Explain #7011#7041 Optimize the choosing strategy of the outer table for IndexJoin #7019 Remove the Plan Cache of the non-PREPARE statement #7040 Fix the issue that the INSERT statement is not parsed and executed correctly in some cases #7068 Fix the issue that the IndexJoin result is not correct in some cases #7150 Fix the issue that the NULL value cannot be found using the unique index in some cases #7163 Fix the range computing issue of the prefix index in UTF-8 #7194 Fix the issue that result is not correct caused by eliminating the Project operator in some cases #7257 Fix the issue that USE INDEX(PRIMARY) cannot be used when the primary key is an integer #7316 Fix the issue that the index range cannot be computed using the correlated column in some cases #7357   SQL Execution Engine  Fix the issue that the daylight saving time is not computed correctly in some cases #6823 Refactor the aggregation function framework to improve the execution efficiency of the Stream and Hash aggregation operators #6852 Fix the issue that the Hash aggregation operator cannot exit normally in some cases #6982 Fix the issue that BIT_AND/BIT_OR/BIT_XOR does not handle the non-integer data correctly #6994 Optimize the execution speed of the REPLACE INTO statement and increase the performance nearly 10 times #7027 Optimize the memory usage of time type data and decrease the memory usage of the time type data by fifty percent #7043 Fix the issue that the returned result is mixed with signed and unsigned integers in the UNION statement is not compatible with MySQL #7112 Fix the panic issue caused by the too much memory applied by LPAD/RPAD/TO_BASE64/FROM_BASE64/REPEAT #7171 #7266 #7409 #7431 Fix the incorrect result when MergeJoin/IndexJoin handles the NULL value #7255 Fix the incorrect result of Outer Join in some cases #7288 Improve the error message of Data Truncated to facilitate locating the wrong data and the corresponding field in the table #7401 Fix the incorrect result for decimal in some cases #7001 #7113 #7202 #7208 Optimize the point select performance #6937 Prohibit the isolation level of Read Committed to avoid the underlying problem #7211 Fix the incorrect result of LTRIM/RTRIM/TRIM in some cases #7291 Fix the issue that the MaxOneRow operator cannot guarantee that the returned result does not exceed one row #7375 Divide the Coprocessor requests with too many ranges #7454   Statistics  Optimize the mechanism of statistics dynamic collection #6796 Fix the issue that Auto Analyze does not work when data is updated frequently #7022 Decrease the Write conflicts during the statistics dynamic update process #7124 Optimize the cost estimation when the statistics is incorrect #7175 Optimize the AccessPath cost estimation strategy #7233   Server  Fix the bug in loading privilege information #6976 Fix the issue that the Kill command is too strict with privilege check #6954 Fix the issue of removing some binary numeric types #6922 Shorten the output log #7029 Handle the mismatchClusterID issue #7053 Add the advertise-address configuration item #7078 Add the GrpcKeepAlive option #7100 Add the connection or Token time monitor #7110 Optimize the data decoding performance #7149 Add the PROCESSLIST table in INFORMMATION_SCHEMA #7236 Fix the order issue when multiple rules are hit in verifying the privilege #7211 Change some default values of encoding related system variables to UTF-8 #7198 Make the slow query log show more detailed information #7302 Support registering tidb-server related information in PD and obtaining this information by HTTP API #7082   Compatibility  Support Session variables warning_count and error_count #6945 Add Scope check when reading the system variables #6958 Support the MAX_EXECUTION_TIME syntax #7012 Support more statements of the SET syntax #7020 Add validity check when setting system variables #7117 Add the verification of the number of PlaceHolders in the Prepare statement #7162 Support set character_set_results = null #7353 Support the flush status syntax #7369 Fix the column size of SET and ENUM types in information_schema #7347 Support the NATIONAL CHARACTER syntax of statements for creating a table #7378 Support the CHARACTER SET syntax in the LOAD DATA statement #7391 Fix the column information of the SET and ENUM types #7417 Support the IDENTIFIED WITH syntax in the CREATE USER statement #7402 Fix the precision losing issue during TIMESTAMP computing process #7418 Support the validity verification of more SYSTEM variables #7196 Fix the incorrect result when the CHAR_LENGTH function computes the binary string #7410 Fix the incorrect CONCAT result in a statement involving GROUP BY #7448 Fix the imprecise type length issue when casting the DECIMAL type to the STRING type #7451   DML  Fix the stability issue of the Load Data statement #6927 Fix the memory usage issue when performing some Batch operations #7086 Improve the performance of the Replace Into statement #7027 Fix the inconsistent precision issue when writing CURRENT_TIMESTAMP #7355   DDL  Improve the method of DDL judging whether Schema is replicated to avoid misjudgement in some cases #7319 Fix the SHOW CREATE TABLE result in adding index process #6993 Allow the default value of text/blob/json to be NULL in non-restrict sql-mode #7230 Fix the ADD INDEX issue in some cases #7142 Increase the speed of adding UNIQUE-KEY index operation largely #7132 Fix the truncating issue of the prefix index in UTF-8 character set #7109 Add the environment variable tidb_ddl_reorg_priority to control the priority of the add-index operation #7116 Fix the display issue of AUTO-INCREMENT in information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC1 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/21rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/21rc1/</guid>
      <description>TiDB 2.1 RC1 Release Notes On August 24, 2018, TiDB 2.1 RC1 is released! Compared with TiDB 2.1 Beta, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer  Fix the issue that a wrong result is returned after the correlated subquery is decorrelated in some cases #6972 Optimize the output result of Explain #7011#7041 Optimize the choosing strategy of the outer table for IndexJoin #7019 Remove the Plan Cache of the non-PREPARE statement #7040 Fix the issue that the INSERT statement is not parsed and executed correctly in some cases #7068 Fix the issue that the IndexJoin result is not correct in some cases #7150 Fix the issue that the NULL value cannot be found using the unique index in some cases #7163 Fix the range computing issue of the prefix index in UTF-8 #7194 Fix the issue that result is not correct caused by eliminating the Project operator in some cases #7257 Fix the issue that USE INDEX(PRIMARY) cannot be used when the primary key is an integer #7316 Fix the issue that the index range cannot be computed using the correlated column in some cases #7357   SQL Execution Engine  Fix the issue that the daylight saving time is not computed correctly in some cases #6823 Refactor the aggregation function framework to improve the execution efficiency of the Stream and Hash aggregation operators #6852 Fix the issue that the Hash aggregation operator cannot exit normally in some cases #6982 Fix the issue that BIT_AND/BIT_OR/BIT_XOR does not handle the non-integer data correctly #6994 Optimize the execution speed of the REPLACE INTO statement and increase the performance nearly 10 times #7027 Optimize the memory usage of time type data and decrease the memory usage of the time type data by fifty percent #7043 Fix the issue that the returned result is mixed with signed and unsigned integers in the UNION statement is not compatible with MySQL #7112 Fix the panic issue caused by the too much memory applied by LPAD/RPAD/TO_BASE64/FROM_BASE64/REPEAT #7171 #7266 #7409 #7431 Fix the incorrect result when MergeJoin/IndexJoin handles the NULL value #7255 Fix the incorrect result of Outer Join in some cases #7288 Improve the error message of Data Truncated to facilitate locating the wrong data and the corresponding field in the table #7401 Fix the incorrect result for decimal in some cases #7001 #7113 #7202 #7208 Optimize the point select performance #6937 Prohibit the isolation level of Read Committed to avoid the underlying problem #7211 Fix the incorrect result of LTRIM/RTRIM/TRIM in some cases #7291 Fix the issue that the MaxOneRow operator cannot guarantee that the returned result does not exceed one row #7375 Divide the Coprocessor requests with too many ranges #7454   Statistics  Optimize the mechanism of statistics dynamic collection #6796 Fix the issue that Auto Analyze does not work when data is updated frequently #7022 Decrease the Write conflicts during the statistics dynamic update process #7124 Optimize the cost estimation when the statistics is incorrect #7175 Optimize the AccessPath cost estimation strategy #7233   Server  Fix the bug in loading privilege information #6976 Fix the issue that the Kill command is too strict with privilege check #6954 Fix the issue of removing some binary numeric types #6922 Shorten the output log #7029 Handle the mismatchClusterID issue #7053 Add the advertise-address configuration item #7078 Add the GrpcKeepAlive option #7100 Add the connection or Token time monitor #7110 Optimize the data decoding performance #7149 Add the PROCESSLIST table in INFORMMATION_SCHEMA #7236 Fix the order issue when multiple rules are hit in verifying the privilege #7211 Change some default values of encoding related system variables to UTF-8 #7198 Make the slow query log show more detailed information #7302 Support registering tidb-server related information in PD and obtaining this information by HTTP API #7082   Compatibility  Support Session variables warning_count and error_count #6945 Add Scope check when reading the system variables #6958 Support the MAX_EXECUTION_TIME syntax #7012 Support more statements of the SET syntax #7020 Add validity check when setting system variables #7117 Add the verification of the number of PlaceHolders in the Prepare statement #7162 Support set character_set_results = null #7353 Support the flush status syntax #7369 Fix the column size of SET and ENUM types in information_schema #7347 Support the NATIONAL CHARACTER syntax of statements for creating a table #7378 Support the CHARACTER SET syntax in the LOAD DATA statement #7391 Fix the column information of the SET and ENUM types #7417 Support the IDENTIFIED WITH syntax in the CREATE USER statement #7402 Fix the precision losing issue during TIMESTAMP computing process #7418 Support the validity verification of more SYSTEM variables #7196 Fix the incorrect result when the CHAR_LENGTH function computes the binary string #7410 Fix the incorrect CONCAT result in a statement involving GROUP BY #7448 Fix the imprecise type length issue when casting the DECIMAL type to the STRING type #7451   DML  Fix the stability issue of the Load Data statement #6927 Fix the memory usage issue when performing some Batch operations #7086 Improve the performance of the Replace Into statement #7027 Fix the inconsistent precision issue when writing CURRENT_TIMESTAMP #7355   DDL  Improve the method of DDL judging whether Schema is replicated to avoid misjudgement in some cases #7319 Fix the SHOW CREATE TABLE result in adding index process #6993 Allow the default value of text/blob/json to be NULL in non-restrict sql-mode #7230 Fix the ADD INDEX issue in some cases #7142 Increase the speed of adding UNIQUE-KEY index operation largely #7132 Fix the truncating issue of the prefix index in UTF-8 character set #7109 Add the environment variable tidb_ddl_reorg_priority to control the priority of the add-index operation #7116 Fix the display issue of AUTO-INCREMENT in information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC1 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/21rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/21rc1/</guid>
      <description>TiDB 2.1 RC1 Release Notes On August 24, 2018, TiDB 2.1 RC1 is released! Compared with TiDB 2.1 Beta, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer  Fix the issue that a wrong result is returned after the correlated subquery is decorrelated in some cases #6972 Optimize the output result of Explain #7011#7041 Optimize the choosing strategy of the outer table for IndexJoin #7019 Remove the Plan Cache of the non-PREPARE statement #7040 Fix the issue that the INSERT statement is not parsed and executed correctly in some cases #7068 Fix the issue that the IndexJoin result is not correct in some cases #7150 Fix the issue that the NULL value cannot be found using the unique index in some cases #7163 Fix the range computing issue of the prefix index in UTF-8 #7194 Fix the issue that result is not correct caused by eliminating the Project operator in some cases #7257 Fix the issue that USE INDEX(PRIMARY) cannot be used when the primary key is an integer #7316 Fix the issue that the index range cannot be computed using the correlated column in some cases #7357   SQL Execution Engine  Fix the issue that the daylight saving time is not computed correctly in some cases #6823 Refactor the aggregation function framework to improve the execution efficiency of the Stream and Hash aggregation operators #6852 Fix the issue that the Hash aggregation operator cannot exit normally in some cases #6982 Fix the issue that BIT_AND/BIT_OR/BIT_XOR does not handle the non-integer data correctly #6994 Optimize the execution speed of the REPLACE INTO statement and increase the performance nearly 10 times #7027 Optimize the memory usage of time type data and decrease the memory usage of the time type data by fifty percent #7043 Fix the issue that the returned result is mixed with signed and unsigned integers in the UNION statement is not compatible with MySQL #7112 Fix the panic issue caused by the too much memory applied by LPAD/RPAD/TO_BASE64/FROM_BASE64/REPEAT #7171 #7266 #7409 #7431 Fix the incorrect result when MergeJoin/IndexJoin handles the NULL value #7255 Fix the incorrect result of Outer Join in some cases #7288 Improve the error message of Data Truncated to facilitate locating the wrong data and the corresponding field in the table #7401 Fix the incorrect result for decimal in some cases #7001 #7113 #7202 #7208 Optimize the point select performance #6937 Prohibit the isolation level of Read Committed to avoid the underlying problem #7211 Fix the incorrect result of LTRIM/RTRIM/TRIM in some cases #7291 Fix the issue that the MaxOneRow operator cannot guarantee that the returned result does not exceed one row #7375 Divide the Coprocessor requests with too many ranges #7454   Statistics  Optimize the mechanism of statistics dynamic collection #6796 Fix the issue that Auto Analyze does not work when data is updated frequently #7022 Decrease the Write conflicts during the statistics dynamic update process #7124 Optimize the cost estimation when the statistics is incorrect #7175 Optimize the AccessPath cost estimation strategy #7233   Server  Fix the bug in loading privilege information #6976 Fix the issue that the Kill command is too strict with privilege check #6954 Fix the issue of removing some binary numeric types #6922 Shorten the output log #7029 Handle the mismatchClusterID issue #7053 Add the advertise-address configuration item #7078 Add the GrpcKeepAlive option #7100 Add the connection or Token time monitor #7110 Optimize the data decoding performance #7149 Add the PROCESSLIST table in INFORMMATION_SCHEMA #7236 Fix the order issue when multiple rules are hit in verifying the privilege #7211 Change some default values of encoding related system variables to UTF-8 #7198 Make the slow query log show more detailed information #7302 Support registering tidb-server related information in PD and obtaining this information by HTTP API #7082   Compatibility  Support Session variables warning_count and error_count #6945 Add Scope check when reading the system variables #6958 Support the MAX_EXECUTION_TIME syntax #7012 Support more statements of the SET syntax #7020 Add validity check when setting system variables #7117 Add the verification of the number of PlaceHolders in the Prepare statement #7162 Support set character_set_results = null #7353 Support the flush status syntax #7369 Fix the column size of SET and ENUM types in information_schema #7347 Support the NATIONAL CHARACTER syntax of statements for creating a table #7378 Support the CHARACTER SET syntax in the LOAD DATA statement #7391 Fix the column information of the SET and ENUM types #7417 Support the IDENTIFIED WITH syntax in the CREATE USER statement #7402 Fix the precision losing issue during TIMESTAMP computing process #7418 Support the validity verification of more SYSTEM variables #7196 Fix the incorrect result when the CHAR_LENGTH function computes the binary string #7410 Fix the incorrect CONCAT result in a statement involving GROUP BY #7448 Fix the imprecise type length issue when casting the DECIMAL type to the STRING type #7451   DML  Fix the stability issue of the Load Data statement #6927 Fix the memory usage issue when performing some Batch operations #7086 Improve the performance of the Replace Into statement #7027 Fix the inconsistent precision issue when writing CURRENT_TIMESTAMP #7355   DDL  Improve the method of DDL judging whether Schema is replicated to avoid misjudgement in some cases #7319 Fix the SHOW CREATE TABLE result in adding index process #6993 Allow the default value of text/blob/json to be NULL in non-restrict sql-mode #7230 Fix the ADD INDEX issue in some cases #7142 Increase the speed of adding UNIQUE-KEY index operation largely #7132 Fix the truncating issue of the prefix index in UTF-8 character set #7109 Add the environment variable tidb_ddl_reorg_priority to control the priority of the add-index operation #7116 Fix the display issue of AUTO-INCREMENT in information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/21rc2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/21rc2/</guid>
      <description>TiDB 2.1 RC2 Release Notes 2018 年 9 月 14 日，TiDB 发布 2.1 RC2 版。相比 2.1 RC1 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  新版 Planner 设计方案 #7543 提升常量传播优化规则 #7276 增强 Range 的计算逻辑使其能够同时处理多个 IN 或者等值条件 #7577 修复当 Range 为空时，TableScan 的估算结果不正确的问题 #7583 为 UPDATE 语句支持 PointGet 算子 #7586 修复 FirstRow 聚合函数某些情况下在执行过程中 panic 的问题 #7624   SQL 执行引擎  解决 HashJoin 算子在遇到错误的情况下潜在的 DataRace 问题 #7554 HashJoin 算子同时读取内表数据和构建 Hash 表 #7544 优化 Hash 聚合算子性能 #7541 优化 Join 算子性能 #7493、#7433 修复 UPDATE JOIN 在 Join 顺序改变后结果不正确的问题 #7571 提升 Chunk 迭代器的性能 #7585   统计信息  解决重复自动 Analyze 统计信息的问题 #7550 解决统计信息无变化时更新统计信息遇到错误的问题 #7530 Analyze 执行时使用低优先级以及 RC 隔离级别 #7496 支持只在一天中的某个时间段开启统计信息自动更新的功能 #7570 修复统计信息写日志时发生的 panic #7588 支持通过 ANALYZE TABLE WITH BUCKETS 语句配置直方图中桶的个数 #7619 修复更新空的直方图时 panic 的问题 #7640 使用统计信息更新 information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/21rc2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/21rc2/</guid>
      <description>TiDB 2.1 RC2 Release Notes 2018 年 9 月 14 日，TiDB 发布 2.1 RC2 版。相比 2.1 RC1 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  新版 Planner 设计方案 #7543 提升常量传播优化规则 #7276 增强 Range 的计算逻辑使其能够同时处理多个 IN 或者等值条件 #7577 修复当 Range 为空时，TableScan 的估算结果不正确的问题 #7583 为 UPDATE 语句支持 PointGet 算子 #7586 修复 FirstRow 聚合函数某些情况下在执行过程中 panic 的问题 #7624   SQL 执行引擎  解决 HashJoin 算子在遇到错误的情况下潜在的 DataRace 问题 #7554 HashJoin 算子同时读取内表数据和构建 Hash 表 #7544 优化 Hash 聚合算子性能 #7541 优化 Join 算子性能 #7493、#7433 修复 UPDATE JOIN 在 Join 顺序改变后结果不正确的问题 #7571 提升 Chunk 迭代器的性能 #7585   统计信息  解决重复自动 Analyze 统计信息的问题 #7550 解决统计信息无变化时更新统计信息遇到错误的问题 #7530 Analyze 执行时使用低优先级以及 RC 隔离级别 #7496 支持只在一天中的某个时间段开启统计信息自动更新的功能 #7570 修复统计信息写日志时发生的 panic #7588 支持通过 ANALYZE TABLE WITH BUCKETS 语句配置直方图中桶的个数 #7619 修复更新空的直方图时 panic 的问题 #7640 使用统计信息更新 information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/21rc2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/21rc2/</guid>
      <description>TiDB 2.1 RC2 Release Notes 2018 年 9 月 14 日，TiDB 发布 2.1 RC2 版。相比 2.1 RC1 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  新版 Planner 设计方案 #7543 提升常量传播优化规则 #7276 增强 Range 的计算逻辑使其能够同时处理多个 IN 或者等值条件 #7577 修复当 Range 为空时，TableScan 的估算结果不正确的问题 #7583 为 UPDATE 语句支持 PointGet 算子 #7586 修复 FirstRow 聚合函数某些情况下在执行过程中 panic 的问题 #7624   SQL 执行引擎  解决 HashJoin 算子在遇到错误的情况下潜在的 DataRace 问题 #7554 HashJoin 算子同时读取内表数据和构建 Hash 表 #7544 优化 Hash 聚合算子性能 #7541 优化 Join 算子性能 #7493、#7433 修复 UPDATE JOIN 在 Join 顺序改变后结果不正确的问题 #7571 提升 Chunk 迭代器的性能 #7585   统计信息  解决重复自动 Analyze 统计信息的问题 #7550 解决统计信息无变化时更新统计信息遇到错误的问题 #7530 Analyze 执行时使用低优先级以及 RC 隔离级别 #7496 支持只在一天中的某个时间段开启统计信息自动更新的功能 #7570 修复统计信息写日志时发生的 panic #7588 支持通过 ANALYZE TABLE WITH BUCKETS 语句配置直方图中桶的个数 #7619 修复更新空的直方图时 panic 的问题 #7640 使用统计信息更新 information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/21rc2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/21rc2/</guid>
      <description>TiDB 2.1 RC2 Release Notes 2018 年 9 月 14 日，TiDB 发布 2.1 RC2 版。相比 2.1 RC1 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  新版 Planner 设计方案 #7543 提升常量传播优化规则 #7276 增强 Range 的计算逻辑使其能够同时处理多个 IN 或者等值条件 #7577 修复当 Range 为空时，TableScan 的估算结果不正确的问题 #7583 为 UPDATE 语句支持 PointGet 算子 #7586 修复 FirstRow 聚合函数某些情况下在执行过程中 panic 的问题 #7624   SQL 执行引擎  解决 HashJoin 算子在遇到错误的情况下潜在的 DataRace 问题 #7554 HashJoin 算子同时读取内表数据和构建 Hash 表 #7544 优化 Hash 聚合算子性能 #7541 优化 Join 算子性能 #7493、#7433 修复 UPDATE JOIN 在 Join 顺序改变后结果不正确的问题 #7571 提升 Chunk 迭代器的性能 #7585   统计信息  解决重复自动 Analyze 统计信息的问题 #7550 解决统计信息无变化时更新统计信息遇到错误的问题 #7530 Analyze 执行时使用低优先级以及 RC 隔离级别 #7496 支持只在一天中的某个时间段开启统计信息自动更新的功能 #7570 修复统计信息写日志时发生的 panic #7588 支持通过 ANALYZE TABLE WITH BUCKETS 语句配置直方图中桶的个数 #7619 修复更新空的直方图时 panic 的问题 #7640 使用统计信息更新 information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC2 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/21rc2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/21rc2/</guid>
      <description>TiDB 2.1 RC2 Release Notes On September 14, 2018, TiDB 2.1 RC2 is released. Compared with TiDB 2.1 RC1, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer  Put forward a proposal of the next generation Planner #7543 Improve the optimization rules of constant propagation #7276 Enhance the computing logic of Range to enable it to handle multiple IN or EQUAL conditions simultaneously #7577 Fix the issue that the estimation result of TableScan is incorrect when Range is empty #7583 Support the PointGet operator for the UPDATE statement #7586 Fix the panic issue during the process of executing the FirstRow aggregate function in some conditions #7624   SQL Execution Engine  Fix the potential DataRace issue when the HashJoin operator encounters an error #7554 Make the HashJoin operator read the inner table and build the hash table simultaneously #7544 Optimize the performance of Hash aggregate operators #7541 Optimize the performance of Join operators #7493, #7433 Fix the issue that the result of UPDATE JOIN is incorrect when the Join order is changed #7571 Improve the performance of Chunk’s iterator #7585   Statistics  Fix the issue that the auto Analyze work repeatedly analyzes the statistics #7550 Fix the statistics update error that occurs when there is no statistics change #7530 Use the RC isolation level and low priority when building Analyze requests #7496 Support enabling statistics auto-analyze on certain period of a day #7570 Fix the panic issue when logging the statistics information #7588 Support configuring the number of buckets in the histogram using the ANALYZE TABLE WITH BUCKETS statement #7619 Fix the panic issue when updating an empty histogram #7640 Update information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC2 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/21rc2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/21rc2/</guid>
      <description>TiDB 2.1 RC2 Release Notes On September 14, 2018, TiDB 2.1 RC2 is released. Compared with TiDB 2.1 RC1, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer  Put forward a proposal of the next generation Planner #7543 Improve the optimization rules of constant propagation #7276 Enhance the computing logic of Range to enable it to handle multiple IN or EQUAL conditions simultaneously #7577 Fix the issue that the estimation result of TableScan is incorrect when Range is empty #7583 Support the PointGet operator for the UPDATE statement #7586 Fix the panic issue during the process of executing the FirstRow aggregate function in some conditions #7624   SQL Execution Engine  Fix the potential DataRace issue when the HashJoin operator encounters an error #7554 Make the HashJoin operator read the inner table and build the hash table simultaneously #7544 Optimize the performance of Hash aggregate operators #7541 Optimize the performance of Join operators #7493, #7433 Fix the issue that the result of UPDATE JOIN is incorrect when the Join order is changed #7571 Improve the performance of Chunk’s iterator #7585   Statistics  Fix the issue that the auto Analyze work repeatedly analyzes the statistics #7550 Fix the statistics update error that occurs when there is no statistics change #7530 Use the RC isolation level and low priority when building Analyze requests #7496 Support enabling statistics auto-analyze on certain period of a day #7570 Fix the panic issue when logging the statistics information #7588 Support configuring the number of buckets in the histogram using the ANALYZE TABLE WITH BUCKETS statement #7619 Fix the panic issue when updating an empty histogram #7640 Update information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC2 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/21rc2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/21rc2/</guid>
      <description>TiDB 2.1 RC2 Release Notes On September 14, 2018, TiDB 2.1 RC2 is released. Compared with TiDB 2.1 RC1, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer  Put forward a proposal of the next generation Planner #7543 Improve the optimization rules of constant propagation #7276 Enhance the computing logic of Range to enable it to handle multiple IN or EQUAL conditions simultaneously #7577 Fix the issue that the estimation result of TableScan is incorrect when Range is empty #7583 Support the PointGet operator for the UPDATE statement #7586 Fix the panic issue during the process of executing the FirstRow aggregate function in some conditions #7624   SQL Execution Engine  Fix the potential DataRace issue when the HashJoin operator encounters an error #7554 Make the HashJoin operator read the inner table and build the hash table simultaneously #7544 Optimize the performance of Hash aggregate operators #7541 Optimize the performance of Join operators #7493, #7433 Fix the issue that the result of UPDATE JOIN is incorrect when the Join order is changed #7571 Improve the performance of Chunk’s iterator #7585   Statistics  Fix the issue that the auto Analyze work repeatedly analyzes the statistics #7550 Fix the statistics update error that occurs when there is no statistics change #7530 Use the RC isolation level and low priority when building Analyze requests #7496 Support enabling statistics auto-analyze on certain period of a day #7570 Fix the panic issue when logging the statistics information #7588 Support configuring the number of buckets in the histogram using the ANALYZE TABLE WITH BUCKETS statement #7619 Fix the panic issue when updating an empty histogram #7640 Update information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC2 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/21rc2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/21rc2/</guid>
      <description>TiDB 2.1 RC2 Release Notes On September 14, 2018, TiDB 2.1 RC2 is released. Compared with TiDB 2.1 RC1, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer  Put forward a proposal of the next generation Planner #7543 Improve the optimization rules of constant propagation #7276 Enhance the computing logic of Range to enable it to handle multiple IN or EQUAL conditions simultaneously #7577 Fix the issue that the estimation result of TableScan is incorrect when Range is empty #7583 Support the PointGet operator for the UPDATE statement #7586 Fix the panic issue during the process of executing the FirstRow aggregate function in some conditions #7624   SQL Execution Engine  Fix the potential DataRace issue when the HashJoin operator encounters an error #7554 Make the HashJoin operator read the inner table and build the hash table simultaneously #7544 Optimize the performance of Hash aggregate operators #7541 Optimize the performance of Join operators #7493, #7433 Fix the issue that the result of UPDATE JOIN is incorrect when the Join order is changed #7571 Improve the performance of Chunk’s iterator #7585   Statistics  Fix the issue that the auto Analyze work repeatedly analyzes the statistics #7550 Fix the statistics update error that occurs when there is no statistics change #7530 Use the RC isolation level and low priority when building Analyze requests #7496 Support enabling statistics auto-analyze on certain period of a day #7570 Fix the panic issue when logging the statistics information #7588 Support configuring the number of buckets in the histogram using the ANALYZE TABLE WITH BUCKETS statement #7619 Fix the panic issue when updating an empty histogram #7640 Update information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/21rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/21rc3/</guid>
      <description>TiDB 2.1 RC3 Release Notes 2018 年 9 月 29 日，TiDB 发布 2.1 RC3 版。相比 2.1 RC2 版本，该版本对系统稳定性、兼容性、优化器以及执行引擎做了很多改进。
TiDB  SQL 优化器  修复语句内包含内嵌的 LEFT OUTER JOIN 时，结果不正确的问题 #7689 增强 JOIN 语句上的 predicate pushdown 优化规则 #7645 修复 UnionScan 算子的 predicate pushdown 优化规则 #7695 修复 Union 算子的 unique key 属性设置不正确的问题 #7680 增强常量折叠的优化规则 #7696 把常量传播后的 filter 是 null 的 data source 优化成 table dual #7756   SQL 执行引擎  优化事务内读请求的性能 #7717 优化部分执行器 Chunk 内存分配的开销 #7540 修复点查全部为 NULL 的列导致数组越界的问题 #7790   Server  修复配置文件里内存配额选项不生效的问题 #7729 添加 tidb_force_priority 系统变量用来整体设置语句执行的优先级 #7694 支持使用 admin show slow 语句来获取 SLOW QUERY LOG #7785   兼容性  修复 information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/21rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/21rc3/</guid>
      <description>TiDB 2.1 RC3 Release Notes 2018 年 9 月 29 日，TiDB 发布 2.1 RC3 版。相比 2.1 RC2 版本，该版本对系统稳定性、兼容性、优化器以及执行引擎做了很多改进。
TiDB  SQL 优化器  修复语句内包含内嵌的 LEFT OUTER JOIN 时，结果不正确的问题 #7689 增强 JOIN 语句上的 predicate pushdown 优化规则 #7645 修复 UnionScan 算子的 predicate pushdown 优化规则 #7695 修复 Union 算子的 unique key 属性设置不正确的问题 #7680 增强常量折叠的优化规则 #7696 把常量传播后的 filter 是 null 的 data source 优化成 table dual #7756   SQL 执行引擎  优化事务内读请求的性能 #7717 优化部分执行器 Chunk 内存分配的开销 #7540 修复点查全部为 NULL 的列导致数组越界的问题 #7790   Server  修复配置文件里内存配额选项不生效的问题 #7729 添加 tidb_force_priority 系统变量用来整体设置语句执行的优先级 #7694 支持使用 admin show slow 语句来获取 SLOW QUERY LOG #7785   兼容性  修复 information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/21rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/21rc3/</guid>
      <description>TiDB 2.1 RC3 Release Notes 2018 年 9 月 29 日，TiDB 发布 2.1 RC3 版。相比 2.1 RC2 版本，该版本对系统稳定性、兼容性、优化器以及执行引擎做了很多改进。
TiDB  SQL 优化器  修复语句内包含内嵌的 LEFT OUTER JOIN 时，结果不正确的问题 #7689 增强 JOIN 语句上的 predicate pushdown 优化规则 #7645 修复 UnionScan 算子的 predicate pushdown 优化规则 #7695 修复 Union 算子的 unique key 属性设置不正确的问题 #7680 增强常量折叠的优化规则 #7696 把常量传播后的 filter 是 null 的 data source 优化成 table dual #7756   SQL 执行引擎  优化事务内读请求的性能 #7717 优化部分执行器 Chunk 内存分配的开销 #7540 修复点查全部为 NULL 的列导致数组越界的问题 #7790   Server  修复配置文件里内存配额选项不生效的问题 #7729 添加 tidb_force_priority 系统变量用来整体设置语句执行的优先级 #7694 支持使用 admin show slow 语句来获取 SLOW QUERY LOG #7785   兼容性  修复 information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/21rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/21rc3/</guid>
      <description>TiDB 2.1 RC3 Release Notes 2018 年 9 月 29 日，TiDB 发布 2.1 RC3 版。相比 2.1 RC2 版本，该版本对系统稳定性、兼容性、优化器以及执行引擎做了很多改进。
TiDB  SQL 优化器  修复语句内包含内嵌的 LEFT OUTER JOIN 时，结果不正确的问题 #7689 增强 JOIN 语句上的 predicate pushdown 优化规则 #7645 修复 UnionScan 算子的 predicate pushdown 优化规则 #7695 修复 Union 算子的 unique key 属性设置不正确的问题 #7680 增强常量折叠的优化规则 #7696 把常量传播后的 filter 是 null 的 data source 优化成 table dual #7756   SQL 执行引擎  优化事务内读请求的性能 #7717 优化部分执行器 Chunk 内存分配的开销 #7540 修复点查全部为 NULL 的列导致数组越界的问题 #7790   Server  修复配置文件里内存配额选项不生效的问题 #7729 添加 tidb_force_priority 系统变量用来整体设置语句执行的优先级 #7694 支持使用 admin show slow 语句来获取 SLOW QUERY LOG #7785   兼容性  修复 information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC3 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/21rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/21rc3/</guid>
      <description>TiDB 2.1 RC3 Release Notes On September 29, 2018, TiDB 2.1 RC3 is released. Compared with TiDB 2.1 RC2, this release has great improvement in stability, compatibility, SQL optimizer, and execution engine.
TiDB  SQL Optimizer  Fix the incorrect result issue when a statement contains embedded LEFT OUTER JOIN #7689 Enhance the optimization rule of predicate pushdown on the JOIN statement #7645 Fix the optimization rule of predicate pushdown for the UnionScan operator #7695 Fix the issue that the unique key property of the Union operator is not correctly set #7680 Enhance the optimization rule of constant folding #7696 Optimize the data source in which the filter is null after propagation to table dual #7756   SQL Execution Engine  Optimize the performance of read requests in a transaction #7717 Optimize the cost of allocating Chunk memory in some executors #7540 Fix the &amp;ldquo;index out of range&amp;rdquo; panic caused by the columns where point queries get all NULL values #7790   Server  Fix the issue that the memory quota in the configuration file does not take effect #7729 Add the tidb_force_priority system variable to set the execution priority for each statement #7694 Support using the admin show slow statement to obtain the slow query log #7785   Compatibility  Fix the issue that the result of charset/collation is incorrect in information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC3 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/21rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/21rc3/</guid>
      <description>TiDB 2.1 RC3 Release Notes On September 29, 2018, TiDB 2.1 RC3 is released. Compared with TiDB 2.1 RC2, this release has great improvement in stability, compatibility, SQL optimizer, and execution engine.
TiDB  SQL Optimizer  Fix the incorrect result issue when a statement contains embedded LEFT OUTER JOIN #7689 Enhance the optimization rule of predicate pushdown on the JOIN statement #7645 Fix the optimization rule of predicate pushdown for the UnionScan operator #7695 Fix the issue that the unique key property of the Union operator is not correctly set #7680 Enhance the optimization rule of constant folding #7696 Optimize the data source in which the filter is null after propagation to table dual #7756   SQL Execution Engine  Optimize the performance of read requests in a transaction #7717 Optimize the cost of allocating Chunk memory in some executors #7540 Fix the &amp;ldquo;index out of range&amp;rdquo; panic caused by the columns where point queries get all NULL values #7790   Server  Fix the issue that the memory quota in the configuration file does not take effect #7729 Add the tidb_force_priority system variable to set the execution priority for each statement #7694 Support using the admin show slow statement to obtain the slow query log #7785   Compatibility  Fix the issue that the result of charset/collation is incorrect in information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC3 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/21rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/21rc3/</guid>
      <description>TiDB 2.1 RC3 Release Notes On September 29, 2018, TiDB 2.1 RC3 is released. Compared with TiDB 2.1 RC2, this release has great improvement in stability, compatibility, SQL optimizer, and execution engine.
TiDB  SQL Optimizer  Fix the incorrect result issue when a statement contains embedded LEFT OUTER JOIN #7689 Enhance the optimization rule of predicate pushdown on the JOIN statement #7645 Fix the optimization rule of predicate pushdown for the UnionScan operator #7695 Fix the issue that the unique key property of the Union operator is not correctly set #7680 Enhance the optimization rule of constant folding #7696 Optimize the data source in which the filter is null after propagation to table dual #7756   SQL Execution Engine  Optimize the performance of read requests in a transaction #7717 Optimize the cost of allocating Chunk memory in some executors #7540 Fix the &amp;ldquo;index out of range&amp;rdquo; panic caused by the columns where point queries get all NULL values #7790   Server  Fix the issue that the memory quota in the configuration file does not take effect #7729 Add the tidb_force_priority system variable to set the execution priority for each statement #7694 Support using the admin show slow statement to obtain the slow query log #7785   Compatibility  Fix the issue that the result of charset/collation is incorrect in information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC3 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/21rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/21rc3/</guid>
      <description>TiDB 2.1 RC3 Release Notes On September 29, 2018, TiDB 2.1 RC3 is released. Compared with TiDB 2.1 RC2, this release has great improvement in stability, compatibility, SQL optimizer, and execution engine.
TiDB  SQL Optimizer  Fix the incorrect result issue when a statement contains embedded LEFT OUTER JOIN #7689 Enhance the optimization rule of predicate pushdown on the JOIN statement #7645 Fix the optimization rule of predicate pushdown for the UnionScan operator #7695 Fix the issue that the unique key property of the Union operator is not correctly set #7680 Enhance the optimization rule of constant folding #7696 Optimize the data source in which the filter is null after propagation to table dual #7756   SQL Execution Engine  Optimize the performance of read requests in a transaction #7717 Optimize the cost of allocating Chunk memory in some executors #7540 Fix the &amp;ldquo;index out of range&amp;rdquo; panic caused by the columns where point queries get all NULL values #7790   Server  Fix the issue that the memory quota in the configuration file does not take effect #7729 Add the tidb_force_priority system variable to set the execution priority for each statement #7694 Support using the admin show slow statement to obtain the slow query log #7785   Compatibility  Fix the issue that the result of charset/collation is incorrect in information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/21rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/21rc4/</guid>
      <description>TiDB 2.1 RC4 Release Notes 2018 年 10 月 23 日，TiDB 发布 2.1 RC4 版。相比 2.1 RC3 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  修复某些情况下 UnionAll 的列裁剪不正确的问题 #7941 修复某些情况下 UnionAll 算子结果不正确的问题 #8007   SQL 执行引擎  修复 AVG 函数的精度问题 #7874 支持通过 EXPLAIN ANALYZE 语句查看 Query 执行过程中各个算子的运行时间，返回结果行数等运行时统计信息 #7925 修复多次引用同一列时 PointGet 算子 panic 的问题 #7943 修复当 Limit 子句中的值太大时 panic 的问题 #8002 修复某些情况下 AddDate/SubDate 执行过程中 panic 的问题 #8009   统计信息  修复将组合索引的直方图下边界前缀判断为越界的问题 #7856 修复统计信息收集引发的内存泄漏问题 #7873 修复直方图为空时 panic 的问题 #7928 修复加载统计信息时直方图边界越界的问题 #7944 限制统计信息采样过程中数值的最大长度 #7982   Server  重构 Latch，避免事务冲突误判，提升并发事务的执行性能 #7711 修复某些情况下收集 Slow Query 导致的 panic 问题 #7874 修复 LOAD DATA 语句中，ESCAPED BY 为空字符串时 panic 的问题 #8005 完善 “coprocessor error” 日志信息 #8006   兼容性  当 Query 为空时，将 SHOW PROCESSLIST 结果中的 Command 字段设置为 “Sleep” #7839   表达式  修复 SYSDATE 函数被常量折叠的问题 #7895 修复 SUBSTRING_INDEX 在某些情况下 panic 的问题 #7897   DDL  修复抛出 “invalid ddl job type” 的错误时导致栈溢出的问题 #7958 修复某些情况下 ADMIN CHECK TABLE 结果不正确的问题 #7975    PD  修复下线后的 TiKV 没有从 Grafana 面板中移除的问题 #1261 修复 grpc-go 设置 status 时的 data race 问题#1265 修复 etcd 启动失败导致的服务挂起问题 #1267 修复 leader 切换过程中可能产生的 data race #1273 修复下线 TiKV 时可能输出多余 warning 日志的问题 #1280  TiKV  优化 apply snapshot 导致的 RocksDB Write stall 的问题 #3606 增加 raftstore tick 相关 metrics #3657 升级 RocksDB，修复写入卡死及 IngestExternalFile 时可能写坏源文件的问题 #3661 升级 grpcio，修复 “too many pings” 误报的问题 #3650  </description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/21rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/21rc4/</guid>
      <description>TiDB 2.1 RC4 Release Notes 2018 年 10 月 23 日，TiDB 发布 2.1 RC4 版。相比 2.1 RC3 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  修复某些情况下 UnionAll 的列裁剪不正确的问题 #7941 修复某些情况下 UnionAll 算子结果不正确的问题 #8007   SQL 执行引擎  修复 AVG 函数的精度问题 #7874 支持通过 EXPLAIN ANALYZE 语句查看 Query 执行过程中各个算子的运行时间，返回结果行数等运行时统计信息 #7925 修复多次引用同一列时 PointGet 算子 panic 的问题 #7943 修复当 Limit 子句中的值太大时 panic 的问题 #8002 修复某些情况下 AddDate/SubDate 执行过程中 panic 的问题 #8009   统计信息  修复将组合索引的直方图下边界前缀判断为越界的问题 #7856 修复统计信息收集引发的内存泄漏问题 #7873 修复直方图为空时 panic 的问题 #7928 修复加载统计信息时直方图边界越界的问题 #7944 限制统计信息采样过程中数值的最大长度 #7982   Server  重构 Latch，避免事务冲突误判，提升并发事务的执行性能 #7711 修复某些情况下收集 Slow Query 导致的 panic 问题 #7874 修复 LOAD DATA 语句中，ESCAPED BY 为空字符串时 panic 的问题 #8005 完善 “coprocessor error” 日志信息 #8006   兼容性  当 Query 为空时，将 SHOW PROCESSLIST 结果中的 Command 字段设置为 “Sleep” #7839   表达式  修复 SYSDATE 函数被常量折叠的问题 #7895 修复 SUBSTRING_INDEX 在某些情况下 panic 的问题 #7897   DDL  修复抛出 “invalid ddl job type” 的错误时导致栈溢出的问题 #7958 修复某些情况下 ADMIN CHECK TABLE 结果不正确的问题 #7975    PD  修复下线后的 TiKV 没有从 Grafana 面板中移除的问题 #1261 修复 grpc-go 设置 status 时的 data race 问题#1265 修复 etcd 启动失败导致的服务挂起问题 #1267 修复 leader 切换过程中可能产生的 data race #1273 修复下线 TiKV 时可能输出多余 warning 日志的问题 #1280  TiKV  优化 apply snapshot 导致的 RocksDB Write stall 的问题 #3606 增加 raftstore tick 相关 metrics #3657 升级 RocksDB，修复写入卡死及 IngestExternalFile 时可能写坏源文件的问题 #3661 升级 grpcio，修复 “too many pings” 误报的问题 #3650  </description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/21rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/21rc4/</guid>
      <description>TiDB 2.1 RC4 Release Notes 2018 年 10 月 23 日，TiDB 发布 2.1 RC4 版。相比 2.1 RC3 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  修复某些情况下 UnionAll 的列裁剪不正确的问题 #7941 修复某些情况下 UnionAll 算子结果不正确的问题 #8007   SQL 执行引擎  修复 AVG 函数的精度问题 #7874 支持通过 EXPLAIN ANALYZE 语句查看 Query 执行过程中各个算子的运行时间，返回结果行数等运行时统计信息 #7925 修复多次引用同一列时 PointGet 算子 panic 的问题 #7943 修复当 Limit 子句中的值太大时 panic 的问题 #8002 修复某些情况下 AddDate/SubDate 执行过程中 panic 的问题 #8009   统计信息  修复将组合索引的直方图下边界前缀判断为越界的问题 #7856 修复统计信息收集引发的内存泄漏问题 #7873 修复直方图为空时 panic 的问题 #7928 修复加载统计信息时直方图边界越界的问题 #7944 限制统计信息采样过程中数值的最大长度 #7982   Server  重构 Latch，避免事务冲突误判，提升并发事务的执行性能 #7711 修复某些情况下收集 Slow Query 导致的 panic 问题 #7874 修复 LOAD DATA 语句中，ESCAPED BY 为空字符串时 panic 的问题 #8005 完善 “coprocessor error” 日志信息 #8006   兼容性  当 Query 为空时，将 SHOW PROCESSLIST 结果中的 Command 字段设置为 “Sleep” #7839   表达式  修复 SYSDATE 函数被常量折叠的问题 #7895 修复 SUBSTRING_INDEX 在某些情况下 panic 的问题 #7897   DDL  修复抛出 “invalid ddl job type” 的错误时导致栈溢出的问题 #7958 修复某些情况下 ADMIN CHECK TABLE 结果不正确的问题 #7975    PD  修复下线后的 TiKV 没有从 Grafana 面板中移除的问题 #1261 修复 grpc-go 设置 status 时的 data race 问题#1265 修复 etcd 启动失败导致的服务挂起问题 #1267 修复 leader 切换过程中可能产生的 data race #1273 修复下线 TiKV 时可能输出多余 warning 日志的问题 #1280  TiKV  优化 apply snapshot 导致的 RocksDB Write stall 的问题 #3606 增加 raftstore tick 相关 metrics #3657 升级 RocksDB，修复写入卡死及 IngestExternalFile 时可能写坏源文件的问题 #3661 升级 grpcio，修复 “too many pings” 误报的问题 #3650  </description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/21rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/21rc4/</guid>
      <description>TiDB 2.1 RC4 Release Notes 2018 年 10 月 23 日，TiDB 发布 2.1 RC4 版。相比 2.1 RC3 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  修复某些情况下 UnionAll 的列裁剪不正确的问题 #7941 修复某些情况下 UnionAll 算子结果不正确的问题 #8007   SQL 执行引擎  修复 AVG 函数的精度问题 #7874 支持通过 EXPLAIN ANALYZE 语句查看 Query 执行过程中各个算子的运行时间，返回结果行数等运行时统计信息 #7925 修复多次引用同一列时 PointGet 算子 panic 的问题 #7943 修复当 Limit 子句中的值太大时 panic 的问题 #8002 修复某些情况下 AddDate/SubDate 执行过程中 panic 的问题 #8009   统计信息  修复将组合索引的直方图下边界前缀判断为越界的问题 #7856 修复统计信息收集引发的内存泄漏问题 #7873 修复直方图为空时 panic 的问题 #7928 修复加载统计信息时直方图边界越界的问题 #7944 限制统计信息采样过程中数值的最大长度 #7982   Server  重构 Latch，避免事务冲突误判，提升并发事务的执行性能 #7711 修复某些情况下收集 Slow Query 导致的 panic 问题 #7874 修复 LOAD DATA 语句中，ESCAPED BY 为空字符串时 panic 的问题 #8005 完善 “coprocessor error” 日志信息 #8006   兼容性  当 Query 为空时，将 SHOW PROCESSLIST 结果中的 Command 字段设置为 “Sleep” #7839   表达式  修复 SYSDATE 函数被常量折叠的问题 #7895 修复 SUBSTRING_INDEX 在某些情况下 panic 的问题 #7897   DDL  修复抛出 “invalid ddl job type” 的错误时导致栈溢出的问题 #7958 修复某些情况下 ADMIN CHECK TABLE 结果不正确的问题 #7975    PD  修复下线后的 TiKV 没有从 Grafana 面板中移除的问题 #1261 修复 grpc-go 设置 status 时的 data race 问题#1265 修复 etcd 启动失败导致的服务挂起问题 #1267 修复 leader 切换过程中可能产生的 data race #1273 修复下线 TiKV 时可能输出多余 warning 日志的问题 #1280  TiKV  优化 apply snapshot 导致的 RocksDB Write stall 的问题 #3606 增加 raftstore tick 相关 metrics #3657 升级 RocksDB，修复写入卡死及 IngestExternalFile 时可能写坏源文件的问题 #3661 升级 grpcio，修复 “too many pings” 误报的问题 #3650  </description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC4 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/21rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/21rc4/</guid>
      <description>TiDB 2.1 RC4 Release Notes On October 23, 2018, TiDB 2.1 RC4 is released. Compared with TiDB 2.1 RC3, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer  Fix the issue that column pruning of UnionAll is incorrect in some cases #7941 Fix the issue that the result of the UnionAll operator is incorrect in some cases #8007   SQL Execution Engine  Fix the precision issue of the AVG function #7874 Support using the EXPLAIN ANALYZE statement to check the runtime statistics including the execution time and the number of returned rows of each operator during the query execution process #7925 Fix the panic issue of the PointGet operator when a column of a table appears multiple times in the result set #7943 Fix the panic issue caused by too large values in the Limit subclause #8002 Fix the panic issue during the execution process of the AddDate/SubDate statement in some cases #8009     Statistics  Fix the issue of judging the prefix of the histogram low-bound of the combined index as out of range #7856 Fix the memory leak issue caused by statistics collecting #7873 Fix the panic issue when the histogram is empty #7928 Fix the issue that the histogram bound is out of range when the statistics is being uploaded #7944 Limit the maximum length of values in the statistics sampling process #7982     Server  Refactor Latch to avoid misjudgment of transaction conflicts and improve the execution performance of concurrent transactions #7711 Fix the panic issue caused by collecting slow queries in some cases #7874 Fix the panic issue when ESCAPED BY is an empty string in the LOAD DATA statement #8005 Complete the “coprocessor error” log information #8006   Compatibility  Set the Command field of the SHOW PROCESSLIST result to Sleep when the query is empty #7839   Expressions  Fix the constant folding issue of the SYSDATE function #7895 Fix the issue that SUBSTRING_INDEX panics in some cases #7897   DDL  Fix the stack overflow issue caused by throwing the invalid ddl job type error #7958 Fix the issue that the result of ADMIN CHECK TABLE is incorrect in some cases #7975    PD  Fix the issue that the tombstone TiKV is not removed from Grafana #1261 Fix the data race issue when grpc-go configures the status #1265 Fix the issue that the PD server gets stuck caused by etcd startup failure #1267 Fix the issue that data race might occur during leader switching #1273 Fix the issue that extra warning logs might be output when TiKV becomes tombstone #1280  TiKV  Optimize the RocksDB Write stall issue caused by applying snapshots #3606 Add raftstore tick metrics #3657 Upgrade RocksDB and fix the Write block issue and that the source file might be damaged by the Write operation when performing IngestExternalFile #3661 Upgrade grpcio and fix the issue that “too many pings” is wrongly reported #3650  </description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC4 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/21rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/21rc4/</guid>
      <description>TiDB 2.1 RC4 Release Notes On October 23, 2018, TiDB 2.1 RC4 is released. Compared with TiDB 2.1 RC3, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer  Fix the issue that column pruning of UnionAll is incorrect in some cases #7941 Fix the issue that the result of the UnionAll operator is incorrect in some cases #8007   SQL Execution Engine  Fix the precision issue of the AVG function #7874 Support using the EXPLAIN ANALYZE statement to check the runtime statistics including the execution time and the number of returned rows of each operator during the query execution process #7925 Fix the panic issue of the PointGet operator when a column of a table appears multiple times in the result set #7943 Fix the panic issue caused by too large values in the Limit subclause #8002 Fix the panic issue during the execution process of the AddDate/SubDate statement in some cases #8009     Statistics  Fix the issue of judging the prefix of the histogram low-bound of the combined index as out of range #7856 Fix the memory leak issue caused by statistics collecting #7873 Fix the panic issue when the histogram is empty #7928 Fix the issue that the histogram bound is out of range when the statistics is being uploaded #7944 Limit the maximum length of values in the statistics sampling process #7982     Server  Refactor Latch to avoid misjudgment of transaction conflicts and improve the execution performance of concurrent transactions #7711 Fix the panic issue caused by collecting slow queries in some cases #7874 Fix the panic issue when ESCAPED BY is an empty string in the LOAD DATA statement #8005 Complete the “coprocessor error” log information #8006   Compatibility  Set the Command field of the SHOW PROCESSLIST result to Sleep when the query is empty #7839   Expressions  Fix the constant folding issue of the SYSDATE function #7895 Fix the issue that SUBSTRING_INDEX panics in some cases #7897   DDL  Fix the stack overflow issue caused by throwing the invalid ddl job type error #7958 Fix the issue that the result of ADMIN CHECK TABLE is incorrect in some cases #7975    PD  Fix the issue that the tombstone TiKV is not removed from Grafana #1261 Fix the data race issue when grpc-go configures the status #1265 Fix the issue that the PD server gets stuck caused by etcd startup failure #1267 Fix the issue that data race might occur during leader switching #1273 Fix the issue that extra warning logs might be output when TiKV becomes tombstone #1280  TiKV  Optimize the RocksDB Write stall issue caused by applying snapshots #3606 Add raftstore tick metrics #3657 Upgrade RocksDB and fix the Write block issue and that the source file might be damaged by the Write operation when performing IngestExternalFile #3661 Upgrade grpcio and fix the issue that “too many pings” is wrongly reported #3650  </description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC4 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/21rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/21rc4/</guid>
      <description>TiDB 2.1 RC4 Release Notes On October 23, 2018, TiDB 2.1 RC4 is released. Compared with TiDB 2.1 RC3, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer  Fix the issue that column pruning of UnionAll is incorrect in some cases #7941 Fix the issue that the result of the UnionAll operator is incorrect in some cases #8007   SQL Execution Engine  Fix the precision issue of the AVG function #7874 Support using the EXPLAIN ANALYZE statement to check the runtime statistics including the execution time and the number of returned rows of each operator during the query execution process #7925 Fix the panic issue of the PointGet operator when a column of a table appears multiple times in the result set #7943 Fix the panic issue caused by too large values in the Limit subclause #8002 Fix the panic issue during the execution process of the AddDate/SubDate statement in some cases #8009     Statistics  Fix the issue of judging the prefix of the histogram low-bound of the combined index as out of range #7856 Fix the memory leak issue caused by statistics collecting #7873 Fix the panic issue when the histogram is empty #7928 Fix the issue that the histogram bound is out of range when the statistics is being uploaded #7944 Limit the maximum length of values in the statistics sampling process #7982     Server  Refactor Latch to avoid misjudgment of transaction conflicts and improve the execution performance of concurrent transactions #7711 Fix the panic issue caused by collecting slow queries in some cases #7874 Fix the panic issue when ESCAPED BY is an empty string in the LOAD DATA statement #8005 Complete the “coprocessor error” log information #8006   Compatibility  Set the Command field of the SHOW PROCESSLIST result to Sleep when the query is empty #7839   Expressions  Fix the constant folding issue of the SYSDATE function #7895 Fix the issue that SUBSTRING_INDEX panics in some cases #7897   DDL  Fix the stack overflow issue caused by throwing the invalid ddl job type error #7958 Fix the issue that the result of ADMIN CHECK TABLE is incorrect in some cases #7975    PD  Fix the issue that the tombstone TiKV is not removed from Grafana #1261 Fix the data race issue when grpc-go configures the status #1265 Fix the issue that the PD server gets stuck caused by etcd startup failure #1267 Fix the issue that data race might occur during leader switching #1273 Fix the issue that extra warning logs might be output when TiKV becomes tombstone #1280  TiKV  Optimize the RocksDB Write stall issue caused by applying snapshots #3606 Add raftstore tick metrics #3657 Upgrade RocksDB and fix the Write block issue and that the source file might be damaged by the Write operation when performing IngestExternalFile #3661 Upgrade grpcio and fix the issue that “too many pings” is wrongly reported #3650  </description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC4 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/21rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/21rc4/</guid>
      <description>TiDB 2.1 RC4 Release Notes On October 23, 2018, TiDB 2.1 RC4 is released. Compared with TiDB 2.1 RC3, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer  Fix the issue that column pruning of UnionAll is incorrect in some cases #7941 Fix the issue that the result of the UnionAll operator is incorrect in some cases #8007   SQL Execution Engine  Fix the precision issue of the AVG function #7874 Support using the EXPLAIN ANALYZE statement to check the runtime statistics including the execution time and the number of returned rows of each operator during the query execution process #7925 Fix the panic issue of the PointGet operator when a column of a table appears multiple times in the result set #7943 Fix the panic issue caused by too large values in the Limit subclause #8002 Fix the panic issue during the execution process of the AddDate/SubDate statement in some cases #8009     Statistics  Fix the issue of judging the prefix of the histogram low-bound of the combined index as out of range #7856 Fix the memory leak issue caused by statistics collecting #7873 Fix the panic issue when the histogram is empty #7928 Fix the issue that the histogram bound is out of range when the statistics is being uploaded #7944 Limit the maximum length of values in the statistics sampling process #7982     Server  Refactor Latch to avoid misjudgment of transaction conflicts and improve the execution performance of concurrent transactions #7711 Fix the panic issue caused by collecting slow queries in some cases #7874 Fix the panic issue when ESCAPED BY is an empty string in the LOAD DATA statement #8005 Complete the “coprocessor error” log information #8006   Compatibility  Set the Command field of the SHOW PROCESSLIST result to Sleep when the query is empty #7839   Expressions  Fix the constant folding issue of the SYSDATE function #7895 Fix the issue that SUBSTRING_INDEX panics in some cases #7897   DDL  Fix the stack overflow issue caused by throwing the invalid ddl job type error #7958 Fix the issue that the result of ADMIN CHECK TABLE is incorrect in some cases #7975    PD  Fix the issue that the tombstone TiKV is not removed from Grafana #1261 Fix the data race issue when grpc-go configures the status #1265 Fix the issue that the PD server gets stuck caused by etcd startup failure #1267 Fix the issue that data race might occur during leader switching #1273 Fix the issue that extra warning logs might be output when TiKV becomes tombstone #1280  TiKV  Optimize the RocksDB Write stall issue caused by applying snapshots #3606 Add raftstore tick metrics #3657 Upgrade RocksDB and fix the Write block issue and that the source file might be damaged by the Write operation when performing IngestExternalFile #3661 Upgrade grpcio and fix the issue that “too many pings” is wrongly reported #3650  </description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC5 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/21rc5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/21rc5/</guid>
      <description>TiDB 2.1 RC5 Release Notes 2018 年 11 月 12 日，TiDB 发布 2.1 RC5 版。相比 2.1 RC4 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  修复 IndexReader 在某些情况下读取的 handle 不正确的问题 #8132 修复 IndexScan Prepared 语句在使用 Plan Cache 的时候的问题 #8055 修复 Union 语句结果不稳定的问题 #8165   执行器  提升 TiDB 插入和更新宽表的性能 #8024 内建函数 Truncate 支持 unsigned int 参数 #8068 修复转换 JSON 数据到 decimal 类型出错的问题 #8109 修复 float 类型在 Update 时出错的问题 #8170   统计信息  修复点查在某些情况下，统计信息出现错误的问题 #8035 修复统计信息某些情况下在 primary key 的选择率的问题 #8149 修复被删除的表的统计信息长时间没有清理的问题 #8182   Server  提升日志的可读性，完善日志信息  #8063 #8053 #8224     修复获取 infoschema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC5 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/21rc5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/21rc5/</guid>
      <description>TiDB 2.1 RC5 Release Notes 2018 年 11 月 12 日，TiDB 发布 2.1 RC5 版。相比 2.1 RC4 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  修复 IndexReader 在某些情况下读取的 handle 不正确的问题 #8132 修复 IndexScan Prepared 语句在使用 Plan Cache 的时候的问题 #8055 修复 Union 语句结果不稳定的问题 #8165   执行器  提升 TiDB 插入和更新宽表的性能 #8024 内建函数 Truncate 支持 unsigned int 参数 #8068 修复转换 JSON 数据到 decimal 类型出错的问题 #8109 修复 float 类型在 Update 时出错的问题 #8170   统计信息  修复点查在某些情况下，统计信息出现错误的问题 #8035 修复统计信息某些情况下在 primary key 的选择率的问题 #8149 修复被删除的表的统计信息长时间没有清理的问题 #8182   Server  提升日志的可读性，完善日志信息  #8063 #8053 #8224     修复获取 infoschema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC5 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/21rc5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/21rc5/</guid>
      <description>TiDB 2.1 RC5 Release Notes 2018 年 11 月 12 日，TiDB 发布 2.1 RC5 版。相比 2.1 RC4 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  修复 IndexReader 在某些情况下读取的 handle 不正确的问题 #8132 修复 IndexScan Prepared 语句在使用 Plan Cache 的时候的问题 #8055 修复 Union 语句结果不稳定的问题 #8165   执行器  提升 TiDB 插入和更新宽表的性能 #8024 内建函数 Truncate 支持 unsigned int 参数 #8068 修复转换 JSON 数据到 decimal 类型出错的问题 #8109 修复 float 类型在 Update 时出错的问题 #8170   统计信息  修复点查在某些情况下，统计信息出现错误的问题 #8035 修复统计信息某些情况下在 primary key 的选择率的问题 #8149 修复被删除的表的统计信息长时间没有清理的问题 #8182   Server  提升日志的可读性，完善日志信息  #8063 #8053 #8224     修复获取 infoschema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC5 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/21rc5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/21rc5/</guid>
      <description>TiDB 2.1 RC5 Release Notes 2018 年 11 月 12 日，TiDB 发布 2.1 RC5 版。相比 2.1 RC4 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  修复 IndexReader 在某些情况下读取的 handle 不正确的问题 #8132 修复 IndexScan Prepared 语句在使用 Plan Cache 的时候的问题 #8055 修复 Union 语句结果不稳定的问题 #8165   执行器  提升 TiDB 插入和更新宽表的性能 #8024 内建函数 Truncate 支持 unsigned int 参数 #8068 修复转换 JSON 数据到 decimal 类型出错的问题 #8109 修复 float 类型在 Update 时出错的问题 #8170   统计信息  修复点查在某些情况下，统计信息出现错误的问题 #8035 修复统计信息某些情况下在 primary key 的选择率的问题 #8149 修复被删除的表的统计信息长时间没有清理的问题 #8182   Server  提升日志的可读性，完善日志信息  #8063 #8053 #8224     修复获取 infoschema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC5 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/21rc5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/21rc5/</guid>
      <description>TiDB 2.1 RC5 Release Notes On November 12, 2018, TiDB 2.1 RC5 is released. Compared with TiDB 2.1 RC4, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer  Fix the issue that IndexReader reads the wrong handle in some cases #8132 Fix the issue occurred while the IndexScan Prepared statement uses Plan Cache #8055 Fix the issue that the result of the Union statement is unstable #8165   SQL Execution Engine  Improve the performance of TiDB on inserting or updating wide tables #8024 Support the unsigned int flag in the Truncate built-in function #8068 Fix the error occurred while converting JSON data to the decimal type #8109 Fix the error occurred when you Update the float type #8170   Statistics  Fix the incorrect statistics issue during point queries in some cases #8035 Fix the selectivity estimation of statistics for primary key in some cases #8149 Fix the issue that the statistics of deleted tables are not cleared up for a long period of time #8182   Server  Improve the readability of logs and make logs better  #8063 #8053 #8224     Fix the error occurred when obtaining the table data of infoschema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC5 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/21rc5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/21rc5/</guid>
      <description>TiDB 2.1 RC5 Release Notes On November 12, 2018, TiDB 2.1 RC5 is released. Compared with TiDB 2.1 RC4, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer  Fix the issue that IndexReader reads the wrong handle in some cases #8132 Fix the issue occurred while the IndexScan Prepared statement uses Plan Cache #8055 Fix the issue that the result of the Union statement is unstable #8165   SQL Execution Engine  Improve the performance of TiDB on inserting or updating wide tables #8024 Support the unsigned int flag in the Truncate built-in function #8068 Fix the error occurred while converting JSON data to the decimal type #8109 Fix the error occurred when you Update the float type #8170   Statistics  Fix the incorrect statistics issue during point queries in some cases #8035 Fix the selectivity estimation of statistics for primary key in some cases #8149 Fix the issue that the statistics of deleted tables are not cleared up for a long period of time #8182   Server  Improve the readability of logs and make logs better  #8063 #8053 #8224     Fix the error occurred when obtaining the table data of infoschema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC5 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/21rc5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/21rc5/</guid>
      <description>TiDB 2.1 RC5 Release Notes On November 12, 2018, TiDB 2.1 RC5 is released. Compared with TiDB 2.1 RC4, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer  Fix the issue that IndexReader reads the wrong handle in some cases #8132 Fix the issue occurred while the IndexScan Prepared statement uses Plan Cache #8055 Fix the issue that the result of the Union statement is unstable #8165   SQL Execution Engine  Improve the performance of TiDB on inserting or updating wide tables #8024 Support the unsigned int flag in the Truncate built-in function #8068 Fix the error occurred while converting JSON data to the decimal type #8109 Fix the error occurred when you Update the float type #8170   Statistics  Fix the incorrect statistics issue during point queries in some cases #8035 Fix the selectivity estimation of statistics for primary key in some cases #8149 Fix the issue that the statistics of deleted tables are not cleared up for a long period of time #8182   Server  Improve the readability of logs and make logs better  #8063 #8053 #8224     Fix the error occurred when obtaining the table data of infoschema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 RC5 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/21rc5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/21rc5/</guid>
      <description>TiDB 2.1 RC5 Release Notes On November 12, 2018, TiDB 2.1 RC5 is released. Compared with TiDB 2.1 RC4, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer  Fix the issue that IndexReader reads the wrong handle in some cases #8132 Fix the issue occurred while the IndexScan Prepared statement uses Plan Cache #8055 Fix the issue that the result of the Union statement is unstable #8165   SQL Execution Engine  Improve the performance of TiDB on inserting or updating wide tables #8024 Support the unsigned int flag in the Truncate built-in function #8068 Fix the error occurred while converting JSON data to the decimal type #8109 Fix the error occurred when you Update the float type #8170   Statistics  Fix the incorrect statistics issue during point queries in some cases #8035 Fix the selectivity estimation of statistics for primary key in some cases #8149 Fix the issue that the statistics of deleted tables are not cleared up for a long period of time #8182   Server  Improve the readability of logs and make logs better  #8063 #8053 #8224     Fix the error occurred when obtaining the table data of infoschema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 Upgrade Guide</title>
      <link>https://pingcap.com/docs/v2.1/how-to/upgrade/from-previous-version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/upgrade/from-previous-version/</guid>
      <description>Learn how to upgrade from TiDB 2.0 (TiDB 2.0.1 or later versions) or TiDB 2.1 RC version to TiDB 2.1 GA version.</description>
    </item>
    
    <item>
      <title>TiDB 2.1 升级操作指南</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/upgrade/from-previous-version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/upgrade/from-previous-version/</guid>
      <description>TiDB 2.1 升级操作指南 本文档适用于从 TiDB 2.0 版本升级至 TiDB 2.1 版本以及 TiDB 2.1 低版本升级至 TiDB 2.1 高版本。TiDB 2.1 版本不兼容 Kafka 版本的 TiDB Binlog，如果当前集群已经使用 Kafka 版本的 TiDB Binlog，须参考 TiDB Binlog Cluster 版本升级方法 升级到 Cluster 版本。
升级兼容性说明  新版本存储引擎更新，不支持在升级后回退至 2.0.x 或更旧版本 从 2.0.6 之前的版本升级到 2.1 之前，需要确认集群中是否存在正在运行中的 DDL 操作，特别是耗时的 Add Index 操作，等 DDL 操作完成后再执行升级操作 2.1 版本启用了并行 DDL，早于 2.0.1 版本的集群，无法滚动升级到 2.1，可以选择下面两种方案：  停机升级，直接从早于 2.0.1 的 TiDB 版本升级到 2.1 先滚动升级到 2.0.1 或者之后的 2.0.x 版本，再滚动升级到 2.1 版本    注意事项 在升级的过程中不要执行 DDL 请求，否则可能会出现行为未定义的问题。</description>
    </item>
    
    <item>
      <title>TiDB 2.1.1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.1.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.1.1/</guid>
      <description>TiDB 2.1.1 Release Notes 2018 年 12 月 12 日，TiDB 发布 2.1.1 版。相比 2.1.0 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  优化器/执行器  修复时间为负值时的四舍五入错误 #8574 修复 uncompress 函数未检查数据长度的问题 #8606 在执行 execute 命令后重置 prepare 语句绑定的变量 #8652 支持对分区表自动收集统计信息 #8649 修复在下推 abs 函数时设置错误的整数类型 #8628 修复 JSON 列的数据竞争问题 #8660   Server  修复在 PD 故障时获取错误 TSO 的问题 #8567 修复不规范的语句导致启动失败的问题 #8576 修复在事务重试时使用了错误的参数 #8638   DDL  将表的默认字符集和排序规则改为 utf8mb4 和 utf8mb4_bin #8590 增加变量 ddl_reorg_batch_size 来控制添加索引的速度 #8614 DDL 中的 character set 和 collation 选项内容不再大小写敏感 #8611 修复对于生成列添加索引的问题 #8655    PD  修复一些配置项无法在配置文件中设置为 0 的问题 #1334 启动时检查未定义的配置 #1362 避免 transfer leader 至新创建的 Peer，优化可能产生的延迟增加问题 #1339 修复 RaftCluster 在退出时可能的死锁问题 #1370  TiKV  避免 transfer leader 至新创建的 Peer，优化可能产生的延迟增加问题 #3878  Tools  Lightning  优化对导入表的 analyze 机制，提升了导入速度 支持 checkpoint 信息储存在本地文件   TiDB Binlog  修复 pb files 输出 bug，表只有主键列则无法产生 pb event    </description>
    </item>
    
    <item>
      <title>TiDB 2.1.1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.1.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.1.1/</guid>
      <description>TiDB 2.1.1 Release Notes 2018 年 12 月 12 日，TiDB 发布 2.1.1 版。相比 2.1.0 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  优化器/执行器  修复时间为负值时的四舍五入错误 #8574 修复 uncompress 函数未检查数据长度的问题 #8606 在执行 execute 命令后重置 prepare 语句绑定的变量 #8652 支持对分区表自动收集统计信息 #8649 修复在下推 abs 函数时设置错误的整数类型 #8628 修复 JSON 列的数据竞争问题 #8660   Server  修复在 PD 故障时获取错误 TSO 的问题 #8567 修复不规范的语句导致启动失败的问题 #8576 修复在事务重试时使用了错误的参数 #8638   DDL  将表的默认字符集和排序规则改为 utf8mb4 和 utf8mb4_bin #8590 增加变量 ddl_reorg_batch_size 来控制添加索引的速度 #8614 DDL 中的 character set 和 collation 选项内容不再大小写敏感 #8611 修复对于生成列添加索引的问题 #8655    PD  修复一些配置项无法在配置文件中设置为 0 的问题 #1334 启动时检查未定义的配置 #1362 避免 transfer leader 至新创建的 Peer，优化可能产生的延迟增加问题 #1339 修复 RaftCluster 在退出时可能的死锁问题 #1370  TiKV  避免 transfer leader 至新创建的 Peer，优化可能产生的延迟增加问题 #3878  Tools  Lightning  优化对导入表的 analyze 机制，提升了导入速度 支持 checkpoint 信息储存在本地文件   TiDB Binlog  修复 pb files 输出 bug，表只有主键列则无法产生 pb event    </description>
    </item>
    
    <item>
      <title>TiDB 2.1.1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.1.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.1.1/</guid>
      <description>TiDB 2.1.1 Release Notes 2018 年 12 月 12 日，TiDB 发布 2.1.1 版。相比 2.1.0 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  优化器/执行器  修复时间为负值时的四舍五入错误 #8574 修复 uncompress 函数未检查数据长度的问题 #8606 在执行 execute 命令后重置 prepare 语句绑定的变量 #8652 支持对分区表自动收集统计信息 #8649 修复在下推 abs 函数时设置错误的整数类型 #8628 修复 JSON 列的数据竞争问题 #8660   Server  修复在 PD 故障时获取错误 TSO 的问题 #8567 修复不规范的语句导致启动失败的问题 #8576 修复在事务重试时使用了错误的参数 #8638   DDL  将表的默认字符集和排序规则改为 utf8mb4 和 utf8mb4_bin #8590 增加变量 ddl_reorg_batch_size 来控制添加索引的速度 #8614 DDL 中的 character set 和 collation 选项内容不再大小写敏感 #8611 修复对于生成列添加索引的问题 #8655    PD  修复一些配置项无法在配置文件中设置为 0 的问题 #1334 启动时检查未定义的配置 #1362 避免 transfer leader 至新创建的 Peer，优化可能产生的延迟增加问题 #1339 修复 RaftCluster 在退出时可能的死锁问题 #1370  TiKV  避免 transfer leader 至新创建的 Peer，优化可能产生的延迟增加问题 #3878  Tools  Lightning  优化对导入表的 analyze 机制，提升了导入速度 支持 checkpoint 信息储存在本地文件   TiDB Binlog  修复 pb files 输出 bug，表只有主键列则无法产生 pb event    </description>
    </item>
    
    <item>
      <title>TiDB 2.1.1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.1.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.1.1/</guid>
      <description>TiDB 2.1.1 Release Notes 2018 年 12 月 12 日，TiDB 发布 2.1.1 版。相比 2.1.0 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  优化器/执行器  修复时间为负值时的四舍五入错误 #8574 修复 uncompress 函数未检查数据长度的问题 #8606 在执行 execute 命令后重置 prepare 语句绑定的变量 #8652 支持对分区表自动收集统计信息 #8649 修复在下推 abs 函数时设置错误的整数类型 #8628 修复 JSON 列的数据竞争问题 #8660   Server  修复在 PD 故障时获取错误 TSO 的问题 #8567 修复不规范的语句导致启动失败的问题 #8576 修复在事务重试时使用了错误的参数 #8638   DDL  将表的默认字符集和排序规则改为 utf8mb4 和 utf8mb4_bin #8590 增加变量 ddl_reorg_batch_size 来控制添加索引的速度 #8614 DDL 中的 character set 和 collation 选项内容不再大小写敏感 #8611 修复对于生成列添加索引的问题 #8655    PD  修复一些配置项无法在配置文件中设置为 0 的问题 #1334 启动时检查未定义的配置 #1362 避免 transfer leader 至新创建的 Peer，优化可能产生的延迟增加问题 #1339 修复 RaftCluster 在退出时可能的死锁问题 #1370  TiKV  避免 transfer leader 至新创建的 Peer，优化可能产生的延迟增加问题 #3878  Tools  Lightning  优化对导入表的 analyze 机制，提升了导入速度 支持 checkpoint 信息储存在本地文件   TiDB Binlog  修复 pb files 输出 bug，表只有主键列则无法产生 pb event    </description>
    </item>
    
    <item>
      <title>TiDB 2.1.1 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.1.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.1.1/</guid>
      <description>TiDB 2.1.1 Release Notes On December 12, 2018, TiDB 2.1.1 is released. Compared with TiDB 2.1.0, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer/Executor  Fix the round error of the negative date #8574 Fix the issue that the uncompress function does not check the data length #8606 Reset bind arguments of the prepare statement after the execute command is executed #8652 Support automatically collecting the statistics information of a partition table #8649 Fix the wrongly configured integer type when pushing down the abs function #8628 Fix the data race on the JSON column #8660   Server  Fix the issue that the transaction obtained TSO is incorrect when PD breaks down #8567 Fix the bootstrap failure caused by the statement that does not conform to ANSI standards #8576 Fix the issue that incorrect parameters are used in transaction retries #8638   DDL  Change the default character set and collation of tables into utf8mb4 #8590 Add the ddl_reorg_batch_size variable to control the speed of adding indexes #8614 Make the character set and collation options content in DDL case-insensitive #8611 Fix the issue of adding indexes for generated columns #8655    PD  Fix the issue that some configuration items cannot be set to 0 in the configuration file #1334 Check the undefined configuration when starting PD #1362 Avoid transferring the leader to a newly created peer, to optimize the possible delay #1339 Fix the issue that RaftCluster cannot stop caused by deadlock #1370  TiKV  Avoid transferring the leader to a newly created peer, to optimize the possible delay #3878  Tools  Lightning  Optimize the analyze mechanism on imported tables to increase the import speed Support storing the checkpoint information to a local file   TiDB Binlog  Fix the output bug of pb files that a table only with the primary key column cannot generate the pb event    </description>
    </item>
    
    <item>
      <title>TiDB 2.1.1 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.1.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.1.1/</guid>
      <description>TiDB 2.1.1 Release Notes On December 12, 2018, TiDB 2.1.1 is released. Compared with TiDB 2.1.0, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer/Executor  Fix the round error of the negative date #8574 Fix the issue that the uncompress function does not check the data length #8606 Reset bind arguments of the prepare statement after the execute command is executed #8652 Support automatically collecting the statistics information of a partition table #8649 Fix the wrongly configured integer type when pushing down the abs function #8628 Fix the data race on the JSON column #8660   Server  Fix the issue that the transaction obtained TSO is incorrect when PD breaks down #8567 Fix the bootstrap failure caused by the statement that does not conform to ANSI standards #8576 Fix the issue that incorrect parameters are used in transaction retries #8638   DDL  Change the default character set and collation of tables into utf8mb4 #8590 Add the ddl_reorg_batch_size variable to control the speed of adding indexes #8614 Make the character set and collation options content in DDL case-insensitive #8611 Fix the issue of adding indexes for generated columns #8655    PD  Fix the issue that some configuration items cannot be set to 0 in the configuration file #1334 Check the undefined configuration when starting PD #1362 Avoid transferring the leader to a newly created peer, to optimize the possible delay #1339 Fix the issue that RaftCluster cannot stop caused by deadlock #1370  TiKV  Avoid transferring the leader to a newly created peer, to optimize the possible delay #3878  Tools  Lightning  Optimize the analyze mechanism on imported tables to increase the import speed Support storing the checkpoint information to a local file   TiDB Binlog  Fix the output bug of pb files that a table only with the primary key column cannot generate the pb event    </description>
    </item>
    
    <item>
      <title>TiDB 2.1.1 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.1.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.1.1/</guid>
      <description>TiDB 2.1.1 Release Notes On December 12, 2018, TiDB 2.1.1 is released. Compared with TiDB 2.1.0, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer/Executor  Fix the round error of the negative date #8574 Fix the issue that the uncompress function does not check the data length #8606 Reset bind arguments of the prepare statement after the execute command is executed #8652 Support automatically collecting the statistics information of a partition table #8649 Fix the wrongly configured integer type when pushing down the abs function #8628 Fix the data race on the JSON column #8660   Server  Fix the issue that the transaction obtained TSO is incorrect when PD breaks down #8567 Fix the bootstrap failure caused by the statement that does not conform to ANSI standards #8576 Fix the issue that incorrect parameters are used in transaction retries #8638   DDL  Change the default character set and collation of tables into utf8mb4 #8590 Add the ddl_reorg_batch_size variable to control the speed of adding indexes #8614 Make the character set and collation options content in DDL case-insensitive #8611 Fix the issue of adding indexes for generated columns #8655    PD  Fix the issue that some configuration items cannot be set to 0 in the configuration file #1334 Check the undefined configuration when starting PD #1362 Avoid transferring the leader to a newly created peer, to optimize the possible delay #1339 Fix the issue that RaftCluster cannot stop caused by deadlock #1370  TiKV  Avoid transferring the leader to a newly created peer, to optimize the possible delay #3878  Tools  Lightning  Optimize the analyze mechanism on imported tables to increase the import speed Support storing the checkpoint information to a local file   TiDB Binlog  Fix the output bug of pb files that a table only with the primary key column cannot generate the pb event    </description>
    </item>
    
    <item>
      <title>TiDB 2.1.1 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.1.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.1.1/</guid>
      <description>TiDB 2.1.1 Release Notes On December 12, 2018, TiDB 2.1.1 is released. Compared with TiDB 2.1.0, this release has great improvement in stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer/Executor  Fix the round error of the negative date #8574 Fix the issue that the uncompress function does not check the data length #8606 Reset bind arguments of the prepare statement after the execute command is executed #8652 Support automatically collecting the statistics information of a partition table #8649 Fix the wrongly configured integer type when pushing down the abs function #8628 Fix the data race on the JSON column #8660   Server  Fix the issue that the transaction obtained TSO is incorrect when PD breaks down #8567 Fix the bootstrap failure caused by the statement that does not conform to ANSI standards #8576 Fix the issue that incorrect parameters are used in transaction retries #8638   DDL  Change the default character set and collation of tables into utf8mb4 #8590 Add the ddl_reorg_batch_size variable to control the speed of adding indexes #8614 Make the character set and collation options content in DDL case-insensitive #8611 Fix the issue of adding indexes for generated columns #8655    PD  Fix the issue that some configuration items cannot be set to 0 in the configuration file #1334 Check the undefined configuration when starting PD #1362 Avoid transferring the leader to a newly created peer, to optimize the possible delay #1339 Fix the issue that RaftCluster cannot stop caused by deadlock #1370  TiKV  Avoid transferring the leader to a newly created peer, to optimize the possible delay #3878  Tools  Lightning  Optimize the analyze mechanism on imported tables to increase the import speed Support storing the checkpoint information to a local file   TiDB Binlog  Fix the output bug of pb files that a table only with the primary key column cannot generate the pb event    </description>
    </item>
    
    <item>
      <title>TiDB 2.1.10 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.1.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.1.10/</guid>
      <description>TiDB 2.1.10 Release Notes 发版日期：2019 年 5 月 22 日
TiDB 版本：2.1.10
TiDB Ansible 版本：2.1.10
TiDB  修复在使用 tidb_snapshot 读取历史数据的时候，某些异常情况导致的表结构不正确 #10359 修复 NOT 函数在某些情况下导致的读取结果错误的问题 #10363 修复 Generated Column 在 Replace 或者 Insert on duplicate update 语句中的错误行为 #10385 修复 BETWEEN 函数在 DATE/DATETIME 类型比较的一个 bug #10407 修复使用 SLOW_QUERY 表查询慢日志时，单行慢日志长度过长导致的报错 #10412 修复某些情况下 DATETIME 和 INTERVAL 相加的结果跟 MySQL 不一致的问题 #10416，#10418 增加闰年二月的非法时间的检查 #10417 内部的初始化操作限制只在 DDL Owner 中执行，避免了初始化集群的时候出现的大量冲突报错 #10426 修复 DESC 在输出时间戳列的默认值为 default current_timestamp on update current_timestamp 时跟 MySQL 不兼容的问题 #10337 修复 Update 语句中权限检查出错的问题 #10439 修复 CHAR 类型的列在某些情况下 RANGE 计算错误导致的错误结果的问题 #10455 避免 ALTER SHARD_ROW_ID_BITS 缩小 shard bits 位数在极低概率下，可能导致的数据错误 #9868 修复 ORDER BY RAND() 不返回随机数字的问题 #10064 禁止 ALTER 语句修改 DECIMAL 的精度 #10458 修复 TIME_FORMAT 函数与 MySQL 的兼容问题 #10474 检查 PERIOD_ADD 中参数的合法性 #10430 修复非法的 YEAR 字符串在 TiDB 中的表现跟 MySQL 不兼容的问题 #10493 支持 ALTER DATABASE 语法 #10503 修复 SLOW_QUERY 内存表在慢语句没有 ; 的情况下报错的问题 #10536 修复某些情况下 Partitioned Table 的表 Add index 操作没有办法取消的问题 #10533 修复在某些情况下无法抓住内存使用太多导致 OOM 的问题 #10545 增强 DDL 操作改写表元信息的安全性 #10547  PD  修复 Leader 优先级不生效的问题 #1533  TiKV  拒绝在最近发生过成员变更的 Region 上执行 transfer leader，防止迁移失败 #4684 Coprocessor metrics 上添加 priority 标签 #4643 修复 transfer leader 中可能发生的脏读问题 #4724 修复某些情况下 CommitMerge 导致 TiKV 不能重启的问题 #4615 修复 unknown 的日志 #4730  Tools  TiDB Lightning  新增 TiDB Lightning 发送数据到 importer 失败时进行重试 #176   TiDB Binlog  优化 Pump storage 组件 log，以利于排查问题 #607    TiDB Ansible  更新 TiDB Lightning 配置文件，新增 tidb_lightning_ctl 脚本 #d3a4a368  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.10 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.1.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.1.10/</guid>
      <description>TiDB 2.1.10 Release Notes 发版日期：2019 年 5 月 22 日
TiDB 版本：2.1.10
TiDB Ansible 版本：2.1.10
TiDB  修复在使用 tidb_snapshot 读取历史数据的时候，某些异常情况导致的表结构不正确 #10359 修复 NOT 函数在某些情况下导致的读取结果错误的问题 #10363 修复 Generated Column 在 Replace 或者 Insert on duplicate update 语句中的错误行为 #10385 修复 BETWEEN 函数在 DATE/DATETIME 类型比较的一个 bug #10407 修复使用 SLOW_QUERY 表查询慢日志时，单行慢日志长度过长导致的报错 #10412 修复某些情况下 DATETIME 和 INTERVAL 相加的结果跟 MySQL 不一致的问题 #10416，#10418 增加闰年二月的非法时间的检查 #10417 内部的初始化操作限制只在 DDL Owner 中执行，避免了初始化集群的时候出现的大量冲突报错 #10426 修复 DESC 在输出时间戳列的默认值为 default current_timestamp on update current_timestamp 时跟 MySQL 不兼容的问题 #10337 修复 Update 语句中权限检查出错的问题 #10439 修复 CHAR 类型的列在某些情况下 RANGE 计算错误导致的错误结果的问题 #10455 避免 ALTER SHARD_ROW_ID_BITS 缩小 shard bits 位数在极低概率下，可能导致的数据错误 #9868 修复 ORDER BY RAND() 不返回随机数字的问题 #10064 禁止 ALTER 语句修改 DECIMAL 的精度 #10458 修复 TIME_FORMAT 函数与 MySQL 的兼容问题 #10474 检查 PERIOD_ADD 中参数的合法性 #10430 修复非法的 YEAR 字符串在 TiDB 中的表现跟 MySQL 不兼容的问题 #10493 支持 ALTER DATABASE 语法 #10503 修复 SLOW_QUERY 内存表在慢语句没有 ; 的情况下报错的问题 #10536 修复某些情况下 Partitioned Table 的表 Add index 操作没有办法取消的问题 #10533 修复在某些情况下无法抓住内存使用太多导致 OOM 的问题 #10545 增强 DDL 操作改写表元信息的安全性 #10547  PD  修复 Leader 优先级不生效的问题 #1533  TiKV  拒绝在最近发生过成员变更的 Region 上执行 transfer leader，防止迁移失败 #4684 Coprocessor metrics 上添加 priority 标签 #4643 修复 transfer leader 中可能发生的脏读问题 #4724 修复某些情况下 CommitMerge 导致 TiKV 不能重启的问题 #4615 修复 unknown 的日志 #4730  Tools  TiDB Lightning  新增 TiDB Lightning 发送数据到 importer 失败时进行重试 #176   TiDB Binlog  优化 Pump storage 组件 log，以利于排查问题 #607    TiDB Ansible  更新 TiDB Lightning 配置文件，新增 tidb_lightning_ctl 脚本 #d3a4a368  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.10 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.1.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.1.10/</guid>
      <description>TiDB 2.1.10 Release Notes 发版日期：2019 年 5 月 22 日
TiDB 版本：2.1.10
TiDB Ansible 版本：2.1.10
TiDB  修复在使用 tidb_snapshot 读取历史数据的时候，某些异常情况导致的表结构不正确 #10359 修复 NOT 函数在某些情况下导致的读取结果错误的问题 #10363 修复 Generated Column 在 Replace 或者 Insert on duplicate update 语句中的错误行为 #10385 修复 BETWEEN 函数在 DATE/DATETIME 类型比较的一个 bug #10407 修复使用 SLOW_QUERY 表查询慢日志时，单行慢日志长度过长导致的报错 #10412 修复某些情况下 DATETIME 和 INTERVAL 相加的结果跟 MySQL 不一致的问题 #10416，#10418 增加闰年二月的非法时间的检查 #10417 内部的初始化操作限制只在 DDL Owner 中执行，避免了初始化集群的时候出现的大量冲突报错 #10426 修复 DESC 在输出时间戳列的默认值为 default current_timestamp on update current_timestamp 时跟 MySQL 不兼容的问题 #10337 修复 Update 语句中权限检查出错的问题 #10439 修复 CHAR 类型的列在某些情况下 RANGE 计算错误导致的错误结果的问题 #10455 避免 ALTER SHARD_ROW_ID_BITS 缩小 shard bits 位数在极低概率下，可能导致的数据错误 #9868 修复 ORDER BY RAND() 不返回随机数字的问题 #10064 禁止 ALTER 语句修改 DECIMAL 的精度 #10458 修复 TIME_FORMAT 函数与 MySQL 的兼容问题 #10474 检查 PERIOD_ADD 中参数的合法性 #10430 修复非法的 YEAR 字符串在 TiDB 中的表现跟 MySQL 不兼容的问题 #10493 支持 ALTER DATABASE 语法 #10503 修复 SLOW_QUERY 内存表在慢语句没有 ; 的情况下报错的问题 #10536 修复某些情况下 Partitioned Table 的表 Add index 操作没有办法取消的问题 #10533 修复在某些情况下无法抓住内存使用太多导致 OOM 的问题 #10545 增强 DDL 操作改写表元信息的安全性 #10547  PD  修复 Leader 优先级不生效的问题 #1533  TiKV  拒绝在最近发生过成员变更的 Region 上执行 transfer leader，防止迁移失败 #4684 Coprocessor metrics 上添加 priority 标签 #4643 修复 transfer leader 中可能发生的脏读问题 #4724 修复某些情况下 CommitMerge 导致 TiKV 不能重启的问题 #4615 修复 unknown 的日志 #4730  Tools  TiDB Lightning  新增 TiDB Lightning 发送数据到 importer 失败时进行重试 #176   TiDB Binlog  优化 Pump storage 组件 log，以利于排查问题 #607    TiDB Ansible  更新 TiDB Lightning 配置文件，新增 tidb_lightning_ctl 脚本 #d3a4a368  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.10 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.1.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.1.10/</guid>
      <description>TiDB 2.1.10 Release Notes 发版日期：2019 年 5 月 22 日
TiDB 版本：2.1.10
TiDB Ansible 版本：2.1.10
TiDB  修复在使用 tidb_snapshot 读取历史数据的时候，某些异常情况导致的表结构不正确 #10359 修复 NOT 函数在某些情况下导致的读取结果错误的问题 #10363 修复 Generated Column 在 Replace 或者 Insert on duplicate update 语句中的错误行为 #10385 修复 BETWEEN 函数在 DATE/DATETIME 类型比较的一个 bug #10407 修复使用 SLOW_QUERY 表查询慢日志时，单行慢日志长度过长导致的报错 #10412 修复某些情况下 DATETIME 和 INTERVAL 相加的结果跟 MySQL 不一致的问题 #10416，#10418 增加闰年二月的非法时间的检查 #10417 内部的初始化操作限制只在 DDL Owner 中执行，避免了初始化集群的时候出现的大量冲突报错 #10426 修复 DESC 在输出时间戳列的默认值为 default current_timestamp on update current_timestamp 时跟 MySQL 不兼容的问题 #10337 修复 Update 语句中权限检查出错的问题 #10439 修复 CHAR 类型的列在某些情况下 RANGE 计算错误导致的错误结果的问题 #10455 避免 ALTER SHARD_ROW_ID_BITS 缩小 shard bits 位数在极低概率下，可能导致的数据错误 #9868 修复 ORDER BY RAND() 不返回随机数字的问题 #10064 禁止 ALTER 语句修改 DECIMAL 的精度 #10458 修复 TIME_FORMAT 函数与 MySQL 的兼容问题 #10474 检查 PERIOD_ADD 中参数的合法性 #10430 修复非法的 YEAR 字符串在 TiDB 中的表现跟 MySQL 不兼容的问题 #10493 支持 ALTER DATABASE 语法 #10503 修复 SLOW_QUERY 内存表在慢语句没有 ; 的情况下报错的问题 #10536 修复某些情况下 Partitioned Table 的表 Add index 操作没有办法取消的问题 #10533 修复在某些情况下无法抓住内存使用太多导致 OOM 的问题 #10545 增强 DDL 操作改写表元信息的安全性 #10547  PD  修复 Leader 优先级不生效的问题 #1533  TiKV  拒绝在最近发生过成员变更的 Region 上执行 transfer leader，防止迁移失败 #4684 Coprocessor metrics 上添加 priority 标签 #4643 修复 transfer leader 中可能发生的脏读问题 #4724 修复某些情况下 CommitMerge 导致 TiKV 不能重启的问题 #4615 修复 unknown 的日志 #4730  Tools  TiDB Lightning  新增 TiDB Lightning 发送数据到 importer 失败时进行重试 #176   TiDB Binlog  优化 Pump storage 组件 log，以利于排查问题 #607    TiDB Ansible  更新 TiDB Lightning 配置文件，新增 tidb_lightning_ctl 脚本 #d3a4a368  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.10 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.1.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.1.10/</guid>
      <description>TiDB 2.1.10 Release Notes Release date: May 22, 2019
TiDB version: 2.1.10
TiDB Ansible version: 2.1.10
TiDB  Fix the issue that some abnormalities cause incorrect table schema when using tidb_snapshot to read the history data #10359 Fix the issue that the NOT function causes wrong read results in some cases #10363 Fix the wrong behavior of Generated Column in the Replace or Insert on duplicate update statement #10385 Fix a bug of the BETWEEN function in the DATE/DATETIME comparison #10407 Fix the issue that a single line of a slow log that is too long causes an error report when using the SLOW_QUERY table to query a slow log #10412 Fix the issue that the result of DATETIME plus INTERVAL is not the same with that of MySQL in some cases #10416, #10418 Add the check for the invalid time of February in a leap year #10417 Execute the internal initialization operation limitation only in the DDL owner to avoid a large number of conflict error reports when initializing the cluster #10426 Fix the issue that DESC is incompatible with MySQL when the default value of the output timestamp column is default current_timestamp on update current_timestamp #10337 Fix the issue that an error occurs during the privilege check in the Update statement #10439 Fix the issue that wrong calculation of RANGE causes a wrong result in the CHAR column in some cases #10455 Fix the issue that the data might be overwritten after decreasing SHARD_ROW_ID_BITS #9868 Fix the issue that ORDER BY RAND() does not return random numbers #10064 Prohibit the ALTER statement modifying the precision of decimals #10458 Fix the compatibility issue of the TIME_FORMAT function with MySQL #10474 Check the parameter validity of PERIOD_ADD #10430 Fix the issue that the behavior of the invalid YEAR string in TiDB is incompatible with that in MySQL #10493 Support the ALTER DATABASE syntax #10503 Fix the issue that the SLOW_QUERY memory engine reports an error when no ; exists in the slow query statement #10536 Fix the issue that the Add index operation in partitioned tables cannot be canceled in some cases #10533 Fix the issue that the OOM panic cannot be recovered in some cases #10545 Improve the security of the DDL operation rewriting the table metadata #10547  PD  Fix the issue that the priority of the leader does not take effect #1533  TiKV  Reject transferring the leader in a Region whose configuration has been changed recently to avoid transfer failure #4684 Add the priority label for Coprocessor metrics #4643 Fix the possible dirty read issue during transferring the leader #4724 Fix the issue that CommitMerge causes the restart failure of TiKV in some cases #4615 Fix unknown logs #4730  Tools  TiDB Lightning  Add the retry feature when TiDB Lightning fails to send data to importer #176   TiDB Binlog  Optimize the Pump storage log to facilitate troubleshooting #607    TiDB Ansible  Update the configuration file of TiDB Lightning and add the tidb_lightning_ctl script #d3a4a368  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.10 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.1.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.1.10/</guid>
      <description>TiDB 2.1.10 Release Notes Release date: May 22, 2019
TiDB version: 2.1.10
TiDB Ansible version: 2.1.10
TiDB  Fix the issue that some abnormalities cause incorrect table schema when using tidb_snapshot to read the history data #10359 Fix the issue that the NOT function causes wrong read results in some cases #10363 Fix the wrong behavior of Generated Column in the Replace or Insert on duplicate update statement #10385 Fix a bug of the BETWEEN function in the DATE/DATETIME comparison #10407 Fix the issue that a single line of a slow log that is too long causes an error report when using the SLOW_QUERY table to query a slow log #10412 Fix the issue that the result of DATETIME plus INTERVAL is not the same with that of MySQL in some cases #10416, #10418 Add the check for the invalid time of February in a leap year #10417 Execute the internal initialization operation limitation only in the DDL owner to avoid a large number of conflict error reports when initializing the cluster #10426 Fix the issue that DESC is incompatible with MySQL when the default value of the output timestamp column is default current_timestamp on update current_timestamp #10337 Fix the issue that an error occurs during the privilege check in the Update statement #10439 Fix the issue that wrong calculation of RANGE causes a wrong result in the CHAR column in some cases #10455 Fix the issue that the data might be overwritten after decreasing SHARD_ROW_ID_BITS #9868 Fix the issue that ORDER BY RAND() does not return random numbers #10064 Prohibit the ALTER statement modifying the precision of decimals #10458 Fix the compatibility issue of the TIME_FORMAT function with MySQL #10474 Check the parameter validity of PERIOD_ADD #10430 Fix the issue that the behavior of the invalid YEAR string in TiDB is incompatible with that in MySQL #10493 Support the ALTER DATABASE syntax #10503 Fix the issue that the SLOW_QUERY memory engine reports an error when no ; exists in the slow query statement #10536 Fix the issue that the Add index operation in partitioned tables cannot be canceled in some cases #10533 Fix the issue that the OOM panic cannot be recovered in some cases #10545 Improve the security of the DDL operation rewriting the table metadata #10547  PD  Fix the issue that the priority of the leader does not take effect #1533  TiKV  Reject transferring the leader in a Region whose configuration has been changed recently to avoid transfer failure #4684 Add the priority label for Coprocessor metrics #4643 Fix the possible dirty read issue during transferring the leader #4724 Fix the issue that CommitMerge causes the restart failure of TiKV in some cases #4615 Fix unknown logs #4730  Tools  TiDB Lightning  Add the retry feature when TiDB Lightning fails to send data to importer #176   TiDB Binlog  Optimize the Pump storage log to facilitate troubleshooting #607    TiDB Ansible  Update the configuration file of TiDB Lightning and add the tidb_lightning_ctl script #d3a4a368  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.10 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.1.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.1.10/</guid>
      <description>TiDB 2.1.10 Release Notes Release date: May 22, 2019
TiDB version: 2.1.10
TiDB Ansible version: 2.1.10
TiDB  Fix the issue that some abnormalities cause incorrect table schema when using tidb_snapshot to read the history data #10359 Fix the issue that the NOT function causes wrong read results in some cases #10363 Fix the wrong behavior of Generated Column in the Replace or Insert on duplicate update statement #10385 Fix a bug of the BETWEEN function in the DATE/DATETIME comparison #10407 Fix the issue that a single line of a slow log that is too long causes an error report when using the SLOW_QUERY table to query a slow log #10412 Fix the issue that the result of DATETIME plus INTERVAL is not the same with that of MySQL in some cases #10416, #10418 Add the check for the invalid time of February in a leap year #10417 Execute the internal initialization operation limitation only in the DDL owner to avoid a large number of conflict error reports when initializing the cluster #10426 Fix the issue that DESC is incompatible with MySQL when the default value of the output timestamp column is default current_timestamp on update current_timestamp #10337 Fix the issue that an error occurs during the privilege check in the Update statement #10439 Fix the issue that wrong calculation of RANGE causes a wrong result in the CHAR column in some cases #10455 Fix the issue that the data might be overwritten after decreasing SHARD_ROW_ID_BITS #9868 Fix the issue that ORDER BY RAND() does not return random numbers #10064 Prohibit the ALTER statement modifying the precision of decimals #10458 Fix the compatibility issue of the TIME_FORMAT function with MySQL #10474 Check the parameter validity of PERIOD_ADD #10430 Fix the issue that the behavior of the invalid YEAR string in TiDB is incompatible with that in MySQL #10493 Support the ALTER DATABASE syntax #10503 Fix the issue that the SLOW_QUERY memory engine reports an error when no ; exists in the slow query statement #10536 Fix the issue that the Add index operation in partitioned tables cannot be canceled in some cases #10533 Fix the issue that the OOM panic cannot be recovered in some cases #10545 Improve the security of the DDL operation rewriting the table metadata #10547  PD  Fix the issue that the priority of the leader does not take effect #1533  TiKV  Reject transferring the leader in a Region whose configuration has been changed recently to avoid transfer failure #4684 Add the priority label for Coprocessor metrics #4643 Fix the possible dirty read issue during transferring the leader #4724 Fix the issue that CommitMerge causes the restart failure of TiKV in some cases #4615 Fix unknown logs #4730  Tools  TiDB Lightning  Add the retry feature when TiDB Lightning fails to send data to importer #176   TiDB Binlog  Optimize the Pump storage log to facilitate troubleshooting #607    TiDB Ansible  Update the configuration file of TiDB Lightning and add the tidb_lightning_ctl script #d3a4a368  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.10 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.1.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.1.10/</guid>
      <description>TiDB 2.1.10 Release Notes Release date: May 22, 2019
TiDB version: 2.1.10
TiDB Ansible version: 2.1.10
TiDB  Fix the issue that some abnormalities cause incorrect table schema when using tidb_snapshot to read the history data #10359 Fix the issue that the NOT function causes wrong read results in some cases #10363 Fix the wrong behavior of Generated Column in the Replace or Insert on duplicate update statement #10385 Fix a bug of the BETWEEN function in the DATE/DATETIME comparison #10407 Fix the issue that a single line of a slow log that is too long causes an error report when using the SLOW_QUERY table to query a slow log #10412 Fix the issue that the result of DATETIME plus INTERVAL is not the same with that of MySQL in some cases #10416, #10418 Add the check for the invalid time of February in a leap year #10417 Execute the internal initialization operation limitation only in the DDL owner to avoid a large number of conflict error reports when initializing the cluster #10426 Fix the issue that DESC is incompatible with MySQL when the default value of the output timestamp column is default current_timestamp on update current_timestamp #10337 Fix the issue that an error occurs during the privilege check in the Update statement #10439 Fix the issue that wrong calculation of RANGE causes a wrong result in the CHAR column in some cases #10455 Fix the issue that the data might be overwritten after decreasing SHARD_ROW_ID_BITS #9868 Fix the issue that ORDER BY RAND() does not return random numbers #10064 Prohibit the ALTER statement modifying the precision of decimals #10458 Fix the compatibility issue of the TIME_FORMAT function with MySQL #10474 Check the parameter validity of PERIOD_ADD #10430 Fix the issue that the behavior of the invalid YEAR string in TiDB is incompatible with that in MySQL #10493 Support the ALTER DATABASE syntax #10503 Fix the issue that the SLOW_QUERY memory engine reports an error when no ; exists in the slow query statement #10536 Fix the issue that the Add index operation in partitioned tables cannot be canceled in some cases #10533 Fix the issue that the OOM panic cannot be recovered in some cases #10545 Improve the security of the DDL operation rewriting the table metadata #10547  PD  Fix the issue that the priority of the leader does not take effect #1533  TiKV  Reject transferring the leader in a Region whose configuration has been changed recently to avoid transfer failure #4684 Add the priority label for Coprocessor metrics #4643 Fix the possible dirty read issue during transferring the leader #4724 Fix the issue that CommitMerge causes the restart failure of TiKV in some cases #4615 Fix unknown logs #4730  Tools  TiDB Lightning  Add the retry feature when TiDB Lightning fails to send data to importer #176   TiDB Binlog  Optimize the Pump storage log to facilitate troubleshooting #607    TiDB Ansible  Update the configuration file of TiDB Lightning and add the tidb_lightning_ctl script #d3a4a368  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.11 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.1.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.1.11/</guid>
      <description>TiDB 2.1.11 Release Notes 发版日期：2019 年 6 月 03 日
TiDB 版本：2.1.11
TiDB Ansible 版本：2.1.11
TiDB  修复 delete 多表 join 的结果时使用错误 schema 的问题 #10595 修复 CONVERT() 函数返回错误的字段类型的问题 #10263 更新统计信息时合并不重叠的反馈信息 #10569 修复 unix_timestamp()-unix_timestamp(now()) 计算错误的问题 #10491 修复 period_diff 与 MySQL 8.0 不兼容的问题 #10501 收集统计信息的时候，忽略 Virtual Column，避免异常报错 #10628 支持 SHOW OPEN TABLES 语句 #10374 修复某些情况下导致的 goroutine 泄露问题 #10656 修复某些情况下设置 tidb_snapshot 变量时间格式解析出错的问题 #10637  PD  修复因为 balance-region 可能会导致热点 Region 没有机会调度的问题 #1551 将热点相关调度的优先级改为高优先级 #1551 新增配置项 hot-region-schedule-limit 控制同时进行热点调度任务的数量及新增 hot-region-cache-hits-threshold 控制判断是否为热点 Region #1551  TiKV  修复在仅有一个 leader，learner 时，learner 读到空 index 的问题 #4751 将 ScanLock 和 ResolveLock 放在高优先级线程池中处理，减少对普通优先级命令的影响 #4791 同步所有收到的 snapshot 的文件 #4811  Tools  TiDB Binlog  新增 GC 删数据限速功能，避免因为删除数据导致 QPS 降低的问题 #620    TiDB Ansible  新增 Drainer 参数 #760  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.11 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.1.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.1.11/</guid>
      <description>TiDB 2.1.11 Release Notes 发版日期：2019 年 6 月 03 日
TiDB 版本：2.1.11
TiDB Ansible 版本：2.1.11
TiDB  修复 delete 多表 join 的结果时使用错误 schema 的问题 #10595 修复 CONVERT() 函数返回错误的字段类型的问题 #10263 更新统计信息时合并不重叠的反馈信息 #10569 修复 unix_timestamp()-unix_timestamp(now()) 计算错误的问题 #10491 修复 period_diff 与 MySQL 8.0 不兼容的问题 #10501 收集统计信息的时候，忽略 Virtual Column，避免异常报错 #10628 支持 SHOW OPEN TABLES 语句 #10374 修复某些情况下导致的 goroutine 泄露问题 #10656 修复某些情况下设置 tidb_snapshot 变量时间格式解析出错的问题 #10637  PD  修复因为 balance-region 可能会导致热点 Region 没有机会调度的问题 #1551 将热点相关调度的优先级改为高优先级 #1551 新增配置项 hot-region-schedule-limit 控制同时进行热点调度任务的数量及新增 hot-region-cache-hits-threshold 控制判断是否为热点 Region #1551  TiKV  修复在仅有一个 leader，learner 时，learner 读到空 index 的问题 #4751 将 ScanLock 和 ResolveLock 放在高优先级线程池中处理，减少对普通优先级命令的影响 #4791 同步所有收到的 snapshot 的文件 #4811  Tools  TiDB Binlog  新增 GC 删数据限速功能，避免因为删除数据导致 QPS 降低的问题 #620    TiDB Ansible  新增 Drainer 参数 #760  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.11 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.1.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.1.11/</guid>
      <description>TiDB 2.1.11 Release Notes 发版日期：2019 年 6 月 03 日
TiDB 版本：2.1.11
TiDB Ansible 版本：2.1.11
TiDB  修复 delete 多表 join 的结果时使用错误 schema 的问题 #10595 修复 CONVERT() 函数返回错误的字段类型的问题 #10263 更新统计信息时合并不重叠的反馈信息 #10569 修复 unix_timestamp()-unix_timestamp(now()) 计算错误的问题 #10491 修复 period_diff 与 MySQL 8.0 不兼容的问题 #10501 收集统计信息的时候，忽略 Virtual Column，避免异常报错 #10628 支持 SHOW OPEN TABLES 语句 #10374 修复某些情况下导致的 goroutine 泄露问题 #10656 修复某些情况下设置 tidb_snapshot 变量时间格式解析出错的问题 #10637  PD  修复因为 balance-region 可能会导致热点 Region 没有机会调度的问题 #1551 将热点相关调度的优先级改为高优先级 #1551 新增配置项 hot-region-schedule-limit 控制同时进行热点调度任务的数量及新增 hot-region-cache-hits-threshold 控制判断是否为热点 Region #1551  TiKV  修复在仅有一个 leader，learner 时，learner 读到空 index 的问题 #4751 将 ScanLock 和 ResolveLock 放在高优先级线程池中处理，减少对普通优先级命令的影响 #4791 同步所有收到的 snapshot 的文件 #4811  Tools  TiDB Binlog  新增 GC 删数据限速功能，避免因为删除数据导致 QPS 降低的问题 #620    TiDB Ansible  新增 Drainer 参数 #760  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.11 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.1.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.1.11/</guid>
      <description>TiDB 2.1.11 Release Notes 发版日期：2019 年 6 月 03 日
TiDB 版本：2.1.11
TiDB Ansible 版本：2.1.11
TiDB  修复 delete 多表 join 的结果时使用错误 schema 的问题 #10595 修复 CONVERT() 函数返回错误的字段类型的问题 #10263 更新统计信息时合并不重叠的反馈信息 #10569 修复 unix_timestamp()-unix_timestamp(now()) 计算错误的问题 #10491 修复 period_diff 与 MySQL 8.0 不兼容的问题 #10501 收集统计信息的时候，忽略 Virtual Column，避免异常报错 #10628 支持 SHOW OPEN TABLES 语句 #10374 修复某些情况下导致的 goroutine 泄露问题 #10656 修复某些情况下设置 tidb_snapshot 变量时间格式解析出错的问题 #10637  PD  修复因为 balance-region 可能会导致热点 Region 没有机会调度的问题 #1551 将热点相关调度的优先级改为高优先级 #1551 新增配置项 hot-region-schedule-limit 控制同时进行热点调度任务的数量及新增 hot-region-cache-hits-threshold 控制判断是否为热点 Region #1551  TiKV  修复在仅有一个 leader，learner 时，learner 读到空 index 的问题 #4751 将 ScanLock 和 ResolveLock 放在高优先级线程池中处理，减少对普通优先级命令的影响 #4791 同步所有收到的 snapshot 的文件 #4811  Tools  TiDB Binlog  新增 GC 删数据限速功能，避免因为删除数据导致 QPS 降低的问题 #620    TiDB Ansible  新增 Drainer 参数 #760  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.11 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.1.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.1.11/</guid>
      <description>TiDB 2.1.11 Release Notes Release date: June 03, 2019
TiDB version: 2.1.11
TiDB Ansible version: 2.1.11
TiDB  Fix the issue that incorrect schema is used for delete from join #10595 Fix the issue that the built-in CONVERT() may return incorrect field type #10263 Merge non-overlapped feedback when updating bucket count #10569 Fix calculation errors of unix_timestamp()-unix_timestamp(now()) #10491 Fix the incompatibility issue of period_diff with MySQL 8.0 #10501 Skip Virtual Column when collecting statistics to avoid exceptions #10628 Support the SHOW OPEN TABLES statement #10374 Fix the issue that goroutine leak may happen in some cases #10656 Fix the issue that setting the tidb_snapshot variable in some cases may cause incorrect parsing of time format #10637  PD  Fix the issue that hots Region may fail to be scheduled due to balance-region #1551 Set hotspot related scheduling priorities to high #1551 Add two configuration items #1551  hot-region-schedule-limit to control the maximum number of concurrent hotspot scheduling tasks hot-region-cache-hits-threshold to identify a hot Region    TiKV  Fix the issue that the learner reads an empty index when there is only one leader and one learner #4751 Process ScanLock and ResolveLock in the thread pool with a high priority to reduce their impacts on commands with a normal priority #4791 Sync all files of received snapshots #4811  Tools  TiDB Binlog  Limit data deletion speed during GC to avoid QPS degrading caused by WritePause #620    TiDB Ansible  Add Drainer parameters #760  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.11 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.1.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.1.11/</guid>
      <description>TiDB 2.1.11 Release Notes Release date: June 03, 2019
TiDB version: 2.1.11
TiDB Ansible version: 2.1.11
TiDB  Fix the issue that incorrect schema is used for delete from join #10595 Fix the issue that the built-in CONVERT() may return incorrect field type #10263 Merge non-overlapped feedback when updating bucket count #10569 Fix calculation errors of unix_timestamp()-unix_timestamp(now()) #10491 Fix the incompatibility issue of period_diff with MySQL 8.0 #10501 Skip Virtual Column when collecting statistics to avoid exceptions #10628 Support the SHOW OPEN TABLES statement #10374 Fix the issue that goroutine leak may happen in some cases #10656 Fix the issue that setting the tidb_snapshot variable in some cases may cause incorrect parsing of time format #10637  PD  Fix the issue that hots Region may fail to be scheduled due to balance-region #1551 Set hotspot related scheduling priorities to high #1551 Add two configuration items #1551  hot-region-schedule-limit to control the maximum number of concurrent hotspot scheduling tasks hot-region-cache-hits-threshold to identify a hot Region    TiKV  Fix the issue that the learner reads an empty index when there is only one leader and one learner #4751 Process ScanLock and ResolveLock in the thread pool with a high priority to reduce their impacts on commands with a normal priority #4791 Sync all files of received snapshots #4811  Tools  TiDB Binlog  Limit data deletion speed during GC to avoid QPS degrading caused by WritePause #620    TiDB Ansible  Add Drainer parameters #760  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.11 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.1.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.1.11/</guid>
      <description>TiDB 2.1.11 Release Notes Release date: June 03, 2019
TiDB version: 2.1.11
TiDB Ansible version: 2.1.11
TiDB  Fix the issue that incorrect schema is used for delete from join #10595 Fix the issue that the built-in CONVERT() may return incorrect field type #10263 Merge non-overlapped feedback when updating bucket count #10569 Fix calculation errors of unix_timestamp()-unix_timestamp(now()) #10491 Fix the incompatibility issue of period_diff with MySQL 8.0 #10501 Skip Virtual Column when collecting statistics to avoid exceptions #10628 Support the SHOW OPEN TABLES statement #10374 Fix the issue that goroutine leak may happen in some cases #10656 Fix the issue that setting the tidb_snapshot variable in some cases may cause incorrect parsing of time format #10637  PD  Fix the issue that hots Region may fail to be scheduled due to balance-region #1551 Set hotspot related scheduling priorities to high #1551 Add two configuration items #1551  hot-region-schedule-limit to control the maximum number of concurrent hotspot scheduling tasks hot-region-cache-hits-threshold to identify a hot Region    TiKV  Fix the issue that the learner reads an empty index when there is only one leader and one learner #4751 Process ScanLock and ResolveLock in the thread pool with a high priority to reduce their impacts on commands with a normal priority #4791 Sync all files of received snapshots #4811  Tools  TiDB Binlog  Limit data deletion speed during GC to avoid QPS degrading caused by WritePause #620    TiDB Ansible  Add Drainer parameters #760  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.11 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.1.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.1.11/</guid>
      <description>TiDB 2.1.11 Release Notes Release date: June 03, 2019
TiDB version: 2.1.11
TiDB Ansible version: 2.1.11
TiDB  Fix the issue that incorrect schema is used for delete from join #10595 Fix the issue that the built-in CONVERT() may return incorrect field type #10263 Merge non-overlapped feedback when updating bucket count #10569 Fix calculation errors of unix_timestamp()-unix_timestamp(now()) #10491 Fix the incompatibility issue of period_diff with MySQL 8.0 #10501 Skip Virtual Column when collecting statistics to avoid exceptions #10628 Support the SHOW OPEN TABLES statement #10374 Fix the issue that goroutine leak may happen in some cases #10656 Fix the issue that setting the tidb_snapshot variable in some cases may cause incorrect parsing of time format #10637  PD  Fix the issue that hots Region may fail to be scheduled due to balance-region #1551 Set hotspot related scheduling priorities to high #1551 Add two configuration items #1551  hot-region-schedule-limit to control the maximum number of concurrent hotspot scheduling tasks hot-region-cache-hits-threshold to identify a hot Region    TiKV  Fix the issue that the learner reads an empty index when there is only one leader and one learner #4751 Process ScanLock and ResolveLock in the thread pool with a high priority to reduce their impacts on commands with a normal priority #4791 Sync all files of received snapshots #4811  Tools  TiDB Binlog  Limit data deletion speed during GC to avoid QPS degrading caused by WritePause #620    TiDB Ansible  Add Drainer parameters #760  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.12 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.1.12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.1.12/</guid>
      <description>TiDB 2.1.12 Release Notes 发版日期：2019 年 6 月 13 日
TiDB 版本：2.1.12
TiDB Ansible 版本：2.1.12
TiDB  修复在使用 feedback 时由于类型不匹配导致进程 panic 的问题 #10755 修复某些情况下改变字符集导致 BLOB 类型变成 TEXT 类型的问题 #10745 修复某些情况下在事务中的 GRANT 操作误报 &amp;ldquo;Duplicate Entry&amp;rdquo; 错误的问题 #10739 提升以下功能跟 MySQL 的兼容性  DAYNAME 函数 #10732 MONTHNAME 函数 #10733 EXTRACT 函数在处理 MONTH 的时候支持零值 #10702 DECIMAL 类型转换成 TIMESTAMP 或者 DATETIME 类型 #10734   修改表的字符集时，同步修改列的字符集 #10714 修复某些情况下 DECIMAL 转换成浮点数的溢出问题 #10730 修复 TiDB 跟 TiKV 在 gRPC 最大封包设置不一致导致的某些超大封包报 &amp;ldquo;grpc: received message larger than max&amp;rdquo; 错误的问题 #10710 修复某些情况下 ORDER BY 没有过滤 NULL 值导致的 panic 问题 #10488 修复 UUID 函数的返回值，在多机器情况可能出现重复的问题 #10711 CAST(-num as datetime) 的返回值由错误变更为 NULL 值 #10703 修复某些情况下 unsigned 列直方图遇到 signed 越界的问题 #10695 修复统计信息的 feedback 遇到 bigint unsigned 主键时处理不正确导致读数据时报错的问题 #10307 修复分区表某些情况下 Show Create Table 结果显示不正确的问题 #10690 修复在某些关联子查询上聚合函数 GROUP_CONCAT 计算不正确的问题 #10670 修复某些情况下 slow query 内存表在解析慢日志的时候导致的显示结果错乱的问题 #10776  PD  修复极端情况下 etcd Leader 选举阻塞的问题 #1576  TiKV  修复极端条件下 Leader 迁移过程中 Region 不可用的问题 #4799 修复在机器异常掉电时由于接收 snapshot 未及时将数据刷新到磁盘导致丢数据的问题 #4850  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.12 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.1.12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.1.12/</guid>
      <description>TiDB 2.1.12 Release Notes 发版日期：2019 年 6 月 13 日
TiDB 版本：2.1.12
TiDB Ansible 版本：2.1.12
TiDB  修复在使用 feedback 时由于类型不匹配导致进程 panic 的问题 #10755 修复某些情况下改变字符集导致 BLOB 类型变成 TEXT 类型的问题 #10745 修复某些情况下在事务中的 GRANT 操作误报 &amp;ldquo;Duplicate Entry&amp;rdquo; 错误的问题 #10739 提升以下功能跟 MySQL 的兼容性  DAYNAME 函数 #10732 MONTHNAME 函数 #10733 EXTRACT 函数在处理 MONTH 的时候支持零值 #10702 DECIMAL 类型转换成 TIMESTAMP 或者 DATETIME 类型 #10734   修改表的字符集时，同步修改列的字符集 #10714 修复某些情况下 DECIMAL 转换成浮点数的溢出问题 #10730 修复 TiDB 跟 TiKV 在 gRPC 最大封包设置不一致导致的某些超大封包报 &amp;ldquo;grpc: received message larger than max&amp;rdquo; 错误的问题 #10710 修复某些情况下 ORDER BY 没有过滤 NULL 值导致的 panic 问题 #10488 修复 UUID 函数的返回值，在多机器情况可能出现重复的问题 #10711 CAST(-num as datetime) 的返回值由错误变更为 NULL 值 #10703 修复某些情况下 unsigned 列直方图遇到 signed 越界的问题 #10695 修复统计信息的 feedback 遇到 bigint unsigned 主键时处理不正确导致读数据时报错的问题 #10307 修复分区表某些情况下 Show Create Table 结果显示不正确的问题 #10690 修复在某些关联子查询上聚合函数 GROUP_CONCAT 计算不正确的问题 #10670 修复某些情况下 slow query 内存表在解析慢日志的时候导致的显示结果错乱的问题 #10776  PD  修复极端情况下 etcd Leader 选举阻塞的问题 #1576  TiKV  修复极端条件下 Leader 迁移过程中 Region 不可用的问题 #4799 修复在机器异常掉电时由于接收 snapshot 未及时将数据刷新到磁盘导致丢数据的问题 #4850  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.12 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.1.12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.1.12/</guid>
      <description>TiDB 2.1.12 Release Notes 发版日期：2019 年 6 月 13 日
TiDB 版本：2.1.12
TiDB Ansible 版本：2.1.12
TiDB  修复在使用 feedback 时由于类型不匹配导致进程 panic 的问题 #10755 修复某些情况下改变字符集导致 BLOB 类型变成 TEXT 类型的问题 #10745 修复某些情况下在事务中的 GRANT 操作误报 &amp;ldquo;Duplicate Entry&amp;rdquo; 错误的问题 #10739 提升以下功能跟 MySQL 的兼容性  DAYNAME 函数 #10732 MONTHNAME 函数 #10733 EXTRACT 函数在处理 MONTH 的时候支持零值 #10702 DECIMAL 类型转换成 TIMESTAMP 或者 DATETIME 类型 #10734   修改表的字符集时，同步修改列的字符集 #10714 修复某些情况下 DECIMAL 转换成浮点数的溢出问题 #10730 修复 TiDB 跟 TiKV 在 gRPC 最大封包设置不一致导致的某些超大封包报 &amp;ldquo;grpc: received message larger than max&amp;rdquo; 错误的问题 #10710 修复某些情况下 ORDER BY 没有过滤 NULL 值导致的 panic 问题 #10488 修复 UUID 函数的返回值，在多机器情况可能出现重复的问题 #10711 CAST(-num as datetime) 的返回值由错误变更为 NULL 值 #10703 修复某些情况下 unsigned 列直方图遇到 signed 越界的问题 #10695 修复统计信息的 feedback 遇到 bigint unsigned 主键时处理不正确导致读数据时报错的问题 #10307 修复分区表某些情况下 Show Create Table 结果显示不正确的问题 #10690 修复在某些关联子查询上聚合函数 GROUP_CONCAT 计算不正确的问题 #10670 修复某些情况下 slow query 内存表在解析慢日志的时候导致的显示结果错乱的问题 #10776  PD  修复极端情况下 etcd Leader 选举阻塞的问题 #1576  TiKV  修复极端条件下 Leader 迁移过程中 Region 不可用的问题 #4799 修复在机器异常掉电时由于接收 snapshot 未及时将数据刷新到磁盘导致丢数据的问题 #4850  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.12 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.1.12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.1.12/</guid>
      <description>TiDB 2.1.12 Release Notes 发版日期：2019 年 6 月 13 日
TiDB 版本：2.1.12
TiDB Ansible 版本：2.1.12
TiDB  修复在使用 feedback 时由于类型不匹配导致进程 panic 的问题 #10755 修复某些情况下改变字符集导致 BLOB 类型变成 TEXT 类型的问题 #10745 修复某些情况下在事务中的 GRANT 操作误报 &amp;ldquo;Duplicate Entry&amp;rdquo; 错误的问题 #10739 提升以下功能跟 MySQL 的兼容性  DAYNAME 函数 #10732 MONTHNAME 函数 #10733 EXTRACT 函数在处理 MONTH 的时候支持零值 #10702 DECIMAL 类型转换成 TIMESTAMP 或者 DATETIME 类型 #10734   修改表的字符集时，同步修改列的字符集 #10714 修复某些情况下 DECIMAL 转换成浮点数的溢出问题 #10730 修复 TiDB 跟 TiKV 在 gRPC 最大封包设置不一致导致的某些超大封包报 &amp;ldquo;grpc: received message larger than max&amp;rdquo; 错误的问题 #10710 修复某些情况下 ORDER BY 没有过滤 NULL 值导致的 panic 问题 #10488 修复 UUID 函数的返回值，在多机器情况可能出现重复的问题 #10711 CAST(-num as datetime) 的返回值由错误变更为 NULL 值 #10703 修复某些情况下 unsigned 列直方图遇到 signed 越界的问题 #10695 修复统计信息的 feedback 遇到 bigint unsigned 主键时处理不正确导致读数据时报错的问题 #10307 修复分区表某些情况下 Show Create Table 结果显示不正确的问题 #10690 修复在某些关联子查询上聚合函数 GROUP_CONCAT 计算不正确的问题 #10670 修复某些情况下 slow query 内存表在解析慢日志的时候导致的显示结果错乱的问题 #10776  PD  修复极端情况下 etcd Leader 选举阻塞的问题 #1576  TiKV  修复极端条件下 Leader 迁移过程中 Region 不可用的问题 #4799 修复在机器异常掉电时由于接收 snapshot 未及时将数据刷新到磁盘导致丢数据的问题 #4850  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.12 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.1.12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.1.12/</guid>
      <description>TiDB 2.1.12 Release Notes Release date: June 13, 2019
TiDB version: 2.1.12
TiDB Ansible version: 2.1.12
TiDB  Fix the issue caused by unmatched data types when using the index query feedback #10755 Fix the issue that the blob column is changed to the text column caused by charset altering in some cases #10745 Fix the issue that the GRANT operation in the transaction mistakenly reports &amp;ldquo;Duplicate Entry&amp;rdquo; in some cases #10739 Improve the compatibility with MySQL of the following features  The DAYNAME function #10732 The MONTHNAME function #10733 Support the 0 value for the EXTRACT function when processing MONTH #10702 The DECIMAL type can be converted to TIMESTAMP or DATETIME #10734   Change the column charset while changing the table charset #10714 Fix the overflow issue when converting a decimal to a float in some cases #10730 Fix the issue that some extremely large messages report the &amp;ldquo;grpc: received message larger than max&amp;rdquo; error caused by inconsistent maximum sizes of messages sent/received by gRPC of TiDB and TiKV #10710 Fix the panic issue caused by ORDER BY not filtering NULL in some cases #10488 Fix the issue that values returned by the UUID function might be duplicate when multiple nodes exist #10711 Change the value returned by CAST(-num as datetime) from error to NULL #10703 Fix the issue that an unsigned histogram meets signed ranges in some cases #10695 Fix the issue that an error is reported mistakenly for reading data when the statistics feedback meets the bigint unsigned primary key #10307 Fix the issue that the result of Show Create Table for partitioned tables is not correctly displayed in some cases #10690 Fix the issue that the calculation result of the GROUP_CONCAT aggregate function is not correct for some correlated subqueries #10670 Fix the issue that the result is wrongly displayed when the memory table of slow queries parses the slow query log in some cases #10776  PD  Fix the issue that etcd leader election is blocked in extreme conditions #1576  TiKV  Fix the issue that Regions are not available during the leader transfer process in extreme conditions #4799 Fix the issue that TiKV loses data when the power of the machine fails abnormally, caused by delayed data flush to the disk when receiving snapshots #4850  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.12 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.1.12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.1.12/</guid>
      <description>TiDB 2.1.12 Release Notes Release date: June 13, 2019
TiDB version: 2.1.12
TiDB Ansible version: 2.1.12
TiDB  Fix the issue caused by unmatched data types when using the index query feedback #10755 Fix the issue that the blob column is changed to the text column caused by charset altering in some cases #10745 Fix the issue that the GRANT operation in the transaction mistakenly reports &amp;ldquo;Duplicate Entry&amp;rdquo; in some cases #10739 Improve the compatibility with MySQL of the following features  The DAYNAME function #10732 The MONTHNAME function #10733 Support the 0 value for the EXTRACT function when processing MONTH #10702 The DECIMAL type can be converted to TIMESTAMP or DATETIME #10734   Change the column charset while changing the table charset #10714 Fix the overflow issue when converting a decimal to a float in some cases #10730 Fix the issue that some extremely large messages report the &amp;ldquo;grpc: received message larger than max&amp;rdquo; error caused by inconsistent maximum sizes of messages sent/received by gRPC of TiDB and TiKV #10710 Fix the panic issue caused by ORDER BY not filtering NULL in some cases #10488 Fix the issue that values returned by the UUID function might be duplicate when multiple nodes exist #10711 Change the value returned by CAST(-num as datetime) from error to NULL #10703 Fix the issue that an unsigned histogram meets signed ranges in some cases #10695 Fix the issue that an error is reported mistakenly for reading data when the statistics feedback meets the bigint unsigned primary key #10307 Fix the issue that the result of Show Create Table for partitioned tables is not correctly displayed in some cases #10690 Fix the issue that the calculation result of the GROUP_CONCAT aggregate function is not correct for some correlated subqueries #10670 Fix the issue that the result is wrongly displayed when the memory table of slow queries parses the slow query log in some cases #10776  PD  Fix the issue that etcd leader election is blocked in extreme conditions #1576  TiKV  Fix the issue that Regions are not available during the leader transfer process in extreme conditions #4799 Fix the issue that TiKV loses data when the power of the machine fails abnormally, caused by delayed data flush to the disk when receiving snapshots #4850  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.12 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.1.12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.1.12/</guid>
      <description>TiDB 2.1.12 Release Notes Release date: June 13, 2019
TiDB version: 2.1.12
TiDB Ansible version: 2.1.12
TiDB  Fix the issue caused by unmatched data types when using the index query feedback #10755 Fix the issue that the blob column is changed to the text column caused by charset altering in some cases #10745 Fix the issue that the GRANT operation in the transaction mistakenly reports &amp;ldquo;Duplicate Entry&amp;rdquo; in some cases #10739 Improve the compatibility with MySQL of the following features  The DAYNAME function #10732 The MONTHNAME function #10733 Support the 0 value for the EXTRACT function when processing MONTH #10702 The DECIMAL type can be converted to TIMESTAMP or DATETIME #10734   Change the column charset while changing the table charset #10714 Fix the overflow issue when converting a decimal to a float in some cases #10730 Fix the issue that some extremely large messages report the &amp;ldquo;grpc: received message larger than max&amp;rdquo; error caused by inconsistent maximum sizes of messages sent/received by gRPC of TiDB and TiKV #10710 Fix the panic issue caused by ORDER BY not filtering NULL in some cases #10488 Fix the issue that values returned by the UUID function might be duplicate when multiple nodes exist #10711 Change the value returned by CAST(-num as datetime) from error to NULL #10703 Fix the issue that an unsigned histogram meets signed ranges in some cases #10695 Fix the issue that an error is reported mistakenly for reading data when the statistics feedback meets the bigint unsigned primary key #10307 Fix the issue that the result of Show Create Table for partitioned tables is not correctly displayed in some cases #10690 Fix the issue that the calculation result of the GROUP_CONCAT aggregate function is not correct for some correlated subqueries #10670 Fix the issue that the result is wrongly displayed when the memory table of slow queries parses the slow query log in some cases #10776  PD  Fix the issue that etcd leader election is blocked in extreme conditions #1576  TiKV  Fix the issue that Regions are not available during the leader transfer process in extreme conditions #4799 Fix the issue that TiKV loses data when the power of the machine fails abnormally, caused by delayed data flush to the disk when receiving snapshots #4850  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.12 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.1.12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.1.12/</guid>
      <description>TiDB 2.1.12 Release Notes Release date: June 13, 2019
TiDB version: 2.1.12
TiDB Ansible version: 2.1.12
TiDB  Fix the issue caused by unmatched data types when using the index query feedback #10755 Fix the issue that the blob column is changed to the text column caused by charset altering in some cases #10745 Fix the issue that the GRANT operation in the transaction mistakenly reports &amp;ldquo;Duplicate Entry&amp;rdquo; in some cases #10739 Improve the compatibility with MySQL of the following features  The DAYNAME function #10732 The MONTHNAME function #10733 Support the 0 value for the EXTRACT function when processing MONTH #10702 The DECIMAL type can be converted to TIMESTAMP or DATETIME #10734   Change the column charset while changing the table charset #10714 Fix the overflow issue when converting a decimal to a float in some cases #10730 Fix the issue that some extremely large messages report the &amp;ldquo;grpc: received message larger than max&amp;rdquo; error caused by inconsistent maximum sizes of messages sent/received by gRPC of TiDB and TiKV #10710 Fix the panic issue caused by ORDER BY not filtering NULL in some cases #10488 Fix the issue that values returned by the UUID function might be duplicate when multiple nodes exist #10711 Change the value returned by CAST(-num as datetime) from error to NULL #10703 Fix the issue that an unsigned histogram meets signed ranges in some cases #10695 Fix the issue that an error is reported mistakenly for reading data when the statistics feedback meets the bigint unsigned primary key #10307 Fix the issue that the result of Show Create Table for partitioned tables is not correctly displayed in some cases #10690 Fix the issue that the calculation result of the GROUP_CONCAT aggregate function is not correct for some correlated subqueries #10670 Fix the issue that the result is wrongly displayed when the memory table of slow queries parses the slow query log in some cases #10776  PD  Fix the issue that etcd leader election is blocked in extreme conditions #1576  TiKV  Fix the issue that Regions are not available during the leader transfer process in extreme conditions #4799 Fix the issue that TiKV loses data when the power of the machine fails abnormally, caused by delayed data flush to the disk when receiving snapshots #4850  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.13 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.1.13/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.1.13/</guid>
      <description>TiDB 2.1.13 Release Notes 发版日期：2019 年 6 月 21 日
TiDB 版本：2.1.13
TiDB Ansible 版本：2.1.13
TiDB  新增列属性包含 AUTO_INCREMENT 时利用 SHARD_ROW_ID_BITS 打散行 ID 功能，缓解热点问题 #10788 优化无效 DDL 元信息存活时间，缩短集群升级后恢复 DDL 操作正常执行所需的时间 #10789 修复因持有 execdetails.ExecDetails 指针时 Coprocessor 的资源无法快速释放导致的在大并发场景下 OOM 的问题 #10833 新增 update-stats配置项，控制是否更新统计信息 #10772 新增 3 个 TiDB 特有语法，支持预先切分 Region，解决热点问题：  新增 Table Option PRE_SPLIT_REGIONS 选项 #10863 新增 SPLIT TABLE table_name INDEX index_name 语法 #10865 新增 SPLIT TABLE [table_name] BETWEEN (min_value...) AND (max_value.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.13 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.1.13/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.1.13/</guid>
      <description>TiDB 2.1.13 Release Notes 发版日期：2019 年 6 月 21 日
TiDB 版本：2.1.13
TiDB Ansible 版本：2.1.13
TiDB  新增列属性包含 AUTO_INCREMENT 时利用 SHARD_ROW_ID_BITS 打散行 ID 功能，缓解热点问题 #10788 优化无效 DDL 元信息存活时间，缩短集群升级后恢复 DDL 操作正常执行所需的时间 #10789 修复因持有 execdetails.ExecDetails 指针时 Coprocessor 的资源无法快速释放导致的在大并发场景下 OOM 的问题 #10833 新增 update-stats配置项，控制是否更新统计信息 #10772 新增 3 个 TiDB 特有语法，支持预先切分 Region，解决热点问题：  新增 Table Option PRE_SPLIT_REGIONS 选项 #10863 新增 SPLIT TABLE table_name INDEX index_name 语法 #10865 新增 SPLIT TABLE [table_name] BETWEEN (min_value...) AND (max_value.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.13 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.1.13/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.1.13/</guid>
      <description>TiDB 2.1.13 Release Notes 发版日期：2019 年 6 月 21 日
TiDB 版本：2.1.13
TiDB Ansible 版本：2.1.13
TiDB  新增列属性包含 AUTO_INCREMENT 时利用 SHARD_ROW_ID_BITS 打散行 ID 功能，缓解热点问题 #10788 优化无效 DDL 元信息存活时间，缩短集群升级后恢复 DDL 操作正常执行所需的时间 #10789 修复因持有 execdetails.ExecDetails 指针时 Coprocessor 的资源无法快速释放导致的在大并发场景下 OOM 的问题 #10833 新增 update-stats配置项，控制是否更新统计信息 #10772 新增 3 个 TiDB 特有语法，支持预先切分 Region，解决热点问题：  新增 Table Option PRE_SPLIT_REGIONS 选项 #10863 新增 SPLIT TABLE table_name INDEX index_name 语法 #10865 新增 SPLIT TABLE [table_name] BETWEEN (min_value...) AND (max_value.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.13 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.1.13/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.1.13/</guid>
      <description>TiDB 2.1.13 Release Notes 发版日期：2019 年 6 月 21 日
TiDB 版本：2.1.13
TiDB Ansible 版本：2.1.13
TiDB  新增列属性包含 AUTO_INCREMENT 时利用 SHARD_ROW_ID_BITS 打散行 ID 功能，缓解热点问题 #10788 优化无效 DDL 元信息存活时间，缩短集群升级后恢复 DDL 操作正常执行所需的时间 #10789 修复因持有 execdetails.ExecDetails 指针时 Coprocessor 的资源无法快速释放导致的在大并发场景下 OOM 的问题 #10833 新增 update-stats配置项，控制是否更新统计信息 #10772 新增 3 个 TiDB 特有语法，支持预先切分 Region，解决热点问题：  新增 Table Option PRE_SPLIT_REGIONS 选项 #10863 新增 SPLIT TABLE table_name INDEX index_name 语法 #10865 新增 SPLIT TABLE [table_name] BETWEEN (min_value...) AND (max_value.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.13 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.1.13/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.1.13/</guid>
      <description>TiDB 2.1.13 Release Notes Release date: June 21, 2019
TiDB version: 2.1.13
TiDB Ansible version: 2.1.13
TiDB  Add a feature to use SHARD_ROW_ID_BITS to scatter row IDs when the column contains an AUTO_INCREMENT attribute to relieve the hotspot issue #10788 Optimize the lifetime of invalid DDL metadata to speed up recovering the normal execution of DDL operations after upgrading the TiDB cluster #10789 Fix the OOM issue in high concurrent scenarios caused by the failure to quickly release Coprocessor resources, resulted from the execdetails.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.13 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.1.13/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.1.13/</guid>
      <description>TiDB 2.1.13 Release Notes Release date: June 21, 2019
TiDB version: 2.1.13
TiDB Ansible version: 2.1.13
TiDB  Add a feature to use SHARD_ROW_ID_BITS to scatter row IDs when the column contains an AUTO_INCREMENT attribute to relieve the hotspot issue #10788 Optimize the lifetime of invalid DDL metadata to speed up recovering the normal execution of DDL operations after upgrading the TiDB cluster #10789 Fix the OOM issue in high concurrent scenarios caused by the failure to quickly release Coprocessor resources, resulted from the execdetails.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.13 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.1.13/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.1.13/</guid>
      <description>TiDB 2.1.13 Release Notes Release date: June 21, 2019
TiDB version: 2.1.13
TiDB Ansible version: 2.1.13
TiDB  Add a feature to use SHARD_ROW_ID_BITS to scatter row IDs when the column contains an AUTO_INCREMENT attribute to relieve the hotspot issue #10788 Optimize the lifetime of invalid DDL metadata to speed up recovering the normal execution of DDL operations after upgrading the TiDB cluster #10789 Fix the OOM issue in high concurrent scenarios caused by the failure to quickly release Coprocessor resources, resulted from the execdetails.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.13 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.1.13/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.1.13/</guid>
      <description>TiDB 2.1.13 Release Notes Release date: June 21, 2019
TiDB version: 2.1.13
TiDB Ansible version: 2.1.13
TiDB  Add a feature to use SHARD_ROW_ID_BITS to scatter row IDs when the column contains an AUTO_INCREMENT attribute to relieve the hotspot issue #10788 Optimize the lifetime of invalid DDL metadata to speed up recovering the normal execution of DDL operations after upgrading the TiDB cluster #10789 Fix the OOM issue in high concurrent scenarios caused by the failure to quickly release Coprocessor resources, resulted from the execdetails.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.14 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.1.14/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.1.14/</guid>
      <description>TiDB 2.1.14 Release Notes 发版日期：2019 年 7 月 4 日
TiDB 版本：2.1.14
TiDB Ansible 版本：2.1.14
TiDB  修复某些情况下列裁剪导致查询结果不正确的问题 #11019 修复 show processlist 中 db 和 info 列信息显示有误的问题 #11000 修复 MAX_EXECUTION_TIME 作为 SQL hint 和全局变量在某些情况下不生效的问题 #10999 支持根据负载情况自动调整 Auto ID 分配的步长 #10997 修复 SQL 查询结束时 MemTracker 统计的 DistSQL 内存信息未正确清理的问题 #10971 information_schema.processlist 表中新增 MEM 列用于描述 Query 的内存使用情况 #10896 新增全局系统变量 max_execution_time，用于控制查询的最大执行时间 10940 修复使用未支持的聚合函数导致 TiDB panic 的问题 #10911 新增 load data 语句失败后自动回滚最后一个事务功能 #10862 修复 TiDB 超过内存配额的行为配置为 CANCEL 时，某些情况下 TiDB 返回结果不正确的问题 #11016 禁用 TRACE 语句，避免 TiDB panic 问题 #11039 新增 mysql.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.14 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.1.14/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.1.14/</guid>
      <description>TiDB 2.1.14 Release Notes 发版日期：2019 年 7 月 4 日
TiDB 版本：2.1.14
TiDB Ansible 版本：2.1.14
TiDB  修复某些情况下列裁剪导致查询结果不正确的问题 #11019 修复 show processlist 中 db 和 info 列信息显示有误的问题 #11000 修复 MAX_EXECUTION_TIME 作为 SQL hint 和全局变量在某些情况下不生效的问题 #10999 支持根据负载情况自动调整 Auto ID 分配的步长 #10997 修复 SQL 查询结束时 MemTracker 统计的 DistSQL 内存信息未正确清理的问题 #10971 information_schema.processlist 表中新增 MEM 列用于描述 Query 的内存使用情况 #10896 新增全局系统变量 max_execution_time，用于控制查询的最大执行时间 10940 修复使用未支持的聚合函数导致 TiDB panic 的问题 #10911 新增 load data 语句失败后自动回滚最后一个事务功能 #10862 修复 TiDB 超过内存配额的行为配置为 CANCEL 时，某些情况下 TiDB 返回结果不正确的问题 #11016 禁用 TRACE 语句，避免 TiDB panic 问题 #11039 新增 mysql.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.14 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.1.14/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.1.14/</guid>
      <description>TiDB 2.1.14 Release Notes 发版日期：2019 年 7 月 4 日
TiDB 版本：2.1.14
TiDB Ansible 版本：2.1.14
TiDB  修复某些情况下列裁剪导致查询结果不正确的问题 #11019 修复 show processlist 中 db 和 info 列信息显示有误的问题 #11000 修复 MAX_EXECUTION_TIME 作为 SQL hint 和全局变量在某些情况下不生效的问题 #10999 支持根据负载情况自动调整 Auto ID 分配的步长 #10997 修复 SQL 查询结束时 MemTracker 统计的 DistSQL 内存信息未正确清理的问题 #10971 information_schema.processlist 表中新增 MEM 列用于描述 Query 的内存使用情况 #10896 新增全局系统变量 max_execution_time，用于控制查询的最大执行时间 10940 修复使用未支持的聚合函数导致 TiDB panic 的问题 #10911 新增 load data 语句失败后自动回滚最后一个事务功能 #10862 修复 TiDB 超过内存配额的行为配置为 CANCEL 时，某些情况下 TiDB 返回结果不正确的问题 #11016 禁用 TRACE 语句，避免 TiDB panic 问题 #11039 新增 mysql.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.14 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.1.14/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.1.14/</guid>
      <description>TiDB 2.1.14 Release Notes 发版日期：2019 年 7 月 4 日
TiDB 版本：2.1.14
TiDB Ansible 版本：2.1.14
TiDB  修复某些情况下列裁剪导致查询结果不正确的问题 #11019 修复 show processlist 中 db 和 info 列信息显示有误的问题 #11000 修复 MAX_EXECUTION_TIME 作为 SQL hint 和全局变量在某些情况下不生效的问题 #10999 支持根据负载情况自动调整 Auto ID 分配的步长 #10997 修复 SQL 查询结束时 MemTracker 统计的 DistSQL 内存信息未正确清理的问题 #10971 information_schema.processlist 表中新增 MEM 列用于描述 Query 的内存使用情况 #10896 新增全局系统变量 max_execution_time，用于控制查询的最大执行时间 10940 修复使用未支持的聚合函数导致 TiDB panic 的问题 #10911 新增 load data 语句失败后自动回滚最后一个事务功能 #10862 修复 TiDB 超过内存配额的行为配置为 CANCEL 时，某些情况下 TiDB 返回结果不正确的问题 #11016 禁用 TRACE 语句，避免 TiDB panic 问题 #11039 新增 mysql.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.14 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.1.14/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.1.14/</guid>
      <description>TiDB 2.1.14 Release Notes Release date: July 04, 2019
TiDB version: 2.1.14
TiDB Ansible version: 2.1.14
TiDB  Fix wrong query results caused by column pruning in some cases #11019 Fix the wrongly displayed information in db and info columns of show processlist #11000 Fix the issue that MAX_EXECUTION_TIME as a SQL hint and global variable does not work in some cases #10999 Support automatically adjust the incremental gap allocated by auto-increment ID based on the load #10997 Fix the issue that the Distsql memory information of MemTracker is not correctly cleaned when a query ends #10971 Add the MEM column in the information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.14 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.1.14/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.1.14/</guid>
      <description>TiDB 2.1.14 Release Notes Release date: July 04, 2019
TiDB version: 2.1.14
TiDB Ansible version: 2.1.14
TiDB  Fix wrong query results caused by column pruning in some cases #11019 Fix the wrongly displayed information in db and info columns of show processlist #11000 Fix the issue that MAX_EXECUTION_TIME as a SQL hint and global variable does not work in some cases #10999 Support automatically adjust the incremental gap allocated by auto-increment ID based on the load #10997 Fix the issue that the Distsql memory information of MemTracker is not correctly cleaned when a query ends #10971 Add the MEM column in the information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.14 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.1.14/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.1.14/</guid>
      <description>TiDB 2.1.14 Release Notes Release date: July 04, 2019
TiDB version: 2.1.14
TiDB Ansible version: 2.1.14
TiDB  Fix wrong query results caused by column pruning in some cases #11019 Fix the wrongly displayed information in db and info columns of show processlist #11000 Fix the issue that MAX_EXECUTION_TIME as a SQL hint and global variable does not work in some cases #10999 Support automatically adjust the incremental gap allocated by auto-increment ID based on the load #10997 Fix the issue that the Distsql memory information of MemTracker is not correctly cleaned when a query ends #10971 Add the MEM column in the information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.14 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.1.14/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.1.14/</guid>
      <description>TiDB 2.1.14 Release Notes Release date: July 04, 2019
TiDB version: 2.1.14
TiDB Ansible version: 2.1.14
TiDB  Fix wrong query results caused by column pruning in some cases #11019 Fix the wrongly displayed information in db and info columns of show processlist #11000 Fix the issue that MAX_EXECUTION_TIME as a SQL hint and global variable does not work in some cases #10999 Support automatically adjust the incremental gap allocated by auto-increment ID based on the load #10997 Fix the issue that the Distsql memory information of MemTracker is not correctly cleaned when a query ends #10971 Add the MEM column in the information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.15 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.1.15/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.1.15/</guid>
      <description>TiDB 2.1.15 Release Notes 发版日期：2019 年 7 月 18 日
TiDB 版本：2.1.15
TiDB Ansible 版本：2.1.15
TiDB  修复 DATE_ADD 函数处理微秒时由于没有对齐导致结果不正确的问题 #11289 修复 DELETE 语句中，字符串列中的空值与 FLOAT/INT 做比较时会报错的问题 #11279 修复 INSERT 函数参数有 NULL 值时，未正确返回 NULL 值的问题 #11249 修复在非字符串类型且长度为 0 的列建立索引时出错的问题 #11215 新增 SHOW TABLE REGIONS 的语句，支持通过 SQL 查询表的 Region 分布情况 #11238 修复 UPDATE … SELECT 语句因 SELECT 子查询中使用投影消除来优化规则所导致的报错 #11254 新增 ADMIN PLUGINS ENABLE/DISABLE SQL 语句，支持通过 SQL 动态开启/关闭 Plugin #11189 Audit Plugin 新增审记连接功能 #11189 修复点查时，某列被查询多次而且结果为 NULL 时会 Panic 的问题 #11227 新增 tidb_scatter_region 配置项，控制创建表时是否开启自己打散 Record Region #11213 修复 RAND 函数由于非线程安全的 rand.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.15 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.1.15/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.1.15/</guid>
      <description>TiDB 2.1.15 Release Notes 发版日期：2019 年 7 月 18 日
TiDB 版本：2.1.15
TiDB Ansible 版本：2.1.15
TiDB  修复 DATE_ADD 函数处理微秒时由于没有对齐导致结果不正确的问题 #11289 修复 DELETE 语句中，字符串列中的空值与 FLOAT/INT 做比较时会报错的问题 #11279 修复 INSERT 函数参数有 NULL 值时，未正确返回 NULL 值的问题 #11249 修复在非字符串类型且长度为 0 的列建立索引时出错的问题 #11215 新增 SHOW TABLE REGIONS 的语句，支持通过 SQL 查询表的 Region 分布情况 #11238 修复 UPDATE … SELECT 语句因 SELECT 子查询中使用投影消除来优化规则所导致的报错 #11254 新增 ADMIN PLUGINS ENABLE/DISABLE SQL 语句，支持通过 SQL 动态开启/关闭 Plugin #11189 Audit Plugin 新增审记连接功能 #11189 修复点查时，某列被查询多次而且结果为 NULL 时会 Panic 的问题 #11227 新增 tidb_scatter_region 配置项，控制创建表时是否开启自己打散 Record Region #11213 修复 RAND 函数由于非线程安全的 rand.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.15 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.1.15/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.1.15/</guid>
      <description>TiDB 2.1.15 Release Notes 发版日期：2019 年 7 月 18 日
TiDB 版本：2.1.15
TiDB Ansible 版本：2.1.15
TiDB  修复 DATE_ADD 函数处理微秒时由于没有对齐导致结果不正确的问题 #11289 修复 DELETE 语句中，字符串列中的空值与 FLOAT/INT 做比较时会报错的问题 #11279 修复 INSERT 函数参数有 NULL 值时，未正确返回 NULL 值的问题 #11249 修复在非字符串类型且长度为 0 的列建立索引时出错的问题 #11215 新增 SHOW TABLE REGIONS 的语句，支持通过 SQL 查询表的 Region 分布情况 #11238 修复 UPDATE … SELECT 语句因 SELECT 子查询中使用投影消除来优化规则所导致的报错 #11254 新增 ADMIN PLUGINS ENABLE/DISABLE SQL 语句，支持通过 SQL 动态开启/关闭 Plugin #11189 Audit Plugin 新增审记连接功能 #11189 修复点查时，某列被查询多次而且结果为 NULL 时会 Panic 的问题 #11227 新增 tidb_scatter_region 配置项，控制创建表时是否开启自己打散 Record Region #11213 修复 RAND 函数由于非线程安全的 rand.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.15 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.1.15/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.1.15/</guid>
      <description>TiDB 2.1.15 Release Notes 发版日期：2019 年 7 月 18 日
TiDB 版本：2.1.15
TiDB Ansible 版本：2.1.15
TiDB  修复 DATE_ADD 函数处理微秒时由于没有对齐导致结果不正确的问题 #11289 修复 DELETE 语句中，字符串列中的空值与 FLOAT/INT 做比较时会报错的问题 #11279 修复 INSERT 函数参数有 NULL 值时，未正确返回 NULL 值的问题 #11249 修复在非字符串类型且长度为 0 的列建立索引时出错的问题 #11215 新增 SHOW TABLE REGIONS 的语句，支持通过 SQL 查询表的 Region 分布情况 #11238 修复 UPDATE … SELECT 语句因 SELECT 子查询中使用投影消除来优化规则所导致的报错 #11254 新增 ADMIN PLUGINS ENABLE/DISABLE SQL 语句，支持通过 SQL 动态开启/关闭 Plugin #11189 Audit Plugin 新增审记连接功能 #11189 修复点查时，某列被查询多次而且结果为 NULL 时会 Panic 的问题 #11227 新增 tidb_scatter_region 配置项，控制创建表时是否开启自己打散 Record Region #11213 修复 RAND 函数由于非线程安全的 rand.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.15 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.1.15/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.1.15/</guid>
      <description>TiDB 2.1.15 Release Notes Release date: July 16, 2019
TiDB version: 2.1.15
TiDB Ansible version: 2.1.15
TiDB  Fix the issue that the DATE_ADD function returns wrong results due to incorrect alignment when dealing with microseconds #11289 Fix the issue that an error is reported when the empty value in the string column is compared with FLOAT or INT #11279 Fix the issue that the INSERT function fails to correctly return the NULL value when a parameter is NULL #11249 Fix the issue that an error occurs when indexing the column of the non-string type and 0 length #11215 Add the SHOW TABLE REGIONS statement to query the Region distribution of a table through SQL statements #11238 Fix the issue that an error is reported when using the UPDATE … SELECT statement because the projection elimination is used to optimize rules in the SELECT subqueries #11254 Add the ADMIN PLUGINS ENABLE/ADMIN PLUGINS DISABLE SQL statement to dynamically enable or disable plugins #11189 Add the session connection information in the Audit plugin #11189 Fix the panic issue that happens when a column is queried on multiple times and the returned result is NULL during point queries #11227 Add the tidb_scatter_region configuration item to scatter table Regions when creating a table #11213 Fix the data race issue caused by non-thread safe rand.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.15 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.1.15/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.1.15/</guid>
      <description>TiDB 2.1.15 Release Notes Release date: July 16, 2019
TiDB version: 2.1.15
TiDB Ansible version: 2.1.15
TiDB  Fix the issue that the DATE_ADD function returns wrong results due to incorrect alignment when dealing with microseconds #11289 Fix the issue that an error is reported when the empty value in the string column is compared with FLOAT or INT #11279 Fix the issue that the INSERT function fails to correctly return the NULL value when a parameter is NULL #11249 Fix the issue that an error occurs when indexing the column of the non-string type and 0 length #11215 Add the SHOW TABLE REGIONS statement to query the Region distribution of a table through SQL statements #11238 Fix the issue that an error is reported when using the UPDATE … SELECT statement because the projection elimination is used to optimize rules in the SELECT subqueries #11254 Add the ADMIN PLUGINS ENABLE/ADMIN PLUGINS DISABLE SQL statement to dynamically enable or disable plugins #11189 Add the session connection information in the Audit plugin #11189 Fix the panic issue that happens when a column is queried on multiple times and the returned result is NULL during point queries #11227 Add the tidb_scatter_region configuration item to scatter table Regions when creating a table #11213 Fix the data race issue caused by non-thread safe rand.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.15 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.1.15/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.1.15/</guid>
      <description>TiDB 2.1.15 Release Notes Release date: July 16, 2019
TiDB version: 2.1.15
TiDB Ansible version: 2.1.15
TiDB  Fix the issue that the DATE_ADD function returns wrong results due to incorrect alignment when dealing with microseconds #11289 Fix the issue that an error is reported when the empty value in the string column is compared with FLOAT or INT #11279 Fix the issue that the INSERT function fails to correctly return the NULL value when a parameter is NULL #11249 Fix the issue that an error occurs when indexing the column of the non-string type and 0 length #11215 Add the SHOW TABLE REGIONS statement to query the Region distribution of a table through SQL statements #11238 Fix the issue that an error is reported when using the UPDATE … SELECT statement because the projection elimination is used to optimize rules in the SELECT subqueries #11254 Add the ADMIN PLUGINS ENABLE/ADMIN PLUGINS DISABLE SQL statement to dynamically enable or disable plugins #11189 Add the session connection information in the Audit plugin #11189 Fix the panic issue that happens when a column is queried on multiple times and the returned result is NULL during point queries #11227 Add the tidb_scatter_region configuration item to scatter table Regions when creating a table #11213 Fix the data race issue caused by non-thread safe rand.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.15 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.1.15/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.1.15/</guid>
      <description>TiDB 2.1.15 Release Notes Release date: July 16, 2019
TiDB version: 2.1.15
TiDB Ansible version: 2.1.15
TiDB  Fix the issue that the DATE_ADD function returns wrong results due to incorrect alignment when dealing with microseconds #11289 Fix the issue that an error is reported when the empty value in the string column is compared with FLOAT or INT #11279 Fix the issue that the INSERT function fails to correctly return the NULL value when a parameter is NULL #11249 Fix the issue that an error occurs when indexing the column of the non-string type and 0 length #11215 Add the SHOW TABLE REGIONS statement to query the Region distribution of a table through SQL statements #11238 Fix the issue that an error is reported when using the UPDATE … SELECT statement because the projection elimination is used to optimize rules in the SELECT subqueries #11254 Add the ADMIN PLUGINS ENABLE/ADMIN PLUGINS DISABLE SQL statement to dynamically enable or disable plugins #11189 Add the session connection information in the Audit plugin #11189 Fix the panic issue that happens when a column is queried on multiple times and the returned result is NULL during point queries #11227 Add the tidb_scatter_region configuration item to scatter table Regions when creating a table #11213 Fix the data race issue caused by non-thread safe rand.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.16 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.1.16/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.1.16/</guid>
      <description>TiDB 2.1.16 Release Notes 发版日期：2019 年 8 月 15 日
TiDB 版本：2.1.16
TiDB Ansible 版本：2.1.16
TiDB  SQL 优化器  修复时间列上的等值条件 Row Count 估算不准确的问题 #11526 修复 TIDB_INLJ Hint 不生效或者对非指定的表生效的问题 #11361 将查询中的 NOT EXISTS 由 OUTER JOIN 实现方式改为 ANTI JOIN ，便于找到更优执行计划 #11291 支持在 SHOW 语句中使用子查询，现在可以支持诸如 SHOW COLUMNS FROM tbl WHERE FIELDS IN (SELECT &#39;a&#39;) 的写法 #11461 修复常量折叠优化导致 SELECT … CASE WHEN … ELSE NULL ... 查询结果不正确的问题 #11441   SQL 执行引擎  修复函数 DATE_ADD 在 INTERVAL 为负的情况下结果错误的问题 #11616 修复 DATE_ADD 函数接受 FLOAT、DOUBLE 和 DECIMAL 类型的参数时，没有正确地进行类型转换而导致结果可能不正确的问题 #11628 修复 CAST(JSON AS SIGNED) 出现 OVERFLOW 时错误信息不准确的问题 #11562 修复在关闭 Executor 的过程中，子节点关闭返回错误时其他子节点未关闭的问题 #11598 支持 SPLIT TABLE 语句返回切分成功的 REGION 数量，并且当部分 REGION SCATTER 在超时未完成调度时，不再返回错误，而是返回完成调度的比例 #11487 修复 REGEXP BINARY 函数对大小写敏感，与 MySQL 不兼容的问题 #11505 修复 DATE_ADD / DATE_SUB 结果中 YEAR 小于 0 或 大于 65535 时溢出导致结果没有正确返回 NULL 值的问题 #11477 慢查询表中添加用于表示是否执行成功的 Succ 字段 #11412 修复一条 SQL 语句在涉及当前时间计算时（例如 CURRENT_TIMESTAMP 或者 NOW），多次取当前时间值，结果与 MySQL不兼容的问题：现在同一条SQL语句中取当前时间时，均使用相同值 #11392 修复 AUTO INCREMENT 列未处理 FLOAT / DOUBLE 的问题 #11389 修复 CONVERT_TZ 函数在参数不合法时，没有正确返回 NULL 的问题 #11357 修复 PARTITION BY LIST 报错的问题（仅添加语法支持，TiDB 执行时候会作为普通表创建并提供提示信息） #11236 修复 Mod(%)、Multiple(*) 和 Minus(-) 返回结果为 0 时，在小数位数较多（例如 select 0.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.16 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.1.16/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.1.16/</guid>
      <description>TiDB 2.1.16 Release Notes 发版日期：2019 年 8 月 15 日
TiDB 版本：2.1.16
TiDB Ansible 版本：2.1.16
TiDB  SQL 优化器  修复时间列上的等值条件 Row Count 估算不准确的问题 #11526 修复 TIDB_INLJ Hint 不生效或者对非指定的表生效的问题 #11361 将查询中的 NOT EXISTS 由 OUTER JOIN 实现方式改为 ANTI JOIN ，便于找到更优执行计划 #11291 支持在 SHOW 语句中使用子查询，现在可以支持诸如 SHOW COLUMNS FROM tbl WHERE FIELDS IN (SELECT &#39;a&#39;) 的写法 #11461 修复常量折叠优化导致 SELECT … CASE WHEN … ELSE NULL ... 查询结果不正确的问题 #11441   SQL 执行引擎  修复函数 DATE_ADD 在 INTERVAL 为负的情况下结果错误的问题 #11616 修复 DATE_ADD 函数接受 FLOAT、DOUBLE 和 DECIMAL 类型的参数时，没有正确地进行类型转换而导致结果可能不正确的问题 #11628 修复 CAST(JSON AS SIGNED) 出现 OVERFLOW 时错误信息不准确的问题 #11562 修复在关闭 Executor 的过程中，子节点关闭返回错误时其他子节点未关闭的问题 #11598 支持 SPLIT TABLE 语句返回切分成功的 REGION 数量，并且当部分 REGION SCATTER 在超时未完成调度时，不再返回错误，而是返回完成调度的比例 #11487 修复 REGEXP BINARY 函数对大小写敏感，与 MySQL 不兼容的问题 #11505 修复 DATE_ADD / DATE_SUB 结果中 YEAR 小于 0 或 大于 65535 时溢出导致结果没有正确返回 NULL 值的问题 #11477 慢查询表中添加用于表示是否执行成功的 Succ 字段 #11412 修复一条 SQL 语句在涉及当前时间计算时（例如 CURRENT_TIMESTAMP 或者 NOW），多次取当前时间值，结果与 MySQL不兼容的问题：现在同一条SQL语句中取当前时间时，均使用相同值 #11392 修复 AUTO INCREMENT 列未处理 FLOAT / DOUBLE 的问题 #11389 修复 CONVERT_TZ 函数在参数不合法时，没有正确返回 NULL 的问题 #11357 修复 PARTITION BY LIST 报错的问题（仅添加语法支持，TiDB 执行时候会作为普通表创建并提供提示信息） #11236 修复 Mod(%)、Multiple(*) 和 Minus(-) 返回结果为 0 时，在小数位数较多（例如 select 0.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.16 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.1.16/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.1.16/</guid>
      <description>TiDB 2.1.16 Release Notes 发版日期：2019 年 8 月 15 日
TiDB 版本：2.1.16
TiDB Ansible 版本：2.1.16
TiDB  SQL 优化器  修复时间列上的等值条件 Row Count 估算不准确的问题 #11526 修复 TIDB_INLJ Hint 不生效或者对非指定的表生效的问题 #11361 将查询中的 NOT EXISTS 由 OUTER JOIN 实现方式改为 ANTI JOIN ，便于找到更优执行计划 #11291 支持在 SHOW 语句中使用子查询，现在可以支持诸如 SHOW COLUMNS FROM tbl WHERE FIELDS IN (SELECT &#39;a&#39;) 的写法 #11461 修复常量折叠优化导致 SELECT … CASE WHEN … ELSE NULL ... 查询结果不正确的问题 #11441   SQL 执行引擎  修复函数 DATE_ADD 在 INTERVAL 为负的情况下结果错误的问题 #11616 修复 DATE_ADD 函数接受 FLOAT、DOUBLE 和 DECIMAL 类型的参数时，没有正确地进行类型转换而导致结果可能不正确的问题 #11628 修复 CAST(JSON AS SIGNED) 出现 OVERFLOW 时错误信息不准确的问题 #11562 修复在关闭 Executor 的过程中，子节点关闭返回错误时其他子节点未关闭的问题 #11598 支持 SPLIT TABLE 语句返回切分成功的 REGION 数量，并且当部分 REGION SCATTER 在超时未完成调度时，不再返回错误，而是返回完成调度的比例 #11487 修复 REGEXP BINARY 函数对大小写敏感，与 MySQL 不兼容的问题 #11505 修复 DATE_ADD / DATE_SUB 结果中 YEAR 小于 0 或 大于 65535 时溢出导致结果没有正确返回 NULL 值的问题 #11477 慢查询表中添加用于表示是否执行成功的 Succ 字段 #11412 修复一条 SQL 语句在涉及当前时间计算时（例如 CURRENT_TIMESTAMP 或者 NOW），多次取当前时间值，结果与 MySQL不兼容的问题：现在同一条SQL语句中取当前时间时，均使用相同值 #11392 修复 AUTO INCREMENT 列未处理 FLOAT / DOUBLE 的问题 #11389 修复 CONVERT_TZ 函数在参数不合法时，没有正确返回 NULL 的问题 #11357 修复 PARTITION BY LIST 报错的问题（仅添加语法支持，TiDB 执行时候会作为普通表创建并提供提示信息） #11236 修复 Mod(%)、Multiple(*) 和 Minus(-) 返回结果为 0 时，在小数位数较多（例如 select 0.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.16 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.1.16/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.1.16/</guid>
      <description>TiDB 2.1.16 Release Notes 发版日期：2019 年 8 月 15 日
TiDB 版本：2.1.16
TiDB Ansible 版本：2.1.16
TiDB  SQL 优化器  修复时间列上的等值条件 Row Count 估算不准确的问题 #11526 修复 TIDB_INLJ Hint 不生效或者对非指定的表生效的问题 #11361 将查询中的 NOT EXISTS 由 OUTER JOIN 实现方式改为 ANTI JOIN ，便于找到更优执行计划 #11291 支持在 SHOW 语句中使用子查询，现在可以支持诸如 SHOW COLUMNS FROM tbl WHERE FIELDS IN (SELECT &#39;a&#39;) 的写法 #11461 修复常量折叠优化导致 SELECT … CASE WHEN … ELSE NULL ... 查询结果不正确的问题 #11441   SQL 执行引擎  修复函数 DATE_ADD 在 INTERVAL 为负的情况下结果错误的问题 #11616 修复 DATE_ADD 函数接受 FLOAT、DOUBLE 和 DECIMAL 类型的参数时，没有正确地进行类型转换而导致结果可能不正确的问题 #11628 修复 CAST(JSON AS SIGNED) 出现 OVERFLOW 时错误信息不准确的问题 #11562 修复在关闭 Executor 的过程中，子节点关闭返回错误时其他子节点未关闭的问题 #11598 支持 SPLIT TABLE 语句返回切分成功的 REGION 数量，并且当部分 REGION SCATTER 在超时未完成调度时，不再返回错误，而是返回完成调度的比例 #11487 修复 REGEXP BINARY 函数对大小写敏感，与 MySQL 不兼容的问题 #11505 修复 DATE_ADD / DATE_SUB 结果中 YEAR 小于 0 或 大于 65535 时溢出导致结果没有正确返回 NULL 值的问题 #11477 慢查询表中添加用于表示是否执行成功的 Succ 字段 #11412 修复一条 SQL 语句在涉及当前时间计算时（例如 CURRENT_TIMESTAMP 或者 NOW），多次取当前时间值，结果与 MySQL不兼容的问题：现在同一条SQL语句中取当前时间时，均使用相同值 #11392 修复 AUTO INCREMENT 列未处理 FLOAT / DOUBLE 的问题 #11389 修复 CONVERT_TZ 函数在参数不合法时，没有正确返回 NULL 的问题 #11357 修复 PARTITION BY LIST 报错的问题（仅添加语法支持，TiDB 执行时候会作为普通表创建并提供提示信息） #11236 修复 Mod(%)、Multiple(*) 和 Minus(-) 返回结果为 0 时，在小数位数较多（例如 select 0.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.16 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.1.16/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.1.16/</guid>
      <description>TiDB 2.1.16 Release Notes Release date: August 15, 2019
TiDB version: 2.1.16
TiDB Ansible version: 2.1.16
TiDB  SQL Optimizer  Fix the issue that row count is estimated inaccurately for the equal condition on the time column #11526 Fix the issue that TIDB_INLJ Hint does not take effect or take effect on the specified table #11361 Change the implementation of NOT EXISTS in a query from OUTER JOIN to ANTI JOIN to find a more optimized execution plan #11291 Support subqueries within SHOW statements, allowing syntaxes such as SHOW COLUMNS FROM tbl WHERE FIELDS IN (SELECT &#39;a&#39;) #11461 Fix the issue that the SELECT … CASE WHEN … ELSE NULL .</description>
    </item>
    
    <item>
      <title>TiDB 2.1.16 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.1.16/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.1.16/</guid>
      <description>TiDB 2.1.16 Release Notes Release date: August 15, 2019
TiDB version: 2.1.16
TiDB Ansible version: 2.1.16
TiDB  SQL Optimizer  Fix the issue that row count is estimated inaccurately for the equal condition on the time column #11526 Fix the issue that TIDB_INLJ Hint does not take effect or take effect on the specified table #11361 Change the implementation of NOT EXISTS in a query from OUTER JOIN to ANTI JOIN to find a more optimized execution plan #11291 Support subqueries within SHOW statements, allowing syntaxes such as SHOW COLUMNS FROM tbl WHERE FIELDS IN (SELECT &#39;a&#39;) #11461 Fix the issue that the SELECT … CASE WHEN … ELSE NULL .</description>
    </item>
    
    <item>
      <title>TiDB 2.1.16 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.1.16/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.1.16/</guid>
      <description>TiDB 2.1.16 Release Notes Release date: August 15, 2019
TiDB version: 2.1.16
TiDB Ansible version: 2.1.16
TiDB  SQL Optimizer  Fix the issue that row count is estimated inaccurately for the equal condition on the time column #11526 Fix the issue that TIDB_INLJ Hint does not take effect or take effect on the specified table #11361 Change the implementation of NOT EXISTS in a query from OUTER JOIN to ANTI JOIN to find a more optimized execution plan #11291 Support subqueries within SHOW statements, allowing syntaxes such as SHOW COLUMNS FROM tbl WHERE FIELDS IN (SELECT &#39;a&#39;) #11461 Fix the issue that the SELECT … CASE WHEN … ELSE NULL .</description>
    </item>
    
    <item>
      <title>TiDB 2.1.16 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.1.16/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.1.16/</guid>
      <description>TiDB 2.1.16 Release Notes Release date: August 15, 2019
TiDB version: 2.1.16
TiDB Ansible version: 2.1.16
TiDB  SQL Optimizer  Fix the issue that row count is estimated inaccurately for the equal condition on the time column #11526 Fix the issue that TIDB_INLJ Hint does not take effect or take effect on the specified table #11361 Change the implementation of NOT EXISTS in a query from OUTER JOIN to ANTI JOIN to find a more optimized execution plan #11291 Support subqueries within SHOW statements, allowing syntaxes such as SHOW COLUMNS FROM tbl WHERE FIELDS IN (SELECT &#39;a&#39;) #11461 Fix the issue that the SELECT … CASE WHEN … ELSE NULL .</description>
    </item>
    
    <item>
      <title>TiDB 2.1.17 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.1.17/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.1.17/</guid>
      <description>TiDB 2.1.17 Release Notes 发版日期：2019 年 9 月 11 日
TiDB 版本：2.1.17
TiDB Ansible 版本：2.1.17
  新特性
 TiDB 的 SHOW TABLE REGIONS 语法新增 WHERE 条件子句 TiKV、PD 新增 config-check 功能，用于配置项检查 pd-ctl 新增 remove-tomestone 命令，支持清理 tombstone store 记录 Reparo 新增 worker-count 和 txn-batch 配置项，用于控制恢复速率    改进提升
 PD 优化调度流程，支持主动下发调度 TiKV 优化启动流程，减少重启节点带来的抖动    行为变更
 TiDB 慢日志中的 start ts 由最后一次重试的时间改为第一次执行的时间 TiDB 慢日志中的 Index_ids 字段替换为 Index_names 字段，提升慢日志易用性 TiDB 配置文件中添加 split-region-max-num 参数，用于调整 SPLIT TABLE 语法允许的最大 Region 数量，默认配置下，允许的数量由 1,000 增加至 10,000    TiDB  SQL 优化器  修复 EvalSubquery 在构建 Executor 出现错误时，错误信息没有被正确返回的问题 #11811 修复 Index Lookup Join 中，外表的行数大于一个 batch 时，查询的结果可能不正确的问题；扩大 Index Lookup Join 的作用范围：可以使用 UnionScan 作为 IndexJoin 的子节点 #11843 针对统计信息的反馈过程可能产生失效 Key 的情况，SHOW STAT_BUCKETS 语句现在增加了失效 Key 的显示，例如：invalid encoded key flag 252 #12098   SQL 执行引擎  修复 CAST 函数在进行数值类型转换时，首先将数值转换为 UINT 导致一些结果不正确的问题（例如，select cast(13835058000000000000 as double)）#11712 修复 DIV 运算的被除数为 DECIMAL 类型且运算含有负数时，运算结果可能不正确的问题 #11812 添加 ConvertStrToIntStrict 函数，修复执行 SELECT/EXPLAIN 语句时，一些字符串转换 INT 类型结果与 MySQL 不兼容的问题 #11892 修复使用 EXPLAIN .</description>
    </item>
    
    <item>
      <title>TiDB 2.1.17 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.1.17/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.1.17/</guid>
      <description>TiDB 2.1.17 Release Notes 发版日期：2019 年 9 月 11 日
TiDB 版本：2.1.17
TiDB Ansible 版本：2.1.17
  新特性
 TiDB 的 SHOW TABLE REGIONS 语法新增 WHERE 条件子句 TiKV、PD 新增 config-check 功能，用于配置项检查 pd-ctl 新增 remove-tomestone 命令，支持清理 tombstone store 记录 Reparo 新增 worker-count 和 txn-batch 配置项，用于控制恢复速率    改进提升
 PD 优化调度流程，支持主动下发调度 TiKV 优化启动流程，减少重启节点带来的抖动    行为变更
 TiDB 慢日志中的 start ts 由最后一次重试的时间改为第一次执行的时间 TiDB 慢日志中的 Index_ids 字段替换为 Index_names 字段，提升慢日志易用性 TiDB 配置文件中添加 split-region-max-num 参数，用于调整 SPLIT TABLE 语法允许的最大 Region 数量，默认配置下，允许的数量由 1,000 增加至 10,000    TiDB  SQL 优化器  修复 EvalSubquery 在构建 Executor 出现错误时，错误信息没有被正确返回的问题 #11811 修复 Index Lookup Join 中，外表的行数大于一个 batch 时，查询的结果可能不正确的问题；扩大 Index Lookup Join 的作用范围：可以使用 UnionScan 作为 IndexJoin 的子节点 #11843 针对统计信息的反馈过程可能产生失效 Key 的情况，SHOW STAT_BUCKETS 语句现在增加了失效 Key 的显示，例如：invalid encoded key flag 252 #12098   SQL 执行引擎  修复 CAST 函数在进行数值类型转换时，首先将数值转换为 UINT 导致一些结果不正确的问题（例如，select cast(13835058000000000000 as double)）#11712 修复 DIV 运算的被除数为 DECIMAL 类型且运算含有负数时，运算结果可能不正确的问题 #11812 添加 ConvertStrToIntStrict 函数，修复执行 SELECT/EXPLAIN 语句时，一些字符串转换 INT 类型结果与 MySQL 不兼容的问题 #11892 修复使用 EXPLAIN .</description>
    </item>
    
    <item>
      <title>TiDB 2.1.17 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.1.17/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.1.17/</guid>
      <description>TiDB 2.1.17 Release Notes 发版日期：2019 年 9 月 11 日
TiDB 版本：2.1.17
TiDB Ansible 版本：2.1.17
  新特性
 TiDB 的 SHOW TABLE REGIONS 语法新增 WHERE 条件子句 TiKV、PD 新增 config-check 功能，用于配置项检查 pd-ctl 新增 remove-tomestone 命令，支持清理 tombstone store 记录 Reparo 新增 worker-count 和 txn-batch 配置项，用于控制恢复速率    改进提升
 PD 优化调度流程，支持主动下发调度 TiKV 优化启动流程，减少重启节点带来的抖动    行为变更
 TiDB 慢日志中的 start ts 由最后一次重试的时间改为第一次执行的时间 TiDB 慢日志中的 Index_ids 字段替换为 Index_names 字段，提升慢日志易用性 TiDB 配置文件中添加 split-region-max-num 参数，用于调整 SPLIT TABLE 语法允许的最大 Region 数量，默认配置下，允许的数量由 1,000 增加至 10,000    TiDB  SQL 优化器  修复 EvalSubquery 在构建 Executor 出现错误时，错误信息没有被正确返回的问题 #11811 修复 Index Lookup Join 中，外表的行数大于一个 batch 时，查询的结果可能不正确的问题；扩大 Index Lookup Join 的作用范围：可以使用 UnionScan 作为 IndexJoin 的子节点 #11843 针对统计信息的反馈过程可能产生失效 Key 的情况，SHOW STAT_BUCKETS 语句现在增加了失效 Key 的显示，例如：invalid encoded key flag 252 #12098   SQL 执行引擎  修复 CAST 函数在进行数值类型转换时，首先将数值转换为 UINT 导致一些结果不正确的问题（例如，select cast(13835058000000000000 as double)）#11712 修复 DIV 运算的被除数为 DECIMAL 类型且运算含有负数时，运算结果可能不正确的问题 #11812 添加 ConvertStrToIntStrict 函数，修复执行 SELECT/EXPLAIN 语句时，一些字符串转换 INT 类型结果与 MySQL 不兼容的问题 #11892 修复使用 EXPLAIN .</description>
    </item>
    
    <item>
      <title>TiDB 2.1.17 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.1.17/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.1.17/</guid>
      <description>TiDB 2.1.17 Release Notes 发版日期：2019 年 9 月 11 日
TiDB 版本：2.1.17
TiDB Ansible 版本：2.1.17
  新特性
 TiDB 的 SHOW TABLE REGIONS 语法新增 WHERE 条件子句 TiKV、PD 新增 config-check 功能，用于配置项检查 pd-ctl 新增 remove-tomestone 命令，支持清理 tombstone store 记录 Reparo 新增 worker-count 和 txn-batch 配置项，用于控制恢复速率    改进提升
 PD 优化调度流程，支持主动下发调度 TiKV 优化启动流程，减少重启节点带来的抖动    行为变更
 TiDB 慢日志中的 start ts 由最后一次重试的时间改为第一次执行的时间 TiDB 慢日志中的 Index_ids 字段替换为 Index_names 字段，提升慢日志易用性 TiDB 配置文件中添加 split-region-max-num 参数，用于调整 SPLIT TABLE 语法允许的最大 Region 数量，默认配置下，允许的数量由 1,000 增加至 10,000    TiDB  SQL 优化器  修复 EvalSubquery 在构建 Executor 出现错误时，错误信息没有被正确返回的问题 #11811 修复 Index Lookup Join 中，外表的行数大于一个 batch 时，查询的结果可能不正确的问题；扩大 Index Lookup Join 的作用范围：可以使用 UnionScan 作为 IndexJoin 的子节点 #11843 针对统计信息的反馈过程可能产生失效 Key 的情况，SHOW STAT_BUCKETS 语句现在增加了失效 Key 的显示，例如：invalid encoded key flag 252 #12098   SQL 执行引擎  修复 CAST 函数在进行数值类型转换时，首先将数值转换为 UINT 导致一些结果不正确的问题（例如，select cast(13835058000000000000 as double)）#11712 修复 DIV 运算的被除数为 DECIMAL 类型且运算含有负数时，运算结果可能不正确的问题 #11812 添加 ConvertStrToIntStrict 函数，修复执行 SELECT/EXPLAIN 语句时，一些字符串转换 INT 类型结果与 MySQL 不兼容的问题 #11892 修复使用 EXPLAIN .</description>
    </item>
    
    <item>
      <title>TiDB 2.1.17 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.1.17/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.1.17/</guid>
      <description>TiDB 2.1.17 Release Notes Release date: September 11, 2019
TiDB version: 2.1.17
TiDB Ansible version: 2.1.17
  New features
 Add the WHERE clause in TiDB’s SHOW TABLE REGIONS syntax Add the config-check feature in TiKV and PD to check the configuration items Add the remove-tomestone command in pd-ctl to clear tombstone store records Add the worker-count and txn-batch configuration items in Reparo to control the recovery speed    Improvements</description>
    </item>
    
    <item>
      <title>TiDB 2.1.17 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.1.17/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.1.17/</guid>
      <description>TiDB 2.1.17 Release Notes Release date: September 11, 2019
TiDB version: 2.1.17
TiDB Ansible version: 2.1.17
  New features
 Add the WHERE clause in TiDB’s SHOW TABLE REGIONS syntax Add the config-check feature in TiKV and PD to check the configuration items Add the remove-tomestone command in pd-ctl to clear tombstone store records Add the worker-count and txn-batch configuration items in Reparo to control the recovery speed    Improvements</description>
    </item>
    
    <item>
      <title>TiDB 2.1.17 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.1.17/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.1.17/</guid>
      <description>TiDB 2.1.17 Release Notes Release date: September 11, 2019
TiDB version: 2.1.17
TiDB Ansible version: 2.1.17
  New features
 Add the WHERE clause in TiDB’s SHOW TABLE REGIONS syntax Add the config-check feature in TiKV and PD to check the configuration items Add the remove-tomestone command in pd-ctl to clear tombstone store records Add the worker-count and txn-batch configuration items in Reparo to control the recovery speed    Improvements</description>
    </item>
    
    <item>
      <title>TiDB 2.1.17 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.1.17/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.1.17/</guid>
      <description>TiDB 2.1.17 Release Notes Release date: September 11, 2019
TiDB version: 2.1.17
TiDB Ansible version: 2.1.17
  New features
 Add the WHERE clause in TiDB’s SHOW TABLE REGIONS syntax Add the config-check feature in TiKV and PD to check the configuration items Add the remove-tomestone command in pd-ctl to clear tombstone store records Add the worker-count and txn-batch configuration items in Reparo to control the recovery speed    Improvements</description>
    </item>
    
    <item>
      <title>TiDB 2.1.18 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.1.18/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.1.18/</guid>
      <description>TiDB 2.1.18 Release Notes 发版日期：2019 年 11 月 4 日
TiDB 版本：2.1.18
TiDB Ansible 版本：2.1.18
TiDB  SQL 优化器  修复 Feedback 切分查询范围出错的问题 #12172 修复点查中权限检查不正确的问题 #12341 将 Limit 算子下推到 IndexLookUpReader 执行逻辑中，优化 select ... limit ... offset ... 的执行性能 #12380 支持在 ORDER BY、GROUP BY 和 LIMIT OFFSET 中使用参数 #12514 修复 partition 表上的 IndexJoin 返回错误结果的问题 #12713 修复 TiDB 中 str_to_date 函数在日期字符串和格式化字符串不匹配的情况下，返回结果与 MySQL 不一致的问题 #12757 修复当查询条件中包含 cast 函数时 outer join 被错误转化为 inner join 的问题 #12791 修复 AntiSemiJoin 的 join 条件中错误的表达式传递 #12800   SQL 执行引擎  修复时间取整不正确的问题 (如 2019-09-11 11:17:47.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.18 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.1.18/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.1.18/</guid>
      <description>TiDB 2.1.18 Release Notes 发版日期：2019 年 11 月 4 日
TiDB 版本：2.1.18
TiDB Ansible 版本：2.1.18
TiDB  SQL 优化器  修复 Feedback 切分查询范围出错的问题 #12172 修复点查中权限检查不正确的问题 #12341 将 Limit 算子下推到 IndexLookUpReader 执行逻辑中，优化 select ... limit ... offset ... 的执行性能 #12380 支持在 ORDER BY、GROUP BY 和 LIMIT OFFSET 中使用参数 #12514 修复 partition 表上的 IndexJoin 返回错误结果的问题 #12713 修复 TiDB 中 str_to_date 函数在日期字符串和格式化字符串不匹配的情况下，返回结果与 MySQL 不一致的问题 #12757 修复当查询条件中包含 cast 函数时 outer join 被错误转化为 inner join 的问题 #12791 修复 AntiSemiJoin 的 join 条件中错误的表达式传递 #12800   SQL 执行引擎  修复时间取整不正确的问题 (如 2019-09-11 11:17:47.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.18 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.1.18/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.1.18/</guid>
      <description>TiDB 2.1.18 Release Notes 发版日期：2019 年 11 月 4 日
TiDB 版本：2.1.18
TiDB Ansible 版本：2.1.18
TiDB  SQL 优化器  修复 Feedback 切分查询范围出错的问题 #12172 修复点查中权限检查不正确的问题 #12341 将 Limit 算子下推到 IndexLookUpReader 执行逻辑中，优化 select ... limit ... offset ... 的执行性能 #12380 支持在 ORDER BY、GROUP BY 和 LIMIT OFFSET 中使用参数 #12514 修复 partition 表上的 IndexJoin 返回错误结果的问题 #12713 修复 TiDB 中 str_to_date 函数在日期字符串和格式化字符串不匹配的情况下，返回结果与 MySQL 不一致的问题 #12757 修复当查询条件中包含 cast 函数时 outer join 被错误转化为 inner join 的问题 #12791 修复 AntiSemiJoin 的 join 条件中错误的表达式传递 #12800   SQL 执行引擎  修复时间取整不正确的问题 (如 2019-09-11 11:17:47.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.18 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.1.18/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.1.18/</guid>
      <description>TiDB 2.1.18 Release Notes 发版日期：2019 年 11 月 4 日
TiDB 版本：2.1.18
TiDB Ansible 版本：2.1.18
TiDB  SQL 优化器  修复 Feedback 切分查询范围出错的问题 #12172 修复点查中权限检查不正确的问题 #12341 将 Limit 算子下推到 IndexLookUpReader 执行逻辑中，优化 select ... limit ... offset ... 的执行性能 #12380 支持在 ORDER BY、GROUP BY 和 LIMIT OFFSET 中使用参数 #12514 修复 partition 表上的 IndexJoin 返回错误结果的问题 #12713 修复 TiDB 中 str_to_date 函数在日期字符串和格式化字符串不匹配的情况下，返回结果与 MySQL 不一致的问题 #12757 修复当查询条件中包含 cast 函数时 outer join 被错误转化为 inner join 的问题 #12791 修复 AntiSemiJoin 的 join 条件中错误的表达式传递 #12800   SQL 执行引擎  修复时间取整不正确的问题 (如 2019-09-11 11:17:47.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.18 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.1.18/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.1.18/</guid>
      <description>TiDB 2.1.18 Release Notes Release date: November 4, 2019
TiDB version: 2.1.18
TiDB Ansible version: 2.1.18
TiDB  SQL Optimizer  Fix the issue that invalid query ranges might appear when split by feedback #12172 Fix the issue that the privilege check is incorrect in point get plan #12341 Optimize execution performance of the select ... limit ... offset … statement by pushing the Limit operator down to the IndexLookUpReader execution logic #12380 Support using parameters in ORDER BY, GROUP BY and LIMIT OFFSET #12514 Fix the issue that IndexJoin on the partition table returns incorrect results #12713 Fix the issue that the str_to_date function in TiDB returns a different result from MySQL when the date string and the format string do not match #12757 Fix the issue that outer join is incorrectly converted to inner join when the cast function is included in the query conditions #12791 Fix incorrect expression passing in the join condition of AntiSemiJoin #12800   SQL Engine  Fix the incorrectly rounding of time (for example, 2019-09-11 11:17:47.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.18 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.1.18/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.1.18/</guid>
      <description>TiDB 2.1.18 Release Notes Release date: November 4, 2019
TiDB version: 2.1.18
TiDB Ansible version: 2.1.18
TiDB  SQL Optimizer  Fix the issue that invalid query ranges might appear when split by feedback #12172 Fix the issue that the privilege check is incorrect in point get plan #12341 Optimize execution performance of the select ... limit ... offset … statement by pushing the Limit operator down to the IndexLookUpReader execution logic #12380 Support using parameters in ORDER BY, GROUP BY and LIMIT OFFSET #12514 Fix the issue that IndexJoin on the partition table returns incorrect results #12713 Fix the issue that the str_to_date function in TiDB returns a different result from MySQL when the date string and the format string do not match #12757 Fix the issue that outer join is incorrectly converted to inner join when the cast function is included in the query conditions #12791 Fix incorrect expression passing in the join condition of AntiSemiJoin #12800   SQL Engine  Fix the incorrectly rounding of time (for example, 2019-09-11 11:17:47.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.18 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.1.18/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.1.18/</guid>
      <description>TiDB 2.1.18 Release Notes Release date: November 4, 2019
TiDB version: 2.1.18
TiDB Ansible version: 2.1.18
TiDB  SQL Optimizer  Fix the issue that invalid query ranges might appear when split by feedback #12172 Fix the issue that the privilege check is incorrect in point get plan #12341 Optimize execution performance of the select ... limit ... offset … statement by pushing the Limit operator down to the IndexLookUpReader execution logic #12380 Support using parameters in ORDER BY, GROUP BY and LIMIT OFFSET #12514 Fix the issue that IndexJoin on the partition table returns incorrect results #12713 Fix the issue that the str_to_date function in TiDB returns a different result from MySQL when the date string and the format string do not match #12757 Fix the issue that outer join is incorrectly converted to inner join when the cast function is included in the query conditions #12791 Fix incorrect expression passing in the join condition of AntiSemiJoin #12800   SQL Engine  Fix the incorrectly rounding of time (for example, 2019-09-11 11:17:47.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.18 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.1.18/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.1.18/</guid>
      <description>TiDB 2.1.18 Release Notes Release date: November 4, 2019
TiDB version: 2.1.18
TiDB Ansible version: 2.1.18
TiDB  SQL Optimizer  Fix the issue that invalid query ranges might appear when split by feedback #12172 Fix the issue that the privilege check is incorrect in point get plan #12341 Optimize execution performance of the select ... limit ... offset … statement by pushing the Limit operator down to the IndexLookUpReader execution logic #12380 Support using parameters in ORDER BY, GROUP BY and LIMIT OFFSET #12514 Fix the issue that IndexJoin on the partition table returns incorrect results #12713 Fix the issue that the str_to_date function in TiDB returns a different result from MySQL when the date string and the format string do not match #12757 Fix the issue that outer join is incorrectly converted to inner join when the cast function is included in the query conditions #12791 Fix incorrect expression passing in the join condition of AntiSemiJoin #12800   SQL Engine  Fix the incorrectly rounding of time (for example, 2019-09-11 11:17:47.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.19 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.1.19/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.1.19/</guid>
      <description>TiDB 2.1.19 Release Notes 发版日期：2019 年 12 月 27 日
TiDB 版本：2.1.19
TiDB Ansible 版本：2.1.19
TiDB  SQL 优化器  优化 select max(_tidb_rowid) from t 的场景，避免全表扫 #13294 修复当查询语句中赋予用户变量错误的值且将谓词下推后导致错误的输出结果 #13230 修复更新统计信息时可能存在数据竞争，导致统计信息不准确的问题 #13690 修复 UPDATE 语句中同时包含子查询和 stored generated column 时结果错误的问题；修复 UPDATE 语句中包含不同数据库的两个表名相同时，UPDATE 执行报错的问题 #13357 修复 PhysicalUnionScan 算子没有正确设置统计信息，导致查询计划可能选错的问题 #14134 移除 minAutoAnalyzeRatio 约束使自动 ANALYZE 更及时 #14013 当 WHERE 子句上有 UNIQUE KEY 的等值条件时，估算行数应该不大于 1 #13385   SQL 执行引擎  修复 ConvertJSONToInt 中使用 int64 作为 uint64 的中间解析结果，导致精度溢出的问题 #13036 修复查询中包含 SLEEP 函数时（例如 select 1 from (select sleep(1)) t;)），由于列裁剪导致查询中的 sleep(1) 失效的问题 #13039 通过实现在 INSERT ON DUPLICATE UPDATE 语句中复用 Chunk 来降低内存开销 #12999 给 slow_query 表添加事务相关的信息段 #13129，如下：  Prewrite_time Commit_time Get_commit_ts_time Commit_backoff_time Backoff_types Resolve_lock_time Local_latch_wait_time Write_key Write_size Prewrite_region Txn_retry   修复 UPDATE 语句中包含子查询时转换子查询出现的错误和当 UPDATE 的 WHERE 条件中包含子查询时更新失败的问题 #13120 支持在分区表上执行 ADMIN CHECK TABLE #13143 修复 ON UPDATE CURRENT_TIMESTAMP 作为列的属性且指定浮点精度时，SHOW CREATE TABLE 等语句显示精度不完整的问题 #12462 修复在 DROP/MODIFY/CHANGE COLUMN 时没有检查外键导致执行 SELECT * FROM information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.19 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.1.19/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.1.19/</guid>
      <description>TiDB 2.1.19 Release Notes 发版日期：2019 年 12 月 27 日
TiDB 版本：2.1.19
TiDB Ansible 版本：2.1.19
TiDB  SQL 优化器  优化 select max(_tidb_rowid) from t 的场景，避免全表扫 #13294 修复当查询语句中赋予用户变量错误的值且将谓词下推后导致错误的输出结果 #13230 修复更新统计信息时可能存在数据竞争，导致统计信息不准确的问题 #13690 修复 UPDATE 语句中同时包含子查询和 stored generated column 时结果错误的问题；修复 UPDATE 语句中包含不同数据库的两个表名相同时，UPDATE 执行报错的问题 #13357 修复 PhysicalUnionScan 算子没有正确设置统计信息，导致查询计划可能选错的问题 #14134 移除 minAutoAnalyzeRatio 约束使自动 ANALYZE 更及时 #14013 当 WHERE 子句上有 UNIQUE KEY 的等值条件时，估算行数应该不大于 1 #13385   SQL 执行引擎  修复 ConvertJSONToInt 中使用 int64 作为 uint64 的中间解析结果，导致精度溢出的问题 #13036 修复查询中包含 SLEEP 函数时（例如 select 1 from (select sleep(1)) t;)），由于列裁剪导致查询中的 sleep(1) 失效的问题 #13039 通过实现在 INSERT ON DUPLICATE UPDATE 语句中复用 Chunk 来降低内存开销 #12999 给 slow_query 表添加事务相关的信息段 #13129，如下：  Prewrite_time Commit_time Get_commit_ts_time Commit_backoff_time Backoff_types Resolve_lock_time Local_latch_wait_time Write_key Write_size Prewrite_region Txn_retry   修复 UPDATE 语句中包含子查询时转换子查询出现的错误和当 UPDATE 的 WHERE 条件中包含子查询时更新失败的问题 #13120 支持在分区表上执行 ADMIN CHECK TABLE #13143 修复 ON UPDATE CURRENT_TIMESTAMP 作为列的属性且指定浮点精度时，SHOW CREATE TABLE 等语句显示精度不完整的问题 #12462 修复在 DROP/MODIFY/CHANGE COLUMN 时没有检查外键导致执行 SELECT * FROM information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.19 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.1.19/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.1.19/</guid>
      <description>TiDB 2.1.19 Release Notes 发版日期：2019 年 12 月 27 日
TiDB 版本：2.1.19
TiDB Ansible 版本：2.1.19
TiDB  SQL 优化器  优化 select max(_tidb_rowid) from t 的场景，避免全表扫 #13294 修复当查询语句中赋予用户变量错误的值且将谓词下推后导致错误的输出结果 #13230 修复更新统计信息时可能存在数据竞争，导致统计信息不准确的问题 #13690 修复 UPDATE 语句中同时包含子查询和 stored generated column 时结果错误的问题；修复 UPDATE 语句中包含不同数据库的两个表名相同时，UPDATE 执行报错的问题 #13357 修复 PhysicalUnionScan 算子没有正确设置统计信息，导致查询计划可能选错的问题 #14134 移除 minAutoAnalyzeRatio 约束使自动 ANALYZE 更及时 #14013 当 WHERE 子句上有 UNIQUE KEY 的等值条件时，估算行数应该不大于 1 #13385   SQL 执行引擎  修复 ConvertJSONToInt 中使用 int64 作为 uint64 的中间解析结果，导致精度溢出的问题 #13036 修复查询中包含 SLEEP 函数时（例如 select 1 from (select sleep(1)) t;)），由于列裁剪导致查询中的 sleep(1) 失效的问题 #13039 通过实现在 INSERT ON DUPLICATE UPDATE 语句中复用 Chunk 来降低内存开销 #12999 给 slow_query 表添加事务相关的信息段 #13129，如下：  Prewrite_time Commit_time Get_commit_ts_time Commit_backoff_time Backoff_types Resolve_lock_time Local_latch_wait_time Write_key Write_size Prewrite_region Txn_retry   修复 UPDATE 语句中包含子查询时转换子查询出现的错误和当 UPDATE 的 WHERE 条件中包含子查询时更新失败的问题 #13120 支持在分区表上执行 ADMIN CHECK TABLE #13143 修复 ON UPDATE CURRENT_TIMESTAMP 作为列的属性且指定浮点精度时，SHOW CREATE TABLE 等语句显示精度不完整的问题 #12462 修复在 DROP/MODIFY/CHANGE COLUMN 时没有检查外键导致执行 SELECT * FROM information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.19 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.1.19/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.1.19/</guid>
      <description>TiDB 2.1.19 Release Notes 发版日期：2019 年 12 月 27 日
TiDB 版本：2.1.19
TiDB Ansible 版本：2.1.19
TiDB  SQL 优化器  优化 select max(_tidb_rowid) from t 的场景，避免全表扫 #13294 修复当查询语句中赋予用户变量错误的值且将谓词下推后导致错误的输出结果 #13230 修复更新统计信息时可能存在数据竞争，导致统计信息不准确的问题 #13690 修复 UPDATE 语句中同时包含子查询和 stored generated column 时结果错误的问题；修复 UPDATE 语句中包含不同数据库的两个表名相同时，UPDATE 执行报错的问题 #13357 修复 PhysicalUnionScan 算子没有正确设置统计信息，导致查询计划可能选错的问题 #14134 移除 minAutoAnalyzeRatio 约束使自动 ANALYZE 更及时 #14013 当 WHERE 子句上有 UNIQUE KEY 的等值条件时，估算行数应该不大于 1 #13385   SQL 执行引擎  修复 ConvertJSONToInt 中使用 int64 作为 uint64 的中间解析结果，导致精度溢出的问题 #13036 修复查询中包含 SLEEP 函数时（例如 select 1 from (select sleep(1)) t;)），由于列裁剪导致查询中的 sleep(1) 失效的问题 #13039 通过实现在 INSERT ON DUPLICATE UPDATE 语句中复用 Chunk 来降低内存开销 #12999 给 slow_query 表添加事务相关的信息段 #13129，如下：  Prewrite_time Commit_time Get_commit_ts_time Commit_backoff_time Backoff_types Resolve_lock_time Local_latch_wait_time Write_key Write_size Prewrite_region Txn_retry   修复 UPDATE 语句中包含子查询时转换子查询出现的错误和当 UPDATE 的 WHERE 条件中包含子查询时更新失败的问题 #13120 支持在分区表上执行 ADMIN CHECK TABLE #13143 修复 ON UPDATE CURRENT_TIMESTAMP 作为列的属性且指定浮点精度时，SHOW CREATE TABLE 等语句显示精度不完整的问题 #12462 修复在 DROP/MODIFY/CHANGE COLUMN 时没有检查外键导致执行 SELECT * FROM information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.19 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.1.19/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.1.19/</guid>
      <description>TiDB 2.1.19 Release Notes Release date: December 27, 2019
TiDB version: 2.1.19
TiDB Ansible version: 2.1.19
TiDB  SQL Optimizer  Optimize the scenario of select max(_tidb_rowid) from t to avoid full table scan #13294 Fix the incorrect results caused by the incorrect value assigned to the user variable in the query and the push-down of predicates #13230 Fix the issue that the statistics are not accurate because a data race occurs when statistics are updated #13690 Fix the issue that the result is incorrect when the UPDATE statement contains both a sub-query and a stored generated column; fix the UPDATE statement execution error when this statement contains two same-named tables from different databases #13357 Fix the issue that the query plan might be incorrectly selected because the PhysicalUnionScan operator incorrectly sets the statistics #14134 Remove the minAutoAnalyzeRatio constraint to make the automatic ANALYZE more timely #14013 Fix the issue that the estimated number of rows is greater than 1 when the WHERE clause contains an equal condition on the unique key #13385   SQL Execution Engine  Fix the precision overflow when using int64 as the intermediate result of unit64 in ConvertJSONToInt #13036 Fix the issue that when the SLEEP function is in a query (for example, select 1 from (select sleep(1)) t;)), column pruning causes sleep(1) in the query to be invalid #13039 Reduce memory overhead by reusing Chunk in the INSERT ON DUPLICATE UPDATE statement #12999 Add more transaction-related fields for the slow_query table #13129:  Prewrite_time Commit_time Get_commit_ts_time Commit_backoff_time Backoff_types Resolve_lock_time Local_latch_wait_time Write_key Write_size Prewrite_region Txn_retry   Fix the issue that a subquery contained in an UPDATE statement is incorrectly converted; fix the UPDATE execution failure when the WHERE clause contains a subquery #13120 Support executing ADMIN CHECK TABLE on partitioned tables #13143 Fix the issue that the precision of statements such as SHOW CREATE TABLE is incomplete when ON UPDATE CURRENT_TIMESTAMP is used as a column attribute and floating point precision is specified #12462 Fix the panic occurred when executing the SELECT * FROM information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.19 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.1.19/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.1.19/</guid>
      <description>TiDB 2.1.19 Release Notes Release date: December 27, 2019
TiDB version: 2.1.19
TiDB Ansible version: 2.1.19
TiDB  SQL Optimizer  Optimize the scenario of select max(_tidb_rowid) from t to avoid full table scan #13294 Fix the incorrect results caused by the incorrect value assigned to the user variable in the query and the push-down of predicates #13230 Fix the issue that the statistics are not accurate because a data race occurs when statistics are updated #13690 Fix the issue that the result is incorrect when the UPDATE statement contains both a sub-query and a stored generated column; fix the UPDATE statement execution error when this statement contains two same-named tables from different databases #13357 Fix the issue that the query plan might be incorrectly selected because the PhysicalUnionScan operator incorrectly sets the statistics #14134 Remove the minAutoAnalyzeRatio constraint to make the automatic ANALYZE more timely #14013 Fix the issue that the estimated number of rows is greater than 1 when the WHERE clause contains an equal condition on the unique key #13385   SQL Execution Engine  Fix the precision overflow when using int64 as the intermediate result of unit64 in ConvertJSONToInt #13036 Fix the issue that when the SLEEP function is in a query (for example, select 1 from (select sleep(1)) t;)), column pruning causes sleep(1) in the query to be invalid #13039 Reduce memory overhead by reusing Chunk in the INSERT ON DUPLICATE UPDATE statement #12999 Add more transaction-related fields for the slow_query table #13129:  Prewrite_time Commit_time Get_commit_ts_time Commit_backoff_time Backoff_types Resolve_lock_time Local_latch_wait_time Write_key Write_size Prewrite_region Txn_retry   Fix the issue that a subquery contained in an UPDATE statement is incorrectly converted; fix the UPDATE execution failure when the WHERE clause contains a subquery #13120 Support executing ADMIN CHECK TABLE on partitioned tables #13143 Fix the issue that the precision of statements such as SHOW CREATE TABLE is incomplete when ON UPDATE CURRENT_TIMESTAMP is used as a column attribute and floating point precision is specified #12462 Fix the panic occurred when executing the SELECT * FROM information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.19 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.1.19/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.1.19/</guid>
      <description>TiDB 2.1.19 Release Notes Release date: December 27, 2019
TiDB version: 2.1.19
TiDB Ansible version: 2.1.19
TiDB  SQL Optimizer  Optimize the scenario of select max(_tidb_rowid) from t to avoid full table scan #13294 Fix the incorrect results caused by the incorrect value assigned to the user variable in the query and the push-down of predicates #13230 Fix the issue that the statistics are not accurate because a data race occurs when statistics are updated #13690 Fix the issue that the result is incorrect when the UPDATE statement contains both a sub-query and a stored generated column; fix the UPDATE statement execution error when this statement contains two same-named tables from different databases #13357 Fix the issue that the query plan might be incorrectly selected because the PhysicalUnionScan operator incorrectly sets the statistics #14134 Remove the minAutoAnalyzeRatio constraint to make the automatic ANALYZE more timely #14013 Fix the issue that the estimated number of rows is greater than 1 when the WHERE clause contains an equal condition on the unique key #13385   SQL Execution Engine  Fix the precision overflow when using int64 as the intermediate result of unit64 in ConvertJSONToInt #13036 Fix the issue that when the SLEEP function is in a query (for example, select 1 from (select sleep(1)) t;)), column pruning causes sleep(1) in the query to be invalid #13039 Reduce memory overhead by reusing Chunk in the INSERT ON DUPLICATE UPDATE statement #12999 Add more transaction-related fields for the slow_query table #13129:  Prewrite_time Commit_time Get_commit_ts_time Commit_backoff_time Backoff_types Resolve_lock_time Local_latch_wait_time Write_key Write_size Prewrite_region Txn_retry   Fix the issue that a subquery contained in an UPDATE statement is incorrectly converted; fix the UPDATE execution failure when the WHERE clause contains a subquery #13120 Support executing ADMIN CHECK TABLE on partitioned tables #13143 Fix the issue that the precision of statements such as SHOW CREATE TABLE is incomplete when ON UPDATE CURRENT_TIMESTAMP is used as a column attribute and floating point precision is specified #12462 Fix the panic occurred when executing the SELECT * FROM information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.19 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.1.19/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.1.19/</guid>
      <description>TiDB 2.1.19 Release Notes Release date: December 27, 2019
TiDB version: 2.1.19
TiDB Ansible version: 2.1.19
TiDB  SQL Optimizer  Optimize the scenario of select max(_tidb_rowid) from t to avoid full table scan #13294 Fix the incorrect results caused by the incorrect value assigned to the user variable in the query and the push-down of predicates #13230 Fix the issue that the statistics are not accurate because a data race occurs when statistics are updated #13690 Fix the issue that the result is incorrect when the UPDATE statement contains both a sub-query and a stored generated column; fix the UPDATE statement execution error when this statement contains two same-named tables from different databases #13357 Fix the issue that the query plan might be incorrectly selected because the PhysicalUnionScan operator incorrectly sets the statistics #14134 Remove the minAutoAnalyzeRatio constraint to make the automatic ANALYZE more timely #14013 Fix the issue that the estimated number of rows is greater than 1 when the WHERE clause contains an equal condition on the unique key #13385   SQL Execution Engine  Fix the precision overflow when using int64 as the intermediate result of unit64 in ConvertJSONToInt #13036 Fix the issue that when the SLEEP function is in a query (for example, select 1 from (select sleep(1)) t;)), column pruning causes sleep(1) in the query to be invalid #13039 Reduce memory overhead by reusing Chunk in the INSERT ON DUPLICATE UPDATE statement #12999 Add more transaction-related fields for the slow_query table #13129:  Prewrite_time Commit_time Get_commit_ts_time Commit_backoff_time Backoff_types Resolve_lock_time Local_latch_wait_time Write_key Write_size Prewrite_region Txn_retry   Fix the issue that a subquery contained in an UPDATE statement is incorrectly converted; fix the UPDATE execution failure when the WHERE clause contains a subquery #13120 Support executing ADMIN CHECK TABLE on partitioned tables #13143 Fix the issue that the precision of statements such as SHOW CREATE TABLE is incomplete when ON UPDATE CURRENT_TIMESTAMP is used as a column attribute and floating point precision is specified #12462 Fix the panic occurred when executing the SELECT * FROM information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.1.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.1.2/</guid>
      <description>TiDB 2.1.2 Release Notes 2018 年 12 月 22 日，TiDB 发布 2.1.2 版，TiDB Ansible 相应发布 2.1.2 版本。该版本在 2.1.1 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  兼容 Kafka 版本的 TiDB Binlog #8747 完善滚动升级下 TiDB 的退出机制 #8707 修复在某些情况下为 generated column 增加索引 panic 的问题 #8676 修复在某些情况下语句有 TIDB_SMJ Hint 的时候优化器无法找到正确执行计划的问题 #8729 修复在某些情况下 AntiSemiJoin 返回错误结果的问题 #8730 增强 utf8 字符集的有效字符检查 #8754 修复事务中先写后读的情况下时间类型字段可能返回错误结果的问题 #8746  PD  修复 Region Merge 相关的 Region 信息更新问题 #1377  TiKV  支持以日 (d) 为时间单位的配置格式，并解决配置兼容性问题 #3931 修复 Approximate Size Split 可能会 panic 的问题 #3942 修复两个 Region merge 相关问题 #3822，#3873  Tools  TiDB Lightning  支持最小 TiDB 集群版本为 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.1.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.1.2/</guid>
      <description>TiDB 2.1.2 Release Notes 2018 年 12 月 22 日，TiDB 发布 2.1.2 版，TiDB Ansible 相应发布 2.1.2 版本。该版本在 2.1.1 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  兼容 Kafka 版本的 TiDB Binlog #8747 完善滚动升级下 TiDB 的退出机制 #8707 修复在某些情况下为 generated column 增加索引 panic 的问题 #8676 修复在某些情况下语句有 TIDB_SMJ Hint 的时候优化器无法找到正确执行计划的问题 #8729 修复在某些情况下 AntiSemiJoin 返回错误结果的问题 #8730 增强 utf8 字符集的有效字符检查 #8754 修复事务中先写后读的情况下时间类型字段可能返回错误结果的问题 #8746  PD  修复 Region Merge 相关的 Region 信息更新问题 #1377  TiKV  支持以日 (d) 为时间单位的配置格式，并解决配置兼容性问题 #3931 修复 Approximate Size Split 可能会 panic 的问题 #3942 修复两个 Region merge 相关问题 #3822，#3873  Tools  TiDB Lightning  支持最小 TiDB 集群版本为 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.1.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.1.2/</guid>
      <description>TiDB 2.1.2 Release Notes 2018 年 12 月 22 日，TiDB 发布 2.1.2 版，TiDB Ansible 相应发布 2.1.2 版本。该版本在 2.1.1 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  兼容 Kafka 版本的 TiDB Binlog #8747 完善滚动升级下 TiDB 的退出机制 #8707 修复在某些情况下为 generated column 增加索引 panic 的问题 #8676 修复在某些情况下语句有 TIDB_SMJ Hint 的时候优化器无法找到正确执行计划的问题 #8729 修复在某些情况下 AntiSemiJoin 返回错误结果的问题 #8730 增强 utf8 字符集的有效字符检查 #8754 修复事务中先写后读的情况下时间类型字段可能返回错误结果的问题 #8746  PD  修复 Region Merge 相关的 Region 信息更新问题 #1377  TiKV  支持以日 (d) 为时间单位的配置格式，并解决配置兼容性问题 #3931 修复 Approximate Size Split 可能会 panic 的问题 #3942 修复两个 Region merge 相关问题 #3822，#3873  Tools  TiDB Lightning  支持最小 TiDB 集群版本为 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.1.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.1.2/</guid>
      <description>TiDB 2.1.2 Release Notes 2018 年 12 月 22 日，TiDB 发布 2.1.2 版，TiDB Ansible 相应发布 2.1.2 版本。该版本在 2.1.1 版的基础上，对系统兼容性、稳定性做出了改进。
TiDB  兼容 Kafka 版本的 TiDB Binlog #8747 完善滚动升级下 TiDB 的退出机制 #8707 修复在某些情况下为 generated column 增加索引 panic 的问题 #8676 修复在某些情况下语句有 TIDB_SMJ Hint 的时候优化器无法找到正确执行计划的问题 #8729 修复在某些情况下 AntiSemiJoin 返回错误结果的问题 #8730 增强 utf8 字符集的有效字符检查 #8754 修复事务中先写后读的情况下时间类型字段可能返回错误结果的问题 #8746  PD  修复 Region Merge 相关的 Region 信息更新问题 #1377  TiKV  支持以日 (d) 为时间单位的配置格式，并解决配置兼容性问题 #3931 修复 Approximate Size Split 可能会 panic 的问题 #3942 修复两个 Region merge 相关问题 #3822，#3873  Tools  TiDB Lightning  支持最小 TiDB 集群版本为 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.2 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.1.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.1.2/</guid>
      <description>TiDB 2.1.2 Release Notes On December 22, 2018, TiDB 2.1.2 is released. The corresponding TiDB Ansible 2.1.2 is also released. Compared with TiDB 2.1.1, this release has great improvement in system compatibility and stability.
TiDB  Make TiDB compatible with TiDB Binlog of the Kafka version #8747 Improve the exit mechanism of TiDB in a rolling update #8707 Fix the panic issue caused by adding the index for the generated column in some cases #8676 Fix the issue that the optimizer cannot find the optimal query plan when TIDB_SMJ Hint exists in the SQL statement in some cases #8729 Fix the issue that AntiSemiJoin returns an incorrect result in some cases #8730 Improve the valid character check of the utf8 character set #8754 Fix the issue that the field of the time type might return an incorrect result when the write operation is performed before the read operation in a transaction #8746  PD  Fix the Region information update issue about Region merge #1377  TiKV  Support the configuration format in the unit of DAY (d) and fix the configuration compatibility issue #3931 Fix the possible panic issue caused by Approximate Size Split #3942 Fix two issues about Region merge #3822, #3873  Tools  TiDB Lightning  Make TiDB 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.2 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.1.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.1.2/</guid>
      <description>TiDB 2.1.2 Release Notes On December 22, 2018, TiDB 2.1.2 is released. The corresponding TiDB Ansible 2.1.2 is also released. Compared with TiDB 2.1.1, this release has great improvement in system compatibility and stability.
TiDB  Make TiDB compatible with TiDB Binlog of the Kafka version #8747 Improve the exit mechanism of TiDB in a rolling update #8707 Fix the panic issue caused by adding the index for the generated column in some cases #8676 Fix the issue that the optimizer cannot find the optimal query plan when TIDB_SMJ Hint exists in the SQL statement in some cases #8729 Fix the issue that AntiSemiJoin returns an incorrect result in some cases #8730 Improve the valid character check of the utf8 character set #8754 Fix the issue that the field of the time type might return an incorrect result when the write operation is performed before the read operation in a transaction #8746  PD  Fix the Region information update issue about Region merge #1377  TiKV  Support the configuration format in the unit of DAY (d) and fix the configuration compatibility issue #3931 Fix the possible panic issue caused by Approximate Size Split #3942 Fix two issues about Region merge #3822, #3873  Tools  TiDB Lightning  Make TiDB 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.2 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.1.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.1.2/</guid>
      <description>TiDB 2.1.2 Release Notes On December 22, 2018, TiDB 2.1.2 is released. The corresponding TiDB Ansible 2.1.2 is also released. Compared with TiDB 2.1.1, this release has great improvement in system compatibility and stability.
TiDB  Make TiDB compatible with TiDB Binlog of the Kafka version #8747 Improve the exit mechanism of TiDB in a rolling update #8707 Fix the panic issue caused by adding the index for the generated column in some cases #8676 Fix the issue that the optimizer cannot find the optimal query plan when TIDB_SMJ Hint exists in the SQL statement in some cases #8729 Fix the issue that AntiSemiJoin returns an incorrect result in some cases #8730 Improve the valid character check of the utf8 character set #8754 Fix the issue that the field of the time type might return an incorrect result when the write operation is performed before the read operation in a transaction #8746  PD  Fix the Region information update issue about Region merge #1377  TiKV  Support the configuration format in the unit of DAY (d) and fix the configuration compatibility issue #3931 Fix the possible panic issue caused by Approximate Size Split #3942 Fix two issues about Region merge #3822, #3873  Tools  TiDB Lightning  Make TiDB 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.2 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.1.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.1.2/</guid>
      <description>TiDB 2.1.2 Release Notes On December 22, 2018, TiDB 2.1.2 is released. The corresponding TiDB Ansible 2.1.2 is also released. Compared with TiDB 2.1.1, this release has great improvement in system compatibility and stability.
TiDB  Make TiDB compatible with TiDB Binlog of the Kafka version #8747 Improve the exit mechanism of TiDB in a rolling update #8707 Fix the panic issue caused by adding the index for the generated column in some cases #8676 Fix the issue that the optimizer cannot find the optimal query plan when TIDB_SMJ Hint exists in the SQL statement in some cases #8729 Fix the issue that AntiSemiJoin returns an incorrect result in some cases #8730 Improve the valid character check of the utf8 character set #8754 Fix the issue that the field of the time type might return an incorrect result when the write operation is performed before the read operation in a transaction #8746  PD  Fix the Region information update issue about Region merge #1377  TiKV  Support the configuration format in the unit of DAY (d) and fix the configuration compatibility issue #3931 Fix the possible panic issue caused by Approximate Size Split #3942 Fix two issues about Region merge #3822, #3873  Tools  TiDB Lightning  Make TiDB 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.1.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.1.3/</guid>
      <description>TiDB 2.1.3 Release Notes 2019 年 01 月 28 日，TiDB 发布 2.1.3 版，TiDB Ansible 相应发布 2.1.3 版本。相比 2.1.2 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  优化器/执行器  修复某些情况下 Prepared Plan Cache panic 的问题 #8826 修复在有前缀索引的某些情况下，Range 计算错误的问题 #8851 当 SQL_MODE 不为 STRICT 时, CAST(str AS TIME(N)) 在 str 为非法的 TIME 格式的字符串时返回 NULL #8966 修复某些情况下 Generated Column 在 Update 中 Panic 的问题 #8980 修复统计信息直方图某些情况下上界溢出的问题 #8989 支持对 _tidb_rowid 构造查询的 Range，避免全表扫，减轻集群压力 #9059 CAST(AS TIME) 在精度太大的情况下返回一个错误 #9058 允许把 Sort Merge Join 用于笛卡尔积 #9037 修复统计信息的 worker 在某些情况下 panic 之后无法恢复的问题 #9085 修复某些情况下 Sort Merge Join 结果不正确的问题 #9046 支持在 CASE 子句返回 JSON 类型 #8355   Server  当语句中有非 TiDB hint 的注释时返回警告，而不是错误 #8766 验证设置的 TIMEZONE 的合法性 #8879 优化 Metrics 项 QueryDurationHistogram，展示更多语句的类型 #8875 修复 bigint 某些情况下下界溢出的问题 #8544 支持 ALLOW_INVALID_DATES SQL mode #9110   DDL  修复一个 RENAME TABLE 的兼容性问题，保持行为跟 MySQL 一致 #8808 支持 ADD INDEX 的并发修改即时生效 #8786 修复在 ADD COLUMN 的过程中，某些情况 Update 语句 panic 的问题 #8906 修复某些情况下并发创建 Table Partition 的问题 #8902 支持把 utf8 字符集转换为 utf8mb4 字符集 #8951 #9152 处理 Shard Bits 溢出的问题 #8976 支持 SHOW CREATE TABLE 输出列的字符集 #9053 修复 varchar 最大支持字符数在 utf8mb4 下限制的问题 #8818 支持 ALTER TABLE TRUNCATE TABLE PARTITION #9093 修复创建表的时候缺省字符集推算的问题 #9147    PD  修复 Leader 选举相关的 Watch 问题 #1396  TiKV  支持了使用 HTTP 方式获取监控信息 #3855 修复 data_format 遇到 NULL 时的问题 #4075 添加验证 Scan 请求的边界合法性 #4124  Tools  TiDB Binlog  修复在启动或者重启时 no available pump 的问题 #157 开启 Pump client log 输出 #165 修复表只有 unique key 没有 primary key 的情况下，unique key 包含 NULL 值导致数据更新不一致的问题    </description>
    </item>
    
    <item>
      <title>TiDB 2.1.3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.1.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.1.3/</guid>
      <description>TiDB 2.1.3 Release Notes 2019 年 01 月 28 日，TiDB 发布 2.1.3 版，TiDB Ansible 相应发布 2.1.3 版本。相比 2.1.2 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  优化器/执行器  修复某些情况下 Prepared Plan Cache panic 的问题 #8826 修复在有前缀索引的某些情况下，Range 计算错误的问题 #8851 当 SQL_MODE 不为 STRICT 时, CAST(str AS TIME(N)) 在 str 为非法的 TIME 格式的字符串时返回 NULL #8966 修复某些情况下 Generated Column 在 Update 中 Panic 的问题 #8980 修复统计信息直方图某些情况下上界溢出的问题 #8989 支持对 _tidb_rowid 构造查询的 Range，避免全表扫，减轻集群压力 #9059 CAST(AS TIME) 在精度太大的情况下返回一个错误 #9058 允许把 Sort Merge Join 用于笛卡尔积 #9037 修复统计信息的 worker 在某些情况下 panic 之后无法恢复的问题 #9085 修复某些情况下 Sort Merge Join 结果不正确的问题 #9046 支持在 CASE 子句返回 JSON 类型 #8355   Server  当语句中有非 TiDB hint 的注释时返回警告，而不是错误 #8766 验证设置的 TIMEZONE 的合法性 #8879 优化 Metrics 项 QueryDurationHistogram，展示更多语句的类型 #8875 修复 bigint 某些情况下下界溢出的问题 #8544 支持 ALLOW_INVALID_DATES SQL mode #9110   DDL  修复一个 RENAME TABLE 的兼容性问题，保持行为跟 MySQL 一致 #8808 支持 ADD INDEX 的并发修改即时生效 #8786 修复在 ADD COLUMN 的过程中，某些情况 Update 语句 panic 的问题 #8906 修复某些情况下并发创建 Table Partition 的问题 #8902 支持把 utf8 字符集转换为 utf8mb4 字符集 #8951 #9152 处理 Shard Bits 溢出的问题 #8976 支持 SHOW CREATE TABLE 输出列的字符集 #9053 修复 varchar 最大支持字符数在 utf8mb4 下限制的问题 #8818 支持 ALTER TABLE TRUNCATE TABLE PARTITION #9093 修复创建表的时候缺省字符集推算的问题 #9147    PD  修复 Leader 选举相关的 Watch 问题 #1396  TiKV  支持了使用 HTTP 方式获取监控信息 #3855 修复 data_format 遇到 NULL 时的问题 #4075 添加验证 Scan 请求的边界合法性 #4124  Tools  TiDB Binlog  修复在启动或者重启时 no available pump 的问题 #157 开启 Pump client log 输出 #165 修复表只有 unique key 没有 primary key 的情况下，unique key 包含 NULL 值导致数据更新不一致的问题    </description>
    </item>
    
    <item>
      <title>TiDB 2.1.3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.1.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.1.3/</guid>
      <description>TiDB 2.1.3 Release Notes 2019 年 01 月 28 日，TiDB 发布 2.1.3 版，TiDB Ansible 相应发布 2.1.3 版本。相比 2.1.2 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  优化器/执行器  修复某些情况下 Prepared Plan Cache panic 的问题 #8826 修复在有前缀索引的某些情况下，Range 计算错误的问题 #8851 当 SQL_MODE 不为 STRICT 时, CAST(str AS TIME(N)) 在 str 为非法的 TIME 格式的字符串时返回 NULL #8966 修复某些情况下 Generated Column 在 Update 中 Panic 的问题 #8980 修复统计信息直方图某些情况下上界溢出的问题 #8989 支持对 _tidb_rowid 构造查询的 Range，避免全表扫，减轻集群压力 #9059 CAST(AS TIME) 在精度太大的情况下返回一个错误 #9058 允许把 Sort Merge Join 用于笛卡尔积 #9037 修复统计信息的 worker 在某些情况下 panic 之后无法恢复的问题 #9085 修复某些情况下 Sort Merge Join 结果不正确的问题 #9046 支持在 CASE 子句返回 JSON 类型 #8355   Server  当语句中有非 TiDB hint 的注释时返回警告，而不是错误 #8766 验证设置的 TIMEZONE 的合法性 #8879 优化 Metrics 项 QueryDurationHistogram，展示更多语句的类型 #8875 修复 bigint 某些情况下下界溢出的问题 #8544 支持 ALLOW_INVALID_DATES SQL mode #9110   DDL  修复一个 RENAME TABLE 的兼容性问题，保持行为跟 MySQL 一致 #8808 支持 ADD INDEX 的并发修改即时生效 #8786 修复在 ADD COLUMN 的过程中，某些情况 Update 语句 panic 的问题 #8906 修复某些情况下并发创建 Table Partition 的问题 #8902 支持把 utf8 字符集转换为 utf8mb4 字符集 #8951 #9152 处理 Shard Bits 溢出的问题 #8976 支持 SHOW CREATE TABLE 输出列的字符集 #9053 修复 varchar 最大支持字符数在 utf8mb4 下限制的问题 #8818 支持 ALTER TABLE TRUNCATE TABLE PARTITION #9093 修复创建表的时候缺省字符集推算的问题 #9147    PD  修复 Leader 选举相关的 Watch 问题 #1396  TiKV  支持了使用 HTTP 方式获取监控信息 #3855 修复 data_format 遇到 NULL 时的问题 #4075 添加验证 Scan 请求的边界合法性 #4124  Tools  TiDB Binlog  修复在启动或者重启时 no available pump 的问题 #157 开启 Pump client log 输出 #165 修复表只有 unique key 没有 primary key 的情况下，unique key 包含 NULL 值导致数据更新不一致的问题    </description>
    </item>
    
    <item>
      <title>TiDB 2.1.3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.1.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.1.3/</guid>
      <description>TiDB 2.1.3 Release Notes 2019 年 01 月 28 日，TiDB 发布 2.1.3 版，TiDB Ansible 相应发布 2.1.3 版本。相比 2.1.2 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  优化器/执行器  修复某些情况下 Prepared Plan Cache panic 的问题 #8826 修复在有前缀索引的某些情况下，Range 计算错误的问题 #8851 当 SQL_MODE 不为 STRICT 时, CAST(str AS TIME(N)) 在 str 为非法的 TIME 格式的字符串时返回 NULL #8966 修复某些情况下 Generated Column 在 Update 中 Panic 的问题 #8980 修复统计信息直方图某些情况下上界溢出的问题 #8989 支持对 _tidb_rowid 构造查询的 Range，避免全表扫，减轻集群压力 #9059 CAST(AS TIME) 在精度太大的情况下返回一个错误 #9058 允许把 Sort Merge Join 用于笛卡尔积 #9037 修复统计信息的 worker 在某些情况下 panic 之后无法恢复的问题 #9085 修复某些情况下 Sort Merge Join 结果不正确的问题 #9046 支持在 CASE 子句返回 JSON 类型 #8355   Server  当语句中有非 TiDB hint 的注释时返回警告，而不是错误 #8766 验证设置的 TIMEZONE 的合法性 #8879 优化 Metrics 项 QueryDurationHistogram，展示更多语句的类型 #8875 修复 bigint 某些情况下下界溢出的问题 #8544 支持 ALLOW_INVALID_DATES SQL mode #9110   DDL  修复一个 RENAME TABLE 的兼容性问题，保持行为跟 MySQL 一致 #8808 支持 ADD INDEX 的并发修改即时生效 #8786 修复在 ADD COLUMN 的过程中，某些情况 Update 语句 panic 的问题 #8906 修复某些情况下并发创建 Table Partition 的问题 #8902 支持把 utf8 字符集转换为 utf8mb4 字符集 #8951 #9152 处理 Shard Bits 溢出的问题 #8976 支持 SHOW CREATE TABLE 输出列的字符集 #9053 修复 varchar 最大支持字符数在 utf8mb4 下限制的问题 #8818 支持 ALTER TABLE TRUNCATE TABLE PARTITION #9093 修复创建表的时候缺省字符集推算的问题 #9147    PD  修复 Leader 选举相关的 Watch 问题 #1396  TiKV  支持了使用 HTTP 方式获取监控信息 #3855 修复 data_format 遇到 NULL 时的问题 #4075 添加验证 Scan 请求的边界合法性 #4124  Tools  TiDB Binlog  修复在启动或者重启时 no available pump 的问题 #157 开启 Pump client log 输出 #165 修复表只有 unique key 没有 primary key 的情况下，unique key 包含 NULL 值导致数据更新不一致的问题    </description>
    </item>
    
    <item>
      <title>TiDB 2.1.3 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.1.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.1.3/</guid>
      <description>TiDB 2.1.3 Release Notes On January 28, 2019, TiDB 2.1.3 is released. The corresponding TiDB Ansible 2.1.3 is also released. Compared with TiDB 2.1.2, this release has great improvement in system stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer/Executor  Fix the panic issue of Prepared Plan Cache in some cases #8826 Fix the issue that Range computing is wrong when the index is a prefix index #8851 Make CAST(str AS TIME(N)) return null if the string is in the illegal TIME format when SQL_MODE is not strict #8966 Fix the panic issue of Generated Column during the process of UPDATE in some cases #8980 Fix the upper bound overflow issue of the statistics histogram in some cases #8989 Support Range for _tidb_rowid construction queries, to avoid full table scan and reduce cluster stress #9059 Return an error when the CAST(AS TIME) precision is too big #9058 Allow using Sort Merge Join in the Cartesian product #9037 Fix the issue that the statistics worker cannot resume after the panic in some cases #9085 Fix the issue that Sort Merge Join returns the wrong result in some cases #9046 Support returning the JSON type in the CASE clause #8355   Server  Return a warning instead of an error when the non-TiDB hint exists in the comment #8766 Verify the validity of the configured TIMEZONE value #8879 Optimize the QueryDurationHistogram metrics item to display more statement types #8875 Fix the lower bound overflow issue of bigint in some cases #8544 Support the ALLOW_INVALID_DATES SQL mode #9110   DDL  Fix a RENAME TABLE compatibility issue to keep the behavior consistent with that of MySQL #8808 Support making concurrent changes of ADD INDEX take effect immediately #8786 Fix the UPDATE panic issue during the process of ADD COLUMN in some cases #8906 Fix the issue of concurrently creating Table Partition in some cases #8902 Support converting the utf8 character set to utf8mb4 #8951 #9152 Fix the issue of Shard Bits overflow #8976 Support outputting the column character sets in SHOW CREATE TABLE #9053 Fix the issue of the maximum length limit of the varchar type column in utf8mb4 #8818 Support ALTER TABLE TRUNCATE TABLE PARTITION #9093 Resolve the charset when the charset is not provided #9147    PD  Fix the Watch issue related to leader election #1396  TiKV  Support obtaining the monitoring information using the HTTP method #3855 Fix the NULL issue of data_format #4075 Add verifying the range for scan requests #4124  Tools  TiDB Binlog  Fix the no available pump issue while TiDB is started or restarted #157 Enable outputting the Pump client log #165 Fix the data inconsistency issue caused by the unique key containing the NULL value when the table only has the unique key and does not have the primary key    </description>
    </item>
    
    <item>
      <title>TiDB 2.1.3 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.1.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.1.3/</guid>
      <description>TiDB 2.1.3 Release Notes On January 28, 2019, TiDB 2.1.3 is released. The corresponding TiDB Ansible 2.1.3 is also released. Compared with TiDB 2.1.2, this release has great improvement in system stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer/Executor  Fix the panic issue of Prepared Plan Cache in some cases #8826 Fix the issue that Range computing is wrong when the index is a prefix index #8851 Make CAST(str AS TIME(N)) return null if the string is in the illegal TIME format when SQL_MODE is not strict #8966 Fix the panic issue of Generated Column during the process of UPDATE in some cases #8980 Fix the upper bound overflow issue of the statistics histogram in some cases #8989 Support Range for _tidb_rowid construction queries, to avoid full table scan and reduce cluster stress #9059 Return an error when the CAST(AS TIME) precision is too big #9058 Allow using Sort Merge Join in the Cartesian product #9037 Fix the issue that the statistics worker cannot resume after the panic in some cases #9085 Fix the issue that Sort Merge Join returns the wrong result in some cases #9046 Support returning the JSON type in the CASE clause #8355   Server  Return a warning instead of an error when the non-TiDB hint exists in the comment #8766 Verify the validity of the configured TIMEZONE value #8879 Optimize the QueryDurationHistogram metrics item to display more statement types #8875 Fix the lower bound overflow issue of bigint in some cases #8544 Support the ALLOW_INVALID_DATES SQL mode #9110   DDL  Fix a RENAME TABLE compatibility issue to keep the behavior consistent with that of MySQL #8808 Support making concurrent changes of ADD INDEX take effect immediately #8786 Fix the UPDATE panic issue during the process of ADD COLUMN in some cases #8906 Fix the issue of concurrently creating Table Partition in some cases #8902 Support converting the utf8 character set to utf8mb4 #8951 #9152 Fix the issue of Shard Bits overflow #8976 Support outputting the column character sets in SHOW CREATE TABLE #9053 Fix the issue of the maximum length limit of the varchar type column in utf8mb4 #8818 Support ALTER TABLE TRUNCATE TABLE PARTITION #9093 Resolve the charset when the charset is not provided #9147    PD  Fix the Watch issue related to leader election #1396  TiKV  Support obtaining the monitoring information using the HTTP method #3855 Fix the NULL issue of data_format #4075 Add verifying the range for scan requests #4124  Tools  TiDB Binlog  Fix the no available pump issue while TiDB is started or restarted #157 Enable outputting the Pump client log #165 Fix the data inconsistency issue caused by the unique key containing the NULL value when the table only has the unique key and does not have the primary key    </description>
    </item>
    
    <item>
      <title>TiDB 2.1.3 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.1.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.1.3/</guid>
      <description>TiDB 2.1.3 Release Notes On January 28, 2019, TiDB 2.1.3 is released. The corresponding TiDB Ansible 2.1.3 is also released. Compared with TiDB 2.1.2, this release has great improvement in system stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer/Executor  Fix the panic issue of Prepared Plan Cache in some cases #8826 Fix the issue that Range computing is wrong when the index is a prefix index #8851 Make CAST(str AS TIME(N)) return null if the string is in the illegal TIME format when SQL_MODE is not strict #8966 Fix the panic issue of Generated Column during the process of UPDATE in some cases #8980 Fix the upper bound overflow issue of the statistics histogram in some cases #8989 Support Range for _tidb_rowid construction queries, to avoid full table scan and reduce cluster stress #9059 Return an error when the CAST(AS TIME) precision is too big #9058 Allow using Sort Merge Join in the Cartesian product #9037 Fix the issue that the statistics worker cannot resume after the panic in some cases #9085 Fix the issue that Sort Merge Join returns the wrong result in some cases #9046 Support returning the JSON type in the CASE clause #8355   Server  Return a warning instead of an error when the non-TiDB hint exists in the comment #8766 Verify the validity of the configured TIMEZONE value #8879 Optimize the QueryDurationHistogram metrics item to display more statement types #8875 Fix the lower bound overflow issue of bigint in some cases #8544 Support the ALLOW_INVALID_DATES SQL mode #9110   DDL  Fix a RENAME TABLE compatibility issue to keep the behavior consistent with that of MySQL #8808 Support making concurrent changes of ADD INDEX take effect immediately #8786 Fix the UPDATE panic issue during the process of ADD COLUMN in some cases #8906 Fix the issue of concurrently creating Table Partition in some cases #8902 Support converting the utf8 character set to utf8mb4 #8951 #9152 Fix the issue of Shard Bits overflow #8976 Support outputting the column character sets in SHOW CREATE TABLE #9053 Fix the issue of the maximum length limit of the varchar type column in utf8mb4 #8818 Support ALTER TABLE TRUNCATE TABLE PARTITION #9093 Resolve the charset when the charset is not provided #9147    PD  Fix the Watch issue related to leader election #1396  TiKV  Support obtaining the monitoring information using the HTTP method #3855 Fix the NULL issue of data_format #4075 Add verifying the range for scan requests #4124  Tools  TiDB Binlog  Fix the no available pump issue while TiDB is started or restarted #157 Enable outputting the Pump client log #165 Fix the data inconsistency issue caused by the unique key containing the NULL value when the table only has the unique key and does not have the primary key    </description>
    </item>
    
    <item>
      <title>TiDB 2.1.3 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.1.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.1.3/</guid>
      <description>TiDB 2.1.3 Release Notes On January 28, 2019, TiDB 2.1.3 is released. The corresponding TiDB Ansible 2.1.3 is also released. Compared with TiDB 2.1.2, this release has great improvement in system stability, SQL optimizer, statistics information, and execution engine.
TiDB  SQL Optimizer/Executor  Fix the panic issue of Prepared Plan Cache in some cases #8826 Fix the issue that Range computing is wrong when the index is a prefix index #8851 Make CAST(str AS TIME(N)) return null if the string is in the illegal TIME format when SQL_MODE is not strict #8966 Fix the panic issue of Generated Column during the process of UPDATE in some cases #8980 Fix the upper bound overflow issue of the statistics histogram in some cases #8989 Support Range for _tidb_rowid construction queries, to avoid full table scan and reduce cluster stress #9059 Return an error when the CAST(AS TIME) precision is too big #9058 Allow using Sort Merge Join in the Cartesian product #9037 Fix the issue that the statistics worker cannot resume after the panic in some cases #9085 Fix the issue that Sort Merge Join returns the wrong result in some cases #9046 Support returning the JSON type in the CASE clause #8355   Server  Return a warning instead of an error when the non-TiDB hint exists in the comment #8766 Verify the validity of the configured TIMEZONE value #8879 Optimize the QueryDurationHistogram metrics item to display more statement types #8875 Fix the lower bound overflow issue of bigint in some cases #8544 Support the ALLOW_INVALID_DATES SQL mode #9110   DDL  Fix a RENAME TABLE compatibility issue to keep the behavior consistent with that of MySQL #8808 Support making concurrent changes of ADD INDEX take effect immediately #8786 Fix the UPDATE panic issue during the process of ADD COLUMN in some cases #8906 Fix the issue of concurrently creating Table Partition in some cases #8902 Support converting the utf8 character set to utf8mb4 #8951 #9152 Fix the issue of Shard Bits overflow #8976 Support outputting the column character sets in SHOW CREATE TABLE #9053 Fix the issue of the maximum length limit of the varchar type column in utf8mb4 #8818 Support ALTER TABLE TRUNCATE TABLE PARTITION #9093 Resolve the charset when the charset is not provided #9147    PD  Fix the Watch issue related to leader election #1396  TiKV  Support obtaining the monitoring information using the HTTP method #3855 Fix the NULL issue of data_format #4075 Add verifying the range for scan requests #4124  Tools  TiDB Binlog  Fix the no available pump issue while TiDB is started or restarted #157 Enable outputting the Pump client log #165 Fix the data inconsistency issue caused by the unique key containing the NULL value when the table only has the unique key and does not have the primary key    </description>
    </item>
    
    <item>
      <title>TiDB 2.1.4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.1.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.1.4/</guid>
      <description>TiDB 2.1.4 Release Notes 2019 年 2 月 15 日，TiDB 发布 2.1.4 版，TiDB Ansible 相应发布 2.1.4 版本。相比 2.1.3 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  优化器/执行器  修复 VALUES 函数未正确处理 FLOAT 类型的问题 #9223 修复某些情况下 CAST 浮点数成字符串结果不正确的问题 #9227 修复 FORMAT 函数在某些情况下结果不正确的问题 #9235 修复某些情况下处理 Join 查询时 panic 的问题 #9264 修复 VALUES 函数未正确处理 ENUM 类型的问题 #9280 修复 DATE_ADD/DATE_SUB 在某些情况下结果不正确的问题 #9284   Server  优化 reload privilege success 日志，将其调整为 DEBUG 级别 #9274   DDL  tidb_ddl_reorg_worker_cnt 和 tidb_ddl_reorg_batch_size 变成 GLOBAL 变量 #9134 修复某些异常情况下，在 Generated column 增加索引导致的 Bug #9289    TiKV  修复在 TiKV 关闭时可能发生重复写的问题 #4146 修复某些情况下 event listener 结果处理异常的问题 #4132  Tools  Lightning  优化内存使用 #107，#108 去掉 dump files 的 chunk 划分，减少对 dump files 的一次额外解析 #109 限制读取 dump files 的 I/O 并发，避免过多的 cache miss 导致性能下降 #110 对单个表实现 batch 导入，提高导入的稳定性 #110 TiKV 在 import 模式下开启 auto compactions #4199 增加禁用 TiKV periodic Level-1 compaction 参数，因为当 TiKV 集群为 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.1.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.1.4/</guid>
      <description>TiDB 2.1.4 Release Notes 2019 年 2 月 15 日，TiDB 发布 2.1.4 版，TiDB Ansible 相应发布 2.1.4 版本。相比 2.1.3 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  优化器/执行器  修复 VALUES 函数未正确处理 FLOAT 类型的问题 #9223 修复某些情况下 CAST 浮点数成字符串结果不正确的问题 #9227 修复 FORMAT 函数在某些情况下结果不正确的问题 #9235 修复某些情况下处理 Join 查询时 panic 的问题 #9264 修复 VALUES 函数未正确处理 ENUM 类型的问题 #9280 修复 DATE_ADD/DATE_SUB 在某些情况下结果不正确的问题 #9284   Server  优化 reload privilege success 日志，将其调整为 DEBUG 级别 #9274   DDL  tidb_ddl_reorg_worker_cnt 和 tidb_ddl_reorg_batch_size 变成 GLOBAL 变量 #9134 修复某些异常情况下，在 Generated column 增加索引导致的 Bug #9289    TiKV  修复在 TiKV 关闭时可能发生重复写的问题 #4146 修复某些情况下 event listener 结果处理异常的问题 #4132  Tools  Lightning  优化内存使用 #107，#108 去掉 dump files 的 chunk 划分，减少对 dump files 的一次额外解析 #109 限制读取 dump files 的 I/O 并发，避免过多的 cache miss 导致性能下降 #110 对单个表实现 batch 导入，提高导入的稳定性 #110 TiKV 在 import 模式下开启 auto compactions #4199 增加禁用 TiKV periodic Level-1 compaction 参数，因为当 TiKV 集群为 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.1.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.1.4/</guid>
      <description>TiDB 2.1.4 Release Notes 2019 年 2 月 15 日，TiDB 发布 2.1.4 版，TiDB Ansible 相应发布 2.1.4 版本。相比 2.1.3 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  优化器/执行器  修复 VALUES 函数未正确处理 FLOAT 类型的问题 #9223 修复某些情况下 CAST 浮点数成字符串结果不正确的问题 #9227 修复 FORMAT 函数在某些情况下结果不正确的问题 #9235 修复某些情况下处理 Join 查询时 panic 的问题 #9264 修复 VALUES 函数未正确处理 ENUM 类型的问题 #9280 修复 DATE_ADD/DATE_SUB 在某些情况下结果不正确的问题 #9284   Server  优化 reload privilege success 日志，将其调整为 DEBUG 级别 #9274   DDL  tidb_ddl_reorg_worker_cnt 和 tidb_ddl_reorg_batch_size 变成 GLOBAL 变量 #9134 修复某些异常情况下，在 Generated column 增加索引导致的 Bug #9289    TiKV  修复在 TiKV 关闭时可能发生重复写的问题 #4146 修复某些情况下 event listener 结果处理异常的问题 #4132  Tools  Lightning  优化内存使用 #107，#108 去掉 dump files 的 chunk 划分，减少对 dump files 的一次额外解析 #109 限制读取 dump files 的 I/O 并发，避免过多的 cache miss 导致性能下降 #110 对单个表实现 batch 导入，提高导入的稳定性 #110 TiKV 在 import 模式下开启 auto compactions #4199 增加禁用 TiKV periodic Level-1 compaction 参数，因为当 TiKV 集群为 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.1.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.1.4/</guid>
      <description>TiDB 2.1.4 Release Notes 2019 年 2 月 15 日，TiDB 发布 2.1.4 版，TiDB Ansible 相应发布 2.1.4 版本。相比 2.1.3 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  优化器/执行器  修复 VALUES 函数未正确处理 FLOAT 类型的问题 #9223 修复某些情况下 CAST 浮点数成字符串结果不正确的问题 #9227 修复 FORMAT 函数在某些情况下结果不正确的问题 #9235 修复某些情况下处理 Join 查询时 panic 的问题 #9264 修复 VALUES 函数未正确处理 ENUM 类型的问题 #9280 修复 DATE_ADD/DATE_SUB 在某些情况下结果不正确的问题 #9284   Server  优化 reload privilege success 日志，将其调整为 DEBUG 级别 #9274   DDL  tidb_ddl_reorg_worker_cnt 和 tidb_ddl_reorg_batch_size 变成 GLOBAL 变量 #9134 修复某些异常情况下，在 Generated column 增加索引导致的 Bug #9289    TiKV  修复在 TiKV 关闭时可能发生重复写的问题 #4146 修复某些情况下 event listener 结果处理异常的问题 #4132  Tools  Lightning  优化内存使用 #107，#108 去掉 dump files 的 chunk 划分，减少对 dump files 的一次额外解析 #109 限制读取 dump files 的 I/O 并发，避免过多的 cache miss 导致性能下降 #110 对单个表实现 batch 导入，提高导入的稳定性 #110 TiKV 在 import 模式下开启 auto compactions #4199 增加禁用 TiKV periodic Level-1 compaction 参数，因为当 TiKV 集群为 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.4 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.1.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.1.4/</guid>
      <description>TiDB 2.1.4 Release Notes On February 15, 2019, TiDB 2.1.4 is released. The corresponding TiDB Ansible 2.1.4 is also released. Compared with TiDB 2.1.3, this release has greatly improved the stability, the SQL optimizer, statistics, and the execution engine.
TiDB  SQL Optimizer/Executor  Fix the issue that the VALUES function does not handle the FLOAT type correctly #9223 Fix the wrong result issue when casting Float to String in some cases #9227 Fix the wrong result issue of the FORMAT function in some cases #9235 Fix the panic issue when handling the Join query in some cases #9264 Fix the issue that the VALUES function does not handle the ENUM type correctly #9280 Fix the wrong result issue of DATE_ADD/DATE_SUB in some cases #9284   Server  Optimize the “reload privilege success” log and change it to the DEBUG level #9274   DDL  Change tidb_ddl_reorg_worker_cnt and tidb_ddl_reorg_batch_size to global variables #9134 Fix the bug caused by adding an index to a generated column in some abnormal conditions #9289    TiKV  Fix the duplicate write issue when closing TiKV #4146 Fix the abnormal result issue of the event listener in some cases #4132  Tools  Lightning  Optimize the memory usage #107, #108 Remove the chunk separation of dump files to avoid an extra parsing of dump files #109 Limit the I/O concurrency of reading dump files, to avoid performance degradation caused by too many cache misses #110 Support importing data in batches for a single table, to improve import stability #110 Enable auto compactions in the import mode in TiKV #4199 Support disabling the TiKV periodic Level-1 compaction parameter, because the Level-1 compaction is automatically executed in the import mode when the TiKV cluster version is 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.4 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.1.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.1.4/</guid>
      <description>TiDB 2.1.4 Release Notes On February 15, 2019, TiDB 2.1.4 is released. The corresponding TiDB Ansible 2.1.4 is also released. Compared with TiDB 2.1.3, this release has greatly improved the stability, the SQL optimizer, statistics, and the execution engine.
TiDB  SQL Optimizer/Executor  Fix the issue that the VALUES function does not handle the FLOAT type correctly #9223 Fix the wrong result issue when casting Float to String in some cases #9227 Fix the wrong result issue of the FORMAT function in some cases #9235 Fix the panic issue when handling the Join query in some cases #9264 Fix the issue that the VALUES function does not handle the ENUM type correctly #9280 Fix the wrong result issue of DATE_ADD/DATE_SUB in some cases #9284   Server  Optimize the “reload privilege success” log and change it to the DEBUG level #9274   DDL  Change tidb_ddl_reorg_worker_cnt and tidb_ddl_reorg_batch_size to global variables #9134 Fix the bug caused by adding an index to a generated column in some abnormal conditions #9289    TiKV  Fix the duplicate write issue when closing TiKV #4146 Fix the abnormal result issue of the event listener in some cases #4132  Tools  Lightning  Optimize the memory usage #107, #108 Remove the chunk separation of dump files to avoid an extra parsing of dump files #109 Limit the I/O concurrency of reading dump files, to avoid performance degradation caused by too many cache misses #110 Support importing data in batches for a single table, to improve import stability #110 Enable auto compactions in the import mode in TiKV #4199 Support disabling the TiKV periodic Level-1 compaction parameter, because the Level-1 compaction is automatically executed in the import mode when the TiKV cluster version is 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.4 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.1.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.1.4/</guid>
      <description>TiDB 2.1.4 Release Notes On February 15, 2019, TiDB 2.1.4 is released. The corresponding TiDB Ansible 2.1.4 is also released. Compared with TiDB 2.1.3, this release has greatly improved the stability, the SQL optimizer, statistics, and the execution engine.
TiDB  SQL Optimizer/Executor  Fix the issue that the VALUES function does not handle the FLOAT type correctly #9223 Fix the wrong result issue when casting Float to String in some cases #9227 Fix the wrong result issue of the FORMAT function in some cases #9235 Fix the panic issue when handling the Join query in some cases #9264 Fix the issue that the VALUES function does not handle the ENUM type correctly #9280 Fix the wrong result issue of DATE_ADD/DATE_SUB in some cases #9284   Server  Optimize the “reload privilege success” log and change it to the DEBUG level #9274   DDL  Change tidb_ddl_reorg_worker_cnt and tidb_ddl_reorg_batch_size to global variables #9134 Fix the bug caused by adding an index to a generated column in some abnormal conditions #9289    TiKV  Fix the duplicate write issue when closing TiKV #4146 Fix the abnormal result issue of the event listener in some cases #4132  Tools  Lightning  Optimize the memory usage #107, #108 Remove the chunk separation of dump files to avoid an extra parsing of dump files #109 Limit the I/O concurrency of reading dump files, to avoid performance degradation caused by too many cache misses #110 Support importing data in batches for a single table, to improve import stability #110 Enable auto compactions in the import mode in TiKV #4199 Support disabling the TiKV periodic Level-1 compaction parameter, because the Level-1 compaction is automatically executed in the import mode when the TiKV cluster version is 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.4 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.1.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.1.4/</guid>
      <description>TiDB 2.1.4 Release Notes On February 15, 2019, TiDB 2.1.4 is released. The corresponding TiDB Ansible 2.1.4 is also released. Compared with TiDB 2.1.3, this release has greatly improved the stability, the SQL optimizer, statistics, and the execution engine.
TiDB  SQL Optimizer/Executor  Fix the issue that the VALUES function does not handle the FLOAT type correctly #9223 Fix the wrong result issue when casting Float to String in some cases #9227 Fix the wrong result issue of the FORMAT function in some cases #9235 Fix the panic issue when handling the Join query in some cases #9264 Fix the issue that the VALUES function does not handle the ENUM type correctly #9280 Fix the wrong result issue of DATE_ADD/DATE_SUB in some cases #9284   Server  Optimize the “reload privilege success” log and change it to the DEBUG level #9274   DDL  Change tidb_ddl_reorg_worker_cnt and tidb_ddl_reorg_batch_size to global variables #9134 Fix the bug caused by adding an index to a generated column in some abnormal conditions #9289    TiKV  Fix the duplicate write issue when closing TiKV #4146 Fix the abnormal result issue of the event listener in some cases #4132  Tools  Lightning  Optimize the memory usage #107, #108 Remove the chunk separation of dump files to avoid an extra parsing of dump files #109 Limit the I/O concurrency of reading dump files, to avoid performance degradation caused by too many cache misses #110 Support importing data in batches for a single table, to improve import stability #110 Enable auto compactions in the import mode in TiKV #4199 Support disabling the TiKV periodic Level-1 compaction parameter, because the Level-1 compaction is automatically executed in the import mode when the TiKV cluster version is 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.5 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.1.5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.1.5/</guid>
      <description>TiDB 2.1.5 Release Notes 2019 年 2 月 28 日，TiDB 发布 2.1.5 版，TiDB Ansible 相应发布 2.1.5 版本。相比 2.1.4 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  优化器/执行器  当列的字符集信息和表的字符集信息相同时，SHOW CREATE TABLE 不再打印列的字符集信息，使其结果更加兼容 MySQL #9306 将 Sort 算子中的表达计算抽取出来用一个 Project 算子完成，简化 Sort 算子的计算逻辑，修复某些情况下 Sort 算子结果不正确或者 panic 的问题 #9319 移除 Sort 算子中的数值为常量的排序字段 #9335，#9440 修复向无符号整数列插入数据时数据溢出的问题 #9339 目标 binary 的长度超过 max_allowed_packet 时，将 cast_as_binary 设置为 NULL #9349 优化 IF 和 IFNULL 的常量折叠过程 #9351 使用 skyline pruning 优化 TiDB 的索引选择，增加简单查询的稳定性 #9356 支持对析取范式计算选择率 #9405 修复 !</description>
    </item>
    
    <item>
      <title>TiDB 2.1.5 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.1.5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.1.5/</guid>
      <description>TiDB 2.1.5 Release Notes 2019 年 2 月 28 日，TiDB 发布 2.1.5 版，TiDB Ansible 相应发布 2.1.5 版本。相比 2.1.4 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  优化器/执行器  当列的字符集信息和表的字符集信息相同时，SHOW CREATE TABLE 不再打印列的字符集信息，使其结果更加兼容 MySQL #9306 将 Sort 算子中的表达计算抽取出来用一个 Project 算子完成，简化 Sort 算子的计算逻辑，修复某些情况下 Sort 算子结果不正确或者 panic 的问题 #9319 移除 Sort 算子中的数值为常量的排序字段 #9335，#9440 修复向无符号整数列插入数据时数据溢出的问题 #9339 目标 binary 的长度超过 max_allowed_packet 时，将 cast_as_binary 设置为 NULL #9349 优化 IF 和 IFNULL 的常量折叠过程 #9351 使用 skyline pruning 优化 TiDB 的索引选择，增加简单查询的稳定性 #9356 支持对析取范式计算选择率 #9405 修复 !</description>
    </item>
    
    <item>
      <title>TiDB 2.1.5 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.1.5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.1.5/</guid>
      <description>TiDB 2.1.5 Release Notes 2019 年 2 月 28 日，TiDB 发布 2.1.5 版，TiDB Ansible 相应发布 2.1.5 版本。相比 2.1.4 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  优化器/执行器  当列的字符集信息和表的字符集信息相同时，SHOW CREATE TABLE 不再打印列的字符集信息，使其结果更加兼容 MySQL #9306 将 Sort 算子中的表达计算抽取出来用一个 Project 算子完成，简化 Sort 算子的计算逻辑，修复某些情况下 Sort 算子结果不正确或者 panic 的问题 #9319 移除 Sort 算子中的数值为常量的排序字段 #9335，#9440 修复向无符号整数列插入数据时数据溢出的问题 #9339 目标 binary 的长度超过 max_allowed_packet 时，将 cast_as_binary 设置为 NULL #9349 优化 IF 和 IFNULL 的常量折叠过程 #9351 使用 skyline pruning 优化 TiDB 的索引选择，增加简单查询的稳定性 #9356 支持对析取范式计算选择率 #9405 修复 !</description>
    </item>
    
    <item>
      <title>TiDB 2.1.5 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.1.5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.1.5/</guid>
      <description>TiDB 2.1.5 Release Notes 2019 年 2 月 28 日，TiDB 发布 2.1.5 版，TiDB Ansible 相应发布 2.1.5 版本。相比 2.1.4 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  优化器/执行器  当列的字符集信息和表的字符集信息相同时，SHOW CREATE TABLE 不再打印列的字符集信息，使其结果更加兼容 MySQL #9306 将 Sort 算子中的表达计算抽取出来用一个 Project 算子完成，简化 Sort 算子的计算逻辑，修复某些情况下 Sort 算子结果不正确或者 panic 的问题 #9319 移除 Sort 算子中的数值为常量的排序字段 #9335，#9440 修复向无符号整数列插入数据时数据溢出的问题 #9339 目标 binary 的长度超过 max_allowed_packet 时，将 cast_as_binary 设置为 NULL #9349 优化 IF 和 IFNULL 的常量折叠过程 #9351 使用 skyline pruning 优化 TiDB 的索引选择，增加简单查询的稳定性 #9356 支持对析取范式计算选择率 #9405 修复 !</description>
    </item>
    
    <item>
      <title>TiDB 2.1.5 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.1.5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.1.5/</guid>
      <description>TiDB 2.1.5 Release Notes On February 28, 2019, TiDB 2.1.5 is released. The corresponding TiDB Ansible 2.1.5 is also released. Compared with TiDB 2.1.4, this release has greatly improved the stability, the SQL optimizer, statistics, and the execution engine.
TiDB  SQL Optimizer/Executor  Make SHOW CREATE TABLE do not print the column charset information when the charset information of a column is the same with that of a table, to improve the compatibility of SHOW CREATE TABLE with MySQL #9306 Fix the panic or the wrong result of the Sort operator in some cases by extracting ScalarFunc from Sort to a Projection operator for computing to simplify the computing logic of Sort #9319 Remove the sorting field with constant values in the Sort operator #9335, #9440 Fix the data overflow issue when inserting data into an unsigned integer column #9339 Set cast_as_binary to NULL when the length of the target binary exceeds max_allowed_packet #9349 Optimize the constant folding process of IF and IFNULL #9351 Optimize the index selection of TiDB using skyline pruning to improve the stability of simple queries #9356 Support computing the selectivity of the DNF expression #9405 Fix the wrong SQL query result of !</description>
    </item>
    
    <item>
      <title>TiDB 2.1.5 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.1.5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.1.5/</guid>
      <description>TiDB 2.1.5 Release Notes On February 28, 2019, TiDB 2.1.5 is released. The corresponding TiDB Ansible 2.1.5 is also released. Compared with TiDB 2.1.4, this release has greatly improved the stability, the SQL optimizer, statistics, and the execution engine.
TiDB  SQL Optimizer/Executor  Make SHOW CREATE TABLE do not print the column charset information when the charset information of a column is the same with that of a table, to improve the compatibility of SHOW CREATE TABLE with MySQL #9306 Fix the panic or the wrong result of the Sort operator in some cases by extracting ScalarFunc from Sort to a Projection operator for computing to simplify the computing logic of Sort #9319 Remove the sorting field with constant values in the Sort operator #9335, #9440 Fix the data overflow issue when inserting data into an unsigned integer column #9339 Set cast_as_binary to NULL when the length of the target binary exceeds max_allowed_packet #9349 Optimize the constant folding process of IF and IFNULL #9351 Optimize the index selection of TiDB using skyline pruning to improve the stability of simple queries #9356 Support computing the selectivity of the DNF expression #9405 Fix the wrong SQL query result of !</description>
    </item>
    
    <item>
      <title>TiDB 2.1.5 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.1.5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.1.5/</guid>
      <description>TiDB 2.1.5 Release Notes On February 28, 2019, TiDB 2.1.5 is released. The corresponding TiDB Ansible 2.1.5 is also released. Compared with TiDB 2.1.4, this release has greatly improved the stability, the SQL optimizer, statistics, and the execution engine.
TiDB  SQL Optimizer/Executor  Make SHOW CREATE TABLE do not print the column charset information when the charset information of a column is the same with that of a table, to improve the compatibility of SHOW CREATE TABLE with MySQL #9306 Fix the panic or the wrong result of the Sort operator in some cases by extracting ScalarFunc from Sort to a Projection operator for computing to simplify the computing logic of Sort #9319 Remove the sorting field with constant values in the Sort operator #9335, #9440 Fix the data overflow issue when inserting data into an unsigned integer column #9339 Set cast_as_binary to NULL when the length of the target binary exceeds max_allowed_packet #9349 Optimize the constant folding process of IF and IFNULL #9351 Optimize the index selection of TiDB using skyline pruning to improve the stability of simple queries #9356 Support computing the selectivity of the DNF expression #9405 Fix the wrong SQL query result of !</description>
    </item>
    
    <item>
      <title>TiDB 2.1.5 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.1.5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.1.5/</guid>
      <description>TiDB 2.1.5 Release Notes On February 28, 2019, TiDB 2.1.5 is released. The corresponding TiDB Ansible 2.1.5 is also released. Compared with TiDB 2.1.4, this release has greatly improved the stability, the SQL optimizer, statistics, and the execution engine.
TiDB  SQL Optimizer/Executor  Make SHOW CREATE TABLE do not print the column charset information when the charset information of a column is the same with that of a table, to improve the compatibility of SHOW CREATE TABLE with MySQL #9306 Fix the panic or the wrong result of the Sort operator in some cases by extracting ScalarFunc from Sort to a Projection operator for computing to simplify the computing logic of Sort #9319 Remove the sorting field with constant values in the Sort operator #9335, #9440 Fix the data overflow issue when inserting data into an unsigned integer column #9339 Set cast_as_binary to NULL when the length of the target binary exceeds max_allowed_packet #9349 Optimize the constant folding process of IF and IFNULL #9351 Optimize the index selection of TiDB using skyline pruning to improve the stability of simple queries #9356 Support computing the selectivity of the DNF expression #9405 Fix the wrong SQL query result of !</description>
    </item>
    
    <item>
      <title>TiDB 2.1.6 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.1.6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.1.6/</guid>
      <description>TiDB 2.1.6 Release Notes 2019 年 3 月 15 日，TiDB 发布 2.1.6 版，TiDB Ansible 相应发布 2.1.6 版本。相比 2.1.5 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  优化器/执行器  当两个表在 TIDB_INLJ 的 Hint 中时，基于代价来选择外表 #9615 修复在某些情况下，没有正确选择 IndexScan 的问题 #9587 修复聚合函数在子查询里面的检查跟 MySQL 不兼容的行为 #9551 使 show stats_histograms 语句只输出合法的列，避免 Panic #9502   Server  支持变量 log_bin，用于开启/关闭 Binlog #9634 在事务中添加一个防御性检查，避免错误的事务提交 #9559 修复设置变量导致的 Panic 的问题 #9539   DDL  修复 Create Table Like 语句在某些情况导致 Panic 的问题 #9652 打开 etcd client 的 AutoSync 特性，防止某些情况下 TiDB 无法连接上 etcd 的问题 #9600    TiKV  修复在某些情况下解析 protobuf 失败导致 StoreNotMatch 错误的问题 #4303  Tools  Lightning  importer 的默认的 region-split-size 变更为 512 MiB #4369 保存原先在内存中的中间状态的 SST 到磁盘，减少内存使用 #4369 限制 RocksDB 的内存使用 #4369 修复 Region 还没有调度完成时进行 scatter 的问题 #4369 将大表的数据和索引分离导入，在分批导入时能有效降低耗时 #132 支援 CSV #111 修复库名中含非英数字符时导入失败的错误 #9547    </description>
    </item>
    
    <item>
      <title>TiDB 2.1.6 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.1.6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.1.6/</guid>
      <description>TiDB 2.1.6 Release Notes 2019 年 3 月 15 日，TiDB 发布 2.1.6 版，TiDB Ansible 相应发布 2.1.6 版本。相比 2.1.5 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  优化器/执行器  当两个表在 TIDB_INLJ 的 Hint 中时，基于代价来选择外表 #9615 修复在某些情况下，没有正确选择 IndexScan 的问题 #9587 修复聚合函数在子查询里面的检查跟 MySQL 不兼容的行为 #9551 使 show stats_histograms 语句只输出合法的列，避免 Panic #9502   Server  支持变量 log_bin，用于开启/关闭 Binlog #9634 在事务中添加一个防御性检查，避免错误的事务提交 #9559 修复设置变量导致的 Panic 的问题 #9539   DDL  修复 Create Table Like 语句在某些情况导致 Panic 的问题 #9652 打开 etcd client 的 AutoSync 特性，防止某些情况下 TiDB 无法连接上 etcd 的问题 #9600    TiKV  修复在某些情况下解析 protobuf 失败导致 StoreNotMatch 错误的问题 #4303  Tools  Lightning  importer 的默认的 region-split-size 变更为 512 MiB #4369 保存原先在内存中的中间状态的 SST 到磁盘，减少内存使用 #4369 限制 RocksDB 的内存使用 #4369 修复 Region 还没有调度完成时进行 scatter 的问题 #4369 将大表的数据和索引分离导入，在分批导入时能有效降低耗时 #132 支援 CSV #111 修复库名中含非英数字符时导入失败的错误 #9547    </description>
    </item>
    
    <item>
      <title>TiDB 2.1.6 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.1.6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.1.6/</guid>
      <description>TiDB 2.1.6 Release Notes 2019 年 3 月 15 日，TiDB 发布 2.1.6 版，TiDB Ansible 相应发布 2.1.6 版本。相比 2.1.5 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  优化器/执行器  当两个表在 TIDB_INLJ 的 Hint 中时，基于代价来选择外表 #9615 修复在某些情况下，没有正确选择 IndexScan 的问题 #9587 修复聚合函数在子查询里面的检查跟 MySQL 不兼容的行为 #9551 使 show stats_histograms 语句只输出合法的列，避免 Panic #9502   Server  支持变量 log_bin，用于开启/关闭 Binlog #9634 在事务中添加一个防御性检查，避免错误的事务提交 #9559 修复设置变量导致的 Panic 的问题 #9539   DDL  修复 Create Table Like 语句在某些情况导致 Panic 的问题 #9652 打开 etcd client 的 AutoSync 特性，防止某些情况下 TiDB 无法连接上 etcd 的问题 #9600    TiKV  修复在某些情况下解析 protobuf 失败导致 StoreNotMatch 错误的问题 #4303  Tools  Lightning  importer 的默认的 region-split-size 变更为 512 MiB #4369 保存原先在内存中的中间状态的 SST 到磁盘，减少内存使用 #4369 限制 RocksDB 的内存使用 #4369 修复 Region 还没有调度完成时进行 scatter 的问题 #4369 将大表的数据和索引分离导入，在分批导入时能有效降低耗时 #132 支援 CSV #111 修复库名中含非英数字符时导入失败的错误 #9547    </description>
    </item>
    
    <item>
      <title>TiDB 2.1.6 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.1.6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.1.6/</guid>
      <description>TiDB 2.1.6 Release Notes 2019 年 3 月 15 日，TiDB 发布 2.1.6 版，TiDB Ansible 相应发布 2.1.6 版本。相比 2.1.5 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  优化器/执行器  当两个表在 TIDB_INLJ 的 Hint 中时，基于代价来选择外表 #9615 修复在某些情况下，没有正确选择 IndexScan 的问题 #9587 修复聚合函数在子查询里面的检查跟 MySQL 不兼容的行为 #9551 使 show stats_histograms 语句只输出合法的列，避免 Panic #9502   Server  支持变量 log_bin，用于开启/关闭 Binlog #9634 在事务中添加一个防御性检查，避免错误的事务提交 #9559 修复设置变量导致的 Panic 的问题 #9539   DDL  修复 Create Table Like 语句在某些情况导致 Panic 的问题 #9652 打开 etcd client 的 AutoSync 特性，防止某些情况下 TiDB 无法连接上 etcd 的问题 #9600    TiKV  修复在某些情况下解析 protobuf 失败导致 StoreNotMatch 错误的问题 #4303  Tools  Lightning  importer 的默认的 region-split-size 变更为 512 MiB #4369 保存原先在内存中的中间状态的 SST 到磁盘，减少内存使用 #4369 限制 RocksDB 的内存使用 #4369 修复 Region 还没有调度完成时进行 scatter 的问题 #4369 将大表的数据和索引分离导入，在分批导入时能有效降低耗时 #132 支援 CSV #111 修复库名中含非英数字符时导入失败的错误 #9547    </description>
    </item>
    
    <item>
      <title>TiDB 2.1.6 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.1.6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.1.6/</guid>
      <description>TiDB 2.1.6 Release Notes On March 15, 2019, TiDB 2.1.6 is released. The corresponding TiDB Ansible 2.1.6 is also released. Compared with TiDB 2.1.5, this release has greatly improved the stability, the SQL optimizer, statistics, and the execution engine.
TiDB   SQL Optimizer/Executor
 Optimize planner to select the outer table based on cost when both tables are specified in Hint of TIDB_INLJ #9615 Fix the issue that IndexScan cannot be selected correctly in some cases #9587 Fix incompatibility with MySQL of check in the agg function in subqueries #9551 Make show stats_histograms only output valid columns to avoid panics #9502    Server</description>
    </item>
    
    <item>
      <title>TiDB 2.1.6 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.1.6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.1.6/</guid>
      <description>TiDB 2.1.6 Release Notes On March 15, 2019, TiDB 2.1.6 is released. The corresponding TiDB Ansible 2.1.6 is also released. Compared with TiDB 2.1.5, this release has greatly improved the stability, the SQL optimizer, statistics, and the execution engine.
TiDB   SQL Optimizer/Executor
 Optimize planner to select the outer table based on cost when both tables are specified in Hint of TIDB_INLJ #9615 Fix the issue that IndexScan cannot be selected correctly in some cases #9587 Fix incompatibility with MySQL of check in the agg function in subqueries #9551 Make show stats_histograms only output valid columns to avoid panics #9502    Server</description>
    </item>
    
    <item>
      <title>TiDB 2.1.6 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.1.6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.1.6/</guid>
      <description>TiDB 2.1.6 Release Notes On March 15, 2019, TiDB 2.1.6 is released. The corresponding TiDB Ansible 2.1.6 is also released. Compared with TiDB 2.1.5, this release has greatly improved the stability, the SQL optimizer, statistics, and the execution engine.
TiDB   SQL Optimizer/Executor
 Optimize planner to select the outer table based on cost when both tables are specified in Hint of TIDB_INLJ #9615 Fix the issue that IndexScan cannot be selected correctly in some cases #9587 Fix incompatibility with MySQL of check in the agg function in subqueries #9551 Make show stats_histograms only output valid columns to avoid panics #9502    Server</description>
    </item>
    
    <item>
      <title>TiDB 2.1.6 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.1.6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.1.6/</guid>
      <description>TiDB 2.1.6 Release Notes On March 15, 2019, TiDB 2.1.6 is released. The corresponding TiDB Ansible 2.1.6 is also released. Compared with TiDB 2.1.5, this release has greatly improved the stability, the SQL optimizer, statistics, and the execution engine.
TiDB   SQL Optimizer/Executor
 Optimize planner to select the outer table based on cost when both tables are specified in Hint of TIDB_INLJ #9615 Fix the issue that IndexScan cannot be selected correctly in some cases #9587 Fix incompatibility with MySQL of check in the agg function in subqueries #9551 Make show stats_histograms only output valid columns to avoid panics #9502    Server</description>
    </item>
    
    <item>
      <title>TiDB 2.1.7 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.1.7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.1.7/</guid>
      <description>TiDB 2.1.7 Release Notes 发版日期：2019 年 3 月 28 日
TiDB 版本：2.1.7
TiDB Ansible 版本：2.1.7
TiDB  修复因 DDL 被取消导致升级程序时启动时间变长问题 #9768 修复配置项 check-mb4-value-in-utf8 在 config.example.toml 中位置错误的问题 #9852 提升内置函数 str_to_date 跟 MySQL 的兼容性 #9817 修复内置函数 last_day 的兼容性问题 #9750 infoschema.tables 添加 tidb_table_id 列，方便通过 SQL 语句获取 table_id，新增 tidb_indexes 系统表管理 Table 与 Index 之间的关系 #9862 增加 Table Partition 定义为空的检查 #9663 将 Truncate Table 需要的权限由删除权限变为删表权限，与 MySQL 保持一致 #9876 支持在 DO 语句中使用子查询 #9877 修复变量 default_week_format 在 week 函数中不生效的问题 #9753 支持插件机制 #9880，#9888 支持使用系统变量 log_bin 查看 binlog 开启状况 #9634 支持使用 SQL 语句查看 Pump/Drainer 状态 #9896 修复升级时对 utf8 检查 mb4 字符的兼容性 #9887 修复某些情况下对 JSON 数据的聚合函数在计算过程中 Panic 的问题 #9927  PD  修改副本数为 1 时 balance-region 无法迁移 leader 问题 #1462  Tools  支持 binlog 同步 generated column #491  TiDB Ansible  Prometheus 监控数据默认保留时间改成 30d  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.7 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.1.7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.1.7/</guid>
      <description>TiDB 2.1.7 Release Notes 发版日期：2019 年 3 月 28 日
TiDB 版本：2.1.7
TiDB Ansible 版本：2.1.7
TiDB  修复因 DDL 被取消导致升级程序时启动时间变长问题 #9768 修复配置项 check-mb4-value-in-utf8 在 config.example.toml 中位置错误的问题 #9852 提升内置函数 str_to_date 跟 MySQL 的兼容性 #9817 修复内置函数 last_day 的兼容性问题 #9750 infoschema.tables 添加 tidb_table_id 列，方便通过 SQL 语句获取 table_id，新增 tidb_indexes 系统表管理 Table 与 Index 之间的关系 #9862 增加 Table Partition 定义为空的检查 #9663 将 Truncate Table 需要的权限由删除权限变为删表权限，与 MySQL 保持一致 #9876 支持在 DO 语句中使用子查询 #9877 修复变量 default_week_format 在 week 函数中不生效的问题 #9753 支持插件机制 #9880，#9888 支持使用系统变量 log_bin 查看 binlog 开启状况 #9634 支持使用 SQL 语句查看 Pump/Drainer 状态 #9896 修复升级时对 utf8 检查 mb4 字符的兼容性 #9887 修复某些情况下对 JSON 数据的聚合函数在计算过程中 Panic 的问题 #9927  PD  修改副本数为 1 时 balance-region 无法迁移 leader 问题 #1462  Tools  支持 binlog 同步 generated column #491  TiDB Ansible  Prometheus 监控数据默认保留时间改成 30d  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.7 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.1.7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.1.7/</guid>
      <description>TiDB 2.1.7 Release Notes 发版日期：2019 年 3 月 28 日
TiDB 版本：2.1.7
TiDB Ansible 版本：2.1.7
TiDB  修复因 DDL 被取消导致升级程序时启动时间变长问题 #9768 修复配置项 check-mb4-value-in-utf8 在 config.example.toml 中位置错误的问题 #9852 提升内置函数 str_to_date 跟 MySQL 的兼容性 #9817 修复内置函数 last_day 的兼容性问题 #9750 infoschema.tables 添加 tidb_table_id 列，方便通过 SQL 语句获取 table_id，新增 tidb_indexes 系统表管理 Table 与 Index 之间的关系 #9862 增加 Table Partition 定义为空的检查 #9663 将 Truncate Table 需要的权限由删除权限变为删表权限，与 MySQL 保持一致 #9876 支持在 DO 语句中使用子查询 #9877 修复变量 default_week_format 在 week 函数中不生效的问题 #9753 支持插件机制 #9880，#9888 支持使用系统变量 log_bin 查看 binlog 开启状况 #9634 支持使用 SQL 语句查看 Pump/Drainer 状态 #9896 修复升级时对 utf8 检查 mb4 字符的兼容性 #9887 修复某些情况下对 JSON 数据的聚合函数在计算过程中 Panic 的问题 #9927  PD  修改副本数为 1 时 balance-region 无法迁移 leader 问题 #1462  Tools  支持 binlog 同步 generated column #491  TiDB Ansible  Prometheus 监控数据默认保留时间改成 30d  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.7 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.1.7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.1.7/</guid>
      <description>TiDB 2.1.7 Release Notes 发版日期：2019 年 3 月 28 日
TiDB 版本：2.1.7
TiDB Ansible 版本：2.1.7
TiDB  修复因 DDL 被取消导致升级程序时启动时间变长问题 #9768 修复配置项 check-mb4-value-in-utf8 在 config.example.toml 中位置错误的问题 #9852 提升内置函数 str_to_date 跟 MySQL 的兼容性 #9817 修复内置函数 last_day 的兼容性问题 #9750 infoschema.tables 添加 tidb_table_id 列，方便通过 SQL 语句获取 table_id，新增 tidb_indexes 系统表管理 Table 与 Index 之间的关系 #9862 增加 Table Partition 定义为空的检查 #9663 将 Truncate Table 需要的权限由删除权限变为删表权限，与 MySQL 保持一致 #9876 支持在 DO 语句中使用子查询 #9877 修复变量 default_week_format 在 week 函数中不生效的问题 #9753 支持插件机制 #9880，#9888 支持使用系统变量 log_bin 查看 binlog 开启状况 #9634 支持使用 SQL 语句查看 Pump/Drainer 状态 #9896 修复升级时对 utf8 检查 mb4 字符的兼容性 #9887 修复某些情况下对 JSON 数据的聚合函数在计算过程中 Panic 的问题 #9927  PD  修改副本数为 1 时 balance-region 无法迁移 leader 问题 #1462  Tools  支持 binlog 同步 generated column #491  TiDB Ansible  Prometheus 监控数据默认保留时间改成 30d  </description>
    </item>
    
    <item>
      <title>TiDB 2.1.7 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.1.7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.1.7/</guid>
      <description>TiDB 2.1.7 Release Notes Release Date: March 28, 2019
TiDB version: 2.1.7
TiDB Ansible version: 2.1.7
TiDB  Fix the issue of longer startup time when upgrading the program caused by canceling DDL operations #9768 Fix the issue that the check-mb4-value-in-utf8 configuration item is in the wrong position in the config.example.toml file #9852 Improve the compatibility of the str_to_date built-in function with MySQL #9817 Fix the compatibility issue of the last_day built-in function #9750 Add the tidb_table_id column for infoschema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.7 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.1.7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.1.7/</guid>
      <description>TiDB 2.1.7 Release Notes Release Date: March 28, 2019
TiDB version: 2.1.7
TiDB Ansible version: 2.1.7
TiDB  Fix the issue of longer startup time when upgrading the program caused by canceling DDL operations #9768 Fix the issue that the check-mb4-value-in-utf8 configuration item is in the wrong position in the config.example.toml file #9852 Improve the compatibility of the str_to_date built-in function with MySQL #9817 Fix the compatibility issue of the last_day built-in function #9750 Add the tidb_table_id column for infoschema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.7 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.1.7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.1.7/</guid>
      <description>TiDB 2.1.7 Release Notes Release Date: March 28, 2019
TiDB version: 2.1.7
TiDB Ansible version: 2.1.7
TiDB  Fix the issue of longer startup time when upgrading the program caused by canceling DDL operations #9768 Fix the issue that the check-mb4-value-in-utf8 configuration item is in the wrong position in the config.example.toml file #9852 Improve the compatibility of the str_to_date built-in function with MySQL #9817 Fix the compatibility issue of the last_day built-in function #9750 Add the tidb_table_id column for infoschema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.7 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.1.7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.1.7/</guid>
      <description>TiDB 2.1.7 Release Notes Release Date: March 28, 2019
TiDB version: 2.1.7
TiDB Ansible version: 2.1.7
TiDB  Fix the issue of longer startup time when upgrading the program caused by canceling DDL operations #9768 Fix the issue that the check-mb4-value-in-utf8 configuration item is in the wrong position in the config.example.toml file #9852 Improve the compatibility of the str_to_date built-in function with MySQL #9817 Fix the compatibility issue of the last_day built-in function #9750 Add the tidb_table_id column for infoschema.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.8 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.1.8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.1.8/</guid>
      <description>TiDB 2.1.8 Release Notes 发版日期：2019 年 4 月 12 日
TiDB 版本：2.1.8
TiDB Ansible 版本：2.1.8
TiDB  修复 GROUP_CONCAT 函数在参数存在 NULL 值情况下与 MySQL 处理逻辑不兼容的问题 #9930 修复在 Distinct 模式下 decimal 类型值之间相等比较的问题 #9931 修复 SHOW FULL COLUMNS 语句在 date，datetime，timestamp 类型的 Collation 的兼容性问题  #9938 #10114   修复过滤条件存在关联列的时候统计信息估算行数不准确的问题 #9937 修复 DATE_ADD 跟 DATE_SUB 函数的兼容性问题  #9963 #9966   STR_TO_DATE 函数支持格式 %H，提升兼容性 #9964 修复 GROUP_CONCAT 函数在 group by 唯一索引的情况下结果错误的问题 #9969 当 Optimizer Hints 存在不匹配的表名的时候返回 warning #9970 统一日志格式规范，利于工具收集分析 日志规范 修复大量 NULL 值导致统计信息估算不准确的问题 #9979 修复 TIMESTAMP 类型默认值为边界值的时候报错的问题 #9987 检查设置 time_zone 值的合法性 #10000 支持时间格式 2019.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.8 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.1.8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.1.8/</guid>
      <description>TiDB 2.1.8 Release Notes 发版日期：2019 年 4 月 12 日
TiDB 版本：2.1.8
TiDB Ansible 版本：2.1.8
TiDB  修复 GROUP_CONCAT 函数在参数存在 NULL 值情况下与 MySQL 处理逻辑不兼容的问题 #9930 修复在 Distinct 模式下 decimal 类型值之间相等比较的问题 #9931 修复 SHOW FULL COLUMNS 语句在 date，datetime，timestamp 类型的 Collation 的兼容性问题  #9938 #10114   修复过滤条件存在关联列的时候统计信息估算行数不准确的问题 #9937 修复 DATE_ADD 跟 DATE_SUB 函数的兼容性问题  #9963 #9966   STR_TO_DATE 函数支持格式 %H，提升兼容性 #9964 修复 GROUP_CONCAT 函数在 group by 唯一索引的情况下结果错误的问题 #9969 当 Optimizer Hints 存在不匹配的表名的时候返回 warning #9970 统一日志格式规范，利于工具收集分析 日志规范 修复大量 NULL 值导致统计信息估算不准确的问题 #9979 修复 TIMESTAMP 类型默认值为边界值的时候报错的问题 #9987 检查设置 time_zone 值的合法性 #10000 支持时间格式 2019.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.8 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.1.8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.1.8/</guid>
      <description>TiDB 2.1.8 Release Notes 发版日期：2019 年 4 月 12 日
TiDB 版本：2.1.8
TiDB Ansible 版本：2.1.8
TiDB  修复 GROUP_CONCAT 函数在参数存在 NULL 值情况下与 MySQL 处理逻辑不兼容的问题 #9930 修复在 Distinct 模式下 decimal 类型值之间相等比较的问题 #9931 修复 SHOW FULL COLUMNS 语句在 date，datetime，timestamp 类型的 Collation 的兼容性问题  #9938 #10114   修复过滤条件存在关联列的时候统计信息估算行数不准确的问题 #9937 修复 DATE_ADD 跟 DATE_SUB 函数的兼容性问题  #9963 #9966   STR_TO_DATE 函数支持格式 %H，提升兼容性 #9964 修复 GROUP_CONCAT 函数在 group by 唯一索引的情况下结果错误的问题 #9969 当 Optimizer Hints 存在不匹配的表名的时候返回 warning #9970 统一日志格式规范，利于工具收集分析 日志规范 修复大量 NULL 值导致统计信息估算不准确的问题 #9979 修复 TIMESTAMP 类型默认值为边界值的时候报错的问题 #9987 检查设置 time_zone 值的合法性 #10000 支持时间格式 2019.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.8 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.1.8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.1.8/</guid>
      <description>TiDB 2.1.8 Release Notes 发版日期：2019 年 4 月 12 日
TiDB 版本：2.1.8
TiDB Ansible 版本：2.1.8
TiDB  修复 GROUP_CONCAT 函数在参数存在 NULL 值情况下与 MySQL 处理逻辑不兼容的问题 #9930 修复在 Distinct 模式下 decimal 类型值之间相等比较的问题 #9931 修复 SHOW FULL COLUMNS 语句在 date，datetime，timestamp 类型的 Collation 的兼容性问题  #9938 #10114   修复过滤条件存在关联列的时候统计信息估算行数不准确的问题 #9937 修复 DATE_ADD 跟 DATE_SUB 函数的兼容性问题  #9963 #9966   STR_TO_DATE 函数支持格式 %H，提升兼容性 #9964 修复 GROUP_CONCAT 函数在 group by 唯一索引的情况下结果错误的问题 #9969 当 Optimizer Hints 存在不匹配的表名的时候返回 warning #9970 统一日志格式规范，利于工具收集分析 日志规范 修复大量 NULL 值导致统计信息估算不准确的问题 #9979 修复 TIMESTAMP 类型默认值为边界值的时候报错的问题 #9987 检查设置 time_zone 值的合法性 #10000 支持时间格式 2019.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.8 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.1.8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.1.8/</guid>
      <description>TiDB 2.1.8 Release Notes Release date: April 12, 2019
TiDB version: 2.1.8
TiDB Ansible version: 2.1.8
TiDB  Fix the issue that the processing logic of GROUP_CONCAT function is incompatible with MySQL when there is a NULL-valued parameter #9930 Fix the equality check issue of decimal values in the Distinct mode #9931 Fix the collation compatibility issue of the date, datetime, and timestamp types for the SHOW FULL COLUMNS statement  #9938 #10114   Fix the issue that the row count estimation is inaccurate when the filtering condition contains correlated columns #9937 Fix the compatibility issue between the DATE_ADD and DATE_SUB functions  #9963 #9966   Support the %H format for the STR_TO_DATE function to improve compatibility #9964 Fix the issue that the result is wrong when the GROUP_CONCAT function groups by a unique index #9969 Return a warning when the Optimizer Hints contains an unmatched table name #9970 Unify the log format to facilitate collecting logs using tools for analysis Unified Log Format Fix the issue that a lot of NULL values cause inaccurate statistics estimation #9979 Fix the issue that an error is reported when the default value of the TIMESTAMP type is the boundary value #9987 Validate the value of time_zone #10000 Support the 2019.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.8 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.1.8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.1.8/</guid>
      <description>TiDB 2.1.8 Release Notes Release date: April 12, 2019
TiDB version: 2.1.8
TiDB Ansible version: 2.1.8
TiDB  Fix the issue that the processing logic of GROUP_CONCAT function is incompatible with MySQL when there is a NULL-valued parameter #9930 Fix the equality check issue of decimal values in the Distinct mode #9931 Fix the collation compatibility issue of the date, datetime, and timestamp types for the SHOW FULL COLUMNS statement  #9938 #10114   Fix the issue that the row count estimation is inaccurate when the filtering condition contains correlated columns #9937 Fix the compatibility issue between the DATE_ADD and DATE_SUB functions  #9963 #9966   Support the %H format for the STR_TO_DATE function to improve compatibility #9964 Fix the issue that the result is wrong when the GROUP_CONCAT function groups by a unique index #9969 Return a warning when the Optimizer Hints contains an unmatched table name #9970 Unify the log format to facilitate collecting logs using tools for analysis Unified Log Format Fix the issue that a lot of NULL values cause inaccurate statistics estimation #9979 Fix the issue that an error is reported when the default value of the TIMESTAMP type is the boundary value #9987 Validate the value of time_zone #10000 Support the 2019.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.8 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.1.8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.1.8/</guid>
      <description>TiDB 2.1.8 Release Notes Release date: April 12, 2019
TiDB version: 2.1.8
TiDB Ansible version: 2.1.8
TiDB  Fix the issue that the processing logic of GROUP_CONCAT function is incompatible with MySQL when there is a NULL-valued parameter #9930 Fix the equality check issue of decimal values in the Distinct mode #9931 Fix the collation compatibility issue of the date, datetime, and timestamp types for the SHOW FULL COLUMNS statement  #9938 #10114   Fix the issue that the row count estimation is inaccurate when the filtering condition contains correlated columns #9937 Fix the compatibility issue between the DATE_ADD and DATE_SUB functions  #9963 #9966   Support the %H format for the STR_TO_DATE function to improve compatibility #9964 Fix the issue that the result is wrong when the GROUP_CONCAT function groups by a unique index #9969 Return a warning when the Optimizer Hints contains an unmatched table name #9970 Unify the log format to facilitate collecting logs using tools for analysis Unified Log Format Fix the issue that a lot of NULL values cause inaccurate statistics estimation #9979 Fix the issue that an error is reported when the default value of the TIMESTAMP type is the boundary value #9987 Validate the value of time_zone #10000 Support the 2019.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.8 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.1.8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.1.8/</guid>
      <description>TiDB 2.1.8 Release Notes Release date: April 12, 2019
TiDB version: 2.1.8
TiDB Ansible version: 2.1.8
TiDB  Fix the issue that the processing logic of GROUP_CONCAT function is incompatible with MySQL when there is a NULL-valued parameter #9930 Fix the equality check issue of decimal values in the Distinct mode #9931 Fix the collation compatibility issue of the date, datetime, and timestamp types for the SHOW FULL COLUMNS statement  #9938 #10114   Fix the issue that the row count estimation is inaccurate when the filtering condition contains correlated columns #9937 Fix the compatibility issue between the DATE_ADD and DATE_SUB functions  #9963 #9966   Support the %H format for the STR_TO_DATE function to improve compatibility #9964 Fix the issue that the result is wrong when the GROUP_CONCAT function groups by a unique index #9969 Return a warning when the Optimizer Hints contains an unmatched table name #9970 Unify the log format to facilitate collecting logs using tools for analysis Unified Log Format Fix the issue that a lot of NULL values cause inaccurate statistics estimation #9979 Fix the issue that an error is reported when the default value of the TIMESTAMP type is the boundary value #9987 Validate the value of time_zone #10000 Support the 2019.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.9 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/2.1.9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/2.1.9/</guid>
      <description>TiDB 2.1.9 Release Notes 发版日期：2019 年 5 月 6 日
TiDB 版本：2.1.9
TiDB Ansible 版本：2.1.9
TiDB  修复 MAKETIME 函数在 unsigned 类型溢出时的兼容性 #10089 修复常量折叠在某些情况下导致的栈溢出 #10189 修复 Update 在某些有别名的情况下权限检查的问题 #10157 #10326 追踪以及控制 DistSQL 中的内存使用 #10197 支持指定 collation 为 utf8mb4_0900_ai_ci #10201 修复主键为 Unsigned 类型的时候，MAX 函数结果错误的问题 #10209 修复在非 Strict SQL Mode 下可以插入 NULL 值到 NOT NULL 列的问题 #10254 修复 COUNT 函数在 DISTINCT 有多列的情况下结果错误的问题 #10270 修复 LOAD DATA 解析不规则的 CSV 文件时候 Panic 的问题 #10269 忽略 Index Lookup Join 中内外 join key 类型不一致的时候出现的 overflow 错误 #10244 修复某些情况下错误判定语句为 point-get 的问题 #10299 修复某些情况下时间类型未转换时区导致的结果错误问题 #10345 修复 TiDB 字符集在某些情况下大小写比较不一致的问题 #10354 支持控制算子返回的行数 #9166  Selection &amp;amp; Projection #10110 StreamAgg &amp;amp; HashAgg #10133 TableReader &amp;amp; IndexReader &amp;amp; IndexLookup #10169   慢日志改进  增加 SQL Digest 用于区分同类 SQL #10093 增加慢语句使用的统计信息的版本信息 #10220 输出语句内存使用量 #10246 调整 Coprocessor 相关信息的输出格式，让其能被 pt-query-digest 解析 #10300 修复慢语句中带有 # 字符的问题 #10275 增加一些信息的列到慢查询的内存表 #10317 将事务提交时间算入慢语句执行时间 #10310 修复某些时间格式无法被 pt-query-digest 解析的问题 #10323    PD  支持 GetOperator 服务 #1514  TiKV  修复在 transfer leader 时非预期的 quorum 变化 #4604  Tools  TiDB Binlog  修复 unsigned int 类型的主键列的 binlog 数据为负数，造成同步出错中断的问题 #574 删除下游是 pb 时的压缩选项，修改下游名字 pb 成 file #597 修复 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.9 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/2.1.9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/2.1.9/</guid>
      <description>TiDB 2.1.9 Release Notes 发版日期：2019 年 5 月 6 日
TiDB 版本：2.1.9
TiDB Ansible 版本：2.1.9
TiDB  修复 MAKETIME 函数在 unsigned 类型溢出时的兼容性 #10089 修复常量折叠在某些情况下导致的栈溢出 #10189 修复 Update 在某些有别名的情况下权限检查的问题 #10157 #10326 追踪以及控制 DistSQL 中的内存使用 #10197 支持指定 collation 为 utf8mb4_0900_ai_ci #10201 修复主键为 Unsigned 类型的时候，MAX 函数结果错误的问题 #10209 修复在非 Strict SQL Mode 下可以插入 NULL 值到 NOT NULL 列的问题 #10254 修复 COUNT 函数在 DISTINCT 有多列的情况下结果错误的问题 #10270 修复 LOAD DATA 解析不规则的 CSV 文件时候 Panic 的问题 #10269 忽略 Index Lookup Join 中内外 join key 类型不一致的时候出现的 overflow 错误 #10244 修复某些情况下错误判定语句为 point-get 的问题 #10299 修复某些情况下时间类型未转换时区导致的结果错误问题 #10345 修复 TiDB 字符集在某些情况下大小写比较不一致的问题 #10354 支持控制算子返回的行数 #9166  Selection &amp;amp; Projection #10110 StreamAgg &amp;amp; HashAgg #10133 TableReader &amp;amp; IndexReader &amp;amp; IndexLookup #10169   慢日志改进  增加 SQL Digest 用于区分同类 SQL #10093 增加慢语句使用的统计信息的版本信息 #10220 输出语句内存使用量 #10246 调整 Coprocessor 相关信息的输出格式，让其能被 pt-query-digest 解析 #10300 修复慢语句中带有 # 字符的问题 #10275 增加一些信息的列到慢查询的内存表 #10317 将事务提交时间算入慢语句执行时间 #10310 修复某些时间格式无法被 pt-query-digest 解析的问题 #10323    PD  支持 GetOperator 服务 #1514  TiKV  修复在 transfer leader 时非预期的 quorum 变化 #4604  Tools  TiDB Binlog  修复 unsigned int 类型的主键列的 binlog 数据为负数，造成同步出错中断的问题 #574 删除下游是 pb 时的压缩选项，修改下游名字 pb 成 file #597 修复 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.9 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/2.1.9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/2.1.9/</guid>
      <description>TiDB 2.1.9 Release Notes 发版日期：2019 年 5 月 6 日
TiDB 版本：2.1.9
TiDB Ansible 版本：2.1.9
TiDB  修复 MAKETIME 函数在 unsigned 类型溢出时的兼容性 #10089 修复常量折叠在某些情况下导致的栈溢出 #10189 修复 Update 在某些有别名的情况下权限检查的问题 #10157 #10326 追踪以及控制 DistSQL 中的内存使用 #10197 支持指定 collation 为 utf8mb4_0900_ai_ci #10201 修复主键为 Unsigned 类型的时候，MAX 函数结果错误的问题 #10209 修复在非 Strict SQL Mode 下可以插入 NULL 值到 NOT NULL 列的问题 #10254 修复 COUNT 函数在 DISTINCT 有多列的情况下结果错误的问题 #10270 修复 LOAD DATA 解析不规则的 CSV 文件时候 Panic 的问题 #10269 忽略 Index Lookup Join 中内外 join key 类型不一致的时候出现的 overflow 错误 #10244 修复某些情况下错误判定语句为 point-get 的问题 #10299 修复某些情况下时间类型未转换时区导致的结果错误问题 #10345 修复 TiDB 字符集在某些情况下大小写比较不一致的问题 #10354 支持控制算子返回的行数 #9166  Selection &amp;amp; Projection #10110 StreamAgg &amp;amp; HashAgg #10133 TableReader &amp;amp; IndexReader &amp;amp; IndexLookup #10169   慢日志改进  增加 SQL Digest 用于区分同类 SQL #10093 增加慢语句使用的统计信息的版本信息 #10220 输出语句内存使用量 #10246 调整 Coprocessor 相关信息的输出格式，让其能被 pt-query-digest 解析 #10300 修复慢语句中带有 # 字符的问题 #10275 增加一些信息的列到慢查询的内存表 #10317 将事务提交时间算入慢语句执行时间 #10310 修复某些时间格式无法被 pt-query-digest 解析的问题 #10323    PD  支持 GetOperator 服务 #1514  TiKV  修复在 transfer leader 时非预期的 quorum 变化 #4604  Tools  TiDB Binlog  修复 unsigned int 类型的主键列的 binlog 数据为负数，造成同步出错中断的问题 #574 删除下游是 pb 时的压缩选项，修改下游名字 pb 成 file #597 修复 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.9 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/2.1.9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/2.1.9/</guid>
      <description>TiDB 2.1.9 Release Notes 发版日期：2019 年 5 月 6 日
TiDB 版本：2.1.9
TiDB Ansible 版本：2.1.9
TiDB  修复 MAKETIME 函数在 unsigned 类型溢出时的兼容性 #10089 修复常量折叠在某些情况下导致的栈溢出 #10189 修复 Update 在某些有别名的情况下权限检查的问题 #10157 #10326 追踪以及控制 DistSQL 中的内存使用 #10197 支持指定 collation 为 utf8mb4_0900_ai_ci #10201 修复主键为 Unsigned 类型的时候，MAX 函数结果错误的问题 #10209 修复在非 Strict SQL Mode 下可以插入 NULL 值到 NOT NULL 列的问题 #10254 修复 COUNT 函数在 DISTINCT 有多列的情况下结果错误的问题 #10270 修复 LOAD DATA 解析不规则的 CSV 文件时候 Panic 的问题 #10269 忽略 Index Lookup Join 中内外 join key 类型不一致的时候出现的 overflow 错误 #10244 修复某些情况下错误判定语句为 point-get 的问题 #10299 修复某些情况下时间类型未转换时区导致的结果错误问题 #10345 修复 TiDB 字符集在某些情况下大小写比较不一致的问题 #10354 支持控制算子返回的行数 #9166  Selection &amp;amp; Projection #10110 StreamAgg &amp;amp; HashAgg #10133 TableReader &amp;amp; IndexReader &amp;amp; IndexLookup #10169   慢日志改进  增加 SQL Digest 用于区分同类 SQL #10093 增加慢语句使用的统计信息的版本信息 #10220 输出语句内存使用量 #10246 调整 Coprocessor 相关信息的输出格式，让其能被 pt-query-digest 解析 #10300 修复慢语句中带有 # 字符的问题 #10275 增加一些信息的列到慢查询的内存表 #10317 将事务提交时间算入慢语句执行时间 #10310 修复某些时间格式无法被 pt-query-digest 解析的问题 #10323    PD  支持 GetOperator 服务 #1514  TiKV  修复在 transfer leader 时非预期的 quorum 变化 #4604  Tools  TiDB Binlog  修复 unsigned int 类型的主键列的 binlog 数据为负数，造成同步出错中断的问题 #574 删除下游是 pb 时的压缩选项，修改下游名字 pb 成 file #597 修复 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.9 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/2.1.9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/2.1.9/</guid>
      <description>TiDB 2.1.9 Release Notes Release date: May 6, 2019
TiDB version: 2.1.9
TiDB Ansible version: 2.1.9
TiDB  Fix compatibility of the MAKETIME function when unsigned type overflows #10089 Fix the stack overflow caused by constant folding in some cases #10189 Fix the privilege check issue for Update when an alias exists in some cases #10157, #10326 Track and control memory usage in DistSQL #10197 Support specifying collation as utf8mb4_0900_ai_ci #10201 Fix the wrong result issue of the MAX function when the primary key is of the Unsigned type #10209 Fix the issue that NULL values can be inserted into NOT NULL columns in the non-strict SQL mode #10254 Fix the wrong result issue of the COUNT function when multiple columns exist in DISTINCT #10270 Fix the panic issue occurred when LOAD DATA parses irregular CSV files #10269 Ignore the overflow error when the outer and inner join key types are inconsistent in Index Lookup Join #10244 Fix the issue that a statement is wrongly judged as point-get in some cases #10299 Fix the wrong result issue when the time type does not convert the time zone in some cases #10345 Fix the issue that TiDB character set cases are inconsistent in some cases #10354 Support controlling the number of rows returned by operator #9166  Selection &amp;amp; Projection #10110 StreamAgg &amp;amp; HashAgg #10133 TableReader &amp;amp; IndexReader &amp;amp; IndexLookup #10169   Improve the slow query log  Add SQL Digest to distinguish similar SQL #10093 Add version information of statistics used by slow query statements #10220 Show memory consumption of a statement in slow query log #10246 Adjust the output format of Coprocessor related information so it can be parsed by pt-query-digest #10300 Fix the # character issue in slow query statements #10275 Add some information columns to the memory table of slow query statements #10317 Add the transaction commit time to slow query log #10310 Fix the issue some time formats cannot be parsed by pt-query-digest #10323    PD  Support the GetOperator service #1514  TiKV  Fix potential quorum changes when transferring leader #4604  Tools  TiDB Binlog  Fix the issue that data replication is interrupted because data in the unsigned int type of primary key column are minus numbers #574 Remove the compression option when the downstream is pb and change the downstream name from pb to file #597 Fix the bug that Reparo introduced in 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.9 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/2.1.9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/2.1.9/</guid>
      <description>TiDB 2.1.9 Release Notes Release date: May 6, 2019
TiDB version: 2.1.9
TiDB-Ansible version: 2.1.9
TiDB  Fix compatibility of the MAKETIME function when unsigned type overflows #10089 Fix the stack overflow caused by constant folding in some cases #10189 Fix the privilege check issue for Update when an alias exists in some cases #10157, #10326 Track and control memory usage in DistSQL #10197 Support specifying collation as utf8mb4_0900_ai_ci #10201 Fix the wrong result issue of the MAX function when the primary key is of the Unsigned type #10209 Fix the issue that NULL values can be inserted into NOT NULL columns in the non-strict SQL mode #10254 Fix the wrong result issue of the COUNT function when multiple columns exist in DISTINCT #10270 Fix the panic issue occurred when LOAD DATA parses irregular CSV files #10269 Ignore the overflow error when the outer and inner join key types are inconsistent in Index Lookup Join #10244 Fix the issue that a statement is wrongly judged as point-get in some cases #10299 Fix the wrong result issue when the time type does not convert the time zone in some cases #10345 Fix the issue that TiDB character set cases are inconsistent in some cases #10354 Support controlling the number of rows returned by operator #9166  Selection &amp;amp; Projection #10110 StreamAgg &amp;amp; HashAgg #10133 TableReader &amp;amp; IndexReader &amp;amp; IndexLookup #10169   Improve the slow query log  Add SQL Digest to distinguish similar SQL #10093 Add version information of statistics used by slow query statements #10220 Show memory consumption of a statement in slow query log #10246 Adjust the output format of Coprocessor related information so it can be parsed by pt-query-digest #10300 Fix the # character issue in slow query statements #10275 Add some information columns to the memory table of slow query statements #10317 Add the transaction commit time to slow query log #10310 Fix the issue some time formats cannot be parsed by pt-query-digest #10323    PD  Support the GetOperator service #1514  TiKV  Fix potential quorum changes when transferring leader #4604  Tools  TiDB Binlog  Fix the issue that data replication is interrupted because data in the unsigned int type of primary key column are minus numbers #574 Remove the compression option when the downstream is pb and change the downstream name from pb to file #597 Fix the bug that Reparo introduced in 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.9 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/2.1.9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/2.1.9/</guid>
      <description>TiDB 2.1.9 Release Notes Release date: May 6, 2019
TiDB version: 2.1.9
TiDB Ansible version: 2.1.9
TiDB  Fix compatibility of the MAKETIME function when unsigned type overflows #10089 Fix the stack overflow caused by constant folding in some cases #10189 Fix the privilege check issue for Update when an alias exists in some cases #10157, #10326 Track and control memory usage in DistSQL #10197 Support specifying collation as utf8mb4_0900_ai_ci #10201 Fix the wrong result issue of the MAX function when the primary key is of the Unsigned type #10209 Fix the issue that NULL values can be inserted into NOT NULL columns in the non-strict SQL mode #10254 Fix the wrong result issue of the COUNT function when multiple columns exist in DISTINCT #10270 Fix the panic issue occurred when LOAD DATA parses irregular CSV files #10269 Ignore the overflow error when the outer and inner join key types are inconsistent in Index Lookup Join #10244 Fix the issue that a statement is wrongly judged as point-get in some cases #10299 Fix the wrong result issue when the time type does not convert the time zone in some cases #10345 Fix the issue that TiDB character set cases are inconsistent in some cases #10354 Support controlling the number of rows returned by operator #9166  Selection &amp;amp; Projection #10110 StreamAgg &amp;amp; HashAgg #10133 TableReader &amp;amp; IndexReader &amp;amp; IndexLookup #10169   Improve the slow query log  Add SQL Digest to distinguish similar SQL #10093 Add version information of statistics used by slow query statements #10220 Show memory consumption of a statement in slow query log #10246 Adjust the output format of Coprocessor related information so it can be parsed by pt-query-digest #10300 Fix the # character issue in slow query statements #10275 Add some information columns to the memory table of slow query statements #10317 Add the transaction commit time to slow query log #10310 Fix the issue some time formats cannot be parsed by pt-query-digest #10323    PD  Support the GetOperator service #1514  TiKV  Fix potential quorum changes when transferring leader #4604  Tools  TiDB Binlog  Fix the issue that data replication is interrupted because data in the unsigned int type of primary key column are minus numbers #574 Remove the compression option when the downstream is pb and change the downstream name from pb to file #597 Fix the bug that Reparo introduced in 2.</description>
    </item>
    
    <item>
      <title>TiDB 2.1.9 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/2.1.9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/2.1.9/</guid>
      <description>TiDB 2.1.9 Release Notes Release date: May 6, 2019
TiDB version: 2.1.9
TiDB-Ansible version: 2.1.9
TiDB  Fix compatibility of the MAKETIME function when unsigned type overflows #10089 Fix the stack overflow caused by constant folding in some cases #10189 Fix the privilege check issue for Update when an alias exists in some cases #10157, #10326 Track and control memory usage in DistSQL #10197 Support specifying collation as utf8mb4_0900_ai_ci #10201 Fix the wrong result issue of the MAX function when the primary key is of the Unsigned type #10209 Fix the issue that NULL values can be inserted into NOT NULL columns in the non-strict SQL mode #10254 Fix the wrong result issue of the COUNT function when multiple columns exist in DISTINCT #10270 Fix the panic issue occurred when LOAD DATA parses irregular CSV files #10269 Ignore the overflow error when the outer and inner join key types are inconsistent in Index Lookup Join #10244 Fix the issue that a statement is wrongly judged as point-get in some cases #10299 Fix the wrong result issue when the time type does not convert the time zone in some cases #10345 Fix the issue that TiDB character set cases are inconsistent in some cases #10354 Support controlling the number of rows returned by operator #9166  Selection &amp;amp; Projection #10110 StreamAgg &amp;amp; HashAgg #10133 TableReader &amp;amp; IndexReader &amp;amp; IndexLookup #10169   Improve the slow query log  Add SQL Digest to distinguish similar SQL #10093 Add version information of statistics used by slow query statements #10220 Show memory consumption of a statement in slow query log #10246 Adjust the output format of Coprocessor related information so it can be parsed by pt-query-digest #10300 Fix the # character issue in slow query statements #10275 Add some information columns to the memory table of slow query statements #10317 Add the transaction commit time to slow query log #10310 Fix the issue some time formats cannot be parsed by pt-query-digest #10323    PD  Support the GetOperator service #1514  TiKV  Fix potential quorum changes when transferring leader #4604  Tools  TiDB Binlog  Fix the issue that data replication is interrupted because data in the unsigned int type of primary key column are minus numbers #574 Remove the compression option when the downstream is pb and change the downstream name from pb to file #597 Fix the bug that Reparo introduced in 2.</description>
    </item>
    
    <item>
      <title>TiDB 3.0 Beta Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.0beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.0beta/</guid>
      <description>TiDB 3.0 Beta Release Notes 2019 年 1 月 19 日，TiDB 发布 3.0 Beta 版，TiDB Ansible 相应发布 3.0 Beta 版本。相比 2.1 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  新特性  支持 View 支持窗口函数 支持 Range 分区 支持 Hash 分区   SQL 优化器  重新支持聚合消除的优化规则 #7676 优化 NOT EXISTS 子查询，将其转化为 Anti Semi Join #7842 添加 tidb_enable_cascades_planner 变量以支持新的 Cascades 优化器。目前 Cascades 优化器尚未实现完全，默认关闭 #7879 支持在事务中使用 Index Join #7877 优化 Outer Join 上的常量传播，使得对 Join 结果里和 Outer 表相关的过滤条件能够下推过 Outer Join 到 Outer 表上，减少 Outer Join 的无用计算量，提升执行性能 #7794 调整投影消除的优化规则到聚合消除之后，消除掉冗余的 Project 算子 #7909 优化 IFNULL 函数，当输入参数具有非 NULL 的属性的时候，消除该函数 #7924 支持对 _tidb_rowid 构造查询的 Range，避免全表扫，减轻集群压力 #8047 优化 IN 子查询为先聚合后做 Inner Join 并，添加变量 tidb_opt_insubq_to_join_and_agg 以控制是否开启该优化规则并默认打开 #7531 支持在 DO 语句中使用子查询 #8343 添加 Outer Join 消除的优化规则，减少不必要的扫表和 Join 操作，提升执行性能 #8021 修改 TIDB_INLJ 优化器 Hint 的行为，优化器将使用 Hint 中指定的表当做 Index Join 的 Inner 表 #8243 更大范围的启用 PointGet，使得当 Prepare 语句的执行计划缓存生效时也能利用上它 #8108 引入贪心的 Join Reorder 算法，优化多表 Join 时 Join 顺序选择的问题 #8394 支持 View #8757 支持 Window Function #8630 当 TIDB_INLJ 未生效时，返回 warning 给客户端，增强易用性 #9037 支持根据过滤条件和表的统计信息推导过滤后数据的统计信息的功能 #7921 增强 Range Partition 的 Partition Pruning 优化规则 #8885   SQL 执行引擎  优化 Merge Join 算子，使其支持空的 ON 条件 #9037 优化日志，打印执行 EXECUTE 语句时使用的用户变量 #7684 优化日志，为 COMMIT 语句打印慢查询信息 #7951 支持 EXPLAIN ANALYZE 功能，使得 SQL 调优过程更加简单 #7827 优化列很多的宽表的写入性能 #7935 支持 admin show next_row_id #8242 添加变量 tidb_init_chunk_size 以控制执行引擎使用的初始 Chunk 大小 #8480 完善 shard_row_id_bits，对自增 ID 做越界检查 #8936   Prepare 语句  对包含子查询的 Prepare 语句，禁止其添加到 Prepare 语句的执行计划缓存中，确保输入不同的用户变量时执行计划的正确性 #8064 优化 Prepare 语句的执行计划缓存，使得当语句中包含非确定性函数的时候，该语句的执行计划也能被缓存 #8105 优化 Prepare 语句的执行计划缓存，使得 DELETE/UPDATE/INSERT 的执行计划也能被缓存 #8107 优化 Prepare 语句的执行计划缓存，当执行 DEALLOCATE 语句时从缓存中剔除对应的执行计划 #8332 优化 Prepare 语句的执行计划缓存，通过控制其内存使用以避免缓存过多执行计划导致 TiDB OOM 的问题 #8339 优化 Prepare 语句，使得 ORDER BY/GROUP BY/LIMIT 子句中可以使用 “?</description>
    </item>
    
    <item>
      <title>TiDB 3.0 Beta Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/3.0beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/3.0beta/</guid>
      <description>TiDB 3.0 Beta Release Notes 2019 年 1 月 19 日，TiDB 发布 3.0 Beta 版，TiDB Ansible 相应发布 3.0 Beta 版本。相比 2.1 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  新特性  支持 View 支持窗口函数 支持 Range 分区 支持 Hash 分区   SQL 优化器  重新支持聚合消除的优化规则 #7676 优化 NOT EXISTS 子查询，将其转化为 Anti Semi Join #7842 添加 tidb_enable_cascades_planner 变量以支持新的 Cascades 优化器。目前 Cascades 优化器尚未实现完全，默认关闭 #7879 支持在事务中使用 Index Join #7877 优化 Outer Join 上的常量传播，使得对 Join 结果里和 Outer 表相关的过滤条件能够下推过 Outer Join 到 Outer 表上，减少 Outer Join 的无用计算量，提升执行性能 #7794 调整投影消除的优化规则到聚合消除之后，消除掉冗余的 Project 算子 #7909 优化 IFNULL 函数，当输入参数具有非 NULL 的属性的时候，消除该函数 #7924 支持对 _tidb_rowid 构造查询的 Range，避免全表扫，减轻集群压力 #8047 优化 IN 子查询为先聚合后做 Inner Join 并，添加变量 tidb_opt_insubq_to_join_and_agg 以控制是否开启该优化规则并默认打开 #7531 支持在 DO 语句中使用子查询 #8343 添加 Outer Join 消除的优化规则，减少不必要的扫表和 Join 操作，提升执行性能 #8021 修改 TIDB_INLJ 优化器 Hint 的行为，优化器将使用 Hint 中指定的表当做 Index Join 的 Inner 表 #8243 更大范围的启用 PointGet，使得当 Prepare 语句的执行计划缓存生效时也能利用上它 #8108 引入贪心的 Join Reorder 算法，优化多表 Join 时 Join 顺序选择的问题 #8394 支持 View #8757 支持 Window Function #8630 当 TIDB_INLJ 未生效时，返回 warning 给客户端，增强易用性 #9037 支持根据过滤条件和表的统计信息推导过滤后数据的统计信息的功能 #7921 增强 Range Partition 的 Partition Pruning 优化规则 #8885   SQL 执行引擎  优化 Merge Join 算子，使其支持空的 ON 条件 #9037 优化日志，打印执行 EXECUTE 语句时使用的用户变量 #7684 优化日志，为 COMMIT 语句打印慢查询信息 #7951 支持 EXPLAIN ANALYZE 功能，使得 SQL 调优过程更加简单 #7827 优化列很多的宽表的写入性能 #7935 支持 admin show next_row_id #8242 添加变量 tidb_init_chunk_size 以控制执行引擎使用的初始 Chunk 大小 #8480 完善 shard_row_id_bits，对自增 ID 做越界检查 #8936   Prepare 语句  对包含子查询的 Prepare 语句，禁止其添加到 Prepare 语句的执行计划缓存中，确保输入不同的用户变量时执行计划的正确性 #8064 优化 Prepare 语句的执行计划缓存，使得当语句中包含非确定性函数的时候，该语句的执行计划也能被缓存 #8105 优化 Prepare 语句的执行计划缓存，使得 DELETE/UPDATE/INSERT 的执行计划也能被缓存 #8107 优化 Prepare 语句的执行计划缓存，当执行 DEALLOCATE 语句时从缓存中剔除对应的执行计划 #8332 优化 Prepare 语句的执行计划缓存，通过控制其内存使用以避免缓存过多执行计划导致 TiDB OOM 的问题 #8339 优化 Prepare 语句，使得 ORDER BY/GROUP BY/LIMIT 子句中可以使用 “?</description>
    </item>
    
    <item>
      <title>TiDB 3.0 Beta Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/3.0beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/3.0beta/</guid>
      <description>TiDB 3.0 Beta Release Notes 2019 年 1 月 19 日，TiDB 发布 3.0 Beta 版，TiDB Ansible 相应发布 3.0 Beta 版本。相比 2.1 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  新特性  支持 View 支持窗口函数 支持 Range 分区 支持 Hash 分区   SQL 优化器  重新支持聚合消除的优化规则 #7676 优化 NOT EXISTS 子查询，将其转化为 Anti Semi Join #7842 添加 tidb_enable_cascades_planner 变量以支持新的 Cascades 优化器。目前 Cascades 优化器尚未实现完全，默认关闭 #7879 支持在事务中使用 Index Join #7877 优化 Outer Join 上的常量传播，使得对 Join 结果里和 Outer 表相关的过滤条件能够下推过 Outer Join 到 Outer 表上，减少 Outer Join 的无用计算量，提升执行性能 #7794 调整投影消除的优化规则到聚合消除之后，消除掉冗余的 Project 算子 #7909 优化 IFNULL 函数，当输入参数具有非 NULL 的属性的时候，消除该函数 #7924 支持对 _tidb_rowid 构造查询的 Range，避免全表扫，减轻集群压力 #8047 优化 IN 子查询为先聚合后做 Inner Join 并，添加变量 tidb_opt_insubq_to_join_and_agg 以控制是否开启该优化规则并默认打开 #7531 支持在 DO 语句中使用子查询 #8343 添加 Outer Join 消除的优化规则，减少不必要的扫表和 Join 操作，提升执行性能 #8021 修改 TIDB_INLJ 优化器 Hint 的行为，优化器将使用 Hint 中指定的表当做 Index Join 的 Inner 表 #8243 更大范围的启用 PointGet，使得当 Prepare 语句的执行计划缓存生效时也能利用上它 #8108 引入贪心的 Join Reorder 算法，优化多表 Join 时 Join 顺序选择的问题 #8394 支持 View #8757 支持 Window Function #8630 当 TIDB_INLJ 未生效时，返回 warning 给客户端，增强易用性 #9037 支持根据过滤条件和表的统计信息推导过滤后数据的统计信息的功能 #7921 增强 Range Partition 的 Partition Pruning 优化规则 #8885   SQL 执行引擎  优化 Merge Join 算子，使其支持空的 ON 条件 #9037 优化日志，打印执行 EXECUTE 语句时使用的用户变量 #7684 优化日志，为 COMMIT 语句打印慢查询信息 #7951 支持 EXPLAIN ANALYZE 功能，使得 SQL 调优过程更加简单 #7827 优化列很多的宽表的写入性能 #7935 支持 admin show next_row_id #8242 添加变量 tidb_init_chunk_size 以控制执行引擎使用的初始 Chunk 大小 #8480 完善 shard_row_id_bits，对自增 ID 做越界检查 #8936   Prepare 语句  对包含子查询的 Prepare 语句，禁止其添加到 Prepare 语句的执行计划缓存中，确保输入不同的用户变量时执行计划的正确性 #8064 优化 Prepare 语句的执行计划缓存，使得当语句中包含非确定性函数的时候，该语句的执行计划也能被缓存 #8105 优化 Prepare 语句的执行计划缓存，使得 DELETE/UPDATE/INSERT 的执行计划也能被缓存 #8107 优化 Prepare 语句的执行计划缓存，当执行 DEALLOCATE 语句时从缓存中剔除对应的执行计划 #8332 优化 Prepare 语句的执行计划缓存，通过控制其内存使用以避免缓存过多执行计划导致 TiDB OOM 的问题 #8339 优化 Prepare 语句，使得 ORDER BY/GROUP BY/LIMIT 子句中可以使用 “?</description>
    </item>
    
    <item>
      <title>TiDB 3.0 Beta Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.0beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.0beta/</guid>
      <description>TiDB 3.0 Beta Release Notes 2019 年 1 月 19 日，TiDB 发布 3.0 Beta 版，TiDB Ansible 相应发布 3.0 Beta 版本。相比 2.1 版本，该版本对系统稳定性、优化器、统计信息以及执行引擎做了很多改进。
TiDB  新特性  支持 View 支持窗口函数 支持 Range 分区 支持 Hash 分区   SQL 优化器  重新支持聚合消除的优化规则 #7676 优化 NOT EXISTS 子查询，将其转化为 Anti Semi Join #7842 添加 tidb_enable_cascades_planner 变量以支持新的 Cascades 优化器。目前 Cascades 优化器尚未实现完全，默认关闭 #7879 支持在事务中使用 Index Join #7877 优化 Outer Join 上的常量传播，使得对 Join 结果里和 Outer 表相关的过滤条件能够下推过 Outer Join 到 Outer 表上，减少 Outer Join 的无用计算量，提升执行性能 #7794 调整投影消除的优化规则到聚合消除之后，消除掉冗余的 Project 算子 #7909 优化 IFNULL 函数，当输入参数具有非 NULL 的属性的时候，消除该函数 #7924 支持对 _tidb_rowid 构造查询的 Range，避免全表扫，减轻集群压力 #8047 优化 IN 子查询为先聚合后做 Inner Join 并，添加变量 tidb_opt_insubq_to_join_and_agg 以控制是否开启该优化规则并默认打开 #7531 支持在 DO 语句中使用子查询 #8343 添加 Outer Join 消除的优化规则，减少不必要的扫表和 Join 操作，提升执行性能 #8021 修改 TIDB_INLJ 优化器 Hint 的行为，优化器将使用 Hint 中指定的表当做 Index Join 的 Inner 表 #8243 更大范围的启用 PointGet，使得当 Prepare 语句的执行计划缓存生效时也能利用上它 #8108 引入贪心的 Join Reorder 算法，优化多表 Join 时 Join 顺序选择的问题 #8394 支持 View #8757 支持 Window Function #8630 当 TIDB_INLJ 未生效时，返回 warning 给客户端，增强易用性 #9037 支持根据过滤条件和表的统计信息推导过滤后数据的统计信息的功能 #7921 增强 Range Partition 的 Partition Pruning 优化规则 #8885   SQL 执行引擎  优化 Merge Join 算子，使其支持空的 ON 条件 #9037 优化日志，打印执行 EXECUTE 语句时使用的用户变量 #7684 优化日志，为 COMMIT 语句打印慢查询信息 #7951 支持 EXPLAIN ANALYZE 功能，使得 SQL 调优过程更加简单 #7827 优化列很多的宽表的写入性能 #7935 支持 admin show next_row_id #8242 添加变量 tidb_init_chunk_size 以控制执行引擎使用的初始 Chunk 大小 #8480 完善 shard_row_id_bits，对自增 ID 做越界检查 #8936   Prepare 语句  对包含子查询的 Prepare 语句，禁止其添加到 Prepare 语句的执行计划缓存中，确保输入不同的用户变量时执行计划的正确性 #8064 优化 Prepare 语句的执行计划缓存，使得当语句中包含非确定性函数的时候，该语句的执行计划也能被缓存 #8105 优化 Prepare 语句的执行计划缓存，使得 DELETE/UPDATE/INSERT 的执行计划也能被缓存 #8107 优化 Prepare 语句的执行计划缓存，当执行 DEALLOCATE 语句时从缓存中剔除对应的执行计划 #8332 优化 Prepare 语句的执行计划缓存，通过控制其内存使用以避免缓存过多执行计划导致 TiDB OOM 的问题 #8339 优化 Prepare 语句，使得 ORDER BY/GROUP BY/LIMIT 子句中可以使用 “?</description>
    </item>
    
    <item>
      <title>TiDB 3.0 Beta Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.0beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.0beta/</guid>
      <description>TiDB 3.0 Beta Release Notes On January 19, 2019, TiDB 3.0 Beta is released. The corresponding TiDB Ansible 3.0 Beta is also released. TiDB 3.0 Beta builds on TiDB 2.1 with an added focus in stability, the SQL optimizer, statistics, and the execution engine.
TiDB  New Features  Support Views Support Window Functions Support Range Partitioning Support Hash Partitioning   SQL Optimizer  Re-support the optimization rule of AggregationElimination #7676 Optimize the NOT EXISTS subquery and convert it to Anti Semi Join #7842 Add the tidb_enable_cascades_planner variable to support the new Cascades optimizer.</description>
    </item>
    
    <item>
      <title>TiDB 3.0 Beta Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/3.0beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/3.0beta/</guid>
      <description>TiDB 3.0 Beta Release Notes On January 19, 2019, TiDB 3.0 Beta is released. The corresponding TiDB Ansible 3.0 Beta is also released. TiDB 3.0 Beta builds on TiDB 2.1 with an added focus in stability, the SQL optimizer, statistics, and the execution engine.
TiDB  New Features  Support Views Support Window Functions Support Range Partitioning Support Hash Partitioning   SQL Optimizer  Re-support the optimization rule of AggregationElimination #7676 Optimize the NOT EXISTS subquery and convert it to Anti Semi Join #7842 Add the tidb_enable_cascades_planner variable to support the new Cascades optimizer.</description>
    </item>
    
    <item>
      <title>TiDB 3.0 Beta Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/3.0beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/3.0beta/</guid>
      <description>TiDB 3.0 Beta Release Notes On January 19, 2019, TiDB 3.0 Beta is released. The corresponding TiDB Ansible 3.0 Beta is also released. TiDB 3.0 Beta builds on TiDB 2.1 with an added focus in stability, the SQL optimizer, statistics, and the execution engine.
TiDB  New Features  Support Views Support Window Functions Support Range Partitioning Support Hash Partitioning   SQL Optimizer  Re-support the optimization rule of AggregationElimination #7676 Optimize the NOT EXISTS subquery and convert it to Anti Semi Join #7842 Add the tidb_enable_cascades_planner variable to support the new Cascades optimizer.</description>
    </item>
    
    <item>
      <title>TiDB 3.0 Beta Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.0beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.0beta/</guid>
      <description>TiDB 3.0 Beta Release Notes On January 19, 2019, TiDB 3.0 Beta is released. The corresponding TiDB Ansible 3.0 Beta is also released. TiDB 3.0 Beta builds on TiDB 2.1 with an added focus in stability, the SQL optimizer, statistics, and the execution engine.
TiDB  New Features  Support Views Support Window Functions Support Range Partitioning Support Hash Partitioning   SQL Optimizer  Re-support the optimization rule of AggregationElimination #7676 Optimize the NOT EXISTS subquery and convert it to Anti Semi Join #7842 Add the tidb_enable_cascades_planner variable to support the new Cascades optimizer.</description>
    </item>
    
    <item>
      <title>TiDB 3.0 GA Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.0-ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.0-ga/</guid>
      <description>TiDB 3.0 GA Release Notes 发版日期：2019 年 6 月 28 日
TiDB 版本：3.0.0
TiDB Ansible 版本：3.0.0
Overview 2019 年 6 月 28 日，TiDB 发布 3.0 GA 版本，对应的 TiDB Ansible 版本为 3.0.0。相比于 V2.1，V3.0.0 版本在以下方面有重要改进：
 稳定性方面，显著提升了大规模集群的稳定性，集群支持 150+ 存储节点，300+TB 存储容量长期稳定运行。 易用性方面有显著的提升，降低用户运维成本，例如：标准化慢查询日志，制定日志文件输出规范，新增 EXPLAIN ANALYZE，SQL Trace 功能方便排查问题等。 性能方面，与 2.1 相比，TPC-C 性能提升约 4.5 倍，Sysbench 性能提升约 1.5 倍。因支持 View，TPC-H 50G Q15 可正常运行。 新功能方面增加了窗口函数、视图（实验特性）、分区表、插件系统、悲观锁（实验特性）、SQL Plan Management 等特性。  TiDB  新功能  新增 Window Function，支持所有 MySQL 8.0 中的窗口函数，包括 NTILE，LEAD，LAG、PERCENT_RANK、NTH_VALUE、CUME_DIST、FIRST_VALUE、LAST_VALUE、RANK、DENSE_RANK、ROW_NUMBER 函数 新增 View 功能（实验特性） 完善 Table Partition 功能：  Range Partition Hash Partition   新增插件系统，官方提供 IP 白名单（企业版特性），审记日志（企业版特性）等插件 新增 SQL Plan Management 功能，通过绑定 SQL 执行计划确保查询的稳定性（实验特性）   SQL 优化器  优化NOT EXISTS 子查询，转化为 Anti Semi Join 提升性能 优化 Outer Join 常量传播，新增 Outer Join 消除优化规则，避免无效计算，提升性能 优化 IN 子查询，先聚合后执行 Inner Join，提升性能 优化 Index Join，适应更多的场景，提升性能 优化 Range Partition 的 Partition Pruning 优化规则，提升性能 优化 _tidb_rowid 查询逻辑，避免全表扫描，提升性能 当过滤条件中包含相关列时，在抽取复合索引的访问条件时尽可能多地匹配索引的前缀列，提升性能 利用列之间的顺序相关性，提升代价估算准确度 基于统计信息的贪心算法及动态规划算法改进了 Join Order，提升多表关联的执行速度 新增 Skyline Pruning，利用规则防止执行计划过于依赖统计信息，提升查询的稳定性 提升单列索引上值为 NULL 时行数估算准确度 新增 FAST ANALYZE，通过在各个 Region 中随机采样避免全表扫描的方式提升统计信息收集性能 新增单调递增的索引列增量 Analyze 功能，提升统计信息收集性能 支持 DO 语句中使用子查询 支持在事务中使用 Index Join 优化 prepare/execute，支持不带参数的 DDL 语句 修改变量 stats-lease 值为 0 时系统的行为，使其自动加载统计 新增导出历史统计信息功能 新增导入导出列的关联性信息功能   SQL 执行引擎  优化日志输出，EXECUTE 语句输出用户变量，COMMIT 语句输出慢查询日志，方便排查问题 新增 EXPLAIN ANALYZE 功能，提升SQL 调优易用性 新增 admin show next_row_id 功能，方便获取下一行 ID 新增 JSON_QUOTE、JSON_ARRAY_APPEND、JSON_MERGE_PRESERVE、BENCHMARK、COALESCE、NAME_CONST 6 个内建函数 优化 Chunk 大小控制逻辑，根据查询上下文件动态调整，降低 SQL 执行时间和资源消耗，提升性能 新增 TableReader、IndexReader 和 IndexLookupReader 算子内存追踪控制 优化 Merge Join 算子，使其支持空的 ON 条件 优化单个表列较多时写入性能，提升数倍性能 通过支持逆序扫数据提升 admin show ddl jobs 的性能 新增 split table region 语句，手动分裂表的 Region，缓解热点问题 新增 split index region 语句，手动分裂索引的 Region，缓解热点问题 新增黑名单禁止下推表达式到 Coprocessor 功能 优化 Expensive Query 日志，在日志中打印执行时间或者使用内存超过阈值的 SQL 查询   DDL  支持字符集从 utf8 转换到 utf8mb4 的功能 修改默认字符集从 utf8 变为 utf8mb4 新增 alter schema 语句修改数据库 charset 和 collation 功能 新增 ALTER ALGORITHM INPLACE/INSTANT 功能 新增 SHOW CREATE VIEW 功能 新增 SHOW CREATE USER 功能 新增快速恢复误删除的表功能 新增动态调整 ADD INDEX 的并发数功能 新增 pre_split_regions 选项，在 CREATE TABLE 时预先分配 Region，缓解建表后大量写入造成的写热点问题 新增通过 SQL 语句指定表的索引及范围分裂 Region，缓解热点问题 新增 ddl_error_count_limit 全局变量，控制 DDL 任务重次数 新增列属性包含 AUTO_INCREMENT 时利用 SHARD_ROW_ID_BITS 打散行 ID 功能，缓解热点问题 优化无效 DDL 元信息存活时间，使集群升级后一段时间 DDL 操作比较慢的情况变短   事务  新增悲观事务模型（实验特性） 优化事务处理逻辑，适应更多场景，具体如下：  tidb_disable_txn_auto_retry 的默认值为 on ，即不会重试非自动提交的事务 新增 tidb_batch_commit 系统变量控制将事务拆分成多个事务并发执行 新增 tidb_low_resolution_tso 系统变量控制批量获取 tso 个数，减少事务获取 tso 的次数以适应某些数据一致性要求较低的场景 新增 tidb_skip_isolation_level_check 变量控制事务检查隔离级别设置为 SERIALIZABLE 时是否报错 修改 tidb_disable_txn_auto_retry 系统变量的行为，修改为影响所有的可重试错误     权限管理 - 对 ANALYZE、USE、SET GLOBAL、SHOW PROCESSLIST 语句进行权限检查 - 新增基于角色的权限访问控制功能 (RBAC)（实验特性） Server  优化慢查询日志，具体包括：  重构慢查询日志格式 优化慢查询日志内容 优化查询慢查询日志的方法，通过内存表 INFORMATION_SCHEMA.</description>
    </item>
    
    <item>
      <title>TiDB 3.0 GA Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/3.0-ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/3.0-ga/</guid>
      <description>TiDB 3.0 GA Release Notes 发版日期：2019 年 6 月 28 日
TiDB 版本：3.0.0
TiDB Ansible 版本：3.0.0
Overview 2019 年 6 月 28 日，TiDB 发布 3.0 GA 版本，对应的 TiDB Ansible 版本为 3.0.0。 相比于 V2.1，V3.0.0 版本在以下方面有重要改进：
 稳定性方面，显著提升了大规模集群的稳定性，集群支持 150+ 存储节点，300+ TB 存储容量长期稳定运行。 易用性方面有显著的提升，降低用户运维成本，例如：标准化慢查询日志，制定日志文件输出规范，新增 EXPLAIN ANALYZE，SQL Trace 功能方便排查问题等。 性能方面，与 2.1 相比，TPC-C 性能提升约 4.5 倍，Sysbench 性能提升约 1.5 倍。因支持 View，TPC-H 50G Q15 可正常运行。 新功能方面增加了窗口函数、视图（实验特性）、分区表、插件系统、悲观锁（实验特性）、SQL Plan Management 等特性。  TiDB  新功能  新增 Window Function，支持所有 MySQL 8.</description>
    </item>
    
    <item>
      <title>TiDB 3.0 GA Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/3.0-ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/3.0-ga/</guid>
      <description>TiDB 3.0 GA Release Notes 发版日期：2019 年 6 月 28 日
TiDB 版本：3.0.0
TiDB Ansible 版本：3.0.0
Overview 2019 年 6 月 28 日，TiDB 发布 3.0 GA 版本，对应的 TiDB Ansible 版本为 3.0.0。 相比于 V2.1，V3.0.0 版本在以下方面有重要改进：
 稳定性方面，显著提升了大规模集群的稳定性，集群支持 150+ 存储节点，300+ TB 存储容量长期稳定运行。 易用性方面有显著的提升，降低用户运维成本，例如：标准化慢查询日志，制定日志文件输出规范，新增 EXPLAIN ANALYZE，SQL Trace 功能方便排查问题等。 性能方面，与 2.1 相比，TPC-C 性能提升约 4.5 倍，Sysbench 性能提升约 1.5 倍。因支持 View，TPC-H 50G Q15 可正常运行。 新功能方面增加了窗口函数、视图（实验特性）、分区表、插件系统、悲观锁（实验特性）、SQL Plan Management 等特性。  TiDB  新功能  新增 Window Function，支持所有 MySQL 8.</description>
    </item>
    
    <item>
      <title>TiDB 3.0 GA Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.0-ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.0-ga/</guid>
      <description>TiDB 3.0 GA Release Notes 发版日期：2019 年 6 月 28 日
TiDB 版本：3.0.0
TiDB Ansible 版本：3.0.0
Overview 2019 年 6 月 28 日，TiDB 发布 3.0 GA 版本，对应的 TiDB Ansible 版本为 3.0.0。 相比于 V2.1，V3.0.0 版本在以下方面有重要改进：
 稳定性方面，显著提升了大规模集群的稳定性，集群支持 150+ 存储节点，300+ TB 存储容量长期稳定运行。 易用性方面有显著的提升，降低用户运维成本，例如：标准化慢查询日志，制定日志文件输出规范，新增 EXPLAIN ANALYZE，SQL Trace 功能方便排查问题等。 性能方面，与 2.1 相比，TPC-C 性能提升约 4.5 倍，Sysbench 性能提升约 1.5 倍。因支持 View，TPC-H 50G Q15 可正常运行。 新功能方面增加了窗口函数、视图（实验特性）、分区表、插件系统、悲观锁（实验特性）、SQL Plan Management 等特性。  TiDB  新功能  新增 Window Function，支持所有 MySQL 8.</description>
    </item>
    
    <item>
      <title>TiDB 3.0 GA Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.0-ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.0-ga/</guid>
      <description>TiDB 3.0 GA Release Notes Release date: June 28, 2019
TiDB version: 3.0.0
TiDB Ansible version: 3.0.0
Overview On June 28, 2019, TiDB 3.0 GA is released. The corresponding TiDB Ansible version is 3.0.0. Compared with TiDB 2.1, this release has greatly improved in the following aspects:
 Stability. TiDB 3.0 has demonstrated long-term stability for large-scale clusters with up to 150+ nodes and 300+ TB of storage. Usability. TiDB 3.</description>
    </item>
    
    <item>
      <title>TiDB 3.0 GA Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/3.0-ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/3.0-ga/</guid>
      <description>TiDB 3.0 GA Release Notes Release date: June 28, 2019
TiDB version: 3.0.0
TiDB Ansible version: 3.0.0
Overview On June 28, 2019, TiDB 3.0 GA is released. The corresponding TiDB Ansible version is 3.0.0. Compared with TiDB 2.1, this release has greatly improved in the following aspects:
 Stability. TiDB 3.0 has demonstrated long-term stability for large-scale clusters with up to 150+ nodes and 300+ TB of storage. Usability. TiDB 3.</description>
    </item>
    
    <item>
      <title>TiDB 3.0 GA Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/3.0-ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/3.0-ga/</guid>
      <description>TiDB 3.0 GA Release Notes Release date: June 28, 2019
TiDB version: 3.0.0
TiDB Ansible version: 3.0.0
Overview On June 28, 2019, TiDB 3.0 GA is released. The corresponding TiDB Ansible version is 3.0.0. Compared with TiDB 2.1, this release has greatly improved in the following aspects:
 Stability. TiDB 3.0 has demonstrated long-term stability for large-scale clusters with up to 150+ nodes and 300+ TB of storage. Usability. TiDB 3.</description>
    </item>
    
    <item>
      <title>TiDB 3.0 GA Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.0-ga/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.0-ga/</guid>
      <description>TiDB 3.0 GA Release Notes Release date: June 28, 2019
TiDB version: 3.0.0
TiDB Ansible version: 3.0.0
Overview On June 28, 2019, TiDB 3.0 GA is released. The corresponding TiDB Ansible version is 3.0.0. Compared with TiDB 2.1, this release has greatly improved in the following aspects:
 Stability. TiDB 3.0 has demonstrated long-term stability for large-scale clusters with up to 150+ nodes and 300+ TB of storage. Usability. TiDB 3.</description>
    </item>
    
    <item>
      <title>TiDB 3.0 Upgrade Guide</title>
      <link>https://pingcap.com/docs/stable/how-to/upgrade/from-previous-version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/upgrade/from-previous-version/</guid>
      <description>Learn how to upgrade to TiDB 3.0 versions.</description>
    </item>
    
    <item>
      <title>TiDB 3.0 升级操作指南</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/upgrade/from-previous-version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/upgrade/from-previous-version/</guid>
      <description>TiDB 3.0 升级操作指南 本文档适用于从 TiDB 2.0 或 2.1 版本升级至 TiDB 3.0 版本以及 TiDB 3.0 低版本升级至 TiDB 3.0 高版本。目前，TiDB 3.0 版本兼容 TiDB Binlog Cluster 版本。
升级兼容性说明  不支持在升级后回退至 2.1.x 或更旧版本 从 2.0.6 之前的版本升级到 3.0 之前，需要确认集群中是否存在正在运行中的 DDL 操作，特别是耗时的 Add Index 操作，等 DDL 操作完成后再执行升级操作 2.1 及之后版本启用了并行 DDL，早于 2.0.1 版本的集群，无法滚动升级到 3.0，可以选择下面两种方案：  停机升级，直接从早于 2.0.1 的 TiDB 版本升级到 3.0 先滚动升级到 2.0.1 或者之后的 2.0.x 版本，再滚动升级到 3.0 版本     注意：
在升级的过程中不要执行 DDL 请求，否则可能会出现行为未定义的问题。
 在中控机器上安装 Ansible 及其依赖  注意：</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0 Beta.1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.0.0-beta.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.0.0-beta.1/</guid>
      <description>TiDB 3.0.0 Beta.1 Release Notes 发版日期：2019 年 3 月 26 日
TiDB 版本：3.0.0-beta.1
TiDB Ansible 版本：3.0.0-beta.1
Overview 2019 年 03 月 26 日，TiDB 发布 3.0.0 Beta.1 版，对应的 TiDB Ansible 版本为 3.0.0 Beta.1。相比 3.0.0 Beta 版本，该版本对系统稳定性、易用性、功能、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  支持使用 Sort Merge Join 计算笛卡尔积 #9032 支持 Skyline Pruning，用一些规则来防止执行计划过于依赖统计信息 #9337   支持 Window Functions  NTILE #9682 LEAD 和 LAG #9672 PERCENT_RANK #9671 NTH_VALUE #9596 CUME_DIST #9619 FIRST_VALUE 和 LAST_VALUE #9560 RANK 和 DENSE_RANK #9500 RANGE FRAMED #9450 ROW FRAMED #9358 ROW NUMBER #9098     增加了一类统计信息，表示列和 handle 列之间顺序的相关性 #9315   SQL 执行引擎  增加内建函数  JSON_QUOTE #7832 JSON_ARRAY_APPEND #9609 JSON_MERGE_PRESERVE #8931 BENCHMARK #9252 COALESCE #9087 NAME_CONST #9261     根据查询上下文优化 Chunk 大小，降低 SQL 执行时间和集群的资源消耗 #6489   权限管理  支持 SET ROLE 和 CURRENT_ROLE #9581 支持 DROP ROLE #9616 支持 CREATE ROLE #9461   Server  新增 /debug/zip HTTP 接口，获取当前 TiDB 实例的信息 #9651 支持使用 show pump status/show drainer status 语句查看 Pump/Drainer 状态 #9456 支持使用 SQL 语句在线修改 Pump/Drainer 状态 #9789 支持给 SQL 文本加上 HASH 指纹，方便追查慢 SQL #9662 新增 log_bin 系统变量，默认：0，管理 binlog 开启状态，当前仅支持查看状态 #9343 支持通过配置文件管理发送 binlog 策略 #9864 支持通过内存表 INFORMATION_SCHEMA.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0 Beta.1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/3.0.0-beta.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/3.0.0-beta.1/</guid>
      <description>TiDB 3.0.0 Beta.1 Release Notes 发版日期：2019 年 3 月 26 日
TiDB 版本：3.0.0-beta.1
TiDB Ansible 版本：3.0.0-beta.1
Overview 2019 年 03 月 26 日，TiDB 发布 3.0.0 Beta.1 版，对应的 TiDB Ansible 版本为 3.0.0 Beta.1。相比 3.0.0 Beta 版本，该版本对系统稳定性、易用性、功能、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  支持使用 Sort Merge Join 计算笛卡尔积 #9032 支持 Skyline Pruning，用一些规则来防止执行计划过于依赖统计信息 #9337   支持 Window Functions  NTILE #9682 LEAD 和 LAG #9672 PERCENT_RANK #9671 NTH_VALUE #9596 CUME_DIST #9619 FIRST_VALUE 和 LAST_VALUE #9560 RANK 和 DENSE_RANK #9500 RANGE FRAMED #9450 ROW FRAMED #9358 ROW NUMBER #9098     增加了一类统计信息，表示列和 handle 列之间顺序的相关性 #9315   SQL 执行引擎  增加内建函数  JSON_QUOTE #7832 JSON_ARRAY_APPEND #9609 JSON_MERGE_PRESERVE #8931 BENCHMARK #9252 COALESCE #9087 NAME_CONST #9261     根据查询上下文优化 Chunk 大小，降低 SQL 执行时间和集群的资源消耗 #6489   权限管理  支持 SET ROLE 和 CURRENT_ROLE #9581 支持 DROP ROLE #9616 支持 CREATE ROLE #9461   Server  新增 /debug/zip HTTP 接口，获取当前 TiDB 实例的信息 #9651 支持使用 show pump status/show drainer status 语句查看 Pump/Drainer 状态 #9456 支持使用 SQL 语句在线修改 Pump/Drainer 状态 #9789 支持给 SQL 文本加上 HASH 指纹，方便追查慢 SQL #9662 新增 log_bin 系统变量，默认：0，管理 binlog 开启状态，当前仅支持查看状态 #9343 支持通过配置文件管理发送 binlog 策略 #9864 支持通过内存表 INFORMATION_SCHEMA.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0 Beta.1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/3.0.0-beta.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/3.0.0-beta.1/</guid>
      <description>TiDB 3.0.0 Beta.1 Release Notes 发版日期：2019 年 3 月 26 日
TiDB 版本：3.0.0-beta.1
TiDB Ansible 版本：3.0.0-beta.1
Overview 2019 年 03 月 26 日，TiDB 发布 3.0.0 Beta.1 版，对应的 TiDB Ansible 版本为 3.0.0 Beta.1。相比 3.0.0 Beta 版本，该版本对系统稳定性、易用性、功能、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  支持使用 Sort Merge Join 计算笛卡尔积 #9032 支持 Skyline Pruning，用一些规则来防止执行计划过于依赖统计信息 #9337   支持 Window Functions  NTILE #9682 LEAD 和 LAG #9672 PERCENT_RANK #9671 NTH_VALUE #9596 CUME_DIST #9619 FIRST_VALUE 和 LAST_VALUE #9560 RANK 和 DENSE_RANK #9500 RANGE FRAMED #9450 ROW FRAMED #9358 ROW NUMBER #9098     增加了一类统计信息，表示列和 handle 列之间顺序的相关性 #9315   SQL 执行引擎  增加内建函数  JSON_QUOTE #7832 JSON_ARRAY_APPEND #9609 JSON_MERGE_PRESERVE #8931 BENCHMARK #9252 COALESCE #9087 NAME_CONST #9261     根据查询上下文优化 Chunk 大小，降低 SQL 执行时间和集群的资源消耗 #6489   权限管理  支持 SET ROLE 和 CURRENT_ROLE #9581 支持 DROP ROLE #9616 支持 CREATE ROLE #9461   Server  新增 /debug/zip HTTP 接口，获取当前 TiDB 实例的信息 #9651 支持使用 show pump status/show drainer status 语句查看 Pump/Drainer 状态 #9456 支持使用 SQL 语句在线修改 Pump/Drainer 状态 #9789 支持给 SQL 文本加上 HASH 指纹，方便追查慢 SQL #9662 新增 log_bin 系统变量，默认：0，管理 binlog 开启状态，当前仅支持查看状态 #9343 支持通过配置文件管理发送 binlog 策略 #9864 支持通过内存表 INFORMATION_SCHEMA.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0 Beta.1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.0.0-beta.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.0.0-beta.1/</guid>
      <description>TiDB 3.0.0 Beta.1 Release Notes 发版日期：2019 年 3 月 26 日
TiDB 版本：3.0.0-beta.1
TiDB Ansible 版本：3.0.0-beta.1
Overview 2019 年 03 月 26 日，TiDB 发布 3.0.0 Beta.1 版，对应的 TiDB Ansible 版本为 3.0.0 Beta.1。相比 3.0.0 Beta 版本，该版本对系统稳定性、易用性、功能、优化器、统计信息以及执行引擎做了很多改进。
TiDB  SQL 优化器  支持使用 Sort Merge Join 计算笛卡尔积 #9032 支持 Skyline Pruning，用一些规则来防止执行计划过于依赖统计信息 #9337   支持 Window Functions  NTILE #9682 LEAD 和 LAG #9672 PERCENT_RANK #9671 NTH_VALUE #9596 CUME_DIST #9619 FIRST_VALUE 和 LAST_VALUE #9560 RANK 和 DENSE_RANK #9500 RANGE FRAMED #9450 ROW FRAMED #9358 ROW NUMBER #9098     增加了一类统计信息，表示列和 handle 列之间顺序的相关性 #9315   SQL 执行引擎  增加内建函数  JSON_QUOTE #7832 JSON_ARRAY_APPEND #9609 JSON_MERGE_PRESERVE #8931 BENCHMARK #9252 COALESCE #9087 NAME_CONST #9261     根据查询上下文优化 Chunk 大小，降低 SQL 执行时间和集群的资源消耗 #6489   权限管理  支持 SET ROLE 和 CURRENT_ROLE #9581 支持 DROP ROLE #9616 支持 CREATE ROLE #9461   Server  新增 /debug/zip HTTP 接口，获取当前 TiDB 实例的信息 #9651 支持使用 show pump status/show drainer status 语句查看 Pump/Drainer 状态 #9456 支持使用 SQL 语句在线修改 Pump/Drainer 状态 #9789 支持给 SQL 文本加上 HASH 指纹，方便追查慢 SQL #9662 新增 log_bin 系统变量，默认：0，管理 binlog 开启状态，当前仅支持查看状态 #9343 支持通过配置文件管理发送 binlog 策略 #9864 支持通过内存表 INFORMATION_SCHEMA.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0 Beta.1 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.0.0-beta.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.0.0-beta.1/</guid>
      <description>TiDB 3.0.0 Beta.1 Release Notes Release Date: March 26, 2019
TiDB version: 3.0.0-beta.1
TiDB Ansible version: 3.0.0-beta.1
Overview On March 26, 2019, TiDB 3.0.0 Beta.1 is released. The corresponding TiDB Ansible version is 3.0.0 Beta.1. Compared with TiDB 3.0.0 Beta, this release has greatly improved the stability, usability, features, the SQL optimizer, statistics, and the execution engine.
TiDB  SQL Optimizer  Support calculating the Cartesian product by using Sort Merge Join #9032 Support Skyline Pruning, with some rules to prevent the execution plan from relying too heavily on statistics #9337   Support Window Functions  NTILE #9682 LEAD and LAG #9672 PERCENT_RANK #9671 NTH_VALUE #9596 CUME_DIST #9619 FIRST_VALUE and LAST_VALUE #9560 RANK and DENSE_RANK #9500 RANGE FRAMED #9450 ROW FRAMED #9358 ROW NUMBER #9098     Add a type of statistic that indicates the order correlation between columns and the handle column #9315   SQL Execution Engine  Add built-in functions  JSON_QUOTE #7832 JSON_ARRAY_APPEND #9609 JSON_MERGE_PRESERVE #8931 BENCHMARK #9252 COALESCE #9087 NAME_CONST #9261     Optimize the Chunk size based on the query context, to reduce the execution time of SQL statements and resources consumption of the cluster #6489   Privilege management  Support SET ROLE and CURRENT_ROLE #9581 Support DROP ROLE #9616 Support CREATE ROLE #9461   Server  Add the /debug/zip HTTP interface to get information of the current TiDB instance #9651 Support the show pump status and show drainer status SQL statements to check the Pump or Drainer status 9456 Support modifying the Pump or Drainer status by using SQL statements #9789 Support adding HASH fingerprints to SQL text for easy tracking of slow SQL statements #9662 Add the log_bin system variable (&amp;ldquo;0&amp;rdquo; by default) to control the enabling state of binlog; only support checking the state currently #9343 Support managing the sending binlog strategy by using the configuration file #9864 Support querying the slow log by using the INFORMATION_SCHEMA.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0 Beta.1 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/3.0.0-beta.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/3.0.0-beta.1/</guid>
      <description>TiDB 3.0.0 Beta.1 Release Notes Release Date: March 26, 2019
TiDB version: 3.0.0-beta.1
TiDB Ansible version: 3.0.0-beta.1
Overview On March 26, 2019, TiDB 3.0.0 Beta.1 is released. The corresponding TiDB Ansible version is 3.0.0 Beta.1. Compared with TiDB 3.0.0 Beta, this release has greatly improved the stability, usability, features, the SQL optimizer, statistics, and the execution engine.
TiDB  SQL Optimizer  Support calculating the Cartesian product by using Sort Merge Join #9032 Support Skyline Pruning, with some rules to prevent the execution plan from relying too heavily on statistics #9337   Support Window Functions  NTILE #9682 LEAD and LAG #9672 PERCENT_RANK #9671 NTH_VALUE #9596 CUME_DIST #9619 FIRST_VALUE and LAST_VALUE #9560 RANK and DENSE_RANK #9500 RANGE FRAMED #9450 ROW FRAMED #9358 ROW NUMBER #9098     Add a type of statistic that indicates the order correlation between columns and the handle column #9315   SQL Execution Engine  Add built-in functions  JSON_QUOTE #7832 JSON_ARRAY_APPEND #9609 JSON_MERGE_PRESERVE #8931 BENCHMARK #9252 COALESCE #9087 NAME_CONST #9261     Optimize the Chunk size based on the query context, to reduce the execution time of SQL statements and resources consumption of the cluster #6489   Privilege management  Support SET ROLE and CURRENT_ROLE #9581 Support DROP ROLE #9616 Support CREATE ROLE #9461   Server  Add the /debug/zip HTTP interface to get information of the current TiDB instance #9651 Support the show pump status and show drainer status SQL statements to check the Pump or Drainer status 9456 Support modifying the Pump or Drainer status by using SQL statements #9789 Support adding HASH fingerprints to SQL text for easy tracking of slow SQL statements #9662 Add the log_bin system variable (&amp;ldquo;0&amp;rdquo; by default) to control the enabling state of binlog; only support checking the state currently #9343 Support managing the sending binlog strategy by using the configuration file #9864 Support querying the slow log by using the INFORMATION_SCHEMA.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0 Beta.1 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/3.0.0-beta.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/3.0.0-beta.1/</guid>
      <description>TiDB 3.0.0 Beta.1 Release Notes Release Date: March 26, 2019
TiDB version: 3.0.0-beta.1
TiDB Ansible version: 3.0.0-beta.1
Overview On March 26, 2019, TiDB 3.0.0 Beta.1 is released. The corresponding TiDB Ansible version is 3.0.0 Beta.1. Compared with TiDB 3.0.0 Beta, this release has greatly improved the stability, usability, features, the SQL optimizer, statistics, and the execution engine.
TiDB  SQL Optimizer  Support calculating the Cartesian product by using Sort Merge Join #9032 Support Skyline Pruning, with some rules to prevent the execution plan from relying too heavily on statistics #9337   Support Window Functions  NTILE #9682 LEAD and LAG #9672 PERCENT_RANK #9671 NTH_VALUE #9596 CUME_DIST #9619 FIRST_VALUE and LAST_VALUE #9560 RANK and DENSE_RANK #9500 RANGE FRAMED #9450 ROW FRAMED #9358 ROW NUMBER #9098     Add a type of statistic that indicates the order correlation between columns and the handle column #9315   SQL Execution Engine  Add built-in functions  JSON_QUOTE #7832 JSON_ARRAY_APPEND #9609 JSON_MERGE_PRESERVE #8931 BENCHMARK #9252 COALESCE #9087 NAME_CONST #9261     Optimize the Chunk size based on the query context, to reduce the execution time of SQL statements and resources consumption of the cluster #6489   Privilege management  Support SET ROLE and CURRENT_ROLE #9581 Support DROP ROLE #9616 Support CREATE ROLE #9461   Server  Add the /debug/zip HTTP interface to get information of the current TiDB instance #9651 Support the show pump status and show drainer status SQL statements to check the Pump or Drainer status 9456 Support modifying the Pump or Drainer status by using SQL statements #9789 Support adding HASH fingerprints to SQL text for easy tracking of slow SQL statements #9662 Add the log_bin system variable (&amp;ldquo;0&amp;rdquo; by default) to control the enabling state of binlog; only support checking the state currently #9343 Support managing the sending binlog strategy by using the configuration file #9864 Support querying the slow log by using the INFORMATION_SCHEMA.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0 Beta.1 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.0.0-beta.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.0.0-beta.1/</guid>
      <description>TiDB 3.0.0 Beta.1 Release Notes Release Date: March 26, 2019
TiDB version: 3.0.0-beta.1
TiDB Ansible version: 3.0.0-beta.1
Overview On March 26, 2019, TiDB 3.0.0 Beta.1 is released. The corresponding TiDB Ansible version is 3.0.0 Beta.1. Compared with TiDB 3.0.0 Beta, this release has greatly improved the stability, usability, features, the SQL optimizer, statistics, and the execution engine.
TiDB  SQL Optimizer  Support calculating the Cartesian product by using Sort Merge Join #9032 Support Skyline Pruning, with some rules to prevent the execution plan from relying too heavily on statistics #9337   Support Window Functions  NTILE #9682 LEAD and LAG #9672 PERCENT_RANK #9671 NTH_VALUE #9596 CUME_DIST #9619 FIRST_VALUE and LAST_VALUE #9560 RANK and DENSE_RANK #9500 RANGE FRAMED #9450 ROW FRAMED #9358 ROW NUMBER #9098     Add a type of statistic that indicates the order correlation between columns and the handle column #9315   SQL Execution Engine  Add built-in functions  JSON_QUOTE #7832 JSON_ARRAY_APPEND #9609 JSON_MERGE_PRESERVE #8931 BENCHMARK #9252 COALESCE #9087 NAME_CONST #9261     Optimize the Chunk size based on the query context, to reduce the execution time of SQL statements and resources consumption of the cluster #6489   Privilege management  Support SET ROLE and CURRENT_ROLE #9581 Support DROP ROLE #9616 Support CREATE ROLE #9461   Server  Add the /debug/zip HTTP interface to get information of the current TiDB instance #9651 Support the show pump status and show drainer status SQL statements to check the Pump or Drainer status 9456 Support modifying the Pump or Drainer status by using SQL statements #9789 Support adding HASH fingerprints to SQL text for easy tracking of slow SQL statements #9662 Add the log_bin system variable (&amp;ldquo;0&amp;rdquo; by default) to control the enabling state of binlog; only support checking the state currently #9343 Support managing the sending binlog strategy by using the configuration file #9864 Support querying the slow log by using the INFORMATION_SCHEMA.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.0.0-rc.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.0.0-rc.1/</guid>
      <description>TiDB 3.0.0-rc.1 Release Notes 发版日期：2019 年 5 月 10 日
TiDB 版本：3.0.0-rc.1
TiDB Ansible 版本：3.0.0-rc.1
Overview 2019 年 5 月 10 日，TiDB 发布 3.0.0-rc.1 版，对应的 TiDB Ansible 版本为 3.0.0-rc.1。相比 3.0.0-beta.1 版本，该版本对系统稳定性、易用性、功能、优化器、统计信息以及执行引擎做了很多改进。
TiDB   SQL 优化器
 利用列之间的顺序相关性提升代价估算准确度，并提供启发式参数 tidb_opt_correlation_exp_factor 用于控制在相关性无法被直接用于估算的场景下对索引扫描的偏好程度。#9839 当过滤条件中包含相关列时，在抽取复合索引的访问条件时尽可能多地匹配索引的前缀列。#10053 用动态规划决定连接的执行顺序，当参与连接的表数量不多于 tidb_opt_join_reorder_threshold 时启用。#8816 在构造 Index Join 的的内表中，以复合索引作为访问条件时，尽可能多地匹配索引的前缀列。#8471 提升对单列索引上值为 NULL 的行数估算准确度。#9474 在逻辑优化阶段消除聚合函数时特殊处理 GROUP_CONCAT ，防止产生错误的执行结果。#9967 当过滤条件为常量时，正确地将它下推到连接算子的子节点上。#9848 在逻辑优化阶段列剪裁时特殊处理一些函数，例如 RAND() ，防止产生和 MySQL 不兼容的执行结果。#10064 支持 FAST ANALYZE，通过tidb_enable_fast_analyze 变量控制。该特性通过用对 Region 进行采样取代扫描整个 region 的方式加速统计信息收集。#10258 支持 SQL PLAN MANAGEMENT。该特性通过对 SQL 进行执行计划绑定，以确保执行稳定性。该特性目前处于测试阶段，仅支持对 SELECT 语句使用绑定的执行计划，不建议在生产场景中直接使用。#10284    执行引擎</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/3.0.0-rc.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/3.0.0-rc.1/</guid>
      <description>TiDB 3.0.0-rc.1 Release Notes 发版日期：2019 年 5 月 10 日
TiDB 版本：3.0.0-rc.1
TiDB Ansible 版本：3.0.0-rc.1
Overview 2019 年 5 月 10 日，TiDB 发布 3.0.0-rc.1 版，对应的 TiDB Ansible 版本为 3.0.0-rc.1。相比 3.0.0-beta.1 版本，该版本对系统稳定性、易用性、功能、优化器、统计信息以及执行引擎做了很多改进。
TiDB   SQL 优化器
 利用列之间的顺序相关性提升代价估算准确度，并提供启发式参数 tidb_opt_correlation_exp_factor 用于控制在相关性无法被直接用于估算的场景下对索引扫描的偏好程度。#9839 当过滤条件中包含相关列时，在抽取复合索引的访问条件时尽可能多地匹配索引的前缀列。#10053 用动态规划决定连接的执行顺序，当参与连接的表数量不多于 tidb_opt_join_reorder_threshold 时启用。#8816 在构造 Index Join 的的内表中，以复合索引作为访问条件时，尽可能多地匹配索引的前缀列。#8471 提升对单列索引上值为 NULL 的行数估算准确度。#9474 在逻辑优化阶段消除聚合函数时特殊处理 GROUP_CONCAT ，防止产生错误的执行结果。#9967 当过滤条件为常量时，正确地将它下推到连接算子的子节点上。#9848 在逻辑优化阶段列剪裁时特殊处理一些函数，例如 RAND() ，防止产生和 MySQL 不兼容的执行结果。#10064 支持 FAST ANALYZE，通过tidb_enable_fast_analyze 变量控制。该特性通过用对 Region 进行采样取代扫描整个 region 的方式加速统计信息收集。#10258 支持 SQL PLAN MANAGEMENT。该特性通过对 SQL 进行执行计划绑定，以确保执行稳定性。该特性目前处于测试阶段，仅支持对 SELECT 语句使用绑定的执行计划，不建议在生产场景中直接使用。#10284    执行引擎</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/3.0.0-rc.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/3.0.0-rc.1/</guid>
      <description>TiDB 3.0.0-rc.1 Release Notes 发版日期：2019 年 5 月 10 日
TiDB 版本：3.0.0-rc.1
TiDB Ansible 版本：3.0.0-rc.1
Overview 2019 年 5 月 10 日，TiDB 发布 3.0.0-rc.1 版，对应的 TiDB Ansible 版本为 3.0.0-rc.1。相比 3.0.0-beta.1 版本，该版本对系统稳定性、易用性、功能、优化器、统计信息以及执行引擎做了很多改进。
TiDB   SQL 优化器
 利用列之间的顺序相关性提升代价估算准确度，并提供启发式参数 tidb_opt_correlation_exp_factor 用于控制在相关性无法被直接用于估算的场景下对索引扫描的偏好程度。#9839 当过滤条件中包含相关列时，在抽取复合索引的访问条件时尽可能多地匹配索引的前缀列。#10053 用动态规划决定连接的执行顺序，当参与连接的表数量不多于 tidb_opt_join_reorder_threshold 时启用。#8816 在构造 Index Join 的的内表中，以复合索引作为访问条件时，尽可能多地匹配索引的前缀列。#8471 提升对单列索引上值为 NULL 的行数估算准确度。#9474 在逻辑优化阶段消除聚合函数时特殊处理 GROUP_CONCAT ，防止产生错误的执行结果。#9967 当过滤条件为常量时，正确地将它下推到连接算子的子节点上。#9848 在逻辑优化阶段列剪裁时特殊处理一些函数，例如 RAND() ，防止产生和 MySQL 不兼容的执行结果。#10064 支持 FAST ANALYZE，通过tidb_enable_fast_analyze 变量控制。该特性通过用对 Region 进行采样取代扫描整个 region 的方式加速统计信息收集。#10258 支持 SQL PLAN MANAGEMENT。该特性通过对 SQL 进行执行计划绑定，以确保执行稳定性。该特性目前处于测试阶段，仅支持对 SELECT 语句使用绑定的执行计划，不建议在生产场景中直接使用。#10284    执行引擎</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.0.0-rc.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.0.0-rc.1/</guid>
      <description>TiDB 3.0.0-rc.1 Release Notes 发版日期：2019 年 5 月 10 日
TiDB 版本：3.0.0-rc.1
TiDB Ansible 版本：3.0.0-rc.1
Overview 2019 年 5 月 10 日，TiDB 发布 3.0.0-rc.1 版，对应的 TiDB Ansible 版本为 3.0.0-rc.1。相比 3.0.0-beta.1 版本，该版本对系统稳定性、易用性、功能、优化器、统计信息以及执行引擎做了很多改进。
TiDB   SQL 优化器
 利用列之间的顺序相关性提升代价估算准确度，并提供启发式参数 tidb_opt_correlation_exp_factor 用于控制在相关性无法被直接用于估算的场景下对索引扫描的偏好程度。#9839 当过滤条件中包含相关列时，在抽取复合索引的访问条件时尽可能多地匹配索引的前缀列。#10053 用动态规划决定连接的执行顺序，当参与连接的表数量不多于 tidb_opt_join_reorder_threshold 时启用。#8816 在构造 Index Join 的的内表中，以复合索引作为访问条件时，尽可能多地匹配索引的前缀列。#8471 提升对单列索引上值为 NULL 的行数估算准确度。#9474 在逻辑优化阶段消除聚合函数时特殊处理 GROUP_CONCAT ，防止产生错误的执行结果。#9967 当过滤条件为常量时，正确地将它下推到连接算子的子节点上。#9848 在逻辑优化阶段列剪裁时特殊处理一些函数，例如 RAND() ，防止产生和 MySQL 不兼容的执行结果。#10064 支持 FAST ANALYZE，通过tidb_enable_fast_analyze 变量控制。该特性通过用对 Region 进行采样取代扫描整个 region 的方式加速统计信息收集。#10258 支持 SQL PLAN MANAGEMENT。该特性通过对 SQL 进行执行计划绑定，以确保执行稳定性。该特性目前处于测试阶段，仅支持对 SELECT 语句使用绑定的执行计划，不建议在生产场景中直接使用。#10284    执行引擎</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.1 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.0.0-rc.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.0.0-rc.1/</guid>
      <description>TiDB 3.0.0-rc.1 Release Notes Release Date: May 10, 2019
TiDB version: 3.0.0-rc.1
TiDB Ansible version: 3.0.0-rc.1
Overview On May 10, 2019, TiDB 3.0.0-rc.1 is released. The corresponding TiDB Ansible version is 3.0.0-rc.1. Compared with TiDB 3.0.0-beta.1, this release has greatly improved the stability, usability, features, the SQL optimizer, statistics, and the execution engine.
TiDB   SQL Optimizer
 Improve the accuracy of cost estimates by using order correlation between columns; introduce a heuristic parameter tidb_opt_correlation_exp_factor to control the preference for index scans for scenarios when correlation cannot be directly used for estimation.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.1 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/3.0.0-rc.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/3.0.0-rc.1/</guid>
      <description>TiDB 3.0.0-rc.1 Release Notes Release Date: May 10, 2019
TiDB version: 3.0.0-rc.1
TiDB Ansible version: 3.0.0-rc.1
Overview On May 10, 2019, TiDB 3.0.0-rc.1 is released. The corresponding TiDB Ansible version is 3.0.0-rc.1. Compared with TiDB 3.0.0-beta.1, this release has greatly improved the stability, usability, features, the SQL optimizer, statistics, and the execution engine.
TiDB   SQL Optimizer
 Improve the accuracy of cost estimates by using order correlation between columns; introduce a heuristic parameter tidb_opt_correlation_exp_factor to control the preference for index scans for scenarios when correlation cannot be directly used for estimation.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.1 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/3.0.0-rc.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/3.0.0-rc.1/</guid>
      <description>TiDB 3.0.0-rc.1 Release Notes Release Date: May 10, 2019
TiDB version: 3.0.0-rc.1
TiDB Ansible version: 3.0.0-rc.1
Overview On May 10, 2019, TiDB 3.0.0-rc.1 is released. The corresponding TiDB Ansible version is 3.0.0-rc.1. Compared with TiDB 3.0.0-beta.1, this release has greatly improved the stability, usability, features, the SQL optimizer, statistics, and the execution engine.
TiDB   SQL Optimizer
 Improve the accuracy of cost estimates by using order correlation between columns; introduce a heuristic parameter tidb_opt_correlation_exp_factor to control the preference for index scans for scenarios when correlation cannot be directly used for estimation.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.1 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.0.0-rc.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.0.0-rc.1/</guid>
      <description>TiDB 3.0.0-rc.1 Release Notes Release Date: May 10, 2019
TiDB version: 3.0.0-rc.1
TiDB Ansible version: 3.0.0-rc.1
Overview On May 10, 2019, TiDB 3.0.0-rc.1 is released. The corresponding TiDB Ansible version is 3.0.0-rc.1. Compared with TiDB 3.0.0-beta.1, this release has greatly improved the stability, usability, features, the SQL optimizer, statistics, and the execution engine.
TiDB   SQL Optimizer
 Improve the accuracy of cost estimates by using order correlation between columns; introduce a heuristic parameter tidb_opt_correlation_exp_factor to control the preference for index scans for scenarios when correlation cannot be directly used for estimation.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.0.0-rc.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.0.0-rc.2/</guid>
      <description>TiDB 3.0.0-rc.2 Release Notes 发版日期：2019 年 5 月 28 日
TiDB 版本：3.0.0-rc.2
TiDB Ansible 版本：3.0.0-rc.2
Overview 2019 年 5 月 28 日，TiDB 发布 3.0.0-rc.2 版本，对应的 TiDB Ansible 版本为 3.0.0-rc.2。相比 3.0.0-rc.1 版本，该版本对系统稳定性、易用性、功能、优化器、统计信息以及执行引擎做了很多改进。
TiDB   SQL 优化器
 在更多的场景中支持 Index Join #10540 支持导出历史统计信息 #10291 支持对单调递增的索引列增量 Analyze #10355 忽略 Order By 子句中的 NULL 值 #10488 修复精简列信息时逻辑算子 UnionAll 的 Schema 信息的计算不正确的问题 #10384 下推 Not 操作符时避免修改原表达式 #10363 支持导入导出列的关联性信息 #10573    执行引擎
 有唯一索引的虚拟生成列可以在 replace on duplicate key update/insert on duplicate key update 语句中被正确地处理 #10370 修复 CHAR 列上的扫描范围计算 #10124 修复 PointGet 处理负数不正确问题 #10113 合并具有相同窗口名的窗口函数，提高执行效率 #9866 窗口函数中 Range Frame 可以无需 Order By 子句 #10496    Server</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/3.0.0-rc.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/3.0.0-rc.2/</guid>
      <description>TiDB 3.0.0-rc.2 Release Notes 发版日期：2019 年 5 月 28 日
TiDB 版本：3.0.0-rc.2
TiDB Ansible 版本：3.0.0-rc.2
Overview 2019 年 5 月 28 日，TiDB 发布 3.0.0-rc.2 版本，对应的 TiDB Ansible 版本为 3.0.0-rc.2。相比 3.0.0-rc.1 版本，该版本对系统稳定性、易用性、功能、优化器、统计信息以及执行引擎做了很多改进。
TiDB   SQL 优化器
 在更多的场景中支持 Index Join #10540 支持导出历史统计信息 #10291 支持对单调递增的索引列增量 Analyze #10355 忽略 Order By 子句中的 NULL 值 #10488 修复精简列信息时逻辑算子 UnionAll 的 Schema 信息的计算不正确的问题 #10384 下推 Not 操作符时避免修改原表达式 #10363 支持导入导出列的关联性信息 #10573    执行引擎
 有唯一索引的虚拟生成列可以在 replace on duplicate key update/insert on duplicate key update 语句中被正确地处理 #10370 修复 CHAR 列上的扫描范围计算 #10124 修复 PointGet 处理负数不正确问题 #10113 合并具有相同窗口名的窗口函数，提高执行效率 #9866 窗口函数中 Range Frame 可以无需 Order By 子句 #10496    Server</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/3.0.0-rc.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/3.0.0-rc.2/</guid>
      <description>TiDB 3.0.0-rc.2 Release Notes 发版日期：2019 年 5 月 28 日
TiDB 版本：3.0.0-rc.2
TiDB Ansible 版本：3.0.0-rc.2
Overview 2019 年 5 月 28 日，TiDB 发布 3.0.0-rc.2 版本，对应的 TiDB Ansible 版本为 3.0.0-rc.2。相比 3.0.0-rc.1 版本，该版本对系统稳定性、易用性、功能、优化器、统计信息以及执行引擎做了很多改进。
TiDB   SQL 优化器
 在更多的场景中支持 Index Join #10540 支持导出历史统计信息 #10291 支持对单调递增的索引列增量 Analyze #10355 忽略 Order By 子句中的 NULL 值 #10488 修复精简列信息时逻辑算子 UnionAll 的 Schema 信息的计算不正确的问题 #10384 下推 Not 操作符时避免修改原表达式 #10363 支持导入导出列的关联性信息 #10573    执行引擎
 有唯一索引的虚拟生成列可以在 replace on duplicate key update/insert on duplicate key update 语句中被正确地处理 #10370 修复 CHAR 列上的扫描范围计算 #10124 修复 PointGet 处理负数不正确问题 #10113 合并具有相同窗口名的窗口函数，提高执行效率 #9866 窗口函数中 Range Frame 可以无需 Order By 子句 #10496    Server</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.0.0-rc.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.0.0-rc.2/</guid>
      <description>TiDB 3.0.0-rc.2 Release Notes 发版日期：2019 年 5 月 28 日
TiDB 版本：3.0.0-rc.2
TiDB Ansible 版本：3.0.0-rc.2
Overview 2019 年 5 月 28 日，TiDB 发布 3.0.0-rc.2 版本，对应的 TiDB Ansible 版本为 3.0.0-rc.2。相比 3.0.0-rc.1 版本，该版本对系统稳定性、易用性、功能、优化器、统计信息以及执行引擎做了很多改进。
TiDB   SQL 优化器
 在更多的场景中支持 Index Join #10540 支持导出历史统计信息 #10291 支持对单调递增的索引列增量 Analyze #10355 忽略 Order By 子句中的 NULL 值 #10488 修复精简列信息时逻辑算子 UnionAll 的 Schema 信息的计算不正确的问题 #10384 下推 Not 操作符时避免修改原表达式 #10363 支持导入导出列的关联性信息 #10573    执行引擎
 有唯一索引的虚拟生成列可以在 replace on duplicate key update/insert on duplicate key update 语句中被正确地处理 #10370 修复 CHAR 列上的扫描范围计算 #10124 修复 PointGet 处理负数不正确问题 #10113 合并具有相同窗口名的窗口函数，提高执行效率 #9866 窗口函数中 Range Frame 可以无需 Order By 子句 #10496    Server</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.2 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.0.0-rc.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.0.0-rc.2/</guid>
      <description>TiDB 3.0.0-rc.2 Release Notes Release date: May 28, 2019
TiDB version: 3.0.0-rc.2
TiDB Ansible version: 3.0.0-rc.2
Overview On May 28, 2019, TiDB 3.0.0-rc.2 is released. The corresponding TiDB Ansible version is 3.0.0-rc.2. Compared with TiDB 3.0.0-rc.1, this release has greatly improved the stability, usability, features, the SQL optimizer, statistics, and the execution engine.
TiDB   SQL Optimizer
 Support Index Join in more scenarios #10540 Support exporting historical statistics #10291 Support the incremental Analyze operation on monotonically increasing index columns #10355 Neglect the NULL value in the Order By clause #10488 Fix the wrong schema information calculation of the UnionAll logical operator when simplifying the column information #10384 Avoid modifying the original expression when pushing down the Not operator #10363 Support the dump/load correlation of histograms #10573    Execution Engine</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.2 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/3.0.0-rc.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/3.0.0-rc.2/</guid>
      <description>TiDB 3.0.0-rc.2 Release Notes Release date: May 28, 2019
TiDB version: 3.0.0-rc.2
TiDB Ansible version: 3.0.0-rc.2
Overview On May 28, 2019, TiDB 3.0.0-rc.2 is released. The corresponding TiDB Ansible version is 3.0.0-rc.2. Compared with TiDB 3.0.0-rc.1, this release has greatly improved the stability, usability, features, the SQL optimizer, statistics, and the execution engine.
TiDB   SQL Optimizer
 Support Index Join in more scenarios #10540 Support exporting historical statistics #10291 Support the incremental Analyze operation on monotonically increasing index columns #10355 Neglect the NULL value in the Order By clause #10488 Fix the wrong schema information calculation of the UnionAll logical operator when simplifying the column information #10384 Avoid modifying the original expression when pushing down the Not operator #10363 Support the dump/load correlation of histograms #10573    Execution Engine</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.2 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/3.0.0-rc.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/3.0.0-rc.2/</guid>
      <description>TiDB 3.0.0-rc.2 Release Notes Release date: May 28, 2019
TiDB version: 3.0.0-rc.2
TiDB Ansible version: 3.0.0-rc.2
Overview On May 28, 2019, TiDB 3.0.0-rc.2 is released. The corresponding TiDB Ansible version is 3.0.0-rc.2. Compared with TiDB 3.0.0-rc.1, this release has greatly improved the stability, usability, features, the SQL optimizer, statistics, and the execution engine.
TiDB   SQL Optimizer
 Support Index Join in more scenarios #10540 Support exporting historical statistics #10291 Support the incremental Analyze operation on monotonically increasing index columns #10355 Neglect the NULL value in the Order By clause #10488 Fix the wrong schema information calculation of the UnionAll logical operator when simplifying the column information #10384 Avoid modifying the original expression when pushing down the Not operator #10363 Support the dump/load correlation of histograms #10573    Execution Engine</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.2 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.0.0-rc.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.0.0-rc.2/</guid>
      <description>TiDB 3.0.0-rc.2 Release Notes Release date: May 28, 2019
TiDB version: 3.0.0-rc.2
TiDB Ansible version: 3.0.0-rc.2
Overview On May 28, 2019, TiDB 3.0.0-rc.2 is released. The corresponding TiDB Ansible version is 3.0.0-rc.2. Compared with TiDB 3.0.0-rc.1, this release has greatly improved the stability, usability, features, the SQL optimizer, statistics, and the execution engine.
TiDB   SQL Optimizer
 Support Index Join in more scenarios #10540 Support exporting historical statistics #10291 Support the incremental Analyze operation on monotonically increasing index columns #10355 Neglect the NULL value in the Order By clause #10488 Fix the wrong schema information calculation of the UnionAll logical operator when simplifying the column information #10384 Avoid modifying the original expression when pushing down the Not operator #10363 Support the dump/load correlation of histograms #10573    Execution Engine</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.0.0-rc.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.0.0-rc.3/</guid>
      <description>TiDB 3.0.0-rc.3 Release Notes 发版日期：2019 年 6 月 21 日
TiDB 版本：3.0.0-rc.3
TiDB Ansible 版本：3.0.0-rc.3
Overview 2019 年 6 月 21 日，TiDB 发布 3.0.0-rc.3 版本，对应的 TiDB Ansible 版本为 3.0.0-rc.3。相比 3.0.0-rc.2 版本，该版本对系统稳定性、易用性、功能、优化器、统计信息以及执行引擎做了很多改进。
TiDB   SQL 优化器
 删除收集虚拟生成列的统计信息功能 #10629 修复点查时主键常量溢出的问题 #10699 修复 fast analyze 因使用未初始化的信息导致 panic #10691 修复 prepare create view 语句执行过程中因列信息错误导致执行失败的问题 #10713 修复在处理 window function 时列信息未拷贝的问题 #10720 修复 index join 中内表过滤条件在某些情况下的选择率估计错误的问题 #10854 新增变量 stats-lease 值为 0 时系统自动加载统计数据功能 #10811    执行引擎</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/3.0.0-rc.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/3.0.0-rc.3/</guid>
      <description>TiDB 3.0.0-rc.3 Release Notes 发版日期：2019 年 6 月 21 日
TiDB 版本：3.0.0-rc.3
TiDB Ansible 版本：3.0.0-rc.3
Overview 2019 年 6 月 21 日，TiDB 发布 3.0.0-rc.3 版本，对应的 TiDB Ansible 版本为 3.0.0-rc.3。相比 3.0.0-rc.2 版本，该版本对系统稳定性、易用性、功能、优化器、统计信息以及执行引擎做了很多改进。
TiDB   SQL 优化器
 删除收集虚拟生成列的统计信息功能 #10629 修复点查时主键常量溢出的问题 #10699 修复 fast analyze 因使用未初始化的信息导致 panic #10691 修复 prepare create view 语句执行过程中因列信息错误导致执行失败的问题 #10713 修复在处理 window function 时列信息未拷贝的问题 #10720 修复 index join 中内表过滤条件在某些情况下的选择率估计错误的问题 #10854 新增变量 stats-lease 值为 0 时系统自动加载统计数据功能 #10811    执行引擎</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/3.0.0-rc.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/3.0.0-rc.3/</guid>
      <description>TiDB 3.0.0-rc.3 Release Notes 发版日期：2019 年 6 月 21 日
TiDB 版本：3.0.0-rc.3
TiDB Ansible 版本：3.0.0-rc.3
Overview 2019 年 6 月 21 日，TiDB 发布 3.0.0-rc.3 版本，对应的 TiDB Ansible 版本为 3.0.0-rc.3。相比 3.0.0-rc.2 版本，该版本对系统稳定性、易用性、功能、优化器、统计信息以及执行引擎做了很多改进。
TiDB   SQL 优化器
 删除收集虚拟生成列的统计信息功能 #10629 修复点查时主键常量溢出的问题 #10699 修复 fast analyze 因使用未初始化的信息导致 panic #10691 修复 prepare create view 语句执行过程中因列信息错误导致执行失败的问题 #10713 修复在处理 window function 时列信息未拷贝的问题 #10720 修复 index join 中内表过滤条件在某些情况下的选择率估计错误的问题 #10854 新增变量 stats-lease 值为 0 时系统自动加载统计数据功能 #10811    执行引擎</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.0.0-rc.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.0.0-rc.3/</guid>
      <description>TiDB 3.0.0-rc.3 Release Notes 发版日期：2019 年 6 月 21 日
TiDB 版本：3.0.0-rc.3
TiDB Ansible 版本：3.0.0-rc.3
Overview 2019 年 6 月 21 日，TiDB 发布 3.0.0-rc.3 版本，对应的 TiDB Ansible 版本为 3.0.0-rc.3。相比 3.0.0-rc.2 版本，该版本对系统稳定性、易用性、功能、优化器、统计信息以及执行引擎做了很多改进。
TiDB   SQL 优化器
 删除收集虚拟生成列的统计信息功能 #10629 修复点查时主键常量溢出的问题 #10699 修复 fast analyze 因使用未初始化的信息导致 panic #10691 修复 prepare create view 语句执行过程中因列信息错误导致执行失败的问题 #10713 修复在处理 window function 时列信息未拷贝的问题 #10720 修复 index join 中内表过滤条件在某些情况下的选择率估计错误的问题 #10854 新增变量 stats-lease 值为 0 时系统自动加载统计数据功能 #10811    执行引擎</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.3 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.0.0-rc.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.0.0-rc.3/</guid>
      <description>TiDB 3.0.0-rc.3 Release Notes Release date: June 21, 2019
TiDB version: 3.0.0-rc.3
TiDB Ansible version: 3.0.0-rc.3
Overview On June 21, 2019, TiDB 3.0.0-rc.3 is released. The corresponding TiDB Ansible version is 3.0.0-rc.3. Compared with TiDB 3.0.0-rc.2, this release has greatly improved the stability, usability, features, the SQL optimizer, statistics, and the execution engine.
TiDB   SQL Optimizer
 Remove the feature of collecting virtual generated column statistics #10629 Fix the issue that the primary key constant overflows during point queries #10699 Fix the issue that using uninitialized information in fast analyze causes panic #10691 Fix the issue that executing the create view statement using prepare causes panic because of wrong column information #10713 Fix the issue that the column information is not cloned when handling window functions #10720 Fix the wrong estimation for the selectivity rate of the inner table selection in index join #10854 Support automatic loading statistics when the stats-lease variable value is 0 #10811    Execution Engine</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.3 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/3.0.0-rc.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/3.0.0-rc.3/</guid>
      <description>TiDB 3.0.0-rc.3 Release Notes Release date: June 21, 2019
TiDB version: 3.0.0-rc.3
TiDB Ansible version: 3.0.0-rc.3
Overview On June 21, 2019, TiDB 3.0.0-rc.3 is released. The corresponding TiDB Ansible version is 3.0.0-rc.3. Compared with TiDB 3.0.0-rc.2, this release has greatly improved the stability, usability, features, the SQL optimizer, statistics, and the execution engine.
TiDB   SQL Optimizer
 Remove the feature of collecting virtual generated column statistics #10629 Fix the issue that the primary key constant overflows during point queries #10699 Fix the issue that using uninitialized information in fast analyze causes panic #10691 Fix the issue that executing the create view statement using prepare causes panic because of wrong column information #10713 Fix the issue that the column information is not cloned when handling window functions #10720 Fix the wrong estimation for the selectivity rate of the inner table selection in index join #10854 Support automatic loading statistics when the stats-lease variable value is 0 #10811    Execution Engine</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.3 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/3.0.0-rc.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/3.0.0-rc.3/</guid>
      <description>TiDB 3.0.0-rc.3 Release Notes Release date: June 21, 2019
TiDB version: 3.0.0-rc.3
TiDB Ansible version: 3.0.0-rc.3
Overview On June 21, 2019, TiDB 3.0.0-rc.3 is released. The corresponding TiDB Ansible version is 3.0.0-rc.3. Compared with TiDB 3.0.0-rc.2, this release has greatly improved the stability, usability, features, the SQL optimizer, statistics, and the execution engine.
TiDB   SQL Optimizer
 Remove the feature of collecting virtual generated column statistics #10629 Fix the issue that the primary key constant overflows during point queries #10699 Fix the issue that using uninitialized information in fast analyze causes panic #10691 Fix the issue that executing the create view statement using prepare causes panic because of wrong column information #10713 Fix the issue that the column information is not cloned when handling window functions #10720 Fix the wrong estimation for the selectivity rate of the inner table selection in index join #10854 Support automatic loading statistics when the stats-lease variable value is 0 #10811    Execution Engine</description>
    </item>
    
    <item>
      <title>TiDB 3.0.0-rc.3 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.0.0-rc.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.0.0-rc.3/</guid>
      <description>TiDB 3.0.0-rc.3 Release Notes Release date: June 21, 2019
TiDB version: 3.0.0-rc.3
TiDB Ansible version: 3.0.0-rc.3
Overview On June 21, 2019, TiDB 3.0.0-rc.3 is released. The corresponding TiDB Ansible version is 3.0.0-rc.3. Compared with TiDB 3.0.0-rc.2, this release has greatly improved the stability, usability, features, the SQL optimizer, statistics, and the execution engine.
TiDB   SQL Optimizer
 Remove the feature of collecting virtual generated column statistics #10629 Fix the issue that the primary key constant overflows during point queries #10699 Fix the issue that using uninitialized information in fast analyze causes panic #10691 Fix the issue that executing the create view statement using prepare causes panic because of wrong column information #10713 Fix the issue that the column information is not cloned when handling window functions #10720 Fix the wrong estimation for the selectivity rate of the inner table selection in index join #10854 Support automatic loading statistics when the stats-lease variable value is 0 #10811    Execution Engine</description>
    </item>
    
    <item>
      <title>TiDB 3.0.1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.0.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.0.1/</guid>
      <description>TiDB 3.0.1 Release Notes 发版日期：2019 年 7 月 16 日
TiDB 版本：3.0.1
TiDB Ansible 版本：3.0.1
TiDB  新增对 MAX_EXECUTION_TIME 特性的支持 #11026 新增 tidb_wait_split_region_finish_backoff Session 变量，用于控制 Region 打散的 Backoff 时间 #11166 新增根据负载情况自动调整 Auto ID 分配的步长功能，步长自动调整范围最小 1000，最大 2000000 #11006 新增 ADMIN PLUGINS ENABLE/ADMIN PLUGINS DISABLE SQL 语句，管理 Plugin 的动态开启或关闭 #11157 Audit Plugin 新增审记连接功能 #11013 修改 Region 打散时的默认行为为等待 PD 调度完成 #11166 禁止 Window Function 在 Prepare Plan Cache 中被缓存，避免某些情况下出现结果不正确的问题 #11048 禁止使用 Alter 语句修改 Stored Generated Column 的定义 #11068 禁止将 Virtual Generated Column 更改为 Stored Generated Column #11068 禁止改变带有索引的 Generated Column 的表达式 #11068 支持 TiDB 在 ARM64 架构下的编译 #11150 支持修改 Database/Table 的 Collate，条件限制为 Database/Table 字符集必须是 UTF8/UTF8MB4 #11086 修复 UPDATE … SELECT 语句中，SELECT 子查询没有解析到 UPDATE 表达式中的列而被误裁剪，导致报错的问题 #11252 修复点查时，某列被查询多次而且结果为 NULL 时会 Panic 的问题 #11226 修复 RAND 函数由于非线程安全的 rand.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/3.0.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/3.0.1/</guid>
      <description>TiDB 3.0.1 Release Notes 发版日期：2019 年 7 月 16 日
TiDB 版本：3.0.1
TiDB Ansible 版本：3.0.1
TiDB  新增对 MAX_EXECUTION_TIME 特性的支持 #11026 新增 tidb_wait_split_region_finish_backoff Session 变量，用于控制 Region 打散的 Backoff 时间 #11166 新增根据负载情况自动调整 Auto ID 分配的步长功能，步长自动调整范围最小 1000，最大 2000000 #11006 新增 ADMIN PLUGINS ENABLE/ADMIN PLUGINS DISABLE SQL 语句，管理 Plugin 的动态开启或关闭 #11157 Audit Plugin 新增审记连接功能 #11013 修改 Region 打散时的默认行为为等待 PD 调度完成 #11166 禁止 Window Function 在 Prepare Plan Cache 中被缓存，避免某些情况下出现结果不正确的问题 #11048 禁止使用 Alter 语句修改 Stored Generated Column 的定义 #11068 禁止将 Virtual Generated Column 更改为 Stored Generated Column #11068 禁止改变带有索引的 Generated Column 的表达式 #11068 支持 TiDB 在 ARM64 架构下的编译 #11150 支持修改 Database/Table 的 Collate，条件限制为 Database/Table 字符集必须是 UTF8/UTF8MB4 #11086 修复 UPDATE … SELECT 语句中，SELECT 子查询没有解析到 UPDATE 表达式中的列而被误裁剪，导致报错的问题 #11252 修复点查时，某列被查询多次而且结果为 NULL 时会 Panic 的问题 #11226 修复 RAND 函数由于非线程安全的 rand.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/3.0.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/3.0.1/</guid>
      <description>TiDB 3.0.1 Release Notes 发版日期：2019 年 7 月 16 日
TiDB 版本：3.0.1
TiDB Ansible 版本：3.0.1
TiDB  新增对 MAX_EXECUTION_TIME 特性的支持 #11026 新增 tidb_wait_split_region_finish_backoff Session 变量，用于控制 Region 打散的 Backoff 时间 #11166 新增根据负载情况自动调整 Auto ID 分配的步长功能，步长自动调整范围最小 1000，最大 2000000 #11006 新增 ADMIN PLUGINS ENABLE/ADMIN PLUGINS DISABLE SQL 语句，管理 Plugin 的动态开启或关闭 #11157 Audit Plugin 新增审记连接功能 #11013 修改 Region 打散时的默认行为为等待 PD 调度完成 #11166 禁止 Window Function 在 Prepare Plan Cache 中被缓存，避免某些情况下出现结果不正确的问题 #11048 禁止使用 Alter 语句修改 Stored Generated Column 的定义 #11068 禁止将 Virtual Generated Column 更改为 Stored Generated Column #11068 禁止改变带有索引的 Generated Column 的表达式 #11068 支持 TiDB 在 ARM64 架构下的编译 #11150 支持修改 Database/Table 的 Collate，条件限制为 Database/Table 字符集必须是 UTF8/UTF8MB4 #11086 修复 UPDATE … SELECT 语句中，SELECT 子查询没有解析到 UPDATE 表达式中的列而被误裁剪，导致报错的问题 #11252 修复点查时，某列被查询多次而且结果为 NULL 时会 Panic 的问题 #11226 修复 RAND 函数由于非线程安全的 rand.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.0.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.0.1/</guid>
      <description>TiDB 3.0.1 Release Notes 发版日期：2019 年 7 月 16 日
TiDB 版本：3.0.1
TiDB Ansible 版本：3.0.1
TiDB  新增对 MAX_EXECUTION_TIME 特性的支持 #11026 新增 tidb_wait_split_region_finish_backoff Session 变量，用于控制 Region 打散的 Backoff 时间 #11166 新增根据负载情况自动调整 Auto ID 分配的步长功能，步长自动调整范围最小 1000，最大 2000000 #11006 新增 ADMIN PLUGINS ENABLE/ADMIN PLUGINS DISABLE SQL 语句，管理 Plugin 的动态开启或关闭 #11157 Audit Plugin 新增审记连接功能 #11013 修改 Region 打散时的默认行为为等待 PD 调度完成 #11166 禁止 Window Function 在 Prepare Plan Cache 中被缓存，避免某些情况下出现结果不正确的问题 #11048 禁止使用 Alter 语句修改 Stored Generated Column 的定义 #11068 禁止将 Virtual Generated Column 更改为 Stored Generated Column #11068 禁止改变带有索引的 Generated Column 的表达式 #11068 支持 TiDB 在 ARM64 架构下的编译 #11150 支持修改 Database/Table 的 Collate，条件限制为 Database/Table 字符集必须是 UTF8/UTF8MB4 #11086 修复 UPDATE … SELECT 语句中，SELECT 子查询没有解析到 UPDATE 表达式中的列而被误裁剪，导致报错的问题 #11252 修复点查时，某列被查询多次而且结果为 NULL 时会 Panic 的问题 #11226 修复 RAND 函数由于非线程安全的 rand.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.1 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.0.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.0.1/</guid>
      <description>TiDB 3.0.1 Release Notes Release date: July 16, 2019
TiDB version: 3.0.1
TiDB Ansible version: 3.0.1
TiDB  Add support for the MAX_EXECUTION_TIME feature #11026 Add the tidb_wait_split_region_finish_backoff session variable to control the backoff time of splitting Regions #11166 Support automatically adjusting the incremental gap allocated by auto-increment IDs based on the load, and the auto-adjustment scope of the incremental gap is 1000~2000000 #11006 Add the ADMIN PLUGINS ENABLE/ADMIN PLUGINS DISABLE SQL statement to dynamically enable or disable plugins #11157 Add the session connection information in the Audit plugin #11013 Change the default behavior during the period of splitting Regions to wait for PD to finish scheduling #11166 Prohibit Window Functions from being cached in Prepare Plan Cache to avoid incorrect results in some cases #11048 Prohibit ALTER statements from modifying the definition of stored generated columns #11068 Disallow changing virtual generated columns to stored generated columns #11068 Disallow changing the generated column expression with indexes #11068 Support compiling TiDB on the ARM64 architecture #11150 Support modifying the collation of a database or a table, but the character set of the database/table has to be UTF-8 or utf8mb4 #11086 Fix the issue that an error is reported when the SELECT subquery in the UPDATE … SELECT statement fails to parse the column in the UPDATE expression and the column is wrongly pruned #11252 Fix the panic issue that happens when a column is queried on multiple times and the returned result is NULL during point queries #11226 Fix the data race issue caused by non-thread safe rand.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.1 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/3.0.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/3.0.1/</guid>
      <description>TiDB 3.0.1 Release Notes Release date: July 16, 2019
TiDB version: 3.0.1
TiDB Ansible version: 3.0.1
TiDB  Add support for the MAX_EXECUTION_TIME feature #11026 Add the tidb_wait_split_region_finish_backoff session variable to control the backoff time of splitting Regions #11166 Support automatically adjusting the incremental gap allocated by auto-increment IDs based on the load, and the auto-adjustment scope of the incremental gap is 1000~2000000 #11006 Add the ADMIN PLUGINS ENABLE/ADMIN PLUGINS DISABLE SQL statement to dynamically enable or disable plugins #11157 Add the session connection information in the Audit plugin #11013 Change the default behavior during the period of splitting Regions to wait for PD to finish scheduling #11166 Prohibit Window Functions from being cached in Prepare Plan Cache to avoid incorrect results in some cases #11048 Prohibit ALTER statements from modifying the definition of stored generated columns #11068 Disallow changing virtual generated columns to stored generated columns #11068 Disallow changing the generated column expression with indexes #11068 Support compiling TiDB on the ARM64 architecture #11150 Support modifying the collation of a database or a table, but the character set of the database/table has to be UTF-8 or utf8mb4 #11086 Fix the issue that an error is reported when the SELECT subquery in the UPDATE … SELECT statement fails to parse the column in the UPDATE expression and the column is wrongly pruned #11252 Fix the panic issue that happens when a column is queried on multiple times and the returned result is NULL during point queries #11226 Fix the data race issue caused by non-thread safe rand.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.1 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/3.0.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/3.0.1/</guid>
      <description>TiDB 3.0.1 Release Notes Release date: July 16, 2019
TiDB version: 3.0.1
TiDB Ansible version: 3.0.1
TiDB  Add support for the MAX_EXECUTION_TIME feature #11026 Add the tidb_wait_split_region_finish_backoff session variable to control the backoff time of splitting Regions #11166 Support automatically adjusting the incremental gap allocated by auto-increment IDs based on the load, and the auto-adjustment scope of the incremental gap is 1000~2000000 #11006 Add the ADMIN PLUGINS ENABLE/ADMIN PLUGINS DISABLE SQL statement to dynamically enable or disable plugins #11157 Add the session connection information in the Audit plugin #11013 Change the default behavior during the period of splitting Regions to wait for PD to finish scheduling #11166 Prohibit Window Functions from being cached in Prepare Plan Cache to avoid incorrect results in some cases #11048 Prohibit ALTER statements from modifying the definition of stored generated columns #11068 Disallow changing virtual generated columns to stored generated columns #11068 Disallow changing the generated column expression with indexes #11068 Support compiling TiDB on the ARM64 architecture #11150 Support modifying the collation of a database or a table, but the character set of the database/table has to be UTF-8 or utf8mb4 #11086 Fix the issue that an error is reported when the SELECT subquery in the UPDATE … SELECT statement fails to parse the column in the UPDATE expression and the column is wrongly pruned #11252 Fix the panic issue that happens when a column is queried on multiple times and the returned result is NULL during point queries #11226 Fix the data race issue caused by non-thread safe rand.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.1 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.0.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.0.1/</guid>
      <description>TiDB 3.0.1 Release Notes Release date: July 16, 2019
TiDB version: 3.0.1
TiDB Ansible version: 3.0.1
TiDB  Add support for the MAX_EXECUTION_TIME feature #11026 Add the tidb_wait_split_region_finish_backoff session variable to control the backoff time of splitting Regions #11166 Support automatically adjusting the incremental gap allocated by auto-increment IDs based on the load, and the auto-adjustment scope of the incremental gap is 1000~2000000 #11006 Add the ADMIN PLUGINS ENABLE/ADMIN PLUGINS DISABLE SQL statement to dynamically enable or disable plugins #11157 Add the session connection information in the Audit plugin #11013 Change the default behavior during the period of splitting Regions to wait for PD to finish scheduling #11166 Prohibit Window Functions from being cached in Prepare Plan Cache to avoid incorrect results in some cases #11048 Prohibit ALTER statements from modifying the definition of stored generated columns #11068 Disallow changing virtual generated columns to stored generated columns #11068 Disallow changing the generated column expression with indexes #11068 Support compiling TiDB on the ARM64 architecture #11150 Support modifying the collation of a database or a table, but the character set of the database/table has to be UTF-8 or utf8mb4 #11086 Fix the issue that an error is reported when the SELECT subquery in the UPDATE … SELECT statement fails to parse the column in the UPDATE expression and the column is wrongly pruned #11252 Fix the panic issue that happens when a column is queried on multiple times and the returned result is NULL during point queries #11226 Fix the data race issue caused by non-thread safe rand.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.10 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.0.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.0.10/</guid>
      <description>TiDB 3.0.10 Release Notes 发版日期：2020 年 02 月 20 日
TiDB 版本：3.0.10
TiDB Ansible 版本：3.0.10
TiDB  修复 IndexLookUpJoin 在利用 OtherCondition 构造 InnerRange 时出现错误 Join 结果 #14599 删除 tidb_pprof_sql_cpu 配置项，新增 Server 级别的 tidb_pprof_sql_cpu 变量 #14416 修复用户只在具有全局权限时才能查询所有数据库的问题 #14386 修复执行 point-get 时由于事务超时导致数据的可见性不符合预期的问题 #14480 将悲观事务激活的时机改为延迟激活，与乐观事务模型保持一致 #14474 修复 unixtimestamp 表达式在计算分区表分区的时区不正确的问题 #14476 新增tidb_session_statement_deadlock_detect_duration_seconds 监控项，用于监控死锁检测时间 #14484 修复 GC worker 由于部分逻辑不正确导致系统 panic 的问题 #14439 修复 IsTrue 函数的表达式名称不正确的问题 #14516 修复部分内存使用统计不准确的问题 #14533 修复统计信息 CM-Sketch 初始化时由于处理逻辑不正确导致系统 panic 的问题 #14470 修复查询分区表时分区裁剪（partition pruning）不准确的问题 #14546 修复 SQL 绑定中 SQL 语句默认数据库名设置不正确的问题 #14548 修复 json_key 与 MySQL 不兼容的问题 #14561 新增分区表自动更新统计信息的功能 #14566 修复执行 point-get时 plan id 会变化的问题，正常情况 plan id 始终是 1 #14595 修复 SQL 绑定不完全匹配时处理逻辑不正确导致系统 panic 的问题 #14263 新增 tidb_session_statement_pessimistic_retry_count 监控项，用于监控悲观事务加锁失败后重试次数 #14619 修复 show binding 语句权限检查不正确的问题 #14618 修复由于 backoff 的逻辑里没有检查 killed 标记，导致 kill 无法正确执行的问题 #14614 通过减少持有内部锁的时间来提高 statement summary 的性能 #14627 修复 TiDB 从字符串解析成时间与 MySQL 不兼容的问题 #14570 新增审计日志记录用户登录失败的功能 #14620 新增 tidb_session_ statement_lock_keys_count 监控项，用于监控悲观事务的 lock keys 的数量 #14634 修复 json 对 &amp;amp; &amp;lt; &amp;gt; 等字符输出转义不正确的问题 #14637 修复 hash-join 在建 hash-table 时由于内存使用过多导致系统 panic 的问题 #14642 修复 SQL 绑定处理不合法记录时处理逻辑不正确导致 panic 的问题 #14645 修复 Decimal 除法计算与 MySQL 不兼容的问题，Decimal 除法计算中增加 Truncated 错误检测 #14673 修复给用户授权不存在的表执行成功的问题 #14611  TiKV  Raftstore  修复由于 Region merge 失败导致系统 Panic #6460 或者数据丢失 #598 的问题 #6481 支持 yield 优化调度公平性，支持预迁移 leader 优化 leader 调度的稳定性 #6563    PD  当系统流量有变化时，系统自动更新 Region 缓存信息，解决缓存失效的问题 #2103 采用 leader 租约时间确定 TSO 的有效时间 #2117  Tools  TiDB Binlog  Drainer 支持 relay log #893   TiDB Lightning  优化配置项，部分配置项在没有设置的时候使用默认配置 #255 修复在非 server mode 模式下 web 界面无法打开的问题 #259    TiDB Ansible  修复某些场景获取不到 PD Leader 导致命令执行失败的问题 #1121 TiDB Dashboard 新增 Deadlock Detect Duration 监控项 #1127 TiDB Dashboard 新增 Statement Lock Keys Count 监控项 #1132 TiDB Dashboard 新增 Statement Pessimistic Retry Count 监控项 #1133  </description>
    </item>
    
    <item>
      <title>TiDB 3.0.10 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/3.0.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/3.0.10/</guid>
      <description>TiDB 3.0.10 Release Notes 发版日期：2020 年 02 月 20 日
TiDB 版本：3.0.10
TiDB Ansible 版本：3.0.10
TiDB  修复 IndexLookUpJoin 在利用 OtherCondition 构造 InnerRange 时出现错误 Join 结果 #14599 删除 tidb_pprof_sql_cpu 配置项，新增 Server 级别的 tidb_pprof_sql_cpu 变量 #14416 修复用户只在具有全局权限时才能查询所有数据库的问题 #14386 修复执行 point-get 时由于事务超时导致数据的可见性不符合预期的问题 #14480 将悲观事务激活的时机改为延迟激活，与乐观事务模型保持一致 #14474 修复 unixtimestamp 表达式在计算分区表分区的时区不正确的问题 #14476 新增tidb_session_statement_deadlock_detect_duration_seconds 监控项，用于监控死锁检测时间 #14484 修复 GC worker 由于部分逻辑不正确导致系统 panic 的问题 #14439 修复 IsTrue 函数的表达式名称不正确的问题 #14516 修复部分内存使用统计不准确的问题 #14533 修复统计信息 CM-Sketch 初始化时由于处理逻辑不正确导致系统 panic 的问题 #14470 修复查询分区表时分区裁剪（partition pruning）不准确的问题 #14546 修复 SQL 绑定中 SQL 语句默认数据库名设置不正确的问题 #14548 修复 json_key 与 MySQL 不兼容的问题 #14561 新增分区表自动更新统计信息的功能 #14566 修复执行 point-get时 plan id 会变化的问题，正常情况 plan id 始终是 1 #14595 修复 SQL 绑定不完全匹配时处理逻辑不正确导致系统 panic 的问题 #14263 新增 tidb_session_statement_pessimistic_retry_count 监控项，用于监控悲观事务加锁失败后重试次数 #14619 修复 show binding 语句权限检查不正确的问题 #14618 修复由于 backoff 的逻辑里没有检查 killed 标记，导致 kill 无法正确执行的问题 #14614 通过减少持有内部锁的时间来提高 statement summary 的性能 #14627 修复 TiDB 从字符串解析成时间与 MySQL 不兼容的问题 #14570 新增审计日志记录用户登录失败的功能 #14620 新增 tidb_session_ statement_lock_keys_count 监控项，用于监控悲观事务的 lock keys 的数量 #14634 修复 json 对 &amp;amp; &amp;lt; &amp;gt; 等字符输出转义不正确的问题 #14637 修复 hash-join 在建 hash-table 时由于内存使用过多导致系统 panic 的问题 #14642 修复 SQL 绑定处理不合法记录时处理逻辑不正确导致 panic 的问题 #14645 修复 Decimal 除法计算与 MySQL 不兼容的问题，Decimal 除法计算中增加 Truncated 错误检测 #14673 修复给用户授权不存在的表执行成功的问题 #14611  TiKV  Raftstore  修复由于 Region merge 失败导致系统 Panic #6460 或者数据丢失 #598 的问题 #6481 支持 yield 优化调度公平性，支持预迁移 leader 优化 leader 调度的稳定性 #6563    PD  当系统流量有变化时，系统自动更新 Region 缓存信息，解决缓存失效的问题 #2103 采用 leader 租约时间确定 TSO 的有效时间 #2117  Tools  TiDB Binlog  Drainer 支持 relay log #893   TiDB Lightning  优化配置项，部分配置项在没有设置的时候使用默认配置 #255 修复在非 server mode 模式下 web 界面无法打开的问题 #259    TiDB Ansible  修复某些场景获取不到 PD Leader 导致命令执行失败的问题 #1121 TiDB Dashboard 新增 Deadlock Detect Duration 监控项 #1127 TiDB Dashboard 新增 Statement Lock Keys Count 监控项 #1132 TiDB Dashboard 新增 Statement Pessimistic Retry Count 监控项 #1133  </description>
    </item>
    
    <item>
      <title>TiDB 3.0.10 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.0.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.0.10/</guid>
      <description>TiDB 3.0.10 Release Notes 发版日期：2020 年 02 月 20 日
TiDB 版本：3.0.10
TiDB Ansible 版本：3.0.10
TiDB  修复 IndexLookUpJoin 在利用 OtherCondition 构造 InnerRange 时出现错误 Join 结果 #14599 删除 tidb_pprof_sql_cpu 配置项，新增 Server 级别的 tidb_pprof_sql_cpu 变量 #14416 修复用户只在具有全局权限时才能查询所有数据库的问题 #14386 修复执行 point-get 时由于事务超时导致数据的可见性不符合预期的问题 #14480 将悲观事务激活的时机改为延迟激活，与乐观事务模型保持一致 #14474 修复 unixtimestamp 表达式在计算分区表分区的时区不正确的问题 #14476 新增tidb_session_statement_deadlock_detect_duration_seconds 监控项，用于监控死锁检测时间 #14484 修复 GC worker 由于部分逻辑不正确导致系统 panic 的问题 #14439 修复 IsTrue 函数的表达式名称不正确的问题 #14516 修复部分内存使用统计不准确的问题 #14533 修复统计信息 CM-Sketch 初始化时由于处理逻辑不正确导致系统 panic 的问题 #14470 修复查询分区表时分区裁剪（partition pruning）不准确的问题 #14546 修复 SQL 绑定中 SQL 语句默认数据库名设置不正确的问题 #14548 修复 json_key 与 MySQL 不兼容的问题 #14561 新增分区表自动更新统计信息的功能 #14566 修复执行 point-get时 plan id 会变化的问题，正常情况 plan id 始终是 1 #14595 修复 SQL 绑定不完全匹配时处理逻辑不正确导致系统 panic 的问题 #14263 新增 tidb_session_statement_pessimistic_retry_count 监控项，用于监控悲观事务加锁失败后重试次数 #14619 修复 show binding 语句权限检查不正确的问题 #14618 修复由于 backoff 的逻辑里没有检查 killed 标记，导致 kill 无法正确执行的问题 #14614 通过减少持有内部锁的时间来提高 statement summary 的性能 #14627 修复 TiDB 从字符串解析成时间与 MySQL 不兼容的问题 #14570 新增审计日志记录用户登录失败的功能 #14620 新增 tidb_session_ statement_lock_keys_count 监控项，用于监控悲观事务的 lock keys 的数量 #14634 修复 json 对 &amp;amp; &amp;lt; &amp;gt; 等字符输出转义不正确的问题 #14637 修复 hash-join 在建 hash-table 时由于内存使用过多导致系统 panic 的问题 #14642 修复 SQL 绑定处理不合法记录时处理逻辑不正确导致 panic 的问题 #14645 修复 Decimal 除法计算与 MySQL 不兼容的问题，Decimal 除法计算中增加 Truncated 错误检测 #14673 修复给用户授权不存在的表执行成功的问题 #14611  TiKV  Raftstore  修复由于 Region merge 失败导致系统 Panic #6460 或者数据丢失 #598 的问题 #6481 支持 yield 优化调度公平性，支持预迁移 leader 优化 leader 调度的稳定性 #6563    PD  当系统流量有变化时，系统自动更新 Region 缓存信息，解决缓存失效的问题 #2103 采用 leader 租约时间确定 TSO 的有效时间 #2117  Tools  TiDB Binlog  Drainer 支持 relay log #893   TiDB Lightning  优化配置项，部分配置项在没有设置的时候使用默认配置 #255 修复在非 server mode 模式下 web 界面无法打开的问题 #259    TiDB Ansible  修复某些场景获取不到 PD Leader 导致命令执行失败的问题 #1121 TiDB Dashboard 新增 Deadlock Detect Duration 监控项 #1127 TiDB Dashboard 新增 Statement Lock Keys Count 监控项 #1132 TiDB Dashboard 新增 Statement Pessimistic Retry Count 监控项 #1133  </description>
    </item>
    
    <item>
      <title>TiDB 3.0.10 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.0.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.0.10/</guid>
      <description>TiDB 3.0.10 Release Notes Release date: February 20, 2020
TiDB version: 3.0.10
TiDB Ansible version: 3.0.10
TiDB  Fix wrong Join results when IndexLookUpJoin uses OtherCondition to construct InnerRange #14599 Delete the tidb_pprof_sql_cpu configuration item and add the tidb_pprof_sql_cpu variable #14416 Fix the issue that users can query all databases only when they have global privileges #14386 Fix the issue that data visibility does not meet expectations due to transaction timeout when executing PointGet operations #14480 Change the timing of pessimistic transaction activation to delayed activation, consistent with the optimistic transaction mode #14474 Fix the incorrect time zone results when the unixtimestamp expression calculates the time zone of the table partitions #14476 Add the tidb_session_statement_deadlock_detect_duration_seconds monitoring item to monitor deadlock detection duration #14484 Fix the system panic issue caused by some logic errors of GC workers #14439 Correct the expression name of the IsTrue function #14516 Fix the issue that some memory usage is counted inaccurately #14533 Fix the system panic issue caused by incorrect processing logic during CM-Sketch statistics initialization #14470 Fix the issue of inaccurate partition pruning when querying partitioned tables #14546 Fix the issue that the default database name of the SQL statement in SQL bindings is set incorrectly #14548 Fix the issue that json_key is not compatible with MySQL #14561 Add the feature of automatically updating the statistics of partitioned tables #14566 Fix the issue that the plan ID changes when the PointGet operation is executed (the plan ID is expected to be 1 always) #14595 Fix the system panic issue caused by incorrect processing logic when SQL bindings do not match exactly #14263 Add the tidb_session_statement_pessimistic_retry_count monitoring item to monitor the number of retries after the failure to lock pessimistic transactions #14619 Fix the incorrect privilege check for show binding statements #14618 Fix the issue that the query cannot be killed because the backoff logic does not include checking the killed tag #14614 Improve the performance of statement summary by reducing the time to hold internal locks #14627 Fix the issue that TiDB&#39;s result of parsing strings to time is incompatible with MySQL #14570 Record the user login failures in audit logs #14620 Add the tidb_session_ statement_lock_keys_count monitoring item to monitor the number of lock keys for pessimistic transactions #14634 Fix the issue that characters in JSON such as &amp;amp;, &amp;lt;, and &amp;gt; are incorrectly escaped #14637 Fix the system panic issue caused by excessive memory usage when the HashJoin operation is building a hash table #14642 Fix the panic issue caused by incorrect processing logic when an SQL binding processes illegal records #14645 ix a MySQL incompatibility issue by adding Truncated error detection to decimal division calculation #14673 Fix the issue of successfully granting users privileges on a table that does not exist #14611  TiKV  Raftstore  Fix the system panic issue #6460 or data loss issue #598 caused by Region merge failure #6481 Support yield to optimize scheduling fairness, and support pre-transfering the leader to improve leader scheduling stability #6563    PD  Fix the invalid cache issue by supporting automatically updating the Region cache information when the system traffic changes #2103 Use leader lease time to determine TSO service validity #2117  Tools  TiDB Binlog  Support relay log in Drainer #893   TiDB Lightning  Make some configuration items use default values when a config file is missing #255 Fix the issue that the web interface cannot be opened in the non-server mode #259    TiDB Ansible  Fix the issue that the command execution fails due to the failure to obtain PD leader in some scenarios #1121 Add the Deadlock Detect Duration monitoring item in the TiDB dashboard #1127 Add the Statement Lock Keys Count monitoring item in the TiDB dashboard #1132 Add the Statement Pessimistic Retry Count monitoring item in the TiDB dashboard #1133  </description>
    </item>
    
    <item>
      <title>TiDB 3.0.10 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/3.0.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/3.0.10/</guid>
      <description>TiDB 3.0.10 Release Notes Release date: February 20, 2020
TiDB version: 3.0.10
TiDB Ansible version: 3.0.10
TiDB  Fix wrong Join results when IndexLookUpJoin uses OtherCondition to construct InnerRange #14599 Delete the tidb_pprof_sql_cpu configuration item and add the tidb_pprof_sql_cpu variable #14416 Fix the issue that users can query all databases only when they have global privileges #14386 Fix the issue that data visibility does not meet expectations due to transaction timeout when executing PointGet operations #14480 Change the timing of pessimistic transaction activation to delayed activation, consistent with the optimistic transaction mode #14474 Fix the incorrect time zone results when the unixtimestamp expression calculates the time zone of the table partitions #14476 Add the tidb_session_statement_deadlock_detect_duration_seconds monitoring item to monitor deadlock detection duration #14484 Fix the system panic issue caused by some logic errors of GC workers #14439 Correct the expression name of the IsTrue function #14516 Fix the issue that some memory usage is counted inaccurately #14533 Fix the system panic issue caused by incorrect processing logic during CM-Sketch statistics initialization #14470 Fix the issue of inaccurate partition pruning when querying partitioned tables #14546 Fix the issue that the default database name of the SQL statement in SQL bindings is set incorrectly #14548 Fix the issue that json_key is not compatible with MySQL #14561 Add the feature of automatically updating the statistics of partitioned tables #14566 Fix the issue that the plan ID changes when the PointGet operation is executed (the plan ID is expected to be 1 always) #14595 Fix the system panic issue caused by incorrect processing logic when SQL bindings do not match exactly #14263 Add the tidb_session_statement_pessimistic_retry_count monitoring item to monitor the number of retries after the failure to lock pessimistic transactions #14619 Fix the incorrect privilege check for show binding statements #14618 Fix the issue that the query cannot be killed because the backoff logic does not include checking the killed tag #14614 Improve the performance of statement summary by reducing the time to hold internal locks #14627 Fix the issue that TiDB&#39;s result of parsing strings to time is incompatible with MySQL #14570 Record the user login failures in audit logs #14620 Add the tidb_session_ statement_lock_keys_count monitoring item to monitor the number of lock keys for pessimistic transactions #14634 Fix the issue that characters in JSON such as &amp;amp;, &amp;lt;, and &amp;gt; are incorrectly escaped #14637 Fix the system panic issue caused by excessive memory usage when the HashJoin operation is building a hash table #14642 Fix the panic issue caused by incorrect processing logic when an SQL binding processes illegal records #14645 ix a MySQL incompatibility issue by adding Truncated error detection to decimal division calculation #14673 Fix the issue of successfully granting users privileges on a table that does not exist #14611  TiKV  Raftstore  Fix the system panic issue #6460 or data loss issue #598 caused by Region merge failure #6481 Support yield to optimize scheduling fairness, and support pre-transfering the leader to improve leader scheduling stability #6563    PD  Fix the invalid cache issue by supporting automatically updating the Region cache information when the system traffic changes #2103 Use leader lease time to determine TSO service validity #2117  Tools  TiDB Binlog  Support relay log in Drainer #893   TiDB Lightning  Make some configuration items use default values when a config file is missing #255 Fix the issue that the web interface cannot be opened in the non-server mode #259    TiDB Ansible  Fix the issue that the command execution fails due to the failure to obtain PD leader in some scenarios #1121 Add the Deadlock Detect Duration monitoring item in the TiDB dashboard #1127 Add the Statement Lock Keys Count monitoring item in the TiDB dashboard #1132 Add the Statement Pessimistic Retry Count monitoring item in the TiDB dashboard #1133  </description>
    </item>
    
    <item>
      <title>TiDB 3.0.10 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.0.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.0.10/</guid>
      <description>TiDB 3.0.10 Release Notes Release date: February 20, 2020
TiDB version: 3.0.10
TiDB Ansible version: 3.0.10
TiDB  Fix wrong Join results when IndexLookUpJoin uses OtherCondition to construct InnerRange #14599 Delete the tidb_pprof_sql_cpu configuration item and add the tidb_pprof_sql_cpu variable #14416 Fix the issue that users can query all databases only when they have global privileges #14386 Fix the issue that data visibility does not meet expectations due to transaction timeout when executing PointGet operations #14480 Change the timing of pessimistic transaction activation to delayed activation, consistent with the optimistic transaction mode #14474 Fix the incorrect time zone results when the unixtimestamp expression calculates the time zone of the table partitions #14476 Add the tidb_session_statement_deadlock_detect_duration_seconds monitoring item to monitor deadlock detection duration #14484 Fix the system panic issue caused by some logic errors of GC workers #14439 Correct the expression name of the IsTrue function #14516 Fix the issue that some memory usage is counted inaccurately #14533 Fix the system panic issue caused by incorrect processing logic during CM-Sketch statistics initialization #14470 Fix the issue of inaccurate partition pruning when querying partitioned tables #14546 Fix the issue that the default database name of the SQL statement in SQL bindings is set incorrectly #14548 Fix the issue that json_key is not compatible with MySQL #14561 Add the feature of automatically updating the statistics of partitioned tables #14566 Fix the issue that the plan ID changes when the PointGet operation is executed (the plan ID is expected to be 1 always) #14595 Fix the system panic issue caused by incorrect processing logic when SQL bindings do not match exactly #14263 Add the tidb_session_statement_pessimistic_retry_count monitoring item to monitor the number of retries after the failure to lock pessimistic transactions #14619 Fix the incorrect privilege check for show binding statements #14618 Fix the issue that the query cannot be killed because the backoff logic does not include checking the killed tag #14614 Improve the performance of statement summary by reducing the time to hold internal locks #14627 Fix the issue that TiDB&#39;s result of parsing strings to time is incompatible with MySQL #14570 Record the user login failures in audit logs #14620 Add the tidb_session_ statement_lock_keys_count monitoring item to monitor the number of lock keys for pessimistic transactions #14634 Fix the issue that characters in JSON such as &amp;amp;, &amp;lt;, and &amp;gt; are incorrectly escaped #14637 Fix the system panic issue caused by excessive memory usage when the HashJoin operation is building a hash table #14642 Fix the panic issue caused by incorrect processing logic when an SQL binding processes illegal records #14645 ix a MySQL incompatibility issue by adding Truncated error detection to decimal division calculation #14673 Fix the issue of successfully granting users privileges on a table that does not exist #14611  TiKV  Raftstore  Fix the system panic issue #6460 or data loss issue #598 caused by Region merge failure #6481 Support yield to optimize scheduling fairness, and support pre-transfering the leader to improve leader scheduling stability #6563    PD  Fix the invalid cache issue by supporting automatically updating the Region cache information when the system traffic changes #2103 Use leader lease time to determine TSO service validity #2117  Tools  TiDB Binlog  Support relay log in Drainer #893   TiDB Lightning  Make some configuration items use default values when a config file is missing #255 Fix the issue that the web interface cannot be opened in the non-server mode #259    TiDB Ansible  Fix the issue that the command execution fails due to the failure to obtain PD leader in some scenarios #1121 Add the Deadlock Detect Duration monitoring item in the TiDB dashboard #1127 Add the Statement Lock Keys Count monitoring item in the TiDB dashboard #1132 Add the Statement Pessimistic Retry Count monitoring item in the TiDB dashboard #1133  </description>
    </item>
    
    <item>
      <title>TiDB 3.0.11 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.0.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.0.11/</guid>
      <description>TiDB 3.0.11 Release Notes 发版日期：2020 年 03 月 04 日
TiDB 版本：3.0.11
TiDB Ansible 版本：3.0.11
TiDB 3.0.11 兼容性变化  TiDB  新增 max-index-length 配置项，用于控制索引支持的最大长度，用户可自由选择兼容 v3.0.7 之前版本或者兼容 MySQL #15057    新功能   TiDB
 新增在 information_schema.PARTITIONS 表中显示分区表的分区元信息的功能 #14849    TiDB Binlog
 新增 TiDB 集群之间数据双向复制功能 #884 #909    TiDB Lightning
 新增配置 TLS 功能 #44 #270    TiDB Ansible
 优化 create_user.yml 的逻辑，中控机使用的用户不必和 ansible_user 一致 #1184    Bug 修复   TiDB</description>
    </item>
    
    <item>
      <title>TiDB 3.0.11 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/3.0.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/3.0.11/</guid>
      <description>TiDB 3.0.11 Release Notes 发版日期：2020 年 03 月 04 日
TiDB 版本：3.0.11
TiDB Ansible 版本：3.0.11
TiDB 3.0.11 兼容性变化  TiDB  新增 max-index-length 配置项，用于控制索引支持的最大长度，用户可自由选择兼容 v3.0.7 之前版本或者兼容 MySQL #15057    新功能   TiDB
 新增在 information_schema.PARTITIONS 表中显示分区表的分区元信息的功能 #14849    TiDB Binlog
 新增 TiDB 集群之间数据双向复制功能 #884 #909    TiDB Lightning
 新增配置 TLS 功能 #44 #270    TiDB Ansible
 优化 create_user.yml 的逻辑，中控机使用的用户不必和 ansible_user 一致 #1184    Bug 修复   TiDB</description>
    </item>
    
    <item>
      <title>TiDB 3.0.11 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.0.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.0.11/</guid>
      <description>TiDB 3.0.11 Release Notes 发版日期：2020 年 03 月 04 日
TiDB 版本：3.0.11
TiDB Ansible 版本：3.0.11
TiDB 3.0.11 兼容性变化  TiDB  新增 max-index-length 配置项，用于控制索引支持的最大长度，用户可自由选择兼容 v3.0.7 之前版本或者兼容 MySQL #15057    新功能   TiDB
 新增在 information_schema.PARTITIONS 表中显示分区表的分区元信息的功能 #14849    TiDB Binlog
 新增 TiDB 集群之间数据双向复制功能 #884 #909    TiDB Lightning
 新增配置 TLS 功能 #44 #270    TiDB Ansible
 优化 create_user.yml 的逻辑，中控机使用的用户不必和 ansible_user 一致 #1184    Bug 修复   TiDB</description>
    </item>
    
    <item>
      <title>TiDB 3.0.11 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.0.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.0.11/</guid>
      <description>TiDB 3.0.11 Release Notes Release date: March 4, 2020
TiDB version: 3.0.11
TiDB Ansible version: 3.0.11
TiDB 3.0.11 Compatibility Changes  TiDB  Add the max-index-length configuration item to control the maximum index length, which is compatible with the behavior of TiDB versions before 3.0.7 or of MySQL #15057    New Features   TiDB
 Support showing the meta information of partitioned tables in the information_schema.PARTITIONS table #14849    TiDB Binlog</description>
    </item>
    
    <item>
      <title>TiDB 3.0.11 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/3.0.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/3.0.11/</guid>
      <description>TiDB 3.0.11 Release Notes Release date: March 4, 2020
TiDB version: 3.0.11
TiDB Ansible version: 3.0.11
TiDB 3.0.11 Compatibility Changes  TiDB  Add the max-index-length configuration item to control the maximum index length, which is compatible with the behavior of TiDB versions before 3.0.7 or of MySQL #15057    New Features   TiDB
 Support showing the meta information of partitioned tables in the information_schema.PARTITIONS table #14849    TiDB Binlog</description>
    </item>
    
    <item>
      <title>TiDB 3.0.11 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.0.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.0.11/</guid>
      <description>TiDB 3.0.11 Release Notes Release date: March 4, 2020
TiDB version: 3.0.11
TiDB Ansible version: 3.0.11
TiDB 3.0.11 Compatibility Changes  TiDB  Add the max-index-length configuration item to control the maximum index length, which is compatible with the behavior of TiDB versions before 3.0.7 or of MySQL #15057    New Features   TiDB
 Support showing the meta information of partitioned tables in the information_schema.PARTITIONS table #14849    TiDB Binlog</description>
    </item>
    
    <item>
      <title>TiDB 3.0.12 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.0.12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.0.12/</guid>
      <description>TiDB 3.0.12 Release Notes 发版日期：2020 年 03 月 16 日
TiDB 版本：3.0.12
TiDB Ansible 版本：3.0.12
TiDB 3.0.12 兼容性变化  TiDB  修复慢日志中记录 prewrite binlog 的时间部分计时不准确问题。原本计时的字段名是 Binlog_prewrite_time，这次修正后，名称更改为 Wait_prewrite_binlog_time。#15276    新功能   TiDB
 支持通过 alter instance 语句动态加载已被替换的证书文件 #15080 #15292 添加 cluster-verify-cn 配置项，配置后必须是对应 CN 证书才使用 status 服务 #15164 在每个 TiDB server 中添加对 DDL 请求的一个限流的功能，从而降低 DDL 请求冲突报错频率 #15148 支持在 binlog 写入失败时，TiDB 退出 #15339    Tools
 TiDB Binlog  Drainer 新增 kafka-client-id 配置项，支持连接 Kafka 客户端配置客户端 ID #929      Bug 修复   TiDB</description>
    </item>
    
    <item>
      <title>TiDB 3.0.12 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/3.0.12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/3.0.12/</guid>
      <description>TiDB 3.0.12 Release Notes 发版日期：2020 年 03 月 16 日
TiDB 版本：3.0.12
TiDB Ansible 版本：3.0.12
TiDB 3.0.12 兼容性变化  TiDB  修复慢日志中记录 prewrite binlog 的时间部分计时不准确问题。原本计时的字段名是 Binlog_prewrite_time，这次修正后，名称更改为 Wait_prewrite_binlog_time。#15276    新功能   TiDB
 支持通过 alter instance 语句动态加载已被替换的证书文件 #15080 #15292 添加 cluster-verify-cn 配置项，配置后必须是对应 CN 证书才使用 status 服务 #15164 在每个 TiDB server 中添加对 DDL 请求的一个限流的功能，从而降低 DDL 请求冲突报错频率 #15148 支持在 binlog 写入失败时，TiDB 退出 #15339    Tools
 TiDB Binlog  Drainer 新增 kafka-client-id 配置项，支持连接 Kafka 客户端配置客户端 ID #929      Bug 修复   TiDB</description>
    </item>
    
    <item>
      <title>TiDB 3.0.12 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.0.12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.0.12/</guid>
      <description>TiDB 3.0.12 Release Notes 发版日期：2020 年 03 月 16 日
TiDB 版本：3.0.12
TiDB Ansible 版本：3.0.12
TiDB 3.0.12 兼容性变化  TiDB  修复慢日志中记录 prewrite binlog 的时间部分计时不准确问题。原本计时的字段名是 Binlog_prewrite_time，这次修正后，名称更改为 Wait_prewrite_binlog_time。#15276    新功能   TiDB
 支持通过 alter instance 语句动态加载已被替换的证书文件 #15080 #15292 添加 cluster-verify-cn 配置项，配置后必须是对应 CN 证书才使用 status 服务 #15164 在每个 TiDB server 中添加对 DDL 请求的一个限流的功能，从而降低 DDL 请求冲突报错频率 #15148 支持在 binlog 写入失败时，TiDB 退出 #15339    Tools
 TiDB Binlog  Drainer 新增 kafka-client-id 配置项，支持连接 Kafka 客户端配置客户端 ID #929      Bug 修复   TiDB</description>
    </item>
    
    <item>
      <title>TiDB 3.0.12 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.0.12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.0.12/</guid>
      <description>TiDB 3.0.12 Release Notes Release date: March 16, 2020
TiDB version: 3.0.12
TiDB Ansible version: 3.0.12
TiDB 3.0.12 Compatibility Changes  TiDB  Fix the issue of inaccurate timing of prewrite binlog in slow query log. The original timing field was called Binlog_prewrite_time. After this fix, the name is changed to Wait_prewrite_binlog_time. #15276    New Features   TiDB
 Support dynamic loading of the replaced certificate file by using the alter instance statement #15080 #15292 Add the cluster-verify-cn configuration item.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.12 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/3.0.12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/3.0.12/</guid>
      <description>TiDB 3.0.12 Release Notes Release date: March 16, 2020
TiDB version: 3.0.12
TiDB Ansible version: 3.0.12
TiDB 3.0.12 Compatibility Changes  TiDB  Fix the issue of inaccurate timing of prewrite binlog in slow query log. The original timing field was called Binlog_prewrite_time. After this fix, the name is changed to Wait_prewrite_binlog_time. #15276    New Features   TiDB
 Support dynamic loading of the replaced certificate file by using the alter instance statement #15080 #15292 Add the cluster-verify-cn configuration item.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.12 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.0.12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.0.12/</guid>
      <description>TiDB 3.0.12 Release Notes Release date: March 16, 2020
TiDB version: 3.0.12
TiDB Ansible version: 3.0.12
TiDB 3.0.12 Compatibility Changes  TiDB  Fix the issue of inaccurate timing of prewrite binlog in slow query log. The original timing field was called Binlog_prewrite_time. After this fix, the name is changed to Wait_prewrite_binlog_time. #15276    New Features   TiDB
 Support dynamic loading of the replaced certificate file by using the alter instance statement #15080 #15292 Add the cluster-verify-cn configuration item.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.0.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.0.2/</guid>
      <description>TiDB 3.0.2 Release Notes 发版日期：2019 年 8 月 7 日
TiDB 版本：3.0.2
TiDB Ansible 版本：3.0.2
TiDB  SQL 优化器  修复当同一张表在查询里出现多次且逻辑上查询结果恒为空时报错 “Can’t find column in schema” 的问题 #11247 修复了 TIDB_INLJ Hint 无法以指定表为 Inner 表构建 IndexJoin 时仍，会强制将其作为 Outer 表构建 IndexJoin，同时 Hint 可能会在不应生效的地方生效的错误，该错误是由于强制选取 IndexJoin 的判断逻辑有误，以及对表别名的处理有误导致的；该错误仅对包含 TIDB_INLJ 的查询产生影响 #11362 修复某些情况下（例如 SELECT IF(1,c,c) FROM t），查询结果的列名称不正确的问题 #11379 修复 LIKE 表达式某些情况下被隐式转换为 0，导致诸如 SELECT 0 LIKE &#39;a string&#39; 返回结果为 TRUE 的问题 #11411 支持在 SHOW 语句中使用子查询，现在可以支持诸如 SHOW COLUMNS FROM tbl WHERE FIELDS IN (SELECT &#39;a&#39;) 的写法 #11459 修复 outerJoinElimination 优化规则没有正确处理列的别名，导致找不到聚合函数的相关列而查询报错的问题；改进了优化过程中对别名的解析，以使得优化可以覆盖更多类型的查询 #11377 修复 Window Function 中多个违反语义约束（例如 UNBOUNDED PRECEDING 不允许在 Frame 定义的最后）时没有报错的问题 #11543 修复 ERROR 3593 (HY000): You cannot use the window function FUNCTION_NAME in this context 报错信息中，FUNCTION_NAME 不为小写的问题，导致与 MySQL 不兼容 #11535 修复 Window Function 中 IGNORE NULLS 语法尚未实现，但使用时没有报错的问题 #11593 修复优化器对时间类型数据的等值条件代价估算不准确的问题 #11512 支持根据反馈信息对统计信息 Top-N 进行更新 #11507   SQL 执行引擎  修复 INSERT 函数在参数中包含 NULL 时，返回值不为 NULL 的问题 #11248 修复 ADMIN CHECKSUM 语句在检查分区表时计算结果不正确的问题 #11266 修复 INDEX JOIN 在使用前缀索引时可能结果不正确的问题 #11246 修复 DATE_ADD 函数在进行涉及微秒的日期减法时，没有正确地对日期的小数位数进行对齐导致结果不正确的问题 #11288 修复 DATE_ADD 函数没有正确地对 INTERVAL 中的负数部分处理导致结果不正确的问题 #11325 修复 Mod(%)、Multiple(*) 和 Minus(-) 返回结果为 0 时，在小数位数较多（例如 select 0.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/3.0.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/3.0.2/</guid>
      <description>TiDB 3.0.2 Release Notes 发版日期：2019 年 8 月 7 日
TiDB 版本：3.0.2
TiDB Ansible 版本：3.0.2
TiDB  SQL 优化器  修复当同一张表在查询里出现多次且逻辑上查询结果恒为空时报错 “Can’t find column in schema” 的问题 #11247 修复了 TIDB_INLJ Hint 无法以指定表为 Inner 表构建 IndexJoin 时仍，会强制将其作为 Outer 表构建 IndexJoin，同时 Hint 可能会在不应生效的地方生效的错误，该错误是由于强制选取 IndexJoin 的判断逻辑有误，以及对表别名的处理有误导致的；该错误仅对包含 TIDB_INLJ 的查询产生影响 #11362 修复某些情况下（例如 SELECT IF(1,c,c) FROM t），查询结果的列名称不正确的问题 #11379 修复 LIKE 表达式某些情况下被隐式转换为 0，导致诸如 SELECT 0 LIKE &#39;a string&#39; 返回结果为 TRUE 的问题 #11411 支持在 SHOW 语句中使用子查询，现在可以支持诸如 SHOW COLUMNS FROM tbl WHERE FIELDS IN (SELECT &#39;a&#39;) 的写法 #11459 修复 outerJoinElimination 优化规则没有正确处理列的别名，导致找不到聚合函数的相关列而查询报错的问题；改进了优化过程中对别名的解析，以使得优化可以覆盖更多类型的查询 #11377 修复 Window Function 中多个违反语义约束（例如 UNBOUNDED PRECEDING 不允许在 Frame 定义的最后）时没有报错的问题 #11543 修复 ERROR 3593 (HY000): You cannot use the window function FUNCTION_NAME in this context 报错信息中，FUNCTION_NAME 不为小写的问题，导致与 MySQL 不兼容 #11535 修复 Window Function 中 IGNORE NULLS 语法尚未实现，但使用时没有报错的问题 #11593 修复优化器对时间类型数据的等值条件代价估算不准确的问题 #11512 支持根据反馈信息对统计信息 Top-N 进行更新 #11507   SQL 执行引擎  修复 INSERT 函数在参数中包含 NULL 时，返回值不为 NULL 的问题 #11248 修复 ADMIN CHECKSUM 语句在检查分区表时计算结果不正确的问题 #11266 修复 INDEX JOIN 在使用前缀索引时可能结果不正确的问题 #11246 修复 DATE_ADD 函数在进行涉及微秒的日期减法时，没有正确地对日期的小数位数进行对齐导致结果不正确的问题 #11288 修复 DATE_ADD 函数没有正确地对 INTERVAL 中的负数部分处理导致结果不正确的问题 #11325 修复 Mod(%)、Multiple(*) 和 Minus(-) 返回结果为 0 时，在小数位数较多（例如 select 0.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.0.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.0.2/</guid>
      <description>TiDB 3.0.2 Release Notes 发版日期：2019 年 8 月 7 日
TiDB 版本：3.0.2
TiDB Ansible 版本：3.0.2
TiDB  SQL 优化器  修复当同一张表在查询里出现多次且逻辑上查询结果恒为空时报错 “Can’t find column in schema” 的问题 #11247 修复了 TIDB_INLJ Hint 无法以指定表为 Inner 表构建 IndexJoin 时仍，会强制将其作为 Outer 表构建 IndexJoin，同时 Hint 可能会在不应生效的地方生效的错误，该错误是由于强制选取 IndexJoin 的判断逻辑有误，以及对表别名的处理有误导致的；该错误仅对包含 TIDB_INLJ 的查询产生影响 #11362 修复某些情况下（例如 SELECT IF(1,c,c) FROM t），查询结果的列名称不正确的问题 #11379 修复 LIKE 表达式某些情况下被隐式转换为 0，导致诸如 SELECT 0 LIKE &#39;a string&#39; 返回结果为 TRUE 的问题 #11411 支持在 SHOW 语句中使用子查询，现在可以支持诸如 SHOW COLUMNS FROM tbl WHERE FIELDS IN (SELECT &#39;a&#39;) 的写法 #11459 修复 outerJoinElimination 优化规则没有正确处理列的别名，导致找不到聚合函数的相关列而查询报错的问题；改进了优化过程中对别名的解析，以使得优化可以覆盖更多类型的查询 #11377 修复 Window Function 中多个违反语义约束（例如 UNBOUNDED PRECEDING 不允许在 Frame 定义的最后）时没有报错的问题 #11543 修复 ERROR 3593 (HY000): You cannot use the window function FUNCTION_NAME in this context 报错信息中，FUNCTION_NAME 不为小写的问题，导致与 MySQL 不兼容 #11535 修复 Window Function 中 IGNORE NULLS 语法尚未实现，但使用时没有报错的问题 #11593 修复优化器对时间类型数据的等值条件代价估算不准确的问题 #11512 支持根据反馈信息对统计信息 Top-N 进行更新 #11507   SQL 执行引擎  修复 INSERT 函数在参数中包含 NULL 时，返回值不为 NULL 的问题 #11248 修复 ADMIN CHECKSUM 语句在检查分区表时计算结果不正确的问题 #11266 修复 INDEX JOIN 在使用前缀索引时可能结果不正确的问题 #11246 修复 DATE_ADD 函数在进行涉及微秒的日期减法时，没有正确地对日期的小数位数进行对齐导致结果不正确的问题 #11288 修复 DATE_ADD 函数没有正确地对 INTERVAL 中的负数部分处理导致结果不正确的问题 #11325 修复 Mod(%)、Multiple(*) 和 Minus(-) 返回结果为 0 时，在小数位数较多（例如 select 0.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.2 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.0.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.0.2/</guid>
      <description>TiDB 3.0.2 Release Notes Release date: August 7, 2019
TiDB version: 3.0.2
TiDB Ansible version: 3.0.2
TiDB  SQL Optimizer  Fix the issue that the “Can’t find column in schema” message is reported when the same table occurs multiple times in a query and logically the query result is always empty #11247 Fix the issue that the query plan does not meet the expectation caused by the TIDB_INLJ hint not working correctly in some cases (like explain select /*+ TIDB_INLJ(t1) */ t1.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.2 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/3.0.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/3.0.2/</guid>
      <description>TiDB 3.0.2 Release Notes Release date: August 7, 2019
TiDB version: 3.0.2
TiDB Ansible version: 3.0.2
TiDB  SQL Optimizer  Fix the issue that the “Can’t find column in schema” message is reported when the same table occurs multiple times in a query and logically the query result is always empty #11247 Fix the issue that the query plan does not meet the expectation caused by the TIDB_INLJ hint not working correctly in some cases (like explain select /*+ TIDB_INLJ(t1) */ t1.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.2 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.0.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.0.2/</guid>
      <description>TiDB 3.0.2 Release Notes Release date: August 7, 2019
TiDB version: 3.0.2
TiDB Ansible version: 3.0.2
TiDB  SQL Optimizer  Fix the issue that the “Can’t find column in schema” message is reported when the same table occurs multiple times in a query and logically the query result is always empty #11247 Fix the issue that the query plan does not meet the expectation caused by the TIDB_INLJ hint not working correctly in some cases (like explain select /*+ TIDB_INLJ(t1) */ t1.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.0.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.0.3/</guid>
      <description>TiDB 3.0.3 Release Notes 发版日期：2019 年 8 月 29 日
TiDB 版本：3.0.3
TiDB Ansible 版本：3.0.3
TiDB  SQL 优化器  添加 opt_rule_blacklist 表，用于禁用一些逻辑优化规则，比如 aggregation_eliminate，column_prune 等 #11658 修复 Index join 的 join key 中使用前缀索引或者使用 unsigned 的索引列等于负数时结果不正确的问题 #11759 修复 create … binding ... 的 Select 语句中带有 ” 或者 \ 时解析报错的问题 #11726   SQL 执行引擎  修复 Quote 函数处理 null 值的返回值类型出错的问题 #11619 修复 Max 和 Min 在推导类型时没有去除 NotNullFlag 导致 ifnull 结果错误的问题 #11641 修复对字符形式的 Bit 类型数据比较出错的问题 #11660 减少需要顺序读取数据的并发度，以降低 OOM 出现概率 #11679 修复对应含有多个参数的内置函数（如 if、coalesce 等），在多个参数都为 unsigned 时类型推导不正确的问题 #11621 修复 Div 函数处理 unsigned 的 decimal 类型时与 MySQL 行为不兼容的问题 #11813 修复执行修改 Pump/Drainer 状态的 SQL 时会报 panic 的问题 #11827 修复在 Autocommit = 1 且没有 begin 的时，select .</description>
    </item>
    
    <item>
      <title>TiDB 3.0.3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/3.0.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/3.0.3/</guid>
      <description>TiDB 3.0.3 Release Notes 发版日期：2019 年 8 月 29 日
TiDB 版本：3.0.3
TiDB Ansible 版本：3.0.3
TiDB  SQL 优化器  添加 opt_rule_blacklist 表，用于禁用一些逻辑优化规则，比如 aggregation_eliminate，column_prune 等 #11658 修复 Index join 的 join key 中使用前缀索引或者使用 unsigned 的索引列等于负数时结果不正确的问题 #11759 修复 create … binding ... 的 Select 语句中带有 ” 或者 \ 时解析报错的问题 #11726   SQL 执行引擎  修复 Quote 函数处理 null 值的返回值类型出错的问题 #11619 修复 Max 和 Min 在推导类型时没有去除 NotNullFlag 导致 ifnull 结果错误的问题 #11641 修复对字符形式的 Bit 类型数据比较出错的问题 #11660 减少需要顺序读取数据的并发度，以降低 OOM 出现概率 #11679 修复对应含有多个参数的内置函数（如 if、coalesce 等），在多个参数都为 unsigned 时类型推导不正确的问题 #11621 修复 Div 函数处理 unsigned 的 decimal 类型时与 MySQL 行为不兼容的问题 #11813 修复执行修改 Pump/Drainer 状态的 SQL 时会报 panic 的问题 #11827 修复在 Autocommit = 1 且没有 begin 的时，select .</description>
    </item>
    
    <item>
      <title>TiDB 3.0.3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.0.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.0.3/</guid>
      <description>TiDB 3.0.3 Release Notes 发版日期：2019 年 8 月 29 日
TiDB 版本：3.0.3
TiDB Ansible 版本：3.0.3
TiDB  SQL 优化器  添加 opt_rule_blacklist 表，用于禁用一些逻辑优化规则，比如 aggregation_eliminate，column_prune 等 #11658 修复 Index join 的 join key 中使用前缀索引或者使用 unsigned 的索引列等于负数时结果不正确的问题 #11759 修复 create … binding ... 的 Select 语句中带有 ” 或者 \ 时解析报错的问题 #11726   SQL 执行引擎  修复 Quote 函数处理 null 值的返回值类型出错的问题 #11619 修复 Max 和 Min 在推导类型时没有去除 NotNullFlag 导致 ifnull 结果错误的问题 #11641 修复对字符形式的 Bit 类型数据比较出错的问题 #11660 减少需要顺序读取数据的并发度，以降低 OOM 出现概率 #11679 修复对应含有多个参数的内置函数（如 if、coalesce 等），在多个参数都为 unsigned 时类型推导不正确的问题 #11621 修复 Div 函数处理 unsigned 的 decimal 类型时与 MySQL 行为不兼容的问题 #11813 修复执行修改 Pump/Drainer 状态的 SQL 时会报 panic 的问题 #11827 修复在 Autocommit = 1 且没有 begin 的时，select .</description>
    </item>
    
    <item>
      <title>TiDB 3.0.3 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.0.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.0.3/</guid>
      <description>TiDB 3.0.3 Release Notes Release date: August 29, 2019
TiDB version: 3.0.3
TiDB Ansible version: 3.0.3
TiDB  SQL Optimizer  Add the opt_rule_blacklist table to disable logic optimization rules such as aggregation_eliminate and column_prune #11658 Fix the issue that incorrect results might be returned for Index Join when the join key uses a prefix index or an unsigned index column that is equal to a negative value #11759 Fix the issue that ” or \ in the SELECT statements of create … binding .</description>
    </item>
    
    <item>
      <title>TiDB 3.0.3 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/3.0.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/3.0.3/</guid>
      <description>TiDB 3.0.3 Release Notes Release date: August 29, 2019
TiDB version: 3.0.3
TiDB Ansible version: 3.0.3
TiDB  SQL Optimizer  Add the opt_rule_blacklist table to disable logic optimization rules such as aggregation_eliminate and column_prune #11658 Fix the issue that incorrect results might be returned for Index Join when the join key uses a prefix index or an unsigned index column that is equal to a negative value #11759 Fix the issue that ” or \ in the SELECT statements of create … binding .</description>
    </item>
    
    <item>
      <title>TiDB 3.0.3 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.0.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.0.3/</guid>
      <description>TiDB 3.0.3 Release Notes Release date: August 29, 2019
TiDB version: 3.0.3
TiDB Ansible version: 3.0.3
TiDB  SQL Optimizer  Add the opt_rule_blacklist table to disable logic optimization rules such as aggregation_eliminate and column_prune #11658 Fix the issue that incorrect results might be returned for Index Join when the join key uses a prefix index or an unsigned index column that is equal to a negative value #11759 Fix the issue that ” or \ in the SELECT statements of create … binding .</description>
    </item>
    
    <item>
      <title>TiDB 3.0.4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.0.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.0.4/</guid>
      <description>TiDB 3.0.4 Release Notes 发版日期：2019 年 10 月 8 日
TiDB 版本：3.0.4
TiDB Ansible 版本：3.0.4
  新特性
 新增系统表 performance_schema.events_statements_summary_by_digest，用于排查 SQL 级别的性能问题 TiDB 的 SHOW TABLE REGIONS 语法新增 WHERE 条件子句 Reparo 新增 worker-count 和 txn-batch 配置项，用于控制恢复速率    改进提升
 TiKV 支持批量 Split 和空的 Split 命令，使得 Split 可以批量进行 TiKV 添加 RocksDB 双向链表支持，提升逆序扫性能 Ansible 新增 iosnoop 和 funcslower 两个 perf 工具，方便诊断集群状态 TiDB 优化慢日志输出内容，删除冗余字段    行为变更
 TiDB 修改 txn-local-latches.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/3.0.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/3.0.4/</guid>
      <description>TiDB 3.0.4 Release Notes 发版日期：2019 年 10 月 8 日
TiDB 版本：3.0.4
TiDB Ansible 版本：3.0.4
  新特性
 新增系统表 performance_schema.events_statements_summary_by_digest，用于排查 SQL 级别的性能问题 TiDB 的 SHOW TABLE REGIONS 语法新增 WHERE 条件子句 Reparo 新增 worker-count 和 txn-batch 配置项，用于控制恢复速率    改进提升
 TiKV 支持批量 Split 和空的 Split 命令，使得 Split 可以批量进行 TiKV 添加 RocksDB 双向链表支持，提升逆序扫性能 Ansible 新增 iosnoop 和 funcslower 两个 perf 工具，方便诊断集群状态 TiDB 优化慢日志输出内容，删除冗余字段    行为变更
 TiDB 修改 txn-local-latches.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.0.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.0.4/</guid>
      <description>TiDB 3.0.4 Release Notes 发版日期：2019 年 10 月 8 日
TiDB 版本：3.0.4
TiDB Ansible 版本：3.0.4
  新特性
 新增系统表 performance_schema.events_statements_summary_by_digest，用于排查 SQL 级别的性能问题 TiDB 的 SHOW TABLE REGIONS 语法新增 WHERE 条件子句 Reparo 新增 worker-count 和 txn-batch 配置项，用于控制恢复速率    改进提升
 TiKV 支持批量 Split 和空的 Split 命令，使得 Split 可以批量进行 TiKV 添加 RocksDB 双向链表支持，提升逆序扫性能 Ansible 新增 iosnoop 和 funcslower 两个 perf 工具，方便诊断集群状态 TiDB 优化慢日志输出内容，删除冗余字段    行为变更
 TiDB 修改 txn-local-latches.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.4 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.0.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.0.4/</guid>
      <description>TiDB 3.0.4 Release Notes Release date: October 8, 2019
TiDB version: 3.0.4
TiDB Ansible version: 3.0.4
  New features
 Add the performance_schema.events_statements_summary_by_digest system table to troubleshoot performance issues at the SQL level Add the WHERE clause in TiDB’s SHOW TABLE REGIONS syntax Add the worker-count and txn-batch configuration items in Reparo to control the recovery speed    Improvements
 Support batch Region split command and empty split command in TiKV to improve split performance Support double linked list for RocksDB in TiKV to improve performance of reverse scan Add two perf tools iosnoop and funcslower in TiDB Ansible to better diagnose the cluster state Optimize the output of slow query logs in TiDB by deleting redundant fields    Changed behaviors</description>
    </item>
    
    <item>
      <title>TiDB 3.0.4 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/3.0.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/3.0.4/</guid>
      <description>TiDB 3.0.4 Release Notes Release date: October 8, 2019
TiDB version: 3.0.4
TiDB Ansible version: 3.0.4
  New features
 Add the performance_schema.events_statements_summary_by_digest system table to troubleshoot performance issues at the SQL level Add the WHERE clause in TiDB’s SHOW TABLE REGIONS syntax Add the worker-count and txn-batch configuration items in Reparo to control the recovery speed    Improvements
 Support batch Region split command and empty split command in TiKV to improve split performance Support double linked list for RocksDB in TiKV to improve performance of reverse scan Add two perf tools iosnoop and funcslower in TiDB Ansible to better diagnose the cluster state Optimize the output of slow query logs in TiDB by deleting redundant fields    Changed behaviors</description>
    </item>
    
    <item>
      <title>TiDB 3.0.4 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.0.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.0.4/</guid>
      <description>TiDB 3.0.4 Release Notes Release date: October 8, 2019
TiDB version: 3.0.4
TiDB Ansible version: 3.0.4
  New features
 Add the performance_schema.events_statements_summary_by_digest system table to troubleshoot performance issues at the SQL level Add the WHERE clause in TiDB’s SHOW TABLE REGIONS syntax Add the worker-count and txn-batch configuration items in Reparo to control the recovery speed    Improvements
 Support batch Region split command and empty split command in TiKV to improve split performance Support double linked list for RocksDB in TiKV to improve performance of reverse scan Add two perf tools iosnoop and funcslower in TiDB Ansible to better diagnose the cluster state Optimize the output of slow query logs in TiDB by deleting redundant fields    Changed behaviors</description>
    </item>
    
    <item>
      <title>TiDB 3.0.5 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.0.5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.0.5/</guid>
      <description>TiDB 3.0.5 Release Notes 发版日期：2019 年 10 月 25 日
TiDB 版本：3.0.5
TiDB Ansible 版本：3.0.5
TiDB  SQL 优化器  支持对 Window Functions 进行边界检查 #12404 修复 partition 表上的 IndexJoin 返回错误结果的问题 #12712 修复外连接 Apply 算子上层的 ifnull 函数返回错误结果的问题 #12694 修复当 UPDATE 的 where 条件中包含子查询时更新失败的问题 #12597 修复当查询条件中包含 cast 函数时 outer join 被错误转化为 inner join 的问题 #12790 修复 AntiSemiJoin 的 join 条件中错误的表达式传递 #12799 修复初始化统计信息时由于浅拷贝造成的统计信息出错问题 #12817 修复 TiDB 中 str_to_date 函数在日期字符串和格式化字符串不匹配的情况下，返回结果与 MySQL 不一致的问题 #12725   SQL 执行引擎  修复在 from_unixtime 函数处理 null 时发生 panic 的问题 #12551 修复 Admin Cancel DDL jobs 时报 invalid list index 错的问题 #12671 修复使用 Window Functions 时发生数组越界的问题 #12660 改进 AutoIncrement 列隐式分配时的行为，与 MySQL 自增锁的默认模式 (&amp;ldquo;consecutive&amp;rdquo; lock mode) 保持一致：对于单行 Insert 语句的多个自增 AutoIncrement ID 的隐式分配，TiDB 保证分配值的连续性。该改进保证 JDBC getGeneratedKeys() 方法在任意场景下都能得到正确的结果。#12602 修复当 HashAgg 作为 Apply 子节点时查询 hang 住的问题 #12766 修复逻辑表达式 AND 或 OR 在涉及类型转换时返回错误结果的问题 #12811   Server  实现修改事务 TTL 的接口函数，以助后续支持大事务 #12397 支持将事务的 TTL 按需延长（最长可到 10min），用于支持悲观事务 #12579 将 TiDB 缓存 schema 变更及相关表信息的次数从 100 调整为 1024，且支持通过 tidb_max_delta_schema_count 系统变量修改 #12502 更新了 kvrpc.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.5 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/3.0.5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/3.0.5/</guid>
      <description>TiDB 3.0.5 Release Notes 发版日期：2019 年 10 月 25 日
TiDB 版本：3.0.5
TiDB Ansible 版本：3.0.5
TiDB  SQL 优化器  支持对 Window Functions 进行边界检查 #12404 修复 partition 表上的 IndexJoin 返回错误结果的问题 #12712 修复外连接 Apply 算子上层的 ifnull 函数返回错误结果的问题 #12694 修复当 UPDATE 的 where 条件中包含子查询时更新失败的问题 #12597 修复当查询条件中包含 cast 函数时 outer join 被错误转化为 inner join 的问题 #12790 修复 AntiSemiJoin 的 join 条件中错误的表达式传递 #12799 修复初始化统计信息时由于浅拷贝造成的统计信息出错问题 #12817 修复 TiDB 中 str_to_date 函数在日期字符串和格式化字符串不匹配的情况下，返回结果与 MySQL 不一致的问题 #12725   SQL 执行引擎  修复在 from_unixtime 函数处理 null 时发生 panic 的问题 #12551 修复 Admin Cancel DDL jobs 时报 invalid list index 错的问题 #12671 修复使用 Window Functions 时发生数组越界的问题 #12660 改进 AutoIncrement 列隐式分配时的行为，与 MySQL 自增锁的默认模式 (&amp;ldquo;consecutive&amp;rdquo; lock mode) 保持一致：对于单行 Insert 语句的多个自增 AutoIncrement ID 的隐式分配，TiDB 保证分配值的连续性。该改进保证 JDBC getGeneratedKeys() 方法在任意场景下都能得到正确的结果。#12602 修复当 HashAgg 作为 Apply 子节点时查询 hang 住的问题 #12766 修复逻辑表达式 AND 或 OR 在涉及类型转换时返回错误结果的问题 #12811   Server  实现修改事务 TTL 的接口函数，以助后续支持大事务 #12397 支持将事务的 TTL 按需延长（最长可到 10min），用于支持悲观事务 #12579 将 TiDB 缓存 schema 变更及相关表信息的次数从 100 调整为 1024，且支持通过 tidb_max_delta_schema_count 系统变量修改 #12502 更新了 kvrpc.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.5 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.0.5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.0.5/</guid>
      <description>TiDB 3.0.5 Release Notes 发版日期：2019 年 10 月 25 日
TiDB 版本：3.0.5
TiDB Ansible 版本：3.0.5
TiDB  SQL 优化器  支持对 Window Functions 进行边界检查 #12404 修复 partition 表上的 IndexJoin 返回错误结果的问题 #12712 修复外连接 Apply 算子上层的 ifnull 函数返回错误结果的问题 #12694 修复当 UPDATE 的 where 条件中包含子查询时更新失败的问题 #12597 修复当查询条件中包含 cast 函数时 outer join 被错误转化为 inner join 的问题 #12790 修复 AntiSemiJoin 的 join 条件中错误的表达式传递 #12799 修复初始化统计信息时由于浅拷贝造成的统计信息出错问题 #12817 修复 TiDB 中 str_to_date 函数在日期字符串和格式化字符串不匹配的情况下，返回结果与 MySQL 不一致的问题 #12725   SQL 执行引擎  修复在 from_unixtime 函数处理 null 时发生 panic 的问题 #12551 修复 Admin Cancel DDL jobs 时报 invalid list index 错的问题 #12671 修复使用 Window Functions 时发生数组越界的问题 #12660 改进 AutoIncrement 列隐式分配时的行为，与 MySQL 自增锁的默认模式 (&amp;ldquo;consecutive&amp;rdquo; lock mode) 保持一致：对于单行 Insert 语句的多个自增 AutoIncrement ID 的隐式分配，TiDB 保证分配值的连续性。该改进保证 JDBC getGeneratedKeys() 方法在任意场景下都能得到正确的结果。#12602 修复当 HashAgg 作为 Apply 子节点时查询 hang 住的问题 #12766 修复逻辑表达式 AND 或 OR 在涉及类型转换时返回错误结果的问题 #12811   Server  实现修改事务 TTL 的接口函数，以助后续支持大事务 #12397 支持将事务的 TTL 按需延长（最长可到 10min），用于支持悲观事务 #12579 将 TiDB 缓存 schema 变更及相关表信息的次数从 100 调整为 1024，且支持通过 tidb_max_delta_schema_count 系统变量修改 #12502 更新了 kvrpc.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.5 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.0.5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.0.5/</guid>
      <description>TiDB 3.0.5 Release Notes Release date: October 25, 2019
TiDB version: 3.0.5
TiDB Ansible version: 3.0.5
TiDB  SQL Optimizer  Support boundary checking on Window Functions #12404 Fix the issue that IndexJoin on the partition table returns incorrect results #12712 Fix the issue that the ifnull function on the top of the outer join Apply operator returns incorrect results #12694 Fix the issue of update failure when a subquery was included in the where condition of UPDATE #12597 Fix the issue that outer join was incorrectly converted to inner join when the cast function was included in the query conditions #12790 Fix incorrect expression passing in the join condition of AntiSemiJoin #12799 Fix the statistics error caused by shallow copy when initializing statistics #12817 Fix the issue that the str_to_date function in TiDB returns a different result from MySQL when the date string and the format string do not match #12725   SQL Execution Engine  Fix the panic issue when the from_unixtime function handles null #12551 Fix the invalid list index error reported when canceling DDL jobs #12671 Fix the issue that arrays were out of bounds when Window Functions are used #12660 Improve the behavior of the AutoIncrement column when it is implicitly allocated, to keep it consistent with the default mode of MySQL auto-increment locking (&amp;ldquo;consecutive&amp;rdquo; lock mode): for the implicit allocation of multiple AutoIncrement IDs in a single-line Insert statement, TiDB guarantees the continuity of the allocated values.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.5 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/3.0.5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/3.0.5/</guid>
      <description>TiDB 3.0.5 Release Notes Release date: October 25, 2019
TiDB version: 3.0.5
TiDB Ansible version: 3.0.5
TiDB  SQL Optimizer  Support boundary checking on Window Functions #12404 Fix the issue that IndexJoin on the partition table returns incorrect results #12712 Fix the issue that the ifnull function on the top of the outer join Apply operator returns incorrect results #12694 Fix the issue of update failure when a subquery was included in the where condition of UPDATE #12597 Fix the issue that outer join was incorrectly converted to inner join when the cast function was included in the query conditions #12790 Fix incorrect expression passing in the join condition of AntiSemiJoin #12799 Fix the statistics error caused by shallow copy when initializing statistics #12817 Fix the issue that the str_to_date function in TiDB returns a different result from MySQL when the date string and the format string do not match #12725   SQL Execution Engine  Fix the panic issue when the from_unixtime function handles null #12551 Fix the invalid list index error reported when canceling DDL jobs #12671 Fix the issue that arrays were out of bounds when Window Functions are used #12660 Improve the behavior of the AutoIncrement column when it is implicitly allocated, to keep it consistent with the default mode of MySQL auto-increment locking (&amp;ldquo;consecutive&amp;rdquo; lock mode): for the implicit allocation of multiple AutoIncrement IDs in a single-line Insert statement, TiDB guarantees the continuity of the allocated values.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.5 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.0.5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.0.5/</guid>
      <description>TiDB 3.0.5 Release Notes Release date: October 25, 2019
TiDB version: 3.0.5
TiDB Ansible version: 3.0.5
TiDB  SQL Optimizer  Support boundary checking on Window Functions #12404 Fix the issue that IndexJoin on the partition table returns incorrect results #12712 Fix the issue that the ifnull function on the top of the outer join Apply operator returns incorrect results #12694 Fix the issue of update failure when a subquery was included in the where condition of UPDATE #12597 Fix the issue that outer join was incorrectly converted to inner join when the cast function was included in the query conditions #12790 Fix incorrect expression passing in the join condition of AntiSemiJoin #12799 Fix the statistics error caused by shallow copy when initializing statistics #12817 Fix the issue that the str_to_date function in TiDB returns a different result from MySQL when the date string and the format string do not match #12725   SQL Execution Engine  Fix the panic issue when the from_unixtime function handles null #12551 Fix the invalid list index error reported when canceling DDL jobs #12671 Fix the issue that arrays were out of bounds when Window Functions are used #12660 Improve the behavior of the AutoIncrement column when it is implicitly allocated, to keep it consistent with the default mode of MySQL auto-increment locking (&amp;ldquo;consecutive&amp;rdquo; lock mode): for the implicit allocation of multiple AutoIncrement IDs in a single-line Insert statement, TiDB guarantees the continuity of the allocated values.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.6 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.0.6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.0.6/</guid>
      <description>TiDB 3.0.6 Release Notes 发版日期：2019 年 11 月 28 日
TiDB 版本：3.0.6
TiDB Ansible 版本：3.0.6
TiDB  SQL 优化器  修复窗口函数 AST Restore SQL 文本后结果不正确问题，over w 不应被 restore 成 over (w) #12933 修复 stream aggregation 下推给 double read 的问题 #12690 修复 SQL bind 中引号处理不正确的问题 #13117 优化 select max(_tidb_rowid) from t 场景，避免全表扫 #13095 修复当查询语句中包含变量赋值表达式时查询结果不正确的问题 #13231 修复 UPDATE 语句中同时包含子查询和 generated column 时结果错误的问题；修复 UPDATE 语句中包含不同数据库的两个表名相同的表时，UPDATE 执行报错的问题 #13350 支持用 _tidb_rowid 做点查 #13416 修复分区表统计信息使用错误导致生成执行计划不正确的问题 #13628   SQL 执行引擎  修复 year 类型对于无效值的处理时和 MySQL 不兼容问题 #12745 在 INSERT ON DUPLICATE UPDATE 语句中复用 Chunk 以降低内存开销 #12998 添加内置函数 JSON_VALID 的支持 #13133 支持在分区表上执行 ADMIN CHECK TABLE #13140 修复对空表进行 FAST ANALYZE 时 panic 的问题 #13343 修复在包含多列索引的空表上执行 Fast Analyze 时 panic 的问题 #13394 修复当 WHERE 子句上有 UNIQUE KEY 的等值条件时，估算行数大于 1 的问题 #13382 修复当 TiDB 开启 Streaming 后返回数据有可能重复的问题 #13254 将 CMSketch 中出现次数最多的 N 个值抽取出来，提高估算准确度 #13429   Server  当 gRPC 请求超时时，提前让发往 TiKV 的请求失败 #12926 添加以下虚拟表：#13009  performance_schema.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.6 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/3.0.6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/3.0.6/</guid>
      <description>TiDB 3.0.6 Release Notes 发版日期：2019 年 11 月 28 日
TiDB 版本：3.0.6
TiDB Ansible 版本：3.0.6
TiDB  SQL 优化器  修复窗口函数 AST Restore SQL 文本后结果不正确问题，over w 不应被 restore 成 over (w) #12933 修复 stream aggregation 下推给 double read 的问题 #12690 修复 SQL bind 中引号处理不正确的问题 #13117 优化 select max(_tidb_rowid) from t 场景，避免全表扫 #13095 修复当查询语句中包含变量赋值表达式时查询结果不正确的问题 #13231 修复 UPDATE 语句中同时包含子查询和 generated column 时结果错误的问题；修复 UPDATE 语句中包含不同数据库的两个表名相同的表时，UPDATE 执行报错的问题 #13350 支持用 _tidb_rowid 做点查 #13416 修复分区表统计信息使用错误导致生成执行计划不正确的问题 #13628   SQL 执行引擎  修复 year 类型对于无效值的处理时和 MySQL 不兼容问题 #12745 在 INSERT ON DUPLICATE UPDATE 语句中复用 Chunk 以降低内存开销 #12998 添加内置函数 JSON_VALID 的支持 #13133 支持在分区表上执行 ADMIN CHECK TABLE #13140 修复对空表进行 FAST ANALYZE 时 panic 的问题 #13343 修复在包含多列索引的空表上执行 Fast Analyze 时 panic 的问题 #13394 修复当 WHERE 子句上有 UNIQUE KEY 的等值条件时，估算行数大于 1 的问题 #13382 修复当 TiDB 开启 Streaming 后返回数据有可能重复的问题 #13254 将 CMSketch 中出现次数最多的 N 个值抽取出来，提高估算准确度 #13429   Server  当 gRPC 请求超时时，提前让发往 TiKV 的请求失败 #12926 添加以下虚拟表：#13009  performance_schema.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.6 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.0.6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.0.6/</guid>
      <description>TiDB 3.0.6 Release Notes 发版日期：2019 年 11 月 28 日
TiDB 版本：3.0.6
TiDB Ansible 版本：3.0.6
TiDB  SQL 优化器  修复窗口函数 AST Restore SQL 文本后结果不正确问题，over w 不应被 restore 成 over (w) #12933 修复 stream aggregation 下推给 double read 的问题 #12690 修复 SQL bind 中引号处理不正确的问题 #13117 优化 select max(_tidb_rowid) from t 场景，避免全表扫 #13095 修复当查询语句中包含变量赋值表达式时查询结果不正确的问题 #13231 修复 UPDATE 语句中同时包含子查询和 generated column 时结果错误的问题；修复 UPDATE 语句中包含不同数据库的两个表名相同的表时，UPDATE 执行报错的问题 #13350 支持用 _tidb_rowid 做点查 #13416 修复分区表统计信息使用错误导致生成执行计划不正确的问题 #13628   SQL 执行引擎  修复 year 类型对于无效值的处理时和 MySQL 不兼容问题 #12745 在 INSERT ON DUPLICATE UPDATE 语句中复用 Chunk 以降低内存开销 #12998 添加内置函数 JSON_VALID 的支持 #13133 支持在分区表上执行 ADMIN CHECK TABLE #13140 修复对空表进行 FAST ANALYZE 时 panic 的问题 #13343 修复在包含多列索引的空表上执行 Fast Analyze 时 panic 的问题 #13394 修复当 WHERE 子句上有 UNIQUE KEY 的等值条件时，估算行数大于 1 的问题 #13382 修复当 TiDB 开启 Streaming 后返回数据有可能重复的问题 #13254 将 CMSketch 中出现次数最多的 N 个值抽取出来，提高估算准确度 #13429   Server  当 gRPC 请求超时时，提前让发往 TiKV 的请求失败 #12926 添加以下虚拟表：#13009  performance_schema.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.6 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.0.6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.0.6/</guid>
      <description>TiDB 3.0.6 Release Notes Release date: November 28, 2019
TiDB version: 3.0.6
TiDB Ansible version: 3.0.6
TiDB  SQL Optimizer  Fix the issue that the result is incorrect after the window function AST restores SQL text, for example, over w being mistakenly restored to over (w) #12933 Fix the issue of pushing down STREAM AGG() to doubleRead #12690 Fix the issue that quotes are incorrectly handled for SQL binding #13117 Optimize the select max(_tidb_rowid) from t scenario to avoid full table scans #13095 Fix the issue that the query result is incorrect when the query statement contains a variable assignment expression #13231 Fix the issue that the result is incorrect when the UPDATE statement contains both a sub-query and a generated column; fix the UPDATE statement execution error when this statement contains two same-named tables from different source databases #13350 Support _tidb_rowid for point queries #13416 Fix the issue that the generated query execution plan is incorrect, caused by incorrect usage of partitioned table statistics #13628   SQL Execution Engine  Fix the issue that TiDB is incompatible with MySQL when handling invalid values of the year type #12745 Reuse Chunk in the INSERT ON DUPLICATE UPDATE statement to reduce the memory overhead #12998 Add the support for the JSON_VALID built-in function #13133 Support executing ADMIN CHECK TABLE on partitioned tables #13140 Fix the panic issue when FAST ANALYZE is executed on empty tables #13343 Fix the panic issue when executing FAST ANALYZE on an empty table that contains multi-column indexes #13394 Fix the issue that the estimated number of rows is greater than 1 when the WHERE clause contains an equal condition on the unique key #13382 Fix the issue that the returned data might be duplicated when Streaming is enabled in TiDB #13254 Extract the top N values from the count-min sketch to improve the estimation accuracy #13429   Server  Make requests sent to TiKV fail quickly when the gRPC dial times out #12926 Add the following virtual tables: #13009  performance_schema.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.6 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/3.0.6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/3.0.6/</guid>
      <description>TiDB 3.0.6 Release Notes Release date: November 28, 2019
TiDB version: 3.0.6
TiDB Ansible version: 3.0.6
TiDB  SQL Optimizer  Fix the issue that the result is incorrect after the window function AST restores SQL text, for example, over w being mistakenly restored to over (w) #12933 Fix the issue of pushing down STREAM AGG() to doubleRead #12690 Fix the issue that quotes are incorrectly handled for SQL binding #13117 Optimize the select max(_tidb_rowid) from t scenario to avoid full table scans #13095 Fix the issue that the query result is incorrect when the query statement contains a variable assignment expression #13231 Fix the issue that the result is incorrect when the UPDATE statement contains both a sub-query and a generated column; fix the UPDATE statement execution error when this statement contains two same-named tables from different source databases #13350 Support _tidb_rowid for point queries #13416 Fix the issue that the generated query execution plan is incorrect, caused by incorrect usage of partitioned table statistics #13628   SQL Execution Engine  Fix the issue that TiDB is incompatible with MySQL when handling invalid values of the year type #12745 Reuse Chunk in the INSERT ON DUPLICATE UPDATE statement to reduce the memory overhead #12998 Add the support for the JSON_VALID built-in function #13133 Support executing ADMIN CHECK TABLE on partitioned tables #13140 Fix the panic issue when FAST ANALYZE is executed on empty tables #13343 Fix the panic issue when executing FAST ANALYZE on an empty table that contains multi-column indexes #13394 Fix the issue that the estimated number of rows is greater than 1 when the WHERE clause contains an equal condition on the unique key #13382 Fix the issue that the returned data might be duplicated when Streaming is enabled in TiDB #13254 Extract the top N values from the count-min sketch to improve the estimation accuracy #13429   Server  Make requests sent to TiKV fail quickly when the gRPC dial times out #12926 Add the following virtual tables: #13009  performance_schema.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.6 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.0.6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.0.6/</guid>
      <description>TiDB 3.0.6 Release Notes Release date: November 28, 2019
TiDB version: 3.0.6
TiDB Ansible version: 3.0.6
TiDB  SQL Optimizer  Fix the issue that the result is incorrect after the window function AST restores SQL text, for example, over w being mistakenly restored to over (w) #12933 Fix the issue of pushing down STREAM AGG() to doubleRead #12690 Fix the issue that quotes are incorrectly handled for SQL binding #13117 Optimize the select max(_tidb_rowid) from t scenario to avoid full table scans #13095 Fix the issue that the query result is incorrect when the query statement contains a variable assignment expression #13231 Fix the issue that the result is incorrect when the UPDATE statement contains both a sub-query and a generated column; fix the UPDATE statement execution error when this statement contains two same-named tables from different source databases #13350 Support _tidb_rowid for point queries #13416 Fix the issue that the generated query execution plan is incorrect, caused by incorrect usage of partitioned table statistics #13628   SQL Execution Engine  Fix the issue that TiDB is incompatible with MySQL when handling invalid values of the year type #12745 Reuse Chunk in the INSERT ON DUPLICATE UPDATE statement to reduce the memory overhead #12998 Add the support for the JSON_VALID built-in function #13133 Support executing ADMIN CHECK TABLE on partitioned tables #13140 Fix the panic issue when FAST ANALYZE is executed on empty tables #13343 Fix the panic issue when executing FAST ANALYZE on an empty table that contains multi-column indexes #13394 Fix the issue that the estimated number of rows is greater than 1 when the WHERE clause contains an equal condition on the unique key #13382 Fix the issue that the returned data might be duplicated when Streaming is enabled in TiDB #13254 Extract the top N values from the count-min sketch to improve the estimation accuracy #13429   Server  Make requests sent to TiKV fail quickly when the gRPC dial times out #12926 Add the following virtual tables: #13009  performance_schema.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.7 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.0.7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.0.7/</guid>
      <description>TiDB 3.0.7 Release Notes 发版日期：2019 年 12 月 4 日
TiDB 版本：3.0.7
TiDB Ansible 版本：3.0.7
TiDB  修复 TiDB server 本地时间落后于 TSO 时间时，可能造成锁的 TTL 过大的问题 #13868 修复从字符串解析日期时，由于使用本地时区 (gotime.Local) 而导致解析结果的时区不正确的问题 #13793 修复 builtinIntervalRealSig 的实现中，binSearch 方法不会返回 error，导致最终结果可能不正确的问题 #13767 修复整型数据被转换为无符号浮点/Decimal 类型时，精度可能丢失造成数据错误的问题 #13755 修复 Natural Outer Join 和 Outer Join 使用 USING 语法时，not null 标记没有被重置导致结果错误的问题 #13739 修复更新统计信息时可能存在数据竞争，导致统计信息不准确的问题 #13687  TiKV  判断死锁检测服务的第一个 Region 时，加上 Region 合法检测，防止信息不完整的 Region 导致误判 #6110 修复潜在的内存泄漏问题 #6128  </description>
    </item>
    
    <item>
      <title>TiDB 3.0.7 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/3.0.7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/3.0.7/</guid>
      <description>TiDB 3.0.7 Release Notes 发版日期：2019 年 12 月 4 日
TiDB 版本：3.0.7
TiDB Ansible 版本：3.0.7
TiDB  修复 TiDB server 本地时间落后于 TSO 时间时，可能造成锁的 TTL 过大的问题 #13868 修复从字符串解析日期时，由于使用本地时区 (gotime.Local) 而导致解析结果的时区不正确的问题 #13793 修复 builtinIntervalRealSig 的实现中，binSearch 方法不会返回 error，导致最终结果可能不正确的问题 #13767 修复整型数据被转换为无符号浮点/Decimal 类型时，精度可能丢失造成数据错误的问题 #13755 修复 Natural Outer Join 和 Outer Join 使用 USING 语法时，not null 标记没有被重置导致结果错误的问题 #13739 修复更新统计信息时可能存在数据竞争，导致统计信息不准确的问题 #13687  TiKV  判断死锁检测服务的第一个 Region 时，加上 Region 合法检测，防止信息不完整的 Region 导致误判 #6110 修复潜在的内存泄漏问题 #6128  </description>
    </item>
    
    <item>
      <title>TiDB 3.0.7 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.0.7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.0.7/</guid>
      <description>TiDB 3.0.7 Release Notes 发版日期：2019 年 12 月 4 日
TiDB 版本：3.0.7
TiDB Ansible 版本：3.0.7
TiDB  修复 TiDB server 本地时间落后于 TSO 时间时，可能造成锁的 TTL 过大的问题 #13868 修复从字符串解析日期时，由于使用本地时区 (gotime.Local) 而导致解析结果的时区不正确的问题 #13793 修复 builtinIntervalRealSig 的实现中，binSearch 方法不会返回 error，导致最终结果可能不正确的问题 #13767 修复整型数据被转换为无符号浮点/Decimal 类型时，精度可能丢失造成数据错误的问题 #13755 修复 Natural Outer Join 和 Outer Join 使用 USING 语法时，not null 标记没有被重置导致结果错误的问题 #13739 修复更新统计信息时可能存在数据竞争，导致统计信息不准确的问题 #13687  TiKV  判断死锁检测服务的第一个 Region 时，加上 Region 合法检测，防止信息不完整的 Region 导致误判 #6110 修复潜在的内存泄漏问题 #6128  </description>
    </item>
    
    <item>
      <title>TiDB 3.0.7 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.0.7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.0.7/</guid>
      <description>TiDB 3.0.7 Release Notes Release date: December 4, 2019
TiDB version: 3.0.7
TiDB Ansible version: 3.0.7
TiDB  Fix the issue that the lock TTL’s value is too large because the TiDB server’s local time is behind PD’s timestamp #13868 Fix the issue that the timezone is incorrect after parsing the date from strings using gotime.Local #13793 Fix the issue that the result might be incorrect because the binSearch function does not return an error in the implementation of builtinIntervalRealSig #13767 Fix the issue that data is incorrect because the precision is lost when an integer is converted to an unsigned floating point or decimal type #13755 Fix the issue that the result is incorrect because the not null flag is not properly reset when the USING clause is used in Natural Outer Join and Outer Join #13739 Fix the issue that the statistics are not accurate because a data race occurs when statistics are updated #13687  TiKV  Make the deadlock detector only observe valid Regions to make sure the deadlock manager is in a valid Region #6110 Fix a potential memory leak issue #6128  </description>
    </item>
    
    <item>
      <title>TiDB 3.0.7 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/3.0.7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/3.0.7/</guid>
      <description>TiDB 3.0.7 Release Notes Release date: December 4, 2019
TiDB version: 3.0.7
TiDB Ansible version: 3.0.7
TiDB  Fix the issue that the lock TTL’s value is too large because the TiDB server’s local time is behind PD’s timestamp #13868 Fix the issue that the timezone is incorrect after parsing the date from strings using gotime.Local #13793 Fix the issue that the result might be incorrect because the binSearch function does not return an error in the implementation of builtinIntervalRealSig #13767 Fix the issue that data is incorrect because the precision is lost when an integer is converted to an unsigned floating point or decimal type #13755 Fix the issue that the result is incorrect because the not null flag is not properly reset when the USING clause is used in Natural Outer Join and Outer Join #13739 Fix the issue that the statistics are not accurate because a data race occurs when statistics are updated #13687  TiKV  Make the deadlock detector only observe valid Regions to make sure the deadlock manager is in a valid Region #6110 Fix a potential memory leak issue #6128  </description>
    </item>
    
    <item>
      <title>TiDB 3.0.7 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.0.7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.0.7/</guid>
      <description>TiDB 3.0.7 Release Notes Release date: December 4, 2019
TiDB version: 3.0.7
TiDB Ansible version: 3.0.7
TiDB  Fix the issue that the lock TTL’s value is too large because the TiDB server’s local time is behind PD’s timestamp #13868 Fix the issue that the timezone is incorrect after parsing the date from strings using gotime.Local #13793 Fix the issue that the result might be incorrect because the binSearch function does not return an error in the implementation of builtinIntervalRealSig #13767 Fix the issue that data is incorrect because the precision is lost when an integer is converted to an unsigned floating point or decimal type #13755 Fix the issue that the result is incorrect because the not null flag is not properly reset when the USING clause is used in Natural Outer Join and Outer Join #13739 Fix the issue that the statistics are not accurate because a data race occurs when statistics are updated #13687  TiKV  Make the deadlock detector only observe valid Regions to make sure the deadlock manager is in a valid Region #6110 Fix a potential memory leak issue #6128  </description>
    </item>
    
    <item>
      <title>TiDB 3.0.8 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.0.8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.0.8/</guid>
      <description>TiDB 3.0.8 Release Notes 发版日期：2019 年 12 月 31 日
TiDB 版本：3.0.8
TiDB Ansible 版本：3.0.8
TiDB  SQL 优化器  修复 SQL Binding 因为 cache 更新不及时，导致绑定计划错误的问题 #13891 修复当 SQL 包含符号列表（类似于 &amp;ldquo;?, ?, ?&amp;rdquo; 这样的占位符）时，SQL Binding 可能失效的问题 #14004 修复 SQL Binding 由于原 SQL 以 ; 结尾而不能创建/删除的问题 #14113 修复 PhysicalUnionScan 算子没有正确设置统计信息，导致查询计划可能选错的问题 #14133 移除 minAutoAnalyzeRatio 约束使自动 analyze 更及时 #14015   SQL 执行引擎  修复 INSERT/REPLACE/UPDATE ... SET ... = DEFAULT 语法会报错的问题，修复 DEFAULT 表达式与虚拟生成列配合使用会报错的问题 #13682 修复 INSERT 语句在进行字符串类型到浮点类型转换时，可能会报错的问题 #14011 修复 HashAgg Executor 并发值未被正确初始化，导致聚合操作执行在一些情况下效率低的问题 #13811 修复 group by item 被括号包含时执行报错的问题 #13658 修复 TiDB 没有正确计算 group by item，导致某些情况下 OUTER JOIN 执行会报错的问题 #14014 修复向 Range 分区表写入超过 Range 外的数据时，报错信息不准确的问题 #14107 鉴于 MySQL 8 即将废弃 PadCharToFullLength，revert PR #10124 并撤销 PadCharToFullLength 的效果，以避免一些特殊情况下查询结果不符合预期 #14157 修复 ExplainExec 中没有保证 close() 的调用而导致 EXPLAIN ANALYZE 时造成 goroutine 泄露的问题 #14226   DDL  优化 &amp;ldquo;change column&amp;rdquo;/&amp;ldquo;modify column&amp;rdquo; 的输出的报错信息，让人更容易理解 #13796 新增 SPLIT PARTITION TABLE 语法，支持分区表切分 Region 功能 #13929 修复创建索引时，没有正确检查长度，导致索引长度超过 3072 字节没有报错的问题 #13779 修复由于分区表添加索引时若花费时间过长，可能导致输出 GC life time is shorter than transaction duration 报错信息的问题 #14132 修复在 DROP COLUMN/MODIFY COLUMN/CHANGE COLUMN 时没有检查外键导致执行 SELECT * FROM information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.8 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/3.0.8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/3.0.8/</guid>
      <description>TiDB 3.0.8 Release Notes 发版日期：2019 年 12 月 31 日
TiDB 版本：3.0.8
TiDB Ansible 版本：3.0.8
TiDB  SQL 优化器  修复 SQL Binding 因为 cache 更新不及时，导致绑定计划错误的问题 #13891 修复当 SQL 包含符号列表（类似于 &amp;ldquo;?, ?, ?&amp;rdquo; 这样的占位符）时，SQL Binding 可能失效的问题 #14004 修复 SQL Binding 由于原 SQL 以 ; 结尾而不能创建/删除的问题 #14113 修复 PhysicalUnionScan 算子没有正确设置统计信息，导致查询计划可能选错的问题 #14133 移除 minAutoAnalyzeRatio 约束使自动 analyze 更及时 #14015   SQL 执行引擎  修复 INSERT/REPLACE/UPDATE ... SET ... = DEFAULT 语法会报错的问题，修复 DEFAULT 表达式与虚拟生成列配合使用会报错的问题 #13682 修复 INSERT 语句在进行字符串类型到浮点类型转换时，可能会报错的问题 #14011 修复 HashAgg Executor 并发值未被正确初始化，导致聚合操作执行在一些情况下效率低的问题 #13811 修复 group by item 被括号包含时执行报错的问题 #13658 修复 TiDB 没有正确计算 group by item，导致某些情况下 OUTER JOIN 执行会报错的问题 #14014 修复向 Range 分区表写入超过 Range 外的数据时，报错信息不准确的问题 #14107 鉴于 MySQL 8 即将废弃 PadCharToFullLength，revert PR #10124 并撤销 PadCharToFullLength 的效果，以避免一些特殊情况下查询结果不符合预期 #14157 修复 ExplainExec 中没有保证 close() 的调用而导致 EXPLAIN ANALYZE 时造成 goroutine 泄露的问题 #14226   DDL  优化 &amp;ldquo;change column&amp;rdquo;/&amp;ldquo;modify column&amp;rdquo; 的输出的报错信息，让人更容易理解 #13796 新增 SPLIT PARTITION TABLE 语法，支持分区表切分 Region 功能 #13929 修复创建索引时，没有正确检查长度，导致索引长度超过 3072 字节没有报错的问题 #13779 修复由于分区表添加索引时若花费时间过长，可能导致输出 GC life time is shorter than transaction duration 报错信息的问题 #14132 修复在 DROP COLUMN/MODIFY COLUMN/CHANGE COLUMN 时没有检查外键导致执行 SELECT * FROM information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.8 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.0.8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.0.8/</guid>
      <description>TiDB 3.0.8 Release Notes 发版日期：2019 年 12 月 31 日
TiDB 版本：3.0.8
TiDB Ansible 版本：3.0.8
TiDB  SQL 优化器  修复 SQL Binding 因为 cache 更新不及时，导致绑定计划错误的问题 #13891 修复当 SQL 包含符号列表（类似于 &amp;ldquo;?, ?, ?&amp;rdquo; 这样的占位符）时，SQL Binding 可能失效的问题 #14004 修复 SQL Binding 由于原 SQL 以 ; 结尾而不能创建/删除的问题 #14113 修复 PhysicalUnionScan 算子没有正确设置统计信息，导致查询计划可能选错的问题 #14133 移除 minAutoAnalyzeRatio 约束使自动 analyze 更及时 #14015   SQL 执行引擎  修复 INSERT/REPLACE/UPDATE ... SET ... = DEFAULT 语法会报错的问题，修复 DEFAULT 表达式与虚拟生成列配合使用会报错的问题 #13682 修复 INSERT 语句在进行字符串类型到浮点类型转换时，可能会报错的问题 #14011 修复 HashAgg Executor 并发值未被正确初始化，导致聚合操作执行在一些情况下效率低的问题 #13811 修复 group by item 被括号包含时执行报错的问题 #13658 修复 TiDB 没有正确计算 group by item，导致某些情况下 OUTER JOIN 执行会报错的问题 #14014 修复向 Range 分区表写入超过 Range 外的数据时，报错信息不准确的问题 #14107 鉴于 MySQL 8 即将废弃 PadCharToFullLength，revert PR #10124 并撤销 PadCharToFullLength 的效果，以避免一些特殊情况下查询结果不符合预期 #14157 修复 ExplainExec 中没有保证 close() 的调用而导致 EXPLAIN ANALYZE 时造成 goroutine 泄露的问题 #14226   DDL  优化 &amp;ldquo;change column&amp;rdquo;/&amp;ldquo;modify column&amp;rdquo; 的输出的报错信息，让人更容易理解 #13796 新增 SPLIT PARTITION TABLE 语法，支持分区表切分 Region 功能 #13929 修复创建索引时，没有正确检查长度，导致索引长度超过 3072 字节没有报错的问题 #13779 修复由于分区表添加索引时若花费时间过长，可能导致输出 GC life time is shorter than transaction duration 报错信息的问题 #14132 修复在 DROP COLUMN/MODIFY COLUMN/CHANGE COLUMN 时没有检查外键导致执行 SELECT * FROM information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.8 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.0.8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.0.8/</guid>
      <description>TiDB 3.0.8 Release Notes Release date: December 31, 2019
TiDB version: 3.0.8
TiDB Ansible version: 3.0.8
TiDB  SQL Optimizer  Fix the wrong SQL binding plan caused by untimely cache updates #13891 Fix the issue that the SQL binding might be invalid when an SQL statement contains a symbol list #14004 Fix the issue that an SQL binding cannot be created or deleted because an SQL statement ends with ; #14113 Fix the issue that a wrong SQL query plan might be selected because the PhysicalUnionScan operator sets wrong statistics #14133 Remove the minAutoAnalyzeRatio restriction to make autoAnalyze more timely #14015   SQL Execution Engine  Fix issues that the INSERT/REPLACE/UPDATE .</description>
    </item>
    
    <item>
      <title>TiDB 3.0.8 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/3.0.8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/3.0.8/</guid>
      <description>TiDB 3.0.8 Release Notes Release date: December 31, 2019
TiDB version: 3.0.8
TiDB Ansible version: 3.0.8
TiDB  SQL Optimizer  Fix the wrong SQL binding plan caused by untimely cache updates #13891 Fix the issue that the SQL binding might be invalid when an SQL statement contains a symbol list #14004 Fix the issue that an SQL binding cannot be created or deleted because an SQL statement ends with ; #14113 Fix the issue that a wrong SQL query plan might be selected because the PhysicalUnionScan operator sets wrong statistics #14133 Remove the minAutoAnalyzeRatio restriction to make autoAnalyze more timely #14015   SQL Execution Engine  Fix issues that the INSERT/REPLACE/UPDATE .</description>
    </item>
    
    <item>
      <title>TiDB 3.0.8 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.0.8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.0.8/</guid>
      <description>TiDB 3.0.8 Release Notes Release date: December 31, 2019
TiDB version: 3.0.8
TiDB Ansible version: 3.0.8
TiDB  SQL Optimizer  Fix the wrong SQL binding plan caused by untimely cache updates #13891 Fix the issue that the SQL binding might be invalid when an SQL statement contains a symbol list #14004 Fix the issue that an SQL binding cannot be created or deleted because an SQL statement ends with ; #14113 Fix the issue that a wrong SQL query plan might be selected because the PhysicalUnionScan operator sets wrong statistics #14133 Remove the minAutoAnalyzeRatio restriction to make autoAnalyze more timely #14015   SQL Execution Engine  Fix issues that the INSERT/REPLACE/UPDATE .</description>
    </item>
    
    <item>
      <title>TiDB 3.0.9 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.0.9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.0.9/</guid>
      <description>TiDB 3.0.9 Release Notes 发版日期：2020 年 01 月 14 日
TiDB 版本：3.0.9
TiDB Ansible 版本：3.0.9
TiDB  Executor  修复聚合函数作用于枚举和集合列时结果不正确的问题 #14364   Server  支持系统变量 auto_increment_increment 和 auto_increment_offset #14396 新增 tidb_tikvclient_ttl_lifetime_reach_total 监控项，监控悲观事务 TTL 达到 10 分钟的数量 #14300 执行 SQL 过程中当发生 panic 时输出导致 panic 的 SQL 信息 #14322 statement summary 系统表新增 plan 和 plan_digest 字段，记录当前正在执行的 plan 和 plan 的签名 #14285 配置项 stmt-summary.max-stmt-count 的默认值从 100 调整至 200 #14285 slow query 表新增 plan_digest 字段，记录 plan 的签名 #14292   DDL  修复 alter table .</description>
    </item>
    
    <item>
      <title>TiDB 3.0.9 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/3.0.9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/3.0.9/</guid>
      <description>TiDB 3.0.9 Release Notes 发版日期：2020 年 01 月 14 日
TiDB 版本：3.0.9
TiDB Ansible 版本：3.0.9
TiDB  Executor  修复聚合函数作用于枚举和集合列时结果不正确的问题 #14364   Server  支持系统变量 auto_increment_increment 和 auto_increment_offset #14396 新增 tidb_tikvclient_ttl_lifetime_reach_total 监控项，监控悲观事务 TTL 达到 10 分钟的数量 #14300 执行 SQL 过程中当发生 panic 时输出导致 panic 的 SQL 信息 #14322 statement summary 系统表新增 plan 和 plan_digest 字段，记录当前正在执行的 plan 和 plan 的签名 #14285 配置项 stmt-summary.max-stmt-count 的默认值从 100 调整至 200 #14285 slow query 表新增 plan_digest 字段，记录 plan 的签名 #14292   DDL  修复 alter table .</description>
    </item>
    
    <item>
      <title>TiDB 3.0.9 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.0.9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.0.9/</guid>
      <description>TiDB 3.0.9 Release Notes 发版日期：2020 年 01 月 14 日
TiDB 版本：3.0.9
TiDB Ansible 版本：3.0.9
TiDB  Executor  修复聚合函数作用于枚举和集合列时结果不正确的问题 #14364   Server  支持系统变量 auto_increment_increment 和 auto_increment_offset #14396 新增 tidb_tikvclient_ttl_lifetime_reach_total 监控项，监控悲观事务 TTL 达到 10 分钟的数量 #14300 执行 SQL 过程中当发生 panic 时输出导致 panic 的 SQL 信息 #14322 statement summary 系统表新增 plan 和 plan_digest 字段，记录当前正在执行的 plan 和 plan 的签名 #14285 配置项 stmt-summary.max-stmt-count 的默认值从 100 调整至 200 #14285 slow query 表新增 plan_digest 字段，记录 plan 的签名 #14292   DDL  修复 alter table .</description>
    </item>
    
    <item>
      <title>TiDB 3.0.9 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.0.9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.0.9/</guid>
      <description>TiDB 3.0.9 Release Notes Release date: January 14, 2020
TiDB version: 3.0.9
TiDB Ansible version: 3.0.9
TiDB  Executor  Fix the incorrect result when the aggregate function is applied to the ENUM column and the collection column #14364   Server  Support the auto_increment_increment and auto_increment_offset system variables #14396 Add the tidb_tikvclient_ttl_lifetime_reach_total monitoring metric to monitor the number of pessimistic transactions with a TTL of 10 minutes #14300 Output the SQL information in the log when the SQL query causes a panic during its execution #14322 Add the plan and plan_digest fields in the statement summary table to record the plan that is being executed and the plan signature #14285 Adjust the default value of the stmt-summary.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.9 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/3.0.9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/3.0.9/</guid>
      <description>TiDB 3.0.9 Release Notes Release date: January 14, 2020
TiDB version: 3.0.9
TiDB Ansible version: 3.0.9
TiDB  Executor  Fix the incorrect result when the aggregate function is applied to the ENUM column and the collection column #14364   Server  Support the auto_increment_increment and auto_increment_offset system variables #14396 Add the tidb_tikvclient_ttl_lifetime_reach_total monitoring metric to monitor the number of pessimistic transactions with a TTL of 10 minutes #14300 Output the SQL information in the log when the SQL query causes a panic during its execution #14322 Add the plan and plan_digest fields in the statement summary table to record the plan that is being executed and the plan signature #14285 Adjust the default value of the stmt-summary.</description>
    </item>
    
    <item>
      <title>TiDB 3.0.9 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.0.9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.0.9/</guid>
      <description>TiDB 3.0.9 Release Notes Release date: January 14, 2020
TiDB version: 3.0.9
TiDB Ansible version: 3.0.9
TiDB  Executor  Fix the incorrect result when the aggregate function is applied to the ENUM column and the collection column #14364   Server  Support the auto_increment_increment and auto_increment_offset system variables #14396 Add the tidb_tikvclient_ttl_lifetime_reach_total monitoring metric to monitor the number of pessimistic transactions with a TTL of 10 minutes #14300 Output the SQL information in the log when the SQL query causes a panic during its execution #14322 Add the plan and plan_digest fields in the statement summary table to record the plan that is being executed and the plan signature #14285 Adjust the default value of the stmt-summary.</description>
    </item>
    
    <item>
      <title>TiDB 3.1 Beta Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.1.0-beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.1.0-beta/</guid>
      <description>TiDB 3.1 Beta Release Notes 发版日期：2019 年 12 月 20 日
TiDB 版本：3.1.0-beta
TiDB Ansible 版本：3.1.0-beta
TiDB  SQL 优化器  丰富 SQL hint #12192   新功能  TiDB 支持 Follower Read 功能 #12535    TiKV  支持分布式备份恢复功能 #5532 TiKV 支持 Follower Read 功能 #5562  PD  支持分布式备份恢复功能 #1896  </description>
    </item>
    
    <item>
      <title>TiDB 3.1 Beta Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.1.0-beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.1.0-beta/</guid>
      <description>TiDB 3.1 Beta Release Notes 发版日期：2019 年 12 月 20 日
TiDB 版本：3.1.0-beta
TiDB Ansible 版本：3.1.0-beta
TiDB  SQL 优化器  丰富 SQL hint #12192   新功能  TiDB 支持 Follower Read 功能 #12535    TiKV  支持分布式备份恢复功能 #5532 TiKV 支持 Follower Read 功能 #5562  PD  支持分布式备份恢复功能 #1896  </description>
    </item>
    
    <item>
      <title>TiDB 3.1 Beta Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.1.0-beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.1.0-beta/</guid>
      <description>TiDB 3.1 Beta Release Notes Release date: December 20, 2019
TiDB version: 3.1.0-beta
TiDB Ansible version: 3.1.0-beta
TiDB  SQL Optimizer  Enrich SQL hints #12192   New feature  Support the Follower Read feature #12535    TiKV  Support the distributed backup and restore feature #5532 Support the Follower Read feature #5562  PD  Support the distributed backup and restore feature #1896  </description>
    </item>
    
    <item>
      <title>TiDB 3.1 Beta Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.1.0-beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.1.0-beta/</guid>
      <description>TiDB 3.1 Beta Release Notes Release date: December 20, 2019
TiDB version: 3.1.0-beta
TiDB Ansible version: 3.1.0-beta
TiDB  SQL Optimizer  Enrich SQL hints #12192   New feature  Support the Follower Read feature #12535    TiKV  Support the distributed backup and restore feature #5532 Support the Follower Read feature #5562  PD  Support the distributed backup and restore feature #1896  </description>
    </item>
    
    <item>
      <title>TiDB 3.1 Beta.1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.1.0-beta.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.1.0-beta.1/</guid>
      <description>TiDB 3.1 Beta.1 Release Notes 发版日期：2020 年 1 月 10 日
TiDB 版本：3.1.0-beta.1
TiDB Ansible 版本：3.1.0-beta.1
TiKV  backup  备份文件的名称由 start_key 改为 start_key 的 hash 值，减少文件名的长度，方便阅读 #6198 关闭 RocksDB force_consistency_checks 检查功能，避免一致性检查误报的问题 #6249 新增增量备份功能 #6286   sst_importer  修复恢复后 SST 文件没有 MVCC Properties 的问题 #6378 新增 tikv_import_download_duration、tikv_import_download_bytes、tikv_import_ingest_duration、tikv_import_ingest_bytes、tikv_import_error_counter 等监控项，用于观察 Download SST 和 Ingest SST 的开销 #6404   raftstore  修复因 Follower Read 在 leader 变更时读到旧数据的问题，导致事务的隔离性被破坏的问题 #6343    Tools  BR (Backup and Restore)  修复备份进度信息不准确的问题 #127 提升 split Region 的性能 #122 新增备份恢复分区表的功能 #137 新增自动调度 PD schedulers 功能 #123 修复非 PKIsHandle 表恢复后数据覆盖的问题 #139    TiDB Ansible  新增初始化阶段自动关闭操作系统 THP 的功能 #1086 新增 BR 组件的 Grafana 监控 #1093 优化 TiDB Lightning 部署，自动创建相关目录 #1104  </description>
    </item>
    
    <item>
      <title>TiDB 3.1 Beta.1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.1.0-beta.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.1.0-beta.1/</guid>
      <description>TiDB 3.1 Beta.1 Release Notes 发版日期：2020 年 1 月 10 日
TiDB 版本：3.1.0-beta.1
TiDB Ansible 版本：3.1.0-beta.1
TiKV  backup  备份文件的名称由 start_key 改为 start_key 的 hash 值，减少文件名的长度，方便阅读 #6198 关闭 RocksDB force_consistency_checks 检查功能，避免一致性检查误报的问题 #6249 新增增量备份功能 #6286   sst_importer  修复恢复后 SST 文件没有 MVCC Properties 的问题 #6378 新增 tikv_import_download_duration、tikv_import_download_bytes、tikv_import_ingest_duration、tikv_import_ingest_bytes、tikv_import_error_counter 等监控项，用于观察 Download SST 和 Ingest SST 的开销 #6404   raftstore  修复因 Follower Read 在 leader 变更时读到旧数据的问题，导致事务的隔离性被破坏的问题 #6343    Tools  BR (Backup and Restore)  修复备份进度信息不准确的问题 #127 提升 split Region 的性能 #122 新增备份恢复分区表的功能 #137 新增自动调度 PD schedulers 功能 #123 修复非 PKIsHandle 表恢复后数据覆盖的问题 #139    TiDB Ansible  新增初始化阶段自动关闭操作系统 THP 的功能 #1086 新增 BR 组件的 Grafana 监控 #1093 优化 TiDB Lightning 部署，自动创建相关目录 #1104  </description>
    </item>
    
    <item>
      <title>TiDB 3.1 Beta.1 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.1.0-beta.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.1.0-beta.1/</guid>
      <description>TiDB 3.1 Beta.1 Release Notes Release date: January 10, 2020
TiDB version: 3.1.0-beta.1
TiDB Ansible version: 3.1.0-beta.1
TiKV   backup
 Change the name of the backup file from start_key to the hash value of start_key to reduce the file name&#39;s length for easy reading #6198 Disable RocksDB&#39;s force_consistency_checks check to avoid false positives in the consistency check #6249 Add the incremental backup feature #6286    sst_importer</description>
    </item>
    
    <item>
      <title>TiDB 3.1 Beta.1 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.1.0-beta.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.1.0-beta.1/</guid>
      <description>TiDB 3.1 Beta.1 Release Notes Release date: January 10, 2020
TiDB version: 3.1.0-beta.1
TiDB Ansible version: 3.1.0-beta.1
TiKV   backup
 Change the name of the backup file from start_key to the hash value of start_key to reduce the file name&#39;s length for easy reading #6198 Disable RocksDB&#39;s force_consistency_checks check to avoid false positives in the consistency check #6249 Add the incremental backup feature #6286    sst_importer</description>
    </item>
    
    <item>
      <title>TiDB 3.1 Beta.2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/3.1.0-beta.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/3.1.0-beta.2/</guid>
      <description>TiDB 3.1 Beta.2 Release Notes 发版日期：2020 年 3 月 9 日
TiDB 版本：3.1.0-beta.2
TiDB Ansible 版本：3.1.0-beta.2
TiDB 3.1.0-beta.2 兼容性变化  Tools  TiDB Lightning  优化配置项，部分配置项在没有进行配置的时候使用 TiDB Lightning 配置参数中的默认配置 #255 新增 --tidb-password 命令行参数，用于设置 TiDB 的密码 #253      新功能   TiDB
 支持在列属性上添加 AutoRandom 关键字，控制系统自动为主键分配随机整数，避免 AUTO_INCREMENT 自增主键带来的写入热点问题 #14555 新增通过 DDL 语句为表创建、删除列存储副本的功能 #14537 新增优化器可自主选择不同的存储引擎的功能 #14537 新增 SQL Hint 支持不同的存储引擎的功能 #14537 新增通过 tidb_replic_read 系统变量从 Follower 上读取数据的功能 #13464    TiKV</description>
    </item>
    
    <item>
      <title>TiDB 3.1 Beta.2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/3.1.0-beta.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/3.1.0-beta.2/</guid>
      <description>TiDB 3.1 Beta.2 Release Notes 发版日期：2020 年 3 月 9 日
TiDB 版本：3.1.0-beta.2
TiDB Ansible 版本：3.1.0-beta.2
TiDB 3.1.0-beta.2 兼容性变化  Tools  TiDB Lightning  优化配置项，部分配置项在没有进行配置的时候使用 TiDB Lightning 配置参数中的默认配置 #255 新增 --tidb-password 命令行参数，用于设置 TiDB 的密码 #253      新功能   TiDB
 支持在列属性上添加 AutoRandom 关键字，控制系统自动为主键分配随机整数，避免 AUTO_INCREMENT 自增主键带来的写入热点问题 #14555 新增通过 DDL 语句为表创建、删除列存储副本的功能 #14537 新增优化器可自主选择不同的存储引擎的功能 #14537 新增 SQL Hint 支持不同的存储引擎的功能 #14537 新增通过 tidb_replic_read 系统变量从 Follower 上读取数据的功能 #13464    TiKV</description>
    </item>
    
    <item>
      <title>TiDB 3.1 Beta.2 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/3.1.0-beta.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/3.1.0-beta.2/</guid>
      <description>TiDB 3.1 Beta.2 Release Notes Release date: March 9, 2020
TiDB version: 3.1.0-beta.2
TiDB Ansible version: 3.1.0-beta.2
TiDB 3.1.0-beta.2 Compatibility Changes  Tools  TiDB Lightning  Use the default configurations specified in the TiDB Lightning Configuration for certain items not configured in the configuration file #255 Add the --tidb-password CLI parameter to set the TiDB password #253      New Features  TiDB  Support adding the AutoRandom keyword in the column attribute to enable TiDB to automatically assign random integers to the primary key, which avoids the write hot spot caused by the AUTO_INCREMENT primary key #14555 Support creating or deleting column store replicas through DDL statements #14537 Add the feature that the optimizer can independently select different storage engines #14537 Add the feature that the SQL hint supports different storage engines #14537 Support reading data from followers by using the tidb_replica_read system variable #13464   TiKV  Raftstore  Add the peer_address parameter to connect other nodes to the TiKV server #6491 Add the read_index and read_index_resp monitoring metrics to monitor the number of ReadIndex requests #6610     PD Client  Support reporting statistics of local threads to PD #6605   Backup  Replace the RocksIOLimiter flow control library with Rust’s async-speed-limit flow control library to eliminate extra memory copies when backing up a file #6462   PD  Tolerate backslash in the location label name #2084   TiFlash  Initial release   TiDB Ansible  Support deploying multiple Grafana/Prometheus/Alertmanager in one cluster #1143 Support deploying the TiFlash component #1148 Add monitoring metrics related to the TiFlash component #1152    Bugfixes  TiKV  Raftstore  Fix the issue that the read requests cannot be processed because data is not properly read from Hibernate Regions #6450 Fix the panic issue caused by the ReadIndex requests during the leader transfer process #6613 Fix the issue that Hibernate Regions are not correctly awakened in some special conditions #6730 #6737 #6972   Backup  Fix the inconsistent data index during the restoration caused by the backup of the extra data #6659 Fix the panic caused by incorrectly processing the deleted values during the backup #6726     PD  Fix the panic occurred because the rule checker fails to assign stores to Regions #2161   Tools  TiDB Lightning  Fix the bug that the web interface does not work outside the Server mode #259   BR (Backup and Restore)  Fix the issue that BR cannot exit in time due to an unrecoverable error it encounters when restoring data #152     TiDB Ansible  Fix the issue that the rolling update command fails because the PD Leader cannot be obtained in some scenarios #1122    </description>
    </item>
    
    <item>
      <title>TiDB 3.1 Beta.2 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/3.1.0-beta.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/3.1.0-beta.2/</guid>
      <description>TiDB 3.1 Beta.2 Release Notes Release date: March 9, 2020
TiDB version: 3.1.0-beta.2
TiDB Ansible version: 3.1.0-beta.2
TiDB 3.1.0-beta.2 Compatibility Changes  Tools  TiDB Lightning  Use the default configurations specified in the TiDB Lightning Configuration for certain items not configured in the configuration file #255 Add the --tidb-password CLI parameter to set the TiDB password #253      New Features  TiDB  Support adding the AutoRandom keyword in the column attribute to enable TiDB to automatically assign random integers to the primary key, which avoids the write hot spot caused by the AUTO_INCREMENT primary key #14555 Support creating or deleting column store replicas through DDL statements #14537 Add the feature that the optimizer can independently select different storage engines #14537 Add the feature that the SQL hint supports different storage engines #14537 Support reading data from followers by using the tidb_replica_read system variable #13464   TiKV  Raftstore  Add the peer_address parameter to connect other nodes to the TiKV server #6491 Add the read_index and read_index_resp monitoring metrics to monitor the number of ReadIndex requests #6610     PD Client  Support reporting statistics of local threads to PD #6605   Backup  Replace the RocksIOLimiter flow control library with Rust’s async-speed-limit flow control library to eliminate extra memory copies when backing up a file #6462   PD  Tolerate backslash in the location label name #2084   TiFlash  Initial release   TiDB Ansible  Support deploying multiple Grafana/Prometheus/Alertmanager in one cluster #1143 Support deploying the TiFlash component #1148 Add monitoring metrics related to the TiFlash component #1152    Bugfixes  TiKV  Raftstore  Fix the issue that the read requests cannot be processed because data is not properly read from Hibernate Regions #6450 Fix the panic issue caused by the ReadIndex requests during the leader transfer process #6613 Fix the issue that Hibernate Regions are not correctly awakened in some special conditions #6730 #6737 #6972   Backup  Fix the inconsistent data index during the restoration caused by the backup of the extra data #6659 Fix the panic caused by incorrectly processing the deleted values during the backup #6726     PD  Fix the panic occurred because the rule checker fails to assign stores to Regions #2161   Tools  TiDB Lightning  Fix the bug that the web interface does not work outside the Server mode #259   BR (Backup and Restore)  Fix the issue that BR cannot exit in time due to an unrecoverable error it encounters when restoring data #152     TiDB Ansible  Fix the issue that the rolling update command fails because the PD Leader cannot be obtained in some scenarios #1122    </description>
    </item>
    
    <item>
      <title>TiDB 3.1 Upgrade Guide</title>
      <link>https://pingcap.com/docs/v3.1/how-to/upgrade/from-previous-version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/upgrade/from-previous-version/</guid>
      <description>Learn how to upgrade to TiDB 3.1 versions.</description>
    </item>
    
    <item>
      <title>TiDB 3.1 升级操作指南</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/upgrade/from-previous-version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/upgrade/from-previous-version/</guid>
      <description>TiDB 3.1 升级操作指南 本文档适用于从 TiDB 2.0、2.1、3.0 版本升级至 TiDB 3.1 版本以及 TiDB 3.1 低版本升级至 TiDB 3.1 高版本。目前，TiDB 3.1 版本兼容 TiDB Binlog Cluster 版本。
升级兼容性说明  不支持在升级后回退至 2.1.x 或更旧版本 从 2.0.6 之前的版本升级到 3.1 之前，需要确认集群中是否存在正在运行中的 DDL 操作，特别是耗时的 Add Index 操作，等 DDL 操作完成后再执行升级操作 2.1 及之后版本启用了并行 DDL，早于 2.0.1 版本的集群，无法滚动升级到 3.1，可以选择下面两种方案：  停机升级，直接从早于 2.0.1 的 TiDB 版本升级到 3.1 先滚动升级到 2.0.1 或者之后的 2.0.x 版本，再滚动升级到 3.1 版本     注意：
在升级的过程中不要执行 DDL 请求，否则可能会出现行为未定义的问题。
 在中控机器上安装 Ansible 及其依赖  注意：</description>
    </item>
    
    <item>
      <title>TiDB 4.0 Beta Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/4.0.0-beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/4.0.0-beta/</guid>
      <description>TiDB 4.0 Beta Release Notes 发版日期：2020 年 01 月 17 日
TiDB 版本：4.0.0-beta
TiDB Ansible 版本：4.0.0-beta
TiDB  当 Insert/Replace/Delete/Update 在执行过程中所使用的内存空间超过启动配置项 MemQuotaQuery 的限制时，输出日志或取消本次执行过程，具体行为取决于启动配置项 OOMAction #14179 #14289 #14299 估算 Index Join 的代价时由仅考虑驱动表的行数调整为考虑驱动表和被驱动表的行数，提升估算的准确性 #12085 新增 15 个 SQL hint，用于控制优化器行为，提升优化器稳定性  #11253 #11364 #11673 #11740 #11746 #11809 #11996 #12043 #12059 #12246 #12382   提升查询中所涉及到的列能被索引全覆盖时的性能 #12022 对表上的 OR 表达式过滤条件，使用多个索引组合进行表访问，提升查询性能 #10121 #10512 #11245 #12225 #12248 #12305 #12843 优化 Range 计算流程，缓存并去重索引计算的结果，减少 CPU 开销，提升 range 计算的性能 #12856 Slow Log 日志的级别与普通日志的级别解耦 #12359 新增 oom-use-tmp-storage 参数，默认值为 true，用于控制当单条 SQL 执行过程中占用内存使用超过 mem-quota-query 且 SQL 中包含 Hash Join 时，系统会采用临时文件来缓存中间结果 #11832 #11937 #12116 #12067 支持使用 create index/alter table add index 语句创建表达式索引，使用 drop index 语句删除表达式索引 #14117 query-log-max-len 参数默认值调大为 4096，减少输出被截断 SQL 的数量，此参数可通过 SQL 动态调整 #12491 支持在列属性上添加 AutoRandom 关键字，用于控制系统自动为主键分配随机整数，避免 AutoIncrement 自增主键带来的写入热点问题 #13127 支持表级锁 (Table Locks) #11038 ADMIN SHOW DDL JOBS 支持 LIKE 或 WHERE 语法进行条件过滤 #12484 information_schema.</description>
    </item>
    
    <item>
      <title>TiDB 4.0 Beta Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/4.0.0-beta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/4.0.0-beta/</guid>
      <description>TiDB 4.0 Beta Release Notes Release date: January 17, 2020
TiDB version: 4.0.0-beta
TiDB Ansible version: 4.0.0-beta
TiDB  Print the log or cancel the SQL execution when the memory used during the execution of INSERT/REPLACE/DELETE/UPDATE exceeds the limit specified by the MemQuotaQuery configuration item. The actual behavior depends on the OOMAction configuration. #14179 #14289 #14299 Increase the accuracy of calculating the cost of Index Join by considering the row counts of both driving tables and driven tables #12085 Add 15 SQL hints to control the behavior of the optimizer and make the optimizer more stable  #11253 #11364 #11673 #11740 #11746 #11809 #11996 #12043 #12059 #12246 #12382   Improve the performance when the columns involved in a query can be fully covered by indexes #12022 Improve the performance of table query by supporting the Index Merge feature #10121 #10512 #11245 #12225 #12248 #12305 #12843 Improve the performance of Range calculation and reduce the CPU overhead by caching index results and eliminating duplicate results #12856 Decouple the level of slow logs from the level of ordinary logs #12359 Add the oom-use-tmp-storage parameter (true by default) to control whether to use temporary files to cache intermediate results when the memory usage for the execution of a single SQL statement exceeds mem-quota-query and the SQL contains Hash Join #11832 #11937 #12116 #12067 Support using create index/alter table to create expression index and using drop index to drop expression index #14117 Increase the default value of the query-log-max-len parameter to 4096 to reduce the number of truncated SQL outputs.</description>
    </item>
    
    <item>
      <title>TiDB 4.0.0-beta.1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/4.0.0-beta.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/4.0.0-beta.1/</guid>
      <description>TiDB 4.0.0-beta.1 Release Notes 发版日期：2020 年 02 月 28 日
TiDB 版本：4.0.0-beta.1
TiDB Ansible 版本：4.0.0-beta.1
TiDB 4.0.0-beta.1 兼容性变化   TiDB
 修改配置项 log.enable-slow-log 的类型，由整数型改为布尔类型 #14864 调整修改系统表 mysql.user 中 password 列名为 authentication_string，与 MySQL 5.7 保持一致（该变动会导致升级后不能回退） #14598 txn-total-size-limit 配置项的默认值由 1GB 调整为 100MB #14522 新增动态修改、更新配置项的功能，配置项由 PD 持久化存储 #14750 #14303 #14830    TiKV
 新增 readpool.unify-read-pool 配置项，默认值为 True，用于控制点查是否共用 Coprocessor 的处理线程 #6375 #6401 #6534 #6582 #6585 #6593 #6597 #6677    PD</description>
    </item>
    
    <item>
      <title>TiDB 4.0.0-beta.1 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/4.0.0-beta.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/4.0.0-beta.1/</guid>
      <description>TiDB 4.0.0-beta.1 Release Notes Release date: February 28, 2020
TiDB version: 4.0.0-beta.1
TiDB Ansible version: 4.0.0-beta.1
TiDB 4.0.0-beta.1 Compatibility Changes   TiDB
 Modify the type of the log.enable-slow-log configuration item from integer to Boolean #14864 Modify the password field name to authentication_string in the mysql.user system table to make it consistent with MySQL 5.7 (This compatibility change means that you cannot roll back to earlier versions.) #14598 Adjust the default value of the txn-total-size-limit configuration item from 1GB to 100MB #14522 Support dynamically modifying or updating configuration items read from PD #14750 #14303 #14830    TiKV</description>
    </item>
    
    <item>
      <title>TiDB Adopters</title>
      <link>https://pingcap.com/docs/dev/adopters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/adopters/</guid>
      <description>Learn about the list of TiDB adopters in various industries.</description>
    </item>
    
    <item>
      <title>TiDB Adopters</title>
      <link>https://pingcap.com/docs/stable/adopters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/adopters/</guid>
      <description>Learn about the list of TiDB adopters in various industries.</description>
    </item>
    
    <item>
      <title>TiDB Adopters</title>
      <link>https://pingcap.com/docs/v2.1/adopters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/adopters/</guid>
      <description>Learn about the list of TiDB adopters in various industries.</description>
    </item>
    
    <item>
      <title>TiDB Adopters</title>
      <link>https://pingcap.com/docs/v3.1/adopters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/adopters/</guid>
      <description>Learn about the list of TiDB adopters in various industries.</description>
    </item>
    
    <item>
      <title>TiDB and MySQL: Behavior Differences</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/mysql-compatibility/behavior-differences/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/mysql-compatibility/behavior-differences/</guid>
      <description>TiDB and MySQL: Behavior Differences  Resources  MySQL Compatibility Support for built-in JSON functions Support for aggregate functions  Transcript In the previous video, we talked about TiDB compatibility with MySQL and how some features were not present. For example: stored procedures, triggers, views.
Let&#39;s now talk about something more subtle: the feature also exists in TiDB, but works differently. In many cases this is TiDB is a distributed database, and needs to work a little bit differently.</description>
    </item>
    
    <item>
      <title>TiDB and MySQL: Default Differences</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/mysql-compatibility/default-differences/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/mysql-compatibility/default-differences/</guid>
      <description>TiDB and MySQL: Default Differences  Resources  MySQL Compatibility  Transcript In the previous video, I talked about TiDB&#39;s behavior differences from MySQL. As a follow-on, I&#39;m now going to cover differences in defaults between TiDB and MySQL 5.7. This is really an extension of behavior differences, since TiDB is behaving in a way that MySQL does not out of the box, but with a configuration change (either to TiDB or MySQL) the two systems could be made to behave the same.</description>
    </item>
    
    <item>
      <title>TiDB Ansible Common Operations</title>
      <link>https://pingcap.com/docs/dev/how-to/deploy/orchestrated/ansible-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/deploy/orchestrated/ansible-operations/</guid>
      <description>Learn some common operations when using TiDB Ansible to administer a TiDB cluster.</description>
    </item>
    
    <item>
      <title>TiDB Ansible Common Operations</title>
      <link>https://pingcap.com/docs/stable/how-to/deploy/orchestrated/ansible-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/deploy/orchestrated/ansible-operations/</guid>
      <description>Learn some common operations when using TiDB Ansible to administer a TiDB cluster.</description>
    </item>
    
    <item>
      <title>TiDB Ansible Common Operations</title>
      <link>https://pingcap.com/docs/v2.1/how-to/deploy/orchestrated/ansible-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/deploy/orchestrated/ansible-operations/</guid>
      <description>Learn some common operations when using TiDB Ansible to administer a TiDB cluster.</description>
    </item>
    
    <item>
      <title>TiDB Ansible Common Operations</title>
      <link>https://pingcap.com/docs/v3.1/how-to/deploy/orchestrated/ansible-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/deploy/orchestrated/ansible-operations/</guid>
      <description>Learn some common operations when using TiDB Ansible to administer a TiDB cluster.</description>
    </item>
    
    <item>
      <title>TiDB Ansible 常见运维操作</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/maintain/ansible-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/maintain/ansible-operations/</guid>
      <description>TiDB Ansible 常见运维操作 启动集群 此操作会按顺序启动整个 TiDB 集群所有组件（包括 PD、TiDB、TiKV 等组件和监控组件）。
 ansible-playbook start.yml 关闭集群 此操作会按顺序关闭整个 TiDB 集群所有组件（包括 PD、TiDB、TiKV 等组件和监控组件）。
 ansible-playbook stop.yml 清除集群数据 此操作会关闭 TiDB、Pump、TiKV、PD 服务，并清空 Pump、TiKV、PD 数据目录。
 ansible-playbook unsafe_cleanup_data.yml 销毁集群 此操作会关闭集群，并清空部署目录，若部署目录为挂载点，会报错，可忽略。
 ansible-playbook unsafe_cleanup.yml </description>
    </item>
    
    <item>
      <title>TiDB Ansible 常见运维操作</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/maintain/ansible-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/maintain/ansible-operations/</guid>
      <description>TiDB Ansible 常见运维操作 启动集群 此操作会按顺序启动整个 TiDB 集群所有组件（包括 PD、TiDB、TiKV 等组件和监控组件）。
 ansible-playbook start.yml 关闭集群 此操作会按顺序关闭整个 TiDB 集群所有组件（包括 PD、TiDB、TiKV 等组件和监控组件）。
 ansible-playbook stop.yml 清除集群数据 此操作会关闭 TiDB、Pump、TiKV、PD 服务，并清空 Pump、TiKV、PD 数据目录。
 ansible-playbook unsafe_cleanup_data.yml 销毁集群 此操作会关闭集群，并清空部署目录，若部署目录为挂载点，会报错，可忽略。
 ansible-playbook unsafe_cleanup.yml </description>
    </item>
    
    <item>
      <title>TiDB Ansible 常见运维操作</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/maintain/ansible-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/maintain/ansible-operations/</guid>
      <description>TiDB Ansible 常见运维操作 启动集群 此操作会按顺序启动整个 TiDB 集群所有组件（包括 PD、TiDB、TiKV 等组件和监控组件）。
$ ansible-playbook start.yml 关闭集群 此操作会按顺序关闭整个 TiDB 集群所有组件（包括 PD、TiDB、TiKV 等组件和监控组件）。
$ ansible-playbook stop.yml 清除集群数据 此操作会关闭 TiDB、Pump、TiKV、PD 服务，并清空 Pump、TiKV、PD 数据目录。
$ ansible-playbook unsafe_cleanup_data.yml 销毁集群 此操作会关闭集群，并清空部署目录，若部署目录为挂载点，会报错，可忽略。
$ ansible-playbook unsafe_cleanup.yml </description>
    </item>
    
    <item>
      <title>TiDB Ansible 常见运维操作</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/maintain/ansible-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/maintain/ansible-operations/</guid>
      <description>TiDB Ansible 常见运维操作 启动集群 此操作会按顺序启动整个 TiDB 集群所有组件（包括 PD、TiDB、TiKV 等组件和监控组件）。
 ansible-playbook start.yml 关闭集群 此操作会按顺序关闭整个 TiDB 集群所有组件（包括 PD、TiDB、TiKV 等组件和监控组件）。
 ansible-playbook stop.yml 清除集群数据 此操作会关闭 TiDB、Pump、TiKV、PD 服务，并清空 Pump、TiKV、PD 数据目录。
 ansible-playbook unsafe_cleanup_data.yml 销毁集群 此操作会关闭集群，并清空部署目录，若部署目录为挂载点，会报错，可忽略。
 ansible-playbook unsafe_cleanup.yml </description>
    </item>
    
    <item>
      <title>TiDB Architecture</title>
      <link>https://pingcap.com/docs/dev/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/architecture/</guid>
      <description>The key architecture components of the TiDB platform</description>
    </item>
    
    <item>
      <title>TiDB Architecture</title>
      <link>https://pingcap.com/docs/stable/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/architecture/</guid>
      <description>The key architecture components of the TiDB platform</description>
    </item>
    
    <item>
      <title>TiDB Architecture</title>
      <link>https://pingcap.com/docs/v2.1/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/architecture/</guid>
      <description>The key architecture components of the TiDB platform</description>
    </item>
    
    <item>
      <title>TiDB Architecture</title>
      <link>https://pingcap.com/docs/v3.1/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/architecture/</guid>
      <description>The key architecture components of the TiDB platform</description>
    </item>
    
    <item>
      <title>TiDB Binlog Cluster Deployment</title>
      <link>https://pingcap.com/docs/dev/reference/tidb-binlog/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tidb-binlog/deploy/</guid>
      <description>Learn how to deploy TiDB Binlog cluster.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Cluster Deployment</title>
      <link>https://pingcap.com/docs/stable/reference/tidb-binlog/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tidb-binlog/deploy/</guid>
      <description>Learn how to deploy TiDB Binlog cluster.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Cluster Deployment</title>
      <link>https://pingcap.com/docs/v2.1/reference/tidb-binlog/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tidb-binlog/deploy/</guid>
      <description>Learn how to deploy TiDB Binlog cluster.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Cluster Deployment</title>
      <link>https://pingcap.com/docs/v3.1/reference/tidb-binlog/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tidb-binlog/deploy/</guid>
      <description>Learn how to deploy TiDB Binlog cluster.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Cluster Operations</title>
      <link>https://pingcap.com/docs/dev/reference/tidb-binlog/maintain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tidb-binlog/maintain/</guid>
      <description>Learn how to operate the cluster version of TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Cluster Operations</title>
      <link>https://pingcap.com/docs/stable/reference/tidb-binlog/maintain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tidb-binlog/maintain/</guid>
      <description>Learn how to operate the cluster version of TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Cluster Operations</title>
      <link>https://pingcap.com/docs/v2.1/reference/tidb-binlog/maintain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tidb-binlog/maintain/</guid>
      <description>Learn how to operate the cluster version of TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Cluster Operations</title>
      <link>https://pingcap.com/docs/v3.1/reference/tidb-binlog/maintain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tidb-binlog/maintain/</guid>
      <description>Learn how to operate the cluster version of TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Drainer Configurations in Kubernetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/reference/configuration/tidb-drainer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/reference/configuration/tidb-drainer/</guid>
      <description>Learn the configurations of a TiDB Binlog Drainer in Kubernetes.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Drainer Configurations in Kubernetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/reference/configuration/tidb-drainer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/reference/configuration/tidb-drainer/</guid>
      <description>Learn the configurations of a TiDB Binlog Drainer in Kubernetes.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Drainer Configurations in Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/reference/configuration/tidb-drainer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/reference/configuration/tidb-drainer/</guid>
      <description>Learn the configurations of a TiDB Binlog Drainer in Kubernetes.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Error Handling</title>
      <link>https://pingcap.com/docs/dev/reference/tidb-binlog/troubleshoot/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tidb-binlog/troubleshoot/error-handling/</guid>
      <description>Learn how to handle TiDB Binlog errors.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Error Handling</title>
      <link>https://pingcap.com/docs/stable/reference/tidb-binlog/troubleshoot/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tidb-binlog/troubleshoot/error-handling/</guid>
      <description>Learn how to handle TiDB Binlog errors.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Error Handling</title>
      <link>https://pingcap.com/docs/v2.1/reference/tidb-binlog/troubleshoot/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tidb-binlog/troubleshoot/error-handling/</guid>
      <description>Learn how to handle TiDB Binlog errors.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Error Handling</title>
      <link>https://pingcap.com/docs/v3.1/reference/tidb-binlog/troubleshoot/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tidb-binlog/troubleshoot/error-handling/</guid>
      <description>Learn how to handle TiDB Binlog errors.</description>
    </item>
    
    <item>
      <title>TiDB Binlog FAQ</title>
      <link>https://pingcap.com/docs/dev/reference/tidb-binlog/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tidb-binlog/faq/</guid>
      <description>Learn about the frequently asked questions (FAQs) and answers about TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog FAQ</title>
      <link>https://pingcap.com/docs/stable/reference/tidb-binlog/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tidb-binlog/faq/</guid>
      <description>Learn about the frequently asked questions (FAQs) and answers about TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog FAQ</title>
      <link>https://pingcap.com/docs/v2.1/reference/tidb-binlog/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tidb-binlog/faq/</guid>
      <description>Learn about the frequently asked questions (FAQs) and answers about TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog FAQ</title>
      <link>https://pingcap.com/docs/v3.1/reference/tidb-binlog/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tidb-binlog/faq/</guid>
      <description>Learn about the frequently asked questions (FAQs) and answers about TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Glossary</title>
      <link>https://pingcap.com/docs/dev/reference/tidb-binlog/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tidb-binlog/glossary/</guid>
      <description>Learn the terms used in TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Glossary</title>
      <link>https://pingcap.com/docs/stable/reference/tidb-binlog/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tidb-binlog/glossary/</guid>
      <description>Learn the terms used in TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Glossary</title>
      <link>https://pingcap.com/docs/v2.1/reference/tidb-binlog/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tidb-binlog/glossary/</guid>
      <description>Learn the terms used in TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Glossary</title>
      <link>https://pingcap.com/docs/v3.1/reference/tidb-binlog/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tidb-binlog/glossary/</guid>
      <description>Learn the terms used in TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog kafka 部署方案</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/tidb-binlog-kafka/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/tidb-binlog-kafka/</guid>
      <description>TiDB Binlog Kafka 部署方案 本文档介绍如何部署 Kafka 版本的 TiDB Binlog。
TiDB Binlog 简介 TiDB Binlog 是用于收集 TiDB 的 Binlog，并提供实时备份和同步功能的商业工具。
TiDB Binlog 支持以下功能场景:
 数据同步：同步 TiDB 集群数据到其他数据库 实时备份和恢复：备份 TiDB 集群数据，同时可以用于 TiDB 集群故障时恢复  TiDB Binlog Kafka 架构 首先介绍 TiDB Binlog 的整体架构。
TiDB Binlog 集群主要分为三个组件：
Pump Pump 是一个守护进程，在每个 TiDB 主机的后台运行。其主要功能是实时记录 TiDB 产生的 Binlog 并顺序写入 Kafka 中。
Drainer Drainer 从 Kafka 中收集 Binlog，并按照 TiDB 中事务的提交顺序转化为指定数据库兼容的 SQL 语句，最后同步到目的数据库或者写到顺序文件。
Kafka &amp;amp; ZooKeeper Kafka 集群用来存储由 Pump 写入的 Binlog 数据，并提供给 Drainer 进行读取。</description>
    </item>
    
    <item>
      <title>TiDB Binlog kafka 部署方案</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/tidb-binlog-kafka/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/tidb-binlog-kafka/</guid>
      <description>TiDB Binlog Kafka 部署方案 本文档介绍如何部署 Kafka 版本的 TiDB Binlog。
TiDB Binlog 简介 TiDB Binlog 是用于收集 TiDB 的 Binlog，并提供实时备份和同步功能的商业工具。
TiDB Binlog 支持以下功能场景:
 数据同步：同步 TiDB 集群数据到其他数据库 实时备份和恢复：备份 TiDB 集群数据，同时可以用于 TiDB 集群故障时恢复  TiDB Binlog Kafka 架构 首先介绍 TiDB Binlog 的整体架构。
TiDB Binlog 集群主要分为三个组件：
Pump Pump 是一个守护进程，在每个 TiDB 主机的后台运行。其主要功能是实时记录 TiDB 产生的 Binlog 并顺序写入 Kafka 中。
Drainer Drainer 从 Kafka 中收集 Binlog，并按照 TiDB 中事务的提交顺序转化为指定数据库兼容的 SQL 语句，最后同步到目的数据库或者写到顺序文件。
Kafka &amp;amp; ZooKeeper Kafka 集群用来存储由 Pump 写入的 Binlog 数据，并提供给 Drainer 进行读取。</description>
    </item>
    
    <item>
      <title>TiDB Binlog kafka 部署方案</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/tidb-binlog-kafka/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/tidb-binlog-kafka/</guid>
      <description>TiDB Binlog Kafka 部署方案 本文档介绍如何部署 Kafka 版本的 TiDB Binlog。
TiDB Binlog 简介 TiDB Binlog 是用于收集 TiDB 的 Binlog，并提供实时备份和同步功能的商业工具。
TiDB Binlog 支持以下功能场景:
 数据同步：同步 TiDB 集群数据到其他数据库 实时备份和恢复：备份 TiDB 集群数据，同时可以用于 TiDB 集群故障时恢复  TiDB Binlog Kafka 架构 首先介绍 TiDB Binlog 的整体架构。
TiDB Binlog 集群主要分为三个组件：
Pump Pump 是一个守护进程，在每个 TiDB 主机的后台运行。其主要功能是实时记录 TiDB 产生的 Binlog 并顺序写入 Kafka 中。
Drainer Drainer 从 Kafka 中收集 Binlog，并按照 TiDB 中事务的提交顺序转化为指定数据库兼容的 SQL 语句，最后同步到目的数据库或者写到顺序文件。
Kafka &amp;amp; ZooKeeper Kafka 集群用来存储由 Pump 写入的 Binlog 数据，并提供给 Drainer 进行读取。</description>
    </item>
    
    <item>
      <title>TiDB Binlog kafka 部署方案</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/tidb-binlog-kafka/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/tidb-binlog-kafka/</guid>
      <description>TiDB Binlog Kafka 部署方案 本文档介绍如何部署 Kafka 版本的 TiDB Binlog。
TiDB Binlog 简介 TiDB Binlog 是用于收集 TiDB 的 Binlog，并提供实时备份和同步功能的商业工具。
TiDB Binlog 支持以下功能场景:
 数据同步：同步 TiDB 集群数据到其他数据库 实时备份和恢复：备份 TiDB 集群数据，同时可以用于 TiDB 集群故障时恢复  TiDB Binlog Kafka 架构 首先介绍 TiDB Binlog 的整体架构。
TiDB Binlog 集群主要分为三个组件：
Pump Pump 是一个守护进程，在每个 TiDB 主机的后台运行。其主要功能是实时记录 TiDB 产生的 Binlog 并顺序写入 Kafka 中。
Drainer Drainer 从 Kafka 中收集 Binlog，并按照 TiDB 中事务的提交顺序转化为指定数据库兼容的 SQL 语句，最后同步到目的数据库或者写到顺序文件。
Kafka &amp;amp; ZooKeeper Kafka 集群用来存储由 Pump 写入的 Binlog 数据，并提供给 Drainer 进行读取。</description>
    </item>
    
    <item>
      <title>TiDB Binlog Local Deployment</title>
      <link>https://pingcap.com/docs/dev/reference/tidb-binlog/tidb-binlog-local/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tidb-binlog/tidb-binlog-local/</guid>
      <description>Learn how to install, deploy and monitor TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Local Deployment</title>
      <link>https://pingcap.com/docs/stable/reference/tidb-binlog/tidb-binlog-local/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tidb-binlog/tidb-binlog-local/</guid>
      <description>Learn how to install, deploy and monitor TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Local Deployment</title>
      <link>https://pingcap.com/docs/v2.1/reference/tidb-binlog/tidb-binlog-local/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tidb-binlog/tidb-binlog-local/</guid>
      <description>Learn how to install, deploy and monitor TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Local Deployment</title>
      <link>https://pingcap.com/docs/v3.1/reference/tidb-binlog/tidb-binlog-local/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tidb-binlog/tidb-binlog-local/</guid>
      <description>Learn how to install, deploy and monitor TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Local 部署方案</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/tidb-binlog-local/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/tidb-binlog-local/</guid>
      <description>TiDB Binlog Local 部署方案 TiDB Binlog Local 简介 TiDB Binlog 是用于收集 TiDB 的 Binlog，并提供实时备份和同步功能的商业工具。
TiDB Binlog 支持以下功能场景:
 数据同步：同步 TiDB 集群数据到其他数据库。 实时备份和恢复：备份 TiDB 集群数据，同时可以用于 TiDB 集群故障时恢复。  TiDB Binlog Local 架构 下图为 TiDB Binlog Local的整体架构。
TiDB Binlog Local 主要分为两个组件：
  Pump 是一个守护进程，在每个 TiDB 的主机上后台运行。他的主要功能是实时记录 TiDB 产生的 Binlog 并顺序写入磁盘文件
  Drainer 从各个 Pump 节点收集 Binlog，并按照在 TiDB 中事务的提交顺序转化为指定数据库兼容的 SQL 语句，最后同步到目的数据库或者写到顺序文件
  TiDB Binlog Local 安装 TiDB Binlog Local 下载 TiDB Binlog 包含在 tidb-enterprise-tools 安装包中，可在此下载。</description>
    </item>
    
    <item>
      <title>TiDB Binlog Local 部署方案</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/tidb-binlog-local/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/tidb-binlog-local/</guid>
      <description>TiDB Binlog Local 部署方案 TiDB Binlog Local 简介 TiDB Binlog 是用于收集 TiDB 的 Binlog，并提供实时备份和同步功能的商业工具。
TiDB Binlog 支持以下功能场景:
 数据同步：同步 TiDB 集群数据到其他数据库。 实时备份和恢复：备份 TiDB 集群数据，同时可以用于 TiDB 集群故障时恢复。  TiDB Binlog Local 架构 下图为 TiDB Binlog Local的整体架构。
TiDB Binlog Local 主要分为两个组件：
  Pump 是一个守护进程，在每个 TiDB 的主机上后台运行。他的主要功能是实时记录 TiDB 产生的 Binlog 并顺序写入磁盘文件
  Drainer 从各个 Pump 节点收集 Binlog，并按照在 TiDB 中事务的提交顺序转化为指定数据库兼容的 SQL 语句，最后同步到目的数据库或者写到顺序文件
  TiDB Binlog Local 安装 TiDB Binlog Local 下载 TiDB Binlog 包含在 tidb-enterprise-tools 安装包中，可在此下载。</description>
    </item>
    
    <item>
      <title>TiDB Binlog Local 部署方案</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/tidb-binlog-local/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/tidb-binlog-local/</guid>
      <description>TiDB Binlog Local 部署方案 TiDB Binlog Local 简介 TiDB Binlog 是用于收集 TiDB 的 Binlog，并提供实时备份和同步功能的商业工具。
TiDB Binlog 支持以下功能场景:
 数据同步：同步 TiDB 集群数据到其他数据库。 实时备份和恢复：备份 TiDB 集群数据，同时可以用于 TiDB 集群故障时恢复。  TiDB Binlog Local 架构 下图为 TiDB Binlog Local的整体架构。
TiDB Binlog Local 主要分为两个组件：
  Pump 是一个守护进程，在每个 TiDB 的主机上后台运行。他的主要功能是实时记录 TiDB 产生的 Binlog 并顺序写入磁盘文件
  Drainer 从各个 Pump 节点收集 Binlog，并按照在 TiDB 中事务的提交顺序转化为指定数据库兼容的 SQL 语句，最后同步到目的数据库或者写到顺序文件
  TiDB Binlog Local 安装 TiDB Binlog Local 下载 TiDB Binlog 包含在 tidb-enterprise-tools 安装包中，可在此下载。</description>
    </item>
    
    <item>
      <title>TiDB Binlog Local 部署方案</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/tidb-binlog-local/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/tidb-binlog-local/</guid>
      <description>TiDB Binlog Local 部署方案 TiDB Binlog Local 简介 TiDB Binlog 是用于收集 TiDB 的 Binlog，并提供实时备份和同步功能的商业工具。
TiDB Binlog 支持以下功能场景:
 数据同步：同步 TiDB 集群数据到其他数据库。 实时备份和恢复：备份 TiDB 集群数据，同时可以用于 TiDB 集群故障时恢复。  TiDB Binlog Local 架构 下图为 TiDB Binlog Local的整体架构。
TiDB Binlog Local 主要分为两个组件：
  Pump 是一个守护进程，在每个 TiDB 的主机上后台运行。他的主要功能是实时记录 TiDB 产生的 Binlog 并顺序写入磁盘文件
  Drainer 从各个 Pump 节点收集 Binlog，并按照在 TiDB 中事务的提交顺序转化为指定数据库兼容的 SQL 语句，最后同步到目的数据库或者写到顺序文件
  TiDB Binlog Local 安装 TiDB Binlog Local 下载 TiDB Binlog 包含在 tidb-enterprise-tools 安装包中，可在此下载。</description>
    </item>
    
    <item>
      <title>TiDB Binlog Monitoring</title>
      <link>https://pingcap.com/docs/dev/reference/tidb-binlog/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tidb-binlog/monitor/</guid>
      <description>Learn how to monitor the cluster version of TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Monitoring</title>
      <link>https://pingcap.com/docs/stable/reference/tidb-binlog/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tidb-binlog/monitor/</guid>
      <description>Learn how to monitor the cluster version of TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Monitoring</title>
      <link>https://pingcap.com/docs/v2.1/reference/tidb-binlog/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tidb-binlog/monitor/</guid>
      <description>Learn how to monitor the cluster version of TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Monitoring</title>
      <link>https://pingcap.com/docs/v3.1/reference/tidb-binlog/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tidb-binlog/monitor/</guid>
      <description>Learn how to monitor the cluster version of TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Overview</title>
      <link>https://pingcap.com/docs/dev/reference/tidb-binlog/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tidb-binlog/overview/</guid>
      <description>Learn overview of the cluster version of TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Overview</title>
      <link>https://pingcap.com/docs/stable/reference/tidb-binlog/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tidb-binlog/overview/</guid>
      <description>Learn overview of the cluster version of TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Overview</title>
      <link>https://pingcap.com/docs/v2.1/reference/tidb-binlog/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tidb-binlog/overview/</guid>
      <description>Learn overview of the cluster version of TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Overview</title>
      <link>https://pingcap.com/docs/v3.1/reference/tidb-binlog/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tidb-binlog/overview/</guid>
      <description>Learn overview of the cluster version of TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Relay Log</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/relay-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/relay-log/</guid>
      <description>TiDB Binlog Relay Log Drainer 同步 binlog 时会拆分上游的事务，并将拆分的事务并发同步到下游。在极端情况下，上游集群不可用并且 Drainer 异常退出后，下游集群（MySQL 或 TiDB）可能处于数据不一致的中间状态。在此场景下，Drainer 借助 relay log 可以确保将下游集群同步到一个一致的状态。
Drainer 同步时的一致性状态 下游集群达到一致的状态是指：下游集群的数据等同于上游设置了 tidb_snapshot = ts 的快照。
checkpoint 状态一致性是指：Drainer checkpoint 通过 consistent 保存了同步的一致性状态。Drainer 运行时 consistent 为 false，Drainer 正常退出后 consistent 更新为 true。
查询下游 checkpoint 表的示例如下：
mysql&amp;gt; select * from tidb_binlog.checkpoint; +---------------------+----------------------------------------------------------------+ | clusterID | checkPoint | +---------------------+----------------------------------------------------------------+ | 6791641053252586769 | {&amp;#34;consistent&amp;#34;:false,&amp;#34;commitTS&amp;#34;:414529105591271429,&amp;#34;ts-map&amp;#34;:{}} | +---------------------+----------------------------------------------------------------+ 工作原理 Drainer 开启 relay log 后会先将 binlog event 写到磁盘上，然后再同步给下游集群。如果上游集群不可用，Drainer 可以通过读取 relay log 把下游集群恢复到一个一致的状态。</description>
    </item>
    
    <item>
      <title>TiDB Binlog Relay Log</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/relay-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/relay-log/</guid>
      <description>TiDB Binlog Relay Log Drainer 同步 binlog 时会拆分上游的事务，并将拆分的事务并发同步到下游。在极端情况下，上游集群不可用并且 Drainer 异常退出后，下游集群（MySQL 或 TiDB）可能处于数据不一致的中间状态。在此场景下，Drainer 借助 relay log 可以确保将下游集群同步到一个一致的状态。
Drainer 同步时的一致性状态 下游集群达到一致的状态是指：下游集群的数据等同于上游设置了 tidb_snapshot = ts 的快照。
checkpoint 状态一致性是指：Drainer checkpoint 通过 consistent 保存了同步的一致性状态。Drainer 运行时 consistent 为 false，Drainer 正常退出后 consistent 更新为 true。
查询下游 checkpoint 表的示例如下：
mysql&amp;gt; select * from tidb_binlog.checkpoint; +---------------------+----------------------------------------------------------------+ | clusterID | checkPoint | +---------------------+----------------------------------------------------------------+ | 6791641053252586769 | {&amp;#34;consistent&amp;#34;:false,&amp;#34;commitTS&amp;#34;:414529105591271429,&amp;#34;ts-map&amp;#34;:{}} | +---------------------+----------------------------------------------------------------+ 工作原理 Drainer 开启 relay log 后会先将 binlog event 写到磁盘上，然后再同步给下游集群。如果上游集群不可用，Drainer 可以通过读取 relay log 把下游集群恢复到一个一致的状态。</description>
    </item>
    
    <item>
      <title>TiDB Binlog Relay Log</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/relay-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/relay-log/</guid>
      <description>TiDB Binlog Relay Log Drainer 同步 binlog 时会拆分上游的事务，并将拆分的事务并发同步到下游。在极端情况下，上游集群不可用并且 Drainer 异常退出后，下游集群（MySQL 或 TiDB）可能处于数据不一致的中间状态。在此场景下，Drainer 借助 relay log 可以确保将下游集群同步到一个一致的状态。
Drainer 同步时的一致性状态 下游集群达到一致的状态是指：下游集群的数据等同于上游设置了 tidb_snapshot = ts 的快照。
checkpoint 状态一致性是指：Drainer checkpoint 通过 consistent 保存了同步的一致性状态。Drainer 运行时 consistent 为 false，Drainer 正常退出后 consistent 更新为 true。
查询下游 checkpoint 表的示例如下：
mysql&amp;gt; select * from tidb_binlog.checkpoint; +---------------------+----------------------------------------------------------------+ | clusterID | checkPoint | +---------------------+----------------------------------------------------------------+ | 6791641053252586769 | {&amp;#34;consistent&amp;#34;:false,&amp;#34;commitTS&amp;#34;:414529105591271429,&amp;#34;ts-map&amp;#34;:{}} | +---------------------+----------------------------------------------------------------+ 工作原理 Drainer 开启 relay log 后会先将 binlog event 写到磁盘上，然后再同步给下游集群。如果上游集群不可用，Drainer 可以通过读取 relay log 把下游集群恢复到一个一致的状态。</description>
    </item>
    
    <item>
      <title>TiDB Binlog Relay Log</title>
      <link>https://pingcap.com/docs/dev/reference/tidb-binlog/relay-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tidb-binlog/relay-log/</guid>
      <description>Learn how to use relay log to maintain data consistency in extreme cases.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Relay Log</title>
      <link>https://pingcap.com/docs/stable/reference/tidb-binlog/relay-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tidb-binlog/relay-log/</guid>
      <description>Learn how to use relay log to maintain data consistency in extreme cases.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Relay Log</title>
      <link>https://pingcap.com/docs/v3.1/reference/tidb-binlog/relay-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tidb-binlog/relay-log/</guid>
      <description>Learn how to use relay log to maintain data consistency in extreme cases.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Troubleshooting</title>
      <link>https://pingcap.com/docs/dev/reference/tidb-binlog/troubleshoot/binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tidb-binlog/troubleshoot/binlog/</guid>
      <description>Learn the troubleshooting process of TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Troubleshooting</title>
      <link>https://pingcap.com/docs/stable/reference/tidb-binlog/troubleshoot/binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tidb-binlog/troubleshoot/binlog/</guid>
      <description>Learn the troubleshooting process of TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Troubleshooting</title>
      <link>https://pingcap.com/docs/v2.1/reference/tidb-binlog/troubleshoot/binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tidb-binlog/troubleshoot/binlog/</guid>
      <description>Learn the troubleshooting process of TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Troubleshooting</title>
      <link>https://pingcap.com/docs/v3.1/reference/tidb-binlog/troubleshoot/binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tidb-binlog/troubleshoot/binlog/</guid>
      <description>Learn the troubleshooting process of TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Tutorial</title>
      <link>https://pingcap.com/docs/dev/how-to/get-started/tidb-binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/get-started/tidb-binlog/</guid>
      <description>Learn to deploy TiDB Binlog with a simple TiDB cluster.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Tutorial</title>
      <link>https://pingcap.com/docs/stable/how-to/get-started/tidb-binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/get-started/tidb-binlog/</guid>
      <description>Learn to deploy TiDB Binlog with a simple TiDB cluster.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Tutorial</title>
      <link>https://pingcap.com/docs/v2.1/how-to/get-started/tidb-binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/get-started/tidb-binlog/</guid>
      <description>Learn to deploy TiDB Binlog with a simple TiDB cluster.</description>
    </item>
    
    <item>
      <title>TiDB Binlog Tutorial</title>
      <link>https://pingcap.com/docs/v3.1/how-to/get-started/tidb-binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/get-started/tidb-binlog/</guid>
      <description>Learn to deploy TiDB Binlog with a simple TiDB cluster.</description>
    </item>
    
    <item>
      <title>TiDB Binlog user guide</title>
      <link>https://pingcap.com/docs/dev/reference/tidb-binlog/tidb-binlog-kafka/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tidb-binlog/tidb-binlog-kafka/</guid>
      <description>Learn how to deploy the Kafka version of TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog user guide</title>
      <link>https://pingcap.com/docs/stable/reference/tidb-binlog/tidb-binlog-kafka/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tidb-binlog/tidb-binlog-kafka/</guid>
      <description>Learn how to deploy the Kafka version of TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog user guide</title>
      <link>https://pingcap.com/docs/v2.1/reference/tidb-binlog/tidb-binlog-kafka/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tidb-binlog/tidb-binlog-kafka/</guid>
      <description>Learn how to deploy the Kafka version of TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog user guide</title>
      <link>https://pingcap.com/docs/v3.1/reference/tidb-binlog/tidb-binlog-kafka/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tidb-binlog/tidb-binlog-kafka/</guid>
      <description>Learn how to deploy the Kafka version of TiDB Binlog.</description>
    </item>
    
    <item>
      <title>TiDB Binlog 常见错误修复</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/troubleshoot/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/troubleshoot/error-handling/</guid>
      <description>TiDB Binlog 常见错误修复 本文档介绍 TiDB Binlog 中常见的错误以及修复方法。
Drainer 同步数据到 Kafka 时报错 &amp;ldquo;kafka server: Message was too large, server rejected it to avoid allocation error&amp;rdquo; 报错原因：如果在 TiDB 中执行了大事务，则生成的 binlog 数据会比较大，可能超过了 Kafka 的消息大小限制。
解决方法：需要调整 Kafka 的配置参数，如下所示。
message.max.bytes=1073741824 replica.fetch.max.bytes=1073741824 fetch.message.max.bytes=1073741824 Pump 报错 &amp;ldquo;no space left on device&amp;rdquo; 报错原因：本地磁盘空间不足，Pump 无法正常写 binlog 数据。
解决方法：需要清理磁盘空间，然后重启 Pump。
Pump 启动时报错 &amp;ldquo;fail to notify all living drainer&amp;rdquo; 报错原因：Pump 启动时需要通知所有 Online 状态的 Drainer，如果通知失败则会打印该错误日志。
解决方法：可以使用 binlogctl 工具查看所有 Drainer 的状态是否有异常，保证 Online 状态的 Drainer 都在正常工作。如果某个 Drainer 的状态和实际运行情况不一致，则使用 binlogctl 修改状态，然后再重启 Pump。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 常见错误修复</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/troubleshoot/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/troubleshoot/error-handling/</guid>
      <description>TiDB Binlog 常见错误修复 本文档介绍 TiDB Binlog 中常见的错误以及修复方法。
Drainer 同步数据到 Kafka 时报错 &amp;ldquo;kafka server: Message was too large, server rejected it to avoid allocation error&amp;rdquo; 报错原因：如果在 TiDB 中执行了大事务，则生成的 binlog 数据会比较大，可能超过了 Kafka 的消息大小限制。
解决方法：需要调整 Kafka 的配置参数，如下所示。
message.max.bytes=1073741824 replica.fetch.max.bytes=1073741824 fetch.message.max.bytes=1073741824 Pump 报错 &amp;ldquo;no space left on device&amp;rdquo; 报错原因：本地磁盘空间不足，Pump 无法正常写 binlog 数据。
解决方法：需要清理磁盘空间，然后重启 Pump。
Pump 启动时报错 &amp;ldquo;fail to notify all living drainer&amp;rdquo; 报错原因：Pump 启动时需要通知所有 Online 状态的 Drainer，如果通知失败则会打印该错误日志。
解决方法：可以使用 binlogctl 工具查看所有 Drainer 的状态是否有异常，保证 Online 状态的 Drainer 都在正常工作。如果某个 Drainer 的状态和实际运行情况不一致，则使用 binlogctl 修改状态，然后再重启 Pump。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 常见错误修复</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/troubleshoot/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/troubleshoot/error-handling/</guid>
      <description>TiDB Binlog 常见错误修复 本文档介绍 TiDB Binlog 中常见的错误以及修复方法。
Drainer 同步数据到 Kafka 时报错 &amp;ldquo;kafka server: Message was too large, server rejected it to avoid allocation error&amp;rdquo; 报错原因：如果在 TiDB 中执行了大事务，则生成的 binlog 数据会比较大，可能超过了 Kafka 的消息大小限制。
解决方法：需要调整 Kafka 的配置参数，如下所示。
message.max.bytes=1073741824 replica.fetch.max.bytes=1073741824 fetch.message.max.bytes=1073741824 Pump 报错 &amp;ldquo;no space left on device&amp;rdquo; 报错原因：本地磁盘空间不足，Pump 无法正常写 binlog 数据。
解决方法：需要清理磁盘空间，然后重启 Pump。
Pump 启动时报错 &amp;ldquo;fail to notify all living drainer&amp;rdquo; 报错原因：Pump 启动时需要通知所有 Online 状态的 Drainer，如果通知失败则会打印该错误日志。
解决方法：可以使用 binlogctl 工具查看所有 Drainer 的状态是否有异常，保证 Online 状态的 Drainer 都在正常工作。如果某个 Drainer 的状态和实际运行情况不一致，则使用 binlogctl 修改状态，然后再重启 Pump。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 常见错误修复</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/troubleshoot/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/troubleshoot/error-handling/</guid>
      <description>TiDB Binlog 常见错误修复 本文档介绍 TiDB Binlog 中常见的错误以及修复方法。
Drainer 同步数据到 Kafka 时报错 &amp;ldquo;kafka server: Message was too large, server rejected it to avoid allocation error&amp;rdquo; 报错原因：如果在 TiDB 中执行了大事务，则生成的 binlog 数据会比较大，可能超过了 Kafka 的消息大小限制。
解决方法：需要调整 Kafka 的配置参数，如下所示。
message.max.bytes=1073741824 replica.fetch.max.bytes=1073741824 fetch.message.max.bytes=1073741824 Pump 报错 &amp;ldquo;no space left on device&amp;rdquo; 报错原因：本地磁盘空间不足，Pump 无法正常写 binlog 数据。
解决方法：需要清理磁盘空间，然后重启 Pump。
Pump 启动时报错 &amp;ldquo;fail to notify all living drainer&amp;rdquo; 报错原因：Pump 启动时需要通知所有 Online 状态的 Drainer，如果通知失败则会打印该错误日志。
解决方法：可以使用 binlogctl 工具查看所有 Drainer 的状态是否有异常，保证 Online 状态的 Drainer 都在正常工作。如果某个 Drainer 的状态和实际运行情况不一致，则使用 binlogctl 修改状态，然后再重启 Pump。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 常见问题</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/faq/</guid>
      <description>TiDB Binlog 常见问题 本文介绍 TiDB Binlog 使用过程中的常见问题及解决方案。
开启 binog 对 TiDB 的性能有何影响？   对于查询无影响。
  对于有写入或更新数据的事务有一点性能影响。延迟上，在 Prewrite 阶段要并发写一条 p-binlog 成功后才可以提交事务，一般写 binlog 比 KV Prewrite 快，所以不会增加延迟。可以在 Pump 的监控面板看到写 binlog 的响应时间。
  Drainer 同步下游 TiDB/MySQL 的帐号需要哪些权限？ Drainer 同步帐号需要有如下权限：
 Insert Update Delete Create Drop Alter Execute Index Select  Pump 磁盘快满了怎么办？ 确认 GC 正常：
 确认 pump 监控面板 gc_tso 时间是否与配置一致。  如 gc 正常以下调整可以降低单个 pump 需要的空间大小：
 调整 pump GC 参数减少保留数据天数。 添加 pump 结点。  Drainer 同步中断怎么办？ 使用以下 binlogctl 命令查看 Pump 状态是否正常，以及是否全部非 offline 状态的 Pump 都在正常运行。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 常见问题</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/faq/</guid>
      <description>TiDB Binlog 常见问题 本文介绍 TiDB Binlog 使用过程中的常见问题及解决方案。
开启 binog 对 TiDB 的性能有何影响？   对于查询无影响。
  对于有写入或更新数据的事务有一点性能影响。延迟上，在 Prewrite 阶段要并发写一条 p-binlog 成功后才可以提交事务，一般写 binlog 比 KV Prewrite 快，所以不会增加延迟。可以在 Pump 的监控面板看到写 binlog 的响应时间。
  Drainer 同步下游 TiDB/MySQL 的帐号需要哪些权限？ Drainer 同步帐号需要有如下权限：
 Insert Update Delete Create Drop Alter Execute Index Select  Pump 磁盘快满了怎么办？ 确认 GC 正常：
 确认 pump 监控面板 gc_tso 时间是否与配置一致，版本 &amp;lt;= v3.0.0 的 pump 会保证非 offline 状态 Drainer 消费了数据才会 gc，如果有不再使用的 drainer 需要使用 binlogctl 下线。  如 gc 正常以下调整可以降低单个 pump 需要的空间大小：</description>
    </item>
    
    <item>
      <title>TiDB Binlog 常见问题</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/faq/</guid>
      <description>TiDB Binlog 常见问题 本文介绍 TiDB Binlog 使用过程中的常见问题及解决方案。
开启 binog 对 TiDB 的性能有何影响？   对于查询无影响。
  对于有写入或更新数据的事务有一点性能影响。延迟上，在 Prewrite 阶段要并发写一条 p-binlog 成功后才可以提交事务，一般写 binlog 比 KV Prewrite 快，所以不会增加延迟。可以在 Pump 的监控面板看到写 binlog 的响应时间。
  Drainer 同步下游 TiDB/MySQL 的帐号需要哪些权限？ Drainer 同步帐号需要有如下权限：
 Insert Update Delete Create Drop Alter Execute Index Select  Pump 磁盘快满了怎么办？ 确认 GC 正常：
 确认 pump 监控面板 gc_tso 时间是否与配置一致，版本 &amp;lt;= v2.1.14 的 pump 会保证非 offline 状态 drainer 消费了数据才会 gc，如果有不再使用的 drainer 需要使用 binlogctl 下线。  如 gc 正常以下调整可以降低单个 pump 需要的空间大小：</description>
    </item>
    
    <item>
      <title>TiDB Binlog 常见问题</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/faq/</guid>
      <description>TiDB Binlog 常见问题 本文介绍 TiDB Binlog 使用过程中的常见问题及解决方案。
开启 binog 对 TiDB 的性能有何影响？   对于查询无影响。
  对于有写入或更新数据的事务有一点性能影响。延迟上，在 Prewrite 阶段要并发写一条 p-binlog 成功后才可以提交事务，一般写 binlog 比 KV Prewrite 快，所以不会增加延迟。可以在 Pump 的监控面板看到写 binlog 的响应时间。
  Drainer 同步下游 TiDB/MySQL 的帐号需要哪些权限？ Drainer 同步帐号需要有如下权限：
 Insert Update Delete Create Drop Alter Execute Index Select  Pump 磁盘快满了怎么办？ 确认 GC 正常：
 确认 pump 监控面板 gc_tso 时间是否与配置一致，版本 &amp;lt;= v3.0.0 的 pump 会保证非 offline 状态 Drainer 消费了数据才会 gc，如果有不再使用的 Drainer 需要使用 binlogctl 下线。  如 gc 正常以下调整可以降低单个 pump 需要的空间大小：</description>
    </item>
    
    <item>
      <title>TiDB Binlog 故障诊断</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/troubleshoot/binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/troubleshoot/binlog/</guid>
      <description>TiDB Binlog 故障诊断 本文总结了在 TiDB Binlog 的使用过程中遇到问题的诊断流程，并指引用户通过监控、状态、日志等信息查找相应的解决方案。
如果你在使用 TiDB Binlog 时出现了异常，请尝试以下方式排查问题：
  查看各个监控指标是否异常，参见TiDB Binlog 集群监控。
  使用 binlogctl 工具查看各个 Pump、Drainer 的状态是否有异常。
  查看 Pump、Drainer 日志中是否有 ERROR、WARN，并根据详细的日志信息初步判断问题原因。
  通过以上方式定位到问题后，在 FAQ 以及 常见错误及修复 中查找解决方案，如果没有查找到解决方案或者提供的解决方案无法解决问题，请提交 issue 或者联系相关技术支持人员。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 故障诊断</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/troubleshoot/binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/troubleshoot/binlog/</guid>
      <description>TiDB Binlog 故障诊断 本文总结了在 TiDB Binlog 的使用过程中遇到问题的诊断流程，并指引用户通过监控、状态、日志等信息查找相应的解决方案。
如果你在使用 TiDB Binlog 时出现了异常，请尝试以下方式排查问题：
  查看各个监控指标是否异常，参见TiDB Binlog 集群监控。
  使用 binlogctl 工具查看各个 Pump、Drainer 的状态是否有异常。
  查看 Pump、Drainer 日志中是否有 ERROR、WARN，并根据详细的日志信息初步判断问题原因。
  通过以上方式定位到问题后，在 FAQ 以及 常见错误及修复 中查找解决方案，如果没有查找到解决方案或者提供的解决方案无法解决问题，请提交 issue 或者联系相关技术支持人员。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 故障诊断</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/troubleshoot/binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/troubleshoot/binlog/</guid>
      <description>TiDB Binlog 故障诊断 本文总结了在 TiDB Binlog 的使用过程中遇到问题的诊断流程，并指引用户通过监控、状态、日志等信息查找相应的解决方案。
如果你在使用 TiDB Binlog 时出现了异常，请尝试以下方式排查问题：
  查看各个监控指标是否异常，参见TiDB Binlog 集群监控。
  使用 binlogctl 工具查看各个 Pump、Drainer 的状态是否有异常。
  查看 Pump、Drainer 日志中是否有 ERROR、WARN，并根据详细的日志信息初步判断问题原因。
  通过以上方式定位到问题后，在 FAQ 以及 常见错误及修复 中查找解决方案，如果没有查找到解决方案或者提供的解决方案无法解决问题，请提交 issue 或者联系相关技术支持人员。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 故障诊断</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/troubleshoot/binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/troubleshoot/binlog/</guid>
      <description>TiDB Binlog 故障诊断 本文总结了在 TiDB Binlog 的使用过程中遇到问题的诊断流程，并指引用户通过监控、状态、日志等信息查找相应的解决方案。
如果你在使用 TiDB Binlog 时出现了异常，请尝试以下方式排查问题：
  查看各个监控指标是否异常，参见TiDB Binlog 集群监控。
  使用 binlogctl 工具查看各个 Pump、Drainer 的状态是否有异常。
  查看 Pump、Drainer 日志中是否有 ERROR、WARN，并根据详细的日志信息初步判断问题原因。
  通过以上方式定位到问题后，在 FAQ 以及 常见错误及修复 中查找解决方案，如果没有查找到解决方案或者提供的解决方案无法解决问题，请提交 issue 或者联系相关技术支持人员。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 教程</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/get-started/tidb-binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/get-started/tidb-binlog/</guid>
      <description>TiDB Binlog 教程 本文档主要介绍如何使用 TiDB Binlog 将数据从 TiDB 推送到 MariaDB 实例。文中的 TiDB Binlog 集群包含 Pump 和 Drainer 的单个节点，TiDB 集群包含 TiDB、TiKV 和 Placement Driver (PD) 各组件的单个节点。
希望上手实践 TiDB Binlog 工具的用户需要对 TiDB 架构有一定的了解，最好有创建过 TiDB 集群的经验。该文档也有助于简单快速了解 TiDB Binlog 架构以及相关概念。
 警告：
该文档中部署 TiDB 的操作指导不适用于在生产或研发环境中部署 TiDB 的情况。
 该文档假设用户使用的是现代 Linux 发行版本中的 x86-64。示例中使用的是 VMware 中运行的 CentOS 7 最小化安装。建议在一开始就进行清洁安装，以避免受现有环境中未知情况的影响。如果不想使用本地虚拟环境，也可以使用云服务启动 CentOS 7 VM。
TiDB Binlog 简介 TiDB Binlog 用于收集 TiDB 中二进制日志数据、提供实时数据备份和同步以及将 TiDB 集群的数据增量同步到下游。
TiDB Binlog 支持以下功能场景：
 增量备份，将 TiDB 集群中的数据增量同步到另一个集群，或通过 Kafka 增量同步到选择的下游。 当使用 TiDB DM (Data Migration) 将数据从上游 MySQL 或者 MariaDB 迁移到 TiDB 集群时，可使用 TiDB Binlog 保持 TiDB 集群与其一个独立下游 MySQL 或 MariaDB 实例或集群同步。当 TiDB 集群上游数据迁移过程中出现问题，下游数据同步过程中可使用 TiDB Binlog 恢复数据到原先的状态。  更多信息参考 TiDB Binlog Cluster 版本用户文档。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 教程</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/get-started/tidb-binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/get-started/tidb-binlog/</guid>
      <description>TiDB Binlog 教程 本文档主要介绍如何使用 TiDB Binlog 将数据从 TiDB 推送到 MariaDB 实例。文中的 TiDB Binlog 集群包含 Pump 和 Drainer 的单个节点，TiDB 集群包含 TiDB、TiKV 和 Placement Driver (PD) 各组件的单个节点。
希望上手实践 TiDB Binlog 工具的用户需要对 TiDB 架构有一定的了解，最好有创建过 TiDB 集群的经验。该文档也有助于简单快速了解 TiDB Binlog 架构以及相关概念。
 警告：
该文档中部署 TiDB 的操作指导不适用于在生产或研发环境中部署 TiDB 的情况。
 该文档假设用户使用的是现代 Linux 发行版本中的 x86-64。示例中使用的是 VMware 中运行的 CentOS 7 最小化安装。建议在一开始就进行清洁安装，以避免受现有环境中未知情况的影响。如果不想使用本地虚拟环境，也可以使用云服务启动 CentOS 7 VM。
TiDB Binlog 简介 TiDB Binlog 用于收集 TiDB 中二进制日志数据、提供实时数据备份和同步以及将 TiDB 集群的数据增量同步到下游。
TiDB Binlog 支持以下功能场景：
 增量备份，将 TiDB 集群中的数据增量同步到另一个集群，或通过 Kafka 增量同步到选择的下游。 当使用 TiDB DM (Data Migration) 将数据从上游 MySQL 或者 MariaDB 迁移到 TiDB 集群时，可使用 TiDB Binlog 保持 TiDB 集群与其一个独立下游 MySQL 或 MariaDB 实例或集群同步。当 TiDB 集群上游数据迁移过程中出现问题，下游数据同步过程中可使用 TiDB Binlog 恢复数据到原先的状态。  更多信息参考 TiDB Binlog Cluster 版本用户文档。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 教程</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/get-started/tidb-binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/get-started/tidb-binlog/</guid>
      <description>TiDB Binlog 教程 本文档主要介绍如何使用 TiDB Binlog 将数据从 TiDB 推送到 MariaDB 实例。文中的 TiDB Binlog 集群包含 Pump 和 Drainer 的单个节点，TiDB 集群包含 TiDB、TiKV 和 Placement Driver (PD) 各组件的单个节点。
希望上手实践 TiDB Binlog 工具的用户需要对 TiDB 架构有一定的了解，最好有创建过 TiDB 集群的经验。该文档也有助于简单快速了解 TiDB Binlog 架构以及相关概念。
 警告：
该文档中部署 TiDB 的操作指导不适用于在生产或研发环境中部署 TiDB 的情况。
 该文档假设用户使用的是现代 Linux 发行版本中的 x86-64。示例中使用的是 VMware 中运行的 CentOS 7 最小化安装。建议在一开始就进行清洁安装，以避免受现有环境中未知情况的影响。如果不想使用本地虚拟环境，也可以使用云服务启动 CentOS 7 VM。
TiDB Binlog 简介 TiDB Binlog 用于收集 TiDB 中二进制日志数据、提供实时数据备份和同步以及将 TiDB 集群的数据增量同步到下游。
TiDB Binlog 支持以下功能场景：
 增量备份，将 TiDB 集群中的数据增量同步到另一个集群，或通过 Kafka 增量同步到选择的下游。 当使用 TiDB DM (Data Migration) 将数据从上游 MySQL 或者 MariaDB 迁移到 TiDB 集群时，可使用 TiDB Binlog 保持 TiDB 集群与其一个独立下游 MySQL 或 MariaDB 实例或集群同步。当 TiDB 集群上游数据迁移过程中出现问题，下游数据同步过程中可使用 TiDB Binlog 恢复数据到原先的状态。  更多信息参考 TiDB Binlog Cluster 版本用户文档。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 教程</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/get-started/tidb-binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/get-started/tidb-binlog/</guid>
      <description>TiDB Binlog 教程 本文档主要介绍如何使用 TiDB Binlog 将数据从 TiDB 推送到 MariaDB 实例。文中的 TiDB Binlog 集群包含 Pump 和 Drainer 的单个节点，TiDB 集群包含 TiDB、TiKV 和 Placement Driver (PD) 各组件的单个节点。
希望上手实践 TiDB Binlog 工具的用户需要对 TiDB 架构有一定的了解，最好有创建过 TiDB 集群的经验。该文档也有助于简单快速了解 TiDB Binlog 架构以及相关概念。
 警告：
该文档中部署 TiDB 的操作指导不适用于在生产或研发环境中部署 TiDB 的情况。
 该文档假设用户使用的是现代 Linux 发行版本中的 x86-64。示例中使用的是 VMware 中运行的 CentOS 7 最小化安装。建议在一开始就进行清洁安装，以避免受现有环境中未知情况的影响。如果不想使用本地虚拟环境，也可以使用云服务启动 CentOS 7 VM。
TiDB Binlog 简介 TiDB Binlog 用于收集 TiDB 中二进制日志数据、提供实时数据备份和同步以及将 TiDB 集群的数据增量同步到下游。
TiDB Binlog 支持以下功能场景：
 增量备份，将 TiDB 集群中的数据增量同步到另一个集群，或通过 Kafka 增量同步到选择的下游。 当使用 TiDB DM (Data Migration) 将数据从上游 MySQL 或者 MariaDB 迁移到 TiDB 集群时，可使用 TiDB Binlog 保持 TiDB 集群与其一个独立下游 MySQL 或 MariaDB 实例或集群同步。当 TiDB 集群上游数据迁移过程中出现问题，下游数据同步过程中可使用 TiDB Binlog 恢复数据到原先的状态。  更多信息参考 TiDB Binlog Cluster 版本用户文档。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 术语表</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/glossary/</guid>
      <description>学习 TiDB Binlog 相关术语</description>
    </item>
    
    <item>
      <title>TiDB Binlog 术语表</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/glossary/</guid>
      <description>学习 TiDB Binlog 相关术语</description>
    </item>
    
    <item>
      <title>TiDB Binlog 术语表</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/glossary/</guid>
      <description>学习 TiDB Binlog 相关术语</description>
    </item>
    
    <item>
      <title>TiDB Binlog 术语表</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/glossary/</guid>
      <description>学习 TiDB Binlog 相关术语</description>
    </item>
    
    <item>
      <title>TiDB Binlog 版本升级方法</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/upgrade/</guid>
      <description>TiDB Binlog 版本升级方法 如未特别指明，文中出现的 TiDB Binlog 均指最新的 Cluster 版本。
本文会分 Ansible 部署和手动部署两种情况介绍 TiDB Binlog 版本升级的方法，另外有一小节介绍如何从更早的不兼容版本（Kafka/Local 版本）升级到最新版本。
Ansible 部署 本节适用于使用 TiDB Ansible Playbook 部署的情况。
升级 Pump  将新版本的二进制文件 pump 复制到 {{ resources_dir }}/bin 目录中 执行 ansible-playbook rolling_update.yml --tags=pump 命令来滚动升级 Pump  升级 Drainer  将新版本的二进制文件 drainer 复制到 {{ resources_dir }}/bin 目录中 执行 ansible-playbook stop_drainer.yml --tags=drainer 命令 执行 ansible-playbook start_drainer.yml --tags=drainer 命令  手动部署 升级 Pump 对集群里的每个 Pump 逐一升级，确保集群中总有 Pump 可以接收 TiDB 发来的 Binlog。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 版本升级方法</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/upgrade/</guid>
      <description>TiDB Binlog 版本升级方法 如未特别指明，文中出现的 TiDB Binlog 均指最新的 Cluster 版本。
本文会分 Ansible 部署和手动部署两种情况介绍 TiDB Binlog 版本升级的方法，另外有一小节介绍如何从更早的不兼容版本（Kafka/Local 版本）升级到最新版本。
Ansible 部署 本节适用于使用 TiDB Ansible Playbook 部署的情况。
升级 Pump  将新版本的二进制文件 pump 复制到 {{ resources_dir }}/bin 目录中 执行 ansible-playbook rolling_update.yml --tags=pump 命令来滚动升级 Pump  升级 Drainer  将新版本的二进制文件 drainer 复制到 {{ resources_dir }}/bin 目录中 执行 ansible-playbook stop_drainer.yml --tags=drainer 命令 执行 ansible-playbook start_drainer.yml --tags=drainer 命令  手动部署 升级 Pump 对集群里的每个 Pump 逐一升级，确保集群中总有 Pump 可以接收 TiDB 发来的 Binlog。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 版本升级方法</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/upgrade/</guid>
      <description>TiDB Binlog 版本升级方法 如未特别指明，文中出现的 TiDB Binlog 均指最新的 Cluster 版本。
本文会分 Ansible 部署和手动部署两种情况介绍 TiDB Binlog 版本升级的方法，另外有一小节介绍如何从更早的不兼容版本（Kafka/Local 版本）升级到最新版本。
Ansible 部署 本节适用于使用 TiDB Ansible Playbook 部署的情况。
升级 Pump  将新版本的二进制文件 pump 复制到 {{ resources_dir }}/bin 目录中 执行 ansible-playbook rolling_update.yml --tags=pump 命令来滚动升级 Pump  升级 Drainer  将新版本的二进制文件 drainer 复制到 {{ resources_dir }}/bin 目录中 执行 ansible-playbook stop_drainer.yml --tags=drainer 命令 执行 ansible-playbook start_drainer.yml --tags=drainer 命令  手动部署 升级 Pump 对集群里的每个 Pump 逐一升级，确保集群中总有 Pump 可以接收 TiDB 发来的 Binlog。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 版本升级方法</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/upgrade/</guid>
      <description>TiDB Binlog 版本升级方法 如未特别指明，文中出现的 TiDB Binlog 均指最新的 Cluster 版本。
本文会分 Ansible 部署和手动部署两种情况介绍 TiDB Binlog 版本升级的方法，另外有一小节介绍如何从更早的不兼容版本（Kafka/Local 版本）升级到最新版本。
Ansible 部署 本节适用于使用 TiDB Ansible Playbook 部署的情况。
升级 Pump  将新版本的二进制文件 pump 复制到 {{ resources_dir }}/bin 目录中 执行 ansible-playbook rolling_update.yml --tags=pump 命令来滚动升级 Pump  升级 Drainer  将新版本的二进制文件 drainer 复制到 {{ resources_dir }}/bin 目录中 执行 ansible-playbook stop_drainer.yml --tags=drainer 命令 执行 ansible-playbook start_drainer.yml --tags=drainer 命令  手动部署 升级 Pump 对集群里的每个 Pump 逐一升级，确保集群中总有 Pump 可以接收 TiDB 发来的 Binlog。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 简介</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/overview/</guid>
      <description>TiDB Binlog 简介 TiDB Binlog 是一个用于收集 TiDB 的 binlog，并提供准实时备份和同步功能的商业工具。
TiDB Binlog 支持以下功能场景：
 数据同步：同步 TiDB 集群数据到其他数据库 实时备份和恢复：备份 TiDB 集群数据，同时可以用于 TiDB 集群故障时恢复  TiDB Binlog 整体架构 TiDB Binlog 集群主要分为 Pump 和 Drainer 两个组件，以及 binlogctl 工具：
Pump Pump 用于实时记录 TiDB 产生的 Binlog，并将 Binlog 按照事务的提交时间进行排序，再提供给 Drainer 进行消费。
Drainer Drainer 从各个 Pump 中收集 Binlog 进行归并，再将 Binlog 转化成 SQL 或者指定格式的数据，最终同步到下游。
binlogctl 工具 binlogctl 是一个 TiDB Binlog 配套的运维工具，具有如下功能：
 获取 TiDB 集群当前的 TSO 查看 Pump/Drainer 状态 修改 Pump/Drainer 状态 暂停/下线 Pump/Drainer  主要特性  多个 Pump 形成一个集群，可以水平扩容。 TiDB 通过内置的 Pump Client 将 Binlog 分发到各个 Pump。 Pump 负责存储 Binlog，并将 Binlog 按顺序提供给 Drainer。 Drainer 负责读取各个 Pump 的 Binlog，归并排序后发送到下游。 Drainer 支持 relay log 功能，通过 relay log 保证下游集群的一致性状态。  注意事项   需要使用 TiDB v2.</description>
    </item>
    
    <item>
      <title>TiDB Binlog 简介</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/overview/</guid>
      <description>TiDB Binlog 简介 TiDB Binlog 是一个用于收集 TiDB 的 binlog，并提供准实时备份和同步功能的商业工具。
TiDB Binlog 支持以下功能场景：
 数据同步：同步 TiDB 集群数据到其他数据库 实时备份和恢复：备份 TiDB 集群数据，同时可以用于 TiDB 集群故障时恢复  TiDB Binlog 整体架构 TiDB Binlog 集群主要分为 Pump 和 Drainer 两个组件，以及 binlogctl 工具：
Pump Pump 用于实时记录 TiDB 产生的 Binlog，并将 Binlog 按照事务的提交时间进行排序，再提供给 Drainer 进行消费。
Drainer Drainer 从各个 Pump 中收集 Binlog 进行归并，再将 Binlog 转化成 SQL 或者指定格式的数据，最终同步到下游。
binlogctl 工具 binlogctl 是一个 TiDB Binlog 配套的运维工具，具有如下功能：
 获取 TiDB 集群当前的 TSO 查看 Pump/Drainer 状态 修改 Pump/Drainer 状态 暂停/下线 Pump/Drainer  主要特性  多个 Pump 形成一个集群，可以水平扩容。 TiDB 通过内置的 Pump Client 将 Binlog 分发到各个 Pump。 Pump 负责存储 Binlog，并将 Binlog 按顺序提供给 Drainer。 Drainer 负责读取各个 Pump 的 Binlog，归并排序后发送到下游。 Drainer 支持 relay log 功能，通过 relay log 保证下游集群的一致性状态。  注意事项   需要使用 TiDB v2.</description>
    </item>
    
    <item>
      <title>TiDB Binlog 简介</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/overview/</guid>
      <description>TiDB Binlog 简介 TiDB Binlog 是一个用于收集 TiDB 的 binlog，并提供准实时备份和同步功能的商业工具。
TiDB Binlog 支持以下功能场景：
 数据同步：同步 TiDB 集群数据到其他数据库 实时备份和恢复：备份 TiDB 集群数据，同时可以用于 TiDB 集群故障时恢复  TiDB Binlog 整体架构 TiDB Binlog 集群主要分为 Pump 和 Drainer 两个组件，以及 binlogctl 工具：
Pump Pump 用于实时记录 TiDB 产生的 Binlog，并将 Binlog 按照事务的提交时间进行排序，再提供给 Drainer 进行消费。
Drainer Drainer 从各个 Pump 中收集 Binlog 进行归并，再将 Binlog 转化成 SQL 或者指定格式的数据，最终同步到下游。
binlogctl 工具 binlogctl 是一个 TiDB Binlog 配套的运维工具，具有如下功能：
 获取 TiDB 集群当前的 TSO 查看 Pump/Drainer 状态 修改 Pump/Drainer 状态 暂停/下线 Pump/Drainer  主要特性  多个 Pump 形成一个集群，可以水平扩容。 TiDB 通过内置的 Pump Client 将 Binlog 分发到各个 Pump。 Pump 负责存储 Binlog，并将 Binlog 按顺序提供给 Drainer。 Drainer 负责读取各个 Pump 的 Binlog，归并排序后发送到下游。  注意事项   需要使用 TiDB v2.</description>
    </item>
    
    <item>
      <title>TiDB Binlog 简介</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/overview/</guid>
      <description>TiDB Binlog 简介 TiDB Binlog 是一个用于收集 TiDB 的 binlog，并提供准实时备份和同步功能的商业工具。
TiDB Binlog 支持以下功能场景：
 数据同步：同步 TiDB 集群数据到其他数据库 实时备份和恢复：备份 TiDB 集群数据，同时可以用于 TiDB 集群故障时恢复  TiDB Binlog 整体架构 TiDB Binlog 集群主要分为 Pump 和 Drainer 两个组件，以及 binlogctl 工具：
Pump Pump 用于实时记录 TiDB 产生的 Binlog，并将 Binlog 按照事务的提交时间进行排序，再提供给 Drainer 进行消费。
Drainer Drainer 从各个 Pump 中收集 Binlog 进行归并，再将 Binlog 转化成 SQL 或者指定格式的数据，最终同步到下游。
binlogctl 工具 binlogctl 是一个 TiDB Binlog 配套的运维工具，具有如下功能：
 获取 TiDB 集群当前的 TSO 查看 Pump/Drainer 状态 修改 Pump/Drainer 状态 暂停/下线 Pump/Drainer  主要特性  多个 Pump 形成一个集群，可以水平扩容。 TiDB 通过内置的 Pump Client 将 Binlog 分发到各个 Pump。 Pump 负责存储 Binlog，并将 Binlog 按顺序提供给 Drainer。 Drainer 负责读取各个 Pump 的 Binlog，归并排序后发送到下游。 Drainer 支持 relay log 功能，通过 relay log 保证下游集群的一致性状态。  注意事项   需要使用 TiDB v2.</description>
    </item>
    
    <item>
      <title>TiDB Binlog 运维</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/tidb-binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/tidb-binlog/</guid>
      <description>了解如何在 Kubernetes 上运维 TiDB 集群的 TiDB Binlog。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 运维</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/tidb-binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/tidb-binlog/</guid>
      <description>了解如何在 Kubernetes 上运维 TiDB 集群的 TiDB Binlog。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 运维</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/tidb-binlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/tidb-binlog/</guid>
      <description>了解如何在 Kubernetes 上运维 TiDB 集群的 TiDB Binlog。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 配置说明</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/configs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/configs/</guid>
      <description>TiDB Binlog 配置说明 本文档介绍 TiDB Binlog 的各项配置说明。
Pump 本节介绍 Pump 的配置项。可以在 Pump Configuration 中查看完整的 Pump 配置文件示例。
addr  HTTP API 的监听地址，格式为 host:port。 默认：&amp;quot;127.0.0.1:8250&amp;quot;  advertise-addr  对外可访问的 HTTP API 地址。这个地址会被注册到 PD，格式为 host:port。 默认：与 addr 的配置相同。  socket  HTTP API 监听的 Unix socket 地址。 默认：&amp;quot;&amp;quot;  pd-urls  由逗号分隔的 PD URL 列表。如果指定了多个地址，PD 客户端在连接一个地址时出错时会自动尝试连接另一个地址。 默认：&amp;quot;http://127.0.0.1:2379&amp;quot;  data-dir  本地存放 binlog 及其索引的目录。 默认：&amp;quot;data.pump&amp;quot;  heartbeat-interval  心跳间隔，即每隔指定秒数向 PD 汇报最新的状态。 默认：2  gen-binlog-interval  指定写入 fake binlog 的间隔秒数。 默认：3  gc  指定 binlog 可在本地存储的天数（整型）。超过指定天数的 binlog 会被自动删除。 默认：7  log-file  保存日志文件的路径。如果为空，日志不会被保存。 默认：&amp;quot;&amp;quot;  log-level  Log 等级。 默认：&amp;quot;info&amp;quot;  node-id  Pump 节点的 ID，用于在集群中识别这个进程。 默认：主机名:端口号，例如 node-1:8250。  security 以下是与安全相关的配置项。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 配置说明</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/configs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/configs/</guid>
      <description>TiDB Binlog 配置说明 本文档介绍 TiDB Binlog 的各项配置说明。
Pump 本节介绍 Pump 的配置项。可以在 Pump Configuration 中查看完整的 Pump 配置文件示例。
addr  HTTP API 的监听地址，格式为 host:port。 默认：&amp;quot;127.0.0.1:8250&amp;quot;  advertise-addr  对外可访问的 HTTP API 地址。这个地址会被注册到 PD，格式为 host:port。 默认：与 addr 的配置相同。  socket  HTTP API 监听的 Unix socket 地址。 默认：&amp;quot;&amp;quot;  pd-urls  由逗号分隔的 PD URL 列表。如果指定了多个地址，PD 客户端在连接一个地址时出错时会自动尝试连接另一个地址。 默认：&amp;quot;http://127.0.0.1:2379&amp;quot;  data-dir  本地存放 binlog 及其索引的目录。 默认：&amp;quot;data.pump&amp;quot;  heartbeat-interval  心跳间隔，即每隔指定秒数向 PD 汇报最新的状态。 默认：2  gen-binlog-interval  指定写入 fake binlog 的间隔秒数。 默认：3  gc  指定 binlog 可在本地存储的天数（整型）。超过指定天数的 binlog 会被自动删除。 默认：7  log-file  保存日志文件的路径。如果为空，日志不会被保存。 默认：&amp;quot;&amp;quot;  log-level  Log 等级。 默认：&amp;quot;info&amp;quot;  node-id  Pump 节点的 ID，用于在集群中识别这个进程。 默认：主机名:端口号，例如 node-1:8250。  security 以下是与安全相关的配置项。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 配置说明</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/configs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/configs/</guid>
      <description>TiDB Binlog 配置说明 本文档介绍 TiDB Binlog 的各项配置说明。
Pump 本节介绍 Pump 的配置项。可以在 Pump Configuration 中查看完整的 Pump 配置文件示例。
addr  HTTP API 的监听地址，格式为 host:port。 默认：&amp;quot;127.0.0.1:8250&amp;quot;  advertise-addr  对外可访问的 HTTP API 地址。这个地址会被注册到 PD，格式为 host:port。 默认：与 addr 的配置相同。  socket  HTTP API 监听的 Unix socket 地址。 默认：&amp;quot;&amp;quot;  pd-urls  由逗号分隔的 PD URL 列表。如果指定了多个地址，PD 客户端在连接一个地址时出错时会自动尝试连接另一个地址。 默认：&amp;quot;http://127.0.0.1:2379&amp;quot;  data-dir  本地存放 binlog 及其索引的目录。 默认：&amp;quot;data.pump&amp;quot;  heartbeat-interval  心跳间隔，即每隔指定秒数向 PD 汇报最新的状态。 默认：2  gen-binlog-interval  指定写入 fake binlog 的间隔秒数。 默认：3  gc  指定 binlog 可在本地存储的天数（整型）。超过指定天数的 binlog 会被自动删除。 默认：7  log-file  保存日志文件的路径。如果为空，日志不会被保存。 默认：&amp;quot;&amp;quot;  log-level  Log 等级。 默认：&amp;quot;info&amp;quot;  node-id  Pump 节点的 ID，用于在集群中识别这个进程。 默认：主机名:端口号，例如 node-1:8250。  security 以下是与安全相关的配置项。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 配置说明</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/configs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/configs/</guid>
      <description>TiDB Binlog 配置说明 本文档介绍 TiDB Binlog 的各项配置说明。
Pump 本节介绍 Pump 的配置项。可以在 Pump Configuration 中查看完整的 Pump 配置文件示例。
addr  HTTP API 的监听地址，格式为 host:port。 默认：&amp;quot;127.0.0.1:8250&amp;quot;  advertise-addr  对外可访问的 HTTP API 地址。这个地址会被注册到 PD，格式为 host:port。 默认：与 addr 的配置相同。  socket  HTTP API 监听的 Unix socket 地址。 默认：&amp;quot;&amp;quot;  pd-urls  由逗号分隔的 PD URL 列表。如果指定了多个地址，PD 客户端在连接一个地址时出错时会自动尝试连接另一个地址。 默认：&amp;quot;http://127.0.0.1:2379&amp;quot;  data-dir  本地存放 binlog 及其索引的目录。 默认：&amp;quot;data.pump&amp;quot;  heartbeat-interval  心跳间隔，即每隔指定秒数向 PD 汇报最新的状态。 默认：2  gen-binlog-interval  指定写入 fake binlog 的间隔秒数。 默认：3  gc  指定 binlog 可在本地存储的天数（整型）。超过指定天数的 binlog 会被自动删除。 默认：7  log-file  保存日志文件的路径。如果为空，日志不会被保存。 默认：&amp;quot;&amp;quot;  log-level  Log 等级。 默认：&amp;quot;info&amp;quot;  node-id  Pump 节点的 ID，用于在集群中识别这个进程。 默认：主机名:端口号，例如 node-1:8250。  security 以下是与安全相关的配置项。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 集群监控</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/monitor/</guid>
      <description>TiDB Binlog 集群监控 使用 Ansible 成功部署 TiDB Binlog 集群后，可以进入 Grafana Web 界面（默认地址: http://grafana_ip:3000，默认账号：admin，密码：admin）查看 Pump 和 Drainer 的运行状态。
监控指标 Pump    metric 名称 说明     Storage Size 记录磁盘的总空间大小 (capacity)，以及可用磁盘空间大小 (available)   Metadata 记录每个 Pump 的可删除 binlog 的最大 tso (gc_tso)，以及保存的 binlog 的最大的 commit tso (max_commit_tso)。   Write Binlog QPS by Instance 每个 Pump 接收到的写 binlog 请求的 QPS   Write Binlog Latency 记录每个 Pump 写 binlog 的延迟时间   Storage Write Binlog Size Pump 写 binlog 数据的大小   Storage Write Binlog Latency Pump 中的 storage 模块写 binlog 数据的延迟   Pump Storage Error By Type Pump 遇到的 error 数量，按照 error 的类型进行统计   Query TiKV Pump 通过 TiKV 查询事务状态的次数    Drainer    metric 名称 说明     Checkpoint TSO Drainer 已经同步到下游的 binlog 的最大 TSO 对应的时间。可以通过该指标估算同步延迟时间   Pump Handle TSO 记录 Drainer 从各个 Pump 获取到的 binlog 的最大 TSO 对应的时间   95% Binlog Reach Duration By Pump 记录 binlog 从写入 Pump 到被 Drainer 获取到这个过程的延迟时间   Error By Type Drainer 遇到的 error 数量，按照 error 的类型进行统计   SQL Query Time Drainer 在下游执行 SQL 的耗时   Drainer Event 各种类型 event 的数量，event 包括 ddl、insert、delete、update、flush、savepoint   Execute Time 写入 binlog 到同步下游模块所消耗的时间   95% Binlog Size Drainer 从各个 Pump 获取到 binlog 数据的大小   DL Job Count Drainer 处理的 DDL 的数量   Queue Size Drainer 内部工作队列大小    监控报警规则 本节介绍了 TiDB Binlog 组件的报警项及相应的报警规则。根据严重级别，报警项可分为三类，按照严重程度由高到低依次为：紧急级别 (Emergency)、重要级别 (Critical)、警告级别 (Warning)。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 集群监控</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/monitor/</guid>
      <description>TiDB Binlog 集群监控 使用 Ansible 成功部署 TiDB Binlog 集群后，可以进入 Grafana Web 界面（默认地址: http://grafana_ip:3000，默认账号：admin，密码：admin）查看 Pump 和 Drainer 的运行状态。
监控指标 Pump    metric 名称 说明     Storage Size 记录磁盘的总空间大小 (capacity)，以及可用磁盘空间大小 (available)   Metadata 记录每个 Pump 的可删除 binlog 的最大 tso (gc_tso)，以及保存的 binlog 的最大的 commit tso (max_commit_tso)。   Write Binlog QPS by Instance 每个 Pump 接收到的写 binlog 请求的 QPS   Write Binlog Latency 记录每个 Pump 写 binlog 的延迟时间   Storage Write Binlog Size Pump 写 binlog 数据的大小   Storage Write Binlog Latency Pump 中的 storage 模块写 binlog 数据的延迟   Pump Storage Error By Type Pump 遇到的 error 数量，按照 error 的类型进行统计   Query TiKV Pump 通过 TiKV 查询事务状态的次数    Drainer    metric 名称 说明     Checkpoint TSO Drainer 已经同步到下游的 binlog 的最大 TSO 对应的时间。可以通过该指标估算同步延迟时间   Pump Handle TSO 记录 Drainer 从各个 Pump 获取到的 binlog 的最大 TSO 对应的时间   95% Binlog Reach Duration By Pump 记录 binlog 从写入 Pump 到被 Drainer 获取到这个过程的延迟时间   Error By Type Drainer 遇到的 error 数量，按照 error 的类型进行统计   SQL Query Time Drainer 在下游执行 SQL 的耗时   Drainer Event 各种类型 event 的数量，event 包括 ddl、insert、delete、update、flush、savepoint   Execute Time 写入 binlog 到同步下游模块所消耗的时间   95% Binlog Size Drainer 从各个 Pump 获取到 binlog 数据的大小   DL Job Count Drainer 处理的 DDL 的数量   Queue Size Drainer 内部工作队列大小    监控报警规则 本节介绍了 TiDB Binlog 组件的报警项及相应的报警规则。根据严重级别，报警项可分为三类，按照严重程度由高到低依次为：紧急级别 (Emergency)、重要级别 (Critical)、警告级别 (Warning)。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 集群监控</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/monitor/</guid>
      <description>TiDB Binlog 集群监控 使用 Ansible 成功部署 TiDB Binlog 集群后，可以进入 Grafana Web 界面（默认地址: http://grafana_ip:3000，默认账号：admin，密码：admin）查看 Pump 和 Drainer 的运行状态。
监控指标 Pump    metric 名称 说明     Storage Size 记录磁盘的总空间大小 (capacity)，以及可用磁盘空间大小 (available)   Metadata 记录每个 Pump 的可删除 binlog 的最大 tso (gc_tso)，以及保存的 binlog 的最大的 commit tso (max_commit_tso)。   Write Binlog QPS by Instance 每个 Pump 接收到的写 binlog 请求的 QPS   Write Binlog Latency 记录每个 Pump 写 binlog 的延迟时间   Storage Write Binlog Size Pump 写 binlog 数据的大小   Storage Write Binlog Latency Pump 中的 storage 模块写 binlog 数据的延迟   Pump Storage Error By Type Pump 遇到的 error 数量，按照 error 的类型进行统计   Query TiKV Pump 通过 TiKV 查询事务状态的次数    Drainer    metric 名称 说明     Checkpoint TSO Drainer 已经同步到下游的 binlog 的最大 TSO 对应的时间。可以通过该指标估算同步延迟时间   Pump Handle TSO 记录 Drainer 从各个 Pump 获取到的 binlog 的最大 TSO 对应的时间   95% Binlog Reach Duration By Pump 记录 binlog 从写入 Pump 到被 Drainer 获取到这个过程的延迟时间   Error By Type Drainer 遇到的 error 数量，按照 error 的类型进行统计   SQL Query Time Drainer 在下游执行 SQL 的耗时   Drainer Event 各种类型 event 的数量，event 包括 ddl、insert、delete、update、flush、savepoint   Execute Time 写入 binlog 到同步下游模块所消耗的时间   95% Binlog Size Drainer 从各个 Pump 获取到 binlog 数据的大小   DL Job Count Drainer 处理的 DDL 的数量   Queue Size Drainer 内部工作队列大小    监控报警规则 本节介绍了 TiDB Binlog 组件的报警项及相应的报警规则。根据严重级别，报警项可分为三类，按照严重程度由高到低依次为：紧急级别 (Emergency)、重要级别 (Critical)、警告级别 (Warning)。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 集群监控</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/monitor/</guid>
      <description>TiDB Binlog 集群监控 使用 Ansible 成功部署 TiDB Binlog 集群后，可以进入 Grafana Web 界面（默认地址: http://grafana_ip:3000，默认账号：admin，密码：admin）查看 Pump 和 Drainer 的运行状态。
监控指标 Pump    metric 名称 说明     Storage Size 记录磁盘的总空间大小 (capacity)，以及可用磁盘空间大小 (available)   Metadata 记录每个 Pump 的可删除 binlog 的最大 tso (gc_tso)，以及保存的 binlog 的最大的 commit tso (max_commit_tso)。   Write Binlog QPS by Instance 每个 Pump 接收到的写 binlog 请求的 QPS   Write Binlog Latency 记录每个 Pump 写 binlog 的延迟时间   Storage Write Binlog Size Pump 写 binlog 数据的大小   Storage Write Binlog Latency Pump 中的 storage 模块写 binlog 数据的延迟   Pump Storage Error By Type Pump 遇到的 error 数量，按照 error 的类型进行统计   Query TiKV Pump 通过 TiKV 查询事务状态的次数    Drainer    metric 名称 说明     Checkpoint TSO Drainer 已经同步到下游的 binlog 的最大 TSO 对应的时间。可以通过该指标估算同步延迟时间   Pump Handle TSO 记录 Drainer 从各个 Pump 获取到的 binlog 的最大 TSO 对应的时间   95% Binlog Reach Duration By Pump 记录 binlog 从写入 Pump 到被 Drainer 获取到这个过程的延迟时间   Error By Type Drainer 遇到的 error 数量，按照 error 的类型进行统计   SQL Query Time Drainer 在下游执行 SQL 的耗时   Drainer Event 各种类型 event 的数量，event 包括 ddl、insert、delete、update、flush、savepoint   Execute Time 写入 binlog 到同步下游模块所消耗的时间   95% Binlog Size Drainer 从各个 Pump 获取到 binlog 数据的大小   DL Job Count Drainer 处理的 DDL 的数量   Queue Size Drainer 内部工作队列大小    监控报警规则 本节介绍了 TiDB Binlog 组件的报警项及相应的报警规则。根据严重级别，报警项可分为三类，按照严重程度由高到低依次为：紧急级别 (Emergency)、重要级别 (Critical)、警告级别 (Warning)。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 集群运维</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/maintain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/maintain/</guid>
      <description>TiDB Binlog 集群运维 本文首先介绍 Pump 和 Drainer 的状态及启动、退出的内部处理流程，然后说明如何通过 binlogctl 工具或者直接在 TiDB 执行 SQL 操作来管理 binlog 集群，最后的 FAQ 部分会介绍一些常见问题以及处理方法。
Pump/Drainer 的状态 Pump/Drainer 中状态的定义：
 online：正常运行中 pausing：暂停中 paused：已暂停 closing：下线中 offline：已下线  这些状态由 Pump/Drainer 服务自身进行维护，并定时将状态信息更新到 PD 中。
Pump/Drainer 的启动、退出流程 Pump   启动：Pump 启动时会通知所有 online 状态的 Drainer，如果通知成功，则 Pump 将状态设置为 online，否则 Pump 将报错，然后将状态设置为 paused 并退出进程。
  退出：Pump 进程正常退出前要选择进入暂停或者下线状态；非正常退出（kill -9、进程 panic、宕机）都依然保持 online 状态。
 暂停：使用 kill（非 kill -9）、Ctrl+C 或者使用 binlogctl 的 pause-pump 命令都可以暂停 Pump。接收到暂停指令后，Pump 会变更状态为 pausing，并停止接受 binlog 的写请求，也停止向 Drainer 提供 binlog 数据。安全退出所有线程后，更新状态为 paused 然后退出进程。 下线：仅在使用 binlogctl 的 offline-pump 命令的情况下才会下线 Pump。接收到下线指令后，Pump 会变更状态为 closing，并停止接受 binlog 的写请求。Pump 继续向 Drainer 提供 binlog，等待所有 binlog 数据都被 Drainer 消费后再将状态设置为 offline 并退出进程。    Drainer   启动：Drainer 启动时将状态设置为 online，并尝试从所有非 offline 状态的 Pump 获取 binlog，如果获取 binlog 失败，会不断尝试重新获取。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 集群运维</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/maintain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/maintain/</guid>
      <description>TiDB Binlog 集群运维 本文首先介绍 Pump 和 Drainer 的状态及启动、退出的内部处理流程，然后说明如何通过 binlogctl 工具或者直接在 TiDB 执行 SQL 操作来管理 binlog 集群，最后的 FAQ 部分会介绍一些常见问题以及处理方法。
Pump/Drainer 的状态 Pump/Drainer 中状态的定义：
 online：正常运行中 pausing：暂停中 paused：已暂停 closing：下线中 offline：已下线  这些状态由 Pump/Drainer 服务自身进行维护，并定时将状态信息更新到 PD 中。
Pump/Drainer 的启动、退出流程 Pump   启动：Pump 启动时会通知所有 online 状态的 Drainer，如果通知成功，则 Pump 将状态设置为 online，否则 Pump 将报错，然后将状态设置为 paused 并退出进程。
  退出：Pump 进程正常退出前要选择进入暂停或者下线状态；非正常退出（kill -9、进程 panic、宕机）都依然保持 online 状态。
 暂停：使用 kill（非 kill -9）、Ctrl+C 或者使用 binlogctl 的 pause-pump 命令都可以暂停 Pump。接收到暂停指令后，Pump 会变更状态为 pausing，并停止接受 binlog 的写请求，也停止向 Drainer 提供 binlog 数据。安全退出所有线程后，更新状态为 paused 然后退出进程。 下线：仅在使用 binlogctl 的 offline-pump 命令的情况下才会下线 Pump。接收到下线指令后，Pump 会变更状态为 closing，并停止接受 binlog 的写请求。Pump 继续向 Drainer 提供 binlog，等待所有 binlog 数据都被 Drainer 消费后再将状态设置为 offline 并退出进程。    Drainer   启动：Drainer 启动时将状态设置为 online，并尝试从所有非 offline 状态的 Pump 获取 binlog，如果获取 binlog 失败，会不断尝试重新获取。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 集群运维</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/maintain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/maintain/</guid>
      <description>TiDB Binlog 集群运维 本文首先介绍 Pump 和 Drainer 的状态及启动、退出的内部处理流程，然后说明如何通过 binlogctl 工具或者直接在 TiDB 执行 SQL 操作来管理 binlog 集群，最后的 FAQ 部分会介绍一些常见问题以及处理方法。
Pump/Drainer 的状态 Pump/Drainer 中状态的定义：
 online：正常运行中 pausing：暂停中 paused：已暂停 closing：下线中 offline：已下线  这些状态由 Pump/Drainer 服务自身进行维护，并定时将状态信息更新到 PD 中。
Pump/Drainer 的启动、退出流程 Pump   启动：Pump 启动时会通知所有 online 状态的 Drainer，如果通知成功，则 Pump 将状态设置为 online，否则 Pump 将报错，然后将状态设置为 paused 并退出进程。
  退出：Pump 进程正常退出前要选择进入暂停或者下线状态；非正常退出（kill -9、进程 panic、宕机）都依然保持 online 状态。
 暂停：使用 kill（非 kill -9）、Ctrl+C 或者使用 binlogctl 的 pause-pump 命令都可以暂停 Pump。接收到暂停指令后，Pump 会变更状态为 pausing，并停止接受 binlog 的写请求，也停止向 Drainer 提供 binlog 数据。安全退出所有线程后，更新状态为 paused 然后退出进程。 下线：仅在使用 binlogctl 的 offline-pump 命令的情况下才会下线 Pump。接收到下线指令后，Pump 会变更状态为 closing，并停止接受 binlog 的写请求。Pump 继续向 Drainer 提供 binlog，等待所有 binlog 数据都被 Drainer 消费后再将状态设置为 offline 并退出进程。    Drainer   启动：Drainer 启动时将状态设置为 online，并尝试从所有非 offline 状态的 Pump 获取 binlog，如果获取 binlog 失败，会不断尝试重新获取。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 集群运维</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/maintain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/maintain/</guid>
      <description>TiDB Binlog 集群运维 本文首先介绍 Pump 和 Drainer 的状态及启动、退出的内部处理流程，然后说明如何通过 binlogctl 工具或者直接在 TiDB 执行 SQL 操作来管理 binlog 集群，最后的 FAQ 部分会介绍一些常见问题以及处理方法。
Pump/Drainer 的状态 Pump/Drainer 中状态的定义：
 online：正常运行中 pausing：暂停中 paused：已暂停 closing：下线中 offline：已下线  这些状态由 Pump/Drainer 服务自身进行维护，并定时将状态信息更新到 PD 中。
Pump/Drainer 的启动、退出流程 Pump   启动：Pump 启动时会通知所有 online 状态的 Drainer，如果通知成功，则 Pump 将状态设置为 online，否则 Pump 将报错，然后将状态设置为 paused 并退出进程。
  退出：Pump 进程正常退出前要选择进入暂停或者下线状态；非正常退出（kill -9、进程 panic、宕机）都依然保持 online 状态。
 暂停：使用 kill（非 kill -9）、Ctrl+C 或者使用 binlogctl 的 pause-pump 命令都可以暂停 Pump。接收到暂停指令后，Pump 会变更状态为 pausing，并停止接受 binlog 的写请求，也停止向 Drainer 提供 binlog 数据。安全退出所有线程后，更新状态为 paused 然后退出进程。 下线：仅在使用 binlogctl 的 offline-pump 命令的情况下才会下线 Pump。接收到下线指令后，Pump 会变更状态为 closing，并停止接受 binlog 的写请求。Pump 继续向 Drainer 提供 binlog，等待所有 binlog 数据都被 Drainer 消费后再将状态设置为 offline 并退出进程。    Drainer   启动：Drainer 启动时将状态设置为 online，并尝试从所有非 offline 状态的 Pump 获取 binlog，如果获取 binlog 失败，会不断尝试重新获取。</description>
    </item>
    
    <item>
      <title>TiDB Binlog 集群部署</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/deploy/</guid>
      <description>TiDB Binlog 集群部署 服务器要求 Pump 和 Drainer 均可部署和运行在 Intel x86-64 架构的 64 位通用硬件服务器平台上。在开发、测试和生产环境下，对服务器硬件配置的要求和建议如下：
   服务 部署数量 CPU 磁盘 内存     Pump 3 8核+ SSD, 200 GB+ 16G   Drainer 1 8核+ SAS, 100 GB+ （如果输出 binlog 为本地文件，磁盘大小视保留数据天数而定） 16G    使用 TiDB Ansible 部署 TiDB Binlog 第 1 步：下载 TiDB Ansible   以 TiDB 用户登录中控机并进入 /home/tidb 目录。以下为 TiDB Ansible 分支与 TiDB 版本的对应关系，版本选择可咨询官方 info@pingcap.</description>
    </item>
    
    <item>
      <title>TiDB Binlog 集群部署</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/deploy/</guid>
      <description>TiDB Binlog 集群部署 服务器要求 Pump 和 Drainer 均可部署和运行在 Intel x86-64 架构的 64 位通用硬件服务器平台上。在开发、测试和生产环境下，对服务器硬件配置的要求和建议如下：
   服务 部署数量 CPU 磁盘 内存     Pump 3 8核+ SSD, 200 GB+ 16G   Drainer 1 8核+ SAS, 100 GB+ （如果输出 binlog 为本地文件，磁盘大小视保留数据天数而定） 16G    使用 TiDB Ansible 部署 TiDB Binlog 第 1 步：下载 TiDB Ansible   以 TiDB 用户登录中控机并进入 /home/tidb 目录。以下为 TiDB Ansible 分支与 TiDB 版本的对应关系，版本选择可咨询官方 info@pingcap.</description>
    </item>
    
    <item>
      <title>TiDB Binlog 集群部署</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tidb-binlog/deploy/</guid>
      <description>TiDB Binlog 集群部署 服务器要求 Pump 和 Drainer 均可部署和运行在 Intel x86-64 架构的 64 位通用硬件服务器平台上。在开发、测试和生产环境下，对服务器硬件配置的要求和建议如下：
   服务 部署数量 CPU 磁盘 内存     Pump 3 8核+ SSD, 200 GB+ 16G   Drainer 1 8核+ SAS, 100 GB+ （如果输出 binlog 为本地文件，磁盘大小视保留数据天数而定） 16G    使用 TiDB Ansible 部署 TiDB Binlog 第 1 步：下载 TiDB Ansible   以 TiDB 用户登录中控机并进入 /home/tidb 目录。以下为 TiDB Ansible 分支与 TiDB 版本的对应关系，版本选择可咨询官方 info@pingcap.</description>
    </item>
    
    <item>
      <title>TiDB Binlog 集群部署</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/deploy/</guid>
      <description>TiDB Binlog 集群部署 服务器要求 Pump 和 Drainer 均可部署和运行在 Intel x86-64 架构的 64 位通用硬件服务器平台上。在开发、测试和生产环境下，对服务器硬件配置的要求和建议如下：
   服务 部署数量 CPU 磁盘 内存     Pump 3 8核+ SSD, 200 GB+ 16G   Drainer 1 8核+ SAS, 100 GB+ （如果输出 binlog 为本地文件，磁盘大小视保留数据天数而定） 16G    使用 TiDB Ansible 部署 TiDB Binlog 第 1 步：下载 TiDB Ansible   以 TiDB 用户登录中控机并进入 /home/tidb 目录。以下为 TiDB Ansible 分支与 TiDB 版本的对应关系，版本选择可咨询官方 info@pingcap.</description>
    </item>
    
    <item>
      <title>TiDB Cloud Sign Up</title>
      <link>https://pingcap.com/tidb-cloud/sign-up/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-cloud/sign-up/</guid>
      <description></description>
    </item>
    
    <item>
      <title>TiDB Cluster Alert Rules</title>
      <link>https://pingcap.com/docs/dev/reference/alert-rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/alert-rules/</guid>
      <description>Learn the alert rules in a TiDB cluster.</description>
    </item>
    
    <item>
      <title>TiDB Cluster Alert Rules</title>
      <link>https://pingcap.com/docs/stable/reference/alert-rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/alert-rules/</guid>
      <description>Learn the alert rules in a TiDB cluster.</description>
    </item>
    
    <item>
      <title>TiDB Cluster Alert Rules</title>
      <link>https://pingcap.com/docs/v2.1/reference/alert-rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/alert-rules/</guid>
      <description>Learn the alert rules in a TiDB cluster.</description>
    </item>
    
    <item>
      <title>TiDB Cluster Alert Rules</title>
      <link>https://pingcap.com/docs/v3.1/reference/alert-rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/alert-rules/</guid>
      <description>Learn the alert rules in a TiDB cluster.</description>
    </item>
    
    <item>
      <title>TiDB Cluster Configurations in Kubernetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/reference/configuration/tidb-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/reference/configuration/tidb-cluster/</guid>
      <description>Learn the configurations of a TiDB cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>TiDB Cluster Configurations in Kubernetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/reference/configuration/tidb-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/reference/configuration/tidb-cluster/</guid>
      <description>Learn the configurations of a TiDB cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>TiDB Cluster Configurations in Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/reference/configuration/tidb-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/reference/configuration/tidb-cluster/</guid>
      <description>Learn the configurations of a TiDB cluster in Kubernetes.</description>
    </item>
    
    <item>
      <title>TiDB Cluster Troubleshooting Guide</title>
      <link>https://pingcap.com/docs/dev/how-to/troubleshoot/cluster-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/troubleshoot/cluster-setup/</guid>
      <description>Learn how to diagnose and resolve issues when you use TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Cluster Troubleshooting Guide</title>
      <link>https://pingcap.com/docs/stable/how-to/troubleshoot/cluster-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/troubleshoot/cluster-setup/</guid>
      <description>Learn how to diagnose and resolve issues when you use TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Cluster Troubleshooting Guide</title>
      <link>https://pingcap.com/docs/v2.1/how-to/troubleshoot/cluster-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/troubleshoot/cluster-setup/</guid>
      <description>Learn how to diagnose and resolve issues when you use TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Cluster Troubleshooting Guide</title>
      <link>https://pingcap.com/docs/v3.1/how-to/troubleshoot/cluster-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/troubleshoot/cluster-setup/</guid>
      <description>Learn how to diagnose and resolve issues when you use TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Configuration File</title>
      <link>https://pingcap.com/docs/dev/reference/configuration/tidb-server/configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/configuration/tidb-server/configuration-file/</guid>
      <description>Learn the TiDB configuration file options that are not involved in command line options.</description>
    </item>
    
    <item>
      <title>TiDB Configuration File</title>
      <link>https://pingcap.com/docs/stable/reference/configuration/tidb-server/configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/configuration/tidb-server/configuration-file/</guid>
      <description>Learn the TiDB configuration file options that are not involved in command line options.</description>
    </item>
    
    <item>
      <title>TiDB Configuration File</title>
      <link>https://pingcap.com/docs/v3.1/reference/configuration/tidb-server/configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/configuration/tidb-server/configuration-file/</guid>
      <description>Learn the TiDB configuration file options that are not involved in command line options.</description>
    </item>
    
    <item>
      <title>TiDB Configuration File Description</title>
      <link>https://pingcap.com/docs/v2.1/reference/configuration/tidb-server/configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/configuration/tidb-server/configuration-file/</guid>
      <description>Learn the TiDB configuration file options that are not involved in command line options.</description>
    </item>
    
    <item>
      <title>TiDB Controller User Guide</title>
      <link>https://pingcap.com/docs/dev/reference/tools/tidb-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/tidb-control/</guid>
      <description>Use TiDB Controller to obtain TiDB status information for debugging.</description>
    </item>
    
    <item>
      <title>TiDB Controller User Guide</title>
      <link>https://pingcap.com/docs/stable/reference/tools/tidb-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/tidb-control/</guid>
      <description>Use TiDB Controller to obtain TiDB status information for debugging.</description>
    </item>
    
    <item>
      <title>TiDB Controller User Guide</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/tidb-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/tidb-control/</guid>
      <description>Use TiDB Controller to obtain TiDB status information for debugging.</description>
    </item>
    
    <item>
      <title>TiDB Controller User Guide</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/tidb-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/tidb-control/</guid>
      <description>Use TiDB Controller to obtain TiDB status information for debugging.</description>
    </item>
    
    <item>
      <title>TiDB Controller 使用说明</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/tidb-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/tidb-control/</guid>
      <description>TiDB Controller 使用说明 TiDB Controller 是 TiDB 的命令行工具，用于获取 TiDB 状态信息，多用于调试。
源码编译 编译环境要求：Go Version 1.7 以上
编译步骤：在 TiDB Controller 项目根目录，使用 make 命令进行编译，生成 tidb-ctl。
编译文档：帮助文档在 doc 文件夹下，如丢失或需要更新，可通过 make doc 命令生成帮助文档。
使用介绍 tidb-ctl 的使用由命令（包括子命令）、选项和参数组成。命令即不带 - 或者 -- 的字符，选项即带有 - 或者 -- 的字符，参数即命令或选项字符后紧跟的传递给命令和选项的字符。
如：tidb-ctl schema in mysql -n db
 schema: 命令 in: schema 的子命令 mysql: in 的参数 -n: 选项 db: -n 的参数  获取帮助 tidb-ctl -h/--help 用于获取帮助信息。tidb-ctl 由多层命令组成，tidb-ctl 及其所有子命令都可以通过 -h/--help 来获取使用帮助。
连接 tidb-ctl 与连接相关的参数有 4 个，分别为：</description>
    </item>
    
    <item>
      <title>TiDB Controller 使用说明</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/tidb-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/tidb-control/</guid>
      <description>TiDB Controller 使用说明 TiDB Controller 是 TiDB 的命令行工具，用于获取 TiDB 状态信息，多用于调试。
源码编译 编译环境要求：Go Version 1.7 以上
编译步骤：在 TiDB Controller 项目根目录，使用 make 命令进行编译，生成 tidb-ctl。
编译文档：帮助文档在 doc 文件夹下，如丢失或需要更新，可通过 make doc 命令生成帮助文档。
使用介绍 tidb-ctl 的使用由命令（包括子命令）、选项和参数组成。命令即不带 - 或者 -- 的字符，选项即带有 - 或者 -- 的字符，参数即命令或选项字符后紧跟的传递给命令和选项的字符。
如：tidb-ctl schema in mysql -n db
 schema: 命令 in: schema 的子命令 mysql: in 的参数 -n: 选项 db: -n 的参数  获取帮助 tidb-ctl -h/--help 用于获取帮助信息。tidb-ctl 由多层命令组成，tidb-ctl 及其所有子命令都可以通过 -h/--help 来获取使用帮助。
连接 tidb-ctl 与连接相关的参数有 4 个，分别为：</description>
    </item>
    
    <item>
      <title>TiDB Controller 使用说明</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/tidb-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/tidb-control/</guid>
      <description>TiDB Controller 使用说明 TiDB Controller 是 TiDB 的命令行工具，用于获取 TiDB 状态信息，多用于调试。
源码编译  编译环境要求：Go Version 1.7 以上。 编译步骤：在 TiDB Controller 项目根目录，使用 make 命令进行编译，生成 tidb-ctl。 编译文档：帮助文档在 doc 文件夹下，如丢失或需要更新，可通过 make doc 命令生成帮助文档。  使用介绍 tidb-ctl 的使用由命令（包括子命令）、选项和参数组成。命令即不带 - 或者 -- 的字符，选项即带有 - 或者 -- 的字符，参数即命令或选项字符后紧跟的传递给命令和选项的字符。
如：tidb-ctl schema in mysql -n db
 schema: 命令 in: schema 的子命令 mysql: in 的参数 -n: 选项 db: -n 的参数  获取帮助 tidb-ctl -h/--help 用于获取帮助信息。tidb-ctl 由多层命令组成，tidb-ctl 及其所有子命令都可以通过 -h/--help 来获取使用帮助。</description>
    </item>
    
    <item>
      <title>TiDB Controller 使用说明</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-control/</guid>
      <description>TiDB Controller 使用说明 TiDB Controller 是 TiDB 的命令行工具，用于获取 TiDB 状态信息，多用于调试。
源码编译 编译环境要求：Go Version 1.7 以上
编译步骤：在 TiDB Controller 项目根目录，使用 make 命令进行编译，生成 tidb-ctl。
编译文档：帮助文档在 doc 文件夹下，如丢失或需要更新，可通过 make doc 命令生成帮助文档。
使用介绍 tidb-ctl 的使用由命令（包括子命令）、选项和参数组成。命令即不带 - 或者 -- 的字符，选项即带有 - 或者 -- 的字符，参数即命令或选项字符后紧跟的传递给命令和选项的字符。
如：tidb-ctl schema in mysql -n db
 schema: 命令 in: schema 的子命令 mysql: in 的参数 -n: 选项 db: -n 的参数  获取帮助 tidb-ctl -h/--help 用于获取帮助信息。tidb-ctl 由多层命令组成，tidb-ctl 及其所有子命令都可以通过 -h/--help 来获取使用帮助。
连接 tidb-ctl 与连接相关的参数有 4 个，分别为：</description>
    </item>
    
    <item>
      <title>TiDB Data Migration FAQ</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/faq/</guid>
      <description>Learn about frequently asked questions (FAQs) about TiDB Data Migration (DM).</description>
    </item>
    
    <item>
      <title>TiDB Data Migration FAQ</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/faq/</guid>
      <description>Learn about frequently asked questions (FAQs) about TiDB Data Migration (DM).</description>
    </item>
    
    <item>
      <title>TiDB Data Migration FAQ</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/faq/</guid>
      <description>Learn about frequently asked questions (FAQs) about TiDB Data Migration (DM).</description>
    </item>
    
    <item>
      <title>TiDB Data Migration FAQ</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/faq/</guid>
      <description>Learn about frequently asked questions (FAQs) about TiDB Data Migration (DM).</description>
    </item>
    
    <item>
      <title>TiDB Data Migration Glossary</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/glossary/</guid>
      <description>Learn the terms used in TiDB Data Migration.</description>
    </item>
    
    <item>
      <title>TiDB Data Migration Glossary</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/glossary/</guid>
      <description>Learn the terms used in TiDB Data Migration.</description>
    </item>
    
    <item>
      <title>TiDB Data Migration Glossary</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/glossary/</guid>
      <description>Learn the terms used in TiDB Data Migration.</description>
    </item>
    
    <item>
      <title>TiDB Data Migration Glossary</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/glossary/</guid>
      <description>Learn the terms used in TiDB Data Migration.</description>
    </item>
    
    <item>
      <title>TiDB Data Migration 教程</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/get-started/data-migration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/get-started/data-migration/</guid>
      <description>TiDB Data Migration 教程 TiDB Data Migration (DM) 是一体化的数据同步任务管理平台，支持将大量、复杂的生产环境中的数据从 MySQL 或 MariaDB 迁移到 TiDB。
DM 功能如下：
 数据迁移  支持导出与导入源数据库的初始全量数据，并在数据迁移过程中读取、应用来自源数据库存储的 binlog，从而保持数据的同步。 通过合并上游的多个 MySQL 或 MariaDB 实例或集群的表，DM 能迁移生产环境中的分库分表。   将 TiDB 作为 MySQL 或 MariaDB 的从库时，DM 能持续提高数据库水平扩展的能力，或在无需 ETL 作业的情况下，在 TiDB 上进行数据实时分析。  本教程主要介绍如何使用 DM 迁移上游多个 MySQL 实例的一个分片表。包括两种场景：
 合并若干个互不冲突的表或分片，即这些表或分片的表结构并不会造成唯一键的冲突； 合并唯一键存在冲突的表。  本教程假设目前使用的是一台新的、纯净版 CentOS 7 实例，你能（使用 VMware、VirtualBox 及其他工具）在本地虚拟化或在供应商提供的平台上部署一台小型的云虚拟主机。因为需要运行多个服务，建议内存最好在 1 GB 以上。
 警告：
本教程中 TiDB 的部署方法并不适用于生产或开发环境。
 Data Migration 架构 TiDB Data Migration 平台由 3 部分组成：DM-master、DM-worker 和 dmctl。</description>
    </item>
    
    <item>
      <title>TiDB Data Migration 教程</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/get-started/data-migration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/get-started/data-migration/</guid>
      <description>TiDB Data Migration 教程 TiDB Data Migration (DM) 是一体化的数据同步任务管理平台，支持将大量、复杂的生产环境中的数据从 MySQL 或 MariaDB 迁移到 TiDB。
DM 功能如下：
 数据迁移  支持导出与导入源数据库的初始全量数据，并在数据迁移过程中读取、应用来自源数据库存储的 binlog，从而保持数据的同步。 通过合并上游的多个 MySQL 或 MariaDB 实例或集群的表，DM 能迁移生产环境中的分库分表。   将 TiDB 作为 MySQL 或 MariaDB 的从库时，DM 能持续提高数据库水平扩展的能力，或在无需 ETL 作业的情况下，在 TiDB 上进行数据实时分析。  本教程主要介绍如何使用 DM 迁移上游多个 MySQL 实例的一个分片表。包括两种场景：
 合并若干个互不冲突的表或分片，即这些表或分片的表结构并不会造成唯一键的冲突； 合并唯一键存在冲突的表。  本教程假设目前使用的是一台新的、纯净版 CentOS 7 实例，你能（使用 VMware、VirtualBox 及其他工具）在本地虚拟化或在供应商提供的平台上部署一台小型的云虚拟主机。因为需要运行多个服务，建议内存最好在 1 GB 以上。
 警告：
本教程中 TiDB 的部署方法并不适用于生产或开发环境。
 Data Migration 架构 TiDB Data Migration 平台由 3 部分组成：DM-master、DM-worker 和 dmctl。</description>
    </item>
    
    <item>
      <title>TiDB Data Migration 教程</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/get-started/data-migration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/get-started/data-migration/</guid>
      <description>TiDB Data Migration 教程 TiDB Data Migration (DM) 是一体化的数据同步任务管理平台，支持将大量、复杂的生产环境中的数据从 MySQL 或 MariaDB 迁移到 TiDB。
DM 功能如下：
 数据迁移  支持导出与导入源数据库的初始全量数据，并在数据迁移过程中读取、应用来自源数据库存储的 binlog，从而保持数据的同步。 通过合并上游的多个 MySQL 或 MariaDB 实例或集群的表，DM 能迁移生产环境中的分库分表。   将 TiDB 作为 MySQL 或 MariaDB 的从库时，DM 能持续提高数据库水平扩展的能力，或在无需 ETL 作业的情况下，在 TiDB 上进行数据实时分析。  本教程主要介绍如何使用 DM 迁移上游多个 MySQL 实例的一个分片表。包括两种场景：
 合并若干个互不冲突的表或分片，即这些表或分片的表结构并不会造成唯一键的冲突； 合并唯一键存在冲突的表。  本教程假设目前使用的是一台新的、纯净版 CentOS 7 实例，你能（使用 VMware、VirtualBox 及其他工具）在本地虚拟化或在供应商提供的平台上部署一台小型的云虚拟主机。因为需要运行多个服务，建议内存最好在 1 GB 以上。
 警告：
本教程中 TiDB 的部署方法并不适用于生产或开发环境。
 Data Migration 架构 TiDB Data Migration 平台由 3 部分组成：DM-master、DM-worker 和 dmctl。</description>
    </item>
    
    <item>
      <title>TiDB Data Migration 教程</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/get-started/data-migration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/get-started/data-migration/</guid>
      <description>TiDB Data Migration 教程 TiDB Data Migration (DM) 是一体化的数据同步任务管理平台，支持将大量、复杂的生产环境中的数据从 MySQL 或 MariaDB 迁移到 TiDB。
DM 功能如下：
 数据迁移  支持导出与导入源数据库的初始全量数据，并在数据迁移过程中读取、应用来自源数据库存储的 binlog，从而保持数据的同步。 通过合并上游的多个 MySQL 或 MariaDB 实例或集群的表，DM 能迁移生产环境中的分库分表。   将 TiDB 作为 MySQL 或 MariaDB 的从库时，DM 能持续提高数据库水平扩展的能力，或在无需 ETL 作业的情况下，在 TiDB 上进行数据实时分析。  本教程主要介绍如何使用 DM 迁移上游多个 MySQL 实例的一个分片表。包括两种场景：
 合并若干个互不冲突的表或分片，即这些表或分片的表结构并不会造成唯一键的冲突； 合并唯一键存在冲突的表。  本教程假设目前使用的是一台新的、纯净版 CentOS 7 实例，你能（使用 VMware、VirtualBox 及其他工具）在本地虚拟化或在供应商提供的平台上部署一台小型的云虚拟主机。因为需要运行多个服务，建议内存最好在 1 GB 以上。
 警告：
本教程中 TiDB 的部署方法并不适用于生产或开发环境。
 Data Migration 架构 TiDB Data Migration 平台由 3 部分组成：DM-master、DM-worker 和 dmctl。</description>
    </item>
    
    <item>
      <title>TiDB Data Migration 术语表</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/glossary/</guid>
      <description>学习 TiDB Data Migration 相关术语</description>
    </item>
    
    <item>
      <title>TiDB Data Migration 术语表</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/glossary/</guid>
      <description>学习 TiDB Data Migration 相关术语</description>
    </item>
    
    <item>
      <title>TiDB Data Migration 术语表</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/glossary/</guid>
      <description>学习 TiDB Data Migration 相关术语</description>
    </item>
    
    <item>
      <title>TiDB Data Migration 术语表</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/glossary/</guid>
      <description>学习 TiDB Data Migration 相关术语</description>
    </item>
    
    <item>
      <title>TiDB Data Type</title>
      <link>https://pingcap.com/docs/dev/reference/sql/data-types/default-values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/data-types/default-values/</guid>
      <description>Learn about default values for data types in TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Data Type</title>
      <link>https://pingcap.com/docs/dev/reference/sql/data-types/json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/data-types/json/</guid>
      <description>Learn about the JSON data type in TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Data Type</title>
      <link>https://pingcap.com/docs/stable/reference/sql/data-types/default-values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/data-types/default-values/</guid>
      <description>Learn about default values for data types in TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Data Type</title>
      <link>https://pingcap.com/docs/stable/reference/sql/data-types/json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/data-types/json/</guid>
      <description>Learn about the JSON data type in TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Data Type</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/data-types/default-values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/data-types/default-values/</guid>
      <description>Learn about default values for data types in TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Data Type</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/data-types/json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/data-types/json/</guid>
      <description>Learn about the JSON data type in TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Data Type</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/data-types/default-values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/data-types/default-values/</guid>
      <description>Learn about default values for data types in TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Data Type</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/data-types/json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/data-types/json/</guid>
      <description>Learn about the JSON data type in TiDB.</description>
    </item>
    
    <item>
      <title>TiDB DBA</title>
      <link>https://pingcap.com/about-cn/recruit/campus/campus-2020-tidb-dba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/campus/campus-2020-tidb-dba/</guid>
      <description>数据库工程师 岗位职责:
  负责对客户进行 TiDB 项目实施、技术支持，包括配置管理、升级、扩容、备份、数据迁移等工作；
  负责用户 TiDB 集群监控、故障响应、问题跟踪及性能分析处理；
  负责与用户进行需求沟通、技术培训，介绍 TiDB 的原理、使用方式、最佳实践等；
  研究 TiDB，对某细分方向，如 TiDB 自动化管理、SQL 优化、故障诊断等有持续产出和贡献。
  任职要求:
  以“折腾” Linux 为乐；
  掌握一门基础编程语言，如 C/C++/Go/Rust/…… 等；
  熟练掌握一门脚本语言，如 Shell/Python/Perl/…… 等；
  高度的责任心、良好的沟通技巧和团队合作精神。
  加分项:
  拥抱开源，对前沿技术有浓厚的热情和探索欲望，有开源项目经历；
  熟悉一种关系型数据库的（如 MySQL ）配置、备份、优化、监控、管理；
  良好的适应和学习能力对自己不设限，挑战如：数据可视化，监控告警 DevOPS，商业/工具产品设计等方向。
  待遇：
8K - 15K，13薪 + 奖金，优秀者可面议
联系方式：
hire@pingcap.com</description>
    </item>
    
    <item>
      <title>TiDB DM (Data Migration) Tutorial</title>
      <link>https://pingcap.com/docs/dev/how-to/get-started/data-migration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/get-started/data-migration/</guid>
      <description>Learn the basics of the TiDB DM (Data Migration) platform, to migrate a simple sharded schema from MySQL to TiDB.</description>
    </item>
    
    <item>
      <title>TiDB DM (Data Migration) Tutorial</title>
      <link>https://pingcap.com/docs/stable/how-to/get-started/data-migration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/get-started/data-migration/</guid>
      <description>Learn the basics of the TiDB DM (Data Migration) platform, to migrate a simple sharded schema from MySQL to TiDB.</description>
    </item>
    
    <item>
      <title>TiDB DM (Data Migration) Tutorial</title>
      <link>https://pingcap.com/docs/v2.1/how-to/get-started/data-migration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/get-started/data-migration/</guid>
      <description>Learn the basics of the TiDB DM (Data Migration) platform, to migrate a simple sharded schema from MySQL to TiDB.</description>
    </item>
    
    <item>
      <title>TiDB DM (Data Migration) Tutorial</title>
      <link>https://pingcap.com/docs/v3.1/how-to/get-started/data-migration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/get-started/data-migration/</guid>
      <description>Learn the basics of the TiDB DM (Data Migration) platform, to migrate a simple sharded schema from MySQL to TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Docker Compose Deployment</title>
      <link>https://pingcap.com/docs/dev/how-to/get-started/deploy-tidb-from-docker-compose/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/get-started/deploy-tidb-from-docker-compose/</guid>
      <description>Use Docker Compose to quickly deploy a TiDB testing cluster.</description>
    </item>
    
    <item>
      <title>TiDB Docker 部署方案</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/deploy/orchestrated/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/deploy/orchestrated/docker/</guid>
      <description>TiDB Docker 部署方案 本文介绍如何使用 Docker 部署一个多节点的 TiDB 集群。
 警告：
对于生产环境，不要使用 Docker 进行部署，而应使用 Ansible 部署 TiDB 集群。
 环境准备 安装 Docker Docker 可以方便地在 Linux / Mac OS / Windows 平台安装，安装方法请参考 Docker 官方文档。
拉取 TiDB 的 Docker 镜像 部署 TiDB 集群主要包括 3 个服务组件:
 TiDB TiKV PD  对应的最新 Docker 镜像可以通过 Docker 官方镜像仓库 获取：
 docker pull pingcap/tidb:latest  docker pull pingcap/tikv:latest  docker pull pingcap/pd:latest 部署一个多节点集群 假设我们打算在 6 台主机上部署一个 TiDB 集群:</description>
    </item>
    
    <item>
      <title>TiDB Docker 部署方案</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/deploy/orchestrated/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/deploy/orchestrated/docker/</guid>
      <description>TiDB Docker 部署方案 本文介绍如何使用 Docker 部署一个多节点的 TiDB 集群。
 警告：
对于生产环境，不要使用 Docker 进行部署，而应使用 Ansible 部署 TiDB 集群。
 环境准备 安装 Docker Docker 可以方便地在 Linux / Mac OS / Windows 平台安装，安装方法请参考 Docker 官方文档。
拉取 TiDB 的 Docker 镜像 部署 TiDB 集群主要包括 3 个服务组件:
 TiDB TiKV PD  对应的最新 Docker 镜像可以通过 Docker 官方镜像仓库 获取：
 docker pull pingcap/tidb:latest  docker pull pingcap/tikv:latest  docker pull pingcap/pd:latest 部署一个多节点集群 假设我们打算在 6 台主机上部署一个 TiDB 集群:</description>
    </item>
    
    <item>
      <title>TiDB Docker 部署方案</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/deploy/orchestrated/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/deploy/orchestrated/docker/</guid>
      <description>TiDB Docker 部署方案 本文介绍如何使用 Docker 部署一个多节点的 TiDB 集群。
 注意：
对于生产环境，不要使用 Docker 进行部署，而应使用 Ansible 部署 TiDB 集群。
 环境准备 安装 Docker Docker 可以方便地在 Linux / Mac OS / Windows 平台安装，安装方法请参考 Docker 官方文档。
拉取 TiDB 的 Docker 镜像 部署 TiDB 集群主要包括 3 个服务组件:
 TiDB TiKV PD  对应的最新 Docker 镜像可以通过 Docker 官方镜像仓库 获取：
docker pull pingcap/tidb:latest docker pull pingcap/tikv:latest docker pull pingcap/pd:latest 部署一个多节点集群 假设我们打算在 6 台主机上部署一个 TiDB 集群:
   主机名 IP 部署服务 数据盘挂载     host1 192.</description>
    </item>
    
    <item>
      <title>TiDB Docker 部署方案</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/deploy/orchestrated/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/deploy/orchestrated/docker/</guid>
      <description>TiDB Docker 部署方案 本文介绍如何使用 Docker 部署一个多节点的 TiDB 集群。
 警告：
对于生产环境，不要使用 Docker 进行部署，而应使用 Ansible 部署 TiDB 集群。
 环境准备 安装 Docker Docker 可以方便地在 Linux / Mac OS / Windows 平台安装，安装方法请参考 Docker 官方文档。
拉取 TiDB 的 Docker 镜像 部署 TiDB 集群主要包括 3 个服务组件:
 TiDB TiKV PD  对应的最新 Docker 镜像可以通过 Docker 官方镜像仓库 获取：
 docker pull pingcap/tidb:latest  docker pull pingcap/tikv:latest  docker pull pingcap/pd:latest 部署一个多节点集群 假设我们打算在 6 台主机上部署一个 TiDB 集群:</description>
    </item>
    
    <item>
      <title>TiDB Ecosystem Tools User Guide</title>
      <link>https://pingcap.com/docs/dev/reference/tools/user-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/user-guide/</guid>
      <description>TiDB Ecosystem Tools User Guide Currently, TiDB has multiple ecosystem tools. Some of them have overlapping functionality, and some are different versions of the same tool. This document introduces each of these tools, illustrates their relationship, and describes when to use which tool for each TiDB version.
TiDB ecosystem tools overview TiDB ecosystem tools can be divided into:
 Data import tools, including full import tools, backup and restore tools, incremental import tools, and so forth.</description>
    </item>
    
    <item>
      <title>TiDB Ecosystem Tools User Guide</title>
      <link>https://pingcap.com/docs/stable/reference/tools/user-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/user-guide/</guid>
      <description>TiDB Ecosystem Tools User Guide Currently, TiDB has multiple ecosystem tools. Some of them have overlapping functionality, and some are different versions of the same tool. This document introduces each of these tools, illustrates their relationship, and describes when to use which tool for each TiDB version.
TiDB ecosystem tools overview TiDB ecosystem tools can be divided into:
 Data import tools, including full import tools, backup and restore tools, incremental import tools, and so forth.</description>
    </item>
    
    <item>
      <title>TiDB Ecosystem Tools User Guide</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/user-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/user-guide/</guid>
      <description>TiDB Ecosystem Tools User Guide Currently, TiDB has multiple ecosystem tools. Some of them have overlapping functionality, and some are different versions of the same tool. This document introduces each of these tools, illustrates their relationship, and describes when to use which tool for each TiDB version.
TiDB ecosystem tools overview TiDB ecosystem tools can be divided into:
 Data import tools, including full import tools, backup and restore tools, incremental import tools, and so forth.</description>
    </item>
    
    <item>
      <title>TiDB FAQ</title>
      <link>https://pingcap.com/docs-cn/dev/faq/tidb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/faq/tidb/</guid>
      <description>FAQ 一、 TiDB 介绍、架构、原理 1.1 TiDB 介绍及整体架构 1.1.1 TiDB 整体架构 TiDB 简介
1.1.2 TiDB 是什么？ TiDB 是一个分布式 NewSQL 数据库。它支持水平弹性扩展、ACID 事务、标准 SQL、MySQL 语法和 MySQL 协议，具有数据强一致的高可用特性，是一个不仅适合 OLTP 场景还适合 OLAP 场景的混合数据库。
1.1.3 TiDB 是基于 MySQL 开发的吗？ 不是，虽然 TiDB 支持 MySQL 语法和协议，但是 TiDB 是由 PingCAP 团队完全自主开发的产品。
1.1.4 TiDB、TiKV、Placement Driver (PD) 主要作用？  TiDB 是 Server 计算层，主要负责 SQL 的解析、制定查询计划、生成执行器。 TiKV 是分布式 Key-Value 存储引擎，用来存储真正的数据，简而言之，TiKV 是 TiDB 的存储引擎。 PD 是 TiDB 集群的管理组件，负责存储 TiKV 的元数据，同时也负责分配时间戳以及对 TiKV 做负载均衡调度。  1.</description>
    </item>
    
    <item>
      <title>TiDB FAQ</title>
      <link>https://pingcap.com/docs-cn/stable/faq/tidb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/faq/tidb/</guid>
      <description>FAQ 一、 TiDB 介绍、架构、原理 1.1 TiDB 介绍及整体架构 1.1.1 TiDB 整体架构 TiDB 简介
1.1.2 TiDB 是什么？ TiDB 是一个分布式 NewSQL 数据库。它支持水平弹性扩展、ACID 事务、标准 SQL、MySQL 语法和 MySQL 协议，具有数据强一致的高可用特性，是一个不仅适合 OLTP 场景还适合 OLAP 场景的混合数据库。
1.1.3 TiDB 是基于 MySQL 开发的吗？ 不是，虽然 TiDB 支持 MySQL 语法和协议，但是 TiDB 是由 PingCAP 团队完全自主开发的产品。
1.1.4 TiDB、TiKV、Placement Driver (PD) 主要作用？  TiDB 是 Server 计算层，主要负责 SQL 的解析、制定查询计划、生成执行器。 TiKV 是分布式 Key-Value 存储引擎，用来存储真正的数据，简而言之，TiKV 是 TiDB 的存储引擎。 PD 是 TiDB 集群的管理组件，负责存储 TiKV 的元数据，同时也负责分配时间戳以及对 TiKV 做负载均衡调度。  1.</description>
    </item>
    
    <item>
      <title>TiDB FAQ</title>
      <link>https://pingcap.com/docs-cn/v2.1/faq/tidb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/faq/tidb/</guid>
      <description>FAQ 一、 TiDB 介绍、架构、原理 1.1 TiDB 介绍及整体架构 1.1.1 TiDB 整体架构 TiDB 简介
1.1.2 TiDB 是什么？ TiDB 是一个分布式 NewSQL 数据库。它支持水平弹性扩展、ACID 事务、标准 SQL、MySQL 语法和 MySQL 协议，具有数据强一致的高可用特性，是一个不仅适合 OLTP 场景还适合 OLAP 场景的混合数据库。
1.1.3 TiDB 是基于 MySQL 开发的吗？ 不是，虽然 TiDB 支持 MySQL 语法和协议，但是 TiDB 是由 PingCAP 团队完全自主开发的产品。
1.1.4 TiDB、TiKV、Placement Driver (PD) 主要作用？  TiDB 是 Server 计算层，主要负责 SQL 的解析、制定查询计划、生成执行器。 TiKV 是分布式 Key-Value 存储引擎，用来存储真正的数据，简而言之，TiKV 是 TiDB 的存储引擎。 PD 是 TiDB 集群的管理组件，负责存储 TiKV 的元数据，同时也负责分配时间戳以及对 TiKV 做负载均衡调度。  1.</description>
    </item>
    
    <item>
      <title>TiDB FAQ</title>
      <link>https://pingcap.com/docs-cn/v3.1/faq/tidb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/faq/tidb/</guid>
      <description>FAQ 一、 TiDB 介绍、架构、原理 1.1 TiDB 介绍及整体架构 1.1.1 TiDB 整体架构 TiDB 简介
1.1.2 TiDB 是什么？ TiDB 是一个分布式 NewSQL 数据库。它支持水平弹性扩展、ACID 事务、标准 SQL、MySQL 语法和 MySQL 协议，具有数据强一致的高可用特性，是一个不仅适合 OLTP 场景还适合 OLAP 场景的混合数据库。
1.1.3 TiDB 是基于 MySQL 开发的吗？ 不是，虽然 TiDB 支持 MySQL 语法和协议，但是 TiDB 是由 PingCAP 团队完全自主开发的产品。
1.1.4 TiDB、TiKV、Placement Driver (PD) 主要作用？  TiDB 是 Server 计算层，主要负责 SQL 的解析、制定查询计划、生成执行器。 TiKV 是分布式 Key-Value 存储引擎，用来存储真正的数据，简而言之，TiKV 是 TiDB 的存储引擎。 PD 是 TiDB 集群的管理组件，负责存储 TiKV 的元数据，同时也负责分配时间戳以及对 TiKV 做负载均衡调度。  1.</description>
    </item>
    
    <item>
      <title>TiDB FAQ</title>
      <link>https://pingcap.com/docs/dev/faq/tidb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/faq/tidb/</guid>
      <description>Learn about the most frequently asked questions (FAQs) relating to TiDB.</description>
    </item>
    
    <item>
      <title>TiDB FAQ</title>
      <link>https://pingcap.com/docs/stable/faq/tidb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/faq/tidb/</guid>
      <description>Learn about the most frequently asked questions (FAQs) relating to TiDB.</description>
    </item>
    
    <item>
      <title>TiDB FAQ</title>
      <link>https://pingcap.com/docs/v2.1/faq/tidb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/faq/tidb/</guid>
      <description>Learn about the most frequently asked questions (FAQs) relating to TiDB.</description>
    </item>
    
    <item>
      <title>TiDB FAQ</title>
      <link>https://pingcap.com/docs/v3.1/faq/tidb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/faq/tidb/</guid>
      <description>Learn about the most frequently asked questions (FAQs) relating to TiDB.</description>
    </item>
    
    <item>
      <title>TiDB FAQs in Kubernetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/faq/</guid>
      <description>Learn about TiDB FAQs in Kubernetes.</description>
    </item>
    
    <item>
      <title>TiDB FAQs in Kubernetes</title>
      <link>https://pingcap.com/docs/stable/faq/tidb-in-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/faq/tidb-in-kubernetes/</guid>
      <description>Learn about TiDB FAQs in Kubernetes.</description>
    </item>
    
    <item>
      <title>TiDB FAQs in Kubernetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/faq/</guid>
      <description>Learn about TiDB FAQs in Kubernetes.</description>
    </item>
    
    <item>
      <title>TiDB FAQs in Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/faq/tidb-in-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/faq/tidb-in-kubernetes/</guid>
      <description>Learn about TiDB FAQs in Kubernetes.</description>
    </item>
    
    <item>
      <title>TiDB FAQs in Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/faq/</guid>
      <description>Learn about TiDB FAQs in Kubernetes.</description>
    </item>
    
    <item>
      <title>TiDB Garbage Collection (GC)</title>
      <link>https://pingcap.com/docs/v2.1/reference/garbage-collection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/garbage-collection/</guid>
      <description>Use Garbage Collection (GC) to clear the obsolete data of TiDB.</description>
    </item>
    
    <item>
      <title>TiDB in Kubernetes Sysbench Performance Test</title>
      <link>https://pingcap.com/docs/dev/benchmark/sysbench-in-k8s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/benchmark/sysbench-in-k8s/</guid>
      <description>Learn the Sysbench performance test of TiDB in Kubernetes.</description>
    </item>
    
    <item>
      <title>TiDB in Kubernetes Sysbench Performance Test</title>
      <link>https://pingcap.com/docs/stable/benchmark/sysbench-in-k8s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/benchmark/sysbench-in-k8s/</guid>
      <description>Learn the Sysbench performance test of TiDB in Kubernetes.</description>
    </item>
    
    <item>
      <title>TiDB in Kubernetes Sysbench Performance Test</title>
      <link>https://pingcap.com/docs/v3.1/benchmark/sysbench-in-k8s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/benchmark/sysbench-in-k8s/</guid>
      <description>Learn the Sysbench performance test of TiDB in Kubernetes.</description>
    </item>
    
    <item>
      <title>TiDB in Kubernetes Sysbench 性能测试</title>
      <link>https://pingcap.com/docs-cn/dev/benchmark/sysbench-in-k8s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/benchmark/sysbench-in-k8s/</guid>
      <description>TiDB in Kubernetes Sysbench 性能测试 随着 TiDB Operator GA 发布，越来越多用户开始使用 TiDB Operator 在 Kubernetes 中部署管理 TiDB 集群。在本次测试中，我们选择 GKE 平台做了一次深入、全方位的测试，方便大家了解 TiDB 在 Kubernetes 中性能影响因素。
目的  测试典型公有云平台上 TiDB 性能数据 测试公有云平台磁盘、网络、CPU 以及不同 Pod 网络下对 TiDB 性能的影响  环境 版本与配置 本次测试统一使用 TiDB v3.0.1 版本进行测试。
TiDB Operator 使用 v1.0.0 版本。
PD、TiDB 和 TiKV 实例数均为 3 个。各组件分别作了如下配置，未配置部分使用默认值。
PD:
[log] level = &amp;#34;info&amp;#34; [replication] location-labels = [&amp;#34;region&amp;#34;, &amp;#34;zone&amp;#34;, &amp;#34;rack&amp;#34;, &amp;#34;host&amp;#34;] TiDB:
[log] level = &amp;#34;error&amp;#34; [prepared-plan-cache] enabled = true [tikv-client] max-batch-wait-time = 2000000 TiKV:</description>
    </item>
    
    <item>
      <title>TiDB in Kubernetes Sysbench 性能测试</title>
      <link>https://pingcap.com/docs-cn/stable/benchmark/sysbench-in-k8s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/benchmark/sysbench-in-k8s/</guid>
      <description>TiDB in Kubernetes Sysbench 性能测试 随着 TiDB Operator GA 发布，越来越多用户开始使用 TiDB Operator 在 Kubernetes 中部署管理 TiDB 集群。在本次测试中，我们选择 GKE 平台做了一次深入、全方位的测试，方便大家了解 TiDB 在 Kubernetes 中性能影响因素。
目的  测试典型公有云平台上 TiDB 性能数据 测试公有云平台磁盘、网络、CPU 以及不同 Pod 网络下对 TiDB 性能的影响  环境 版本与配置 本次测试统一使用 TiDB v3.0.1 版本进行测试。
TiDB Operator 使用 v1.0.0 版本。
PD、TiDB 和 TiKV 实例数均为 3 个。各组件分别作了如下配置，未配置部分使用默认值。
PD:
[log] level = &amp;#34;info&amp;#34; [replication] location-labels = [&amp;#34;region&amp;#34;, &amp;#34;zone&amp;#34;, &amp;#34;rack&amp;#34;, &amp;#34;host&amp;#34;] TiDB:
[log] level = &amp;#34;error&amp;#34; [prepared-plan-cache] enabled = true [tikv-client] max-batch-wait-time = 2000000 TiKV:</description>
    </item>
    
    <item>
      <title>TiDB in Kubernetes Sysbench 性能测试</title>
      <link>https://pingcap.com/docs-cn/v3.1/benchmark/sysbench-in-k8s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/benchmark/sysbench-in-k8s/</guid>
      <description>TiDB in Kubernetes Sysbench 性能测试 随着 TiDB Operator GA 发布，越来越多用户开始使用 TiDB Operator 在 Kubernetes 中部署管理 TiDB 集群。在本次测试中，我们选择 GKE 平台做了一次深入、全方位的测试，方便大家了解 TiDB 在 Kubernetes 中性能影响因素。
目的  测试典型公有云平台上 TiDB 性能数据 测试公有云平台磁盘、网络、CPU 以及不同 Pod 网络下对 TiDB 性能的影响  环境 版本与配置 本次测试统一使用 TiDB v3.0.1 版本进行测试。
TiDB Operator 使用 v1.0.0 版本。
PD、TiDB 和 TiKV 实例数均为 3 个。各组件分别作了如下配置，未配置部分使用默认值。
PD:
[log] level = &amp;#34;info&amp;#34; [replication] location-labels = [&amp;#34;region&amp;#34;, &amp;#34;zone&amp;#34;, &amp;#34;rack&amp;#34;, &amp;#34;host&amp;#34;] TiDB:
[log] level = &amp;#34;error&amp;#34; [prepared-plan-cache] enabled = true [tikv-client] max-batch-wait-time = 2000000 TiKV:</description>
    </item>
    
    <item>
      <title>TiDB Introduction</title>
      <link>https://pingcap.com/docs/dev/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/overview/</guid>
      <description>Learn how to quickly start a TiDB cluster.</description>
    </item>
    
    <item>
      <title>TiDB Introduction</title>
      <link>https://pingcap.com/docs/stable/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/overview/</guid>
      <description>Learn how to quickly start a TiDB cluster.</description>
    </item>
    
    <item>
      <title>TiDB Introduction</title>
      <link>https://pingcap.com/docs/v2.1/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/overview/</guid>
      <description>Learn how to quickly start a TiDB cluster.</description>
    </item>
    
    <item>
      <title>TiDB Introduction</title>
      <link>https://pingcap.com/docs/v3.1/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/overview/</guid>
      <description>Learn how to quickly start a TiDB cluster.</description>
    </item>
    
    <item>
      <title>TiDB Kubernetes Control User Guide</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/reference/tools/tkctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/reference/tools/tkctl/</guid>
      <description>Learn how to use the tkctl (TiDB Kubernetes Control) tool.</description>
    </item>
    
    <item>
      <title>TiDB Kubernetes Control User Guide</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/reference/tools/tkctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/reference/tools/tkctl/</guid>
      <description>Learn how to use the tkctl (TiDB Kubernetes Control) tool.</description>
    </item>
    
    <item>
      <title>TiDB Kubernetes Control User Guide</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/reference/tools/tkctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/reference/tools/tkctl/</guid>
      <description>Learn how to use the tkctl (TiDB Kubernetes Control) tool.</description>
    </item>
    
    <item>
      <title>TiDB Latest Development Version Upgrade Guide</title>
      <link>https://pingcap.com/docs/dev/how-to/upgrade/from-previous-version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/upgrade/from-previous-version/</guid>
      <description>Learn how to upgrade to the latest development version of TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Checkpoints</title>
      <link>https://pingcap.com/docs/dev/reference/tools/tidb-lightning/checkpoints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/tidb-lightning/checkpoints/</guid>
      <description>Use checkpoints to avoid redoing the previously completed tasks before the crash.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Checkpoints</title>
      <link>https://pingcap.com/docs/stable/reference/tools/tidb-lightning/checkpoints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/tidb-lightning/checkpoints/</guid>
      <description>Use checkpoints to avoid redoing the previously completed tasks before the crash.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Checkpoints</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/tidb-lightning/checkpoints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/tidb-lightning/checkpoints/</guid>
      <description>Use checkpoints to avoid redoing the previously completed tasks before the crash.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Checkpoints</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/tidb-lightning/checkpoints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/tidb-lightning/checkpoints/</guid>
      <description>Use checkpoints to avoid redoing the previously completed tasks before the crash.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Configuration</title>
      <link>https://pingcap.com/docs/dev/reference/tools/tidb-lightning/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/tidb-lightning/config/</guid>
      <description>Learn about the CLI usage and sample configuration in TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Configuration</title>
      <link>https://pingcap.com/docs/stable/reference/tools/tidb-lightning/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/tidb-lightning/config/</guid>
      <description>Learn about the CLI usage and sample configuration in TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Configuration</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/tidb-lightning/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/tidb-lightning/config/</guid>
      <description>Learn about the CLI usage and sample configuration in TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Configuration</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/tidb-lightning/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/tidb-lightning/config/</guid>
      <description>Learn about the CLI usage and sample configuration in TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning CSV Support</title>
      <link>https://pingcap.com/docs/dev/reference/tools/tidb-lightning/csv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/tidb-lightning/csv/</guid>
      <description>Learn how to import CSV files via TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning CSV Support</title>
      <link>https://pingcap.com/docs/stable/reference/tools/tidb-lightning/csv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/tidb-lightning/csv/</guid>
      <description>Learn how to import CSV files via TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning CSV Support</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/tidb-lightning/csv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/tidb-lightning/csv/</guid>
      <description>Learn how to import CSV files via TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning CSV Support</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/tidb-lightning/csv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/tidb-lightning/csv/</guid>
      <description>Learn how to import CSV files via TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Deployment</title>
      <link>https://pingcap.com/docs/dev/reference/tools/tidb-lightning/deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/tidb-lightning/deployment/</guid>
      <description>Deploy TiDB Lightning to quickly import large amounts of new data.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Deployment</title>
      <link>https://pingcap.com/docs/stable/reference/tools/tidb-lightning/deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/tidb-lightning/deployment/</guid>
      <description>Deploy TiDB Lightning to quickly import large amounts of new data.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Deployment</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/tidb-lightning/deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/tidb-lightning/deployment/</guid>
      <description>Deploy TiDB Lightning to quickly import large amounts of new data.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Deployment</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/tidb-lightning/deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/tidb-lightning/deployment/</guid>
      <description>Deploy TiDB Lightning to quickly import large amounts of new data.</description>
    </item>
    
    <item>
      <title>TiDB Lightning FAQ</title>
      <link>https://pingcap.com/docs/dev/faq/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/faq/tidb-lightning/</guid>
      <description>Learn about the frequently asked questions (FAQs) and answers about TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning FAQ</title>
      <link>https://pingcap.com/docs/stable/faq/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/faq/tidb-lightning/</guid>
      <description>Learn about the frequently asked questions (FAQs) and answers about TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning FAQ</title>
      <link>https://pingcap.com/docs/v2.1/faq/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/faq/tidb-lightning/</guid>
      <description>Learn about the frequently asked questions (FAQs) and answers about TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning FAQ</title>
      <link>https://pingcap.com/docs/v3.1/faq/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/faq/tidb-lightning/</guid>
      <description>Learn about the frequently asked questions (FAQs) and answers about TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Glossary</title>
      <link>https://pingcap.com/docs/dev/reference/tools/tidb-lightning/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/tidb-lightning/glossary/</guid>
      <description>List of special terms used in TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Monitoring</title>
      <link>https://pingcap.com/docs/dev/reference/tools/tidb-lightning/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/tidb-lightning/monitor/</guid>
      <description>Learn about the monitor configuration and monitoring metrics of TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Monitoring</title>
      <link>https://pingcap.com/docs/stable/reference/tools/tidb-lightning/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/tidb-lightning/monitor/</guid>
      <description>Learn about the monitor configuration and monitoring metrics of TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Monitoring</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/tidb-lightning/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/tidb-lightning/monitor/</guid>
      <description>Learn about the monitor configuration and monitoring metrics of TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Monitoring</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/tidb-lightning/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/tidb-lightning/monitor/</guid>
      <description>Learn about the monitor configuration and monitoring metrics of TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Overview</title>
      <link>https://pingcap.com/docs/dev/reference/tools/tidb-lightning/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/tidb-lightning/overview/</guid>
      <description>Learn about Lightning and the whole architecture.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Overview</title>
      <link>https://pingcap.com/docs/stable/reference/tools/tidb-lightning/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/tidb-lightning/overview/</guid>
      <description>Learn about Lightning and the whole architecture.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Overview</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/tidb-lightning/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/tidb-lightning/overview/</guid>
      <description>Learn about Lightning and the whole architecture.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Overview</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/tidb-lightning/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/tidb-lightning/overview/</guid>
      <description>Learn about Lightning and the whole architecture.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Table Filter</title>
      <link>https://pingcap.com/docs/dev/reference/tools/tidb-lightning/table-filter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/tidb-lightning/table-filter/</guid>
      <description>Use black and white lists to filter out tables, ignoring them during import.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Table Filter</title>
      <link>https://pingcap.com/docs/stable/reference/tools/tidb-lightning/table-filter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/tidb-lightning/table-filter/</guid>
      <description>Use black and white lists to filter out tables, ignoring them during import.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Table Filter</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/tidb-lightning/table-filter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/tidb-lightning/table-filter/</guid>
      <description>Use black and white lists to filter out tables, ignoring them during import.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Table Filter</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/tidb-lightning/table-filter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/tidb-lightning/table-filter/</guid>
      <description>Use black and white lists to filter out tables, ignoring them during import.</description>
    </item>
    
    <item>
      <title>TiDB Lightning TiDB-Backend</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/tidb-lightning/tidb-backend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/tidb-lightning/tidb-backend/</guid>
      <description>了解 TiDB Lightning TiDB-backend。</description>
    </item>
    
    <item>
      <title>TiDB Lightning TiDB-Backend</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/tidb-lightning/tidb-backend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/tidb-lightning/tidb-backend/</guid>
      <description>了解 TiDB Lightning TiDB-backend。</description>
    </item>
    
    <item>
      <title>TiDB Lightning TiDB-Backend</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-lightning/tidb-backend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-lightning/tidb-backend/</guid>
      <description>了解 TiDB Lightning TiDB-backend。</description>
    </item>
    
    <item>
      <title>TiDB Lightning TiDB-backend</title>
      <link>https://pingcap.com/docs/dev/reference/tools/tidb-lightning/tidb-backend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/tidb-lightning/tidb-backend/</guid>
      <description>Choose how to write data into the TiDB cluster.</description>
    </item>
    
    <item>
      <title>TiDB Lightning TiDB-backend</title>
      <link>https://pingcap.com/docs/stable/reference/tools/tidb-lightning/tidb-backend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/tidb-lightning/tidb-backend/</guid>
      <description>Choose how to write data into the TiDB cluster.</description>
    </item>
    
    <item>
      <title>TiDB Lightning TiDB-backend</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/tidb-lightning/tidb-backend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/tidb-lightning/tidb-backend/</guid>
      <description>Choose how to write data into the TiDB cluster.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Troubleshooting</title>
      <link>https://pingcap.com/docs/dev/how-to/troubleshoot/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/troubleshoot/tidb-lightning/</guid>
      <description>Learn about common errors and solutions of TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Troubleshooting</title>
      <link>https://pingcap.com/docs/stable/how-to/troubleshoot/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/troubleshoot/tidb-lightning/</guid>
      <description>Learn about common errors and solutions of TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Troubleshooting</title>
      <link>https://pingcap.com/docs/v2.1/how-to/troubleshoot/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/troubleshoot/tidb-lightning/</guid>
      <description>Learn about common errors and solutions of TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Troubleshooting</title>
      <link>https://pingcap.com/docs/v3.1/how-to/troubleshoot/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/troubleshoot/tidb-lightning/</guid>
      <description>Learn about common errors and solutions of TiDB Lightning.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Tutorial</title>
      <link>https://pingcap.com/docs/dev/how-to/get-started/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/get-started/tidb-lightning/</guid>
      <description>Learn how to deploy TiDB Lightning and import full backup data to TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Tutorial</title>
      <link>https://pingcap.com/docs/stable/how-to/get-started/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/get-started/tidb-lightning/</guid>
      <description>Learn how to deploy TiDB Lightning and import full backup data to TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Tutorial</title>
      <link>https://pingcap.com/docs/v2.1/how-to/get-started/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/get-started/tidb-lightning/</guid>
      <description>Learn how to deploy TiDB Lightning and import full backup data to TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Tutorial</title>
      <link>https://pingcap.com/docs/v3.1/how-to/get-started/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/get-started/tidb-lightning/</guid>
      <description>Learn how to deploy TiDB Lightning and import full backup data to TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Web Interface</title>
      <link>https://pingcap.com/docs/dev/reference/tools/tidb-lightning/web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/tidb-lightning/web/</guid>
      <description>Control TiDB Lightning through the web interface.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Web Interface</title>
      <link>https://pingcap.com/docs/stable/reference/tools/tidb-lightning/web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/tidb-lightning/web/</guid>
      <description>Control TiDB Lightning through the web interface.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Web Interface</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/tidb-lightning/web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/tidb-lightning/web/</guid>
      <description>Control TiDB Lightning through the web interface.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Web Interface</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/tidb-lightning/web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/tidb-lightning/web/</guid>
      <description>Control TiDB Lightning through the web interface.</description>
    </item>
    
    <item>
      <title>TiDB Lightning Web 界面</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/tidb-lightning/web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/tidb-lightning/web/</guid>
      <description>了解 TiDB Lightning 的服务器模式——通过 Web 界面来控制 TiDB Lightning。</description>
    </item>
    
    <item>
      <title>TiDB Lightning Web 界面</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/tidb-lightning/web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/tidb-lightning/web/</guid>
      <description>了解 TiDB Lightning 的服务器模式——通过 Web 界面来控制 TiDB Lightning。</description>
    </item>
    
    <item>
      <title>TiDB Lightning Web 界面</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/tidb-lightning/web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/tidb-lightning/web/</guid>
      <description>了解 TiDB Lightning 的服务器模式——通过 Web 界面来控制 TiDB Lightning。</description>
    </item>
    
    <item>
      <title>TiDB Lightning Web 界面</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-lightning/web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-lightning/web/</guid>
      <description>了解 TiDB Lightning 的服务器模式——通过 Web 界面来控制 TiDB Lightning。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 常见的错误用法</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/error-case-handling/lightning-misuse-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/error-case-handling/lightning-misuse-handling/</guid>
      <description>TiDB Lightning 常见的错误用法 本文介绍了 TiDB Lightning 使用过程中常见的出错场景以及相应的处理方式。
报错：checksum mismatched remote vs local 在数据导入过程中遇到下面的报错
Error: checksum mismatched remote vs local =&amp;gt; (checksum: 3828723015727756136 vs 7895534721177712659) (total_kvs: 1221416844 vs 1501500000) (total_bytes:237660308510 vs 292158203078) 原因   先前使用过 TiDB Lightning 进行数据导入，但是对应的 checkpoint 的数据没有被清理，存在残留的数据。可以通过查看 TiDB Lightning 第一次启动 log 来确认：
 [checkpoint] driver = file，如果对应 TiDB Lightning 导入时间点的 log 存在 open checkpoint file failed, going to create a new one，那么 checkpoint 已经被正确清理，否则存在残留数据可能导致导入数据缺失； [checkpoint] driver = mysql，可以通过使用 TiDB API curl http://{TiDBIP}:10080/schema/{checkpoint.</description>
    </item>
    
    <item>
      <title>TiDB Lightning 常见的错误用法</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/error-case-handling/lightning-misuse-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/error-case-handling/lightning-misuse-handling/</guid>
      <description>TiDB Lightning 常见的错误用法 本文介绍了 TiDB Lightning 使用过程中常见的出错场景以及相应的处理方式。
报错：checksum mismatched remote vs local 在数据导入过程中遇到下面的报错
Error: checksum mismatched remote vs local =&amp;gt; (checksum: 3828723015727756136 vs 7895534721177712659) (total_kvs: 1221416844 vs 1501500000) (total_bytes:237660308510 vs 292158203078) 原因   先前使用过 TiDB Lightning 进行数据导入，但是对应的 checkpoint 的数据没有被清理，存在残留的数据。可以通过查看 TiDB Lightning 第一次启动 log 来确认：
 [checkpoint] driver = file，如果对应 TiDB Lightning 导入时间点的 log 存在 open checkpoint file failed, going to create a new one，那么 checkpoint 已经被正确清理，否则存在残留数据可能导致导入数据缺失； [checkpoint] driver = mysql，可以通过使用 TiDB API curl http://{TiDBIP}:10080/schema/{checkpoint.</description>
    </item>
    
    <item>
      <title>TiDB Lightning 常见的错误用法</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/error-case-handling/lightning-misuse-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/error-case-handling/lightning-misuse-handling/</guid>
      <description>TiDB Lightning 常见的错误用法 本文介绍了 TiDB Lightning 使用过程中常见的出错场景以及相应的处理方式。
报错：checksum mismatched remote vs local 在数据导入过程中遇到下面的报错
Error: checksum mismatched remote vs local =&amp;gt; (checksum: 3828723015727756136 vs 7895534721177712659) (total_kvs: 1221416844 vs 1501500000) (total_bytes:237660308510 vs 292158203078) 原因   先前使用过 TiDB Lightning 进行数据导入，但是对应的 checkpoint 的数据没有被清理，存在残留的数据。可以通过查看 TiDB Lightning 第一次启动 log 来确认：
 [checkpoint] driver = file，如果对应 TiDB Lightning 导入时间点的 log 存在 open checkpoint file failed, going to create a new one，那么 checkpoint 已经被正确清理，否则存在残留数据可能导致导入数据缺失； [checkpoint] driver = mysql，可以通过使用 TiDB API curl http://{TiDBIP}:10080/schema/{checkpoint.</description>
    </item>
    
    <item>
      <title>TiDB Lightning 常见问题</title>
      <link>https://pingcap.com/docs-cn/dev/faq/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/faq/tidb-lightning/</guid>
      <description>TiDB Lightning 常见问题 本文列出了一些使用 TiDB Lightning 时可能会遇到的问题与解决办法。
 注意：
使用 TiDB Lightning 的过程中如遇错误，参考 TiDB Lightning 故障诊断进行排查。
 TiDB Lightning 对 TiDB/TiKV/PD 的最低版本要求是多少？ TiDB Lightning 的版本应与集群相同。最低版本要求是 2.0.9，但建议使用最新的稳定版本 3.0。
TiDB Lightning 支持导入多个库吗？ 支持。
TiDB Lightning 对下游数据库的账号权限要求是怎样的？ TiDB Lightning 需要以下权限：
 SELECT UPDATE ALTER CREATE DROP  如果选择 TiDB-backend 模式，或目标数据库用于存储断点，则 TiBD Lightning 额外需要以下权限：
 INSERT DELETE  +Importer-backend 无需以上两个权限，因为数据直接被 Ingest 到 TiKV 中，所以绕过了 TiDB 的权限系统。只要 TiKV、TiKV Importer 和 TiDB Lightning 的端口在集群之外不可访问，就可以保证安全。
如果 TiDB Lightning 配置项 checksum = true，则 TiDB Lightning 需要有下游 TiDB admin 用户权限。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 常见问题</title>
      <link>https://pingcap.com/docs-cn/stable/faq/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/faq/tidb-lightning/</guid>
      <description>TiDB Lightning 常见问题 本文列出了一些使用 TiDB Lightning 时可能会遇到的问题与解决办法。
 注意：
使用 TiDB Lightning 的过程中如遇错误，参考 TiDB Lightning 故障诊断进行排查。
 TiDB Lightning 对 TiDB/TiKV/PD 的最低版本要求是多少？ TiDB Lightning 的版本应与集群相同。最低版本要求是 2.0.9，但建议使用最新的稳定版本 3.0。
TiDB Lightning 支持导入多个库吗？ 支持。
TiDB Lightning 对下游数据库的账号权限要求是怎样的？ TiDB Lightning 需要以下权限：
 SELECT UPDATE ALTER CREATE DROP  如果选择 TiDB-backend 模式，或目标数据库用于存储断点，则 TiBD Lightning 额外需要以下权限：
 INSERT DELETE  Importer-backend 无需以上两个权限，因为数据直接被 Ingest 到 TiKV 中，所以绕过了 TiDB 的权限系统。只要 TiKV、TiKV Importer 和 TiDB Lightning 的端口在集群之外不可访问，就可以保证安全。
如果 TiDB Lightning 配置项 checksum = true，则 TiDB Lightning 需要有下游 TiDB admin 用户权限。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 常见问题</title>
      <link>https://pingcap.com/docs-cn/v2.1/faq/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/faq/tidb-lightning/</guid>
      <description>TiDB Lightning 常见问题 TiDB Lightning 对 TiDB/TiKV/PD 的最低版本要求是多少？ 最低版本要求是 2.0.9。
TiDB Lightning 支持导入多个库吗？ 支持。
TiDB Lightning 对下游数据库的账号权限要求是怎样的？ TiDB Lightning 需要以下权限：
 SELECT UPDATE ALTER CREATE DROP  存储断点的数据库额外需要以下权限：
 INSERT DELETE  如果 TiDB Lightning 配置项 checksum = true，则 TiDB Lightning 需要有下游 TiDB admin 用户权限。
TiDB Lightning 在导数据过程中某个表报错了，会影响其他表吗？进程会马上退出吗？ 如果只是个别表报错，不会影响整体。报错的那个表会停止处理，继续处理其他的表。
如何校验导入的数据的正确性？ TiDB Lightning 默认会对导入数据计算校验和 (checksum)，如果校验和不一致就会停止导入该表。可以在日志看到相关的信息。
TiDB 也支持从 MySQL 命令行运行 ADMIN CHECKSUM TABLE 指令来计算校验和。
mysql&amp;gt; ADMIN CHECKSUM TABLE `schema`.`table`; +---------+------------+---------------------+-----------+-------------+ | Db_name | Table_name | Checksum_crc64_xor | Total_kvs | Total_bytes | +---------+------------+---------------------+-----------+-------------+ | schema | table | 5505282386844578743 | 3 | 96 | +---------+------------+---------------------+-----------+-------------+ 1 row in set (0.</description>
    </item>
    
    <item>
      <title>TiDB Lightning 常见问题</title>
      <link>https://pingcap.com/docs-cn/v3.1/faq/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/faq/tidb-lightning/</guid>
      <description>TiDB Lightning 常见问题 本文列出了一些使用 TiDB Lightning 时可能会遇到的问题与解决办法。
 注意：
使用 TiDB Lightning 的过程中如遇错误，参考 TiDB Lightning 故障诊断进行排查。
 TiDB Lightning 对 TiDB/TiKV/PD 的最低版本要求是多少？ TiDB Lightning 的版本应与集群相同。最低版本要求是 2.0.9，但建议使用最新的稳定版本 3.0。
TiDB Lightning 支持导入多个库吗？ 支持。
TiDB Lightning 对下游数据库的账号权限要求是怎样的？ TiDB Lightning 需要以下权限：
 SELECT UPDATE ALTER CREATE DROP  如果选择 TiDB-backend 模式，或目标数据库用于存储断点，则 TiBD Lightning 额外需要以下权限：
 INSERT DELETE  Importer-backend 无需以上两个权限，因为数据直接被 Ingest 到 TiKV 中，所以绕过了 TiDB 的权限系统。只要 TiKV、TiKV Importer 和 TiDB Lightning 的端口在集群之外不可访问，就可以保证安全。
如果 TiDB Lightning 配置项 checksum = true，则 TiDB Lightning 需要有下游 TiDB admin 用户权限。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 故障诊断</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/troubleshoot/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/troubleshoot/tidb-lightning/</guid>
      <description>TiDB Lightning 故障诊断 当 Lightning 遇到不可恢复的错误时便会异常退出，并在日志中记下错误原因。一般可在日志底部找到，也可以搜索 [error] 字符串找出中间发生的错误。本文主要描述一些常见的错误及其解决方法。
导入速度太慢 TiDB Lightning 的正常速度为每条线程每 2 分钟导入一个 256 MB 的数据文件，如果速度远慢于这个数值就是有问题。导入的速度可以检查日志提及 restore chunk … takes 的记录，或者观察 Grafana 的监控信息。
导入速度太慢一般有几个原因：
原因 1：region-concurrency 设定太高，线程间争用资源反而减低了效率。
 从日志的开头搜寻 region-concurrency 能知道 Lightning 读到的参数是多少。 如果 Lightning 与其他服务（如 Importer）共用一台服务器，必需手动将 region-concurrency 设为该服务器 CPU 数量的 75%。 如果 CPU 设有限额（例如从 Kubernetes 指定的上限），Lightning 可能无法自动判断出来，此时亦需要手动调整 region-concurrency。  原因 2：表结构太复杂。
每条索引都会额外增加键值对。如果有 N 条索引，实际导入的大小就差不多是 Mydumper 文件的 N+1 倍。如果索引不太重要，可以考虑先从 schema 去掉，待导入完成后再使用 CREATE INDEX 加回去。
原因 3：Lightning 版本太旧。
试试最新的版本吧！可能会有改善。
checksum failed: checksum mismatched remote vs local 原因：本地数据源跟目标数据库某个表的校验和不一致。这通常有更深层的原因：</description>
    </item>
    
    <item>
      <title>TiDB Lightning 故障诊断</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/troubleshoot/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/troubleshoot/tidb-lightning/</guid>
      <description>TiDB Lightning 故障诊断 当 Lightning 遇到不可恢复的错误时便会异常退出，并在日志中记下错误原因。一般可在日志底部找到，也可以搜索 [error] 字符串找出中间发生的错误。本文主要描述一些常见的错误及其解决方法。
导入速度太慢 TiDB Lightning 的正常速度为每条线程每 2 分钟导入一个 256 MB 的数据文件，如果速度远慢于这个数值就是有问题。导入的速度可以检查日志提及 restore chunk … takes 的记录，或者观察 Grafana 的监控信息。
导入速度太慢一般有几个原因：
原因 1：region-concurrency 设定太高，线程间争用资源反而减低了效率。
 从日志的开头搜寻 region-concurrency 能知道 Lightning 读到的参数是多少。 如果 Lightning 与其他服务（如 Importer）共用一台服务器，必需手动将 region-concurrency 设为该服务器 CPU 数量的 75%。 如果 CPU 设有限额（例如从 Kubernetes 指定的上限），Lightning 可能无法自动判断出来，此时亦需要手动调整 region-concurrency。  原因 2：表结构太复杂。
每条索引都会额外增加键值对。如果有 N 条索引，实际导入的大小就差不多是 Mydumper 文件的 N+1 倍。如果索引不太重要，可以考虑先从 schema 去掉，待导入完成后再使用 CREATE INDEX 加回去。
原因 3：Lightning 版本太旧。
试试最新的版本吧！可能会有改善。
checksum failed: checksum mismatched remote vs local 原因：本地数据源跟目标数据库某个表的校验和不一致。这通常有更深层的原因：</description>
    </item>
    
    <item>
      <title>TiDB Lightning 故障诊断</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/troubleshoot/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/troubleshoot/tidb-lightning/</guid>
      <description>TiDB Lightning 故障诊断 当 Lightning 遇到不可恢复的错误时便会异常退出，并在日志中记下错误原因。一般可在日志底部找到，也可以搜索 [error] 字符串找出中间发生的错误。本文主要描述一些常见的错误及其解决方法。
导入速度太慢 TiDB Lightning 的正常速度为每条线程每 2 分钟导入一个 256 MB 的数据文件，如果速度远慢于这个数值就是有问题。导入的速度可以检查日志提及 restore chunk … takes 的记录，或者观察 Grafana 的监控信息。
导入速度太慢一般有几个原因：
原因 1：region-concurrency 设定太高，线程间争用资源反而减低了效率。
 从日志的开头搜寻 region-concurrency 能知道 Lightning 读到的参数是多少。 如果 Lightning 与其他服务（如 Importer）共用一台服务器，必需手动将 region-concurrency 设为该服务器 CPU 数量的 75%。 如果 CPU 设有限额（例如从 Kubernetes 指定的上限），Lightning 可能无法自动判断出来，此时亦需要手动调整 region-concurrency。  原因 2：表结构太复杂。
每条索引都会额外增加键值对。如果有 N 条索引，实际导入的大小就差不多是 Mydumper 文件的 N+1 倍。如果索引不太重要，可以考虑先从 schema 去掉，待导入完成后再使用 CREATE INDEX 加回去。
原因 3：Lightning 版本太旧。
试试最新的版本吧！可能会有改善。
checksum failed: checksum mismatched remote vs local 原因：本地数据源跟目标数据库某个表的校验和不一致。这通常有更深层的原因：</description>
    </item>
    
    <item>
      <title>TiDB Lightning 教程</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/get-started/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/get-started/tidb-lightning/</guid>
      <description>TiDB Lightning 教程 TiDB Lightning 是一个将全量数据高速导入到 TiDB 集群的工具，目前支持 Mydumper 或 CSV 输出格式的数据源。你可以在以下两种场景下使用 Lightning：
 迅速导入大量新数据。 备份恢复所有数据。  TiDB Lightning 主要包含两个部分:
 tidb-lightning（“前端”）：主要完成适配工作，通过读取数据源，在下游 TiDB 集群建表、将数据转换成键/值对 (KV 对) 发送到 tikv-importer、检查数据完整性等。 tikv-importer（“后端”）：主要完成将数据导入 TiKV 集群的工作，把 tidb-lightning 写入的 KV 对缓存、排序、切分并导入到 TiKV 集群。  本教程假设使用的是若干新的、纯净版 CentOS 7 实例，你可以（使用 VMware、VirtualBox 及其他工具）在本地虚拟化或在供应商提供的平台上部署一台小型的云虚拟主机。因为 TiDB Lightning 对计算机资源消耗较高，建议分配 4 GB 以上的内存。
 警告：
本教程中的部署方法只适用于测试及功能体验，并不适用于生产或开发环境。
 准备全量备份数据 我们使用 mydumper 从 MySQL 导出数据，如下：
 ./bin/mydumper -h 127.0.0.1 -P 3306 -u root -t 16 -F 256 -B test -T t1,t2 --skip-tz-utc -o /data/my_database/ 其中：</description>
    </item>
    
    <item>
      <title>TiDB Lightning 教程</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/get-started/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/get-started/tidb-lightning/</guid>
      <description>TiDB Lightning 教程 TiDB Lightning 是一个将全量数据高速导入到 TiDB 集群的工具，目前支持 Mydumper 或 CSV 输出格式的数据源。你可以在以下两种场景下使用 Lightning：
 迅速导入大量新数据。 备份恢复所有数据。  TiDB Lightning 主要包含两个部分:
 tidb-lightning（“前端”）：主要完成适配工作，通过读取数据源，在下游 TiDB 集群建表、将数据转换成键/值对 (KV 对) 发送到 tikv-importer、检查数据完整性等。 tikv-importer（“后端”）：主要完成将数据导入 TiKV 集群的工作，把 tidb-lightning 写入的 KV 对缓存、排序、切分并导入到 TiKV 集群。  本教程假设使用的是若干新的、纯净版 CentOS 7 实例，你可以（使用 VMware、VirtualBox 及其他工具）在本地虚拟化或在供应商提供的平台上部署一台小型的云虚拟主机。因为 TiDB Lightning 对计算机资源消耗较高，建议分配 4 GB 以上的内存。
 警告：
本教程中的部署方法只适用于测试及功能体验，并不适用于生产或开发环境。
 准备全量备份数据 我们使用 mydumper 从 MySQL 导出数据，如下：
 ./bin/mydumper -h 127.0.0.1 -P 3306 -u root -t 16 -F 256 -B test -T t1,t2 --skip-tz-utc -o /data/my_database/ 其中：</description>
    </item>
    
    <item>
      <title>TiDB Lightning 教程</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/get-started/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/get-started/tidb-lightning/</guid>
      <description>TiDB Lightning 教程 TiDB Lightning 是一个将全量数据高速导入到 TiDB 集群的工具，目前支持 Mydumper 或 CSV 输出格式的数据源。你可以在以下两种场景下使用 Lightning：
 迅速导入大量新数据。 备份恢复所有数据。  TiDB Lightning 主要包含两个部分:
 tidb-lightning（“前端”）：主要完成适配工作，通过读取数据源，在下游 TiDB 集群建表、将数据转换成键/值对 (KV 对) 发送到 tikv-importer、检查数据完整性等。 tikv-importer（“后端”）：主要完成将数据导入 TiKV 集群的工作，把 tidb-lightning 写入的 KV 对缓存、排序、切分并导入到 TiKV 集群。  本教程假设使用的是若干新的、纯净版 CentOS 7 实例，你可以（使用 VMware、VirtualBox 及其他工具）在本地虚拟化或在供应商提供的平台上部署一台小型的云虚拟主机。因为 TiDB Lightning 对计算机资源消耗较高，建议分配 4 GB 以上的内存。
 警告：
本教程中的部署方法只适用于测试及功能体验，并不适用于生产或开发环境。
 准备全量备份数据 我们使用 mydumper 从 MySQL 导出数据，如下：
 ./bin/mydumper -h 127.0.0.1 -P 3306 -u root -t 16 -F 256 -B test -T t1,t2 --skip-tz-utc -o /data/my_database/ 其中：</description>
    </item>
    
    <item>
      <title>TiDB Lightning 教程</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/get-started/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/get-started/tidb-lightning/</guid>
      <description>TiDB Lightning 教程 TiDB Lightning 是一个将全量数据高速导入到 TiDB 集群的工具，目前支持 Mydumper 或 CSV 输出格式的数据源。你可以在以下两种场景下使用 Lightning：
 迅速导入大量新数据。 备份恢复所有数据。  TiDB Lightning 主要包含两个部分:
 tidb-lightning（“前端”）：主要完成适配工作，通过读取数据源，在下游 TiDB 集群建表、将数据转换成键/值对 (KV 对) 发送到 tikv-importer、检查数据完整性等。 tikv-importer（“后端”）：主要完成将数据导入 TiKV 集群的工作，把 tidb-lightning 写入的 KV 对缓存、排序、切分并导入到 TiKV 集群。  本教程假设使用的是若干新的、纯净版 CentOS 7 实例，你可以（使用 VMware、VirtualBox 及其他工具）在本地虚拟化或在供应商提供的平台上部署一台小型的云虚拟主机。因为 TiDB Lightning 对计算机资源消耗较高，建议分配 4 GB 以上的内存。
 警告：
本教程中的部署方法只适用于测试及功能体验，并不适用于生产或开发环境。
 准备全量备份数据 我们使用 mydumper 从 MySQL 导出数据，如下：
 ./bin/mydumper -h 127.0.0.1 -P 3306 -u root -t 16 -F 256 -B test -T t1,t2 --skip-tz-utc -o /data/my_database/ 其中：</description>
    </item>
    
    <item>
      <title>TiDB Lightning 断点续传</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/tidb-lightning/checkpoints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/tidb-lightning/checkpoints/</guid>
      <description>TiDB Lightning 断点续传 大量的数据导入一般耗时数小时至数天，长时间运行的进程会有一定机率发生非正常中断。如果每次重启都从头开始， 就会浪费掉之前已成功导入的数据。为此，Lightning 提供了“断点续传”的功能，即使 tidb-lightning 崩溃，在重启时仍然接着之前的进度继续工作。
本文主要介绍 TiDB Lightning 断点续传的启用与配置、断点的存储，以及断点续传的控制。
断点续传的启用与配置 [checkpoint] # 启用断点续传。 # 导入时，Lightning 会记录当前进度。 # 若 Lightning 或其他组件异常退出，在重启时可以避免重复再导入已完成的数据。 enable = true # 存储断点的方式 # - file：存放在本地文件系统（要求 v2.1.1 或以上） # - mysql：存放在兼容 MySQL 的数据库服务器 driver = &amp;#34;file&amp;#34; # 存储断点的架构名称（数据库名称） # 仅在 driver = &amp;#34;mysql&amp;#34; 时生效 # schema = &amp;#34;tidb_lightning_checkpoint&amp;#34; # 断点的存放位置 # # 若 driver = &amp;#34;file&amp;#34;，此参数为断点信息存放的文件路径。 # 如果不设置改参数则默认为 `/tmp/CHECKPOINT_SCHEMA.pb` # # 若 driver = &amp;#34;mysql&amp;#34;，此参数为数据库连接参数 (DSN)，格式为“用户:密码@tcp(地址:端口)/”。 # 默认会重用 [tidb] 设置目标数据库来存储断点。 # 为避免加重目标集群的压力，建议另外使用一个兼容 MySQL 的数据库服务器。 # dsn = &amp;#34;/tmp/tidb_lightning_checkpoint.</description>
    </item>
    
    <item>
      <title>TiDB Lightning 断点续传</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/tidb-lightning/checkpoints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/tidb-lightning/checkpoints/</guid>
      <description>TiDB Lightning 断点续传 大量的数据导入一般耗时数小时至数天，长时间运行的进程会有一定机率发生非正常中断。如果每次重启都从头开始， 就会浪费掉之前已成功导入的数据。为此，Lightning 提供了“断点续传”的功能，即使 tidb-lightning 崩溃，在重启时仍然接着之前的进度继续工作。
本文主要介绍 TiDB Lightning 断点续传的启用与配置、断点的存储，以及断点续传的控制。
断点续传的启用与配置 [checkpoint] # 启用断点续传。 # 导入时，Lightning 会记录当前进度。 # 若 Lightning 或其他组件异常退出，在重启时可以避免重复再导入已完成的数据。 enable = true # 存储断点的方式 # - file：存放在本地文件系统（要求 v2.1.1 或以上） # - mysql：存放在兼容 MySQL 的数据库服务器 driver = &amp;#34;file&amp;#34; # 存储断点的架构名称（数据库名称） # 仅在 driver = &amp;#34;mysql&amp;#34; 时生效 # schema = &amp;#34;tidb_lightning_checkpoint&amp;#34; # 断点的存放位置 # # 若 driver = &amp;#34;file&amp;#34;，此参数为断点信息存放的文件路径。 # 如果不设置改参数则默认为 `/tmp/CHECKPOINT_SCHEMA.pb` # # 若 driver = &amp;#34;mysql&amp;#34;，此参数为数据库连接参数 (DSN)，格式为“用户:密码@tcp(地址:端口)/”。 # 默认会重用 [tidb] 设置目标数据库来存储断点。 # 为避免加重目标集群的压力，建议另外使用一个兼容 MySQL 的数据库服务器。 # dsn = &amp;#34;/tmp/tidb_lightning_checkpoint.</description>
    </item>
    
    <item>
      <title>TiDB Lightning 断点续传</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/tidb-lightning/checkpoints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/tidb-lightning/checkpoints/</guid>
      <description>TiDB Lightning 断点续传 大量的数据导入一般耗时数小时至数天，长时间运行的进程会有一定机率发生非正常中断。如果每次重启都从头开始， 就会浪费掉之前已成功导入的数据。为此，Lightning 提供了“断点续传”的功能，即使 tidb-lightning 崩溃，在重启时仍然接着之前的进度继续工作。
本文主要介绍 TiDB Lightning 断点续传的启用与配置、断点的存储，以及断点续传的控制。
断点续传的启用与配置 [checkpoint] # 启用断点续传。 # 导入时，Lightning 会记录当前进度。 # 若 Lightning 或其他组件异常退出，在重启时可以避免重复再导入已完成的数据。 enable = true # 存储断点的方式 # - file：存放在本地文件系统（要求 v2.1.1 或以上） # - mysql：存放在兼容 MySQL 的数据库服务器 driver = &amp;#34;file&amp;#34; # 存储断点的架构名称（数据库名称） # 仅在 driver = &amp;#34;mysql&amp;#34; 时生效 # schema = &amp;#34;tidb_lightning_checkpoint&amp;#34; # 断点的存放位置 # # 若 driver = &amp;#34;file&amp;#34;，此参数为断点信息存放的文件路径。 # 如果不设置改参数则默认为 `/tmp/CHECKPOINT_SCHEMA.pb` # # 若 driver = &amp;#34;mysql&amp;#34;，此参数为数据库连接参数 (DSN)，格式为“用户:密码@tcp(地址:端口)/”。 # 默认会重用 [tidb] 设置目标数据库来存储断点。 # 为避免加重目标集群的压力，建议另外使用一个兼容 MySQL 的数据库服务器。 # dsn = &amp;#34;/tmp/tidb_lightning_checkpoint.</description>
    </item>
    
    <item>
      <title>TiDB Lightning 断点续传</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-lightning/checkpoints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-lightning/checkpoints/</guid>
      <description>TiDB Lightning 断点续传 大量的数据导入一般耗时数小时至数天，长时间运行的进程会有一定机率发生非正常中断。如果每次重启都从头开始， 就会浪费掉之前已成功导入的数据。为此，Lightning 提供了“断点续传”的功能，即使 tidb-lightning 崩溃，在重启时仍然接着之前的进度继续工作。
本文主要介绍 TiDB Lightning 断点续传的启用与配置、断点的存储，以及断点续传的控制。
断点续传的启用与配置 [checkpoint] # 启用断点续传。 # 导入时，Lightning 会记录当前进度。 # 若 Lightning 或其他组件异常退出，在重启时可以避免重复再导入已完成的数据。 enable = true # 存储断点的方式 # - file：存放在本地文件系统（要求 v2.1.1 或以上） # - mysql：存放在兼容 MySQL 的数据库服务器 driver = &amp;#34;file&amp;#34; # 存储断点的架构名称（数据库名称） # 仅在 driver = &amp;#34;mysql&amp;#34; 时生效 # schema = &amp;#34;tidb_lightning_checkpoint&amp;#34; # 断点的存放位置 # # 若 driver = &amp;#34;file&amp;#34;，此参数为断点信息存放的文件路径。 # 如果不设置改参数则默认为 `/tmp/CHECKPOINT_SCHEMA.pb` # # 若 driver = &amp;#34;mysql&amp;#34;，此参数为数据库连接参数 (DSN)，格式为“用户:密码@tcp(地址:端口)/”。 # 默认会重用 [tidb] 设置目标数据库来存储断点。 # 为避免加重目标集群的压力，建议另外使用一个兼容 MySQL 的数据库服务器。 # dsn = &amp;#34;/tmp/tidb_lightning_checkpoint.</description>
    </item>
    
    <item>
      <title>TiDB Lightning 术语表</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/tidb-lightning/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/tidb-lightning/glossary/</guid>
      <description>了解 TiDB Lightning 相关的术语及定义。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 术语表</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/tidb-lightning/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/tidb-lightning/glossary/</guid>
      <description>了解 TiDB Lightning 相关的术语及定义。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 术语表</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/tidb-lightning/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/tidb-lightning/glossary/</guid>
      <description>了解 TiDB Lightning 相关的术语及定义。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 术语表</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-lightning/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-lightning/glossary/</guid>
      <description>了解 TiDB Lightning 相关的术语及定义。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 监控告警</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/tidb-lightning/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/tidb-lightning/monitor/</guid>
      <description>TiDB Lightning 监控告警 tidb-lightning 和 tikv-importer 都支持使用 Prometheus 采集监控指标 (metrics)。本文主要介绍 TiDB Lightning 的监控配置与监控指标。
监控配置  如果是使用 TiDB Ansible 部署 Lightning，只要将服务器地址加到 inventory.ini 文件里的 [monitored_servers] 部分即可。 如果是手动部署 Lightning，则参照以下步骤进行配置。  tikv-importer tikv-importer v2.1 使用 Pushgateway 来推送监控指标。需要配置 tikv-importer.toml 来连接 Pushgateway：
[metric] # 给 Prometheus 客户端的推送任务名称。 job = &amp;#34;tikv-importer&amp;#34; # 给 Prometheus 客户端的推送间隔。 interval = &amp;#34;15s&amp;#34; # Prometheus Pushgateway 地址。 address = &amp;#34;&amp;#34; tidb-lightning 只要 Prometheus 能发现 tidb-lightning 的监控地址，就能收集监控指标。
监控的端口可在 tidb-lightning.toml 中配置：
[lightning] # 用于调试和 Prometheus 监控的 HTTP 端口。输入 0 关闭。 pprof-port = 8289 .</description>
    </item>
    
    <item>
      <title>TiDB Lightning 监控告警</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/tidb-lightning/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/tidb-lightning/monitor/</guid>
      <description>TiDB Lightning 监控告警 tidb-lightning 和 tikv-importer 都支持使用 Prometheus 采集监控指标 (metrics)。本文主要介绍 TiDB Lightning 的监控配置与监控指标。
监控配置  如果是使用 TiDB Ansible 部署 Lightning，只要将服务器地址加到 inventory.ini 文件里的 [monitored_servers] 部分即可。 如果是手动部署 Lightning，则参照以下步骤进行配置。  tikv-importer tikv-importer v2.1 使用 Pushgateway 来推送监控指标。需要配置 tikv-importer.toml 来连接 Pushgateway：
[metric] # 给 Prometheus 客户端的推送任务名称。 job = &amp;#34;tikv-importer&amp;#34; # 给 Prometheus 客户端的推送间隔。 interval = &amp;#34;15s&amp;#34; # Prometheus Pushgateway 地址。 address = &amp;#34;&amp;#34; tidb-lightning 只要 Prometheus 能发现 tidb-lightning 的监控地址，就能收集监控指标。
监控的端口可在 tidb-lightning.toml 中配置：
[lightning] # 用于调试和 Prometheus 监控的 HTTP 端口。输入 0 关闭。 pprof-port = 8289 .</description>
    </item>
    
    <item>
      <title>TiDB Lightning 监控告警</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/tidb-lightning/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/tidb-lightning/monitor/</guid>
      <description>TiDB Lightning 监控告警 tidb-lightning 和 tikv-importer 都支持使用 Prometheus 采集监控指标 (metrics)。本文主要介绍 TiDB Lightning 的监控配置与监控指标。
监控配置  如果是使用 TiDB Ansible 部署 Lightning，只要将服务器地址加到 inventory.ini 文件里的 [monitored_servers] 部分即可。 如果是手动部署 Lightning，则参照以下步骤进行配置。  tikv-importer tikv-importer v2.1 使用 Pushgateway 来推送监控指标。需要配置 tikv-importer.toml 来连接 Pushgateway：
[metric] # 给 Prometheus 客户端的推送任务名称。 job = &amp;#34;tikv-importer&amp;#34; # 给 Prometheus 客户端的推送间隔。 interval = &amp;#34;15s&amp;#34; # Prometheus Pushgateway 地址。 address = &amp;#34;&amp;#34; tidb-lightning 只要 Prometheus 能发现 tidb-lightning 的监控地址，就能收集监控指标。
监控的端口可在 tidb-lightning.toml 中配置：
[lightning] # 用于调试和 Prometheus 监控的 HTTP 端口。输入 0 关闭。 pprof-port = 8289 .</description>
    </item>
    
    <item>
      <title>TiDB Lightning 监控告警</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-lightning/monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-lightning/monitor/</guid>
      <description>TiDB Lightning 监控告警 tidb-lightning 和 tikv-importer 都支持使用 Prometheus 采集监控指标 (metrics)。本文主要介绍 TiDB Lightning 的监控配置与监控指标。
监控配置  如果是使用 TiDB Ansible 部署 Lightning，只要将服务器地址加到 inventory.ini 文件里的 [monitored_servers] 部分即可。 如果是手动部署 Lightning，则参照以下步骤进行配置。  tikv-importer tikv-importer v2.1 使用 Pushgateway 来推送监控指标。需要配置 tikv-importer.toml 来连接 Pushgateway：
[metric] # 给 Prometheus 客户端的推送任务名称。 job = &amp;#34;tikv-importer&amp;#34; # 给 Prometheus 客户端的推送间隔。 interval = &amp;#34;15s&amp;#34; # Prometheus Pushgateway 地址。 address = &amp;#34;&amp;#34; tidb-lightning 只要 Prometheus 能发现 tidb-lightning 的监控地址，就能收集监控指标。
监控的端口可在 tidb-lightning.toml 中配置：
[lightning] # 用于调试和 Prometheus 监控的 HTTP 端口。输入 0 关闭。 pprof-port = 8289 .</description>
    </item>
    
    <item>
      <title>TiDB Lightning 简介</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/tidb-lightning/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/tidb-lightning/overview/</guid>
      <description>TiDB Lightning 简介 TiDB Lightning 是一个将全量数据高速导入到 TiDB 集群的工具，有以下两个主要的使用场景：一是大量新数据的快速导入；二是全量数据的备份恢复。目前，支持 Mydumper 或 CSV 输出格式的数据源。你可以在以下两种场景下使用 Lightning：
 迅速导入大量新数据。 备份恢复所有数据。  TiDB Lightning 整体架构 TiDB Lightning 主要包含两个部分：
 tidb-lightning（“前端”）：主要完成适配工作，通过读取数据源，在下游 TiDB 集群建表、将数据转换成键值对（KV 对）发送到 tikv-importer、检查数据完整性等。 tikv-importer（“后端”）：主要完成将数据导入 TiKV 集群的工作，对 tidb-lightning 写入的键值对进行缓存、排序、切分操作并导入到 TiKV 集群。  TiDB Lightning 整体工作原理如下：
  在导数据之前，tidb-lightning 会自动将 TiKV 集群切换为“导入模式” (import mode)，优化写入效率并停止自动压缩。
  tidb-lightning 会在目标数据库建立架构和表，并获取其元数据。
  每张表都会被分割为多个连续的区块，这样来自大表 (200 GB+) 的数据就可以用增量方式导入。
  tidb-lightning 会通过 gRPC 让 tikv-importer 为每一个区块准备一个“引擎文件 (engine file)”来处理键值对。tidb-lightning 会并发读取 SQL dump，将数据源转换成与 TiDB 相同编码的键值对，然后发送到 tikv-importer 里对应的引擎文件。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 简介</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/tidb-lightning/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/tidb-lightning/overview/</guid>
      <description>TiDB Lightning 简介 TiDB Lightning 是一个将全量数据高速导入到 TiDB 集群的工具，有以下两个主要的使用场景：一是大量新数据的快速导入；二是全量数据的备份恢复。目前，支持 Mydumper 或 CSV 输出格式的数据源。你可以在以下两种场景下使用 Lightning：
 迅速导入大量新数据。 备份恢复所有数据。  TiDB Lightning 整体架构 TiDB Lightning 主要包含两个部分：
 tidb-lightning（“前端”）：主要完成适配工作，通过读取数据源，在下游 TiDB 集群建表、将数据转换成键值对（KV 对）发送到 tikv-importer、检查数据完整性等。 tikv-importer（“后端”）：主要完成将数据导入 TiKV 集群的工作，对 tidb-lightning 写入的键值对进行缓存、排序、切分操作并导入到 TiKV 集群。  TiDB Lightning 整体工作原理如下：
  在导数据之前，tidb-lightning 会自动将 TiKV 集群切换为“导入模式” (import mode)，优化写入效率并停止自动压缩。
  tidb-lightning 会在目标数据库建立架构和表，并获取其元数据。
  每张表都会被分割为多个连续的区块，这样来自大表 (200 GB+) 的数据就可以用增量方式导入。
  tidb-lightning 会通过 gRPC 让 tikv-importer 为每一个区块准备一个“引擎文件 (engine file)”来处理键值对。tidb-lightning 会并发读取 SQL dump，将数据源转换成与 TiDB 相同编码的键值对，然后发送到 tikv-importer 里对应的引擎文件。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 简介</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/tidb-lightning/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/tidb-lightning/overview/</guid>
      <description>TiDB Lightning 简介 TiDB Lightning 是一个将全量数据高速导入到 TiDB 集群的工具，有以下两个主要的使用场景：一是大量新数据的快速导入；二是全量数据的备份恢复。目前，支持 Mydumper 或 CSV 输出格式的数据源。你可以在以下两种场景下使用 Lightning：
 迅速导入大量新数据。 备份恢复所有数据。  TiDB Lightning 整体架构 TiDB Lightning 主要包含两个部分：
 tidb-lightning（“前端”）：主要完成适配工作，通过读取数据源，在下游 TiDB 集群建表、将数据转换成键值对（KV 对）发送到 tikv-importer、检查数据完整性等。 tikv-importer（“后端”）：主要完成将数据导入 TiKV 集群的工作，对 tidb-lightning 写入的键值对进行缓存、排序、切分操作并导入到 TiKV 集群。  TiDB Lightning 整体工作原理如下：
  在导数据之前，tidb-lightning 会自动将 TiKV 集群切换为“导入模式” (import mode)，优化写入效率并停止自动压缩。
  tidb-lightning 会在目标数据库建立架构和表，并获取其元数据。
  每张表都会被分割为多个连续的区块，这样来自大表 (200 GB+) 的数据就可以用增量方式导入。
  tidb-lightning 会通过 gRPC 让 tikv-importer 为每一个区块准备一个“引擎文件 (engine file)”来处理键值对。tidb-lightning 会并发读取 SQL dump，将数据源转换成与 TiDB 相同编码的键值对，然后发送到 tikv-importer 里对应的引擎文件。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 简介</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-lightning/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-lightning/overview/</guid>
      <description>TiDB Lightning 简介 TiDB Lightning 是一个将全量数据高速导入到 TiDB 集群的工具，有以下两个主要的使用场景：一是大量新数据的快速导入；二是全量数据的备份恢复。目前，支持 Mydumper 或 CSV 输出格式的数据源。你可以在以下两种场景下使用 Lightning：
 迅速导入大量新数据。 备份恢复所有数据。  TiDB Lightning 整体架构 TiDB Lightning 主要包含两个部分：
 tidb-lightning（“前端”）：主要完成适配工作，通过读取数据源，在下游 TiDB 集群建表、将数据转换成键值对（KV 对）发送到 tikv-importer、检查数据完整性等。 tikv-importer（“后端”）：主要完成将数据导入 TiKV 集群的工作，对 tidb-lightning 写入的键值对进行缓存、排序、切分操作并导入到 TiKV 集群。  TiDB Lightning 整体工作原理如下：
  在导数据之前，tidb-lightning 会自动将 TiKV 集群切换为“导入模式” (import mode)，优化写入效率并停止自动压缩。
  tidb-lightning 会在目标数据库建立架构和表，并获取其元数据。
  每张表都会被分割为多个连续的区块，这样来自大表 (200 GB+) 的数据就可以用增量方式导入。
  tidb-lightning 会通过 gRPC 让 tikv-importer 为每一个区块准备一个“引擎文件 (engine file)”来处理键值对。tidb-lightning 会并发读取 SQL dump，将数据源转换成与 TiDB 相同编码的键值对，然后发送到 tikv-importer 里对应的引擎文件。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 表库过滤</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/tidb-lightning/table-filter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/tidb-lightning/table-filter/</guid>
      <description>使用黑白名单把一些表剔出要导入的范围。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 表库过滤</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/tidb-lightning/table-filter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/tidb-lightning/table-filter/</guid>
      <description>使用黑白名单把一些表剔出要导入的范围。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 表库过滤</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/tidb-lightning/table-filter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/tidb-lightning/table-filter/</guid>
      <description>使用黑白名单把一些表剔出要导入的范围。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 表库过滤</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-lightning/table-filter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-lightning/table-filter/</guid>
      <description>使用黑白名单把一些表剔出要导入的范围。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 部署与执行</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/tidb-lightning/deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/tidb-lightning/deployment/</guid>
      <description>TiDB Lightning 部署与执行 本文主要介绍 TiDB Lightning 使用 Importer-backend（默认）进行数据导入的硬件需求，以及使用 Ansible 部署与手动部署 TiDB Lightning 这两种部署方式。
如果你想改用 TiDB-backend 进行数据导入，参考 TiDB Lightning TiDB-backend 中的硬件需求与部署方式。
注意事项 在使用 TiDB Lightning 前，需注意以下事项：
  TiDB Lightning 运行后，TiDB 集群将无法正常对外提供服务。
  若 tidb-lightning 崩溃，集群会留在“导入模式”。若忘记转回“普通模式”，集群会产生大量未压缩的文件，继而消耗 CPU 并导致延迟。此时，需要使用 tidb-lightning-ctl 手动将集群转回“普通模式”：
 bin/tidb-lightning-ctl -switch-mode=normal   TiDB Lightning 需要下游 TiDB 有如下权限：
   权限 作用域     SELECT Tables   INSERT Tables   UPDATE Tables   DELETE Tables   CREATE Databases, tables   DROP Databases, tables   ALTER Tables    如果配置项 checksum = true，则 TiDB Lightning 需要有下游 TiDB admin 用户权限。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 部署与执行</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/tidb-lightning/deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/tidb-lightning/deployment/</guid>
      <description>TiDB Lightning 部署与执行 本文主要介绍 TiDB Lightning 使用 Importer-backend（默认）进行数据导入的硬件需求，以及使用 Ansible 部署与手动部署 TiDB Lightning 这两种部署方式。
如果你想改用 TiDB-backend 进行数据导入，参考 TiDB Lightning TiDB-backend 中的硬件需求与部署方式。
注意事项 在使用 TiDB Lightning 前，需注意以下事项：
  TiDB Lightning 运行后，TiDB 集群将无法正常对外提供服务。
  若 tidb-lightning 崩溃，集群会留在“导入模式”。若忘记转回“普通模式”，集群会产生大量未压缩的文件，继而消耗 CPU 并导致延迟。此时，需要使用 tidb-lightning-ctl 手动将集群转回“普通模式”：
 bin/tidb-lightning-ctl -switch-mode=normal   TiDB Lightning 需要下游 TiDB 有如下权限：
   权限 作用域     SELECT Tables   INSERT Tables   UPDATE Tables   DELETE Tables   CREATE Databases, tables   DROP Databases, tables   ALTER Tables    如果配置项 checksum = true，则 TiDB Lightning 需要有下游 TiDB admin 用户权限。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 部署与执行</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/tidb-lightning/deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/tidb-lightning/deployment/</guid>
      <description>TiDB Lightning 部署与执行 本文主要介绍 TiDB Lightning 单独部署与混合部署的硬件需求，以及使用 Ansible 部署与手动部署这两种部署方式。
注意事项 在使用 TiDB Lightning 前，需注意以下事项：
  TiDB Lightning 运行后，TiDB 集群将无法正常对外提供服务。
  若 tidb-lightning 崩溃，集群会留在“导入模式”。若忘记转回“普通模式”，集群会产生大量未压缩的文件，继而消耗 CPU 并导致延迟。此时，需要使用 tidb-lightning-ctl 手动将集群转回“普通模式”：
 bin/tidb-lightning-ctl -switch-mode=normal   TiDB Lightning 需要下游 TiDB 有如下权限：
   权限 作用域     SELECT Tables   INSERT Tables   UPDATE Tables   DELETE Tables   CREATE Databases, tables   DROP Databases, tables   ALTER Tables    如果配置项 checksum = true，则 TiDB Lightning 需要有下游 TiDB admin 用户权限。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 部署与执行</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-lightning/deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-lightning/deployment/</guid>
      <description>TiDB Lightning 部署与执行 本文主要介绍 TiDB Lightning 使用 Importer-backend（默认）进行数据导入的硬件需求，以及使用 Ansible 部署与手动部署 TiDB Lightning 这两种部署方式。
如果你想改用 TiDB-backend 进行数据导入，参考 TiDB Lightning TiDB-backend 中的硬件需求与部署方式。
注意事项 在使用 TiDB Lightning 前，需注意以下事项：
  TiDB Lightning 运行后，TiDB 集群将无法正常对外提供服务。
  若 tidb-lightning 崩溃，集群会留在“导入模式”。若忘记转回“普通模式”，集群会产生大量未压缩的文件，继而消耗 CPU 并导致延迟。此时，需要使用 tidb-lightning-ctl 手动将集群转回“普通模式”：
 bin/tidb-lightning-ctl -switch-mode=normal   TiDB Lightning 需要下游 TiDB 有如下权限：
   权限 作用域     SELECT Tables   INSERT Tables   UPDATE Tables   DELETE Tables   CREATE Databases, tables   DROP Databases, tables   ALTER Tables    如果配置项 checksum = true，则 TiDB Lightning 需要有下游 TiDB admin 用户权限。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 配置参数</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/tidb-lightning/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/tidb-lightning/config/</guid>
      <description>使用配置文件或命令行配置 TiDB Lightning。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 配置参数</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/tidb-lightning/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/tidb-lightning/config/</guid>
      <description>使用配置文件或命令行配置 TiDB Lightning。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 配置参数</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/tidb-lightning/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/tidb-lightning/config/</guid>
      <description>使用配置文件或命令行配置 TiDB Lightning。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 配置参数</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-lightning/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/tidb-lightning/config/</guid>
      <description>使用配置文件或命令行配置 TiDB Lightning。</description>
    </item>
    
    <item>
      <title>TiDB Lightning 错误排解</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/troubleshoot/tidb-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/troubleshoot/tidb-lightning/</guid>
      <description>TiDB Lightning 错误排解 当 Lightning 遇到不可恢复的错误时便会异常退出，并在日志中记下错误原因。一般可在日志底部找到，也可以搜索 [error] 字符串找出中间发生的错误。本文主要描述一些常见的错误及其解决方法。
导入速度太慢 TiDB Lightning 的正常速度为每条线程每 2 分钟导入一个 256 MB 的数据文件，如果速度远慢于这个数值就是有问题。导入的速度可以检查日志提及 restore chunk … takes 的记录，或者观察 Grafana 的监控信息。
导入速度太慢一般有几个原因：
原因 1：region-concurrency 设定太高，线程间争用资源反而减低了效率。
 从日志的开头搜寻 region-concurrency 能知道 Lightning 读到的参数是多少。 如果 Lightning 与其他服务（如 Importer）共用一台服务器，必需手动将 region-concurrency 设为该服务器 CPU 数量的 75%。 如果 CPU 设有限额（例如从 K8s 指定的上限），Lightning 可能无法自动判断出来，此时亦需要手动调整 region-concurrency。  原因 2：表结构太复杂。
每条索引都会额外增加 KV 对。如果有 N 条索引，实际导入的大小就差不多是 Mydumper 文件的 N+1 倍。如果索引不太重要，可以考虑先从 schema 去掉，待导入完成后再使用 CREATE INDEX 加回去。
原因 3：Lightning 版本太旧。</description>
    </item>
    
    <item>
      <title>TiDB Memory Control</title>
      <link>https://pingcap.com/docs/dev/how-to/configure/memory-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/configure/memory-control/</guid>
      <description>Learn how to configure the memory quota of a query and avoid OOM (out of memory).</description>
    </item>
    
    <item>
      <title>TiDB Memory Control</title>
      <link>https://pingcap.com/docs/stable/how-to/configure/memory-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/configure/memory-control/</guid>
      <description>Learn how to configure the memory quota of a query and avoid OOM (out of memory).</description>
    </item>
    
    <item>
      <title>TiDB Memory Control</title>
      <link>https://pingcap.com/docs/v2.1/how-to/configure/memory-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/configure/memory-control/</guid>
      <description>Learn how to configure the memory quota of a query and avoid OOM (out of memory).</description>
    </item>
    
    <item>
      <title>TiDB Memory Control</title>
      <link>https://pingcap.com/docs/v3.1/how-to/configure/memory-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/configure/memory-control/</guid>
      <description>Learn how to configure the memory quota of a query and avoid OOM (out of memory).</description>
    </item>
    
    <item>
      <title>TiDB Monitoring Framework Overview</title>
      <link>https://pingcap.com/docs/dev/how-to/monitor/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/monitor/overview/</guid>
      <description>Use Prometheus and Grafana to build the TiDB monitoring framework.</description>
    </item>
    
    <item>
      <title>TiDB Monitoring Framework Overview</title>
      <link>https://pingcap.com/docs/stable/how-to/monitor/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/monitor/overview/</guid>
      <description>Use Prometheus and Grafana to build the TiDB monitoring framework.</description>
    </item>
    
    <item>
      <title>TiDB Monitoring Framework Overview</title>
      <link>https://pingcap.com/docs/v2.1/how-to/monitor/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/monitor/overview/</guid>
      <description>Use Prometheus and Grafana to build the TiDB monitoring framework.</description>
    </item>
    
    <item>
      <title>TiDB Monitoring Framework Overview</title>
      <link>https://pingcap.com/docs/v3.1/how-to/monitor/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/monitor/overview/</guid>
      <description>Use Prometheus and Grafana to build the TiDB monitoring framework.</description>
    </item>
    
    <item>
      <title>TiDB Monitoring Metrics</title>
      <link>https://pingcap.com/docs/dev/reference/key-monitoring-metrics/tidb-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/key-monitoring-metrics/tidb-dashboard/</guid>
      <description>Learn some key metrics displayed on the Grafana TiDB dashboard.</description>
    </item>
    
    <item>
      <title>TiDB Monitoring Metrics</title>
      <link>https://pingcap.com/docs/stable/reference/key-monitoring-metrics/tidb-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/key-monitoring-metrics/tidb-dashboard/</guid>
      <description>Learn some key metrics displayed on the Grafana TiDB dashboard.</description>
    </item>
    
    <item>
      <title>TiDB Monitoring Metrics</title>
      <link>https://pingcap.com/docs/v2.1/reference/key-monitoring-metrics/tidb-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/key-monitoring-metrics/tidb-dashboard/</guid>
      <description>Learn some key metrics displayed on the Grafana TiDB dashboard.</description>
    </item>
    
    <item>
      <title>TiDB Monitoring Metrics</title>
      <link>https://pingcap.com/docs/v3.1/reference/key-monitoring-metrics/tidb-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/key-monitoring-metrics/tidb-dashboard/</guid>
      <description>Learn some key metrics displayed on the Grafana TiDB dashboard.</description>
    </item>
    
    <item>
      <title>TiDB Operator 简介</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/tidb-operator-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/tidb-operator-overview/</guid>
      <description>TiDB Operator 简介 TiDB Operator 是 Kubernetes 上的 TiDB 集群自动运维系统，提供包括部署、升级、扩缩容、备份恢复、配置变更的 TiDB 全生命周期管理。借助 TiDB Operator，TiDB 可以无缝运行在公有云或私有部署的 Kubernetes 集群上。
 注意：
每个 Kubernetes 集群中只能部署一个 TiDB Operator。
 TiDB Operator 整体架构 其中，TidbCluster 是由 CRD（CustomResourceDefinition）定义的自定义资源，用于描述用户期望的 TiDB 集群状态。TiDB 集群的编排和调度逻辑则由下列组件负责：
 tidb-controller-manager 是一组 Kubernetes 上的自定义控制器。这些控制器会不断对比 TidbCluster 对象中记录的期望状态与 TiDB 集群的实际状态，并调整 Kubernetes 中的资源以驱动 TiDB 集群满足期望状态； tidb-scheduler 是一个 Kubernetes 调度器扩展，它为 Kubernetes 调度器注入 TiDB 集群特有的调度逻辑。  此外，TiDB Operator 还提供了命令行接口 tkctl 用于运维集群和诊断集群问题。
上图是 TiDB Operator 的控制流程解析。由于 TiDB 集群还需要监控、初始化、定时备份、Binlog 等组件，TiDB Operator 中使用 Helm Chart 封装了 TiDB 集群定义。整体的控制流程如下：</description>
    </item>
    
    <item>
      <title>TiDB Operator 简介</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/tidb-operator-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/tidb-operator-overview/</guid>
      <description>TiDB Operator 简介 TiDB Operator 是 Kubernetes 上的 TiDB 集群自动运维系统，提供包括部署、升级、扩缩容、备份恢复、配置变更的 TiDB 全生命周期管理。借助 TiDB Operator，TiDB 可以无缝运行在公有云或私有部署的 Kubernetes 集群上。
 注意：
每个 Kubernetes 集群中只能部署一个 TiDB Operator。
 TiDB Operator 整体架构 其中，TidbCluster 是由 CRD（CustomResourceDefinition）定义的自定义资源，用于描述用户期望的 TiDB 集群状态。TiDB 集群的编排和调度逻辑则由下列组件负责：
 tidb-controller-manager 是一组 Kubernetes 上的自定义控制器。这些控制器会不断对比 TidbCluster 对象中记录的期望状态与 TiDB 集群的实际状态，并调整 Kubernetes 中的资源以驱动 TiDB 集群满足期望状态； tidb-scheduler 是一个 Kubernetes 调度器扩展，它为 Kubernetes 调度器注入 TiDB 集群特有的调度逻辑。  此外，TiDB Operator 还提供了命令行接口 tkctl 用于运维集群和诊断集群问题。
上图是 TiDB Operator 的控制流程解析。由于 TiDB 集群还需要监控、初始化、定时备份、Binlog 等组件，TiDB Operator 中使用 Helm Chart 封装了 TiDB 集群定义。整体的控制流程如下：</description>
    </item>
    
    <item>
      <title>TiDB Operator 简介</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/tidb-operator-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/tidb-operator-overview/</guid>
      <description>TiDB Operator 简介 TiDB Operator 是 Kubernetes 上的 TiDB 集群自动运维系统，提供包括部署、升级、扩缩容、备份恢复、配置变更的 TiDB 全生命周期管理。借助 TiDB Operator，TiDB 可以无缝运行在公有云或私有部署的 Kubernetes 集群上。
 注意：
每个 Kubernetes 集群中只能部署一个 TiDB Operator。
 TiDB Operator 整体架构 其中，TidbCluster 是由 CRD（CustomResourceDefinition）定义的自定义资源，用于描述用户期望的 TiDB 集群状态。TiDB 集群的编排和调度逻辑则由下列组件负责：
 tidb-controller-manager 是一组 Kubernetes 上的自定义控制器。这些控制器会不断对比 TidbCluster 对象中记录的期望状态与 TiDB 集群的实际状态，并调整 Kubernetes 中的资源以驱动 TiDB 集群满足期望状态； tidb-scheduler 是一个 Kubernetes 调度器扩展，它为 Kubernetes 调度器注入 TiDB 集群特有的调度逻辑。  此外，TiDB Operator 还提供了命令行接口 tkctl 用于运维集群和诊断集群问题。
上图是 TiDB Operator 的控制流程解析。由于 TiDB 集群还需要监控、初始化、定时备份、Binlog 等组件，TiDB Operator 中使用 Helm Chart 封装了 TiDB 集群定义。整体的控制流程如下：</description>
    </item>
    
    <item>
      <title>TiDB Pessimistic Transaction Mode</title>
      <link>https://pingcap.com/docs/dev/reference/transactions/transaction-pessimistic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/transactions/transaction-pessimistic/</guid>
      <description>Learn about the pessimistic transaction mode of TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Pessimistic Transaction Mode</title>
      <link>https://pingcap.com/docs/stable/reference/transactions/transaction-pessimistic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/transactions/transaction-pessimistic/</guid>
      <description>Learn about the pessimistic transaction mode of TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Pessimistic Transaction Mode</title>
      <link>https://pingcap.com/docs/v3.1/reference/transactions/transaction-pessimistic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/transactions/transaction-pessimistic/</guid>
      <description>Learn about the pessimistic transaction mode of TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Platform</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/tidb-overview/tidb-platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/tidb-overview/tidb-platform/</guid>
      <description>TiDB Platform  Transcript When comparing TiDB to MySQL and discussing architecture, not everything is an apples-to-apples comparison. While TiDB speaks the MySQL protocol, it is important to clarify it does not share any MySQL source code in common.
TiDB is a NewSQL database that was inspired by the design of Google&#39;s internal Spanner project. It is distributed by design and consists of several components that together make what we call the TiDB Platform.</description>
    </item>
    
    <item>
      <title>TiDB Pre-GA Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/prega/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/prega/</guid>
      <description>TiDB Pre-GA Release Notes 2017 年 8 月 30 日，TiDB 发布 Pre-GA 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。
TiDB  SQL 查询优化器  调整代价模型 优化索引选择，支持不同类型字段比较的索引选择 支持基于贪心算法的 Join Reorder   大量 MySQL 兼容性相关功能 支持 Natural Join 完成 JSON 类型支持 (Experimental)，包括对 JSON 中的字段查询、更新、建索引 裁剪无用数据，减小执行器内存消耗 支持在 SQL 语句中设置优先级，并根据查询类型自动设置部分语句的优先级 完成表达式重构，执行速度提升 30% 左右  PD  支持手动切换 PD 集群 Leader  TiKV  Raft Log 使用独立的 RocksDB 实例 使用 DeleteRange 加快删除副本速度 Coprocessor 支持更多运算符下推 提升性能，提升稳定性  TiSpark Beta Release  支持谓词下推 支持聚合下推 支持范围裁剪 通过 TPC-H 测试 (除去一个需要 View 的 Query)  </description>
    </item>
    
    <item>
      <title>TiDB Pre-GA Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/prega/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/prega/</guid>
      <description>TiDB Pre-GA Release Notes 2017 年 8 月 30 日，TiDB 发布 Pre-GA 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。
TiDB  SQL 查询优化器  调整代价模型 优化索引选择，支持不同类型字段比较的索引选择 支持基于贪心算法的 Join Reorder   大量 MySQL 兼容性相关功能 支持 Natural Join 完成 JSON 类型支持 (Experimental)，包括对 JSON 中的字段查询、更新、建索引 裁剪无用数据，减小执行器内存消耗 支持在 SQL 语句中设置优先级，并根据查询类型自动设置部分语句的优先级 完成表达式重构，执行速度提升 30% 左右  PD  支持手动切换 PD 集群 Leader  TiKV  Raft Log 使用独立的 RocksDB 实例 使用 DeleteRange 加快删除副本速度 Coprocessor 支持更多运算符下推 提升性能，提升稳定性  TiSpark Beta Release  支持谓词下推 支持聚合下推 支持范围裁剪 通过 TPC-H 测试 (除去一个需要 View 的 Query)  </description>
    </item>
    
    <item>
      <title>TiDB Pre-GA Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/prega/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/prega/</guid>
      <description>TiDB Pre-GA Release Notes 2017 年 8 月 30 日，TiDB 发布 Pre-GA 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。
TiDB  SQL 查询优化器  调整代价模型 优化索引选择，支持不同类型字段比较的索引选择 支持基于贪心算法的 Join Reorder   大量 MySQL 兼容性相关功能 支持 Natural Join 完成 JSON 类型支持 (Experimental)，包括对 JSON 中的字段查询、更新、建索引 裁剪无用数据，减小执行器内存消耗 支持在 SQL 语句中设置优先级，并根据查询类型自动设置部分语句的优先级 完成表达式重构，执行速度提升 30% 左右  PD  支持手动切换 PD 集群 Leader  TiKV  Raft Log 使用独立的 RocksDB 实例 使用 DeleteRange 加快删除副本速度 Coprocessor 支持更多运算符下推 提升性能，提升稳定性  TiSpark Beta Release  支持谓词下推 支持聚合下推 支持范围裁剪 通过 TPC-H 测试 (除去一个需要 View 的 Query)  </description>
    </item>
    
    <item>
      <title>TiDB Pre-GA Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/prega/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/prega/</guid>
      <description>TiDB Pre-GA Release Notes 2017 年 8 月 30 日，TiDB 发布 Pre-GA 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。
TiDB  SQL 查询优化器  调整代价模型 优化索引选择，支持不同类型字段比较的索引选择 支持基于贪心算法的 Join Reorder   大量 MySQL 兼容性相关功能 支持 Natural Join 完成 JSON 类型支持 (Experimental)，包括对 JSON 中的字段查询、更新、建索引 裁剪无用数据，减小执行器内存消耗 支持在 SQL 语句中设置优先级，并根据查询类型自动设置部分语句的优先级 完成表达式重构，执行速度提升 30% 左右  PD  支持手动切换 PD 集群 Leader  TiKV  Raft Log 使用独立的 RocksDB 实例 使用 DeleteRange 加快删除副本速度 Coprocessor 支持更多运算符下推 提升性能，提升稳定性  TiSpark Beta Release  支持谓词下推 支持聚合下推 支持范围裁剪 通过 TPC-H 测试 (除去一个需要 View 的 Query)  </description>
    </item>
    
    <item>
      <title>TiDB RC1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/rc1/</guid>
      <description>TiDB RC1 Release Notes 2016 年 12 月 23 日，分布式关系型数据库 TiDB 正式发布 RC1。
TiKV  提升写入速度 降低磁盘空间占用 支持百 TB 级别数据 提升稳定性，集群规模支持 200 个节点 提供 Raw KV API，以及 Golang client  PD  PD 调度策略框架优化，策略更加灵活合理 添加 label 支持，支持跨 DC 调度 提供 PD Controler，方便操作 PD 集群  TiDB  SQL 查询优化器  支持 eager aggregate 更详细的 explain 信息 union 算子并行化 子查询性能优化 条件下推优化 优化 CBO 框架   重构 time 相关类型的实现，提升和 MySQL 的兼容性 支持更多的 MySQL 内建函数 Add Index 语句提速 支持用 change column 语句修改列名；支持使用 Alter table 的 modify column 和 change column 完成部分列类型转换  工具  Loader：兼容 Percona 的 Mydumper 数据格式，提供多线程导入、出错重试、断点续传等功能，并且针对 TiDB 有优化 开发完成一键部署工具  </description>
    </item>
    
    <item>
      <title>TiDB RC1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/rc1/</guid>
      <description>TiDB RC1 Release Notes 2016 年 12 月 23 日，分布式关系型数据库 TiDB 正式发布 RC1。
TiKV  提升写入速度 降低磁盘空间占用 支持百 TB 级别数据 提升稳定性，集群规模支持 200 个节点 提供 Raw KV API，以及 Golang client  PD  PD 调度策略框架优化，策略更加灵活合理 添加 label 支持，支持跨 DC 调度 提供 PD Controler，方便操作 PD 集群  TiDB  SQL 查询优化器  支持 eager aggregate 更详细的 explain 信息 union 算子并行化 子查询性能优化 条件下推优化 优化 CBO 框架   重构 time 相关类型的实现，提升和 MySQL 的兼容性 支持更多的 MySQL 内建函数 Add Index 语句提速 支持用 change column 语句修改列名；支持使用 Alter table 的 modify column 和 change column 完成部分列类型转换  工具  Loader：兼容 Percona 的 Mydumper 数据格式，提供多线程导入、出错重试、断点续传等功能，并且针对 TiDB 有优化 开发完成一键部署工具  </description>
    </item>
    
    <item>
      <title>TiDB RC1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/rc1/</guid>
      <description>TiDB RC1 Release Notes 2016 年 12 月 23 日，分布式关系型数据库 TiDB 正式发布 RC1。
TiKV  提升写入速度 降低磁盘空间占用 支持百 TB 级别数据 提升稳定性，集群规模支持 200 个节点 提供 Raw KV API，以及 Golang client  PD  PD 调度策略框架优化，策略更加灵活合理 添加 label 支持，支持跨 DC 调度 提供 PD Controler，方便操作 PD 集群  TiDB  SQL 查询优化器  支持 eager aggregate 更详细的 explain 信息 union 算子并行化 子查询性能优化 条件下推优化 优化 CBO 框架   重构 time 相关类型的实现，提升和 MySQL 的兼容性 支持更多的 MySQL 内建函数 Add Index 语句提速 支持用 change column 语句修改列名；支持使用 Alter table 的 modify column 和 change column 完成部分列类型转换  工具  Loader：兼容 Percona 的 Mydumper 数据格式，提供多线程导入、出错重试、断点续传等功能，并且针对 TiDB 有优化 开发完成一键部署工具  </description>
    </item>
    
    <item>
      <title>TiDB RC1 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/rc1/</guid>
      <description>TiDB RC1 Release Notes 2016 年 12 月 23 日，分布式关系型数据库 TiDB 正式发布 RC1。
TiKV  提升写入速度 降低磁盘空间占用 支持百 TB 级别数据 提升稳定性，集群规模支持 200 个节点 提供 Raw KV API，以及 Golang client  PD  PD 调度策略框架优化，策略更加灵活合理 添加 label 支持，支持跨 DC 调度 提供 PD Controler，方便操作 PD 集群  TiDB  SQL 查询优化器  支持 eager aggregate 更详细的 explain 信息 union 算子并行化 子查询性能优化 条件下推优化 优化 CBO 框架   重构 time 相关类型的实现，提升和 MySQL 的兼容性 支持更多的 MySQL 内建函数 Add Index 语句提速 支持用 change column 语句修改列名；支持使用 Alter table 的 modify column 和 change column 完成部分列类型转换  工具  Loader：兼容 Percona 的 Mydumper 数据格式，提供多线程导入、出错重试、断点续传等功能，并且针对 TiDB 有优化 开发完成一键部署工具  </description>
    </item>
    
    <item>
      <title>TiDB RC1 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/rc1/</guid>
      <description>TiDB RC1 Release Notes On December 23, 2016, TiDB RC1 is released. See the following updates in this release:
TiKV  The write speed has been improved. The disk space usage is reduced. Hundreds of TBs of data can be supported. The stability is improved and TiKV can support a cluster with 200 nodes. Supports the Raw KV API and the Golang client.  Placement Driver (PD)  The scheduling strategy framework is optimized and now the strategy is more flexible and reasonable.</description>
    </item>
    
    <item>
      <title>TiDB RC1 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/rc1/</guid>
      <description>TiDB RC1 Release Notes On December 23, 2016, TiDB RC1 is released. See the following updates in this release:
TiKV  The write speed has been improved. The disk space usage is reduced. Hundreds of TBs of data can be supported. The stability is improved and TiKV can support a cluster with 200 nodes. Supports the Raw KV API and the Golang client.  Placement Driver (PD)  The scheduling strategy framework is optimized and now the strategy is more flexible and reasonable.</description>
    </item>
    
    <item>
      <title>TiDB RC1 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/rc1/</guid>
      <description>TiDB RC1 Release Notes On December 23, 2016, TiDB RC1 is released. See the following updates in this release:
TiKV  The write speed has been improved. The disk space usage is reduced. Hundreds of TBs of data can be supported. The stability is improved and TiKV can support a cluster with 200 nodes. Supports the Raw KV API and the Golang client.  Placement Driver (PD)  The scheduling strategy framework is optimized and now the strategy is more flexible and reasonable.</description>
    </item>
    
    <item>
      <title>TiDB RC1 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/rc1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/rc1/</guid>
      <description>TiDB RC1 Release Notes On December 23, 2016, TiDB RC1 is released. See the following updates in this release:
TiKV  The write speed has been improved. The disk space usage is reduced. Hundreds of TBs of data can be supported. The stability is improved and TiKV can support a cluster with 200 nodes. Supports the Raw KV API and the Golang client.  Placement Driver (PD):
 The scheduling strategy framework is optimized and now the strategy is more flexible and reasonable.</description>
    </item>
    
    <item>
      <title>TiDB RC2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/rc2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/rc2/</guid>
      <description>TiDB RC2 Release Notes 2017 年 3 月 1 日，TiDB 正式发布 RC2 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。对于 OLTP 场景，读取性能提升 60%，写入性能提升 30%。另外提供了权限管理功能，用户可以按照 MySQL 的权限管理方式控制数据访问权限。
TiDB  SQL 查询优化器  统计信息收集和使用 关联子查询优化 优化 CBO 框架 通过 Unique Key 信息消除聚合 重构 Expression Distinct 转换为 GroupBy 支持 topn 操作下推   支持基本权限管理 新增大量 MySQL 内建函数 完善 Alter Table 语句，支持修改表名、默认值、注释 支持 Create Table Like 语句 支持 Show Warnings 语句 支持 Rename Table 语句 限制单个事务大小，避免大事务阻塞整个集群 Load Data 过程中对数据进行自动拆分 优化 AddIndex、Delete 语句性能 支持 &amp;ldquo;ANSI_QUOTES&amp;rdquo; sql_mode 完善监控 修复 Bug 修复内存泄漏问题  PD  支持 Label 对副本进行 Location 调度 基于 region 数量的快速调度 pd-ctl 支持更多功能  添加、删除 PD 通过 Key 获取 Region 信息 添加、删除 scheduler 和 operator 获取集群 label 信息    TiKV  支持 Async Apply 提升整体写入性能 使用 prefix seek 提升 Write CF 的读取性能 使用 memory hint prefix 提升 Raft CF 插入性能 优化单行读事务性能 支持更多下推功能 加入更多统计 修复 Bug  </description>
    </item>
    
    <item>
      <title>TiDB RC2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/rc2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/rc2/</guid>
      <description>TiDB RC2 Release Notes 2017 年 3 月 1 日，TiDB 正式发布 RC2 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。对于 OLTP 场景，读取性能提升 60%，写入性能提升 30%。另外提供了权限管理功能，用户可以按照 MySQL 的权限管理方式控制数据访问权限。
TiDB  SQL 查询优化器  统计信息收集和使用 关联子查询优化 优化 CBO 框架 通过 Unique Key 信息消除聚合 重构 Expression Distinct 转换为 GroupBy 支持 topn 操作下推   支持基本权限管理 新增大量 MySQL 内建函数 完善 Alter Table 语句，支持修改表名、默认值、注释 支持 Create Table Like 语句 支持 Show Warnings 语句 支持 Rename Table 语句 限制单个事务大小，避免大事务阻塞整个集群 Load Data 过程中对数据进行自动拆分 优化 AddIndex、Delete 语句性能 支持 &amp;ldquo;ANSI_QUOTES&amp;rdquo; sql_mode 完善监控 修复 Bug 修复内存泄漏问题  PD  支持 Label 对副本进行 Location 调度 基于 region 数量的快速调度 pd-ctl 支持更多功能  添加、删除 PD 通过 Key 获取 Region 信息 添加、删除 scheduler 和 operator 获取集群 label 信息    TiKV  支持 Async Apply 提升整体写入性能 使用 prefix seek 提升 Write CF 的读取性能 使用 memory hint prefix 提升 Raft CF 插入性能 优化单行读事务性能 支持更多下推功能 加入更多统计 修复 Bug  </description>
    </item>
    
    <item>
      <title>TiDB RC2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/rc2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/rc2/</guid>
      <description>TiDB RC2 Release Notes 2017 年 3 月 1 日，TiDB 正式发布 RC2 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。对于 OLTP 场景，读取性能提升 60%，写入性能提升 30%。另外提供了权限管理功能，用户可以按照 MySQL 的权限管理方式控制数据访问权限。
TiDB  SQL 查询优化器  统计信息收集和使用 关联子查询优化 优化 CBO 框架 通过 Unique Key 信息消除聚合 重构 Expression Distinct 转换为 GroupBy 支持 topn 操作下推   支持基本权限管理 新增大量 MySQL 内建函数 完善 Alter Table 语句，支持修改表名、默认值、注释 支持 Create Table Like 语句 支持 Show Warnings 语句 支持 Rename Table 语句 限制单个事务大小，避免大事务阻塞整个集群 Load Data 过程中对数据进行自动拆分 优化 AddIndex、Delete 语句性能 支持 &amp;ldquo;ANSI_QUOTES&amp;rdquo; sql_mode 完善监控 修复 Bug 修复内存泄漏问题  PD  支持 Label 对副本进行 Location 调度 基于 region 数量的快速调度 pd-ctl 支持更多功能  添加、删除 PD 通过 Key 获取 Region 信息 添加、删除 scheduler 和 operator 获取集群 label 信息    TiKV  支持 Async Apply 提升整体写入性能 使用 prefix seek 提升 Write CF 的读取性能 使用 memory hint prefix 提升 Raft CF 插入性能 优化单行读事务性能 支持更多下推功能 加入更多统计 修复 Bug  </description>
    </item>
    
    <item>
      <title>TiDB RC2 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/rc2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/rc2/</guid>
      <description>TiDB RC2 Release Notes 2017 年 3 月 1 日，TiDB 正式发布 RC2 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。对于 OLTP 场景，读取性能提升 60%，写入性能提升 30%。另外提供了权限管理功能，用户可以按照 MySQL 的权限管理方式控制数据访问权限。
TiDB  SQL 查询优化器  统计信息收集和使用 关联子查询优化 优化 CBO 框架 通过 Unique Key 信息消除聚合 重构 Expression Distinct 转换为 GroupBy 支持 topn 操作下推   支持基本权限管理 新增大量 MySQL 内建函数 完善 Alter Table 语句，支持修改表名、默认值、注释 支持 Create Table Like 语句 支持 Show Warnings 语句 支持 Rename Table 语句 限制单个事务大小，避免大事务阻塞整个集群 Load Data 过程中对数据进行自动拆分 优化 AddIndex、Delete 语句性能 支持 &amp;ldquo;ANSI_QUOTES&amp;rdquo; sql_mode 完善监控 修复 Bug 修复内存泄漏问题  PD  支持 Label 对副本进行 Location 调度 基于 region 数量的快速调度 pd-ctl 支持更多功能  添加、删除 PD 通过 Key 获取 Region 信息 添加、删除 scheduler 和 operator 获取集群 label 信息    TiKV  支持 Async Apply 提升整体写入性能 使用 prefix seek 提升 Write CF 的读取性能 使用 memory hint prefix 提升 Raft CF 插入性能 优化单行读事务性能 支持更多下推功能 加入更多统计 修复 Bug  </description>
    </item>
    
    <item>
      <title>TiDB RC2 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/rc2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/rc2/</guid>
      <description>TiDB RC2 Release Notes On August 4, 2017, TiDB RC4 is released! This release is focused on the compatibility with MySQL, SQL query optimizer, system stability and performance in this version. What’s more, a new permission management mechanism is added and users can control data access in the same way as the MySQL privilege management system.
TiDB  Query optimizer  Collect column/index statistics and use them in the query optimizer Optimize the correlated subquery Optimize the Cost Based Optimizer (CBO) framework Eliminate aggregation using unique key information Refactor expression evaluation framework Convert Distinct to GroupBy Support the topn operation push-down   Support basic privilege management Add lots of MySQL built-in functions Improve the Alter Table statement and support the modification of table name, default value and comment Support the Create Table Like statement Support the Show Warnings statement Support the Rename Table statement Restrict the size of a single transaction to avoid the cluster blocking of large transactions Automatically split data in the process of Load Data Optimize the performance of the AddIndex and Delete statement Support &amp;ldquo;ANSI_QUOTES&amp;rdquo; sql_mode Improve the monitoring system Fix Bugs Solve the problem of memory leak  PD  Support location aware replica scheduling Conduct fast scheduling based on the number of region pd-ctl support more features  Add or delete PD Obtain Region information with Key Add or delete scheduler and operator Obtain cluster label information    TiKV  Support Async Apply to improve the entire write performance Use prefix seek to improve the read performance of Write CF Use memory hint prefix to improve the insert performance of Raft CF Optimize the single read transaction performance Support more push-down expressions Improve the monitoring system Fix Bugs  </description>
    </item>
    
    <item>
      <title>TiDB RC2 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/rc2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/rc2/</guid>
      <description>TiDB RC2 Release Notes On August 4, 2017, TiDB RC4 is released! This release is focused on the compatibility with MySQL, SQL query optimizer, system stability and performance in this version. What’s more, a new permission management mechanism is added and users can control data access in the same way as the MySQL privilege management system.
TiDB  Query optimizer  Collect column/index statistics and use them in the query optimizer Optimize the correlated subquery Optimize the Cost Based Optimizer (CBO) framework Eliminate aggregation using unique key information Refactor expression evaluation framework Convert Distinct to GroupBy Support the topn operation push-down   Support basic privilege management Add lots of MySQL built-in functions Improve the Alter Table statement and support the modification of table name, default value and comment Support the Create Table Like statement Support the Show Warnings statement Support the Rename Table statement Restrict the size of a single transaction to avoid the cluster blocking of large transactions Automatically split data in the process of Load Data Optimize the performance of the AddIndex and Delete statement Support &amp;ldquo;ANSI_QUOTES&amp;rdquo; sql_mode Improve the monitoring system Fix Bugs Solve the problem of memory leak  PD  Support location aware replica scheduling Conduct fast scheduling based on the number of region pd-ctl support more features  Add or delete PD Obtain Region information with Key Add or delete scheduler and operator Obtain cluster label information    TiKV  Support Async Apply to improve the entire write performance Use prefix seek to improve the read performance of Write CF Use memory hint prefix to improve the insert performance of Raft CF Optimize the single read transaction performance Support more push-down expressions Improve the monitoring system Fix Bugs  </description>
    </item>
    
    <item>
      <title>TiDB RC2 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/rc2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/rc2/</guid>
      <description>TiDB RC2 Release Notes On August 4, 2017, TiDB RC4 is released! This release is focused on the compatibility with MySQL, SQL query optimizer, system stability and performance in this version. What’s more, a new permission management mechanism is added and users can control data access in the same way as the MySQL privilege management system.
TiDB  Query optimizer  Collect column/index statistics and use them in the query optimizer Optimize the correlated subquery Optimize the Cost Based Optimizer (CBO) framework Eliminate aggregation using unique key information Refactor expression evaluation framework Convert Distinct to GroupBy Support the topn operation push-down   Support basic privilege management Add lots of MySQL built-in functions Improve the Alter Table statement and support the modification of table name, default value and comment Support the Create Table Like statement Support the Show Warnings statement Support the Rename Table statement Restrict the size of a single transaction to avoid the cluster blocking of large transactions Automatically split data in the process of Load Data Optimize the performance of the AddIndex and Delete statement Support &amp;ldquo;ANSI_QUOTES&amp;rdquo; sql_mode Improve the monitoring system Fix Bugs Solve the problem of memory leak  PD  Support location aware replica scheduling Conduct fast scheduling based on the number of region pd-ctl support more features  Add or delete PD Obtain Region information with Key Add or delete scheduler and operator Obtain cluster label information    TiKV  Support Async Apply to improve the entire write performance Use prefix seek to improve the read performance of Write CF Use memory hint prefix to improve the insert performance of Raft CF Optimize the single read transaction performance Support more push-down expressions Improve the monitoring system Fix Bugs  </description>
    </item>
    
    <item>
      <title>TiDB RC2 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/rc2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/rc2/</guid>
      <description>TiDB RC2 Release Notes On August 4, 2017, TiDB RC4 is released! This release is focused on the compatibility with MySQL, SQL query optimizer, system stability and performance in this version. What’s more, a new permission management mechanism is added and users can control data access in the same way as the MySQL privilege management system.
TiDB  Query optimizer  Collect column/index statistics and use them in the query optimizer Optimize the correlated subquery Optimize the Cost Based Optimizer (CBO) framework Eliminate aggregation using unique key information Refactor expression evaluation framework Convert Distinct to GroupBy Support the topn operation push-down   Support basic privilege management Add lots of MySQL built-in functions Improve the Alter Table statement and support the modification of table name, default value and comment Support the Create Table Like statement Support the Show Warnings statement Support the Rename Table statement Restrict the size of a single transaction to avoid the cluster blocking of large transactions Automatically split data in the process of Load Data Optimize the performance of the AddIndex and Delete statement Support &amp;ldquo;ANSI_QUOTES&amp;rdquo; sql_mode Improve the monitoring system Fix Bugs Solve the problem of memory leak  PD  Support location aware replica scheduling Conduct fast scheduling based on the number of region pd-ctl support more features  Add or delete PD Obtain Region information with Key Add or delete scheduler and operator Obtain cluster label information    TiKV  Support Async Apply to improve the entire write performance Use prefix seek to improve the read performance of Write CF Use memory hint prefix to improve the insert performance of Raft CF Optimize the single read transaction performance Support more push-down expressions Improve the monitoring system Fix Bugs  </description>
    </item>
    
    <item>
      <title>TiDB RC3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/rc3/</guid>
      <description>TiDB RC3 Release Notes 2017 年 6 月 16 日，TiDB 正式发布 RC3 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。性能方面重点优化了负载均衡调度策略和流程。功能方面进一步完善权限管理功能，用户可以按照 MySQL 的权限管理方式控制数据访问权限。另外 DDL 的速度也得到显著的提升。 同时为了简化运维工作，开源了 TiDB Ansible 项目，可以一键部署/升级/启停 TiDB 集群。
TiDB  SQL 查询优化器  统计信息收集和使用 关联子查询优化 优化 CBO 框架 通过 Unique Key 信息消除聚合 重构 Expression Distinct 转换为 GroupBy 支持 topn 操作下推   支持基本权限管理 新增大量 MySQL 内建函数 完善 Alter Table 语句，支持修改表名、默认值、注释 支持 Create Table Like 语句 支持 Show Warnings 语句 支持 Rename Table 语句 限制单个事务大小，避免大事务阻塞整个集群 Load Data 过程中对数据进行自动拆分 优化 AddIndex、Delete 语句性能 支持 &amp;ldquo;ANSI_QUOTES&amp;rdquo; sql_mode 完善监控 修复 Bug 修复内存泄漏问题  PD  支持 Label 对副本进行 Location 调度 基于 region 数量的快速调度 pd-ctl 支持更多功能  添加、删除 PD 通过 Key 获取 Region 信息 添加、删除 scheduler 和 operator 获取集群 label 信息    TiKV  支持 Async Apply 提升整体写入性能 使用 prefix seek 提升 Write CF 的读取性能 使用 memory hint prefix 提升 Raft CF 插入性能 优化单行读事务性能 支持更多下推功能 加入更多统计 修复 Bug  </description>
    </item>
    
    <item>
      <title>TiDB RC3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/rc3/</guid>
      <description>TiDB RC3 Release Notes 2017 年 6 月 16 日，TiDB 正式发布 RC3 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。性能方面重点优化了负载均衡调度策略和流程。功能方面进一步完善权限管理功能，用户可以按照 MySQL 的权限管理方式控制数据访问权限。另外 DDL 的速度也得到显著的提升。 同时为了简化运维工作，开源了 TiDB Ansible 项目，可以一键部署/升级/启停 TiDB 集群。
TiDB  SQL 查询优化器  统计信息收集和使用 关联子查询优化 优化 CBO 框架 通过 Unique Key 信息消除聚合 重构 Expression Distinct 转换为 GroupBy 支持 topn 操作下推   支持基本权限管理 新增大量 MySQL 内建函数 完善 Alter Table 语句，支持修改表名、默认值、注释 支持 Create Table Like 语句 支持 Show Warnings 语句 支持 Rename Table 语句 限制单个事务大小，避免大事务阻塞整个集群 Load Data 过程中对数据进行自动拆分 优化 AddIndex、Delete 语句性能 支持 &amp;ldquo;ANSI_QUOTES&amp;rdquo; sql_mode 完善监控 修复 Bug 修复内存泄漏问题  PD  支持 Label 对副本进行 Location 调度 基于 region 数量的快速调度 pd-ctl 支持更多功能  添加、删除 PD 通过 Key 获取 Region 信息 添加、删除 scheduler 和 operator 获取集群 label 信息    TiKV  支持 Async Apply 提升整体写入性能 使用 prefix seek 提升 Write CF 的读取性能 使用 memory hint prefix 提升 Raft CF 插入性能 优化单行读事务性能 支持更多下推功能 加入更多统计 修复 Bug  </description>
    </item>
    
    <item>
      <title>TiDB RC3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/rc3/</guid>
      <description>TiDB RC3 Release Notes 2017 年 6 月 16 日，TiDB 正式发布 RC3 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。性能方面重点优化了负载均衡调度策略和流程。功能方面进一步完善权限管理功能，用户可以按照 MySQL 的权限管理方式控制数据访问权限。另外 DDL 的速度也得到显著的提升。 同时为了简化运维工作，开源了 TiDB Ansible 项目，可以一键部署/升级/启停 TiDB 集群。
TiDB  SQL 查询优化器  统计信息收集和使用 关联子查询优化 优化 CBO 框架 通过 Unique Key 信息消除聚合 重构 Expression Distinct 转换为 GroupBy 支持 topn 操作下推   支持基本权限管理 新增大量 MySQL 内建函数 完善 Alter Table 语句，支持修改表名、默认值、注释 支持 Create Table Like 语句 支持 Show Warnings 语句 支持 Rename Table 语句 限制单个事务大小，避免大事务阻塞整个集群 Load Data 过程中对数据进行自动拆分 优化 AddIndex、Delete 语句性能 支持 &amp;ldquo;ANSI_QUOTES&amp;rdquo; sql_mode 完善监控 修复 Bug 修复内存泄漏问题  PD  支持 Label 对副本进行 Location 调度 基于 region 数量的快速调度 pd-ctl 支持更多功能  添加、删除 PD 通过 Key 获取 Region 信息 添加、删除 scheduler 和 operator 获取集群 label 信息    TiKV  支持 Async Apply 提升整体写入性能 使用 prefix seek 提升 Write CF 的读取性能 使用 memory hint prefix 提升 Raft CF 插入性能 优化单行读事务性能 支持更多下推功能 加入更多统计 修复 Bug  </description>
    </item>
    
    <item>
      <title>TiDB RC3 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/rc3/</guid>
      <description>TiDB RC3 Release Notes 2017 年 6 月 16 日，TiDB 正式发布 RC3 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。性能方面重点优化了负载均衡调度策略和流程。功能方面进一步完善权限管理功能，用户可以按照 MySQL 的权限管理方式控制数据访问权限。另外 DDL 的速度也得到显著的提升。 同时为了简化运维工作，开源了 TiDB Ansible 项目，可以一键部署/升级/启停 TiDB 集群。
TiDB  SQL 查询优化器  统计信息收集和使用 关联子查询优化 优化 CBO 框架 通过 Unique Key 信息消除聚合 重构 Expression Distinct 转换为 GroupBy 支持 topn 操作下推   支持基本权限管理 新增大量 MySQL 内建函数 完善 Alter Table 语句，支持修改表名、默认值、注释 支持 Create Table Like 语句 支持 Show Warnings 语句 支持 Rename Table 语句 限制单个事务大小，避免大事务阻塞整个集群 Load Data 过程中对数据进行自动拆分 优化 AddIndex、Delete 语句性能 支持 &amp;ldquo;ANSI_QUOTES&amp;rdquo; sql_mode 完善监控 修复 Bug 修复内存泄漏问题  PD  支持 Label 对副本进行 Location 调度 基于 region 数量的快速调度 pd-ctl 支持更多功能  添加、删除 PD 通过 Key 获取 Region 信息 添加、删除 scheduler 和 operator 获取集群 label 信息    TiKV  支持 Async Apply 提升整体写入性能 使用 prefix seek 提升 Write CF 的读取性能 使用 memory hint prefix 提升 Raft CF 插入性能 优化单行读事务性能 支持更多下推功能 加入更多统计 修复 Bug  </description>
    </item>
    
    <item>
      <title>TiDB RC3 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/rc3/</guid>
      <description>TiDB RC3 Release Notes On June 20, 2017, TiDB RC4 is released!This release is focused on MySQL compatibility, SQL optimization, stability, and performance.
Highlight  The privilege management is refined to enable users to manage the data access privileges using the same way as in MySQL. DDL is accelerated. The load balancing policy and process are optimized for performance. TiDB Ansible is open sourced. By using TiDB-Ansilbe, you can deploy, upgrade, start and shutdown a TiDB cluster with one click.</description>
    </item>
    
    <item>
      <title>TiDB RC3 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/rc3/</guid>
      <description>TiDB RC3 Release Notes On June 20, 2017, TiDB RC4 is released!This release is focused on MySQL compatibility, SQL optimization, stability, and performance.
Highlight  The privilege management is refined to enable users to manage the data access privileges using the same way as in MySQL. DDL is accelerated. The load balancing policy and process are optimized for performance. TiDB Ansible is open sourced. By using TiDB-Ansilbe, you can deploy, upgrade, start and shutdown a TiDB cluster with one click.</description>
    </item>
    
    <item>
      <title>TiDB RC3 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/rc3/</guid>
      <description>TiDB RC3 Release Notes On June 20, 2017, TiDB RC4 is released!This release is focused on MySQL compatibility, SQL optimization, stability, and performance.
Highlight  The privilege management is refined to enable users to manage the data access privileges using the same way as in MySQL. DDL is accelerated. The load balancing policy and process are optimized for performance. TiDB Ansible is open sourced. By using TiDB-Ansilbe, you can deploy, upgrade, start and shutdown a TiDB cluster with one click.</description>
    </item>
    
    <item>
      <title>TiDB RC3 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/rc3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/rc3/</guid>
      <description>TiDB RC3 Release Notes On June 20, 2017, TiDB RC4 is released!This release is focused on MySQL compatibility, SQL optimization, stability, and performance.
Highlight  The privilege management is refined to enable users to manage the data access privileges using the same way as in MySQL. DDL is accelerated. The load balancing policy and process are optimized for performance. TiDB Ansible is open sourced. By using TiDB-Ansilbe, you can deploy, upgrade, start and shutdown a TiDB cluster with one click.</description>
    </item>
    
    <item>
      <title>TiDB RC4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/dev/releases/rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/rc4/</guid>
      <description>TiDB RC4 Release Notes 2017 年 8 月 4 日，TiDB 正式发布 RC4 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。性能方面重点优化了写入速度，计算任务调度支持优先级，避免分析型大事务影响在线事务。SQL 优化器全新改版，查询代价估算更加准确，且能够自动选择 Join 物理算子。功能方面进一步 MySQL 兼容性。 同时为了更好的支持 OLAP 业务，开源了 TiSpark 项目，可以通过 Spark 读取和分析 TiKV 中的数据。
TiDB  SQL 查询优化器重构  更好的支持 TopN 查询 支持 Join 算子根据代价自动选择 更完善的 Projection Elimination   Schema 版本检查区分 Table，避免 DDL 干扰其他正在执行的事务 支持 BatchIndexJoin 完善 Explain 语句 提升 Index Scan 性能 大量 MySQL 兼容性相关功能 支持 Json 类型及其操作 支持查询优先级、隔离级别的设置  PD  支持通过 PD 设置 TiKV location labels 调度优化  支持 PD 主动向 TiKV 下发调度命令 加快 region heartbeat 响应速度 优化 balance 算法   优化数据加载，加快 failover 速度  TiKV  支持查询优先级设置 支持 RC 隔离级别 完善 Jepsen，提升稳定性 支持 Document Store Coprocessor 支持更多下推函数 提升性能，提升稳定性  TiSpark Beta Release  支持谓词下推 支持聚合下推 支持范围裁剪 通过 TPC-H 测试 (除去一个需要 View 的 Query)  </description>
    </item>
    
    <item>
      <title>TiDB RC4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/stable/releases/rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/rc4/</guid>
      <description>TiDB RC4 Release Notes 2017 年 8 月 4 日，TiDB 正式发布 RC4 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。性能方面重点优化了写入速度，计算任务调度支持优先级，避免分析型大事务影响在线事务。SQL 优化器全新改版，查询代价估算更加准确，且能够自动选择 Join 物理算子。功能方面进一步 MySQL 兼容性。 同时为了更好的支持 OLAP 业务，开源了 TiSpark 项目，可以通过 Spark 读取和分析 TiKV 中的数据。
TiDB  SQL 查询优化器重构  更好的支持 TopN 查询 支持 Join 算子根据代价自动选择 更完善的 Projection Elimination   Schema 版本检查区分 Table，避免 DDL 干扰其他正在执行的事务 支持 BatchIndexJoin 完善 Explain 语句 提升 Index Scan 性能 大量 MySQL 兼容性相关功能 支持 Json 类型及其操作 支持查询优先级、隔离级别的设置  PD  支持通过 PD 设置 TiKV location labels 调度优化  支持 PD 主动向 TiKV 下发调度命令 加快 region heartbeat 响应速度 优化 balance 算法   优化数据加载，加快 failover 速度  TiKV  支持查询优先级设置 支持 RC 隔离级别 完善 Jepsen，提升稳定性 支持 Document Store Coprocessor 支持更多下推函数 提升性能，提升稳定性  TiSpark Beta Release  支持谓词下推 支持聚合下推 支持范围裁剪 通过 TPC-H 测试 (除去一个需要 View 的 Query)  </description>
    </item>
    
    <item>
      <title>TiDB RC4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/rc4/</guid>
      <description>TiDB RC4 Release Notes 2017 年 8 月 4 日，TiDB 正式发布 RC4 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。性能方面重点优化了写入速度，计算任务调度支持优先级，避免分析型大事务影响在线事务。SQL 优化器全新改版，查询代价估算更加准确，且能够自动选择 Join 物理算子。功能方面进一步 MySQL 兼容性。 同时为了更好的支持 OLAP 业务，开源了 TiSpark 项目，可以通过 Spark 读取和分析 TiKV 中的数据。
TiDB  SQL 查询优化器重构  更好的支持 TopN 查询 支持 Join 算子根据代价自动选择 更完善的 Projection Elimination   Schema 版本检查区分 Table，避免 DDL 干扰其他正在执行的事务 支持 BatchIndexJoin 完善 Explain 语句 提升 Index Scan 性能 大量 MySQL 兼容性相关功能 支持 Json 类型及其操作 支持查询优先级、隔离级别的设置  PD  支持通过 PD 设置 TiKV location labels 调度优化  支持 PD 主动向 TiKV 下发调度命令 加快 region heartbeat 响应速度 优化 balance 算法   优化数据加载，加快 failover 速度  TiKV  支持查询优先级设置 支持 RC 隔离级别 完善 Jepsen，提升稳定性 支持 Document Store Coprocessor 支持更多下推函数 提升性能，提升稳定性  TiSpark Beta Release  支持谓词下推 支持聚合下推 支持范围裁剪 通过 TPC-H 测试（除去一个需要 View 的 Query）  </description>
    </item>
    
    <item>
      <title>TiDB RC4 Release Notes</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/rc4/</guid>
      <description>TiDB RC4 Release Notes 2017 年 8 月 4 日，TiDB 正式发布 RC4 版。该版本对 MySQL 兼容性、SQL 优化器、系统稳定性、性能做了大量的工作。性能方面重点优化了写入速度，计算任务调度支持优先级，避免分析型大事务影响在线事务。SQL 优化器全新改版，查询代价估算更加准确，且能够自动选择 Join 物理算子。功能方面进一步 MySQL 兼容性。 同时为了更好的支持 OLAP 业务，开源了 TiSpark 项目，可以通过 Spark 读取和分析 TiKV 中的数据。
TiDB  SQL 查询优化器重构  更好的支持 TopN 查询 支持 Join 算子根据代价自动选择 更完善的 Projection Elimination   Schema 版本检查区分 Table，避免 DDL 干扰其他正在执行的事务 支持 BatchIndexJoin 完善 Explain 语句 提升 Index Scan 性能 大量 MySQL 兼容性相关功能 支持 Json 类型及其操作 支持查询优先级、隔离级别的设置  PD  支持通过 PD 设置 TiKV location labels 调度优化  支持 PD 主动向 TiKV 下发调度命令 加快 region heartbeat 响应速度 优化 balance 算法   优化数据加载，加快 failover 速度  TiKV  支持查询优先级设置 支持 RC 隔离级别 完善 Jepsen，提升稳定性 支持 Document Store Coprocessor 支持更多下推函数 提升性能，提升稳定性  TiSpark Beta Release  支持谓词下推 支持聚合下推 支持范围裁剪 通过 TPC-H 测试 (除去一个需要 View 的 Query)  </description>
    </item>
    
    <item>
      <title>TiDB RC4 Release Notes</title>
      <link>https://pingcap.com/docs/dev/releases/rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/releases/rc4/</guid>
      <description>TiDB RC4 Release Notes On August 4, 2017, TiDB RC4 is released! This release is focused on MySQL compatibility, SQL optimization, stability, and performance.
Highlight  For performance, the write performance is improved significantly, and the computing task scheduling supports prioritizing to avoid the impact of OLAP on OLTP. The optimizer is revised for a more accurate query cost estimating and for an automatic choice of the Join physical operator based on the cost.</description>
    </item>
    
    <item>
      <title>TiDB RC4 Release Notes</title>
      <link>https://pingcap.com/docs/stable/releases/rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/releases/rc4/</guid>
      <description>TiDB RC4 Release Notes On August 4, 2017, TiDB RC4 is released! This release is focused on MySQL compatibility, SQL optimization, stability, and performance.
Highlight  For performance, the write performance is improved significantly, and the computing task scheduling supports prioritizing to avoid the impact of OLAP on OLTP. The optimizer is revised for a more accurate query cost estimating and for an automatic choice of the Join physical operator based on the cost.</description>
    </item>
    
    <item>
      <title>TiDB RC4 Release Notes</title>
      <link>https://pingcap.com/docs/v2.1/releases/rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/releases/rc4/</guid>
      <description>TiDB RC4 Release Notes On August 4, 2017, TiDB RC4 is released! This release is focused on MySQL compatibility, SQL optimization, stability, and performance.
Highlight  For performance, the write performance is improved significantly, and the computing task scheduling supports prioritizing to avoid the impact of OLAP on OLTP. The optimizer is revised for a more accurate query cost estimating and for an automatic choice of the Join physical operator based on the cost.</description>
    </item>
    
    <item>
      <title>TiDB RC4 Release Notes</title>
      <link>https://pingcap.com/docs/v3.1/releases/rc4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/releases/rc4/</guid>
      <description>TiDB RC4 Release Notes On August 4, 2017, TiDB RC4 is released! This release is focused on MySQL compatibility, SQL optimization, stability, and performance.
Highlight  For performance, the write performance is improved significantly, and the computing task scheduling supports prioritizing to avoid the impact of OLAP on OLTP. The optimizer is revised for a more accurate query cost estimating and for an automatic choice of the Join physical operator based on the cost.</description>
    </item>
    
    <item>
      <title>TiDB Roadmap</title>
      <link>https://pingcap.com/docs/v2.1/roadmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/roadmap/</guid>
      <description>Learn about the roadmap of TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Robot</title>
      <link>https://pingcap.com/tidb-planet/robot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-planet/robot/</guid>
      <description>Have fun adventure on TiDB Planet!</description>
    </item>
    
    <item>
      <title>TiDB Scheduler 扩展调度器</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/reference/components/tidb-scheduler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/reference/components/tidb-scheduler/</guid>
      <description>TiDB Scheduler 扩展调度器 本文介绍 TiDB Scheduler 扩展调度器的工作原理。
TiDB 集群调度需求 TiDB 集群核心包括 PD，TiKV 以及 TiDB 三个组件，每个组件又都是由多个节点组成，PD 是一个 Raft 集群，TiKV 是一个多 Group Raft 集群，并且这两个组件又都是有状态的。因此，默认 K8s 的调度器的调度规则已经无法满足 TiDB 集群的调度需求，需要扩展 K8s 的调度规则，目前，TiDB Operator 实现了如下几种自定义的调度规则：
PD 组件 确保每个 Node 节点上调度的 PD 个数小于 Replicas / 2，例如：
   PD 集群规模（Replicas） 每个节点最多可调度的 PD 数量     1 1   2 1   3 1   4 1   5 2   &amp;hellip;     TiKV 组件 如果 K8s 节点数小于 3 个（K8s 集群节点数小于 3 个是无法实现 TiKV 高可用的），则可以任意调度；否则，每个节点上可调度的 TiKV 个数的计算公式为：Ceil (Replicas / 3) ，例如：</description>
    </item>
    
    <item>
      <title>TiDB Slack</title>
      <link>https://pingcap.com/tidbslack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidbslack/</guid>
      <description>PingCAP is focused on developing distributed NewSQL and is the team building TiDB, an open-source distributed NewSQL database.</description>
    </item>
    
    <item>
      <title>TiDB Specific System Variables</title>
      <link>https://pingcap.com/docs/dev/reference/configuration/tidb-server/tidb-specific-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/configuration/tidb-server/tidb-specific-variables/</guid>
      <description>Use system variables specific to TiDB to optimize performance.</description>
    </item>
    
    <item>
      <title>TiDB Specific System Variables</title>
      <link>https://pingcap.com/docs/stable/reference/configuration/tidb-server/tidb-specific-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/configuration/tidb-server/tidb-specific-variables/</guid>
      <description>Use system variables specific to TiDB to optimize performance.</description>
    </item>
    
    <item>
      <title>TiDB Specific System Variables</title>
      <link>https://pingcap.com/docs/v2.1/reference/configuration/tidb-server/tidb-specific-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/configuration/tidb-server/tidb-specific-variables/</guid>
      <description>Use system variables specific to TiDB to optimize performance.</description>
    </item>
    
    <item>
      <title>TiDB Specific System Variables</title>
      <link>https://pingcap.com/docs/v3.1/reference/configuration/tidb-server/tidb-specific-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/configuration/tidb-server/tidb-specific-variables/</guid>
      <description>Use system variables specific to TiDB to optimize performance.</description>
    </item>
    
    <item>
      <title>TiDB Sysbench Performance Test Report -- v2.0.0 vs. v1.0.0</title>
      <link>https://pingcap.com/docs/dev/benchmark/sysbench-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/benchmark/sysbench-v2/</guid>
      <description>TiDB Sysbench Performance Test Report &amp;ndash; v2.0.0 vs. v1.0.0 Test purpose This test aims to compare the performances of TiDB 1.0 and TiDB 2.0.
Test version, time, and place TiDB version: v1.0.8 vs. v2.0.0-rc6
Time: April 2018
Place: Beijing, China
Test environment IDC machine
   Type Name     OS linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz   RAM 128GB   DISK Optane 500GB SSD * 1    Test plan TiDB version information v1.</description>
    </item>
    
    <item>
      <title>TiDB Sysbench Performance Test Report -- v2.0.0 vs. v1.0.0</title>
      <link>https://pingcap.com/docs/stable/benchmark/sysbench-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/benchmark/sysbench-v2/</guid>
      <description>TiDB Sysbench Performance Test Report &amp;ndash; v2.0.0 vs. v1.0.0 Test purpose This test aims to compare the performances of TiDB 1.0 and TiDB 2.0.
Test version, time, and place TiDB version: v1.0.8 vs. v2.0.0-rc6
Time: April 2018
Place: Beijing, China
Test environment IDC machine
   Type Name     OS linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz   RAM 128GB   DISK Optane 500GB SSD * 1    Test plan TiDB version information v1.</description>
    </item>
    
    <item>
      <title>TiDB Sysbench Performance Test Report -- v2.0.0 vs. v1.0.0</title>
      <link>https://pingcap.com/docs/v2.1/benchmark/sysbench-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/benchmark/sysbench-v2/</guid>
      <description>TiDB Sysbench Performance Test Report &amp;ndash; v2.0.0 vs. v1.0.0 Test purpose This test aims to compare the performances of TiDB 1.0 and TiDB 2.0.
Test version, time, and place TiDB version: v1.0.8 vs. v2.0.0-rc6
Time: April 2018
Place: Beijing, China
Test environment IDC machine
   Type Name     OS linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz   RAM 128GB   DISK Optane 500GB SSD * 1    Test plan TiDB version information v1.</description>
    </item>
    
    <item>
      <title>TiDB Sysbench Performance Test Report -- v2.0.0 vs. v1.0.0</title>
      <link>https://pingcap.com/docs/v3.1/benchmark/sysbench-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/benchmark/sysbench-v2/</guid>
      <description>TiDB Sysbench Performance Test Report &amp;ndash; v2.0.0 vs. v1.0.0 Test purpose This test aims to compare the performances of TiDB 1.0 and TiDB 2.0.
Test version, time, and place TiDB version: v1.0.8 vs. v2.0.0-rc6
Time: April 2018
Place: Beijing, China
Test environment IDC machine
   Type Name     OS linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz   RAM 128GB   DISK Optane 500GB SSD * 1    Test plan TiDB version information v1.</description>
    </item>
    
    <item>
      <title>TiDB Sysbench Performance Test Report -- v2.1 vs. v2.0</title>
      <link>https://pingcap.com/docs/dev/benchmark/sysbench-v3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/benchmark/sysbench-v3/</guid>
      <description>TiDB Sysbench Performance Test Report &amp;ndash; v2.1 vs. v2.0 Test purpose This test aims to compare the performance of TiDB 2.1 and TiDB 2.0 for OLTP where the working set fits in memory.
Test version, time, and place TiDB version: v2.1.0-rc.2 vs. v2.0.6
Time: September, 2018
Place: Beijing, China
Test environment IDC machine:
   Type Name     OS Linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.</description>
    </item>
    
    <item>
      <title>TiDB Sysbench Performance Test Report -- v2.1 vs. v2.0</title>
      <link>https://pingcap.com/docs/stable/benchmark/sysbench-v3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/benchmark/sysbench-v3/</guid>
      <description>TiDB Sysbench Performance Test Report &amp;ndash; v2.1 vs. v2.0 Test purpose This test aims to compare the performance of TiDB 2.1 and TiDB 2.0 for OLTP where the working set fits in memory.
Test version, time, and place TiDB version: v2.1.0-rc.2 vs. v2.0.6
Time: September, 2018
Place: Beijing, China
Test environment IDC machine:
   Type Name     OS Linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.</description>
    </item>
    
    <item>
      <title>TiDB Sysbench Performance Test Report -- v2.1 vs. v2.0</title>
      <link>https://pingcap.com/docs/v2.1/benchmark/sysbench-v3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/benchmark/sysbench-v3/</guid>
      <description>TiDB Sysbench Performance Test Report &amp;ndash; v2.1 vs. v2.0 Test purpose This test aims to compare the performance of TiDB 2.1 and TiDB 2.0 for OLTP where the working set fits in memory.
Test version, time, and place TiDB version: v2.1.0-rc.2 vs. v2.0.6
Time: September, 2018
Place: Beijing, China
Test environment IDC machine:
   Type Name     OS Linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.</description>
    </item>
    
    <item>
      <title>TiDB Sysbench Performance Test Report -- v2.1 vs. v2.0</title>
      <link>https://pingcap.com/docs/v3.1/benchmark/sysbench-v3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/benchmark/sysbench-v3/</guid>
      <description>TiDB Sysbench Performance Test Report &amp;ndash; v2.1 vs. v2.0 Test purpose This test aims to compare the performance of TiDB 2.1 and TiDB 2.0 for OLTP where the working set fits in memory.
Test version, time, and place TiDB version: v2.1.0-rc.2 vs. v2.0.6
Time: September, 2018
Place: Beijing, China
Test environment IDC machine:
   Type Name     OS Linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.</description>
    </item>
    
    <item>
      <title>TiDB Sysbench Performance Test Report -- v3.0 vs. v2.1</title>
      <link>https://pingcap.com/docs/dev/benchmark/sysbench-v4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/benchmark/sysbench-v4/</guid>
      <description>TiDB Sysbench Performance Test Report &amp;ndash; v3.0 vs. v2.1 Test purpose This test aims to compare the performance of TiDB 3.0 and TiDB 2.1 in the OLTP scenario.
Test version, time, and place TiDB version: v3.0.0 vs. v2.1.13
Time: June, 2019
Place: Beijing
Test environment This test runs on AWS EC2 and uses the CentOS-7.6.1810-Nitro (ami-028946f4cffc8b916) image. The components and types of instances are as follows:
   Component Instance type     PD r5d.</description>
    </item>
    
    <item>
      <title>TiDB Sysbench Performance Test Report -- v3.0 vs. v2.1</title>
      <link>https://pingcap.com/docs/stable/benchmark/sysbench-v4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/benchmark/sysbench-v4/</guid>
      <description>TiDB Sysbench Performance Test Report &amp;ndash; v3.0 vs. v2.1 Test purpose This test aims to compare the performance of TiDB 3.0 and TiDB 2.1 in the OLTP scenario.
Test version, time, and place TiDB version: v3.0.0 vs. v2.1.13
Time: June, 2019
Place: Beijing
Test environment This test runs on AWS EC2 and uses the CentOS-7.6.1810-Nitro (ami-028946f4cffc8b916) image. The components and types of instances are as follows:
   Component Instance type     PD r5d.</description>
    </item>
    
    <item>
      <title>TiDB Sysbench Performance Test Report -- v3.0 vs. v2.1</title>
      <link>https://pingcap.com/docs/v3.1/benchmark/sysbench-v4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/benchmark/sysbench-v4/</guid>
      <description>TiDB Sysbench Performance Test Report &amp;ndash; v3.0 vs. v2.1 Test purpose This test aims to compare the performance of TiDB 3.0 and TiDB 2.1 in the OLTP scenario.
Test version, time, and place TiDB version: v3.0.0 vs. v2.1.13
Time: June, 2019
Place: Beijing
Test environment This test runs on AWS EC2 and uses the CentOS-7.6.1810-Nitro (ami-028946f4cffc8b916) image. The components and types of instances are as follows:
   Component Instance type     PD r5d.</description>
    </item>
    
    <item>
      <title>TiDB Sysbench 性能对比测试报告 - v2.0.0 对比 v1.0.0</title>
      <link>https://pingcap.com/docs-cn/dev/benchmark/sysbench-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/benchmark/sysbench-v2/</guid>
      <description>TiDB Sysbench 性能对比测试报告 - v2.0.0 对比 v1.0.0 测试目的 对比 TiDB 2.0 版本和 1.0 版本在 OLTP 场景下的性能。
测试版本、时间、地点 TiDB 版本：v1.0.8 Vs v2.0.0-rc6
时间：2018 年 4 月
地点：北京
测试环境 IDC 机器
   类别 名称     OS Linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz   RAM 128GB   DISK Optane 500GB SSD * 1    测试方案 TiDB 版本信息 v1.</description>
    </item>
    
    <item>
      <title>TiDB Sysbench 性能对比测试报告 - v2.0.0 对比 v1.0.0</title>
      <link>https://pingcap.com/docs-cn/stable/benchmark/sysbench-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/benchmark/sysbench-v2/</guid>
      <description>TiDB Sysbench 性能对比测试报告 - v2.0.0 对比 v1.0.0 测试目的 对比 TiDB 2.0 版本和 1.0 版本在 OLTP 场景下的性能。
测试版本、时间、地点 TiDB 版本：v1.0.8 Vs v2.0.0-rc6
时间：2018 年 4 月
地点：北京
测试环境 IDC 机器
   类别 名称     OS Linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz   RAM 128GB   DISK Optane 500GB SSD * 1    测试方案 TiDB 版本信息 v1.</description>
    </item>
    
    <item>
      <title>TiDB Sysbench 性能对比测试报告 - v2.0.0 对比 v1.0.0</title>
      <link>https://pingcap.com/docs-cn/v2.1/benchmark/sysbench-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/benchmark/sysbench-v2/</guid>
      <description>TiDB Sysbench 性能对比测试报告 - v2.0.0 对比 v1.0.0 测试目的 对比 TiDB 2.0 版本和 1.0 版本在 OLTP 场景下的性能。
测试版本、时间、地点 TiDB 版本：v1.0.8 Vs v2.0.0-rc6
时间：2018 年 4 月
地点：北京
测试环境 IDC 机器
   类别 名称     OS Linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz   RAM 128GB   DISK Optane 500GB SSD * 1    测试方案 TiDB 版本信息 v1.</description>
    </item>
    
    <item>
      <title>TiDB Sysbench 性能对比测试报告 - v2.0.0 对比 v1.0.0</title>
      <link>https://pingcap.com/docs-cn/v3.1/benchmark/sysbench-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/benchmark/sysbench-v2/</guid>
      <description>TiDB Sysbench 性能对比测试报告 - v2.0.0 对比 v1.0.0 测试目的 对比 TiDB 2.0 版本和 1.0 版本在 OLTP 场景下的性能。
测试版本、时间、地点 TiDB 版本：v1.0.8 Vs v2.0.0-rc6
时间：2018 年 4 月
地点：北京
测试环境 IDC 机器
   类别 名称     OS Linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz   RAM 128GB   DISK Optane 500GB SSD * 1    测试方案 TiDB 版本信息 v1.</description>
    </item>
    
    <item>
      <title>TiDB Sysbench 性能对比测试报告 - v2.1 对比 v2.0</title>
      <link>https://pingcap.com/docs-cn/dev/benchmark/sysbench-v3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/benchmark/sysbench-v3/</guid>
      <description>TiDB Sysbench 性能对比测试报告 - v2.1 对比 v2.0 测试目的 对比 TiDB 2.1 版本和 2.0 版本在 OLTP 场景下的性能。
测试版本、时间、地点 TiDB 版本：v2.1.0-rc.2 vs. v2.0.6
时间：2018 年 9 月
地点：北京
测试环境 IDC 机器：
   类别 名称     OS Linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz   RAM 128GB   DISK Optane 500GB SSD * 1    Sysbench 版本：1.</description>
    </item>
    
    <item>
      <title>TiDB Sysbench 性能对比测试报告 - v2.1 对比 v2.0</title>
      <link>https://pingcap.com/docs-cn/stable/benchmark/sysbench-v3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/benchmark/sysbench-v3/</guid>
      <description>TiDB Sysbench 性能对比测试报告 - v2.1 对比 v2.0 测试目的 对比 TiDB 2.1 版本和 2.0 版本在 OLTP 场景下的性能。
测试版本、时间、地点 TiDB 版本：v2.1.0-rc.2 vs. v2.0.6
时间：2018 年 9 月
地点：北京
测试环境 IDC 机器：
   类别 名称     OS Linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz   RAM 128GB   DISK Optane 500GB SSD * 1    Sysbench 版本：1.</description>
    </item>
    
    <item>
      <title>TiDB Sysbench 性能对比测试报告 - v2.1 对比 v2.0</title>
      <link>https://pingcap.com/docs-cn/v2.1/benchmark/sysbench-v3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/benchmark/sysbench-v3/</guid>
      <description>TiDB Sysbench 性能对比测试报告 - v2.1 对比 v2.0 测试目的 对比 TiDB 2.1 版本和 2.0 版本在 OLTP 场景下的性能。
测试版本、时间、地点 TiDB 版本：v2.1.0-rc.2 vs. v2.0.6
时间：2018 年 9 月
地点：北京
测试环境 IDC 机器：
   类别 名称     OS Linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz   RAM 128GB   DISK Optane 500GB SSD * 1    Sysbench 版本：1.</description>
    </item>
    
    <item>
      <title>TiDB Sysbench 性能对比测试报告 - v2.1 对比 v2.0</title>
      <link>https://pingcap.com/docs-cn/v3.1/benchmark/sysbench-v3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/benchmark/sysbench-v3/</guid>
      <description>TiDB Sysbench 性能对比测试报告 - v2.1 对比 v2.0 测试目的 对比 TiDB 2.1 版本和 2.0 版本在 OLTP 场景下的性能。
测试版本、时间、地点 TiDB 版本：v2.1.0-rc.2 vs. v2.0.6
时间：2018 年 9 月
地点：北京
测试环境 IDC 机器：
   类别 名称     OS Linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz   RAM 128GB   DISK Optane 500GB SSD * 1    Sysbench 版本：1.</description>
    </item>
    
    <item>
      <title>TiDB Sysbench 性能对比测试报告 - v3.0 对比 v2.1</title>
      <link>https://pingcap.com/docs-cn/dev/benchmark/sysbench-v4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/benchmark/sysbench-v4/</guid>
      <description>TiDB Sysbench 性能对比测试报告 - v3.0 对比 v2.1 测试目的 对比 TiDB 3.0 版本和 2.1 版本在 OLTP 场景下的性能。
测试版本、时间、地点 TiDB 版本：v3.0.0 vs. v2.1.13
时间：2019 年 6 月
地点：北京
测试环境 测试在 AWS EC2 上进行，使用 CentOS-7.6.1810-Nitro (ami-028946f4cffc8b916) 镜像，各组件实例类型如下：
   组件 实例类型     PD r5d.xlarge   TiKV c5d.4xlarge   TiDB c5.4xlarge    Sysbench 版本：1.0.17
测试方案 使用 Sysbench 向集群导入 16 张表，每张数据 1000 万。起 3 个 sysbench 分别向 3 个 TiDB 发压，请求并发数逐步增加，单次测试时间 5 分钟。</description>
    </item>
    
    <item>
      <title>TiDB Sysbench 性能对比测试报告 - v3.0 对比 v2.1</title>
      <link>https://pingcap.com/docs-cn/stable/benchmark/sysbench-v4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/benchmark/sysbench-v4/</guid>
      <description>TiDB Sysbench 性能对比测试报告 - v3.0 对比 v2.1 测试目的 对比 TiDB 3.0 版本和 2.1 版本在 OLTP 场景下的性能。
测试版本、时间、地点 TiDB 版本：v3.0.0 vs. v2.1.13
时间：2019 年 6 月
地点：北京
测试环境 测试在 AWS EC2 上进行，使用 CentOS-7.6.1810-Nitro (ami-028946f4cffc8b916) 镜像，各组件实例类型如下：
   组件 实例类型     PD r5d.xlarge   TiKV c5d.4xlarge   TiDB c5.4xlarge    Sysbench 版本：1.0.17
测试方案 使用 Sysbench 向集群导入 16 张表，每张数据 1000 万。起 3 个 sysbench 分别向 3 个 TiDB 发压，请求并发数逐步增加，单次测试时间 5 分钟。</description>
    </item>
    
    <item>
      <title>TiDB Sysbench 性能对比测试报告 - v3.0 对比 v2.1</title>
      <link>https://pingcap.com/docs-cn/v3.1/benchmark/sysbench-v4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/benchmark/sysbench-v4/</guid>
      <description>TiDB Sysbench 性能对比测试报告 - v3.0 对比 v2.1 测试目的 对比 TiDB 3.0 版本和 2.1 版本在 OLTP 场景下的性能。
测试版本、时间、地点 TiDB 版本：v3.0.0 vs. v2.1.13
时间：2019 年 6 月
地点：北京
测试环境 测试在 AWS EC2 上进行，使用 CentOS-7.6.1810-Nitro (ami-028946f4cffc8b916) 镜像，各组件实例类型如下：
   组件 实例类型     PD r5d.xlarge   TiKV c5d.4xlarge   TiDB c5.4xlarge    Sysbench 版本：1.0.17
测试方案 使用 Sysbench 向集群导入 16 张表，每张数据 1000 万。起 3 个 sysbench 分别向 3 个 TiDB 发压，请求并发数逐步增加，单次测试时间 5 分钟。</description>
    </item>
    
    <item>
      <title>TiDB System Tables</title>
      <link>https://pingcap.com/docs/dev/reference/system-databases/mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/system-databases/mysql/</guid>
      <description>Learn the TiDB system tables.</description>
    </item>
    
    <item>
      <title>TiDB System Tables</title>
      <link>https://pingcap.com/docs/stable/reference/system-databases/mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/system-databases/mysql/</guid>
      <description>Learn the TiDB system tables.</description>
    </item>
    
    <item>
      <title>TiDB System Tables</title>
      <link>https://pingcap.com/docs/v2.1/reference/system-databases/mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/system-databases/mysql/</guid>
      <description>Learn the TiDB system tables.</description>
    </item>
    
    <item>
      <title>TiDB System Tables</title>
      <link>https://pingcap.com/docs/v3.1/reference/system-databases/mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/system-databases/mysql/</guid>
      <description>Learn the TiDB system tables.</description>
    </item>
    
    <item>
      <title>TiDB TPC-C Performance Test Report -- v3.0 vs. v2.1</title>
      <link>https://pingcap.com/docs/dev/benchmark/tpcc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/benchmark/tpcc/</guid>
      <description>TiDB TPC-C Performance Test Report &amp;ndash; v3.0 vs. v2.1 Test purpose This test aims to compare the TPC-C performance of TiDB 3.0 and TiDB 2.1.
Test version, time, and place TiDB version: v3.0.0 vs. v2.1.13
Time: June, 2019
Place: Beijing
Test environment IDC machine:
   Type Name     OS Linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz   RAM 128GB   DISK 1.</description>
    </item>
    
    <item>
      <title>TiDB TPC-C Performance Test Report -- v3.0 vs. v2.1</title>
      <link>https://pingcap.com/docs/stable/benchmark/tpcc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/benchmark/tpcc/</guid>
      <description>TiDB TPC-C Performance Test Report &amp;ndash; v3.0 vs. v2.1 Test purpose This test aims to compare the TPC-C performance of TiDB 3.0 and TiDB 2.1.
Test version, time, and place TiDB version: v3.0.0 vs. v2.1.13
Time: June, 2019
Place: Beijing
Test environment IDC machine:
   Type Name     OS Linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz   RAM 128GB   DISK 1.</description>
    </item>
    
    <item>
      <title>TiDB TPC-C Performance Test Report -- v3.0 vs. v2.1</title>
      <link>https://pingcap.com/docs/v3.1/benchmark/tpcc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/benchmark/tpcc/</guid>
      <description>TiDB TPC-C Performance Test Report &amp;ndash; v3.0 vs. v2.1 Test purpose This test aims to compare the TPC-C performance of TiDB 3.0 and TiDB 2.1.
Test version, time, and place TiDB version: v3.0.0 vs. v2.1.13
Time: June, 2019
Place: Beijing
Test environment IDC machine:
   Type Name     OS Linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz   RAM 128GB   DISK 1.</description>
    </item>
    
    <item>
      <title>TiDB TPC-C 性能对比测试报告 - v3.0 对比 v2.1</title>
      <link>https://pingcap.com/docs-cn/dev/benchmark/tpcc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/benchmark/tpcc/</guid>
      <description>TiDB TPC-C 性能对比测试报告 - v3.0 对比 v2.1 测试目的 对比 TiDB 3.0 版本和 2.1 版本的 TPC-C 性能表现。
测试版本、时间、地点 TiDB 版本：v3.0.0 vs. v2.1.13
时间：2019 年 6 月
地点：北京
测试环境 IDC 机器：
   类别 名称     OS Linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz   RAM 128GB   DISK 1.5TB SSD * 2    本文使用开源的 BenchmarkSQL 5.</description>
    </item>
    
    <item>
      <title>TiDB TPC-C 性能对比测试报告 - v3.0 对比 v2.1</title>
      <link>https://pingcap.com/docs-cn/stable/benchmark/tpcc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/benchmark/tpcc/</guid>
      <description>TiDB TPC-C 性能对比测试报告 - v3.0 对比 v2.1 测试目的 对比 TiDB 3.0 版本和 2.1 版本的 TPC-C 性能表现。
测试版本、时间、地点 TiDB 版本：v3.0.0 vs. v2.1.13
时间：2019 年 6 月
地点：北京
测试环境 IDC 机器：
   类别 名称     OS Linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz   RAM 128GB   DISK 1.5TB SSD * 2    本文使用开源的 BenchmarkSQL 5.</description>
    </item>
    
    <item>
      <title>TiDB TPC-C 性能对比测试报告 - v3.0 对比 v2.1</title>
      <link>https://pingcap.com/docs-cn/v3.1/benchmark/tpcc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/benchmark/tpcc/</guid>
      <description>TiDB TPC-C 性能对比测试报告 - v3.0 对比 v2.1 测试目的 对比 TiDB 3.0 版本和 2.1 版本的 TPC-C 性能表现。
测试版本、时间、地点 TiDB 版本：v3.0.0 vs. v2.1.13
时间：2019 年 6 月
地点：北京
测试环境 IDC 机器：
   类别 名称     OS Linux (CentOS 7.3.1611)   CPU 40 vCPUs, Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz   RAM 128GB   DISK 1.5TB SSD * 2    本文使用开源的 BenchmarkSQL 5.</description>
    </item>
    
    <item>
      <title>TiDB TPC-H 50G Performance Test Report V2.0</title>
      <link>https://pingcap.com/docs/dev/benchmark/tpch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/benchmark/tpch/</guid>
      <description>TiDB TPC-H 50G Performance Test Report Test purpose This test aims to compare the performances of TiDB 1.0 and TiDB 2.0 in the OLAP scenario.
 Note:
Different test environments might lead to different test results.
 Test environment Machine information System information:
   Machine IP Operation system Kernel version File system type     172.16.31.2 Ubuntu 17.10 64bit 4.13.0-16-generic ext4   172.16.31.3 Ubuntu 17.10 64bit 4.</description>
    </item>
    
    <item>
      <title>TiDB TPC-H 50G Performance Test Report V2.0</title>
      <link>https://pingcap.com/docs/stable/benchmark/tpch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/benchmark/tpch/</guid>
      <description>TiDB TPC-H 50G Performance Test Report Test purpose This test aims to compare the performances of TiDB 1.0 and TiDB 2.0 in the OLAP scenario.
 Note:
Different test environments might lead to different test results.
 Test environment Machine information System information:
   Machine IP Operation system Kernel version File system type     172.16.31.2 Ubuntu 17.10 64bit 4.13.0-16-generic ext4   172.16.31.3 Ubuntu 17.10 64bit 4.</description>
    </item>
    
    <item>
      <title>TiDB TPC-H 50G Performance Test Report V2.0</title>
      <link>https://pingcap.com/docs/v2.1/benchmark/tpch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/benchmark/tpch/</guid>
      <description>TiDB TPC-H 50G Performance Test Report Test purpose This test aims to compare the performances of TiDB 1.0 and TiDB 2.0 in the OLAP scenario.
 Note:
Different test environments might lead to different test results.
 Test environment Machine information System information:
   Machine IP Operation system Kernel version File system type     172.16.31.2 Ubuntu 17.10 64bit 4.13.0-16-generic ext4   172.16.31.3 Ubuntu 17.10 64bit 4.</description>
    </item>
    
    <item>
      <title>TiDB TPC-H 50G Performance Test Report V2.0</title>
      <link>https://pingcap.com/docs/v3.1/benchmark/tpch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/benchmark/tpch/</guid>
      <description>TiDB TPC-H 50G Performance Test Report Test purpose This test aims to compare the performances of TiDB 1.0 and TiDB 2.0 in the OLAP scenario.
 Note:
Different test environments might lead to different test results.
 Test environment Machine information System information:
   Machine IP Operation system Kernel version File system type     172.16.31.2 Ubuntu 17.10 64bit 4.13.0-16-generic ext4   172.16.31.3 Ubuntu 17.10 64bit 4.</description>
    </item>
    
    <item>
      <title>TiDB TPC-H 50G Performance Test Report V2.1</title>
      <link>https://pingcap.com/docs/dev/benchmark/tpch-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/benchmark/tpch-v2/</guid>
      <description>TiDB TPC-H 50G Performance Test Report V2.1 Test purpose This test aims to compare the performances of TiDB 2.0 and TiDB 2.1 in the OLAP scenario.
 Note:
Different test environments might lead to different test results.
 Test environment Machine information System information:
   Machine IP Operation system Kernel version File system type     10.0.1.4 CentOS 7.5.1804 64bit 3.10.0-862.3.3.el7.x86_64 ext4   10.0.1.5 CentOS 7.</description>
    </item>
    
    <item>
      <title>TiDB TPC-H 50G Performance Test Report V2.1</title>
      <link>https://pingcap.com/docs/stable/benchmark/tpch-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/benchmark/tpch-v2/</guid>
      <description>TiDB TPC-H 50G Performance Test Report V2.1 Test purpose This test aims to compare the performances of TiDB 2.0 and TiDB 2.1 in the OLAP scenario.
 Note:
Different test environments might lead to different test results.
 Test environment Machine information System information:
   Machine IP Operation system Kernel version File system type     10.0.1.4 CentOS 7.5.1804 64bit 3.10.0-862.3.3.el7.x86_64 ext4   10.0.1.5 CentOS 7.</description>
    </item>
    
    <item>
      <title>TiDB TPC-H 50G Performance Test Report V2.1</title>
      <link>https://pingcap.com/docs/v2.1/benchmark/tpch-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/benchmark/tpch-v2/</guid>
      <description>TiDB TPC-H 50G Performance Test Report V2.1 Test purpose This test aims to compare the performances of TiDB 2.0 and TiDB 2.1 in the OLAP scenario.
 Note:
Different test environments might lead to different test results.
 Test environment Machine information System information:
   Machine IP Operation system Kernel version File system type     10.0.1.4 CentOS 7.5.1804 64bit 3.10.0-862.3.3.el7.x86_64 ext4   10.0.1.5 CentOS 7.</description>
    </item>
    
    <item>
      <title>TiDB TPC-H 50G Performance Test Report V2.1</title>
      <link>https://pingcap.com/docs/v3.1/benchmark/tpch-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/benchmark/tpch-v2/</guid>
      <description>TiDB TPC-H 50G Performance Test Report V2.1 Test purpose This test aims to compare the performances of TiDB 2.0 and TiDB 2.1 in the OLAP scenario.
 Note:
Different test environments might lead to different test results.
 Test environment Machine information System information:
   Machine IP Operation system Kernel version File system type     10.0.1.4 CentOS 7.5.1804 64bit 3.10.0-862.3.3.el7.x86_64 ext4   10.0.1.5 CentOS 7.</description>
    </item>
    
    <item>
      <title>TiDB TPC-H 50G 性能测试报告</title>
      <link>https://pingcap.com/docs-cn/dev/benchmark/tpch-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/benchmark/tpch-v2/</guid>
      <description>TiDB TPC-H 50G 性能测试报告 测试目的 测试 TiDB 在 OLAP 场景下 2.0 和 2.1 版本的性能对比。
 注意：
不同的测试环境可能使测试结果发生改变。
 测试环境 测试机器信息   系统信息
   机器 IP 操作系统 内核版本 文件系统类型     10.0.1.4 CentOS 7.5.1804 64bit 3.10.0-862.3.3.el7.x86_64 ext4   10.0.1.5 CentOS 7.5.1804 64bit 3.10.0-862.3.3.el7.x86_64 ext4   10.0.1.6 CentOS 7.5.1804 64bit 3.10.0-862.3.3.el7.x86_64 ext4   10.0.1.7 CentOS 7.5.1804 64bit 3.10.0-862.3.3.el7.x86_64 ext4   10.0.1.8 CentOS 7.5.1804 64bit 3.</description>
    </item>
    
    <item>
      <title>TiDB TPC-H 50G 性能测试报告</title>
      <link>https://pingcap.com/docs-cn/dev/benchmark/tpch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/benchmark/tpch/</guid>
      <description>TiDB TPC-H 50G 性能测试报告 测试目的 测试 TiDB 在 OLAP 场景下 1.0 和 2.0 版本的性能对比。
 注意：
不同的测试环境可能使测试结果发生改变。
 测试环境 测试机器信息   系统信息
   机器 IP 操作系统 内核版本 文件系统类型     172.16.31.2 Ubuntu 17.10 64bit 4.13.0-16-generic ext4   172.16.31.3 Ubuntu 17.10 64bit 4.13.0-16-generic ext4   172.16.31.4 Ubuntu 17.10 64bit 4.13.0-16-generic ext4   172.16.31.6 CentOS 7.4.1708 64bit 3.10.0-693.11.6.el7.x86_64 ext4   172.16.31.8 CentOS 7.4.1708 64bit 3.</description>
    </item>
    
    <item>
      <title>TiDB TPC-H 50G 性能测试报告</title>
      <link>https://pingcap.com/docs-cn/stable/benchmark/tpch-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/benchmark/tpch-v2/</guid>
      <description>TiDB TPC-H 50G 性能测试报告 测试目的 测试 TiDB 在 OLAP 场景下 2.0 和 2.1 版本的性能对比。
 注意：
不同的测试环境可能使测试结果发生改变。
 测试环境 测试机器信息   系统信息
   机器 IP 操作系统 内核版本 文件系统类型     10.0.1.4 CentOS 7.5.1804 64bit 3.10.0-862.3.3.el7.x86_64 ext4   10.0.1.5 CentOS 7.5.1804 64bit 3.10.0-862.3.3.el7.x86_64 ext4   10.0.1.6 CentOS 7.5.1804 64bit 3.10.0-862.3.3.el7.x86_64 ext4   10.0.1.7 CentOS 7.5.1804 64bit 3.10.0-862.3.3.el7.x86_64 ext4   10.0.1.8 CentOS 7.5.1804 64bit 3.</description>
    </item>
    
    <item>
      <title>TiDB TPC-H 50G 性能测试报告</title>
      <link>https://pingcap.com/docs-cn/stable/benchmark/tpch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/benchmark/tpch/</guid>
      <description>TiDB TPC-H 50G 性能测试报告 测试目的 测试 TiDB 在 OLAP 场景下 1.0 和 2.0 版本的性能对比。
 注意：
不同的测试环境可能使测试结果发生改变。
 测试环境 测试机器信息   系统信息
   机器 IP 操作系统 内核版本 文件系统类型     172.16.31.2 Ubuntu 17.10 64bit 4.13.0-16-generic ext4   172.16.31.3 Ubuntu 17.10 64bit 4.13.0-16-generic ext4   172.16.31.4 Ubuntu 17.10 64bit 4.13.0-16-generic ext4   172.16.31.6 CentOS 7.4.1708 64bit 3.10.0-693.11.6.el7.x86_64 ext4   172.16.31.8 CentOS 7.4.1708 64bit 3.</description>
    </item>
    
    <item>
      <title>TiDB TPC-H 50G 性能测试报告</title>
      <link>https://pingcap.com/docs-cn/v2.1/benchmark/tpch-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/benchmark/tpch-v2/</guid>
      <description>TiDB TPC-H 50G 性能测试报告 测试目的 测试 TiDB 在 OLAP 场景下 2.0 和 2.1 版本的性能对比。
 注意：
不同的测试环境可能使测试结果发生改变。
 测试环境 测试机器信息   系统信息
   机器 IP 操作系统 内核版本 文件系统类型     10.0.1.4 CentOS 7.5.1804 64bit 3.10.0-862.3.3.el7.x86_64 ext4   10.0.1.5 CentOS 7.5.1804 64bit 3.10.0-862.3.3.el7.x86_64 ext4   10.0.1.6 CentOS 7.5.1804 64bit 3.10.0-862.3.3.el7.x86_64 ext4   10.0.1.7 CentOS 7.5.1804 64bit 3.10.0-862.3.3.el7.x86_64 ext4   10.0.1.8 CentOS 7.5.1804 64bit 3.</description>
    </item>
    
    <item>
      <title>TiDB TPC-H 50G 性能测试报告</title>
      <link>https://pingcap.com/docs-cn/v2.1/benchmark/tpch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/benchmark/tpch/</guid>
      <description>TiDB TPC-H 50G 性能测试报告 测试目的 测试 TiDB 在 OLAP 场景下 1.0 和 2.0 版本的性能对比。
 注意：
不同的测试环境可能使测试结果发生改变。
 测试环境 测试机器信息   系统信息
   机器 IP 操作系统 内核版本 文件系统类型     172.16.31.2 Ubuntu 17.10 64bit 4.13.0-16-generic ext4   172.16.31.3 Ubuntu 17.10 64bit 4.13.0-16-generic ext4   172.16.31.4 Ubuntu 17.10 64bit 4.13.0-16-generic ext4   172.16.31.6 CentOS 7.4.1708 64bit 3.10.0-693.11.6.el7.x86_64 ext4   172.16.31.8 CentOS 7.4.1708 64bit 3.</description>
    </item>
    
    <item>
      <title>TiDB TPC-H 50G 性能测试报告</title>
      <link>https://pingcap.com/docs-cn/v3.1/benchmark/tpch-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/benchmark/tpch-v2/</guid>
      <description>TiDB TPC-H 50G 性能测试报告 测试目的 测试 TiDB 在 OLAP 场景下 2.0 和 2.1 版本的性能对比。
 注意：
不同的测试环境可能使测试结果发生改变。
 测试环境 测试机器信息   系统信息
   机器 IP 操作系统 内核版本 文件系统类型     10.0.1.4 CentOS 7.5.1804 64bit 3.10.0-862.3.3.el7.x86_64 ext4   10.0.1.5 CentOS 7.5.1804 64bit 3.10.0-862.3.3.el7.x86_64 ext4   10.0.1.6 CentOS 7.5.1804 64bit 3.10.0-862.3.3.el7.x86_64 ext4   10.0.1.7 CentOS 7.5.1804 64bit 3.10.0-862.3.3.el7.x86_64 ext4   10.0.1.8 CentOS 7.5.1804 64bit 3.</description>
    </item>
    
    <item>
      <title>TiDB TPC-H 50G 性能测试报告</title>
      <link>https://pingcap.com/docs-cn/v3.1/benchmark/tpch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/benchmark/tpch/</guid>
      <description>TiDB TPC-H 50G 性能测试报告 测试目的 测试 TiDB 在 OLAP 场景下 1.0 和 2.0 版本的性能对比。
 注意：
不同的测试环境可能使测试结果发生改变。
 测试环境 测试机器信息   系统信息
   机器 IP 操作系统 内核版本 文件系统类型     172.16.31.2 Ubuntu 17.10 64bit 4.13.0-16-generic ext4   172.16.31.3 Ubuntu 17.10 64bit 4.13.0-16-generic ext4   172.16.31.4 Ubuntu 17.10 64bit 4.13.0-16-generic ext4   172.16.31.6 CentOS 7.4.1708 64bit 3.10.0-693.11.6.el7.x86_64 ext4   172.16.31.8 CentOS 7.4.1708 64bit 3.</description>
    </item>
    
    <item>
      <title>TiDB Transaction Isolation Levels</title>
      <link>https://pingcap.com/docs/dev/reference/transactions/transaction-isolation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/transactions/transaction-isolation/</guid>
      <description>Learn about the transaction isolation levels in TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Transaction Isolation Levels</title>
      <link>https://pingcap.com/docs/stable/reference/transactions/transaction-isolation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/transactions/transaction-isolation/</guid>
      <description>Learn about the transaction isolation levels in TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Transaction Isolation Levels</title>
      <link>https://pingcap.com/docs/v2.1/reference/transactions/transaction-isolation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/transactions/transaction-isolation/</guid>
      <description>Learn about the transaction isolation levels in TiDB.</description>
    </item>
    
    <item>
      <title>TiDB Transaction Isolation Levels</title>
      <link>https://pingcap.com/docs/v3.1/reference/transactions/transaction-isolation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/transactions/transaction-isolation/</guid>
      <description>Learn about the transaction isolation levels in TiDB.</description>
    </item>
    
    <item>
      <title>TiDB User Account Management</title>
      <link>https://pingcap.com/docs/dev/reference/security/user-account-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/security/user-account-management/</guid>
      <description>Learn how to manage a TiDB user account.</description>
    </item>
    
    <item>
      <title>TiDB User Account Management</title>
      <link>https://pingcap.com/docs/stable/reference/security/user-account-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/security/user-account-management/</guid>
      <description>Learn how to manage a TiDB user account.</description>
    </item>
    
    <item>
      <title>TiDB User Account Management</title>
      <link>https://pingcap.com/docs/v2.1/reference/security/user-account-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/security/user-account-management/</guid>
      <description>Learn how to manage a TiDB user account.</description>
    </item>
    
    <item>
      <title>TiDB User Account Management</title>
      <link>https://pingcap.com/docs/v3.1/reference/security/user-account-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/security/user-account-management/</guid>
      <description>Learn how to manage a TiDB user account.</description>
    </item>
    
    <item>
      <title>TiDB v3.0 Roadmap</title>
      <link>https://pingcap.com/docs/stable/roadmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/roadmap/</guid>
      <description>Learn about the v3.0 roadmap of TiDB.</description>
    </item>
    
    <item>
      <title>TiDB v3.0 Roadmap</title>
      <link>https://pingcap.com/docs/v3.1/roadmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/roadmap/</guid>
      <description>Learn about the v3.0 roadmap of TiDB.</description>
    </item>
    
    <item>
      <title>TiDB V4.0 Roadmap</title>
      <link>https://pingcap.com/docs-cn/dev/roadmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/roadmap/</guid>
      <description>TiDB V4.0 Roadmap TiDB TiDB Server 功能  支持 TiFlash 存储引擎 支持 Optimizer Trace 支持多列统计信息 为普通 CM-Sketch 支持 TopN 统计信息 完善 Plan Cache 功能 支持自适应 SQL 引擎 支持 SQL Tuning Advisor 支持 SQL Plan Management 事务  悲观锁 GA 事务内不限制语句数量 支持 10 GB 事务    性能  提升 load CSV/data 性能 提升 Prepare 语句性能 Generated Column 支持 Index 优化 SQL 引擎部分算子  提升通过索引回表查询的性能 Index Join 拆分为 Index Merge Join 和 Index Hash Join Radix Hash Join Index Merge Parallel Stream Aggregate Parallel Merge Sort Parallel Merge Join Full Vectorized Expression Evaluation   Indexes on Expressions Multi-Index Scan Join、Aggregate 和 Sort 算子支持外部存储 优化执行引擎并发模型 支持新 Cascades 优化器，支持 Cascades Planner，扩大优化器的搜索空间  易用性  完善 Optimizer Hint 功能 快速修复数据库或者表元信息及数据 动态修改配置项 空闲连接自动断开 完善支持 MySQL 5.</description>
    </item>
    
    <item>
      <title>TiDB v4.0 Roadmap</title>
      <link>https://pingcap.com/docs/dev/roadmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/roadmap/</guid>
      <description>Learn about the v4.0 roadmap of TiDB.</description>
    </item>
    
    <item>
      <title>TiDB 专用系统变量和语法</title>
      <link>https://pingcap.com/docs-cn/dev/reference/configuration/tidb-server/tidb-specific-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/configuration/tidb-server/tidb-specific-variables/</guid>
      <description>TiDB 专用系统变量和语法 TiDB 在 MySQL 的基础上，定义了一些专用的系统变量和语法用来优化性能。
系统变量 变量可以通过 SET 语句设置，例如
 set @@tidb_distsql_scan_concurrency = 10; 如果需要设置全局变量，执行
 set @@global.tidb_distsql_scan_concurrency = 10; tidb_snapshot 作用域：SESSION
默认值：空字符串
这个变量用来设置当前会话期待读取的历史数据所处时刻。比如当设置为 &amp;ldquo;2017-11-11 20:20:20&amp;rdquo; 时或者一个 TSO 数字 &amp;ldquo;400036290571534337&amp;rdquo;，当前会话将能读取到该时刻的数据。
tidb_import_data 作用域：SESSION
默认值：0
这个变量用来表示当前状态是否为从 dump 文件中导入数据。 当这个变量被设置为 1 时，唯一索引约束不被检查以加速导入速度。 这个变量不对外用，只是给 lightning 使用，请用户不要自行修改。
tidb_opt_agg_push_down 作用域：SESSION
默认值：0
这个变量用来设置优化器是否执行聚合函数下推到 Join 之前的优化操作。 当查询中聚合操作执行很慢时，可以尝试设置该变量为 1。
tidb_auto_analyze_ratio 作用域：GLOBAL
默认值：0.5
这个变量用来设置自动 ANALYZE 更新的阈值。当某个表 tbl 的修改行数与总行数的比值大于 tidb_auto_analyze_ratio，并且当前时间在 tidb_auto_analyze_start_time 和 tidb_auto_analyze_end_time 之间时，TiDB 会在后台执行 ANALYZE TABLE tbl 语句以自动更新该表的统计信息。注意：只有在 TiDB 的启动配置文件中开启了 run-auto-analyze 选项，该 TiDB 才会触发 auto_analyze。</description>
    </item>
    
    <item>
      <title>TiDB 专用系统变量和语法</title>
      <link>https://pingcap.com/docs-cn/stable/reference/configuration/tidb-server/tidb-specific-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/configuration/tidb-server/tidb-specific-variables/</guid>
      <description>TiDB 专用系统变量和语法 TiDB 在 MySQL 的基础上，定义了一些专用的系统变量和语法用来优化性能。
系统变量 变量可以通过 SET 语句设置，例如
 set @@tidb_distsql_scan_concurrency = 10; 如果需要设置全局变量，执行
 set @@global.tidb_distsql_scan_concurrency = 10; tidb_snapshot 作用域：SESSION
默认值：空字符串
这个变量用来设置当前会话期待读取的历史数据所处时刻。比如当设置为 &amp;ldquo;2017-11-11 20:20:20&amp;rdquo; 时或者一个 TSO 数字 &amp;ldquo;400036290571534337&amp;rdquo;，当前会话将能读取到该时刻的数据。
tidb_import_data 作用域：SESSION
默认值：0
这个变量用来表示当前状态是否为从 dump 文件中导入数据。 当这个变量被设置为 1 时，唯一索引约束不被检查以加速导入速度。 这个变量不对外用，只是给 lightning 使用，请用户不要自行修改。
tidb_opt_agg_push_down 作用域：SESSION
默认值：0
这个变量用来设置优化器是否执行聚合函数下推到 Join 之前的优化操作。 当查询中聚合操作执行很慢时，可以尝试设置该变量为 1。
tidb_auto_analyze_ratio 作用域：GLOBAL
默认值：0.5
这个变量用来设置自动 ANALYZE 更新的阈值。当某个表 tbl 的修改行数与总行数的比值大于 tidb_auto_analyze_ratio，并且当前时间在 tidb_auto_analyze_start_time 和 tidb_auto_analyze_end_time 之间时，TiDB 会在后台执行 ANALYZE TABLE tbl 语句以自动更新该表的统计信息。注意：只有在 TiDB 的启动配置文件中开启了 run-auto-analyze 选项，该 TiDB 才会触发 auto_analyze。</description>
    </item>
    
    <item>
      <title>TiDB 专用系统变量和语法</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/configuration/tidb-server/tidb-specific-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/configuration/tidb-server/tidb-specific-variables/</guid>
      <description>TiDB 专用系统变量和语法 TiDB 在 MySQL 的基础上，定义了一些专用的系统变量和语法用来优化性能。
系统变量 变量可以通过 SET 语句设置，例如
set @@tidb_distsql_scan_concurrency = 10 如果需要设值全局变量，执行
set @@global.tidb_distsql_scan_concurrency = 10 tidb_snapshot 作用域：SESSION
默认值：空字符串
这个变量用来设置当前会话期待读取的历史数据所处时刻。比如当设置为 &amp;ldquo;2017-11-11 20:20:20&amp;rdquo; 时或者一个 TSO 数字 &amp;ldquo;400036290571534337&amp;rdquo;，当前会话将能读取到该时刻的数据。
tidb_import_data 作用域：SESSION
默认值：0
这个变量用来表示当前状态是否为从 dump 文件中导入数据。 当这个变量被设置为 1 时，唯一索引约束不被检查以加速导入速度。 这个变量不对外用，只是给 lightning 使用，请用户不要自行修改。
tidb_opt_agg_push_down 作用域：SESSION
默认值：0
这个变量用来设置优化器是否执行聚合函数下推到 Join 之前的优化操作。 当查询中聚合操作执行很慢时，可以尝试设置该变量为 1。
tidb_opt_insubquery_unfold 作用域：SESSION | GLOBAL
默认值：0
这个变量用来设置优化器是否执行 in- 子查询展开的优化操作。
tidb_build_stats_concurrency 作用域：SESSION
默认值：4
这个变量用来设置 ANALYZE 语句执行时并发度。 当这个变量被设置得更大时，会对其它的查询语句执行性能产生一定影响。
tidb_checksum_table_concurrency 作用域：SESSION
默认值：4
这个变量用来设置 ADMIN CHECKSUM TABLE 语句执行时扫描索引的并发度。 当这个变量被设置得更大时，会对其它的查询语句执行性能产生一定影响。</description>
    </item>
    
    <item>
      <title>TiDB 专用系统变量和语法</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/configuration/tidb-server/tidb-specific-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/configuration/tidb-server/tidb-specific-variables/</guid>
      <description>TiDB 专用系统变量和语法 TiDB 在 MySQL 的基础上，定义了一些专用的系统变量和语法用来优化性能。
系统变量 变量可以通过 SET 语句设置，例如
 set @@tidb_distsql_scan_concurrency = 10; 如果需要设置全局变量，执行
 set @@global.tidb_distsql_scan_concurrency = 10; tidb_snapshot 作用域：SESSION
默认值：空字符串
这个变量用来设置当前会话期待读取的历史数据所处时刻。比如当设置为 &amp;ldquo;2017-11-11 20:20:20&amp;rdquo; 时或者一个 TSO 数字 &amp;ldquo;400036290571534337&amp;rdquo;，当前会话将能读取到该时刻的数据。
tidb_import_data 作用域：SESSION
默认值：0
这个变量用来表示当前状态是否为从 dump 文件中导入数据。 当这个变量被设置为 1 时，唯一索引约束不被检查以加速导入速度。 这个变量不对外用，只是给 lightning 使用，请用户不要自行修改。
tidb_opt_agg_push_down 作用域：SESSION
默认值：0
这个变量用来设置优化器是否执行聚合函数下推到 Join 之前的优化操作。 当查询中聚合操作执行很慢时，可以尝试设置该变量为 1。
tidb_auto_analyze_ratio 作用域：GLOBAL
默认值：0.5
这个变量用来设置自动 ANALYZE 更新的阈值。当某个表 tbl 的修改行数与总行数的比值大于 tidb_auto_analyze_ratio，并且当前时间在 tidb_auto_analyze_start_time 和 tidb_auto_analyze_end_time 之间时，TiDB 会在后台执行 ANALYZE TABLE tbl 语句以自动更新该表的统计信息。注意：只有在 TiDB 的启动配置文件中开启了 run-auto-analyze 选项，该 TiDB 才会触发 auto_analyze。</description>
    </item>
    
    <item>
      <title>TiDB 中的基本 SQL 操作</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/get-started/explore-sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/get-started/explore-sql/</guid>
      <description>TiDB 中的基本 SQL 操作 成功部署 TiDB 集群之后，便可以在 TiDB 中执行 SQL 语句了。因为 TiDB 兼容 MySQL，你可以使用 MySQL 客户端连接 TiDB，并且大多数情况下可以直接执行 MySQL 语句。
本文介绍 CRUD 操作等基本的 SQL 语句。完整的 SQL 语句列表，参见 TiDB SQL 语法详解。
创建、查看和删除数据库 使用 CREATE DATABASE 语句创建数据库。语法如下：
 CREATE DATABASE db_name [options]; 例如，要创建一个名为 samp_db 的数据库，可使用以下语句：
 CREATE DATABASE IF NOT EXISTS samp_db; 使用 SHOW DATABASES 语句查看数据库：
 SHOW DATABASES; 使用 DROP DATABASE 语句删除数据库，例如：
 DROP DATABASE samp_db; 创建、查看和删除表 使用 CREATE TABLE 语句创建表。语法如下：
 CREATE TABLE table_name column_name data_type constraint; 例如：</description>
    </item>
    
    <item>
      <title>TiDB 中的基本 SQL 操作</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/get-started/explore-sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/get-started/explore-sql/</guid>
      <description>TiDB 中的基本 SQL 操作 成功部署 TiDB 集群之后，便可以在 TiDB 中执行 SQL 语句了。因为 TiDB 兼容 MySQL，你可以使用 MySQL 客户端连接 TiDB，并且大多数情况下可以直接执行 MySQL 语句。
本文介绍 CRUD 操作等基本的 SQL 语句。完整的 SQL 语句列表，参见 TiDB SQL 语法详解。
创建、查看和删除数据库 使用 CREATE DATABASE 语句创建数据库。语法如下：
 CREATE DATABASE db_name [options]; 例如，要创建一个名为 samp_db 的数据库，可使用以下语句：
 CREATE DATABASE IF NOT EXISTS samp_db; 使用 SHOW DATABASES 语句查看数据库：
 SHOW DATABASES; 使用 DROP DATABASE 语句删除数据库，例如：
 DROP DATABASE samp_db; 创建、查看和删除表 使用 CREATE TABLE 语句创建表。语法如下：
 CREATE TABLE table_name column_name data_type constraint; 例如：</description>
    </item>
    
    <item>
      <title>TiDB 中的基本 SQL 操作</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/get-started/explore-sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/get-started/explore-sql/</guid>
      <description>TiDB 中的基本 SQL 操作 成功部署 TiDB 集群之后，便可以在 TiDB 中执行 SQL 语句了。因为 TiDB 兼容 MySQL，你可以使用 MySQL 客户端连接 TiDB，并且大多数情况下可以直接执行 MySQL 语句。
本文介绍 CRUD 操作等基本的 SQL 语句。完整的 SQL 语句列表，参见 TiDB SQL 语法详解。
创建、查看和删除数据库 使用 CREATE DATABASE 语句创建数据库。语法如下：
CREATE DATABASE db_name [options]; 例如，要创建一个名为 samp_db 的数据库，可使用以下语句：
CREATE DATABASE IF NOT EXISTS samp_db; 使用 SHOW DATABASES 语句查看数据库：
SHOW DATABASES; 使用 DROP DATABASE 语句删除数据库，例如：
DROP DATABASE samp_db; 创建、查看和删除表 使用 CREATE TABLE 语句创建表。语法如下：
CREATE TABLE table_name column_name data_type constraint; 例如：</description>
    </item>
    
    <item>
      <title>TiDB 中的基本 SQL 操作</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/get-started/explore-sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/get-started/explore-sql/</guid>
      <description>TiDB 中的基本 SQL 操作 成功部署 TiDB 集群之后，便可以在 TiDB 中执行 SQL 语句了。因为 TiDB 兼容 MySQL，你可以使用 MySQL 客户端连接 TiDB，并且大多数情况下可以直接执行 MySQL 语句。
本文介绍 CRUD 操作等基本的 SQL 语句。完整的 SQL 语句列表，参见 TiDB SQL 语法详解。
创建、查看和删除数据库 使用 CREATE DATABASE 语句创建数据库。语法如下：
 CREATE DATABASE db_name [options]; 例如，要创建一个名为 samp_db 的数据库，可使用以下语句：
 CREATE DATABASE IF NOT EXISTS samp_db; 使用 SHOW DATABASES 语句查看数据库：
 SHOW DATABASES; 使用 DROP DATABASE 语句删除数据库，例如：
 DROP DATABASE samp_db; 创建、查看和删除表 使用 CREATE TABLE 语句创建表。语法如下：
 CREATE TABLE table_name column_name data_type constraint; 例如：</description>
    </item>
    
    <item>
      <title>TiDB 主从集群的数据校验</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/sync-diff-inspector/tidb-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/sync-diff-inspector/tidb-diff/</guid>
      <description>TiDB 主从集群的数据校验 用户可以使用 TiDB Binlog 搭建 TiDB 的主从集群，Drainer 在把数据同步到 TiDB 时，保存 checkpoint 的同时也会将上下游的 TSO 对应关系保存为 ts-map。在 sync-diff-inspector 中配置 snapshot 即可对 TiDB 主从集群的数据进行校验。
获取 ts-map 在下游 TiDB 中执行以下 SQL 语句：
 select * from tidb_binlog.checkpoint; +---------------------+---------------------------------------------------------------------------------------------------------+ | clusterID | checkPoint | +---------------------+---------------------------------------------------------------------------------------------------------+ | 6711243465327639221 | {&amp;#34;commitTS&amp;#34;:409622383615541249,&amp;#34;ts-map&amp;#34;:{&amp;#34;master-ts&amp;#34;:409621863377928194,&amp;#34;slave-ts&amp;#34;:409621863377928345}} | +---------------------+---------------------------------------------------------------------------------------------------------+ 从结果中可以获取 ts-map 信息。
配置 snapshot 使用上一步骤获取的 ts-map 信息来配置上下游数据库的 snapshot 信息。其中的 Databases config 部分示例配置如下：
######################### Databases config ######################### # 源数据库实例的配置 [[source-db]] host = &amp;#34;127.0.0.1&amp;#34; port = 4000 user = &amp;#34;root&amp;#34; password = &amp;#34;123456&amp;#34; # 源数据库实例的 id，唯一标识一个数据库实例 instance-id = &amp;#34;source-1&amp;#34; # 使用 TiDB 的 snapshot 功能，对应 ts-map 中的 master-ts snapshot = &amp;#34;409621863377928194&amp;#34; # 目标数据库实例的配置 [target-db] host = &amp;#34;127.</description>
    </item>
    
    <item>
      <title>TiDB 主从集群的数据校验</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/sync-diff-inspector/tidb-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/sync-diff-inspector/tidb-diff/</guid>
      <description>TiDB 主从集群的数据校验 用户可以使用 TiDB Binlog 搭建 TiDB 的主从集群，Drainer 在把数据同步到 TiDB 时，保存 checkpoint 的同时也会将上下游的 TSO 对应关系保存为 ts-map。在 sync-diff-inspector 中配置 snapshot 即可对 TiDB 主从集群的数据进行校验。
获取 ts-map 在下游 TiDB 中执行以下 SQL 语句：
 select * from tidb_binlog.checkpoint; +---------------------+---------------------------------------------------------------------------------------------------------+ | clusterID | checkPoint | +---------------------+---------------------------------------------------------------------------------------------------------+ | 6711243465327639221 | {&amp;#34;commitTS&amp;#34;:409622383615541249,&amp;#34;ts-map&amp;#34;:{&amp;#34;master-ts&amp;#34;:409621863377928194,&amp;#34;slave-ts&amp;#34;:409621863377928345}} | +---------------------+---------------------------------------------------------------------------------------------------------+ 从结果中可以获取 ts-map 信息。
配置 snapshot 使用上一步骤获取的 ts-map 信息来配置上下游数据库的 snapshot 信息。其中的 Databases config 部分示例配置如下：
######################### Databases config ######################### # 源数据库实例的配置 [[source-db]] host = &amp;#34;127.0.0.1&amp;#34; port = 4000 user = &amp;#34;root&amp;#34; password = &amp;#34;123456&amp;#34; # 源数据库实例的 id，唯一标识一个数据库实例 instance-id = &amp;#34;source-1&amp;#34; # 使用 TiDB 的 snapshot 功能，对应 ts-map 中的 master-ts snapshot = &amp;#34;409621863377928194&amp;#34; # 目标数据库实例的配置 [target-db] host = &amp;#34;127.</description>
    </item>
    
    <item>
      <title>TiDB 主从集群的数据校验</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/sync-diff-inspector/tidb-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/sync-diff-inspector/tidb-diff/</guid>
      <description>TiDB 主从集群的数据校验 用户可以使用 TiDB Binlog 搭建 TiDB 的主从集群，Drainer 在把数据同步到 TiDB 时，保存 checkpoint 的同时也会将上下游的 TSO 对应关系保存为 ts-map。在 sync-diff-inspector 中配置 snapshot 即可对 TiDB 主从集群的数据进行校验。
获取 ts-map 在下游 TiDB 中执行以下 SQL 语句：
mysql&amp;gt; select * from tidb_binlog.checkpoint; +---------------------+---------------------------------------------------------------------------------------------------------+ | clusterID | checkPoint | +---------------------+---------------------------------------------------------------------------------------------------------+ | 6711243465327639221 | {&amp;#34;commitTS&amp;#34;:409622383615541249,&amp;#34;ts-map&amp;#34;:{&amp;#34;master-ts&amp;#34;:409621863377928194,&amp;#34;slave-ts&amp;#34;:409621863377928345}} | +---------------------+---------------------------------------------------------------------------------------------------------+ 从结果中可以获取 ts-map 信息。
配置 snapshot 使用上一步骤获取的 ts-map 信息来配置上下游数据库的 snapshot 信息。其中的 Databases config 部分示例配置如下：
######################### Databases config ######################### # 源数据库实例的配置 [[source-db]] host = &amp;#34;127.0.0.1&amp;#34; port = 4000 user = &amp;#34;root&amp;#34; password = &amp;#34;123456&amp;#34; # 源数据库实例的 id，唯一标识一个数据库实例 instance-id = &amp;#34;source-1&amp;#34; # 使用 TiDB 的 snapshot 功能，对应 ts-map 中的 master-ts snapshot = &amp;#34;409621863377928194&amp;#34; # 目标数据库实例的配置 [target-db] host = &amp;#34;127.</description>
    </item>
    
    <item>
      <title>TiDB 主从集群的数据校验</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/sync-diff-inspector/tidb-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/sync-diff-inspector/tidb-diff/</guid>
      <description>TiDB 主从集群的数据校验 用户可以使用 TiDB Binlog 搭建 TiDB 的主从集群，Drainer 在把数据同步到 TiDB 时，保存 checkpoint 的同时也会将上下游的 TSO 对应关系保存为 ts-map。在 sync-diff-inspector 中配置 snapshot 即可对 TiDB 主从集群的数据进行校验。
获取 ts-map 在下游 TiDB 中执行以下 SQL 语句：
 select * from tidb_binlog.checkpoint; +---------------------+---------------------------------------------------------------------------------------------------------+ | clusterID | checkPoint | +---------------------+---------------------------------------------------------------------------------------------------------+ | 6711243465327639221 | {&amp;#34;commitTS&amp;#34;:409622383615541249,&amp;#34;ts-map&amp;#34;:{&amp;#34;master-ts&amp;#34;:409621863377928194,&amp;#34;slave-ts&amp;#34;:409621863377928345}} | +---------------------+---------------------------------------------------------------------------------------------------------+ 从结果中可以获取 ts-map 信息。
配置 snapshot 使用上一步骤获取的 ts-map 信息来配置上下游数据库的 snapshot 信息。其中的 Databases config 部分示例配置如下：
######################### Databases config ######################### # 源数据库实例的配置 [[source-db]] host = &amp;#34;127.0.0.1&amp;#34; port = 4000 user = &amp;#34;root&amp;#34; password = &amp;#34;123456&amp;#34; # 源数据库实例的 id，唯一标识一个数据库实例 instance-id = &amp;#34;source-1&amp;#34; # 使用 TiDB 的 snapshot 功能，对应 ts-map 中的 master-ts snapshot = &amp;#34;409621863377928194&amp;#34; # 目标数据库实例的配置 [target-db] host = &amp;#34;127.</description>
    </item>
    
    <item>
      <title>TiDB 乐观事务模型</title>
      <link>https://pingcap.com/docs-cn/dev/reference/transactions/transaction-optimistic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/transactions/transaction-optimistic/</guid>
      <description>了解 TiDB 的乐观事务模型。</description>
    </item>
    
    <item>
      <title>TiDB 乐观事务模型</title>
      <link>https://pingcap.com/docs-cn/stable/reference/transactions/transaction-optimistic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/transactions/transaction-optimistic/</guid>
      <description>了解 TiDB 的乐观事务模型。</description>
    </item>
    
    <item>
      <title>TiDB 乐观事务模型</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/transactions/transaction-optimistic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/transactions/transaction-optimistic/</guid>
      <description>了解 TiDB 的乐观事务模型。</description>
    </item>
    
    <item>
      <title>TiDB 乐观事务模型</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/transactions/transaction-optimistic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/transactions/transaction-optimistic/</guid>
      <description>了解 TiDB 的乐观事务模型。</description>
    </item>
    
    <item>
      <title>TiDB 事务概览</title>
      <link>https://pingcap.com/docs-cn/dev/reference/transactions/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/transactions/overview/</guid>
      <description>了解 TiDB 中的事务。</description>
    </item>
    
    <item>
      <title>TiDB 事务概览</title>
      <link>https://pingcap.com/docs-cn/stable/reference/transactions/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/transactions/overview/</guid>
      <description>了解 TiDB 中的事务。</description>
    </item>
    
    <item>
      <title>TiDB 事务概览</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/transactions/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/transactions/overview/</guid>
      <description>了解 TiDB 中的事务。</description>
    </item>
    
    <item>
      <title>TiDB 事务概览</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/transactions/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/transactions/overview/</guid>
      <description>了解 TiDB 中的事务。</description>
    </item>
    
    <item>
      <title>TiDB 事务隔离级别</title>
      <link>https://pingcap.com/docs-cn/dev/reference/transactions/transaction-isolation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/transactions/transaction-isolation/</guid>
      <description>了解 TiDB 事务的隔离级别。</description>
    </item>
    
    <item>
      <title>TiDB 事务隔离级别</title>
      <link>https://pingcap.com/docs-cn/stable/reference/transactions/transaction-isolation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/transactions/transaction-isolation/</guid>
      <description>了解 TiDB 事务的隔离级别。</description>
    </item>
    
    <item>
      <title>TiDB 事务隔离级别</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/transactions/transaction-isolation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/transactions/transaction-isolation/</guid>
      <description>了解 TiDB 事务的隔离级别。</description>
    </item>
    
    <item>
      <title>TiDB 事务隔离级别</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/transactions/transaction-isolation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/transactions/transaction-isolation/</guid>
      <description>了解 TiDB 事务的隔离级别。</description>
    </item>
    
    <item>
      <title>TiDB 内存控制文档</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/configure/memory-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/configure/memory-control/</guid>
      <description>TiDB 内存控制文档 目前 TiDB 已经能够做到追踪单条 SQL 查询过程中的内存使用情况，当内存使用超过一定阈值后也能采取一些操作来预防 OOM 或者排查 OOM 原因。在 TiDB 的配置文件中，我们可以使用如下配置来控制内存使用超阈值时 TiDB 的行为：
 # Valid options: [&amp;#34;log&amp;#34;, &amp;#34;cancel&amp;#34;] oom-action = &amp;#34;log&amp;#34;  如果上面的配置项使用的是 &amp;ldquo;log&amp;rdquo;，那么当一条 SQL 的内存使用超过一定阈值（由 session 变量 tidb_mem_quota_query 来控制）后，TiDB 会在 log 文件中打印一条 LOG，然后这条 SQL 继续执行，之后如果发生了 OOM 可以在 LOG 中找到对应的 SQL。 如果上面的配置项使用的是 &amp;ldquo;cancel&amp;rdquo;，那么当一条 SQL 的内存使用超过一定阈值后，TiDB 会立即中断这条 SQL 的执行并给客户端返回一个 error，error 信息中会详细写明这条 SQL 执行过程中各个占用内存比较多的物理执行算子的内存使用情况。  如何配置一条 SQL 执行过程中的内存使用阈值 可以在配置文件中设置每个 Query 默认的 Memory Quota，例如将其设置为 32GB：
 mem-quota-query = 34359738368 此外还可通过如下几个 session 变量来控制一条 Query 中的内存使用，大多数用户只需要设置 tidb_mem_quota_query 即可，其他变量是高级配置，大多数用户不需要关心：</description>
    </item>
    
    <item>
      <title>TiDB 内存控制文档</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/configure/memory-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/configure/memory-control/</guid>
      <description>TiDB 内存控制文档 目前 TiDB 已经能够做到追踪单条 SQL 查询过程中的内存使用情况，当内存使用超过一定阈值后也能采取一些操作来预防 OOM 或者排查 OOM 原因。在 TiDB 的配置文件中，我们可以使用如下配置来控制内存使用超阈值时 TiDB 的行为：
 # Valid options: [&amp;#34;log&amp;#34;, &amp;#34;cancel&amp;#34;] oom-action = &amp;#34;log&amp;#34;  如果上面的配置项使用的是 &amp;ldquo;log&amp;rdquo;，那么当一条 SQL 的内存使用超过一定阈值（由 session 变量 tidb_mem_quota_query 来控制）后，TiDB 会在 log 文件中打印一条 LOG，然后这条 SQL 继续执行，之后如果发生了 OOM 可以在 LOG 中找到对应的 SQL。 如果上面的配置项使用的是 &amp;ldquo;cancel&amp;rdquo;，那么当一条 SQL 的内存使用超过一定阈值后，TiDB 会立即中断这条 SQL 的执行并给客户端返回一个 error，error 信息中会详细写明这条 SQL 执行过程中各个占用内存比较多的物理执行算子的内存使用情况。  如何配置一条 SQL 执行过程中的内存使用阈值 可以在配置文件中设置每个 Query 默认的 Memory Quota，例如将其设置为 32GB：
 mem-quota-query = 34359738368 此外还可通过如下几个 session 变量来控制一条 Query 中的内存使用，大多数用户只需要设置 tidb_mem_quota_query 即可，其他变量是高级配置，大多数用户不需要关心：</description>
    </item>
    
    <item>
      <title>TiDB 内存控制文档</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/configure/memory-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/configure/memory-control/</guid>
      <description>TiDB 内存控制文档 目前 TiDB 已经能够做到追踪单条 SQL 查询过程中的内存使用情况，当内存使用超过一定阈值后也能采取一些操作来预防 OOM 或者排查 OOM 原因。在 TiDB 的配置文件中，我们可以使用如下配置来控制内存使用超阈值时 TiDB 的行为：
# Valid options: [&amp;#34;log&amp;#34;, &amp;#34;cancel&amp;#34;] oom-action = &amp;#34;log&amp;#34;  如果上面的配置项使用的是 &amp;ldquo;log&amp;rdquo;，那么当一条 SQL 的内存使用超过一定阈值（由 session 变量 tidb_mem_quota_query 来控制）后，TiDB 会在 log 文件中打印一条 LOG，然后这条 SQL 继续执行，之后如果发生了 OOM 可以在 LOG 中找到对应的 SQL。 如果上面的配置项使用的是 &amp;ldquo;cancel&amp;rdquo;，那么当一条 SQL 的内存使用超过一定阈值后，TiDB 会立即中断这条 SQL 的执行并给客户端返回一个 error，error 信息中会详细写明这条 SQL 执行过程中各个占用内存比较多的物理执行算子的内存使用情况。  如何配置一条 SQL 执行过程中的内存使用阈值 可以在配置文件中设置每个 Query 默认的 Memory Quota，例如将其设置为 32GB：
mem-quota-query = 34359738368 此外还可通过如下几个 session 变量来控制一条 Query 中的内存使用，大多数用户只需要设置 tidb_mem_quota_query 即可，其他变量是高级配置，大多数用户不需要关心：</description>
    </item>
    
    <item>
      <title>TiDB 内存控制文档</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/configure/memory-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/configure/memory-control/</guid>
      <description>TiDB 内存控制文档 目前 TiDB 已经能够做到追踪单条 SQL 查询过程中的内存使用情况，当内存使用超过一定阈值后也能采取一些操作来预防 OOM 或者排查 OOM 原因。在 TiDB 的配置文件中，我们可以使用如下配置来控制内存使用超阈值时 TiDB 的行为：
 # Valid options: [&amp;#34;log&amp;#34;, &amp;#34;cancel&amp;#34;] oom-action = &amp;#34;log&amp;#34;  如果上面的配置项使用的是 &amp;ldquo;log&amp;rdquo;，那么当一条 SQL 的内存使用超过一定阈值（由 session 变量 tidb_mem_quota_query 来控制）后，TiDB 会在 log 文件中打印一条 LOG，然后这条 SQL 继续执行，之后如果发生了 OOM 可以在 LOG 中找到对应的 SQL。 如果上面的配置项使用的是 &amp;ldquo;cancel&amp;rdquo;，那么当一条 SQL 的内存使用超过一定阈值后，TiDB 会立即中断这条 SQL 的执行并给客户端返回一个 error，error 信息中会详细写明这条 SQL 执行过程中各个占用内存比较多的物理执行算子的内存使用情况。  如何配置一条 SQL 执行过程中的内存使用阈值 可以在配置文件中设置每个 Query 默认的 Memory Quota，例如将其设置为 32GB：
 mem-quota-query = 34359738368 此外还可通过如下几个 session 变量来控制一条 Query 中的内存使用，大多数用户只需要设置 tidb_mem_quota_query 即可，其他变量是高级配置，大多数用户不需要关心：</description>
    </item>
    
    <item>
      <title>TiDB 命令行参数</title>
      <link>https://pingcap.com/docs-cn/stable/reference/configuration/tidb-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/configuration/tidb-server/configuration/</guid>
      <description>TiDB 命令行参数 在启动 TiDB 时，你可以使用命令行参数或环境变量来配置 TiDB。本文将详细介绍 TiDB 的命令行启动参数。TiDB 的默认端口为 4000（客户端请求）与 10080（状态报告）。
--advertise-address  登录 TiDB 的 IP 地址 默认：&amp;rdquo;&amp;rdquo; 必须确保用户和集群中的其他机器都能够访问到该 IP 地址  --binlog-socket  TiDB 服务使用 unix socket file 方式接受内部连接，如 Pump 服务 默认：&amp;rdquo;&amp;rdquo; 例如，可以使用 &amp;ldquo;/tmp/pump.sock&amp;rdquo; 来接受 Pump unix socket file 通信  --config  配置文件 默认：&amp;rdquo;&amp;rdquo; 如果你指定了配置文件，TiDB 会首先读取配置文件的配置。如果对应的配置在命令行参数里面也存在，TiDB 就会使用命令行参数的配置来覆盖配置文件中的配置。详细的配置项请参阅 TiDB 配置文件描述。  --cors  用于设置 TiDB HTTP 状态服务的 Access-Control-Allow-Origin 默认：&amp;rdquo;&amp;rdquo;  --host  TiDB 服务监听的 host 默认：&amp;ldquo;0.0.0.0&amp;rdquo; 0.0.0.0 默认会监听所有的网卡地址。如果有多块网卡，可以指定对外提供服务的网卡，如 192.</description>
    </item>
    
    <item>
      <title>TiDB 命令行参数</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/configuration/tidb-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/configuration/tidb-server/configuration/</guid>
      <description>TiDB 命令行参数 在启动 TiDB 时，你可以使用命令行参数或环境变量来配置 TiDB。本文将详细介绍 TiDB 的命令行启动参数。TiDB 的默认端口为 4000（客户端请求）与 10080（状态报告）。
--advertise-address  登录 TiDB 的 IP 地址 默认：&amp;rdquo;&amp;rdquo; 必须确保用户和集群中的其他机器都能够访问到该 IP 地址  --binlog-socket  TiDB 服务使用 unix socket file 方式接受内部连接，如 Pump 服务 默认：&amp;rdquo;&amp;rdquo; 例如，可以使用 &amp;ldquo;/tmp/pump.sock&amp;rdquo; 来接受 Pump unix socket file 通信  --config  配置文件 默认：&amp;rdquo;&amp;rdquo; 如果你指定了配置文件，TiDB 会首先读取配置文件的配置。如果对应的配置在命令行参数里面也存在，TiDB 就会使用命令行参数的配置来覆盖配置文件中的配置。详细的配置项请参阅 TiDB 配置文件描述。  --cors  用于设置 TiDB HTTP 状态服务的 Access-Control-Allow-Origin 默认：&amp;rdquo;&amp;rdquo;  --host  TiDB 服务监听的 host 默认：&amp;ldquo;0.0.0.0&amp;rdquo; 0.0.0.0 默认会监听所有的网卡地址。如果有多块网卡，可以指定对外提供服务的网卡，如 192.</description>
    </item>
    
    <item>
      <title>TiDB 垃圾回收 (GC)</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/garbage-collection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/garbage-collection/</guid>
      <description>TiDB 垃圾回收 (GC) TiDB 采用 MVCC 的方式来进行并发控制。当对数据进行更新或者删除时，原有的数据不会被立刻删除，而是会被保留一段时间，并且在这段时间内这些旧数据仍然可以被读取。这使得写入操作和读取操作不必互斥，并使读取历史数据成为可能。
存在超过一定时间并且不再使用的版本会被清理，否则它们将始终占用硬盘空间，并对性能产生负面影响。TiDB 使用一个垃圾回收 (GC) 机制来清理这些旧数据。
工作方式 TiDB 会周期性地进行 GC。每个 TiDB Server 启动后都会在后台运行一个 gc_worker，每个集群中会有其中一个 gc_worker 被选为 leader，leader 负责维护 GC 的状态并向所有的 TiKV Region leader 发送 GC 命令。
配置与监测方法 GC 相关的配置和运行状态记录在 mysql.tidb 这张系统表中，可以通过 SQL 语句进行检测和配置：
mysql&amp;gt; select VARIABLE_NAME, VARIABLE_VALUE from mysql.tidb; +-----------------------+------------------------------------------------------------------------------------------------+ | VARIABLE_NAME | VARIABLE_VALUE | +-----------------------+------------------------------------------------------------------------------------------------+ | bootstrapped | True | | tidb_server_version | 18 | | tikv_gc_leader_uuid | 58accebfa7c0004 | | tikv_gc_leader_desc | host:ip-172-16-30-5, pid:95472, start at 2018-04-11 13:43:30.</description>
    </item>
    
    <item>
      <title>TiDB 工具下载</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/download/</guid>
      <description>TiDB 工具下载 本页面汇总了 TiDB 周边工具官方维护版本的下载链接。
TiDB Binlog 如需下载最新版本的 TiDB Binlog，直接下载 TiDB 安装包即可，因为 TiDB Binlog 包含在 TiDB 安装包中。
以下表格中也提供了 Kafka 版本的 TiDB Binlog 下载链接。
   安装包 操作系统 架构 SHA256 校验和     https://download.pingcap.org/tidb-{version}-linux-amd64.tar.gz (TiDB Binlog) Linux amd64 https://download.pingcap.org/tidb-{version}-linux-amd64.sha256   https://download.pingcap.org/tidb-binlog-kafka-linux-amd64.tar.gz（Kafka 版本的 TiDB Binlog） Linux amd64 https://download.pingcap.org/tidb-binlog-kafka-linux-amd64.sha256     注意：
下载链接中的 {version} 为 TiDB 的版本号。例如，v3.0.5 版本的下载链接为 https://download.pingcap.org/tidb-v3.0.5-linux-amd64.tar.gz。
 TiDB Lightning 使用下表中的链接下载 TiDB Lightning：
   安装包 操作系统 架构 SHA256 校验和     https://download.</description>
    </item>
    
    <item>
      <title>TiDB 工具下载</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/download/</guid>
      <description>TiDB 工具下载 本页面汇总了 TiDB 周边工具官方维护版本的下载链接。
TiDB Binlog 如需下载最新版本的 TiDB Binlog，直接下载 TiDB 安装包即可，因为 TiDB Binlog 包含在 TiDB 安装包中。
以下表格中也提供了 Kafka 版本的 TiDB Binlog 下载链接。
   安装包 操作系统 架构 SHA256 校验和     https://download.pingcap.org/tidb-{version}-linux-amd64.tar.gz (TiDB Binlog) Linux amd64 https://download.pingcap.org/tidb-{version}-linux-amd64.sha256   https://download.pingcap.org/tidb-binlog-kafka-linux-amd64.tar.gz（Kafka 版本的 TiDB Binlog） Linux amd64 https://download.pingcap.org/tidb-binlog-kafka-linux-amd64.sha256     注意：
下载链接中的 {version} 为 TiDB 的版本号。例如，v3.0.5 版本的下载链接为 https://download.pingcap.org/tidb-v3.0.5-linux-amd64.tar.gz。
 TiDB Lightning 使用下表中的链接下载 TiDB Lightning：
   安装包 操作系统 架构 SHA256 校验和     https://download.</description>
    </item>
    
    <item>
      <title>TiDB 工具下载</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/download/</guid>
      <description>TiDB 工具下载 本页面汇总了 TiDB 周边工具官方维护版本的下载链接。
TiDB Binlog 如需下载最新版本的 TiDB Binlog，直接下载 TiDB 安装包即可，因为 TiDB Binlog 包含在 TiDB 安装包中。
以下表格中也提供了 Kafka 版本的 TiDB Binlog 下载链接。
   安装包 操作系统 架构 SHA256 校验和     https://download.pingcap.org/tidb-{version}-linux-amd64.tar.gz (TiDB Binlog) Linux amd64 https://download.pingcap.org/tidb-{version}-linux-amd64.sha256   https://download.pingcap.org/tidb-binlog-kafka-linux-amd64.tar.gz（Kafka 版本的 TiDB Binlog） Linux amd64 https://download.pingcap.org/tidb-binlog-kafka-linux-amd64.sha256     注意：
下载链接中的 {version} 为 TiDB 的版本号。例如，v2.1.15 版本的下载链接为 https://download.pingcap.org/tidb-v2.1.15-linux-amd64.tar.gz。
 TiDB Lightning 使用下表中的链接下载 TiDB Lightning：
   安装包 操作系统 架构 SHA256 校验和     https://download.</description>
    </item>
    
    <item>
      <title>TiDB 工具下载</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/download/</guid>
      <description>TiDB 工具下载 本页面汇总了 TiDB 周边工具官方维护版本的下载链接。
TiDB Binlog 如需下载最新版本的 TiDB Binlog，直接下载 TiDB 安装包即可，因为 TiDB Binlog 包含在 TiDB 安装包中。
以下表格中也提供了 Kafka 版本的 TiDB Binlog 下载链接。
   安装包 操作系统 架构 SHA256 校验和     https://download.pingcap.org/tidb-{version}-linux-amd64.tar.gz (TiDB Binlog) Linux amd64 https://download.pingcap.org/tidb-{version}-linux-amd64.sha256   https://download.pingcap.org/tidb-binlog-kafka-linux-amd64.tar.gz（Kafka 版本的 TiDB Binlog） Linux amd64 https://download.pingcap.org/tidb-binlog-kafka-linux-amd64.sha256     注意：
下载链接中的 {version} 为 TiDB 的版本号。例如，v3.0.5 版本的下载链接为 https://download.pingcap.org/tidb-v3.0.5-linux-amd64.tar.gz。
 TiDB Lightning 使用下表中的链接下载 TiDB Lightning：
   安装包 操作系统 架构 SHA256 校验和     https://download.</description>
    </item>
    
    <item>
      <title>TiDB 悲观事务模型</title>
      <link>https://pingcap.com/docs-cn/dev/reference/transactions/transaction-pessimistic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/transactions/transaction-pessimistic/</guid>
      <description>了解 TiDB 的悲观事务模型。</description>
    </item>
    
    <item>
      <title>TiDB 悲观事务模型</title>
      <link>https://pingcap.com/docs-cn/stable/reference/transactions/transaction-pessimistic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/transactions/transaction-pessimistic/</guid>
      <description>了解 TiDB 的悲观事务模型。</description>
    </item>
    
    <item>
      <title>TiDB 悲观事务模型</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/transactions/transaction-pessimistic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/transactions/transaction-pessimistic/</guid>
      <description>了解 TiDB 的悲观事务模型。</description>
    </item>
    
    <item>
      <title>TiDB 整体架构</title>
      <link>https://pingcap.com/docs-cn/dev/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/architecture/</guid>
      <description>TiDB 整体架构 要深入了解 TiDB 的水平扩展和高可用特点，首先需要了解 TiDB 的整体架构。TiDB 集群主要包括三个核心组件：TiDB Server，PD Server 和 TiKV Server。此外，还有用于解决用户复杂 OLAP 需求的 TiSpark 组件和简化云上部署管理的 TiDB Operator 组件。
TiDB Server TiDB Server 负责接收 SQL 请求，处理 SQL 相关的逻辑，并通过 PD 找到存储计算所需数据的 TiKV 地址，与 TiKV 交互获取数据，最终返回结果。TiDB Server 是无状态的，其本身并不存储数据，只负责计算，可以无限水平扩展，可以通过负载均衡组件（如LVS、HAProxy 或 F5）对外提供统一的接入地址。
PD Server Placement Driver (简称 PD) 是整个集群的管理模块，其主要工作有三个：一是存储集群的元信息（某个 Key 存储在哪个 TiKV 节点）；二是对 TiKV 集群进行调度和负载均衡（如数据的迁移、Raft group leader 的迁移等）；三是分配全局唯一且递增的事务 ID。
PD 通过 Raft 协议保证数据的安全性。Raft 的 leader server 负责处理所有操作，其余的 PD server 仅用于保证高可用。建议部署奇数个 PD 节点。
TiKV Server TiKV Server 负责存储数据，从外部看 TiKV 是一个分布式的提供事务的 Key-Value 存储引擎。存储数据的基本单位是 Region，每个 Region 负责存储一个 Key Range（从 StartKey 到 EndKey 的左闭右开区间）的数据，每个 TiKV 节点会负责多个 Region。TiKV 使用 Raft 协议做复制，保持数据的一致性和容灾。副本以 Region 为单位进行管理，不同节点上的多个 Region 构成一个 Raft Group，互为副本。数据在多个 TiKV 之间的负载均衡由 PD 调度，这里也是以 Region 为单位进行调度。</description>
    </item>
    
    <item>
      <title>TiDB 整体架构</title>
      <link>https://pingcap.com/docs-cn/stable/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/architecture/</guid>
      <description>TiDB 整体架构 要深入了解 TiDB 的水平扩展和高可用特点，首先需要了解 TiDB 的整体架构。TiDB 集群主要包括三个核心组件：TiDB Server，PD Server 和 TiKV Server。此外，还有用于解决用户复杂 OLAP 需求的 TiSpark 组件和简化云上部署管理的 TiDB Operator 组件。
TiDB Server TiDB Server 负责接收 SQL 请求，处理 SQL 相关的逻辑，并通过 PD 找到存储计算所需数据的 TiKV 地址，与 TiKV 交互获取数据，最终返回结果。TiDB Server 是无状态的，其本身并不存储数据，只负责计算，可以无限水平扩展，可以通过负载均衡组件（如LVS、HAProxy 或 F5）对外提供统一的接入地址。
PD Server Placement Driver (简称 PD) 是整个集群的管理模块，其主要工作有三个：一是存储集群的元信息（某个 Key 存储在哪个 TiKV 节点）；二是对 TiKV 集群进行调度和负载均衡（如数据的迁移、Raft group leader 的迁移等）；三是分配全局唯一且递增的事务 ID。
PD 通过 Raft 协议保证数据的安全性。Raft 的 leader server 负责处理所有操作，其余的 PD server 仅用于保证高可用。建议部署奇数个 PD 节点。
TiKV Server TiKV Server 负责存储数据，从外部看 TiKV 是一个分布式的提供事务的 Key-Value 存储引擎。存储数据的基本单位是 Region，每个 Region 负责存储一个 Key Range（从 StartKey 到 EndKey 的左闭右开区间）的数据，每个 TiKV 节点会负责多个 Region。TiKV 使用 Raft 协议做复制，保持数据的一致性和容灾。副本以 Region 为单位进行管理，不同节点上的多个 Region 构成一个 Raft Group，互为副本。数据在多个 TiKV 之间的负载均衡由 PD 调度，这里也是以 Region 为单位进行调度。</description>
    </item>
    
    <item>
      <title>TiDB 整体架构</title>
      <link>https://pingcap.com/docs-cn/v2.1/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/architecture/</guid>
      <description>TiDB 整体架构 要深入了解 TiDB 的水平扩展和高可用特点，首先需要了解 TiDB 的整体架构。TiDB 集群主要包括三个核心组件：TiDB Server，PD Server 和 TiKV Server。此外，还有用于解决用户复杂 OLAP 需求的 TiSpark 组件。
TiDB Server TiDB Server 负责接收 SQL 请求，处理 SQL 相关的逻辑，并通过 PD 找到存储计算所需数据的 TiKV 地址，与 TiKV 交互获取数据，最终返回结果。TiDB Server 是无状态的，其本身并不存储数据，只负责计算，可以无限水平扩展，可以通过负载均衡组件（如LVS、HAProxy 或 F5）对外提供统一的接入地址。
PD Server Placement Driver (简称 PD) 是整个集群的管理模块，其主要工作有三个：一是存储集群的元信息（某个 Key 存储在哪个 TiKV 节点）；二是对 TiKV 集群进行调度和负载均衡（如数据的迁移、Raft group leader 的迁移等）；三是分配全局唯一且递增的事务 ID。
PD 通过 Raft 协议保证数据的安全性。Raft 的 leader server 负责处理所有操作，其余的 PD server 仅用于保证高可用。建议部署奇数个 PD 节点。
TiKV Server TiKV Server 负责存储数据，从外部看 TiKV 是一个分布式的提供事务的 Key-Value 存储引擎。存储数据的基本单位是 Region，每个 Region 负责存储一个 Key Range（从 StartKey 到 EndKey 的左闭右开区间）的数据，每个 TiKV 节点会负责多个 Region。TiKV 使用 Raft 协议做复制，保持数据的一致性和容灾。副本以 Region 为单位进行管理，不同节点上的多个 Region 构成一个 Raft Group，互为副本。数据在多个 TiKV 之间的负载均衡由 PD 调度，这里也是以 Region 为单位进行调度。</description>
    </item>
    
    <item>
      <title>TiDB 整体架构</title>
      <link>https://pingcap.com/docs-cn/v3.1/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/architecture/</guid>
      <description>TiDB 整体架构 要深入了解 TiDB 的水平扩展和高可用特点，首先需要了解 TiDB 的整体架构。TiDB 集群主要包括三个核心组件：TiDB Server，PD Server 和 TiKV Server。此外，还有用于解决用户复杂 OLAP 需求的 TiSpark 组件和简化云上部署管理的 TiDB Operator 组件。
TiDB Server TiDB Server 负责接收 SQL 请求，处理 SQL 相关的逻辑，并通过 PD 找到存储计算所需数据的 TiKV 地址，与 TiKV 交互获取数据，最终返回结果。TiDB Server 是无状态的，其本身并不存储数据，只负责计算，可以无限水平扩展，可以通过负载均衡组件（如LVS、HAProxy 或 F5）对外提供统一的接入地址。
PD Server Placement Driver (简称 PD) 是整个集群的管理模块，其主要工作有三个：一是存储集群的元信息（某个 Key 存储在哪个 TiKV 节点）；二是对 TiKV 集群进行调度和负载均衡（如数据的迁移、Raft group leader 的迁移等）；三是分配全局唯一且递增的事务 ID。
PD 通过 Raft 协议保证数据的安全性。Raft 的 leader server 负责处理所有操作，其余的 PD server 仅用于保证高可用。建议部署奇数个 PD 节点。
TiKV Server TiKV Server 负责存储数据，从外部看 TiKV 是一个分布式的提供事务的 Key-Value 存储引擎。存储数据的基本单位是 Region，每个 Region 负责存储一个 Key Range（从 StartKey 到 EndKey 的左闭右开区间）的数据，每个 TiKV 节点会负责多个 Region。TiKV 使用 Raft 协议做复制，保持数据的一致性和容灾。副本以 Region 为单位进行管理，不同节点上的多个 Region 构成一个 Raft Group，互为副本。数据在多个 TiKV 之间的负载均衡由 PD 调度，这里也是以 Region 为单位进行调度。</description>
    </item>
    
    <item>
      <title>TiDB 最新开发版升级操作指南</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/upgrade/from-previous-version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/upgrade/from-previous-version/</guid>
      <description>TiDB 最新开发版升级操作指南 本文档适用于从 TiDB 2.0、2.1、3.0、3.1 版本升级至 TiDB 最新开发版 (latest) 以及从开发版的较低版本升级至最新版本。目前，TiDB 最新开发版兼容 TiDB Binlog Cluster 版本。
 警告：
TiDB 最新开发版为非稳定版本，不建议用于生产环境。
 升级兼容性说明  不支持在升级后回退至 2.1.x 或更旧版本 从 2.0.6 之前的版本升级到 latest 之前，需要确认集群中是否存在正在运行中的 DDL 操作，特别是耗时的 Add Index 操作，等 DDL 操作完成后再执行升级操作 2.1 及之后版本启用了并行 DDL，早于 2.0.1 版本的集群，无法滚动升级到 latest 版本，可以选择下面两种方案：  停机升级，直接从早于 2.0.1 的 TiDB 版本升级到 latest 版本 先滚动升级到 2.0.1 或者之后的 2.0.x 版本，再滚动升级到 latest 版本     注意：
在升级的过程中不要执行 DDL 请求，否则可能会出现行为未定义的问题。
 在中控机器上安装 Ansible 及其依赖  注意：</description>
    </item>
    
    <item>
      <title>TiDB 核心特性</title>
      <link>https://pingcap.com/docs-cn/dev/key-features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/key-features/</guid>
      <description>TiDB 核心特性 本文详细介绍 TiDB 的两大核心特性：水平扩展与高可用。
水平扩展 无限水平扩展是 TiDB 的一大特点，这里说的水平扩展包括两方面：计算能力和存储能力。TiDB Server 负责处理 SQL 请求，随着业务的增长，可以简单的添加 TiDB Server 节点，提高整体的处理能力，提供更高的吞吐。TiKV 负责存储数据，随着数据量的增长，可以部署更多的 TiKV Server 节点解决数据 Scale 的问题。PD 会在 TiKV 节点之间以 Region 为单位做调度，将部分数据迁移到新加的节点上。所以在业务的早期，可以只部署少量的服务实例（推荐至少部署 3 个 TiKV， 3 个 PD，2 个 TiDB），随着业务量的增长，按照需求添加 TiKV 或者 TiDB 实例。
高可用 高可用是 TiDB 的另一大特点，TiDB/TiKV/PD 这三个组件都能容忍部分实例失效，不影响整个集群的可用性。下面分别说明这三个组件的可用性、单个实例失效后的后果以及如何恢复。
  TiDB
TiDB 是无状态的，推荐至少部署两个实例，前端通过负载均衡组件对外提供服务。当单个实例失效时，会影响正在这个实例上进行的 Session，从应用的角度看，会出现单次请求失败的情况，重新连接后即可继续获得服务。单个实例失效后，可以重启这个实例或者部署一个新的实例。
  PD
PD 是一个集群，通过 Raft 协议保持数据的一致性，单个实例失效时，如果这个实例不是 Raft 的 leader，那么服务完全不受影响；如果这个实例是 Raft 的 leader，会重新选出新的 Raft leader，自动恢复服务。PD 在选举的过程中无法对外提供服务，这个时间大约是3秒钟。推荐至少部署三个 PD 实例，单个实例失效后，重启这个实例或者添加新的实例。
  TiKV</description>
    </item>
    
    <item>
      <title>TiDB 核心特性</title>
      <link>https://pingcap.com/docs-cn/stable/key-features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/key-features/</guid>
      <description>TiDB 核心特性 本文详细介绍 TiDB 的两大核心特性：水平扩展与高可用。
水平扩展 无限水平扩展是 TiDB 的一大特点，这里说的水平扩展包括两方面：计算能力和存储能力。TiDB Server 负责处理 SQL 请求，随着业务的增长，可以简单的添加 TiDB Server 节点，提高整体的处理能力，提供更高的吞吐。TiKV 负责存储数据，随着数据量的增长，可以部署更多的 TiKV Server 节点解决数据 Scale 的问题。PD 会在 TiKV 节点之间以 Region 为单位做调度，将部分数据迁移到新加的节点上。所以在业务的早期，可以只部署少量的服务实例（推荐至少部署 3 个 TiKV， 3 个 PD，2 个 TiDB），随着业务量的增长，按照需求添加 TiKV 或者 TiDB 实例。
高可用 高可用是 TiDB 的另一大特点，TiDB/TiKV/PD 这三个组件都能容忍部分实例失效，不影响整个集群的可用性。下面分别说明这三个组件的可用性、单个实例失效后的后果以及如何恢复。
  TiDB
TiDB 是无状态的，推荐至少部署两个实例，前端通过负载均衡组件对外提供服务。当单个实例失效时，会影响正在这个实例上进行的 Session，从应用的角度看，会出现单次请求失败的情况，重新连接后即可继续获得服务。单个实例失效后，可以重启这个实例或者部署一个新的实例。
  PD
PD 是一个集群，通过 Raft 协议保持数据的一致性，单个实例失效时，如果这个实例不是 Raft 的 leader，那么服务完全不受影响；如果这个实例是 Raft 的 leader，会重新选出新的 Raft leader，自动恢复服务。PD 在选举的过程中无法对外提供服务，这个时间大约是3秒钟。推荐至少部署三个 PD 实例，单个实例失效后，重启这个实例或者添加新的实例。
  TiKV</description>
    </item>
    
    <item>
      <title>TiDB 核心特性</title>
      <link>https://pingcap.com/docs-cn/v2.1/key-features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/key-features/</guid>
      <description>TiDB 核心特性 本文详细介绍 TiDB 的两大核心特性：水平扩展与高可用。
水平扩展 无限水平扩展是 TiDB 的一大特点，这里说的水平扩展包括两方面：计算能力和存储能力。TiDB Server 负责处理 SQL 请求，随着业务的增长，可以简单的添加 TiDB Server 节点，提高整体的处理能力，提供更高的吞吐。TiKV 负责存储数据，随着数据量的增长，可以部署更多的 TiKV Server 节点解决数据 Scale 的问题。PD 会在 TiKV 节点之间以 Region 为单位做调度，将部分数据迁移到新加的节点上。所以在业务的早期，可以只部署少量的服务实例（推荐至少部署 3 个 TiKV， 3 个 PD，2 个 TiDB），随着业务量的增长，按照需求添加 TiKV 或者 TiDB 实例。
高可用 高可用是 TiDB 的另一大特点，TiDB/TiKV/PD 这三个组件都能容忍部分实例失效，不影响整个集群的可用性。下面分别说明这三个组件的可用性、单个实例失效后的后果以及如何恢复。
  TiDB
TiDB 是无状态的，推荐至少部署两个实例，前端通过负载均衡组件对外提供服务。当单个实例失效时，会影响正在这个实例上进行的 Session，从应用的角度看，会出现单次请求失败的情况，重新连接后即可继续获得服务。单个实例失效后，可以重启这个实例或者部署一个新的实例。
  PD
PD 是一个集群，通过 Raft 协议保持数据的一致性，单个实例失效时，如果这个实例不是 Raft 的 leader，那么服务完全不受影响；如果这个实例是 Raft 的 leader，会重新选出新的 Raft leader，自动恢复服务。PD 在选举的过程中无法对外提供服务，这个时间大约是3秒钟。推荐至少部署三个 PD 实例，单个实例失效后，重启这个实例或者添加新的实例。
  TiKV</description>
    </item>
    
    <item>
      <title>TiDB 核心特性</title>
      <link>https://pingcap.com/docs-cn/v3.1/key-features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/key-features/</guid>
      <description>TiDB 核心特性 本文详细介绍 TiDB 的两大核心特性：水平扩展与高可用。
水平扩展 无限水平扩展是 TiDB 的一大特点，这里说的水平扩展包括两方面：计算能力和存储能力。TiDB Server 负责处理 SQL 请求，随着业务的增长，可以简单的添加 TiDB Server 节点，提高整体的处理能力，提供更高的吞吐。TiKV 负责存储数据，随着数据量的增长，可以部署更多的 TiKV Server 节点解决数据 Scale 的问题。PD 会在 TiKV 节点之间以 Region 为单位做调度，将部分数据迁移到新加的节点上。所以在业务的早期，可以只部署少量的服务实例（推荐至少部署 3 个 TiKV， 3 个 PD，2 个 TiDB），随着业务量的增长，按照需求添加 TiKV 或者 TiDB 实例。
高可用 高可用是 TiDB 的另一大特点，TiDB/TiKV/PD 这三个组件都能容忍部分实例失效，不影响整个集群的可用性。下面分别说明这三个组件的可用性、单个实例失效后的后果以及如何恢复。
  TiDB
TiDB 是无状态的，推荐至少部署两个实例，前端通过负载均衡组件对外提供服务。当单个实例失效时，会影响正在这个实例上进行的 Session，从应用的角度看，会出现单次请求失败的情况，重新连接后即可继续获得服务。单个实例失效后，可以重启这个实例或者部署一个新的实例。
  PD
PD 是一个集群，通过 Raft 协议保持数据的一致性，单个实例失效时，如果这个实例不是 Raft 的 leader，那么服务完全不受影响；如果这个实例是 Raft 的 leader，会重新选出新的 Raft leader，自动恢复服务。PD 在选举的过程中无法对外提供服务，这个时间大约是3秒钟。推荐至少部署三个 PD 实例，单个实例失效后，重启这个实例或者添加新的实例。
  TiKV</description>
    </item>
    
    <item>
      <title>TiDB 版本发布历史</title>
      <link>https://pingcap.com/docs-cn/dev/releases/rn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/releases/rn/</guid>
      <description>TiDB 版本发布历史 TiDB 历史版本发布声明如下：
4.0  4.0.0-beta.1 4.0.0-beta  3.1  3.1.0-beta.2 3.1.0-beta.1 3.1.0-beta  3.0  3.0.12 3.0.11 3.0.10 3.0.9 3.0.8 3.0.7 3.0.6 3.0.5 3.0.4 3.0.3 3.0.2 3.0.1 3.0 GA 3.0.0-rc.3 3.0.0-rc.2 3.0.0-rc.1 3.0.0-beta.1 3.0.0-beta  2.1  2.1.19 2.1.18 2.1.17 2.1.16 2.1.15 2.1.14 2.1.13 2.1.12 2.1.11 2.1.10 2.1.9 2.1.8 2.1.7 2.1.6 2.1.5 2.1.4 2.1.3 2.1.2 2.1.1 2.1 GA 2.1 RC5 2.1 RC4 2.1 RC3 2.1 RC2 2.1 RC1 2.</description>
    </item>
    
    <item>
      <title>TiDB 版本发布历史</title>
      <link>https://pingcap.com/docs-cn/stable/releases/rn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/releases/rn/</guid>
      <description>TiDB 版本发布历史 TiDB 历史版本发布声明如下：
3.0  3.0.12 3.0.11 3.0.10 3.0.9 3.0.8 3.0.7 3.0.6 3.0.5 3.0.4 3.0.3 3.0.2 3.0.1 3.0 GA 3.0.0-rc.3 3.0.0-rc.2 3.0.0-rc.1 3.0.0-beta.1 3.0.0-beta  2.1  2.1.19 2.1.18 2.1.17 2.1.16 2.1.15 2.1.14 2.1.13 2.1.12 2.1.11 2.1.10 2.1.9 2.1.8 2.1.7 2.1.6 2.1.5 2.1.4 2.1.3 2.1.2 2.1.1 2.1 GA 2.1 RC5 2.1 RC4 2.1 RC3 2.1 RC2 2.1 RC1 2.1 Beta  2.0  2.0.11 2.0.10 2.0.9 2.0.8 2.0.7 2.0.6 2.</description>
    </item>
    
    <item>
      <title>TiDB 版本发布历史</title>
      <link>https://pingcap.com/docs-cn/v2.1/releases/rn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/releases/rn/</guid>
      <description>TiDB 版本发布历史 TiDB 历史版本发布声明如下：
3.0  3.0.1 3.0 GA 3.0.0-rc.3 3.0.0-rc.2 3.0.0-rc.1 3.0.0-beta.1 3.0.0-beta  2.1  2.1.19 2.1.18 2.1.17 2.1.16 2.1.15 2.1.14 2.1.13 2.1.12 2.1.11 2.1.10 2.1.9 2.1.8 2.1.7 2.1.6 2.1.5 2.1.4 2.1.3 2.1.2 2.1.1 2.1 GA 2.1 RC5 2.1 RC4 2.1 RC3 2.1 RC2 2.1 RC1 2.1 Beta  2.0  2.0.11 2.0.10 2.0.9 2.0.8 2.0.7 2.0.6 2.0.5 2.0.4 2.0.3 2.0.2 2.0.1 2.0 2.0 RC5 2.0 RC4 2.0 RC3 2.</description>
    </item>
    
    <item>
      <title>TiDB 版本发布历史</title>
      <link>https://pingcap.com/docs-cn/v3.1/releases/rn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/releases/rn/</guid>
      <description>TiDB 版本发布历史 TiDB 历史版本发布声明如下：
3.1  3.1.0-beta.2 3.1.0-beta.1 3.1.0-beta  3.0  3.0.12 3.0.11 3.0.10 3.0.9 3.0.8 3.0.7 3.0.6 3.0.5 3.0.4 3.0.3 3.0.2 3.0.1 3.0 GA 3.0.0-rc.3 3.0.0-rc.2 3.0.0-rc.1 3.0.0-beta.1 3.0.0-beta  2.1  2.1.19 2.1.18 2.1.17 2.1.16 2.1.15 2.1.14 2.1.13 2.1.12 2.1.11 2.1.10 2.1.9 2.1.8 2.1.7 2.1.6 2.1.5 2.1.4 2.1.3 2.1.2 2.1.1 2.1 GA 2.1 RC5 2.1 RC4 2.1 RC3 2.1 RC2 2.1 RC1 2.1 Beta  2.0  2.</description>
    </item>
    
    <item>
      <title>TiDB 生态工具使用指南</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/user-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/user-guide/</guid>
      <description>TiDB 生态工具使用指南 目前 TiDB 生态工具较多，有些工具之间有功能重叠，也有些属于版本迭代关系。本文档将对各个工具进行介绍，说明各个工具之间的关系，并且说明各个版本、场景下应该使用哪些工具。
TiDB 生态工具概览 TiDB 生态工具可以分为几种：
 数据导入类，包括全量导入工具、备份和恢复工具、增量导入工具等 数据导出类，包括全量导出工具、增量导出工具等  下面将分别介绍这两类工具。
数据导入类 全量导入工具 Loader（停止维护，不推荐使用） Loader 是一款轻量级的全量数据导入工具，数据以 SQL 的形式导入到 TiDB 中。目前这个工具正在逐步被 TiDB Lightning 替换掉，参见 TiDB Lightning TiDB-backend 文档。
以下是 Loader 的一些基本信息：
 Loader 的输入：Mydumper 输出的文件 Loader 的输出：以 SQL 形式写入 TiDB 适用 TiDB 版本：所有版本 Kubernetes 支持：备份与恢复  全量导入工具 TiDB Lightning TiDB Lightning 是将全量数据快速导入到一个新的 TiDB 集群的工具。
注意用 TiDB Lightning 导入数据到 TiDB 的时候，有两种模式：
 默认模式：tikv-importer 为后端，这种模式下导入数据过程中集群无法提供正常的服务，用于导入大量的数据（TB 级别）。 第二种模式：TiDB 为后端（相当于 Loader 的功能），相对默认模式导入速度较慢，但是可以在线导入。  以下是 TiDB Lightning 的一些基本信息：</description>
    </item>
    
    <item>
      <title>TiDB 生态工具使用指南</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/user-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/user-guide/</guid>
      <description>TiDB 生态工具使用指南 目前 TiDB 生态工具较多，有些工具之间有功能重叠，也有些属于版本迭代关系。本文档将对各个工具进行介绍，说明各个工具之间的关系，并且说明各个版本、场景下应该使用哪些工具。
TiDB 生态工具概览 TiDB 生态工具可以分为几种：
 数据导入类，包括全量导入工具、备份和恢复工具、增量导入工具等 数据导出类，包括全量导出工具、增量导出工具等  下面将分别介绍这两类工具。
数据导入类 全量导入工具 Loader（停止维护，不推荐使用） Loader 是一款轻量级的全量数据导入工具，数据以 SQL 的形式导入到 TiDB 中。目前这个工具正在逐步被 TiDB Lightning 替换掉，参见 TiDB Lightning TiDB-backend 文档。
以下是 Loader 的一些基本信息：
 Loader 的输入：Mydumper 输出的文件 Loader 的输出：以 SQL 形式写入 TiDB 适用 TiDB 版本：所有版本 Kubernetes 支持：备份与恢复  全量导入工具 TiDB Lightning TiDB Lightning 是将全量数据快速导入到一个新的 TiDB 集群的工具。
注意用 TiDB Lightning 导入数据到 TiDB 的时候，有两种模式：
 默认模式：tikv-importer 为后端，这种模式下导入数据过程中集群无法提供正常的服务，用于导入大量的数据（TB 级别）。 第二种模式：TiDB 为后端（相当于 Loader 的功能），相对默认模式导入速度较慢，但是可以在线导入。  以下是 TiDB Lightning 的一些基本信息：</description>
    </item>
    
    <item>
      <title>TiDB 生态工具使用指南</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/user-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/user-guide/</guid>
      <description>TiDB 生态工具使用指南 目前 TiDB 生态工具较多，有些工具之间有功能重叠，也有些属于版本迭代关系。本文档将对各个工具进行介绍，说明各个工具之间的关系，并且说明各个版本、场景下应该使用哪些工具。
TiDB 生态工具概览 TiDB 生态工具可以分为几种：
 数据导入类，包括全量导入工具、备份和恢复工具、增量导入工具等 数据导出类，包括全量导出工具、增量导出工具等  下面将分别介绍这两类工具。
数据导入类 全量导入工具 Loader（停止维护，不推荐使用） Loader 是一款轻量级的全量数据导入工具，数据以 SQL 的形式导入到 TiDB 中。目前这个工具正在逐步被 TiDB Lightning 替换掉，参见 TiDB Lightning TiDB-backend 文档。
以下是 Loader 的一些基本信息：
 Loader 的输入：Mydumper 输出的文件 Loader 的输出：以 SQL 形式写入 TiDB 适用 TiDB 版本：所有版本 Kubernetes 支持：备份与恢复  全量导入工具 TiDB Lightning TiDB Lightning 是将全量数据快速导入到一个新的 TiDB 集群的工具。
注意用 TiDB Lightning 导入数据到 TiDB 的时候，有两种模式：
 默认模式：tikv-importer 为后端，这种模式下导入数据过程中集群无法提供正常的服务，用于导入大量的数据（TB 级别）。 第二种模式：TiDB 为后端（相当于 Loader 的功能），相对默认模式导入速度较慢，但是可以在线导入。  以下是 TiDB Lightning 的一些基本信息：</description>
    </item>
    
    <item>
      <title>TiDB 用户账户管理</title>
      <link>https://pingcap.com/docs-cn/dev/reference/security/user-account-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/security/user-account-management/</guid>
      <description>TiDB 用户账户管理 本文档主要介绍如何管理 TiDB 用户账户。
用户名和密码 TiDB 将用户账户存储在 mysql.user 系统表里面。每个账户由用户名和 host 作为标识。每个账户可以设置一个密码。
通过 MySQL 客户端连接到 TiDB 服务器，通过指定的账户和密码登录：
 mysql --port 4000 --user xxx --password 使用缩写的命令行参数则是：
 mysql -P 4000 -u xxx -p 添加用户 添加用户有两种方式：
 通过标准的用户管理的 SQL 语句创建用户以及授予权限，比如 CREATE USER 和 GRANT。 直接通过 INSERT、UPDATE 和 DELETE 操作授权表。  推荐使用第一种方式。第二种方式修改容易导致一些不完整的修改，因此不推荐。还有另一种可选方式是使用第三方工具的图形化界面工具。
 CREATE USER [IF NOT EXISTS] user [auth_spec] [, user [auth_spec]] ...  auth_spec: { IDENTIFIED BY &amp;#39;auth_string&amp;#39; | IDENTIFIED BY PASSWORD &amp;#39;hash_string&amp;#39; }  IDENTIFIED BY &#39;auth_string&#39;：设置登录密码时，auth_string 会被 TiDB 经过加密存储在 mysql.</description>
    </item>
    
    <item>
      <title>TiDB 用户账户管理</title>
      <link>https://pingcap.com/docs-cn/stable/reference/security/user-account-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/security/user-account-management/</guid>
      <description>TiDB 用户账户管理 本文档主要介绍如何管理 TiDB 用户账户。
用户名和密码 TiDB 将用户账户存储在 mysql.user 系统表里面。每个账户由用户名和 host 作为标识。每个账户可以设置一个密码。
通过 MySQL 客户端连接到 TiDB 服务器，通过指定的账户和密码登录：
 mysql --port 4000 --user xxx --password 使用缩写的命令行参数则是：
 mysql -P 4000 -u xxx -p 添加用户 添加用户有两种方式：
 通过标准的用户管理的 SQL 语句创建用户以及授予权限，比如 CREATE USER 和 GRANT。 直接通过 INSERT、UPDATE 和 DELETE 操作授权表。  推荐使用第一种方式。第二种方式修改容易导致一些不完整的修改，因此不推荐。还有另一种可选方式是使用第三方工具的图形化界面工具。
 CREATE USER [IF NOT EXISTS] user [auth_spec] [, user [auth_spec]] ...  auth_spec: { IDENTIFIED BY &amp;#39;auth_string&amp;#39; | IDENTIFIED BY PASSWORD &amp;#39;hash_string&amp;#39; }  IDENTIFIED BY &#39;auth_string&#39;：设置登录密码时，auth_string 会被 TiDB 经过加密存储在 mysql.</description>
    </item>
    
    <item>
      <title>TiDB 用户账户管理</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/security/user-account-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/security/user-account-management/</guid>
      <description>TiDB 用户账户管理 本文档主要介绍如何管理 TiDB 用户账户。
用户名和密码 TiDB 将用户账户存储在 mysql.user 系统表里面。每个账户由用户名和 host 作为标识。每个账户可以设置一个密码。
通过 MySQL 客户端连接到 TiDB 服务器，通过指定的账户和密码登录：
 mysql --port 4000 --user xxx --password 使用缩写的命令行参数则是：
 mysql -P 4000 -u xxx -p 添加用户 添加用户有两种方式：
 通过标准的用户管理的 SQL 语句创建用户以及授予权限，比如 CREATE USER 和 GRANT。 直接通过 INSERT、UPDATE 和 DELETE 操作授权表。  推荐使用第一种方式。第二种方式修改容易导致一些不完整的修改，因此不推荐。还有另一种可选方式是使用第三方工具的图形化界面工具。
 CREATE USER [IF NOT EXISTS] user [auth_spec] [, user [auth_spec]] ...  auth_spec: { IDENTIFIED BY &amp;#39;auth_string&amp;#39; | IDENTIFIED BY PASSWORD &amp;#39;hash_string&amp;#39; }  IDENTIFIED BY &#39;auth_string&#39;：设置登录密码时，auth_string 会被 TiDB 经过加密存储在 mysql.</description>
    </item>
    
    <item>
      <title>TiDB 用户账户管理</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/security/user-account-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/security/user-account-management/</guid>
      <description>TiDB 用户账户管理 本文档主要介绍如何管理 TiDB 用户账户。
用户名和密码 TiDB 将用户账户存储在 mysql.user 系统表里面。每个账户由用户名和 host 作为标识。每个账户可以设置一个密码。
通过 MySQL 客户端连接到 TiDB 服务器，通过指定的账户和密码登录：
 mysql --port 4000 --user xxx --password 使用缩写的命令行参数则是：
 mysql -P 4000 -u xxx -p 添加用户 添加用户有两种方式：
 通过标准的用户管理的 SQL 语句创建用户以及授予权限，比如 CREATE USER 和 GRANT。 直接通过 INSERT、UPDATE 和 DELETE 操作授权表。  推荐使用第一种方式。第二种方式修改容易导致一些不完整的修改，因此不推荐。还有另一种可选方式是使用第三方工具的图形化界面工具。
 CREATE USER [IF NOT EXISTS] user [auth_spec] [, user [auth_spec]] ...  auth_spec: { IDENTIFIED BY &amp;#39;auth_string&amp;#39; | IDENTIFIED BY PASSWORD &amp;#39;hash_string&amp;#39; }  IDENTIFIED BY &#39;auth_string&#39;：设置登录密码时，auth_string 会被 TiDB 经过加密存储在 mysql.</description>
    </item>
    
    <item>
      <title>TiDB 监控框架概述</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/monitor/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/monitor/overview/</guid>
      <description>TiDB 监控框架概述 TiDB 使用开源时序数据库 Prometheus 作为监控和性能指标信息存储方案，使用 Grafana 作为可视化组件进行展示。
Prometheus 在 TiDB 中的应用 Prometheus 是一个拥有多维度数据模型的、灵活的查询语句的时序数据库。Prometheus 作为热门的开源项目，拥有活跃的社区及众多的成功案例。
Prometheus 提供了多个组件供用户使用。目前，TiDB 使用了以下组件：
 Prometheus Server：用于收集和存储时间序列数据。 Client 代码库：用于定制程序中需要的 Metric。 Alertmanager：用于实现报警机制。  其结构如下图所示：
Grafana 在 TiDB 中的应用 Grafana 是一个开源的 metric 分析及可视化系统。TiDB 使用 Grafana 来展示 TiDB 的各项性能指标。如下图所示：</description>
    </item>
    
    <item>
      <title>TiDB 监控框架概述</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/monitor/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/monitor/overview/</guid>
      <description>TiDB 监控框架概述 TiDB 使用开源时序数据库 Prometheus 作为监控和性能指标信息存储方案，使用 Grafana 作为可视化组件进行展示。
Prometheus 在 TiDB 中的应用 Prometheus 是一个拥有多维度数据模型的、灵活的查询语句的时序数据库。Prometheus 作为热门的开源项目，拥有活跃的社区及众多的成功案例。
Prometheus 提供了多个组件供用户使用。目前，TiDB 使用了以下组件：
 Prometheus Server：用于收集和存储时间序列数据。 Client 代码库：用于定制程序中需要的 Metric。 Alertmanager：用于实现报警机制。  其结构如下图所示：
Grafana 在 TiDB 中的应用 Grafana 是一个开源的 metric 分析及可视化系统。TiDB 使用 Grafana 来展示 TiDB 的各项性能指标。如下图所示：</description>
    </item>
    
    <item>
      <title>TiDB 监控框架概述</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/monitor/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/monitor/overview/</guid>
      <description>TiDB 监控框架概述 TiDB 使用开源时序数据库 Prometheus 作为监控和性能指标信息存储方案，使用 Grafana 作为可视化组件进行展示。
Prometheus 是一个拥有多维度数据模型，灵活的查询语句的时序数据库。Prometheus 作为热门的开源项目，拥有活跃的社区及众多的成功案例。
Prometheus 提供了多个组件供用户使用。目前，我们使用 Prometheus Server，来收集和存储时间序列数据。Client 代码库，在程序中定制需要的 Metric 。Push GateWay 来接收 Client Push 上来的数据，统一供 Prometheus 主服务器抓取。以及 AlertManager 来实现报警机制。其结构如下图：
Grafana 是一个开源的 metric 分析及可视化系统。我们使用 Grafana 来展示 TiDB 的各项性能指标。如下图所示:</description>
    </item>
    
    <item>
      <title>TiDB 监控框架概述</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/monitor/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/monitor/overview/</guid>
      <description>TiDB 监控框架概述 TiDB 使用开源时序数据库 Prometheus 作为监控和性能指标信息存储方案，使用 Grafana 作为可视化组件进行展示。
Prometheus 在 TiDB 中的应用 Prometheus 是一个拥有多维度数据模型的、灵活的查询语句的时序数据库。Prometheus 作为热门的开源项目，拥有活跃的社区及众多的成功案例。
Prometheus 提供了多个组件供用户使用。目前，TiDB 使用了以下组件：
 Prometheus Server：用于收集和存储时间序列数据。 Client 代码库：用于定制程序中需要的 Metric。 Alertmanager：用于实现报警机制。  其结构如下图所示：
Grafana 在 TiDB 中的应用 Grafana 是一个开源的 metric 分析及可视化系统。TiDB 使用 Grafana 来展示 TiDB 的各项性能指标。如下图所示：</description>
    </item>
    
    <item>
      <title>TiDB 研发工程师</title>
      <link>https://pingcap.com/about-cn/recruit/engineering/tidb-engineer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/engineering/tidb-engineer/</guid>
      <description>TiDB 研发工程师 岗位职责：
  负责分布式数据库优化器、执行器、事务引擎、DDL 等相关的设计与开发，文档撰写和新人指导；
  负责分布式数据库 SQL 层的设计，开发和性能优化；
  参与分布式数据库内核系统的设计。
  任职要求：
  三年以上相关领域开发经验，扎实的编程能力，熟悉 C/C++/Go/Java/Python 中的一种；
  对分布式系统的架构和原理有深入的了解；
  熟悉 MySQL/PostgreSQL/Greenplum 等数据库系统实现原理；
  优秀的发现和解决问题能力，良好的沟通能力，具备团队合作精神。
  加分项：
  拥抱开源，对前沿技术有浓厚的热情和探索欲望，有开源项目经历；
  熟悉 MySQL/PostgreSQL/Greenplum 的查询引擎，并阅读过其中的源码。
  待遇：
20K - 45K + 期权，13薪 + 奖金，优秀者可面议
工作地点：
北京，上海，广州，杭州，成都，特别优秀可 Remote</description>
    </item>
    
    <item>
      <title>TiDB 简介</title>
      <link>https://pingcap.com/docs-cn/dev/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/overview/</guid>
      <description>TiDB 简介 TiDB 是 PingCAP 公司设计的开源分布式 HTAP (Hybrid Transactional and Analytical Processing) 数据库，结合了传统的 RDBMS 和 NoSQL 的最佳特性。TiDB 兼容 MySQL，支持无限的水平扩展，具备强一致性和高可用性。TiDB 的目标是为 OLTP (Online Transactional Processing) 和 OLAP (Online Analytical Processing) 场景提供一站式的解决方案。
TiDB 具备如下特性：
  高度兼容 MySQL
大多数情况下，无需修改代码即可从 MySQL 轻松迁移至 TiDB，分库分表后的 MySQL 集群亦可通过 TiDB 工具进行实时迁移。
  水平弹性扩展
通过简单地增加新节点即可实现 TiDB 的水平扩展，按需扩展吞吐或存储，轻松应对高并发、海量数据场景。
  分布式事务
TiDB 100% 支持标准的 ACID 事务。
  真正金融级高可用
相比于传统主从 (M-S) 复制方案，基于 Raft 的多数派选举协议可以提供金融级的 100% 数据强一致性保证，且在不丢失大多数副本的前提下，可以实现故障的自动恢复 (auto-failover)，无需人工介入。
  一站式 HTAP 解决方案</description>
    </item>
    
    <item>
      <title>TiDB 简介</title>
      <link>https://pingcap.com/docs-cn/stable/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/overview/</guid>
      <description>TiDB 简介 TiDB 是 PingCAP 公司设计的开源分布式 HTAP (Hybrid Transactional and Analytical Processing) 数据库，结合了传统的 RDBMS 和 NoSQL 的最佳特性。TiDB 兼容 MySQL，支持无限的水平扩展，具备强一致性和高可用性。TiDB 的目标是为 OLTP (Online Transactional Processing) 和 OLAP (Online Analytical Processing) 场景提供一站式的解决方案。
TiDB 具备如下特性：
  高度兼容 MySQL
大多数情况下，无需修改代码即可从 MySQL 轻松迁移至 TiDB，分库分表后的 MySQL 集群亦可通过 TiDB 工具进行实时迁移。
  水平弹性扩展
通过简单地增加新节点即可实现 TiDB 的水平扩展，按需扩展吞吐或存储，轻松应对高并发、海量数据场景。
  分布式事务
TiDB 100% 支持标准的 ACID 事务。
  真正金融级高可用
相比于传统主从 (M-S) 复制方案，基于 Raft 的多数派选举协议可以提供金融级的 100% 数据强一致性保证，且在不丢失大多数副本的前提下，可以实现故障的自动恢复 (auto-failover)，无需人工介入。
  一站式 HTAP 解决方案</description>
    </item>
    
    <item>
      <title>TiDB 简介</title>
      <link>https://pingcap.com/docs-cn/v2.1/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/overview/</guid>
      <description>TiDB 简介 TiDB 是 PingCAP 公司设计的开源分布式 HTAP (Hybrid Transactional and Analytical Processing) 数据库，结合了传统的 RDBMS 和 NoSQL 的最佳特性。TiDB 兼容 MySQL，支持无限的水平扩展，具备强一致性和高可用性。TiDB 的目标是为 OLTP (Online Transactional Processing) 和 OLAP (Online Analytical Processing) 场景提供一站式的解决方案。
TiDB 具备如下特性：
  高度兼容 MySQL
大多数情况下，无需修改代码即可从 MySQL 轻松迁移至 TiDB，分库分表后的 MySQL 集群亦可通过 TiDB 工具进行实时迁移。
  水平弹性扩展
通过简单地增加新节点即可实现 TiDB 的水平扩展，按需扩展吞吐或存储，轻松应对高并发、海量数据场景。
  分布式事务
TiDB 100% 支持标准的 ACID 事务。
  真正金融级高可用
相比于传统主从 (M-S) 复制方案，基于 Raft 的多数派选举协议可以提供金融级的 100% 数据强一致性保证，且在不丢失大多数副本的前提下，可以实现故障的自动恢复 (auto-failover)，无需人工介入。
  一站式 HTAP 解决方案</description>
    </item>
    
    <item>
      <title>TiDB 简介</title>
      <link>https://pingcap.com/docs-cn/v3.1/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/overview/</guid>
      <description>TiDB 简介 TiDB 是 PingCAP 公司设计的开源分布式 HTAP (Hybrid Transactional and Analytical Processing) 数据库，结合了传统的 RDBMS 和 NoSQL 的最佳特性。TiDB 兼容 MySQL，支持无限的水平扩展，具备强一致性和高可用性。TiDB 的目标是为 OLTP (Online Transactional Processing) 和 OLAP (Online Analytical Processing) 场景提供一站式的解决方案。
TiDB 具备如下特性：
  高度兼容 MySQL
大多数情况下，无需修改代码即可从 MySQL 轻松迁移至 TiDB，分库分表后的 MySQL 集群亦可通过 TiDB 工具进行实时迁移。
  水平弹性扩展
通过简单地增加新节点即可实现 TiDB 的水平扩展，按需扩展吞吐或存储，轻松应对高并发、海量数据场景。
  分布式事务
TiDB 100% 支持标准的 ACID 事务。
  真正金融级高可用
相比于传统主从 (M-S) 复制方案，基于 Raft 的多数派选举协议可以提供金融级的 100% 数据强一致性保证，且在不丢失大多数副本的前提下，可以实现故障的自动恢复 (auto-failover)，无需人工介入。
  一站式 HTAP 解决方案</description>
    </item>
    
    <item>
      <title>TiDB 系统表</title>
      <link>https://pingcap.com/docs-cn/dev/reference/system-databases/mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/system-databases/mysql/</guid>
      <description>TiDB 系统表 本文档主要介绍 TiDB 支持的系统表。
权限系统表 这些系统表里面包含了用户账户以及相应的授权信息：
 user 用户账户，全局权限，以及其它一些非权限的列 db 数据库级别的权限 tables_priv 表级的权限 columns_priv 列级的权限  服务端帮助信息系统表  help_topic 目前为空  统计信息相关系统表  stats_buckets 统计信息的桶 stats_histograms 统计信息的直方图 stats_meta 表的元信息，比如总行数和修改数  GC Worker 相关系统表  gc_delete_range  其它系统表  GLOBAL_VARIABLES 全局系统变量表 tidb 用于 TiDB 在 bootstrap 的时候记录相关版本信息  </description>
    </item>
    
    <item>
      <title>TiDB 系统表</title>
      <link>https://pingcap.com/docs-cn/stable/reference/system-databases/mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/system-databases/mysql/</guid>
      <description>TiDB 系统表 本文档主要介绍 TiDB 支持的系统表。
权限系统表 这些系统表里面包含了用户账户以及相应的授权信息：
 user 用户账户，全局权限，以及其它一些非权限的列 db 数据库级别的权限 tables_priv 表级的权限 columns_priv 列级的权限  服务端帮助信息系统表  help_topic 目前为空  统计信息相关系统表  stats_buckets 统计信息的桶 stats_histograms 统计信息的直方图 stats_meta 表的元信息，比如总行数和修改数  GC Worker 相关系统表  gc_delete_range  其它系统表  GLOBAL_VARIABLES 全局系统变量表 tidb 用于 TiDB 在 bootstrap 的时候记录相关版本信息  </description>
    </item>
    
    <item>
      <title>TiDB 系统表</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/system-databases/mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/system-databases/mysql/</guid>
      <description>TiDB 系统表 本文档主要介绍 TiDB 支持的系统表。
权限系统表 这些系统表里面包含了用户账户以及相应的授权信息：
 user 用户账户，全局权限，以及其它一些非权限的列 db 数据库级别的权限 tables_priv 表级的权限 columns_priv 列级的权限  服务端帮助信息系统表  help_topic 目前为空  统计信息相关系统表  stats_buckets 统计信息的桶 stats_histograms 统计信息的直方图 stats_meta 表的元信息，比如总行数和修改数  GC Worker 相关系统表  gc_delete_range  其它系统表  GLOBAL_VARIABLES 全局系统变量表 tidb 用于 TiDB 在 bootstrap 的时候记录相关版本信息  </description>
    </item>
    
    <item>
      <title>TiDB 系统表</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/system-databases/mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/system-databases/mysql/</guid>
      <description>TiDB 系统表 本文档主要介绍 TiDB 支持的系统表。
权限系统表 这些系统表里面包含了用户账户以及相应的授权信息：
 user 用户账户，全局权限，以及其它一些非权限的列 db 数据库级别的权限 tables_priv 表级的权限 columns_priv 列级的权限  服务端帮助信息系统表  help_topic 目前为空  统计信息相关系统表  stats_buckets 统计信息的桶 stats_histograms 统计信息的直方图 stats_meta 表的元信息，比如总行数和修改数  GC Worker 相关系统表  gc_delete_range  其它系统表  GLOBAL_VARIABLES 全局系统变量表 tidb 用于 TiDB 在 bootstrap 的时候记录相关版本信息  </description>
    </item>
    
    <item>
      <title>TiDB 证书鉴权使用指南</title>
      <link>https://pingcap.com/docs-cn/dev/reference/security/cert-based-authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/security/cert-based-authentication/</guid>
      <description>了解使用 TiDB 的证书鉴权功能。</description>
    </item>
    
    <item>
      <title>TiDB 证书鉴权使用指南</title>
      <link>https://pingcap.com/docs-cn/stable/reference/security/cert-based-authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/security/cert-based-authentication/</guid>
      <description>了解使用 TiDB 的证书鉴权功能。</description>
    </item>
    
    <item>
      <title>TiDB 证书鉴权使用指南</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/security/cert-based-authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/security/cert-based-authentication/</guid>
      <description>了解使用 TiDB 的证书鉴权功能。</description>
    </item>
    
    <item>
      <title>TiDB 路线图</title>
      <link>https://pingcap.com/docs-cn/stable/roadmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/roadmap/</guid>
      <description>TiDB 路线图 TiDB  优化器  统计信息优化 Multi-Column Statistics Cascades Planner Plan Management SQL Tuning Advisor Robust Access Path Selection：增加启发式规则，提升 OLTP 场景中索引选择正确率 Adaptive Query Optimization   执行引擎  算子并行化 内存控制 并发控制 Shuffle 算子 Vectorized 表达式计算 UDF   SQL 功能  支持 View 支持窗口函数 支持 Common Table Expression 支持 Hash 分区表 支持 utf8_general_ci collation   DDL 改进  支持 Table Lock 支持 Change column type 支持单条语句中多个 DDL 操作 支持不可见索引（invisible index）   支持插件系统  支持白名单插件 支持审计日志插件 支持 RBAC 插件 支持诊断插件   支持 Query Tracing 支持行列混合存储引擎 支持 New Storage Row Format，提升性能并减小内存占用 RowID 实现非整数类型 事务  减少读写冲突 优化事务调度机制 改善模型，降低延迟 支持最小事务 (like the mini-transaction of InnoDB)    TiKV  Raft  Region Merge - 合并小的 Region 以减少开销 Local Read Thread - 把读请求放在一个单独的线程处理 批量 Region Split - 加速大的 Region 的分裂 Raft Learner - 支持 Raft learner 使得成员变更过程更加平滑 Raft Pre-voter - 支持 Raft Pre-vote 避免网络隔离带来不必要的选举 Joint Consensus - 安全地进行多个成员变更 多线程 Raftstore - 在多个线程处理不同 Region 的 Raft 逻辑 多线程 Apply Pool - 在多个线程执行不同 Region 已经提交了的命令   Engine  Titan - 把大的 key-values 从 LSM-Tree 中分离出来 可拔插的 Engine 接口 - 简化接口逻辑并且提供可扩展性   Storage  在 scheduler 里做流控提前避免 write stall   Transaction  优化事务冲突 分布式 GC - 把 MVCC 垃圾回收的逻辑分布到 TiKV 控制   Coprocessor  Streaming - 把大的数据集切成小块返回以减少内存消耗 Chunk Execution - 按 chunk 的方式来处理数据以提高性能 请求跟踪 - 提供单个请求执行的详细信息   Tools  TiKV Importer - 通过直接导入 SST 文件的方式加速数据导入   Client  提供 Rust 版本的 TiKV client gRPC 消息批量化 - 减少消息交互的开销    PD  Namespace 完善  不同 Namespace 或者 Table 配置不同的副本策略   Table Region 分散调度 调度支持优先级，更加可控 使用机器学习优化调度 优化 Region 元信息存储 - 把元信息存储在一个独立的存储引擎里  TiSpark  Limit/Order 下推 DAG 接口接入（废除 Select 接口） Index Join 和并行 merge join Data Federation（桥接其他数据源，最好能和社区同步，这个接进来可以比较好扩展 Usecase，如果再做一个 InputFormat 适配就可以接 Hive 和 Presto 这些 Hadoop 上的数仓）  Tools  集群部署工具 高性能数据导入工具（lightning） 集群备份和恢复工具（包括全量+增量备份，Mydumper + drainer/reparo） 改进 TiDB Binlog 架构 数据在线迁移工具（Syncer 升级版） 集群诊断和分析工具  </description>
    </item>
    
    <item>
      <title>TiDB 路线图</title>
      <link>https://pingcap.com/docs-cn/v2.1/roadmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/roadmap/</guid>
      <description>TiDB 路线图 TiDB  优化器  统计信息优化 Multi-Column Statistics Cascades Planner Plan Management SQL Tuning Advisor Robust Access Path Selection：增加启发式规则，提升 OLTP 场景中索引选择正确率 Adaptive Query Optimization   执行引擎  算子并行化 内存控制 并发控制 Shuffle 算子 Vectorized 表达式计算 UDF   SQL 功能  支持 View 支持窗口函数 支持 Common Table Expression 支持 Hash 分区表 支持 utf8_general_ci collation   DDL 改进  支持 Table Lock 支持 Change column type 支持单条语句中多个 DDL 操作 支持不可见索引（invisible index）   支持插件系统  支持白名单插件 支持审计日志插件 支持 RBAC 插件 支持诊断插件   支持 Query Tracing 支持行列混合存储引擎 支持 New Storage Row Format，提升性能并减小内存占用 RowID 实现非整数类型 事务  减少读写冲突 优化事务调度机制 改善模型，降低延迟 支持最小事务 (like the mini-transaction of InnoDB)    TiKV  Raft  Region Merge - 合并小的 Region 以减少开销 Local Read Thread - 把读请求放在一个单独的线程处理 批量 Region Split - 加速大的 Region 的分裂 Raft Learner - 支持 Raft learner 使得成员变更过程更加平滑 Raft Pre-voter - 支持 Raft Pre-vote 避免网络隔离带来不必要的选举 Joint Consensus - 安全地进行多个成员变更 多线程 Raftstore - 在多个线程处理不同 Region 的 Raft 逻辑 多线程 Apply Pool - 在多个线程执行不同 Region 已经提交了的命令   Engine  Titan - 把大的 key-values 从 LSM-Tree 中分离出来 可拔插的 Engine 接口 - 简化接口逻辑并且提供可扩展性   Storage  在 scheduler 里做流控提前避免 write stall   Transaction  优化事务冲突 分布式 GC - 把 MVCC 垃圾回收的逻辑分布到 TiKV 控制   Coprocessor  Streaming - 把大的数据集切成小块返回以减少内存消耗 Chunk Execution - 按 chunk 的方式来处理数据以提高性能 请求跟踪 - 提供单个请求执行的详细信息   Tools  TiKV Importer - 通过直接导入 SST 文件的方式加速数据导入   Client  提供 Rust 版本的 TiKV client gRPC 消息批量化 - 减少消息交互的开销    PD  Namespace 完善  不同 Namespace 或者 Table 配置不同的副本策略   Table Region 分散调度 调度支持优先级，更加可控 使用机器学习优化调度 优化 Region 元信息存储 - 把元信息存储在一个独立的存储引擎里  TiSpark  Limit/Order 下推 DAG 接口接入（废除 Select 接口） Index Join 和并行 merge join Data Federation（桥接其他数据源，最好能和社区同步，这个接进来可以比较好扩展 Usecase，如果再做一个 InputFormat 适配就可以接 Hive 和 Presto 这些 Hadoop 上的数仓）  Tools  集群部署工具 高性能数据导入工具（lightning） 集群备份和恢复工具（包括全量+增量备份，Mydumper + drainer/reparo） 改进 TiDB Binlog 架构 数据在线迁移工具（Syncer 升级版） 集群诊断和分析工具  </description>
    </item>
    
    <item>
      <title>TiDB 路线图</title>
      <link>https://pingcap.com/docs-cn/v3.1/roadmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/roadmap/</guid>
      <description>TiDB 路线图 TiDB  优化器  统计信息优化 Multi-Column Statistics Cascades Planner Plan Management SQL Tuning Advisor Robust Access Path Selection：增加启发式规则，提升 OLTP 场景中索引选择正确率 Adaptive Query Optimization   执行引擎  算子并行化 内存控制 并发控制 Shuffle 算子 Vectorized 表达式计算 UDF   SQL 功能  支持 View 支持窗口函数 支持 Common Table Expression 支持 Hash 分区表 支持 utf8_general_ci collation   DDL 改进  支持 Table Lock 支持 Change column type 支持单条语句中多个 DDL 操作 支持不可见索引（invisible index）   支持插件系统  支持白名单插件 支持审计日志插件 支持 RBAC 插件 支持诊断插件   支持 Query Tracing 支持行列混合存储引擎 支持 New Storage Row Format，提升性能并减小内存占用 RowID 实现非整数类型 事务  减少读写冲突 优化事务调度机制 改善模型，降低延迟 支持最小事务 (like the mini-transaction of InnoDB)    TiKV  Raft  Region Merge - 合并小的 Region 以减少开销 Local Read Thread - 把读请求放在一个单独的线程处理 批量 Region Split - 加速大的 Region 的分裂 Raft Learner - 支持 Raft learner 使得成员变更过程更加平滑 Raft Pre-voter - 支持 Raft Pre-vote 避免网络隔离带来不必要的选举 Joint Consensus - 安全地进行多个成员变更 多线程 Raftstore - 在多个线程处理不同 Region 的 Raft 逻辑 多线程 Apply Pool - 在多个线程执行不同 Region 已经提交了的命令   Engine  Titan - 把大的 key-values 从 LSM-Tree 中分离出来 可拔插的 Engine 接口 - 简化接口逻辑并且提供可扩展性   Storage  在 scheduler 里做流控提前避免 write stall   Transaction  优化事务冲突 分布式 GC - 把 MVCC 垃圾回收的逻辑分布到 TiKV 控制   Coprocessor  Streaming - 把大的数据集切成小块返回以减少内存消耗 Chunk Execution - 按 chunk 的方式来处理数据以提高性能 请求跟踪 - 提供单个请求执行的详细信息   Tools  TiKV Importer - 通过直接导入 SST 文件的方式加速数据导入   Client  提供 Rust 版本的 TiKV client gRPC 消息批量化 - 减少消息交互的开销    PD  Namespace 完善  不同 Namespace 或者 Table 配置不同的副本策略   Table Region 分散调度 调度支持优先级，更加可控 使用机器学习优化调度 优化 Region 元信息存储 - 把元信息存储在一个独立的存储引擎里  TiSpark  Limit/Order 下推 DAG 接口接入（废除 Select 接口） Index Join 和并行 merge join Data Federation（桥接其他数据源，最好能和社区同步，这个接进来可以比较好扩展 Usecase，如果再做一个 InputFormat 适配就可以接 Hive 和 Presto 这些 Hadoop 上的数仓）  Tools  集群部署工具 高性能数据导入工具（lightning） 集群备份和恢复工具（包括全量+增量备份，Mydumper + drainer/reparo） 改进 TiDB Binlog 架构 数据在线迁移工具（Syncer 升级版） 集群诊断和分析工具  </description>
    </item>
    
    <item>
      <title>TiDB 软件和硬件环境建议配置</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/deploy/hardware-recommendations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/deploy/hardware-recommendations/</guid>
      <description>TiDB 软件和硬件环境建议配置 TiDB 作为一款开源分布式 NewSQL 数据库，可以很好的部署和运行在 Intel 架构服务器环境及主流虚拟化环境，并支持绝大多数的主流硬件网络。作为一款高性能数据库系统，TiDB 支持主流的 Linux 操作系统环境。
Linux 操作系统版本要求    Linux 操作系统平台 版本     Red Hat Enterprise Linux 7.3 及以上   CentOS 7.3 及以上   Oracle Enterprise Linux 7.3 及以上   Ubuntu LTS 16.04 及以上     注意：
 TiDB 只支持 Red Hat 兼容内核 (RHCK) 的 Oracle Enterprise Linux，不支持 Oracle Enterprise Linux 提供的 Unbreakable Enterprise Kernel。 TiDB 在 CentOS 7.</description>
    </item>
    
    <item>
      <title>TiDB 软件和硬件环境建议配置</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/deploy/hardware-recommendations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/deploy/hardware-recommendations/</guid>
      <description>TiDB 软件和硬件环境建议配置 TiDB 作为一款开源分布式 NewSQL 数据库，可以很好的部署和运行在 Intel 架构服务器环境及主流虚拟化环境，并支持绝大多数的主流硬件网络。作为一款高性能数据库系统，TiDB 支持主流的 Linux 操作系统环境。
Linux 操作系统版本要求    Linux 操作系统平台 版本     Red Hat Enterprise Linux 7.3 及以上   CentOS 7.3 及以上   Oracle Enterprise Linux 7.3 及以上   Ubuntu LTS 16.04 及以上     注意：
 TiDB 只支持 Red Hat 兼容内核 (RHCK) 的 Oracle Enterprise Linux，不支持 Oracle Enterprise Linux 提供的 Unbreakable Enterprise Kernel。 TiDB 在 CentOS 7.</description>
    </item>
    
    <item>
      <title>TiDB 软件和硬件环境建议配置</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/deploy/hardware-recommendations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/deploy/hardware-recommendations/</guid>
      <description>TiDB 软件和硬件环境建议配置 概述 TiDB 作为一款开源分布式 NewSQL 数据库，可以很好的部署和运行在 Intel 架构服务器环境及主流虚拟化环境，并支持绝大多数的主流硬件网络。作为一款高性能数据库系统，TiDB 支持主流的 Linux 操作系统环境。
Linux 操作系统版本要求    Linux 操作系统平台 版本     Red Hat Enterprise Linux 7.3 及以上   CentOS 7.3 及以上   Oracle Enterprise Linux 7.3 及以上   Ubuntu LTS 16.04 及以上     注意：
 TiDB 只支持 Red Hat 兼容内核 (RHCK) 的 Oracle Enterprise Linux，不支持 Oracle Enterprise Linux 提供的 Unbreakable Enterprise Kernel。 TiDB 在 CentOS 7.</description>
    </item>
    
    <item>
      <title>TiDB 软件和硬件环境建议配置</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/deploy/hardware-recommendations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/deploy/hardware-recommendations/</guid>
      <description>TiDB 软件和硬件环境建议配置 TiDB 作为一款开源分布式 NewSQL 数据库，可以很好的部署和运行在 Intel 架构服务器环境及主流虚拟化环境，并支持绝大多数的主流硬件网络。作为一款高性能数据库系统，TiDB 支持主流的 Linux 操作系统环境。
Linux 操作系统版本要求    Linux 操作系统平台 版本     Red Hat Enterprise Linux 7.3 及以上   CentOS 7.3 及以上   Oracle Enterprise Linux 7.3 及以上   Ubuntu LTS 16.04 及以上     注意：
 TiDB 只支持 Red Hat 兼容内核 (RHCK) 的 Oracle Enterprise Linux，不支持 Oracle Enterprise Linux 提供的 Unbreakable Enterprise Kernel。 TiDB 在 CentOS 7.</description>
    </item>
    
    <item>
      <title>TiDB 配置参数</title>
      <link>https://pingcap.com/docs-cn/dev/reference/configuration/tidb-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/configuration/tidb-server/configuration/</guid>
      <description>TiDB 配置参数 在启动 TiDB 时，你可以使用命令行参数或环境变量来配置 TiDB。本文将详细介绍 TiDB 的命令行启动参数。TiDB 的默认端口为 4000（客户端请求）与 10080（状态报告）。
--advertise-address  登录 TiDB 的 IP 地址 默认：&amp;rdquo;&amp;rdquo; 必须确保用户和集群中的其他机器都能够访问到该 IP 地址  --binlog-socket  TiDB 服务使用 unix socket file 方式接受内部连接，如 Pump 服务 默认：&amp;rdquo;&amp;rdquo; 例如，可以使用 &amp;ldquo;/tmp/pump.sock&amp;rdquo; 来接受 Pump unix socket file 通信  --config  配置文件 默认：&amp;rdquo;&amp;rdquo; 如果你指定了配置文件，TiDB 会首先读取配置文件的配置。如果对应的配置在命令行参数里面也存在，TiDB 就会使用命令行参数的配置来覆盖配置文件中的配置。详细的配置项请参阅 TiDB 配置文件描述。  --cors  用于设置 TiDB HTTP 状态服务的 Access-Control-Allow-Origin 默认：&amp;rdquo;&amp;rdquo;  --host  TiDB 服务监听的 host 默认：&amp;ldquo;0.0.0.0&amp;rdquo; 0.0.0.0 默认会监听所有的网卡地址。如果有多块网卡，可以指定对外提供服务的网卡，如 192.</description>
    </item>
    
    <item>
      <title>TiDB 配置参数</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/configuration/tidb-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/configuration/tidb-server/configuration/</guid>
      <description>TiDB 配置参数 TiDB 通过命令行参数或环境变量配置。默认的 TiDB 端口为 4000（客户端请求）与 10080（状态报告）。
--advertise-address  登录 TiDB 的 IP 地址 默认：&amp;rdquo;&amp;rdquo; 必须确保用户和集群中的其他机器都能够访问到该 IP 地址  --binlog-socket  TiDB 服务使用 unix socket file 方式接受内部连接，如 Pump 服务 默认：&amp;rdquo;&amp;rdquo; 例如，可以使用 &amp;ldquo;/tmp/pump.sock&amp;rdquo; 来接受 Pump unix socket file 通信  --config  配置文件 默认：&amp;rdquo;&amp;rdquo; 如果你指定了配置文件，TiDB 会首先读取配置文件的配置。然后如果对应的配置在命令行参数里面也存在，TiDB 就会使用命令行参数的配置来覆盖配置文件里面的。详细的配置项请参阅 TiDB 配置文件描述。  --host  TiDB 服务监听 host 默认：&amp;ldquo;0.0.0.0&amp;rdquo; TiDB 服务会监听这个 host 0.0.0.0 默认会监听所有的网卡地址。如果有多块网卡，可以指定对外提供服务的网卡，如 192.168.100.113  -L  Log 级别 默认：&amp;ldquo;info&amp;rdquo; 我们能选择 debug, info, warn, error 或者 fatal  --log-file  Log 文件 默认：&amp;rdquo;&amp;rdquo; 如果未设置该参数，log 会默认输出到 &amp;ldquo;stderr&amp;rdquo;；如果设置了该参数，log 会输出到对应的文件里面。每天凌晨，log 会自动轮转使用一个新的文件，并且将以前的文件改名备份  --log-slow-query  慢查询日志文件路径 默认：&amp;rdquo;&amp;rdquo; 如果未设置该参数，log 会默认输出到 --log-file 指定的文件中  --metrics-addr  Prometheus Pushgateway 地址 默认：&amp;rdquo;&amp;rdquo; 如果该参数为空，TiDB 不会将统计信息推送给 Pushgateway。参数格式示例：--metrics-addr=192.</description>
    </item>
    
    <item>
      <title>TiDB 配置文件描述</title>
      <link>https://pingcap.com/docs-cn/dev/reference/configuration/tidb-server/configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/configuration/tidb-server/configuration-file/</guid>
      <description>TiDB 配置文件描述 TiDB 配置文件比命令行参数支持更多的选项。你可以在 config/config.toml.example 找到默认值的配置文件，重命名为 config.toml 即可。本文档只介绍未包含在命令行参数中的参数。
split-table  为每个 table 建立单独的 Region。 默认值：true 如果需要创建大量的表，我们建议把这个参数设置为 false。  mem-quota-query  单条 SQL 语句可以占用的最大内存阈值。 默认值：1073741824 超过该值的请求会被 oom-action 定义的行为所处理。 该值作为系统变量 tidb_mem_quota_query 的初始值。  oom-use-tmp-storage  设置是否在单条 SQL 语句的内存使用超出 mem-quota-query 限制时为某些算子启用临时磁盘。 默认值：true  tmp-storage-path  单条 SQL 语句的内存使用超出 mem-quota-query 限制时，某些算子的临时磁盘存储位置。 默认值：&amp;lt;操作系统临时文件夹&amp;gt;/tidb/tmp-storage 此配置仅在 oom-use-tmp-storage 为 true 时有效。  oom-action  当 TiDB 中单条 SQL 的内存使用超出 mem-quota-query 限制且不能再利用临时磁盘时的行为。 默认值：&amp;ldquo;cancel&amp;rdquo; 目前合法的选项为 [&amp;ldquo;log&amp;rdquo;, &amp;ldquo;cancel&amp;rdquo;]。设置为 &amp;ldquo;log&amp;rdquo; 时，仅输出日志。设置为 &amp;ldquo;cancel&amp;rdquo; 时，取消执行该 SQL 操作，并输出日志。  enable-streaming  开启 coprocessor 的 streaming 获取数据模式。 默认值：false  lower-case-table-names  这个选项可以设置 TiDB 的系统变量 lower_case_table_names 的值。 默认值：2 具体可以查看 MySQL 关于这个变量的描述   注意：</description>
    </item>
    
    <item>
      <title>TiDB 配置文件描述</title>
      <link>https://pingcap.com/docs-cn/stable/reference/configuration/tidb-server/configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/configuration/tidb-server/configuration-file/</guid>
      <description>TiDB 配置文件描述 TiDB 配置文件比命令行参数支持更多的选项。你可以在 config/config.toml.example 找到默认值的配置文件，重命名为 config.toml 即可。本文档只介绍未包含在命令行参数中的参数。
split-table  为每个 table 建立单独的 Region。 默认值：true 如果需要创建大量的表，我们建议把这个参数设置为 false。  oom-action  指定 TiDB 发生 out-of-memory 错误时的操作。 默认值：&amp;ldquo;log&amp;rdquo; 现在合法的选项是 [&amp;ldquo;log&amp;rdquo;, &amp;ldquo;cancel&amp;rdquo;]，如果为 &amp;ldquo;log&amp;rdquo;，仅仅是打印日志，不作实质处理。如果为 &amp;ldquo;cancel&amp;rdquo;，我们会取消执行这个操作，并且输出日志。  mem-quota-query  单条 SQL 语句可以占用的最大内存阈值。 默认值：34359738368 超过该值的请求会被 oom-action 定义的行为所处理。  enable-streaming  开启 coprocessor 的 streaming 获取数据模式。 默认值：false  lower-case-table-names  这个选项可以设置 TiDB 的系统变量 lower_case_table_names 的值。 默认值：2 具体可以查看 MySQL 关于这个变量的描述   注意：
目前 TiDB 只支持将该选项的值设为 2，即按照大小写来保存表名，按照小写来比较（不区分大小写）。
 lease  DDL 租约超时时间。 默认值：45s 单位：秒  compatible-kill-query  设置 KILL 语句的兼容性。 默认值：false TiDB 中 KILL xxx 的行为和 MySQL 中的行为不相同。为杀死一条查询，在 TiDB 里需要加上 TIDB 关键词，即 KILL TIDB xxx。但如果把 compatible-kill-query 设置为 true，则不需要加上 TIDB 关键词。 这种区别很重要，因为当用户按下 Ctrl+C 时，MySQL 命令行客户端的默认行为是：创建与后台的新连接，并在该新连接中执行 KILL 语句。如果负载均衡器或代理已将该新连接发送到与原始会话不同的 TiDB 服务器实例，则该错误会话可能被终止，从而导致使用 TiDB 集群的业务中断。只有当您确定在 KILL 语句中引用的连接正好位于 KILL 语句发送到的服务器上时，才可以启用 compatible-kill-query。  check-mb4-value-in-utf8  开启检查 utf8mb4 字符的开关，如果开启此功能，字符集是 utf8，且在 utf8 插入 mb4 字符，系统将会报错。 默认值：true  treat-old-version-utf8-as-utf8mb4  将旧表中的 utf8 字符集当成 utf8mb4的开关。 默认值：true  alter-primary-key  用于控制添加或者删除主键功能（在 3.</description>
    </item>
    
    <item>
      <title>TiDB 配置文件描述</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/configuration/tidb-server/configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/configuration/tidb-server/configuration-file/</guid>
      <description>TiDB 配置文件描述 TiDB 配置文件比命令行参数支持更多的选项。你可以在 config/config.toml.example 找到默认值的配置文件，重命名为 config.toml 即可。本文档只介绍未包含在命令行参数中的参数。
split-table  为每个 table 建立单独的 Region。 默认值：true 如果需要创建大量的表，我们建议把这个参数设置为 false。  oom-action  指定 TiDB 发生 out-of-memory 错误时的操作。 默认值：&amp;ldquo;log&amp;rdquo; 现在合法的选项是 [&amp;ldquo;log&amp;rdquo;, &amp;ldquo;cancel&amp;rdquo;]，如果为 &amp;ldquo;log&amp;rdquo;，仅仅是打印日志，不作实质处理。如果为 &amp;ldquo;cancel&amp;rdquo;，我们会取消执行这个操作，并且输出日志。  mem-quota-query  单条 SQL 语句可以占用的最大内存阈值。 默认值：34359738368 超过该值的请求会被 oom-action 定义的行为所处理。  enable-streaming  开启 coprocessor 的 streaming 获取数据模式。 默认值：false  lower-case-table-names  这个选项可以设置 TiDB 的系统变量 lower_case_table_names 的值。 默认值：2 具体可以查看 MySQL 关于这个变量的描述   注意：
目前 TiDB 只支持将该选项的值设为 2，即按照大小写来保存表名，按照小写来比较（不区分大小写）。
 lease  DDL 租约超时时间。 默认值：45s 单位：秒  compatible-kill-query  设置 KILL 语句的兼容性。 默认值：false TiDB 中 KILL xxx 的行为和 MySQL 中的行为不相同。为杀死一条查询，在 TiDB 里需要加上 TIDB 关键词，即 KILL TIDB xxx。但如果把 compatible-kill-query 设置为 true，则不需要加上 TIDB 关键词。 这种区别很重要，因为当用户按下 Ctrl+C 时，MySQL 命令行客户端的默认行为是：创建与后台的新连接，并在该新连接中执行 KILL 语句。如果负载均衡器或代理已将该新连接发送到与原始会话不同的 TiDB 服务器实例，则该错误会话可能被终止，从而导致使用 TiDB 集群的业务中断。只有当您确定在 KILL 语句中引用的连接正好位于 KILL 语句发送到的服务器上时，才可以启用 compatible-kill-query。  check-mb4-value-in-utf8  开启检查 utf8mb4 字符的开关，如果开启此功能，字符集是 utf8，且在 utf8 插入 mb4 字符，系统将会报错。 默认值：true  treat-old-version-utf8-as-utf8mb4  将旧表中的 utf8 字符集当成 utf8mb4的开关。 默认值：true  log 日志相关的配置项。</description>
    </item>
    
    <item>
      <title>TiDB 配置文件描述</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/configuration/tidb-server/configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/configuration/tidb-server/configuration-file/</guid>
      <description>TiDB 配置文件描述 TiDB 配置文件比命令行参数支持更多的选项。你可以在 config/config.toml.example 找到默认值的配置文件，重命名为 config.toml 即可。本文档只介绍未包含在命令行参数中的参数。
split-table  为每个 table 建立单独的 Region。 默认值：true 如果需要创建大量的表，我们建议把这个参数设置为 false。  oom-action  指定 TiDB 发生 out-of-memory 错误时的操作。 默认值：&amp;ldquo;log&amp;rdquo; 现在合法的选项是 [&amp;ldquo;log&amp;rdquo;, &amp;ldquo;cancel&amp;rdquo;]，如果为 &amp;ldquo;log&amp;rdquo;，仅仅是打印日志，不作实质处理。如果为 &amp;ldquo;cancel&amp;rdquo;，我们会取消执行这个操作，并且输出日志。  mem-quota-query  单条 SQL 语句可以占用的最大内存阈值。 默认值：34359738368 超过该值的请求会被 oom-action 定义的行为所处理。  enable-streaming  开启 coprocessor 的 streaming 获取数据模式。 默认值：false  lower-case-table-names  这个选项可以设置 TiDB 的系统变量 lower_case_table_names 的值。 默认值：2 具体可以查看 MySQL 关于这个变量的描述   注意：
目前 TiDB 只支持将该选项的值设为 2，即按照大小写来保存表名，按照小写来比较（不区分大小写）。
 lease  DDL 租约超时时间。 默认值：45s 单位：秒  compatible-kill-query  设置 KILL 语句的兼容性。 默认值：false TiDB 中 KILL xxx 的行为和 MySQL 中的行为不相同。为杀死一条查询，在 TiDB 里需要加上 TIDB 关键词，即 KILL TIDB xxx。但如果把 compatible-kill-query 设置为 true，则不需要加上 TIDB 关键词。 这种区别很重要，因为当用户按下 Ctrl+C 时，MySQL 命令行客户端的默认行为是：创建与后台的新连接，并在该新连接中执行 KILL 语句。如果负载均衡器或代理已将该新连接发送到与原始会话不同的 TiDB 服务器实例，则该错误会话可能被终止，从而导致使用 TiDB 集群的业务中断。只有当您确定在 KILL 语句中引用的连接正好位于 KILL 语句发送到的服务器上时，才可以启用 compatible-kill-query。  check-mb4-value-in-utf8  开启检查 utf8mb4 字符的开关，如果开启此功能，字符集是 utf8，且在 utf8 插入 mb4 字符，系统将会报错。 默认值：true  treat-old-version-utf8-as-utf8mb4  将旧表中的 utf8 字符集当成 utf8mb4的开关。 默认值：true  alter-primary-key  用于控制添加或者删除主键功能。 默认值：false 默认情况下，不支持增删主键。将此变量被设置为 true 后，支持增删主键功能。不过对在此开关开启前已经存在的表，且主键是整型类型时，即使之后开启此开关也不支持对此列表删除主键。  log 日志相关的配置项。</description>
    </item>
    
    <item>
      <title>TiDB 重要监控指标详解</title>
      <link>https://pingcap.com/docs-cn/dev/reference/key-monitoring-metrics/tidb-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/key-monitoring-metrics/tidb-dashboard/</guid>
      <description>TiDB 重要监控指标详解 使用 Ansible 部署 TiDB 集群时，一键部署监控系统 (Prometheus/Grafana)，监控架构请看 TiDB 监控框架概述。
目前 Grafana Dashboard 整体分为 PD、TiDB、TiKV、Node_exporter、Overview 等，TiDB 分为 TiDB 和 TiDB Summary 面板（其中 TiDB 面板包含 TiDB Summary 面板的内容）。
以下为 TiDB Dashboard 部分监控说明：
说明   Query Summary
 Duration：SQL 执行的时间 QPS：每个 TiDB 上的 SQL 执行结果按照 OK/Error 统计 Statement OPS：SQL 执行数量统计（包含 SELECT、INSERT、UPDATE 等） QPS By Instance：每个 TiDB 上的 QPS Failed Query OPM：每个 TiDB 实例上，执行 SQL 语句发生错误按照错误类型的统计（例如语法错误、主键冲突等） Slow query：慢查询处理时间统计（整个慢查询耗时、Coprocessor 耗时、Coprocessor 调度等待时间） 999/99/95/80 Duration：不同类型的 SQL 语句执行耗时统计（不同百分位）    Query Detail</description>
    </item>
    
    <item>
      <title>TiDB 重要监控指标详解</title>
      <link>https://pingcap.com/docs-cn/stable/reference/key-monitoring-metrics/tidb-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/key-monitoring-metrics/tidb-dashboard/</guid>
      <description>TiDB 重要监控指标详解 使用 Ansible 部署 TiDB 集群时，一键部署监控系统 (Prometheus/Grafana)，监控架构请看 TiDB 监控框架概述。
目前 Grafana Dashboard 整体分为 PD、TiDB、TiKV、Node_exporter、Overview 等，TiDB 分为 TiDB 和 TiDB Summary 面板（其中 TiDB 面板包含 TiDB Summary 面板的内容）。
以下为 TiDB Dashboard 部分监控说明：
说明   Query Summary
 Duration：SQL 执行的时间 QPS：每个 TiDB 上的 SQL 执行结果按照 OK/Error 统计 Statement OPS：SQL 执行数量统计（包含 SELECT、INSERT、UPDATE 等） QPS By Instance：每个 TiDB 上的 QPS Failed Query OPM：每个 TiDB 实例上，执行 SQL 语句发生错误按照错误类型的统计（例如语法错误、主键冲突等） Slow query：慢查询处理时间统计（整个慢查询耗时、Coprocessor 耗时、Coprocessor 调度等待时间） 999/99/95/80 Duration：不同类型的 SQL 语句执行耗时统计（不同百分位）    Query Detail</description>
    </item>
    
    <item>
      <title>TiDB 重要监控指标详解</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/key-monitoring-metrics/tidb-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/key-monitoring-metrics/tidb-dashboard/</guid>
      <description>TiDB 重要监控指标详解 使用 Ansible 部署 TiDB 集群时，一键部署监控系统 (Prometheus/Grafana)，监控架构请看 TiDB 监控框架概述。
目前 Grafana Dashboard 整体分为 PD、TiDB、TiKV、Node_exporter、Overview 等。
以下为 TiDB Dashboard 部分监控说明：
说明   Query Summary
 Duration：SQL 执行的时间 Statement OPS：SQL 执行数量统计（包含 SELECT、INSERT、UPDATE 等） QPS By Instance：每个 TiDB 上的 QPS    Query Detail
 Internal SQL OPS：TiDB 内部 SQL 语句执行数量统计    Server
 Connection count：每个 TiDB 的连接数 Failed Query OPM：失败 SQL 的统计，例如语法错误、主键冲突等 Heap Memory Usage：每个 TiDB 使用的堆内存大小 Events OPM：统计关键事件，例如 start，close，graceful-shutdown，kill，hang 等 Uncommon Error OPM：TiDB 非正常错误的统计，包括 panic，binlog 写失败等    Transaction</description>
    </item>
    
    <item>
      <title>TiDB 重要监控指标详解</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/key-monitoring-metrics/tidb-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/key-monitoring-metrics/tidb-dashboard/</guid>
      <description>TiDB 重要监控指标详解 使用 Ansible 部署 TiDB 集群时，一键部署监控系统 (Prometheus/Grafana)，监控架构请看 TiDB 监控框架概述。
目前 Grafana Dashboard 整体分为 PD、TiDB、TiKV、Node_exporter、Overview 等，TiDB 分为 TiDB 和 TiDB Summary 面板（其中 TiDB 面板包含 TiDB Summary 面板的内容）。
以下为 TiDB Dashboard 部分监控说明：
说明   Query Summary
 Duration：SQL 执行的时间 QPS：每个 TiDB 上的 SQL 执行结果按照 OK/Error 统计 Statement OPS：SQL 执行数量统计（包含 SELECT、INSERT、UPDATE 等） QPS By Instance：每个 TiDB 上的 QPS Failed Query OPM：每个 TiDB 实例上，执行 SQL 语句发生错误按照错误类型的统计（例如语法错误、主键冲突等） Slow query：慢查询处理时间统计（整个慢查询耗时、Coprocessor 耗时、Coprocessor 调度等待时间） 999/99/95/80 Duration：不同类型的 SQL 语句执行耗时统计（不同百分位）    Query Detail</description>
    </item>
    
    <item>
      <title>TiDB 集群扩容缩容方案</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/scale/horizontally/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/scale/horizontally/</guid>
      <description>TiDB 集群扩容缩容方案 TiDB 集群可以在不影响线上服务的情况下动态进行扩容和缩容。
 注意：
如果使用 Ansible 部署 TiDB 集群，请参考使用 Ansible 扩容缩容。
 下面分别介绍如何增加或者删除 PD，TiKV 以及 TiDB 的节点。
下面用到的 pd-ctl 文档可以参考 pd-control。
PD 假设现在我们有三个 PD 服务，详细信息如下：
   Name ClientUrls PeerUrls     pd1 http://host1:2379|http://host1:2380|    pd2 http://host2:2379|http://host2:2380|    pd3 http://host3:2379|http://host3:2380|     我们可以通过 pd-ctl 来查看当前所有 PD 节点的信息：
 ./pd-ctl -u http://host1:2379 -i &amp;gt;&amp;gt; member 动态添加节点 我们可以使用 join 参数，将一个新的 PD 服务加入到现有的 PD 集群里面。 如果我们需要添加 pd4，只需要在 --join 参数里面填入当前 PD 集群任意一个 PD 服务的 client url，比如：</description>
    </item>
    
    <item>
      <title>TiDB 集群扩容缩容方案</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/scale/horizontally/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/scale/horizontally/</guid>
      <description>TiDB 集群扩容缩容方案 TiDB 集群可以在不影响线上服务的情况下动态进行扩容和缩容。
 注意：
如果使用 Ansible 部署 TiDB 集群，请参考使用 Ansible 扩容缩容。
 下面分别介绍如何增加或者删除 PD，TiKV 以及 TiDB 的节点。
下面用到的 pd-ctl 文档可以参考 pd-control。
PD 假设现在我们有三个 PD 服务，详细信息如下：
   Name ClientUrls PeerUrls     pd1 http://host1:2379|http://host1:2380|    pd2 http://host2:2379|http://host2:2380|    pd3 http://host3:2379|http://host3:2380|     我们可以通过 pd-ctl 来查看当前所有 PD 节点的信息：
 ./pd-ctl -u http://host1:2379 -i &amp;gt;&amp;gt; member 动态添加节点 我们可以使用 join 参数，将一个新的 PD 服务加入到现有的 PD 集群里面。 如果我们需要添加 pd4，只需要在 --join 参数里面填入当前 PD 集群任意一个 PD 服务的 client url，比如：</description>
    </item>
    
    <item>
      <title>TiDB 集群扩容缩容方案</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/scale/horizontally/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/scale/horizontally/</guid>
      <description>TiDB 集群扩容缩容方案 TiDB 集群可以在不影响线上服务的情况下动态进行扩容和缩容。
 注意：
如果使用 Ansible 部署 TiDB 集群，请参考使用 Ansible 扩容缩容。
 下面分别介绍如何增加或者删除 PD，TiKV 以及 TiDB 的节点。
下面用到的 pd-ctl 文档可以参考 pd-control。
PD 假设现在我们有三个 PD 服务，详细信息如下：
   Name ClientUrls PeerUrls     pd1 http://host1:2379|http://host1:2380|    pd2 http://host2:2379|http://host2:2380|    pd3 http://host3:2379|http://host3:2380|     我们可以通过 pd-ctl 来查看当前所有 PD 节点的信息：
./pd-ctl -u http://host1:2379 -i &amp;gt;&amp;gt; member 动态添加节点 我们可以使用 join 参数，将一个新的 PD 服务加入到现有的 PD 集群里面。 如果我们需要添加 pd4，只需要在 --join 参数里面填入当前 PD 集群任意一个 PD 服务的 client url，比如：</description>
    </item>
    
    <item>
      <title>TiDB 集群扩容缩容方案</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/scale/horizontally/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/scale/horizontally/</guid>
      <description>TiDB 集群扩容缩容方案 TiDB 集群可以在不影响线上服务的情况下动态进行扩容和缩容。
 注意：
如果使用 Ansible 部署 TiDB 集群，请参考使用 Ansible 扩容缩容。
 下面分别介绍如何增加或者删除 PD，TiKV 以及 TiDB 的节点。
下面用到的 pd-ctl 文档可以参考 pd-control。
PD 假设现在我们有三个 PD 服务，详细信息如下：
   Name ClientUrls PeerUrls     pd1 http://host1:2379|http://host1:2380|    pd2 http://host2:2379|http://host2:2380|    pd3 http://host3:2379|http://host3:2380|     我们可以通过 pd-ctl 来查看当前所有 PD 节点的信息：
 ./pd-ctl -u http://host1:2379 -i &amp;gt;&amp;gt; member 动态添加节点 我们可以使用 join 参数，将一个新的 PD 服务加入到现有的 PD 集群里面。 如果我们需要添加 pd4，只需要在 --join 参数里面填入当前 PD 集群任意一个 PD 服务的 client url，比如：</description>
    </item>
    
    <item>
      <title>TiDB 集群报警规则</title>
      <link>https://pingcap.com/docs-cn/dev/reference/alert-rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/alert-rules/</guid>
      <description>TiDB 集群中各组件的报警规则详解。</description>
    </item>
    
    <item>
      <title>TiDB 集群报警规则</title>
      <link>https://pingcap.com/docs-cn/stable/reference/alert-rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/alert-rules/</guid>
      <description>TiDB 集群中各组件的报警规则详解。</description>
    </item>
    
    <item>
      <title>TiDB 集群报警规则</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/alert-rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/alert-rules/</guid>
      <description>TiDB 集群中各组件的报警规则详解。</description>
    </item>
    
    <item>
      <title>TiDB 集群报警规则</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/alert-rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/alert-rules/</guid>
      <description>TiDB 集群中各组件的报警规则详解。</description>
    </item>
    
    <item>
      <title>TiDB 集群故障诊断</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/troubleshoot/cluster-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/troubleshoot/cluster-setup/</guid>
      <description>TiDB 集群故障诊断 当试用 TiDB 遇到问题时，请先参考本篇文档。如果问题未解决，请按文档要求收集必要的信息通过 Github 提供给 TiDB 开发者。
如何给 TiDB 开发者报告错误 当使用 TiDB 遇到问题并且通过后面所列信息无法解决时，请收集以下信息并创建新 Issue:
 具体的出错信息以及正在执行的操作 当前所有组件的状态 出问题组件 log 中的 error/fatal/panic 信息 机器配置以及部署拓扑 dmesg 中 TiDB 组件相关的问题  数据库连接不上 首先请确认集群的各项服务是否已经启动，包括 tidb-server、pd-server、tikv-server。请用 ps 命令查看所有进程是否在。如果某个组件的进程已经不在了，请参考对应的章节排查错误。
如果所有的进程都在，请查看 tidb-server 的日志，看是否有报错？常见的错误包括：
  InformationSchema is out of date
无法连接 tikv-server，请检查 pd-server 以及 tikv-server 的状态和日志。
  panic
程序有错误，请将具体的 panic log 提供给 TiDB 开发者。
如果是清空数据并重新部署服务，请确认以下信息：
  pd-server、tikv-server 数据都已清空
tikv-server 存储具体的数据，pd-server 存储 tikv-server 中数据的的元信息。如果只清空 pd-server 或只清空 tikv-server 的数据，会导致两边数据不匹配。</description>
    </item>
    
    <item>
      <title>TiDB 集群故障诊断</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/troubleshoot/cluster-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/troubleshoot/cluster-setup/</guid>
      <description>TiDB 集群故障诊断 当试用 TiDB 遇到问题时，请先参考本篇文档。如果问题未解决，请按文档要求收集必要的信息通过 Github 提供给 TiDB 开发者。
如何给 TiDB 开发者报告错误 当使用 TiDB 遇到问题并且通过后面所列信息无法解决时，请收集以下信息并创建新 Issue:
 具体的出错信息以及正在执行的操作 当前所有组件的状态 出问题组件 log 中的 error/fatal/panic 信息 机器配置以及部署拓扑 dmesg 中 TiDB 组件相关的问题  数据库连接不上 首先请确认集群的各项服务是否已经启动，包括 tidb-server、pd-server、tikv-server。请用 ps 命令查看所有进程是否在。如果某个组件的进程已经不在了，请参考对应的章节排查错误。
如果所有的进程都在，请查看 tidb-server 的日志，看是否有报错？常见的错误包括：
  InformationSchema is out of date
无法连接 tikv-server，请检查 pd-server 以及 tikv-server 的状态和日志。
  panic
程序有错误，请将具体的 panic log 提供给 TiDB 开发者。
如果是清空数据并重新部署服务，请确认以下信息：
  pd-server、tikv-server 数据都已清空
tikv-server 存储具体的数据，pd-server 存储 tikv-server 中数据的的元信息。如果只清空 pd-server 或只清空 tikv-server 的数据，会导致两边数据不匹配。</description>
    </item>
    
    <item>
      <title>TiDB 集群故障诊断</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/troubleshoot/cluster-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/troubleshoot/cluster-setup/</guid>
      <description>TiDB 集群故障诊断 当试用 TiDB 遇到问题时，请先参考本篇文档。如果问题未解决，请按文档要求收集必要的信息通过 Github 提供给 TiDB 开发者。
如何给 TiDB 开发者报告错误 当使用 TiDB 遇到问题并且通过后面所列信息无法解决时，请收集以下信息并创建新 Issue:
 具体的出错信息以及正在执行的操作 当前所有组件的状态 出问题组件 log 中的 error/fatal/panic 信息 机器配置以及部署拓扑 dmesg 中 TiDB 组件相关的问题  数据库连接不上 首先请确认集群的各项服务是否已经启动，包括 tidb-server、pd-server、tikv-server。请用 ps 命令查看所有进程是否在。如果某个组件的进程已经不在了，请参考对应的章节排查错误。
如果所有的进程都在，请查看 tidb-server 的日志，看是否有报错？常见的错误包括：
  InformationSchema is out of date
无法连接 tikv-server，请检查 pd-server 以及 tikv-server 的状态和日志。
  panic
程序有错误，请将具体的 panic log 提供给 TiDB 开发者。
如果是清空数据并重新部署服务，请确认以下信息：
  pd-server、tikv-server 数据都已清空
tikv-server 存储具体的数据，pd-server 存储 tikv-server 中数据的的元信息。如果只清空 pd-server 或只清空 tikv-server 的数据，会导致两边数据不匹配。</description>
    </item>
    
    <item>
      <title>TiDB 集群故障诊断</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/troubleshoot/cluster-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/troubleshoot/cluster-setup/</guid>
      <description>TiDB 集群故障诊断 当试用 TiDB 遇到问题时，请先参考本篇文档。如果问题未解决，请按文档要求收集必要的信息通过 Github 提供给 TiDB 开发者。
如何给 TiDB 开发者报告错误 当使用 TiDB 遇到问题并且通过后面所列信息无法解决时，请收集以下信息并创建新 Issue:
 具体的出错信息以及正在执行的操作 当前所有组件的状态 出问题组件 log 中的 error/fatal/panic 信息 机器配置以及部署拓扑 dmesg 中 TiDB 组件相关的问题  数据库连接不上 首先请确认集群的各项服务是否已经启动，包括 tidb-server、pd-server、tikv-server。请用 ps 命令查看所有进程是否在。如果某个组件的进程已经不在了，请参考对应的章节排查错误。
如果所有的进程都在，请查看 tidb-server 的日志，看是否有报错？常见的错误包括：
  InformationSchema is out of date
无法连接 tikv-server，请检查 pd-server 以及 tikv-server 的状态和日志。
  panic
程序有错误，请将具体的 panic log 提供给 TiDB 开发者。
如果是清空数据并重新部署服务，请确认以下信息：
  pd-server、tikv-server 数据都已清空
tikv-server 存储具体的数据，pd-server 存储 tikv-server 中数据的的元信息。如果只清空 pd-server 或只清空 tikv-server 的数据，会导致两边数据不匹配。</description>
    </item>
    
    <item>
      <title>TiDB 集群监控</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/monitor/monitor-a-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/monitor/monitor-a-cluster/</guid>
      <description>TiDB 集群监控 TiDB 提供了以下两种接口来监控集群状态：
 状态接口：通过 HTTP 接口对外汇报组件的信息。 Metrics 接口：使用 Prometheus 记录组件中各种操作的详细信息，使用 Grafana 进行可视化展示。  使用状态接口 状态接口用于监控组件的一些基本信息，并且可以作为 keepalive 的监测接口。另外，通过 PD 的状态接口可以看到整个 TiKV 集群的详细信息。
TiDB Server  TiDB API 地址：http://${host}:${port} 默认端口：10080 各类 api_name 详细信息：参见 TiDB API 文档  以下示例中，通过访问 http://${host}:${port}/status 获取当前 TiDB Server 的状态，并判断该 TiDB Server 是否存活。结果以 JSON 格式返回：
 curl http://127.0.0.1:10080/status { connections: 0, # 当前 TiDB Server 上的客户端连接数 version: &amp;#34;5.7.25-TiDB-v3.0.0-beta-250-g778c3f4a5&amp;#34;, # TiDB 版本号 git_hash: &amp;#34;778c3f4a5a716880bcd1d71b257c8165685f0d70&amp;#34; # TiDB 当前代码的 Git Hash } PD Server  PD API 地址：http://${host}:${port}/pd/api/v1/${api_name} 默认端口：2379 各类 api_name 详细信息：参见 PD API Doc  通过该接口可以获取当前所有 TiKV 节点的状态以及负载均衡信息。下面以一个单节点的 TiKV 集群为例，说明用户需要了解的信息：</description>
    </item>
    
    <item>
      <title>TiDB 集群监控</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/monitor/monitor-a-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/monitor/monitor-a-cluster/</guid>
      <description>TiDB 集群监控 TiDB 提供了以下两种接口来监控集群状态：
 状态接口：通过 HTTP 接口对外汇报组件的信息。 Metrics 接口：使用 Prometheus 记录组件中各种操作的详细信息，使用 Grafana 进行可视化展示。  使用状态接口 状态接口用于监控组件的一些基本信息，并且可以作为 keepalive 的监测接口。另外，通过 PD 的状态接口可以看到整个 TiKV 集群的详细信息。
TiDB Server  TiDB API 地址：http://${host}:${port} 默认端口：10080 各类 api_name 详细信息：参见 TiDB API 文档  以下示例中，通过访问 http://${host}:${port}/status 获取当前 TiDB Server 的状态，并判断该 TiDB Server 是否存活。结果以 JSON 格式返回：
 curl http://127.0.0.1:10080/status { connections: 0, # 当前 TiDB Server 上的客户端连接数 version: &amp;#34;5.7.25-TiDB-v3.0.0-beta-250-g778c3f4a5&amp;#34;, # TiDB 版本号 git_hash: &amp;#34;778c3f4a5a716880bcd1d71b257c8165685f0d70&amp;#34; # TiDB 当前代码的 Git Hash } PD Server  PD API 地址：http://${host}:${port}/pd/api/v1/${api_name} 默认端口：2379 各类 api_name 详细信息：参见 PD API Doc  通过该接口可以获取当前所有 TiKV 节点的状态以及负载均衡信息。下面以一个单节点的 TiKV 集群为例，说明用户需要了解的信息：</description>
    </item>
    
    <item>
      <title>TiDB 集群监控</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/monitor/monitor-a-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/monitor/monitor-a-cluster/</guid>
      <description>TiDB 集群监控 TiDB 集群状态监控目前有两种接口，第一种是通过 HTTP 接口对外汇报组件的信息，我们称之为组件的状态接口；第二种是使用 prometheus 记录组件中各种操作的详细信息，我们称之为 metrics 接口。
组件状态接口 这类接口可以获取组件的一些基本信息，并且可以作为 keepalive 监测接口。另外 PD 的接口可以看到整个 TiKV 集群的详细信息。
TiDB Server TiDB API 地址：http://${host}:${port}。
其中 port 默认为 10080，各类 api_name 详细信息参见 TiDB API Doc。
下面示例中，通过访问 http://${host}:${port}/status 获取当前 TiDB Server 的状态，以及判断是否存活。返回结果为 Json 格式：
curl http://127.0.0.1:10080/status { connections: 0, version: &amp;#34;5.5.31-TiDB-1.0&amp;#34;, git_hash: &amp;#34;b99521846ff6f71f06e2d49a3f98fa1c1d93d91b&amp;#34; }  connections：当前 TiDB Server 上的客户端连接数 version：TiDB 版本号 git_hash：TiDB 当前代码的 Git Hash  PD Server PD API 地址：http://${host}:${port}/pd/api/v1/${api_name}。
其中 port 默认为 2379，各类 api_name 详细信息参见 PD API Doc。</description>
    </item>
    
    <item>
      <title>TiDB 集群监控</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/monitor/monitor-a-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/monitor/monitor-a-cluster/</guid>
      <description>TiDB 集群监控 TiDB 提供了以下两种接口来监控集群状态：
 状态接口：通过 HTTP 接口对外汇报组件的信息。 Metrics 接口：使用 Prometheus 记录组件中各种操作的详细信息，使用 Grafana 进行可视化展示。  使用状态接口 状态接口用于监控组件的一些基本信息，并且可以作为 keepalive 的监测接口。另外，通过 PD 的状态接口可以看到整个 TiKV 集群的详细信息。
TiDB Server  TiDB API 地址：http://${host}:${port} 默认端口：10080 各类 api_name 详细信息：参见 TiDB API 文档  以下示例中，通过访问 http://${host}:${port}/status 获取当前 TiDB Server 的状态，并判断该 TiDB Server 是否存活。结果以 JSON 格式返回：
 curl http://127.0.0.1:10080/status { connections: 0, # 当前 TiDB Server 上的客户端连接数 version: &amp;#34;5.7.25-TiDB-v3.0.0-beta-250-g778c3f4a5&amp;#34;, # TiDB 版本号 git_hash: &amp;#34;778c3f4a5a716880bcd1d71b257c8165685f0d70&amp;#34; # TiDB 当前代码的 Git Hash } PD Server  PD API 地址：http://${host}:${port}/pd/api/v1/${api_name} 默认端口：2379 各类 api_name 详细信息：参见 PD API Doc  通过该接口可以获取当前所有 TiKV 节点的状态以及负载均衡信息。下面以一个单节点的 TiKV 集群为例，说明用户需要了解的信息：</description>
    </item>
    
    <item>
      <title>TiDB 非官方使用指南</title>
      <link>https://pingcap.com/cases-cn/user-message-2019/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/user-message-2019/</guid>
      <description>进入 PingCAP 官网，体验全新的分布式 HTAP 数据库。</description>
    </item>
    
    <item>
      <title>TiDB 高并发写入场景最佳实践</title>
      <link>https://pingcap.com/docs-cn/dev/reference/best-practices/high-concurrency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/best-practices/high-concurrency/</guid>
      <description>了解 TiDB 在高并发写入场景下的最佳实践。</description>
    </item>
    
    <item>
      <title>TiDB 高并发写入场景最佳实践</title>
      <link>https://pingcap.com/docs-cn/stable/reference/best-practices/high-concurrency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/best-practices/high-concurrency/</guid>
      <description>了解 TiDB 在高并发写入场景下的最佳实践。</description>
    </item>
    
    <item>
      <title>TiDB 高并发写入场景最佳实践</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/best-practices/high-concurrency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/best-practices/high-concurrency/</guid>
      <description>了解 TiDB 在高并发写入场景下的最佳实践。</description>
    </item>
    
    <item>
      <title>TiKV Configuration File</title>
      <link>https://pingcap.com/docs/dev/reference/configuration/tikv-server/configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/configuration/tikv-server/configuration-file/</guid>
      <description>Learn the TiKV configuration file.</description>
    </item>
    
    <item>
      <title>TiKV Configuration File</title>
      <link>https://pingcap.com/docs/stable/reference/configuration/tikv-server/configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/configuration/tikv-server/configuration-file/</guid>
      <description>Learn the TiKV configuration file.</description>
    </item>
    
    <item>
      <title>TiKV Configuration File</title>
      <link>https://pingcap.com/docs/v3.1/reference/configuration/tikv-server/configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/configuration/tikv-server/configuration-file/</guid>
      <description>Learn the TiKV configuration file.</description>
    </item>
    
    <item>
      <title>TiKV Configuration Flags</title>
      <link>https://pingcap.com/docs/dev/reference/configuration/tikv-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/configuration/tikv-server/configuration/</guid>
      <description>Learn some configuration flags of TiKV.</description>
    </item>
    
    <item>
      <title>TiKV Configuration Flags</title>
      <link>https://pingcap.com/docs/stable/reference/configuration/tikv-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/configuration/tikv-server/configuration/</guid>
      <description>Learn some configuration flags of TiKV.</description>
    </item>
    
    <item>
      <title>TiKV Configuration Flags</title>
      <link>https://pingcap.com/docs/v2.1/reference/configuration/tikv-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/configuration/tikv-server/configuration/</guid>
      <description>Learn some configuration flags of TiKV.</description>
    </item>
    
    <item>
      <title>TiKV Configuration Flags</title>
      <link>https://pingcap.com/docs/v3.1/reference/configuration/tikv-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/configuration/tikv-server/configuration/</guid>
      <description>Learn some configuration flags of TiKV.</description>
    </item>
    
    <item>
      <title>TiKV Control User Guide</title>
      <link>https://pingcap.com/docs/dev/reference/tools/tikv-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/tikv-control/</guid>
      <description>Use TiKV Control to manage a TiKV cluster.</description>
    </item>
    
    <item>
      <title>TiKV Control User Guide</title>
      <link>https://pingcap.com/docs/stable/reference/tools/tikv-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/tikv-control/</guid>
      <description>Use TiKV Control to manage a TiKV cluster.</description>
    </item>
    
    <item>
      <title>TiKV Control User Guide</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/tikv-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/tikv-control/</guid>
      <description>Use TiKV Control to manage a TiKV cluster.</description>
    </item>
    
    <item>
      <title>TiKV Control User Guide</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/tikv-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/tikv-control/</guid>
      <description>Use TiKV Control to manage a TiKV cluster.</description>
    </item>
    
    <item>
      <title>TiKV Control 使用说明</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/tikv-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/tikv-control/</guid>
      <description>TiKV Control 使用说明 TiKV Control（以下简称 tikv-ctl）是 TiKV 的命令行工具，用于管理 TiKV 集群。
编译 TiKV 的同时也会编译 tikv-ctl 命令。如果通过 Ansible 部署集群，则对应的 tidb-ansible/resources/bin 目录下会存在 tikv-ctl 二进制文件。如果使用二进制文件部署集群，bin 目录下会包含 tikv-ctl 文件及 tidb-server、pd-server、以及 tikv-server 等其他文件。
通用参数 tikv-ctl 提供以下两种运行模式：
  远程模式。通过 --host 选项接受 TiKV 的服务地址作为参数。在此模式下，如果 TiKV 启用了 SSL，则 tikv-ctl 也需要指定相关的证书文件，例如：
 tikv-ctl --ca-path ca.pem --cert-path client.pem --key-path client-key.pem --host 127.0.0.1:20160 &amp;lt;subcommands&amp;gt; 某些情况下，tikv-ctl 与 PD 进行通信，而不与 TiKV 通信。此时你需要使用 --pd 选项而非 --host 选项，例如：
 tikv-ctl --pd 127.0.0.1:2379 compact-cluster store:&amp;#34;127.0.0.1:20160&amp;#34; compact db:KV cf:default range:([], []) success!</description>
    </item>
    
    <item>
      <title>TiKV Control 使用说明</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/tikv-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/tikv-control/</guid>
      <description>TiKV Control 使用说明 TiKV Control（以下简称 tikv-ctl）是 TiKV 的命令行工具，用于管理 TiKV 集群。
编译 TiKV 的同时也会编译 tikv-ctl 命令。如果通过 Ansible 部署集群，则对应的 tidb-ansible/resources/bin 目录下会存在 tikv-ctl 二进制文件。如果使用二进制文件部署集群，bin 目录下会包含 tikv-ctl 文件及 tidb-server、pd-server、以及 tikv-server 等其他文件。
通用参数 tikv-ctl 提供以下两种运行模式：
  远程模式。通过 --host 选项接受 TiKV 的服务地址作为参数。在此模式下，如果 TiKV 启用了 SSL，则 tikv-ctl 也需要指定相关的证书文件，例如：
 tikv-ctl --ca-path ca.pem --cert-path client.pem --key-path client-key.pem --host 127.0.0.1:20160 &amp;lt;subcommands&amp;gt; 某些情况下，tikv-ctl 与 PD 进行通信，而不与 TiKV 通信。此时你需要使用 --pd 选项而非 --host 选项，例如：
 tikv-ctl --pd 127.0.0.1:2379 compact-cluster store:&amp;#34;127.0.0.1:20160&amp;#34; compact db:KV cf:default range:([], []) success!</description>
    </item>
    
    <item>
      <title>TiKV Control 使用说明</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/tikv-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/tikv-control/</guid>
      <description>TiKV Control 使用说明 TiKV Control（以下简称 tikv-ctl）是 TiKV 的命令行工具，用于管理 TiKV 集群。
编译 TiKV 的同时也会编译 tikv-ctl 命令。如果通过 Ansible 部署集群，则对应的 tidb-ansible/resources/bin 目录下会存在 tikv-ctl 二进制文件。如果使用二进制文件部署集群，bin 目录下会包含 tikv-ctl 文件及 tidb-server、pd-server、以及 tikv-server 等其他文件。
通用参数 tikv-ctl 提供以下两种运行模式：
  远程模式。通过 --host 选项接受 TiKV 的服务地址作为参数。在此模式下，如果 TiKV 启用了 SSL，则 tikv-ctl 也需要指定相关的证书文件，例如：
$ tikv-ctl --ca-path ca.pem --cert-path client.pem --key-path client-key.pem --host 127.0.0.1:20160 &amp;lt;subcommands&amp;gt; 某些情况下，tikv-ctl 与 PD 进行通信，而不与 TiKV 通信。此时你需要使用 --pd 选项而非 --host 选项，例如：
$ tikv-ctl --pd 127.0.0.1:2379 compact-cluster store:&amp;#34;127.0.0.1:20160&amp;#34; compact db:KV cf:default range:([], []) success!</description>
    </item>
    
    <item>
      <title>TiKV Control 使用说明</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/tikv-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/tikv-control/</guid>
      <description>TiKV Control 使用说明 TiKV Control（以下简称 tikv-ctl）是 TiKV 的命令行工具，用于管理 TiKV 集群。
编译 TiKV 的同时也会编译 tikv-ctl 命令。如果通过 Ansible 部署集群，则对应的 tidb-ansible/resources/bin 目录下会存在 tikv-ctl 二进制文件。如果使用二进制文件部署集群，bin 目录下会包含 tikv-ctl 文件及 tidb-server、pd-server、以及 tikv-server 等其他文件。
通用参数 tikv-ctl 提供以下两种运行模式：
  远程模式。通过 --host 选项接受 TiKV 的服务地址作为参数。在此模式下，如果 TiKV 启用了 SSL，则 tikv-ctl 也需要指定相关的证书文件，例如：
 tikv-ctl --ca-path ca.pem --cert-path client.pem --key-path client-key.pem --host 127.0.0.1:20160 &amp;lt;subcommands&amp;gt; 某些情况下，tikv-ctl 与 PD 进行通信，而不与 TiKV 通信。此时你需要使用 --pd 选项而非 --host 选项，例如：
 tikv-ctl --pd 127.0.0.1:2379 compact-cluster store:&amp;#34;127.0.0.1:20160&amp;#34; compact db:KV cf:default range:([], []) success!</description>
    </item>
    
    <item>
      <title>TiKV 性能参数调优</title>
      <link>https://pingcap.com/docs-cn/dev/reference/performance/tune-tikv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/performance/tune-tikv/</guid>
      <description>TiKV 性能参数调优 本文档用于描述如何根据机器配置情况来调整 TiKV 的参数，使 TiKV 的性能达到最优。
TiKV 最底层使用的是 RocksDB 做为持久化存储，所以 TiKV 的很多性能相关的参数都是与 RocksDB 相关的。TiKV 使用了两个 RocksDB 实例，默认 RocksDB 实例存储 KV 数据，Raft RocksDB 实例（简称 RaftDB）存储 Raft 数据。
TiKV 使用了 RocksDB 的 Column Families (CF) 特性。
  默认 RocksDB 实例将 KV 数据存储在内部的 default、write 和 lock 3 个 CF 内。
 default CF 存储的是真正的数据，与其对应的参数位于 [rocksdb.defaultcf] 项中； write CF 存储的是数据的版本信息 (MVCC) 以及索引相关的数据，相关的参数位于 [rocksdb.writecf] 项中； lock CF 存储的是锁信息，系统使用默认参数。    Raft RocksDB 实例存储 Raft log。</description>
    </item>
    
    <item>
      <title>TiKV 性能参数调优</title>
      <link>https://pingcap.com/docs-cn/stable/reference/performance/tune-tikv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/performance/tune-tikv/</guid>
      <description>TiKV 性能参数调优 本文档用于描述如何根据机器配置情况来调整 TiKV 的参数，使 TiKV 的性能达到最优。
TiKV 最底层使用的是 RocksDB 做为持久化存储，所以 TiKV 的很多性能相关的参数都是与 RocksDB 相关的。TiKV 使用了两个 RocksDB 实例，默认 RocksDB 实例存储 KV 数据，Raft RocksDB 实例（简称 RaftDB）存储 Raft 数据。
TiKV 使用了 RocksDB 的 Column Families (CF) 特性。
  默认 RocksDB 实例将 KV 数据存储在内部的 default、write 和 lock 3 个 CF 内。
 default CF 存储的是真正的数据，与其对应的参数位于 [rocksdb.defaultcf] 项中； write CF 存储的是数据的版本信息 (MVCC) 以及索引相关的数据，相关的参数位于 [rocksdb.writecf] 项中； lock CF 存储的是锁信息，系统使用默认参数。    Raft RocksDB 实例存储 Raft log。</description>
    </item>
    
    <item>
      <title>TiKV 性能参数调优</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/performance/tune-tikv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/performance/tune-tikv/</guid>
      <description>TiKV 性能参数调优 本文档用于描述如何根据机器配置情况来调整 TiKV 的参数，使 TiKV 的性能达到最优。
TiKV 最底层使用的是 RocksDB 做为持久化存储，所以 TiKV 的很多性能相关的参数都是与 RocksDB 相关的。TiKV 使用了两个 RocksDB 实例，默认 RocksDB 实例存储 KV 数据，Raft RocksDB 实例（简称 RaftDB）存储 Raft 数据。
TiKV 使用了 RocksDB 的 Column Families (CF) 特性。
  默认 RocksDB 实例将 KV 数据存储在内部的 default、write 和 lock 3 个 CF 内。
 default CF 存储的是真正的数据，与其对应的参数位于 [rocksdb.defaultcf] 项中； write CF 存储的是数据的版本信息 (MVCC) 以及索引相关的数据，相关的参数位于 [rocksdb.writecf] 项中； lock CF 存储的是锁信息，系统使用默认参数。    Raft RocksDB 实例存储 Raft log。</description>
    </item>
    
    <item>
      <title>TiKV 性能参数调优</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/performance/tune-tikv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/performance/tune-tikv/</guid>
      <description>TiKV 性能参数调优 本文档用于描述如何根据机器配置情况来调整 TiKV 的参数，使 TiKV 的性能达到最优。
TiKV 最底层使用的是 RocksDB 做为持久化存储，所以 TiKV 的很多性能相关的参数都是与 RocksDB 相关的。TiKV 使用了两个 RocksDB 实例，默认 RocksDB 实例存储 KV 数据，Raft RocksDB 实例（简称 RaftDB）存储 Raft 数据。
TiKV 使用了 RocksDB 的 Column Families (CF) 特性。
  默认 RocksDB 实例将 KV 数据存储在内部的 default、write 和 lock 3 个 CF 内。
 default CF 存储的是真正的数据，与其对应的参数位于 [rocksdb.defaultcf] 项中； write CF 存储的是数据的版本信息 (MVCC) 以及索引相关的数据，相关的参数位于 [rocksdb.writecf] 项中； lock CF 存储的是锁信息，系统使用默认参数。    Raft RocksDB 实例存储 Raft log。</description>
    </item>
    
    <item>
      <title>TiKV 研发工程师</title>
      <link>https://pingcap.com/about-cn/recruit/engineering/tikv-engineer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/engineering/tikv-engineer/</guid>
      <description>TiKV 研发工程师 岗位职责：
  负责分布式数据库 TiKV 相关的设计，开发；
  负责构建分布式压力测试框架，稳定性测试框架。
  任职要求：
  三年以上相关领域开发经验，扎实的编程能力，精通 C/C++/Go/Rust 中的一种；
  对分布式系统的架构和原理有比较深入的了解；
  优秀的发现和解决问题能力，良好的沟通能力，具备团队合作精神。
  加分项：
  拥抱开源，对前沿技术有浓厚的热情和探索欲望，有开源项目经历；
  熟悉 Paxos/Raft 等分布式一致性算法；
  熟悉分布式事务模型；
  熟悉操作系统底层知识，有 TCP/IP、IO 等系统调优经验。
  待遇：
20K - 45K + 期权，13薪 + 奖金，优秀者可面议
工作地点：
北京，上海，广州，杭州，成都，特别优秀可 Remote</description>
    </item>
    
    <item>
      <title>TiKV 配置参数</title>
      <link>https://pingcap.com/docs-cn/dev/reference/configuration/tikv-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/configuration/tikv-server/configuration/</guid>
      <description>TiKV 配置参数 TiKV 的命令行参数支持一些可读性好的单位转换。
 文件大小（以 bytes 为单位）：KB, MB, GB, TB, PB（也可以全小写） 时间（以毫秒为单位）：ms, s, m, h  -A, --addr  TiKV 监听地址 默认：&amp;ldquo;127.0.0.1:20160&amp;rdquo; 如果部署一个集群，--addr 必须指定当前主机的 IP 地址，例如 &amp;ldquo;192.168.100.113:20160&amp;rdquo;，如果是运行在 docker 则需要指定为 &amp;ldquo;0.0.0.0:20160&amp;rdquo;  --advertise-addr  TiKV 对外访问地址。 默认：${addr} 在某些情况下，譬如 docker，或者 NAT 网络环境，客户端并不能通过 TiKV 自己监听的地址来访问到 TiKV，这时候，你就可以设置 advertise addr 来让 客户端访问 例如，docker 内部 IP 地址为 172.17.0.1，而宿主机的 IP 地址为 192.168.100.113 并且设置了端口映射 -p 20160:20160，那么可以设置为 --advertise-addr=&amp;quot;192.168.100.113:20160&amp;rdquo;，客户端可以通过 192.168.100.113:20160 来找到这个服务  -C, --config  配置文件 默认：&amp;rdquo;&amp;rdquo; 如果你指定了配置文件，TiKV 会首先读取配置文件的配置。然后如果对应的配置在命令行参数里面也存在，TiKV 就会使用命令行参数的配置来覆盖配置文件里面的  --capacity  TiKV 存储数据的容量 默认：0 (无限) PD 需要使用这个值来对整个集群做 balance 操作。（提示：你可以使用 10GB 来替代 10737418240，从而简化参数的传递）  --data-dir  TiKV 数据存储路径 默认：&amp;quot;/tmp/tikv/store&amp;rdquo;  -L, --log  Log 级别 默认：&amp;ldquo;info&amp;rdquo; 我们能选择 trace, debug, info, warn, error, 或者 off  --log-file  Log 文件 默认：&amp;rdquo;&amp;rdquo; 如果没设置这个参数，log 会默认输出到 &amp;ldquo;stderr&amp;rdquo;，如果设置了，log 就会输出到对应的文件里面，在每天凌晨，log 会自动轮转使用一个新的文件，并且将以前的文件改名备份  --pd  PD 地址列表。 默认：&amp;rdquo;&amp;rdquo; TiKV 必须使用这个值连接 PD，才能正常工作。使用逗号来分隔多个 PD 地址，例如： 192.</description>
    </item>
    
    <item>
      <title>TiKV 配置参数</title>
      <link>https://pingcap.com/docs-cn/stable/reference/configuration/tikv-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/configuration/tikv-server/configuration/</guid>
      <description>TiKV 配置参数 TiKV 的命令行参数支持一些可读性好的单位转换。
 文件大小（以 bytes 为单位）：KB, MB, GB, TB, PB（也可以全小写） 时间（以毫秒为单位）：ms, s, m, h  -A, --addr  TiKV 监听地址 默认：&amp;ldquo;127.0.0.1:20160&amp;rdquo; 如果部署一个集群，--addr 必须指定当前主机的 IP 地址，例如 &amp;ldquo;192.168.100.113:20160&amp;rdquo;，如果是运行在 docker 则需要指定为 &amp;ldquo;0.0.0.0:20160&amp;rdquo;  --advertise-addr  TiKV 对外访问地址。 默认：${addr} 在某些情况下，譬如 docker，或者 NAT 网络环境，客户端并不能通过 TiKV 自己监听的地址来访问到 TiKV，这时候，你就可以设置 advertise addr 来让 客户端访问 例如，docker 内部 IP 地址为 172.17.0.1，而宿主机的 IP 地址为 192.168.100.113 并且设置了端口映射 -p 20160:20160，那么可以设置为 --advertise-addr=&amp;quot;192.168.100.113:20160&amp;rdquo;，客户端可以通过 192.168.100.113:20160 来找到这个服务  -C, --config  配置文件 默认：&amp;rdquo;&amp;rdquo; 如果你指定了配置文件，TiKV 会首先读取配置文件的配置。然后如果对应的配置在命令行参数里面也存在，TiKV 就会使用命令行参数的配置来覆盖配置文件里面的  --capacity  TiKV 存储数据的容量 默认：0 (无限) PD 需要使用这个值来对整个集群做 balance 操作。（提示：你可以使用 10GB 来替代 10737418240，从而简化参数的传递）  --data-dir  TiKV 数据存储路径 默认：&amp;quot;/tmp/tikv/store&amp;rdquo;  -L, --log  Log 级别 默认：&amp;ldquo;info&amp;rdquo; 我们能选择 trace, debug, info, warn, error, 或者 off  --log-file  Log 文件 默认：&amp;rdquo;&amp;rdquo; 如果没设置这个参数，log 会默认输出到 &amp;ldquo;stderr&amp;rdquo;，如果设置了，log 就会输出到对应的文件里面，在每天凌晨，log 会自动轮转使用一个新的文件，并且将以前的文件改名备份  --pd  PD 地址列表。 默认：&amp;rdquo;&amp;rdquo; TiKV 必须使用这个值连接 PD，才能正常工作。使用逗号来分隔多个 PD 地址，例如： 192.</description>
    </item>
    
    <item>
      <title>TiKV 配置参数</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/configuration/tikv-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/configuration/tikv-server/configuration/</guid>
      <description>TiKV 配置参数 TiKV 的命令行参数支持一些可读性好的单位转换。
 文件大小（以 bytes 为单位）：KB, MB, GB, TB, PB（也可以全小写） 时间（以毫秒为单位）：ms, s, m, h  -A, --addr  TiKV 监听地址 默认：&amp;ldquo;127.0.0.1:20160&amp;rdquo; 如果部署一个集群，--addr 必须指定当前主机的 IP 地址，例如 &amp;ldquo;192.168.100.113:20160&amp;rdquo;，如果是运行在 docker 则需要指定为 &amp;ldquo;0.0.0.0:20160&amp;rdquo;  --advertise-addr  TiKV 对外访问地址。 默认：${addr} 在某些情况下，譬如 docker，或者 NAT 网络环境，客户端并不能通过 TiKV 自己监听的地址来访问到 TiKV，这时候，你就可以设置 advertise addr 来让 客户端访问 例如，docker 内部 IP 地址为 172.17.0.1，而宿主机的 IP 地址为 192.168.100.113 并且设置了端口映射 -p 20160:20160，那么可以设置为 --advertise-addr=&amp;quot;192.168.100.113:20160&amp;rdquo;，客户端可以通过 192.168.100.113:20160 来找到这个服务  -C, --config  配置文件 默认：&amp;rdquo;&amp;rdquo; 如果你指定了配置文件，TiKV 会首先读取配置文件的配置。然后如果对应的配置在命令行参数里面也存在，TiKV 就会使用命令行参数的配置来覆盖配置文件里面的  --capacity  TiKV 存储数据的容量 默认：0 (无限) PD 需要使用这个值来对整个集群做 balance 操作。（提示：你可以使用 10GB 来替代 10737418240，从而简化参数的传递）  --data-dir  TiKV 数据存储路径 默认：&amp;quot;/tmp/tikv/store&amp;rdquo;  -L, --log  Log 级别 默认：&amp;ldquo;info&amp;rdquo; 我们能选择 trace, debug, info, warn, error, 或者 off  --log-file  Log 文件 默认：&amp;rdquo;&amp;rdquo; 如果没设置这个参数，log 会默认输出到 &amp;ldquo;stderr&amp;rdquo;，如果设置了，log 就会输出到对应的文件里面，在每天凌晨，log 会自动轮转使用一个新的文件，并且将以前的文件改名备份  --pd  PD 地址列表。 默认：&amp;rdquo;&amp;rdquo; TiKV 必须使用这个值连接 PD，才能正常工作。使用逗号来分隔多个 PD 地址，例如： 192.</description>
    </item>
    
    <item>
      <title>TiKV 配置参数</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/configuration/tikv-server/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/configuration/tikv-server/configuration/</guid>
      <description>TiKV 配置参数 TiKV 的命令行参数支持一些可读性好的单位转换。
 文件大小（以 bytes 为单位）：KB, MB, GB, TB, PB（也可以全小写） 时间（以毫秒为单位）：ms, s, m, h  -A, --addr  TiKV 监听地址 默认：&amp;ldquo;127.0.0.1:20160&amp;rdquo; 如果部署一个集群，--addr 必须指定当前主机的 IP 地址，例如 &amp;ldquo;192.168.100.113:20160&amp;rdquo;，如果是运行在 docker 则需要指定为 &amp;ldquo;0.0.0.0:20160&amp;rdquo;  --advertise-addr  TiKV 对外访问地址。 默认：${addr} 在某些情况下，譬如 docker，或者 NAT 网络环境，客户端并不能通过 TiKV 自己监听的地址来访问到 TiKV，这时候，你就可以设置 advertise addr 来让 客户端访问 例如，docker 内部 IP 地址为 172.17.0.1，而宿主机的 IP 地址为 192.168.100.113 并且设置了端口映射 -p 20160:20160，那么可以设置为 --advertise-addr=&amp;quot;192.168.100.113:20160&amp;rdquo;，客户端可以通过 192.168.100.113:20160 来找到这个服务  -C, --config  配置文件 默认：&amp;rdquo;&amp;rdquo; 如果你指定了配置文件，TiKV 会首先读取配置文件的配置。然后如果对应的配置在命令行参数里面也存在，TiKV 就会使用命令行参数的配置来覆盖配置文件里面的  --capacity  TiKV 存储数据的容量 默认：0 (无限) PD 需要使用这个值来对整个集群做 balance 操作。（提示：你可以使用 10GB 来替代 10737418240，从而简化参数的传递）  --data-dir  TiKV 数据存储路径 默认：&amp;quot;/tmp/tikv/store&amp;rdquo;  -L, --log  Log 级别 默认：&amp;ldquo;info&amp;rdquo; 我们能选择 trace, debug, info, warn, error, 或者 off  --log-file  Log 文件 默认：&amp;rdquo;&amp;rdquo; 如果没设置这个参数，log 会默认输出到 &amp;ldquo;stderr&amp;rdquo;，如果设置了，log 就会输出到对应的文件里面，在每天凌晨，log 会自动轮转使用一个新的文件，并且将以前的文件改名备份  --pd  PD 地址列表。 默认：&amp;rdquo;&amp;rdquo; TiKV 必须使用这个值连接 PD，才能正常工作。使用逗号来分隔多个 PD 地址，例如： 192.</description>
    </item>
    
    <item>
      <title>TiKV 配置文件描述</title>
      <link>https://pingcap.com/docs-cn/dev/reference/configuration/tikv-server/configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/configuration/tikv-server/configuration-file/</guid>
      <description>TiKV 配置文件描述 TiKV 配置文件比命令行参数支持更多的选项。你可以在 etc/config-template.toml 找到默认值的配置文件，重命名为 config.toml 即可。
本文档只阐述未包含在命令行参数中的参数，命令行参数参见 TiKV 配置参数。
status-thread-pool-size  Http API 服务的工作线程数量。 默认值：1 最小值：1  grpc-compression-type  gRPC 消息的压缩算法，取值：none， deflate， gzip。 默认值：none  grpc-concurrency  gRPC 工作线程的数量。 默认值：4 最小值：1  grpc-concurrent-stream  一个 gRPC 链接中最多允许的并发请求数量。 默认值：1024 最小值：1  server.grpc-raft-conn-num  tikv 节点之间用于 raft 通讯的链接最大数量。 默认值：10 最小值：1  server.grpc-stream-initial-window-size  gRPC stream 的 window 大小。 默认值：2MB 单位：KB|MB|GB 最小值：1KB  server.grpc-keepalive-time  gRPC 发送 keep alive ping 消息的间隔时长。 默认值：10s 最小值：1s  server.</description>
    </item>
    
    <item>
      <title>TiKV 配置文件描述</title>
      <link>https://pingcap.com/docs-cn/stable/reference/configuration/tikv-server/configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/configuration/tikv-server/configuration-file/</guid>
      <description>TiKV 配置文件描述 TiKV 配置文件比命令行参数支持更多的选项。你可以在 etc/config-template.toml 找到默认值的配置文件，重命名为 config.toml 即可。
本文档只阐述未包含在命令行参数中的参数，命令行参数参见 TiKV 配置参数。
status-thread-pool-size  Http API 服务的工作线程数量。 默认值：1 最小值：1  grpc-compression-type  gRPC 消息的压缩算法，取值：none， deflate， gzip。 默认值：none  grpc-concurrency  gRPC 工作线程的数量。 默认值：4 最小值：1  grpc-concurrent-stream  一个 gRPC 链接中最多允许的并发请求数量。 默认值：1024 最小值：1  server.grpc-raft-conn-num  tikv 节点之间用于 raft 通讯的链接最大数量。 默认值：10 最小值：1  server.grpc-stream-initial-window-size  gRPC stream 的 window 大小。 默认值：2MB 单位：KB|MB|GB 最小值：1KB  server.grpc-keepalive-time  gRPC 发送 keep alive ping 消息的间隔时长。 默认值：10s 最小值：1s  server.</description>
    </item>
    
    <item>
      <title>TiKV 配置文件描述</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/configuration/tikv-server/configuration-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/configuration/tikv-server/configuration-file/</guid>
      <description>TiKV 配置文件描述 TiKV 配置文件比命令行参数支持更多的选项。你可以在 etc/config-template.toml 找到默认值的配置文件，重命名为 config.toml 即可。
本文档只阐述未包含在命令行参数中的参数，命令行参数参见 TiKV 配置参数。
status-thread-pool-size  Http API 服务的工作线程数量。 默认值：1 最小值：1  grpc-compression-type  gRPC 消息的压缩算法，取值：none， deflate， gzip。 默认值：none  grpc-concurrency  gRPC 工作线程的数量。 默认值：4 最小值：1  grpc-concurrent-stream  一个 gRPC 链接中最多允许的并发请求数量。 默认值：1024 最小值：1  server.grpc-raft-conn-num  tikv 节点之间用于 raft 通讯的链接最大数量。 默认值：10 最小值：1  server.grpc-stream-initial-window-size  gRPC stream 的 window 大小。 默认值：2MB 单位：KB|MB|GB 最小值：1KB  server.grpc-keepalive-time  gRPC 发送 keep alive ping 消息的间隔时长。 默认值：10s 最小值：1s  server.</description>
    </item>
    
    <item>
      <title>TiKV 重要监控指标详解</title>
      <link>https://pingcap.com/docs-cn/dev/reference/key-monitoring-metrics/tikv-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/key-monitoring-metrics/tikv-dashboard/</guid>
      <description>TiKV 重要监控指标详解 使用 Ansible 部署 TiDB 集群时，一键部署监控系统 (Prometheus/Grafana)，监控架构请看 TiDB 监控框架概述。
目前 Grafana Dashboard 整体分为 PD、TiDB、TiKV、Node_exporter、Overview 等。
对于日常运维，我们通过观察 TiKV 面板上的 Metrics，可以了解 TiKV 当前的状态。
以下为 TiKV Dashboard 监控说明：
Cluster  Store size：每个 TiKV 实例的使用的存储空间的大小 Available size：每个 TiKV 实例的可用的存储空间的大小 Capacity size：每个 TiKV 实例的存储容量的大小 CPU：每个 TiKV 实例 CPU 的使用率 Memory：每个 TiKV 实例内存的使用情况 IO utilization：每个 TiKV 实例 IO 的使用率 MBps：每个 TiKV 实例写入和读取的数据量大小 QPS：每个 TiKV 实例上各种命令的 QPS Errps：每个 TiKV 实例上 gRPC 消息失败的个数 leader：每个 TiKV 实例 leader 的个数 Region：每个 TiKV 实例 Region 的个数  Errors  Server is busy：各种会导致 server 繁忙的事件个数，如 write stall，channel full 等，正常情况下应当为 0 Server report failures：server 报错的消息个数，正常情况下应当为 0 Raftstore error：每个 TiKV 实例上 raftstore 发生错误的个数 Scheduler error：每个 TiKV 实例上 scheduler 发生错误的个数 Coprocessor error：每个 TiKV 实例上 coprocessor 发生错误的个数 gRPC message error：每个 TiKV 实例上 gRPC 消息发生错误的个数 Leader drop：每个 TiKV 实例上 drop leader 的个数 Leader missing：每个 TiKV 实例上 missing leader 的个数  Server  Leader：每个 TiKV 实例 leader 的个数 Region：每个 TiKV 实例 Region 的个数 CF size：每个 CF 的大小 Store size：每个 TiKV 实例的使用的存储空间的大小 Channel full：每个 TiKV 实例上 channel full 错误的数量，正常情况下应当为 0 Server report failures：server 报错的消息个数，正常情况下应当为 0 Region average written keys：每个 TiKV 实例上所有 Region 的平均 key 写入个数 Region average written bytes：每个 TiKV 实例上所有 Region 的平均写入大小 Active written leaders：每个 TiKV 实例上有效的 leader 个数 Approximate Region size：每个 Region 近似的大小  Raft IO  Apply log duration：Raft apply 日志所花费的时间 Apply log duration per server：每个 TiKV 实例上 Raft apply 日志所花费的时间 Append log duration：Raft append 日志所花费的时间 Append log duration per server：每个 TiKV 实例上 Raft append 日志所花费的时间  Raft process  Ready handled：Raft 中不同 ready 类型的个数 Process ready duration per server：每个 TiKV 实例处理 ready 所花费的时间，99.</description>
    </item>
    
    <item>
      <title>TiKV 重要监控指标详解</title>
      <link>https://pingcap.com/docs-cn/stable/reference/key-monitoring-metrics/tikv-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/key-monitoring-metrics/tikv-dashboard/</guid>
      <description>TiKV 重要监控指标详解 使用 Ansible 部署 TiDB 集群时，一键部署监控系统 (Prometheus/Grafana)，监控架构请看 TiDB 监控框架概述。
目前 Grafana Dashboard 整体分为 PD、TiDB、TiKV、Node_exporter、Overview 等。
对于日常运维，我们通过观察 TiKV 面板上的 Metrics，可以了解 TiKV 当前的状态。
以下为 TiKV Dashboard 监控说明：
Cluster  Store size：每个 TiKV 实例的使用的存储空间的大小 Available size：每个 TiKV 实例的可用的存储空间的大小 Capacity size：每个 TiKV 实例的存储容量的大小 CPU：每个 TiKV 实例 CPU 的使用率 Memory：每个 TiKV 实例内存的使用情况 IO utilization：每个 TiKV 实例 IO 的使用率 MBps：每个 TiKV 实例写入和读取的数据量大小 QPS：每个 TiKV 实例上各种命令的 QPS Errps：每个 TiKV 实例上 gRPC 消息失败的个数 leader：每个 TiKV 实例 leader 的个数 Region：每个 TiKV 实例 Region 的个数  Errors  Server is busy：各种会导致 server 繁忙的事件个数，如 write stall，channel full 等，正常情况下应当为 0 Server report failures：server 报错的消息个数，正常情况下应当为 0 Raftstore error：每个 TiKV 实例上 raftstore 发生错误的个数 Scheduler error：每个 TiKV 实例上 scheduler 发生错误的个数 Coprocessor error：每个 TiKV 实例上 coprocessor 发生错误的个数 gRPC message error：每个 TiKV 实例上 gRPC 消息发生错误的个数 Leader drop：每个 TiKV 实例上 drop leader 的个数 Leader missing：每个 TiKV 实例上 missing leader 的个数  Server  Leader：每个 TiKV 实例 leader 的个数 Region：每个 TiKV 实例 Region 的个数 CF size：每个 CF 的大小 Store size：每个 TiKV 实例的使用的存储空间的大小 Channel full：每个 TiKV 实例上 channel full 错误的数量，正常情况下应当为 0 Server report failures：server 报错的消息个数，正常情况下应当为 0 Region average written keys：每个 TiKV 实例上所有 Region 的平均 key 写入个数 Region average written bytes：每个 TiKV 实例上所有 Region 的平均写入大小 Active written leaders：每个 TiKV 实例上有效的 leader 个数 Approximate Region size：每个 Region 近似的大小  Raft IO  Apply log duration：Raft apply 日志所花费的时间 Apply log duration per server：每个 TiKV 实例上 Raft apply 日志所花费的时间 Append log duration：Raft append 日志所花费的时间 Append log duration per server：每个 TiKV 实例上 Raft append 日志所花费的时间  Raft process  Ready handled：Raft 中不同 ready 类型的个数 Process ready duration per server：每个 TiKV 实例处理 ready 所花费的时间，99.</description>
    </item>
    
    <item>
      <title>TiKV 重要监控指标详解</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/key-monitoring-metrics/tikv-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/key-monitoring-metrics/tikv-dashboard/</guid>
      <description>TiKV 重要监控指标详解 使用 Ansible 部署 TiDB 集群时，一键部署监控系统 (Prometheus/Grafana)，监控架构请看 TiDB 监控框架概述。
目前 Grafana Dashboard 整体分为 PD、TiDB、TiKV、Node_exporter、Overview 等。
对于日常运维，我们通过观察 TiKV 面板上的 Metrics，可以了解 TiKV 当前的状态。
以下为 TiKV Dashboard 监控说明：
Cluster  Store size：每个 TiKV 实例的使用的存储空间的大小 Available size：每个 TiKV 实例的可用的存储空间的大小 Capacity size：每个 TiKV 实例的存储容量的大小 CPU：每个 TiKV 实例 CPU 的使用率 Memory：每个 TiKV 实例内存的使用情况 IO utilization：每个 TiKV 实例 IO 的使用率 MBps：每个 TiKV 实例写入和读取的数据量大小 QPS：每个 TiKV 实例上各种命令的 QPS Errps：每个 TiKV 实例上 gRPC 消息失败的个数 leader：每个 TiKV 实例 leader 的个数 Region：每个 TiKV 实例 Region 的个数  Errors  Server is busy：各种会导致 server 繁忙的事件个数，如 write stall，channel full 等，正常情况下应当为 0 Server report failures：server 报错的消息个数，正常情况下应当为 0 Raftstore error：每个 TiKV 实例上 raftstore 发生错误的个数 Scheduler error：每个 TiKV 实例上 scheduler 发生错误的个数 Coprocessor error：每个 TiKV 实例上 coprocessor 发生错误的个数 gRPC message error：每个 TiKV 实例上 gRPC 消息发生错误的个数 Leader drop：每个 TiKV 实例上 drop leader 的个数 Leader missing：每个 TiKV 实例上 missing leader 的个数  Server  Leader：每个 TiKV 实例 leader 的个数 Region：每个 TiKV 实例 Region 的个数 CF size：每个 CF 的大小 Store size：每个 TiKV 实例的使用的存储空间的大小 Channel full：每个 TiKV 实例上 channel full 错误的数量，正常情况下应当为 0 Server report failures：server 报错的消息个数，正常情况下应当为 0 Region average written keys：每个 TiKV 实例上所有 Region 的平均 key 写入个数 Region average written bytes：每个 TiKV 实例上所有 Region 的平均写入大小 Active written leaders：每个 TiKV 实例上有效的 leader 个数 Approximate Region size：每个 Region 近似的大小  Raft IO  Apply log duration：Raft apply 日志所花费的时间 Apply log duration per server：每个 TiKV 实例上 Raft apply 日志所花费的时间 Append log duration：Raft append 日志所花费的时间 Append log duration per server：每个 TiKV 实例上 Raft append 日志所花费的时间  Raft process  Ready handled：Raft 中不同 ready 类型的个数 Process ready duration per server：每个 TiKV 实例处理 ready 所花费的时间，99.</description>
    </item>
    
    <item>
      <title>TiKV 重要监控指标详解</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/key-monitoring-metrics/tikv-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/key-monitoring-metrics/tikv-dashboard/</guid>
      <description>TiKV 重要监控指标详解 使用 Ansible 部署 TiDB 集群时，一键部署监控系统 (Prometheus/Grafana)，监控架构请看 TiDB 监控框架概述。
目前 Grafana Dashboard 整体分为 PD、TiDB、TiKV、Node_exporter、Overview 等。
对于日常运维，我们通过观察 TiKV 面板上的 Metrics，可以了解 TiKV 当前的状态。
以下为 TiKV Dashboard 监控说明：
Cluster  Store size：每个 TiKV 实例的使用的存储空间的大小 Available size：每个 TiKV 实例的可用的存储空间的大小 Capacity size：每个 TiKV 实例的存储容量的大小 CPU：每个 TiKV 实例 CPU 的使用率 Memory：每个 TiKV 实例内存的使用情况 IO utilization：每个 TiKV 实例 IO 的使用率 MBps：每个 TiKV 实例写入和读取的数据量大小 QPS：每个 TiKV 实例上各种命令的 QPS Errps：每个 TiKV 实例上 gRPC 消息失败的个数 leader：每个 TiKV 实例 leader 的个数 Region：每个 TiKV 实例 Region 的个数  Errors  Server is busy：各种会导致 server 繁忙的事件个数，如 write stall，channel full 等，正常情况下应当为 0 Server report failures：server 报错的消息个数，正常情况下应当为 0 Raftstore error：每个 TiKV 实例上 raftstore 发生错误的个数 Scheduler error：每个 TiKV 实例上 scheduler 发生错误的个数 Coprocessor error：每个 TiKV 实例上 coprocessor 发生错误的个数 gRPC message error：每个 TiKV 实例上 gRPC 消息发生错误的个数 Leader drop：每个 TiKV 实例上 drop leader 的个数 Leader missing：每个 TiKV 实例上 missing leader 的个数  Server  Leader：每个 TiKV 实例 leader 的个数 Region：每个 TiKV 实例 Region 的个数 CF size：每个 CF 的大小 Store size：每个 TiKV 实例的使用的存储空间的大小 Channel full：每个 TiKV 实例上 channel full 错误的数量，正常情况下应当为 0 Server report failures：server 报错的消息个数，正常情况下应当为 0 Region average written keys：每个 TiKV 实例上所有 Region 的平均 key 写入个数 Region average written bytes：每个 TiKV 实例上所有 Region 的平均写入大小 Active written leaders：每个 TiKV 实例上有效的 leader 个数 Approximate Region size：每个 Region 近似的大小  Raft IO  Apply log duration：Raft apply 日志所花费的时间 Apply log duration per server：每个 TiKV 实例上 Raft apply 日志所花费的时间 Append log duration：Raft append 日志所花费的时间 Append log duration per server：每个 TiKV 实例上 Raft append 日志所花费的时间  Raft process  Ready handled：Raft 中不同 ready 类型的个数 Process ready duration per server：每个 TiKV 实例处理 ready 所花费的时间，99.</description>
    </item>
    
    <item>
      <title>Time Zone Support</title>
      <link>https://pingcap.com/docs/dev/how-to/configure/time-zone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/configure/time-zone/</guid>
      <description>Learn how to set the time zone and its format.</description>
    </item>
    
    <item>
      <title>Time Zone Support</title>
      <link>https://pingcap.com/docs/stable/how-to/configure/time-zone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/configure/time-zone/</guid>
      <description>Learn how to set the time zone and its format.</description>
    </item>
    
    <item>
      <title>Time Zone Support</title>
      <link>https://pingcap.com/docs/v2.1/how-to/configure/time-zone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/configure/time-zone/</guid>
      <description>Learn how to set the time zone and its format.</description>
    </item>
    
    <item>
      <title>Time Zone Support</title>
      <link>https://pingcap.com/docs/v3.1/how-to/configure/time-zone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/configure/time-zone/</guid>
      <description>Learn how to set the time zone and its format.</description>
    </item>
    
    <item>
      <title>TiSpark Quick Start Guide</title>
      <link>https://pingcap.com/docs/dev/how-to/get-started/tispark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/get-started/tispark/</guid>
      <description>Learn how to use TiSpark quickly.</description>
    </item>
    
    <item>
      <title>TiSpark Quick Start Guide</title>
      <link>https://pingcap.com/docs/stable/how-to/get-started/tispark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/how-to/get-started/tispark/</guid>
      <description>Learn how to use TiSpark quickly.</description>
    </item>
    
    <item>
      <title>TiSpark Quick Start Guide</title>
      <link>https://pingcap.com/docs/v2.1/how-to/get-started/tispark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/how-to/get-started/tispark/</guid>
      <description>Learn how to use TiSpark quickly.</description>
    </item>
    
    <item>
      <title>TiSpark Quick Start Guide</title>
      <link>https://pingcap.com/docs/v2.1/tispark/tispark-quick-start-guide_v1.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/tispark/tispark-quick-start-guide_v1.x/</guid>
      <description>Learn how to use TiSpark quickly.</description>
    </item>
    
    <item>
      <title>TiSpark Quick Start Guide</title>
      <link>https://pingcap.com/docs/v3.1/how-to/get-started/tispark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/get-started/tispark/</guid>
      <description>Learn how to use TiSpark quickly.</description>
    </item>
    
    <item>
      <title>TiSpark User Guide</title>
      <link>https://pingcap.com/docs/dev/reference/tispark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tispark/</guid>
      <description>Use TiSpark to provide an HTAP solution to serve as a one-stop solution for both online transactions and analysis.</description>
    </item>
    
    <item>
      <title>TiSpark User Guide</title>
      <link>https://pingcap.com/docs/stable/reference/tispark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tispark/</guid>
      <description>Use TiSpark to provide an HTAP solution to serve as a one-stop solution for both online transactions and analysis.</description>
    </item>
    
    <item>
      <title>TiSpark User Guide</title>
      <link>https://pingcap.com/docs/v2.1/reference/tispark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tispark/</guid>
      <description>Use TiSpark to provide an HTAP solution to serve as a one-stop solution for both online transactions and analysis.</description>
    </item>
    
    <item>
      <title>TiSpark User Guide</title>
      <link>https://pingcap.com/docs/v2.1/tispark/tispark-user-guide_v1.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/tispark/tispark-user-guide_v1.x/</guid>
      <description>Use TiSpark to provide an HTAP solution to serve as a one-stop solution for both online transactions and analysis.</description>
    </item>
    
    <item>
      <title>TiSpark User Guide</title>
      <link>https://pingcap.com/docs/v3.1/reference/tispark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tispark/</guid>
      <description>Use TiSpark to provide an HTAP solution to serve as a one-stop solution for both online transactions and analysis.</description>
    </item>
    
    <item>
      <title>TiSpark 快速入门指南</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/get-started/tispark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/get-started/tispark/</guid>
      <description>TiSpark 快速入门指南 为了让大家快速体验 TiSpark，通过 TiDB Ansible 安装的 TiDB 集群中默认已集成 Spark、TiSpark jar 包及 TiSpark sample data。
部署信息   Spark 默认部署在 TiDB 实例部署目录下 spark 目录中
  TiSpark jar 包默认部署在 Spark 部署目录 jars 文件夹下：spark/jars/tispark-${name_with_version}.jar
  TiSpark 示例数据和导入脚本可点击 TiSpark 示例数据下载。
 tispark-sample-data/   环境准备 在 TiDB 实例上安装 JDK 在 Oracle JDK 官方下载页面 下载 JDK 1.8 当前最新版，本示例中下载的版本为 jdk-8u141-linux-x64.tar.gz。
解压并根据您的 JDK 部署目录设置环境变量，编辑 ~/.bashrc 文件，比如：
 export JAVA_HOME=/home/pingcap/jdk1.8.0_144 &amp;amp;&amp;amp; export PATH=$JAVA_HOME/bin:$PATH 验证 JDK 有效性：</description>
    </item>
    
    <item>
      <title>TiSpark 快速入门指南</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/get-started/tispark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/get-started/tispark/</guid>
      <description>TiSpark 快速入门指南 为了让大家快速体验 TiSpark，通过 TiDB Ansible 安装的 TiDB 集群中默认已集成 Spark、TiSpark jar 包及 TiSpark sample data。
部署信息   Spark 默认部署在 TiDB 实例部署目录下 spark 目录中
  TiSpark jar 包默认部署在 Spark 部署目录 jars 文件夹下：spark/jars/tispark-${name_with_version}.jar
  TiSpark 示例数据和导入脚本可点击 TiSpark 示例数据下载。
 tispark-sample-data/   环境准备 在 TiDB 实例上安装 JDK 在 Oracle JDK 官方下载页面 下载 JDK 1.8 当前最新版，本示例中下载的版本为 jdk-8u141-linux-x64.tar.gz。
解压并根据您的 JDK 部署目录设置环境变量，编辑 ~/.bashrc 文件，比如：
 export JAVA_HOME=/home/pingcap/jdk1.8.0_144 &amp;amp;&amp;amp; export PATH=$JAVA_HOME/bin:$PATH 验证 JDK 有效性：</description>
    </item>
    
    <item>
      <title>TiSpark 快速入门指南</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/get-started/tispark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/get-started/tispark/</guid>
      <description>TiSpark 快速入门指南 为了让大家快速体验 TiSpark，通过 TiDB Ansible 安装的 TiDB 集群中默认已集成 Spark、TiSpark jar 包及 TiSpark sample data。
部署信息   Spark 默认部署在 TiDB 实例部署目录下 spark 目录中。
  TiSpark jar 包默认部署在 Spark 部署目录 jars 文件夹下：spark/jars/tispark-${name_with_version}.jar。
  TiSpark 示例数据和导入脚本可点击 TiSpark 示例数据下载。
 tispark-sample-data/   环境准备 在 TiDB 实例上安装 JDK 在 Oracle JDK 官方下载页面 下载 JDK 1.8 当前最新版，本示例中下载的版本为 jdk-8u141-linux-x64.tar.gz。
解压并根据您的 JDK 部署目录设置环境变量， 编辑 ~/.bashrc 文件，比如：
export JAVA_HOME=/home/pingcap/jdk1.8.0_144 export PATH=$JAVA_HOME/bin:$PATH 验证 JDK 有效性：</description>
    </item>
    
    <item>
      <title>TiSpark 快速入门指南</title>
      <link>https://pingcap.com/docs-cn/v2.1/tispark/tispark-quick-start-guide_v1.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/tispark/tispark-quick-start-guide_v1.x/</guid>
      <description>TiSpark 快速入门指南 为了让大家快速体验 TiSpark，通过 TiDB Ansible 安装的 TiDB 集群中默认已集成 Spark、TiSpark jar 包及 TiSpark sample data。
部署信息   Spark 默认部署在 TiDB 实例部署目录下 spark 目录中
  TiSpark jar 包默认部署在 Spark 部署目录 jars 文件夹下：
spark/jars/tispark-SNAPSHOT-jar-with-dependencies.jar
  TiSpark sample data 及导入脚本默认部署在 TiDB Ansible 目录下：
tidb-ansible/resources/bin/tispark-sample-data
  环境准备 在 TiDB 实例上安装 JDK 在 Oracle JDK 官方下载页面 下载 JDK 1.8 当前最新版，本示例中下载的版本为 jdk-8u141-linux-x64.tar.gz。
解压并根据你的 JDK 部署目录设置环境变量， 编辑 ~/.bashrc 文件，比如：
export JAVA_HOME=/home/pingcap/jdk1.8.0_144 export PATH=$JAVA_HOME/bin:$PATH 验证 JDK 有效性：</description>
    </item>
    
    <item>
      <title>TiSpark 快速入门指南</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/get-started/tispark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/get-started/tispark/</guid>
      <description>TiSpark 快速入门指南 为了让大家快速体验 TiSpark，通过 TiDB Ansible 安装的 TiDB 集群中默认已集成 Spark、TiSpark jar 包及 TiSpark sample data。
部署信息   Spark 默认部署在 TiDB 实例部署目录下 spark 目录中
  TiSpark jar 包默认部署在 Spark 部署目录 jars 文件夹下：spark/jars/tispark-${name_with_version}.jar
  TiSpark 示例数据和导入脚本可点击 TiSpark 示例数据下载。
 tispark-sample-data/   环境准备 在 TiDB 实例上安装 JDK 在 Oracle JDK 官方下载页面 下载 JDK 1.8 当前最新版，本示例中下载的版本为 jdk-8u141-linux-x64.tar.gz。
解压并根据您的 JDK 部署目录设置环境变量，编辑 ~/.bashrc 文件，比如：
 export JAVA_HOME=/home/pingcap/jdk1.8.0_144 &amp;amp;&amp;amp; export PATH=$JAVA_HOME/bin:$PATH 验证 JDK 有效性：</description>
    </item>
    
    <item>
      <title>TiSpark 用户指南</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tispark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tispark/</guid>
      <description>TiSpark 用户指南 TiSpark 是 PingCAP 为解决用户复杂 OLAP 需求而推出的产品。它借助 Spark 平台，同时融合 TiKV 分布式集群的优势，和 TiDB 一起为用户一站式解决 HTAP (Hybrid Transactional/Analytical Processing) 的需求。TiSpark 依赖于 TiKV 集群和 Placement Driver (PD)，也需要你搭建一个 Spark 集群。
本文简单介绍如何部署和使用 TiSpark。本文假设你对 Spark 有基本认知。你可以参阅 Apache Spark 官网 了解 Spark 的相关信息。
概述 TiSpark 是将 Spark SQL 直接运行在分布式存储引擎 TiKV 上的 OLAP 解决方案。其架构图如下：
 TiSpark 深度整合了 Spark Catalyst 引擎, 可以对计算提供精确的控制，使 Spark 能够高效的读取 TiKV 中的数据，提供索引支持以实现高速的点查。 通过多种计算下推减少 Spark SQL 需要处理的数据大小，以加速查询；利用 TiDB 的内建的统计信息选择更优的查询计划。 从数据集群的角度看，TiSpark + TiDB 可以让用户无需进行脆弱和难以维护的 ETL，直接在同一个平台进行事务和分析两种工作，简化了系统架构和运维。 除此之外，用户借助 TiSpark 项目可以在 TiDB 上使用 Spark 生态圈提供的多种工具进行数据处理。例如，使用 TiSpark 进行数据分析和 ETL；使用 TiKV 作为机器学习的数据源；借助调度系统产生定时报表等等。  环境准备 现有 TiSpark 2.</description>
    </item>
    
    <item>
      <title>TiSpark 用户指南</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tispark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tispark/</guid>
      <description>TiSpark 用户指南 TiSpark 是 PingCAP 为解决用户复杂 OLAP 需求而推出的产品。它借助 Spark 平台，同时融合 TiKV 分布式集群的优势，和 TiDB 一起为用户一站式解决 HTAP (Hybrid Transactional/Analytical Processing) 的需求。TiSpark 依赖于 TiKV 集群和 Placement Driver (PD)，也需要你搭建一个 Spark 集群。
本文简单介绍如何部署和使用 TiSpark。本文假设你对 Spark 有基本认知。你可以参阅 Apache Spark 官网 了解 Spark 的相关信息。
概述 TiSpark 是将 Spark SQL 直接运行在分布式存储引擎 TiKV 上的 OLAP 解决方案。其架构图如下：
 TiSpark 深度整合了 Spark Catalyst 引擎, 可以对计算提供精确的控制，使 Spark 能够高效的读取 TiKV 中的数据，提供索引支持以实现高速的点查。 通过多种计算下推减少 Spark SQL 需要处理的数据大小，以加速查询；利用 TiDB 的内建的统计信息选择更优的查询计划。 从数据集群的角度看，TiSpark + TiDB 可以让用户无需进行脆弱和难以维护的 ETL，直接在同一个平台进行事务和分析两种工作，简化了系统架构和运维。 除此之外，用户借助 TiSpark 项目可以在 TiDB 上使用 Spark 生态圈提供的多种工具进行数据处理。例如，使用 TiSpark 进行数据分析和 ETL；使用 TiKV 作为机器学习的数据源；借助调度系统产生定时报表等等。  环境准备 现有 TiSpark 2.</description>
    </item>
    
    <item>
      <title>TiSpark 用户指南</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tispark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tispark/</guid>
      <description>TiSpark 用户指南 TiSpark 是 PingCAP 为解决用户复杂 OLAP 需求而推出的产品。它借助 Spark 平台，同时融合 TiKV 分布式集群的优势，和 TiDB 一起为用户一站式解决 HTAP (Hybrid Transactional/Analytical Processing) 的需求。TiSpark 依赖于 TiKV 集群和 Placement Driver (PD)，也需要你搭建一个 Spark 集群。
本文简单介绍如何部署和使用 TiSpark。本文假设你对 Spark 有基本认知。你可以参阅 Apache Spark 官网 了解 Spark 的相关信息。
概述 TiSpark 是将 Spark SQL 直接运行在分布式存储引擎 TiKV 上的 OLAP 解决方案。其架构图如下：
 TiSpark 深度整合了 Spark Catalyst 引擎, 可以对计算提供精确的控制，使 Spark 能够高效的读取 TiKV 中的数据，提供索引支持以实现高速的点查。 通过多种计算下推减少 Spark SQL 需要处理的数据大小，以加速查询；利用 TiDB 的内建的统计信息选择更优的查询计划。 从数据集群的角度看，TiSpark + TiDB 可以让用户无需进行脆弱和难以维护的 ETL，直接在同一个平台进行事务和分析两种工作，简化了系统架构和运维。 除此之外，用户借助 TiSpark 项目可以在 TiDB 上使用 Spark 生态圈提供的多种工具进行数据处理。例如，使用 TiSpark 进行数据分析和 ETL；使用 TiKV 作为机器学习的数据源；借助调度系统产生定时报表等等。  环境准备 现有 TiSpark 2.</description>
    </item>
    
    <item>
      <title>TiSpark 用户指南</title>
      <link>https://pingcap.com/docs-cn/v2.1/tispark/tispark-user-guide_v1.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/tispark/tispark-user-guide_v1.x/</guid>
      <description>TiSpark 用户指南 TiSpark 是 PingCAP 为解决用户复杂 OLAP 需求而推出的产品。它借助 Spark 平台，同时融合 TiKV 分布式集群的优势，和 TiDB 一起为用户一站式解决 HTAP (Hybrid Transactional/Analytical Processing) 的需求。TiSpark 依赖于 TiKV 集群和 Placement Driver (PD)，也需要你搭建一个 Spark 集群。
本文简单介绍如何部署和使用 TiSpark。本文假设你对 Spark 有基本认知。你可以参阅 Apache Spark 官网 了解 Spark 的相关信息。
概述 TiSpark 是将 Spark SQL 直接运行在分布式存储引擎 TiKV 上的 OLAP 解决方案。其架构图如下：
 TiSpark 深度整合了 Spark Catalyst 引擎, 可以对计算提供精确的控制，使 Spark 能够高效的读取 TiKV 中的数据，提供索引支持以实现高速的点查。 通过多种计算下推减少 Spark SQL 需要处理的数据大小，以加速查询；利用 TiDB 的内建的统计信息选择更优的查询计划。 从数据集群的角度看，TiSpark + TiDB 可以让用户无需进行脆弱和难以维护的 ETL，直接在同一个平台进行事务和分析两种工作，简化了系统架构和运维。 除此之外，用户借助 TiSpark 项目可以在 TiDB 上使用 Spark 生态圈提供的多种工具进行数据处理。例如，使用 TiSpark 进行数据分析和 ETL；使用 TiKV 作为机器学习的数据源；借助调度系统产生定时报表等等。  环境准备 现有 TiSpark 版本支持 Spark 2.</description>
    </item>
    
    <item>
      <title>TiSpark 用户指南</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tispark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tispark/</guid>
      <description>TiSpark 用户指南 TiSpark 是 PingCAP 为解决用户复杂 OLAP 需求而推出的产品。它借助 Spark 平台，同时融合 TiKV 分布式集群的优势，和 TiDB 一起为用户一站式解决 HTAP (Hybrid Transactional/Analytical Processing) 的需求。TiSpark 依赖于 TiKV 集群和 Placement Driver (PD)，也需要你搭建一个 Spark 集群。
本文简单介绍如何部署和使用 TiSpark。本文假设你对 Spark 有基本认知。你可以参阅 Apache Spark 官网 了解 Spark 的相关信息。
概述 TiSpark 是将 Spark SQL 直接运行在分布式存储引擎 TiKV 上的 OLAP 解决方案。其架构图如下：
 TiSpark 深度整合了 Spark Catalyst 引擎, 可以对计算提供精确的控制，使 Spark 能够高效的读取 TiKV 中的数据，提供索引支持以实现高速的点查。 通过多种计算下推减少 Spark SQL 需要处理的数据大小，以加速查询；利用 TiDB 的内建的统计信息选择更优的查询计划。 从数据集群的角度看，TiSpark + TiDB 可以让用户无需进行脆弱和难以维护的 ETL，直接在同一个平台进行事务和分析两种工作，简化了系统架构和运维。 除此之外，用户借助 TiSpark 项目可以在 TiDB 上使用 Spark 生态圈提供的多种工具进行数据处理。例如，使用 TiSpark 进行数据分析和 ETL；使用 TiKV 作为机器学习的数据源；借助调度系统产生定时报表等等。  环境准备 现有 TiSpark 2.</description>
    </item>
    
    <item>
      <title>tkctl 使用指南</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/reference/tools/tkctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/reference/tools/tkctl/</guid>
      <description>tkctl 使用指南 tkctl (TiDB Kubernetes Control) 是为 TiDB in Kubernetes 设计的命令行工具，用于运维集群和诊断集群问题。
安装 安装 tkctl 时，可以直接下载预编译的可执行文件，也可以自行从源码进行编译。
下载预编译的可执行文件  MacOS Linux Windows  下载解压后，将 tkctl 可执行文件加入到可执行文件路径 (PATH) 中即完成安装。
源码编译 要求：Go 版本 1.11 及以上
 git clone https://github.com/pingcap/tidb-operator.git &amp;amp;&amp;amp; \ GOOS=${YOUR_GOOS} make cli &amp;amp;&amp;amp; \ mv tkctl /usr/local/bin/tkctl 命令自动补全 你可以配置 tkctl 的自动补全以简化使用。
为 BASH 配置自动补全（需要预先安装 bash-completion）的方法如下。
在当前 shell 中设置自动补全：
 source &amp;lt;(tkctl completion bash) 永久设置自动补全：
 echo &amp;#34;if hash tkctl 2&amp;gt;/dev/null; then source &amp;lt;(tkctl completion bash); fi&amp;#34; &amp;gt;&amp;gt; ~/.</description>
    </item>
    
    <item>
      <title>tkctl 使用指南</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/reference/tools/tkctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/reference/tools/tkctl/</guid>
      <description>tkctl 使用指南 tkctl (TiDB Kubernetes Control) 是为 TiDB in Kubernetes 设计的命令行工具，用于运维集群和诊断集群问题。
安装 安装 tkctl 时，可以直接下载预编译的可执行文件，也可以自行从源码进行编译。
下载预编译的可执行文件  MacOS Linux Windows  下载解压后，将 tkctl 可执行文件加入到可执行文件路径 (PATH) 中即完成安装。
源码编译 要求：Go 版本 1.11 及以上
 git clone https://github.com/pingcap/tidb-operator.git &amp;amp;&amp;amp; \ GOOS=${YOUR_GOOS} make cli &amp;amp;&amp;amp; \ mv tkctl /usr/local/bin/tkctl 命令自动补全 你可以配置 tkctl 的自动补全以简化使用。
为 BASH 配置自动补全（需要预先安装 bash-completion）的方法如下。
在当前 shell 中设置自动补全：
 source &amp;lt;(tkctl completion bash) 永久设置自动补全：
 echo &amp;#34;if hash tkctl 2&amp;gt;/dev/null; then source &amp;lt;(tkctl completion bash); fi&amp;#34; &amp;gt;&amp;gt; ~/.</description>
    </item>
    
    <item>
      <title>tkctl 使用指南</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/reference/tools/tkctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/reference/tools/tkctl/</guid>
      <description>tkctl 使用指南 tkctl (TiDB Kubernetes Control) 是为 TiDB in Kubernetes 设计的命令行工具，用于运维集群和诊断集群问题。
安装 安装 tkctl 时，可以直接下载预编译的可执行文件，也可以自行从源码进行编译。
下载预编译的可执行文件  MacOS Linux Windows  下载解压后，将 tkctl 可执行文件加入到可执行文件路径 (PATH) 中即完成安装。
源码编译 要求：Go 版本 1.11 及以上
 git clone https://github.com/pingcap/tidb-operator.git &amp;amp;&amp;amp; \ GOOS=${YOUR_GOOS} make cli &amp;amp;&amp;amp; \ mv tkctl /usr/local/bin/tkctl 命令自动补全 你可以配置 tkctl 的自动补全以简化使用。
为 BASH 配置自动补全（需要预先安装 bash-completion）的方法如下。
在当前 shell 中设置自动补全：
 source &amp;lt;(tkctl completion bash) 永久设置自动补全：
 echo &amp;#34;if hash tkctl 2&amp;gt;/dev/null; then source &amp;lt;(tkctl completion bash); fi&amp;#34; &amp;gt;&amp;gt; ~/.</description>
    </item>
    
    <item>
      <title>Tools in Kubernetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/reference/tools/in-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/reference/tools/in-kubernetes/</guid>
      <description>Learn about operation tools for TiDB in Kubernetes.</description>
    </item>
    
    <item>
      <title>Tools in Kubernetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/reference/tools/in-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/reference/tools/in-kubernetes/</guid>
      <description>Learn about operation tools for TiDB in Kubernetes.</description>
    </item>
    
    <item>
      <title>Tools in Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/reference/tools/in-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/reference/tools/in-kubernetes/</guid>
      <description>Learn about operation tools for TiDB in Kubernetes.</description>
    </item>
    
    <item>
      <title>Tools 研发工程师</title>
      <link>https://pingcap.com/about-cn/recruit/engineering/tools-engineer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/engineering/tools-engineer/</guid>
      <description>Tools 研发工程师 岗位职责：
  TiDB 商业工具开发，完善 TiDB 的周边生态，提升用户使用体验；
  建设高度智能的自动化测试系统，进行各种破坏性测试，验证 TiDB 的可靠性。
  任职要求：
  三年以上相关领域开发经验，扎实的编程能力，熟悉 C/C++/Go/Rust 其中一种编程语言；
  熟悉大型分布式系统，具备冷静分析复杂问题能力；
  熟悉常用算法和数据结构；
  深入了解过操作系统和网络；
  良好的沟通能力和技巧，以及抗压能力；
  了解 Automated Reasoning、Static Analysis 等测试方法及工具。
  加分项：
  爱折腾，强烈的 Hack 精神；
  TopCoder、Codeforces 黄色以上。
  待遇：
20K - 45K + 期权，13薪 + 奖金，优秀者可面议
工作地点：
北京，上海，广州，深圳，杭州，成都，特别优秀可 Remote</description>
    </item>
    
    <item>
      <title>TRACE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/trace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/trace/</guid>
      <description>TiDB 数据库中 TRACE 的使用概况。</description>
    </item>
    
    <item>
      <title>TRACE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/trace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/trace/</guid>
      <description>TiDB 数据库中 TRACE 的使用概况。</description>
    </item>
    
    <item>
      <title>TRACE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/trace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/trace/</guid>
      <description>TiDB 数据库中 TRACE 的使用概况。</description>
    </item>
    
    <item>
      <title>TRACE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/trace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/trace/</guid>
      <description>TiDB 数据库中 TRACE 的使用概况。</description>
    </item>
    
    <item>
      <title>TRACE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/trace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/trace/</guid>
      <description>An overview of the usage of TRACE for the TiDB database.</description>
    </item>
    
    <item>
      <title>TRACE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/trace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/trace/</guid>
      <description>An overview of the usage of TRACE for the TiDB database.</description>
    </item>
    
    <item>
      <title>TRACE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/trace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/trace/</guid>
      <description>An overview of the usage of TRACE for the TiDB database.</description>
    </item>
    
    <item>
      <title>TRACE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/trace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/trace/</guid>
      <description>An overview of the usage of TRACE for the TiDB database.</description>
    </item>
    
    <item>
      <title>Transaction Model</title>
      <link>https://pingcap.com/docs/dev/reference/transactions/transaction-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/transactions/transaction-model/</guid>
      <description>Learn TiDB&#39;s transaction model and its differences with MySQL.</description>
    </item>
    
    <item>
      <title>Transaction Model</title>
      <link>https://pingcap.com/docs/stable/reference/transactions/transaction-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/transactions/transaction-model/</guid>
      <description>Learn TiDB&#39;s transaction model and its differences with MySQL.</description>
    </item>
    
    <item>
      <title>Transaction Model</title>
      <link>https://pingcap.com/docs/v2.1/reference/transactions/transaction-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/transactions/transaction-model/</guid>
      <description>Learn TiDB&#39;s transaction model and its differences with MySQL.</description>
    </item>
    
    <item>
      <title>Transaction Model</title>
      <link>https://pingcap.com/docs/v3.1/reference/transactions/transaction-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/transactions/transaction-model/</guid>
      <description>Learn TiDB&#39;s transaction model and its differences with MySQL.</description>
    </item>
    
    <item>
      <title>Transactions</title>
      <link>https://pingcap.com/docs/dev/reference/transactions/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/transactions/overview/</guid>
      <description>Learn how to use the distributed transaction statements.</description>
    </item>
    
    <item>
      <title>Transactions</title>
      <link>https://pingcap.com/docs/stable/reference/transactions/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/transactions/overview/</guid>
      <description>Learn how to use the distributed transaction statements.</description>
    </item>
    
    <item>
      <title>Transactions</title>
      <link>https://pingcap.com/docs/v2.1/reference/transactions/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/transactions/overview/</guid>
      <description>Learn how to use the distributed transaction statements.</description>
    </item>
    
    <item>
      <title>Transactions</title>
      <link>https://pingcap.com/docs/v3.1/reference/transactions/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/transactions/overview/</guid>
      <description>Learn how to use the distributed transaction statements.</description>
    </item>
    
    <item>
      <title>Troubleshoot TiDB in Kubernetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/troubleshoot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/troubleshoot/</guid>
      <description>Learn how to diagnose and resolve issues when you use TiDB in Kubernetes.</description>
    </item>
    
    <item>
      <title>Troubleshoot TiDB in Kubernetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/troubleshoot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/troubleshoot/</guid>
      <description>Learn how to diagnose and resolve issues when you use TiDB in Kubernetes.</description>
    </item>
    
    <item>
      <title>Troubleshoot TiDB in Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/troubleshoot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/troubleshoot/</guid>
      <description>Learn how to diagnose and resolve issues when you use TiDB in Kubernetes.</description>
    </item>
    
    <item>
      <title>TRUNCATE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/truncate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/truncate/</guid>
      <description>TiDB 数据库中 TRUNCATE 的使用概况。</description>
    </item>
    
    <item>
      <title>TRUNCATE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/truncate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/truncate/</guid>
      <description>TiDB 数据库中 TRUNCATE 的使用概况。</description>
    </item>
    
    <item>
      <title>TRUNCATE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/truncate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/truncate/</guid>
      <description>TiDB 数据库中 TRUNCATE 的使用概况。</description>
    </item>
    
    <item>
      <title>TRUNCATE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/truncate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/truncate/</guid>
      <description>TiDB 数据库中 TRUNCATE 的使用概况。</description>
    </item>
    
    <item>
      <title>TRUNCATE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/truncate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/truncate/</guid>
      <description>An overview of the usage of TRUNCATE for the TiDB database.</description>
    </item>
    
    <item>
      <title>TRUNCATE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/truncate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/truncate/</guid>
      <description>An overview of the usage of TRUNCATE for the TiDB database.</description>
    </item>
    
    <item>
      <title>TRUNCATE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/truncate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/truncate/</guid>
      <description>An overview of the usage of TRUNCATE for the TiDB database.</description>
    </item>
    
    <item>
      <title>TRUNCATE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/truncate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/truncate/</guid>
      <description>An overview of the usage of TRUNCATE for the TiDB database.</description>
    </item>
    
    <item>
      <title>Tune TiKV Performance</title>
      <link>https://pingcap.com/docs/dev/reference/performance/tune-tikv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/performance/tune-tikv/</guid>
      <description>Learn how to tune the TiKV parameters for optimal performance.</description>
    </item>
    
    <item>
      <title>Tune TiKV Performance</title>
      <link>https://pingcap.com/docs/stable/reference/performance/tune-tikv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/performance/tune-tikv/</guid>
      <description>Learn how to tune the TiKV parameters for optimal performance.</description>
    </item>
    
    <item>
      <title>Tune TiKV Performance</title>
      <link>https://pingcap.com/docs/v2.1/reference/performance/tune-tikv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/performance/tune-tikv/</guid>
      <description>Learn how to tune the TiKV parameters for optimal performance.</description>
    </item>
    
    <item>
      <title>Tune TiKV Performance</title>
      <link>https://pingcap.com/docs/v3.1/reference/performance/tune-tikv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/performance/tune-tikv/</guid>
      <description>Learn how to tune the TiKV parameters for optimal performance.</description>
    </item>
    
    <item>
      <title>Type Conversion in Expression Evaluation</title>
      <link>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/type-conversion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/type-conversion/</guid>
      <description>Learn about the type conversion in expression evaluation.</description>
    </item>
    
    <item>
      <title>Type Conversion in Expression Evaluation</title>
      <link>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/type-conversion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/type-conversion/</guid>
      <description>Learn about the type conversion in expression evaluation.</description>
    </item>
    
    <item>
      <title>Type Conversion in Expression Evaluation</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/type-conversion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/functions-and-operators/type-conversion/</guid>
      <description>Learn about the type conversion in expression evaluation.</description>
    </item>
    
    <item>
      <title>Type Conversion in Expression Evaluation</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/type-conversion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/type-conversion/</guid>
      <description>Learn about the type conversion in expression evaluation.</description>
    </item>
    
    <item>
      <title>Understand the Query Execution Plan</title>
      <link>https://pingcap.com/docs/dev/reference/performance/understanding-the-query-execution-plan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/performance/understanding-the-query-execution-plan/</guid>
      <description>Learn about the execution plan information returned by the &lt;code&gt;EXPLAIN&lt;/code&gt; statement in TiDB.</description>
    </item>
    
    <item>
      <title>Understand the Query Execution Plan</title>
      <link>https://pingcap.com/docs/stable/reference/performance/understanding-the-query-execution-plan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/performance/understanding-the-query-execution-plan/</guid>
      <description>Learn about the execution plan information returned by the &lt;code&gt;EXPLAIN&lt;/code&gt; statement in TiDB.</description>
    </item>
    
    <item>
      <title>Understand the Query Execution Plan</title>
      <link>https://pingcap.com/docs/v2.1/reference/performance/understanding-the-query-execution-plan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/performance/understanding-the-query-execution-plan/</guid>
      <description>Learn about the execution plan information returned by the &lt;code&gt;EXPLAIN&lt;/code&gt; statement in TiDB.</description>
    </item>
    
    <item>
      <title>Understand the Query Execution Plan</title>
      <link>https://pingcap.com/docs/v3.1/reference/performance/understanding-the-query-execution-plan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/performance/understanding-the-query-execution-plan/</guid>
      <description>Learn about the execution plan information returned by the &lt;code&gt;EXPLAIN&lt;/code&gt; statement in TiDB.</description>
    </item>
    
    <item>
      <title>UPDATE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/update/</guid>
      <description>TiDB 数据库中 UPDATE 的使用概况。</description>
    </item>
    
    <item>
      <title>UPDATE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/update/</guid>
      <description>TiDB 数据库中 UPDATE 的使用概况。</description>
    </item>
    
    <item>
      <title>UPDATE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/update/</guid>
      <description>TiDB 数据库中 UPDATE 的使用概况。</description>
    </item>
    
    <item>
      <title>UPDATE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/update/</guid>
      <description>TiDB 数据库中 UPDATE 的使用概况。</description>
    </item>
    
    <item>
      <title>UPDATE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/update/</guid>
      <description>An overview of the usage of UPDATE for the TiDB database.</description>
    </item>
    
    <item>
      <title>UPDATE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/update/</guid>
      <description>An overview of the usage of UPDATE for the TiDB database.</description>
    </item>
    
    <item>
      <title>UPDATE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/update/</guid>
      <description>An overview of the usage of UPDATE for the TiDB database.</description>
    </item>
    
    <item>
      <title>UPDATE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/update/</guid>
      <description>An overview of the usage of UPDATE for the TiDB database.</description>
    </item>
    
    <item>
      <title>Updates</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/upgrades/updates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/upgrades/updates/</guid>
      <description>Updates  Resources Container Definition for TiDB
Transcript So let&#39;s discuss updates first. Starting with the lowest level, and working our way up.
In our cloud deployment, patching of the infrastructure, switches, routers, firmware is all handled by Google. Sitting above that is Kubernetes, which is also handled by Google.
We then have the Google Kubernetes Engine and the node pool of VMs running Container-Optimized OS (COS).
We have some flexibility in selecting the master version of the Google Kubernetes Engine (at writing the default is 1.</description>
    </item>
    
    <item>
      <title>Updates, Upgrades and Migrations</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/upgrades/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/upgrades/overview/</guid>
      <description>Updates, Upgrades and Migrations  Transcript Welcome back.
In this section, we are going to be talking about updates, upgrades, and migrations. To define the terminology:
  An update is a point release, for example, from TiDB 2.0.4 to 2.0.7. Updates are always expected to be safe to perform, and contain fixes to critical bugs (either security of functionality). They typically will not contain new functionality or changes to behaviors.</description>
    </item>
    
    <item>
      <title>Upgrade Data Migration</title>
      <link>https://pingcap.com/docs/dev/reference/tools/data-migration/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/data-migration/upgrade/</guid>
      <description>Learn how to upgrade a Data Migration version to an incompatible version.</description>
    </item>
    
    <item>
      <title>Upgrade Data Migration</title>
      <link>https://pingcap.com/docs/stable/reference/tools/data-migration/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tools/data-migration/upgrade/</guid>
      <description>Learn how to upgrade a Data Migration version to an incompatible version.</description>
    </item>
    
    <item>
      <title>Upgrade Data Migration</title>
      <link>https://pingcap.com/docs/v2.1/reference/tools/data-migration/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tools/data-migration/upgrade/</guid>
      <description>Learn how to upgrade a Data Migration version to an incompatible version.</description>
    </item>
    
    <item>
      <title>Upgrade Data Migration</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/data-migration/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/data-migration/upgrade/</guid>
      <description>Learn how to upgrade a Data Migration version to an incompatible version.</description>
    </item>
    
    <item>
      <title>Upgrade TiDB Binlog</title>
      <link>https://pingcap.com/docs/dev/reference/tidb-binlog/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tidb-binlog/upgrade/</guid>
      <description>Learn how to upgrade TiDB Binlog to the latest cluster version.</description>
    </item>
    
    <item>
      <title>Upgrade TiDB Binlog</title>
      <link>https://pingcap.com/docs/stable/reference/tidb-binlog/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/tidb-binlog/upgrade/</guid>
      <description>Learn how to upgrade TiDB Binlog to the latest cluster version.</description>
    </item>
    
    <item>
      <title>Upgrade TiDB Binlog</title>
      <link>https://pingcap.com/docs/v2.1/reference/tidb-binlog/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/tidb-binlog/upgrade/</guid>
      <description>Learn how to upgrade TiDB Binlog to the latest cluster version.</description>
    </item>
    
    <item>
      <title>Upgrade TiDB Binlog</title>
      <link>https://pingcap.com/docs/v3.1/reference/tidb-binlog/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tidb-binlog/upgrade/</guid>
      <description>Learn how to upgrade TiDB Binlog to the latest cluster version.</description>
    </item>
    
    <item>
      <title>Upgrade TiDB Operator and Kubernetes</title>
      <link>https://pingcap.com/docs/dev/tidb-in-kubernetes/upgrade/tidb-operator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/tidb-in-kubernetes/upgrade/tidb-operator/</guid>
      <description>Learn how to upgrade TiDB Operator and Kubernetes.</description>
    </item>
    
    <item>
      <title>Upgrade TiDB Operator and Kubernetes</title>
      <link>https://pingcap.com/docs/stable/tidb-in-kubernetes/upgrade/tidb-operator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/tidb-in-kubernetes/upgrade/tidb-operator/</guid>
      <description>Learn how to upgrade TiDB Operator and Kubernetes.</description>
    </item>
    
    <item>
      <title>Upgrade TiDB Operator and Kubernetes</title>
      <link>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/upgrade/tidb-operator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/tidb-in-kubernetes/upgrade/tidb-operator/</guid>
      <description>Learn how to upgrade TiDB Operator and Kubernetes.</description>
    </item>
    
    <item>
      <title>Upgrades</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/upgrades/upgrades/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/upgrades/upgrades/</guid>
      <description>Upgrades  Transcript Upgrades are often less time sensitive or critical than updates.
Rather than the motivation being security updates as it is with updates, an upgrade is more forward looking and strategic. The motivation could be for improved compatibility with MySQL, performance enhancements, or an entirely new feature.
In the case of TiDB, you may be planning your upgrade from TiDB 2.0 to 2.1.
Using this as an example, an upgrade to 2.</description>
    </item>
    
    <item>
      <title>USE</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/statements/use/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/statements/use/</guid>
      <description>TiDB 数据库中 USE 的使用概况。</description>
    </item>
    
    <item>
      <title>USE</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/statements/use/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/statements/use/</guid>
      <description>TiDB 数据库中 USE 的使用概况。</description>
    </item>
    
    <item>
      <title>USE</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/use/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/statements/use/</guid>
      <description>TiDB 数据库中 USE 的使用概况。</description>
    </item>
    
    <item>
      <title>USE</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/use/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/statements/use/</guid>
      <description>TiDB 数据库中 USE 的使用概况。</description>
    </item>
    
    <item>
      <title>Use BR to Back up and Restore Data</title>
      <link>https://pingcap.com/docs/dev/reference/tools/br/br/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/tools/br/br/</guid>
      <description>Learn how to back up and restore data of the TiDB cluster using BR.</description>
    </item>
    
    <item>
      <title>Use BR to Back up and Restore Data</title>
      <link>https://pingcap.com/docs/v3.1/reference/tools/br/br/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/tools/br/br/</guid>
      <description>Learn how to back up and restore data of the TiDB cluster using BR.</description>
    </item>
    
    <item>
      <title>Use Mydumper and TiDB Lightning for Backup and Restoration</title>
      <link>https://pingcap.com/docs/dev/how-to/maintain/backup-and-restore/mydumper-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/how-to/maintain/backup-and-restore/mydumper-lightning/</guid>
      <description>Use Mydumper and TiDB Lightning for Data Backup and Restoration This document describes how to perform full backup and restoration of the TiDB data using Mydumper and TiDB Lightning. For incremental backup and restoration, refer to TiDB Binlog.
Suppose that the TiDB service information is as follows:
   Name Address Port User Password     TiDB 127.0.0.1 4000 root *    Use the following tools for data backup and restoration:</description>
    </item>
    
    <item>
      <title>Use Mydumper and TiDB Lightning for Backup and Restoration</title>
      <link>https://pingcap.com/docs/v3.1/how-to/maintain/backup-and-restore/mydumper-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/how-to/maintain/backup-and-restore/mydumper-lightning/</guid>
      <description>Use Mydumper and TiDB Lightning for Data Backup and Restoration This document describes how to perform full backup and restoration of the TiDB data using Mydumper and TiDB Lightning. For incremental backup and restoration, refer to TiDB Binlog.
Suppose that the TiDB service information is as follows:
   Name Address Port User Password     TiDB 127.0.0.1 4000 root *    Use the following tools for data backup and restoration:</description>
    </item>
    
    <item>
      <title>USE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/dev/reference/sql/statements/use/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/statements/use/</guid>
      <description>An overview of the usage of USE for the TiDB database.</description>
    </item>
    
    <item>
      <title>USE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/stable/reference/sql/statements/use/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/statements/use/</guid>
      <description>An overview of the usage of USE for the TiDB database.</description>
    </item>
    
    <item>
      <title>USE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/statements/use/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/statements/use/</guid>
      <description>An overview of the usage of USE for the TiDB database.</description>
    </item>
    
    <item>
      <title>USE | TiDB SQL Statement Reference</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/statements/use/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/statements/use/</guid>
      <description>An overview of the usage of USE for the TiDB database.</description>
    </item>
    
    <item>
      <title>User Information</title>
      <link>https://pingcap.com/tidb-planet/user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-planet/user/</guid>
      <description>Have fun adventure on TiDB Planet!</description>
    </item>
    
    <item>
      <title>User-Defined Variables</title>
      <link>https://pingcap.com/docs/dev/reference/sql/language-structure/user-defined-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/language-structure/user-defined-variables/</guid>
      <description>Learn how to use user-defined variables.</description>
    </item>
    
    <item>
      <title>User-Defined Variables</title>
      <link>https://pingcap.com/docs/stable/reference/sql/language-structure/user-defined-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/language-structure/user-defined-variables/</guid>
      <description>Learn how to use user-defined variables.</description>
    </item>
    
    <item>
      <title>User-Defined Variables</title>
      <link>https://pingcap.com/docs/v2.1/reference/sql/language-structure/user-defined-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v2.1/reference/sql/language-structure/user-defined-variables/</guid>
      <description>Learn how to use user-defined variables.</description>
    </item>
    
    <item>
      <title>User-Defined Variables</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/language-structure/user-defined-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/language-structure/user-defined-variables/</guid>
      <description>Learn how to use user-defined variables.</description>
    </item>
    
    <item>
      <title>Views</title>
      <link>https://pingcap.com/docs/dev/reference/sql/views/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/views/</guid>
      <description>Learn how to use views in TiDB.</description>
    </item>
    
    <item>
      <title>Views</title>
      <link>https://pingcap.com/docs/stable/reference/sql/views/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/views/</guid>
      <description>Learn how to use views in TiDB.</description>
    </item>
    
    <item>
      <title>Views</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/views/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/views/</guid>
      <description>Learn how to use views in TiDB.</description>
    </item>
    
    <item>
      <title>Village</title>
      <link>https://pingcap.com/tidb-planet/village/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-planet/village/</guid>
      <description>Have fun adventure on TiDB Planet!</description>
    </item>
    
    <item>
      <title>What&#39;s Next?</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/conclusion/whats-next/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/conclusion/whats-next/</guid>
      <description>What&#39;s Next?  Resources  Course Survey TiDB on GKE Marketplace TiDB Certification Exam Private TiDB Training  Transcript You&#39;ve now completed TiDB Academy&#39;s &amp;ldquo;TiDB for MySQL DBAs&amp;rdquo; course. You might be wondering, what&#39;s next?
First things first, we&#39;d love to get your feedback on your experience with this course. Please take this 2-minute survey and you&#39;ll enter a raffle automatically for a $40 Amazon gift card. The link is in the resources section.</description>
    </item>
    
    <item>
      <title>Window Functions</title>
      <link>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/window-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/dev/reference/sql/functions-and-operators/window-functions/</guid>
      <description>This document introduces window functions supported in TiDB.</description>
    </item>
    
    <item>
      <title>Window Functions</title>
      <link>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/window-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/stable/reference/sql/functions-and-operators/window-functions/</guid>
      <description>This document introduces window functions supported in TiDB.</description>
    </item>
    
    <item>
      <title>Window Functions</title>
      <link>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/window-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs/v3.1/reference/sql/functions-and-operators/window-functions/</guid>
      <description>This document introduces window functions supported in TiDB.</description>
    </item>
    
    <item>
      <title>XXXX</title>
      <link>https://pingcap.com/tidb-academy/mysql_dbas/_google_shell_tutorials/template/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/tidb-academy/mysql_dbas/_google_shell_tutorials/template/</guid>
      <description>Tutorial for deploying TiDB on Google Cloud using Kubernetes.</description>
    </item>
    
    <item>
      <title>上游 MySQL 实例配置前置检查</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/precheck/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/precheck/</guid>
      <description>上游 MySQL 实例配置前置检查 本文介绍了 DM 提供的前置检查功能，此功能用于在数据同步任务启动时提前检测出上游 MySQL 实例配置中可能存在的一些错误。
使用命令 check-task 命令用于对上游 MySQL 实例配置是否满足 DM 要求进行前置检查。
检查内容 上下游数据库用户必须具备相应读写权限。当数据同步任务启动时，DM 会自动检查下列权限和配置：
  数据库版本
 5.5 &amp;lt; MySQL 版本 &amp;lt; 8.0 MariaDB 版本 &amp;gt;= 10.1.2    MySQL binlog 配置
 binlog 是否开启（DM 要求 binlog 必须开启） 是否有 binlog_format=ROW（DM 只支持 ROW 格式的 binlog 同步） 是否有 binlog_row_image=FULL（DM 只支持 binlog_row_image=FULL）    上游 MySQL 实例用户的权限
DM 配置中的 MySQL 用户至少需要具备以下权限：
 REPLICATION SLAVE REPLICATION CLIENT RELOAD SELECT    上游 MySQL 表结构的兼容性</description>
    </item>
    
    <item>
      <title>上游 MySQL 实例配置前置检查</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/precheck/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/precheck/</guid>
      <description>上游 MySQL 实例配置前置检查 本文介绍了 DM 提供的前置检查功能，此功能用于在数据同步任务启动时提前检测出上游 MySQL 实例配置中可能存在的一些错误。
使用命令 check-task 命令用于对上游 MySQL 实例配置是否满足 DM 要求进行前置检查。
检查内容 上下游数据库用户必须具备相应读写权限。当数据同步任务启动时，DM 会自动检查下列权限和配置：
  数据库版本
 5.5 &amp;lt; MySQL 版本 &amp;lt; 8.0 MariaDB 版本 &amp;gt;= 10.1.2    MySQL binlog 配置
 binlog 是否开启（DM 要求 binlog 必须开启） 是否有 binlog_format=ROW（DM 只支持 ROW 格式的 binlog 同步） 是否有 binlog_row_image=FULL（DM 只支持 binlog_row_image=FULL）    上游 MySQL 实例用户的权限
DM 配置中的 MySQL 用户至少需要具备以下权限：
 REPLICATION SLAVE REPLICATION CLIENT RELOAD SELECT    上游 MySQL 表结构的兼容性</description>
    </item>
    
    <item>
      <title>上游 MySQL 实例配置前置检查</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/precheck/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/precheck/</guid>
      <description>上游 MySQL 实例配置前置检查 本文介绍了 DM 提供的前置检查功能，此功能用于在数据同步任务启动时提前检测出上游 MySQL 实例配置中可能存在的一些错误。
使用命令 check-task 命令用于对上游 MySQL 实例配置是否满足 DM 要求进行前置检查。
检查内容 上下游数据库用户必须具备相应读写权限。当数据同步任务启动时，DM 会自动检查下列权限和配置：
  数据库版本
 5.5 &amp;lt; MySQL 版本 &amp;lt; 8.0 MariaDB 版本 &amp;gt;= 10.1.2    MySQL binlog 配置
 binlog 是否开启（DM 要求 binlog 必须开启） 是否有 binlog_format=ROW（DM 只支持 ROW 格式的 binlog 同步） 是否有 binlog_row_image=FULL（DM 只支持 binlog_row_image=FULL）    上游 MySQL 实例用户的权限
DM 配置中的 MySQL 用户至少需要具备以下权限：
 REPLICATION SLAVE REPLICATION CLIENT RELOAD SELECT    上游 MySQL 表结构的兼容性</description>
    </item>
    
    <item>
      <title>上游 MySQL 实例配置前置检查</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/precheck/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/precheck/</guid>
      <description>上游 MySQL 实例配置前置检查 本文介绍了 DM 提供的前置检查功能，此功能用于在数据同步任务启动时提前检测出上游 MySQL 实例配置中可能存在的一些错误。
使用命令 check-task 命令用于对上游 MySQL 实例配置是否满足 DM 要求进行前置检查。
检查内容 上下游数据库用户必须具备相应读写权限。当数据同步任务启动时，DM 会自动检查下列权限和配置：
  数据库版本
 5.5 &amp;lt; MySQL 版本 &amp;lt; 8.0 MariaDB 版本 &amp;gt;= 10.1.2    MySQL binlog 配置
 binlog 是否开启（DM 要求 binlog 必须开启） 是否有 binlog_format=ROW（DM 只支持 ROW 格式的 binlog 同步） 是否有 binlog_row_image=FULL（DM 只支持 binlog_row_image=FULL）    上游 MySQL 实例用户的权限
DM 配置中的 MySQL 用户至少需要具备以下权限：
 REPLICATION SLAVE REPLICATION CLIENT RELOAD SELECT    上游 MySQL 表结构的兼容性</description>
    </item>
    
    <item>
      <title>下推到 TiKV 的表达式列表</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/expressions-pushed-down/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/expressions-pushed-down/</guid>
      <description>TiDB 中下推到 TiKV 的表达式列表及相关设置。</description>
    </item>
    
    <item>
      <title>下推到 TiKV 的表达式列表</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/expressions-pushed-down/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/expressions-pushed-down/</guid>
      <description>TiDB 中下推到 TiKV 的表达式列表及相关设置。</description>
    </item>
    
    <item>
      <title>下推到 TiKV 的表达式列表</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/expressions-pushed-down/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/expressions-pushed-down/</guid>
      <description>TiDB 中下推到 TiKV 的表达式列表及相关设置。</description>
    </item>
    
    <item>
      <title>不同库名或表名的数据校验</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/sync-diff-inspector/route-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/sync-diff-inspector/route-diff/</guid>
      <description>不同库名或表名的数据校验 用户在使用 DM 等同步工具时，可以设置 route-rules 将数据同步到下游指定表中。sync-diff-inspector 提供了校验不同库名、表名的表的功能。
下面是一个简单的例子：
######################### Tables config ######################### # 配置需要对比的*目标数据库*中的表 [[check-tables]] # 目标库中数据库的名称 schema = &amp;#34;test_2&amp;#34; # 需要检查的表 tables = [&amp;#34;t_2&amp;#34;] # 下面是一个对比不同库名和表名的两个表的配置示例 [[table-config]] # 目标库名 schema = &amp;#34;test_2&amp;#34; # 目标表名 table = &amp;#34;t_2&amp;#34; # 源数据的配置 [[table-config.source-tables]] # 源库的实例 id instance-id = &amp;#34;source-1&amp;#34; # 源数据库的名称 schema = &amp;#34;test_1&amp;#34; # 源表的名称 table = &amp;#34;t_1&amp;#34; 使用该配置会对下游的 test_2.t_2 与实例 source-1 中的 test_1.t_1 进行校验。
如果需要校验大量的不同库名或者表名的表，可以通过 table-rule 设置映射关系来简化配置。可以只配置 schema 或者 table 的映射关系，也可以都配置。例如上游库 test_1 中的所有表都同步到了下游的 test_2 库中，可以使用如下配置进行校验：</description>
    </item>
    
    <item>
      <title>不同库名或表名的数据校验</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/sync-diff-inspector/route-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/sync-diff-inspector/route-diff/</guid>
      <description>不同库名或表名的数据校验 用户在使用 DM 等同步工具时，可以设置 route-rules 将数据同步到下游指定表中。sync-diff-inspector 提供了校验不同库名、表名的表的功能。
下面是一个简单的例子：
######################### Tables config ######################### # 配置需要对比的*目标数据库*中的表 [[check-tables]] # 目标库中数据库的名称 schema = &amp;#34;test_2&amp;#34; # 需要检查的表 tables = [&amp;#34;t_2&amp;#34;] # 下面是一个对比不同库名和表名的两个表的配置示例 [[table-config]] # 目标库名 schema = &amp;#34;test_2&amp;#34; # 目标表名 table = &amp;#34;t_2&amp;#34; # 源数据的配置 [[table-config.source-tables]] # 源库的实例 id instance-id = &amp;#34;source-1&amp;#34; # 源数据库的名称 schema = &amp;#34;test_1&amp;#34; # 源表的名称 table = &amp;#34;t_1&amp;#34; 使用该配置会对下游的 test_2.t_2 与实例 source-1 中的 test_1.t_1 进行校验。
如果需要校验大量的不同库名或者表名的表，可以通过 table-rule 设置映射关系来简化配置。可以只配置 schema 或者 table 的映射关系，也可以都配置。例如上游库 test_1 中的所有表都同步到了下游的 test_2 库中，可以使用如下配置进行校验：</description>
    </item>
    
    <item>
      <title>不同库名或表名的数据校验</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/sync-diff-inspector/route-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/sync-diff-inspector/route-diff/</guid>
      <description>不同库名或表名的数据校验 用户在使用 DM 等同步工具时，可以设置 route-rules 将数据同步到下游指定表中。sync-diff-inspector 提供了校验不同库名、表名的表的功能。
下面是一个简单的例子：
######################### Tables config ######################### # 配置需要对比的*目标数据库*中的表 [[check-tables]] # 目标库中数据库的名称 schema = &amp;#34;test_2&amp;#34; # 需要检查的表 tables = [&amp;#34;t_2&amp;#34;] # 下面是一个对比不同库名和表名的两个表的配置示例 [[table-config]] # 目标库名 schema = &amp;#34;test_2&amp;#34; # 目标表名 table = &amp;#34;t_2&amp;#34; # 源数据的配置 [[table-config.source-tables]] # 源库的实例 id instance-id = &amp;#34;source-1&amp;#34; # 源数据库的名称 schema = &amp;#34;test_1&amp;#34; # 源表的名称 table = &amp;#34;t_1&amp;#34; 使用该配置会对下游的 test_2.t_2 与实例 source-1 中的 test_1.t_1 进行校验。
如果需要校验大量的不同库名或者表名的表，可以通过 table-rule 设置映射关系来简化配置。可以只配置 schema 或者 table 的映射关系，也可以都配置。例如上游库 test_1 中的所有表都同步到了下游的 test_2 库中，可以使用如下配置进行校验：</description>
    </item>
    
    <item>
      <title>不同库名或表名的数据校验</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/sync-diff-inspector/route-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/sync-diff-inspector/route-diff/</guid>
      <description>不同库名或表名的数据校验 用户在使用 DM 等同步工具时，可以设置 route-rules 将数据同步到下游指定表中。sync-diff-inspector 提供了校验不同库名、表名的表的功能。
下面是一个简单的例子：
######################### Tables config ######################### # 配置需要对比的*目标数据库*中的表 [[check-tables]] # 目标库中数据库的名称 schema = &amp;#34;test_2&amp;#34; # 需要检查的表 tables = [&amp;#34;t_2&amp;#34;] # 下面是一个对比不同库名和表名的两个表的配置示例 [[table-config]] # 目标库名 schema = &amp;#34;test_2&amp;#34; # 目标表名 table = &amp;#34;t_2&amp;#34; # 源数据的配置 [[table-config.source-tables]] # 源库的实例 id instance-id = &amp;#34;source-1&amp;#34; # 源数据库的名称 schema = &amp;#34;test_1&amp;#34; # 源表的名称 table = &amp;#34;t_1&amp;#34; 使用该配置会对下游的 test_2.t_2 与实例 source-1 中的 test_1.t_1 进行校验。
如果需要校验大量的不同库名或者表名的表，可以通过 table-rule 设置映射关系来简化配置。可以只配置 schema 或者 table 的映射关系，也可以都配置。例如上游库 test_1 中的所有表都同步到了下游的 test_2 库中，可以使用如下配置进行校验：</description>
    </item>
    
    <item>
      <title>与 MySQL 兼容性对比</title>
      <link>https://pingcap.com/docs-cn/dev/reference/mysql-compatibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/mysql-compatibility/</guid>
      <description>与 MySQL 兼容性对比 TiDB 支持 MySQL 传输协议及其绝大多数的语法。这意味着您现有的 MySQL 连接器和客户端都可以继续使用。大多数情况下您现有的应用都可以迁移至 TiDB，无需任何代码修改。
当前 TiDB 服务器官方支持的版本为 MySQL 5.7。大部分 MySQL 运维工具（如 PHPMyAdmin, Navicat, MySQL Workbench 等），以及备份恢复工具（如 mysqldump, Mydumper/myloader）等都可以直接使用。
不过一些特性由于在分布式环境下没法很好的实现，目前暂时不支持或者是表现与 MySQL 有差异。一些 MySQL 语法在 TiDB 中可以解析通过，但是不会做任何后续的处理，例如 Create Table 语句中 Engine，是解析并忽略。
 注意：
本页内容仅涉及 MySQL 与 TiDB 的总体差异。关于安全特性、悲观事务模型的兼容信息请查看各自具体页面。
 不支持的特性  存储过程与函数 触发器 事件 自定义函数 外键约束 全文/空间函数与索引 非 ascii/latin1/binary/utf8/utf8mb4 的字符集 BINARY 之外的排序规则 增加/删除主键 SYS schema MySQL 追踪优化器 XML 函数 X Protocol Savepoints 列级权限 XA 语法（TiDB 内部使用两阶段提交，但并没有通过 SQL 接口公开） CREATE TABLE tblName AS SELECT stmt 语法 CREATE TEMPORARY TABLE 语法 CHECK TABLE 语法 CHECKSUM TABLE 语法 SELECT INTO FILE 语法  与 MySQL 有差异的特性 自增 ID TiDB 中，自增列只保证自增且唯一，并不保证连续分配。TiDB 目前采用批量分配 ID 的方式，所以如果在多台 TiDB 上同时插入数据，分配的自增 ID 会不连续。</description>
    </item>
    
    <item>
      <title>与 MySQL 兼容性对比</title>
      <link>https://pingcap.com/docs-cn/stable/reference/mysql-compatibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/mysql-compatibility/</guid>
      <description>与 MySQL 兼容性对比 TiDB 支持 MySQL 传输协议及其绝大多数的语法。这意味着您现有的 MySQL 连接器和客户端都可以继续使用。大多数情况下您现有的应用都可以迁移至 TiDB，无需任何代码修改。
当前 TiDB 服务器官方支持的版本为 MySQL 5.7。大部分 MySQL 运维工具（如 PHPMyAdmin, Navicat, MySQL Workbench 等），以及备份恢复工具（如 mysqldump, Mydumper/myloader）等都可以直接使用。
不过一些特性由于在分布式环境下没法很好的实现，目前暂时不支持或者是表现与 MySQL 有差异。一些 MySQL 语法在 TiDB 中可以解析通过，但是不会做任何后续的处理，例如 Create Table 语句中 Engine，是解析并忽略。
 注意：
本页内容仅涉及 MySQL 与 TiDB 的总体差异。关于安全特性、悲观事务模型的兼容信息请查看各自具体页面。
 不支持的特性  存储过程与函数 触发器 事件 自定义函数 外键约束 全文/空间函数与索引 非 ascii/latin1/binary/utf8/utf8mb4 的字符集 BINARY 之外的排序规则 增加/删除主键 SYS schema MySQL 追踪优化器 XML 函数 X Protocol Savepoints 列级权限 XA 语法（TiDB 内部使用两阶段提交，但并没有通过 SQL 接口公开） CREATE TABLE tblName AS SELECT stmt 语法 CREATE TEMPORARY TABLE 语法 CHECK TABLE 语法 CHECKSUM TABLE 语法 SELECT INTO FILE 语法  与 MySQL 有差异的特性 自增 ID TiDB 中，自增列只保证自增且唯一，并不保证连续分配。TiDB 目前采用批量分配 ID 的方式，所以如果在多台 TiDB 上同时插入数据，分配的自增 ID 会不连续。</description>
    </item>
    
    <item>
      <title>与 MySQL 兼容性对比</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/mysql-compatibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/mysql-compatibility/</guid>
      <description>与 MySQL 兼容性对比 TiDB 支持 MySQL 传输协议及其绝大多数的语法。这意味着您现有的 MySQL 连接器和客户端都可以继续使用。大多数情况下您现有的应用都可以迁移至 TiDB，无需任何代码修改。
当前 TiDB 服务器官方支持的版本为 MySQL 5.7。大部分 MySQL 运维工具（如 PHPMyAdmin, Navicat, MySQL Workbench 等），以及备份恢复工具（如 mysqldump，Mydumper/myloader）等都可以直接使用。
不过一些特性由于在分布式环境下没法很好的实现，目前暂时不支持或者是表现与 MySQL 有差异。一些 MySQL 语法在 TiDB 中可以解析通过，但是不会做任何后续的处理，例如 Create Table 语句中 Engine 以及 Partition 选项，都是解析并忽略。
 注意：
本页内容仅涉及 MySQL 与 TiDB 的总体差异。关于安全特性的兼容信息请查看各自具体页面。
 不支持的特性  存储过程与函数 视图 触发器 事件 自定义函数 外键约束 全文函数与索引 空间函数与索引 非 ascii/latin1/binary/utf8/utf8mb4 的字符集 BINARY 之外的排序规则 增加主键 删除主键 SYS schema MySQL 追踪优化器 XML 函数 X Protocol Savepoints 列级权限 CREATE TABLE tblName AS SELECT stmt 语法 CREATE TEMPORARY TABLE 语法 XA 语法（TiDB 内部使用两阶段提交，但并没有通过 SQL 接口公开） LOCK TABLE 语法（TiDB 使用 tidb_snapshot 来生成备份 CHECK TABLE 语法 CHECKSUM TABLE 语法  与 MySQL 有差异的特性 自增 ID TiDB 中，自增列只保证自增且唯一，并不保证连续分配。TiDB 目前采用批量分配 ID 的方式，所以如果在多台 TiDB 上同时插入数据，分配的自增 ID 会不连续。</description>
    </item>
    
    <item>
      <title>与 MySQL 兼容性对比</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/mysql-compatibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/mysql-compatibility/</guid>
      <description>与 MySQL 兼容性对比 TiDB 支持 MySQL 传输协议及其绝大多数的语法。这意味着您现有的 MySQL 连接器和客户端都可以继续使用。大多数情况下您现有的应用都可以迁移至 TiDB，无需任何代码修改。
当前 TiDB 服务器官方支持的版本为 MySQL 5.7。大部分 MySQL 运维工具（如 PHPMyAdmin, Navicat, MySQL Workbench 等），以及备份恢复工具（如 mysqldump, Mydumper/myloader）等都可以直接使用。
不过一些特性由于在分布式环境下没法很好的实现，目前暂时不支持或者是表现与 MySQL 有差异。一些 MySQL 语法在 TiDB 中可以解析通过，但是不会做任何后续的处理，例如 Create Table 语句中 Engine，是解析并忽略。
 注意：
本页内容仅涉及 MySQL 与 TiDB 的总体差异。关于安全特性、悲观事务模型的兼容信息请查看各自具体页面。
 不支持的特性  存储过程与函数 触发器 事件 自定义函数 外键约束 全文/空间函数与索引 非 ascii/latin1/binary/utf8/utf8mb4 的字符集 BINARY 之外的排序规则 增加/删除主键 SYS schema MySQL 追踪优化器 XML 函数 X Protocol Savepoints 列级权限 XA 语法（TiDB 内部使用两阶段提交，但并没有通过 SQL 接口公开） CREATE TABLE tblName AS SELECT stmt 语法 CREATE TEMPORARY TABLE 语法 CHECK TABLE 语法 CHECKSUM TABLE 语法 SELECT INTO FILE 语法  与 MySQL 有差异的特性 自增 ID TiDB 中，自增列只保证自增且唯一，并不保证连续分配。TiDB 目前采用批量分配 ID 的方式，所以如果在多台 TiDB 上同时插入数据，分配的自增 ID 会不连续。</description>
    </item>
    
    <item>
      <title>与 MySQL 安全特性差异</title>
      <link>https://pingcap.com/docs-cn/dev/reference/security/compatibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/security/compatibility/</guid>
      <description>与 MySQL 安全特性差异 除以下功能外，TiDB 支持与 MySQL 5.7 类似的安全特性。
 仅支持 mysql_native_password 身份验证方案。 不支持外部身份验证方式（如 LDAP）。 不支持列级别权限设置。 不支持密码过期，最后一次密码变更记录以及密码生存期。#9709 不支持权限属性 max_questions，max_updated，max_connections 以及 max_user_connections。 不支持密码验证。#9741 不支持透明数据加密（TDE）。  </description>
    </item>
    
    <item>
      <title>与 MySQL 安全特性差异</title>
      <link>https://pingcap.com/docs-cn/stable/reference/security/compatibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/security/compatibility/</guid>
      <description>与 MySQL 安全特性差异 除以下功能外，TiDB 支持与 MySQL 5.7 类似的安全特性。
 仅支持 mysql_native_password 身份验证方案。 不支持外部身份验证方式（如 LDAP）。 不支持列级别权限设置。 不支持密码过期，最后一次密码变更记录以及密码生存期。#9709 不支持权限属性 max_questions，max_updated，max_connections 以及 max_user_connections。 不支持密码验证。#9741 不支持透明数据加密（TDE）。  </description>
    </item>
    
    <item>
      <title>与 MySQL 安全特性差异</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/security/compatibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/security/compatibility/</guid>
      <description>与 MySQL 安全特性差异 除以下功能外，TiDB 支持与 MySQL 5.7 类似的安全特性。
 仅支持 mysql_native_password 身份验证方案。 不支持外部身份验证方式（如 LDAP）。 不支持列级别权限设置。 不支持使用证书验证身份。#9708 不支持密码过期，最后一次密码变更记录以及密码生存期。#9709 不支持权限属性 max_questions，max_updated，max_connections 以及 max_user_connections。 不支持密码验证。#9741 不支持透明数据加密（TDE）。  </description>
    </item>
    
    <item>
      <title>与 MySQL 安全特性差异</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/security/compatibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/security/compatibility/</guid>
      <description>与 MySQL 安全特性差异 除以下功能外，TiDB 支持与 MySQL 5.7 类似的安全特性。
 仅支持 mysql_native_password 身份验证方案。 不支持外部身份验证方式（如 LDAP）。 不支持列级别权限设置。 不支持使用证书验证身份。#9708 不支持密码过期，最后一次密码变更记录以及密码生存期。#9709 不支持权限属性 max_questions，max_updated，max_connections 以及 max_user_connections。 不支持密码验证。#9741 不支持透明数据加密（TDE）。  </description>
    </item>
    
    <item>
      <title>为 TiDB 组件间开启 TLS 和数据加密存储</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/secure/enable-tls-between-components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/secure/enable-tls-between-components/</guid>
      <description>为 TiDB 组件间开启 TLS 和数据加密存储 本文档介绍 TiDB 集群如何开启 TLS 验证和数据加密存储。
开启 TLS 验证 本部分介绍 TiDB 集群如何开启 TLS 验证，TLS 验证支持：
 TiDB 组件之间的双向验证，包括 TiDB、TiKV、PD 相互之间，TiKV Control 与 TiKV、PD Control 与 PD 的双向认证，以及 TiKV peer 之间、PD peer 之间。一旦开启，所有组件之间均使用验证，不支持只开启某一部分的验证。 MySQL Client 与 TiDB 之间的客户端对服务器身份的单向验证以及双向验证。  MySQL Client 与 TiDB 之间使用一套证书，TiDB 集群组件之间使用另外一套证书。
TiDB 集群组件间开启 TLS（双向认证）   准备证书。
推荐为 TiDB、TiKV、PD 分别准备一个 server 证书，并保证可以相互验证，而它们的各种客户端共用 client 证书。
有多种工具可以生成自签名证书，如 openssl，easy-rsa，cfssl。
这里提供一个使用 cfssl 生成证书的示例：生成自签名证书。
  配置证书。
  TiDB</description>
    </item>
    
    <item>
      <title>为 TiDB 组件间开启 TLS 和数据加密存储</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/secure/enable-tls-between-components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/secure/enable-tls-between-components/</guid>
      <description>为 TiDB 组件间开启 TLS 和数据加密存储 本文档介绍 TiDB 集群如何开启 TLS 验证和数据加密存储。
开启 TLS 验证 本部分介绍 TiDB 集群如何开启 TLS 验证，TLS 验证支持：
 TiDB 组件之间的双向验证，包括 TiDB、TiKV、PD 相互之间，TiKV Control 与 TiKV、PD Control 与 PD 的双向认证，以及 TiKV peer 之间、PD peer 之间。一旦开启，所有组件之间均使用验证，不支持只开启某一部分的验证。 MySQL Client 与 TiDB 之间的客户端对服务器身份的单向验证以及双向验证。  MySQL Client 与 TiDB 之间使用一套证书，TiDB 集群组件之间使用另外一套证书。
TiDB 集群组件间开启 TLS（双向认证）   准备证书。
推荐为 TiDB、TiKV、PD 分别准备一个 server 证书，并保证可以相互验证，而它们的各种客户端共用 client 证书。
有多种工具可以生成自签名证书，如 openssl，easy-rsa，cfssl。
这里提供一个使用 cfssl 生成证书的示例：生成自签名证书。
  配置证书。
  TiDB</description>
    </item>
    
    <item>
      <title>为 TiDB 组件间开启 TLS 和数据加密存储</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/secure/enable-tls-between-components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/secure/enable-tls-between-components/</guid>
      <description>为 TiDB 组件间开启 TLS 和数据加密存储 本文档介绍 TiDB 集群如何开启 TLS 验证和数据加密存储。
开启 TLS 验证 本部分介绍 TiDB 集群如何开启 TLS 验证，TLS 验证支持：
 TiDB 组件之间的双向验证，包括 TiDB、TiKV、PD 相互之间，TiKV Control 与 TiKV、PD Control 与 PD 的双向认证，以及 TiKV peer 之间、PD peer 之间。一旦开启，所有组件之间均使用验证，不支持只开启某一部分的验证。 MySQL Client 与 TiDB 之间的客户端对服务器身份的单向验证以及双向验证。  MySQL Client 与 TiDB 之间使用一套证书，TiDB 集群组件之间使用另外一套证书。
TiDB 集群组件间开启 TLS（双向认证）   准备证书。
推荐为 TiDB、TiKV、PD 分别准备一个 server 证书，并保证可以相互验证，而它们的各种客户端共用 client 证书。
有多种工具可以生成自签名证书，如 openssl，easy-rsa，cfssl。
这里提供一个使用 cfssl 生成证书的示例：生成自签名证书。
  配置证书。
  TiDB</description>
    </item>
    
    <item>
      <title>为 TiDB 组件间开启 TLS 和数据加密存储</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/secure/enable-tls-between-components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/secure/enable-tls-between-components/</guid>
      <description>为 TiDB 组件间开启 TLS 和数据加密存储 本文档介绍 TiDB 集群如何开启 TLS 验证和数据加密存储。
开启 TLS 验证 本部分介绍 TiDB 集群如何开启 TLS 验证，TLS 验证支持：
 TiDB 组件之间的双向验证，包括 TiDB、TiKV、PD 相互之间，TiKV Control 与 TiKV、PD Control 与 PD 的双向认证，以及 TiKV peer 之间、PD peer 之间。一旦开启，所有组件之间均使用验证，不支持只开启某一部分的验证。 MySQL Client 与 TiDB 之间的客户端对服务器身份的单向验证以及双向验证。  MySQL Client 与 TiDB 之间使用一套证书，TiDB 集群组件之间使用另外一套证书。
TiDB 集群组件间开启 TLS（双向认证）   准备证书。
推荐为 TiDB、TiKV、PD 分别准备一个 server 证书，并保证可以相互验证，而它们的各种客户端共用 client 证书。
有多种工具可以生成自签名证书，如 openssl，easy-rsa，cfssl。
这里提供一个使用 cfssl 生成证书的示例：生成自签名证书。
  配置证书。
  TiDB</description>
    </item>
    
    <item>
      <title>人力资源实习生</title>
      <link>https://pingcap.com/about-cn/recruit/campus/hr-intern/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/campus/hr-intern/</guid>
      <description>人力资源实习生 岗位职责：
  协助实施招聘工作，发布招聘广告、进行简历筛选、组织面试，评估候选人并提供初步面试报告，出具综合评价意见；
  协助设计优化招聘流程、面试标准、面试题库，组织实施招聘；
  总结招聘工作中存在的问题，提出优化招聘制度和流程的合理化建议；
  总结和统计招聘工作各项数据，完成招聘分析报告；
  配合完成其它人力资源工作。
  任职要求：
  英语好，善于与人交流和收集信息，有计算机相关知识或互联网公司实习经验的优先；
  认真努力学习，吃苦耐劳，Smart，学习能力强；
  每周至少实习 3 天，可持续实习 3 个月以上。
  待遇：
200 元/天，餐补，零食水果，生日会，Team Building
联系方式：
hire@pingcap.com
工作地点：
北京</description>
    </item>
    
    <item>
      <title>从 AWS Aurora MySQL 迁移数据</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/from-aurora/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/from-aurora/</guid>
      <description>使用 DM 从 AWS Aurora MySQL 迁移数据。</description>
    </item>
    
    <item>
      <title>从 AWS Aurora MySQL 迁移数据</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/from-aurora/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/from-aurora/</guid>
      <description>使用 DM 从 AWS Aurora MySQL 迁移数据。</description>
    </item>
    
    <item>
      <title>从 AWS Aurora MySQL 迁移数据</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/from-aurora/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/from-aurora/</guid>
      <description>使用 DM 从 AWS Aurora MySQL 迁移数据。</description>
    </item>
    
    <item>
      <title>从 AWS Aurora MySQL 迁移数据</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/from-aurora/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/from-aurora/</guid>
      <description>使用 DM 从 AWS Aurora MySQL 迁移数据。</description>
    </item>
    
    <item>
      <title>从 MySQL 迁移数据 —— 以 Amazon Aurora MySQL 为例</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/migrate/from-mysql-aurora/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/migrate/from-mysql-aurora/</guid>
      <description>使用 DM 从 MySQL/Amazon Aurora MySQL 迁移数据。</description>
    </item>
    
    <item>
      <title>从 MySQL 迁移数据 —— 以 Amazon Aurora MySQL 为例</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/migrate/from-mysql-aurora/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/migrate/from-mysql-aurora/</guid>
      <description>使用 DM 从 MySQL/Amazon Aurora MySQL 迁移数据。</description>
    </item>
    
    <item>
      <title>从 MySQL 迁移数据 —— 以 Amazon Aurora MySQL 为例</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/migrate/from-aurora/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/migrate/from-aurora/</guid>
      <description>使用 DM 从 MySQL/Amazon Aurora MySQL 迁移数据。</description>
    </item>
    
    <item>
      <title>从 MySQL 迁移数据 —— 以 Amazon Aurora MySQL 为例</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/migrate/from-mysql-aurora/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/migrate/from-mysql-aurora/</guid>
      <description>使用 DM 从 MySQL/Amazon Aurora MySQL 迁移数据。</description>
    </item>
    
    <item>
      <title>位函数和操作符</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/bit-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/bit-functions-and-operators/</guid>
      <description>位函数和操作符 TiDB 支持使用 MySQL 5.7 中提供的所有位函数和操作符。
位函数和操作符表
   函数和操作符名 功能描述     BIT_COUNT() 返回参数二进制表示中为 1 的个数   &amp;amp; 位与   ~ 按位取反   | 位或   ^ 位亦或   &amp;laquo; 左移   &amp;raquo; 右移    </description>
    </item>
    
    <item>
      <title>位函数和操作符</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/bit-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/bit-functions-and-operators/</guid>
      <description>位函数和操作符 TiDB 支持使用 MySQL 5.7 中提供的所有位函数和操作符。
位函数和操作符表
   函数和操作符名 功能描述     BIT_COUNT() 返回参数二进制表示中为 1 的个数   &amp;amp; 位与   ~ 按位取反   | 位或   ^ 位亦或   &amp;laquo; 左移   &amp;raquo; 右移    </description>
    </item>
    
    <item>
      <title>位函数和操作符</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/bit-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/bit-functions-and-operators/</guid>
      <description>位函数和操作符 TiDB 中位函数和操作符的使用方法与 MySQL 基本一致，详情参见: Bit Functions and Operators。
位函数和操作符表
   函数和操作符名 功能描述     BIT_COUNT() 返回参数二进制表示中为 1 的个数   &amp;amp; 位与   ~ 按位取反   | 位或   ^ 位亦或   &amp;laquo; 左移   &amp;raquo; 右移    </description>
    </item>
    
    <item>
      <title>位函数和操作符</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/bit-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/bit-functions-and-operators/</guid>
      <description>位函数和操作符 TiDB 支持使用 MySQL 5.7 中提供的所有位函数和操作符。
位函数和操作符表
   函数和操作符名 功能描述     BIT_COUNT() 返回参数二进制表示中为 1 的个数   &amp;amp; 位与   ~ 按位取反   | 位或   ^ 位亦或   &amp;laquo; 左移   &amp;raquo; 右移    </description>
    </item>
    
    <item>
      <title>使用 BR 进行备份与恢复</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/br/br/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/br/br/</guid>
      <description>了解如何使用 BR 工具进行集群数据备份和恢复。</description>
    </item>
    
    <item>
      <title>使用 BR 进行备份与恢复</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/br/br/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/br/br/</guid>
      <description>了解如何使用 BR 工具进行集群数据备份和恢复。</description>
    </item>
    
    <item>
      <title>使用 DM binary 部署 DM 集群</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/deploy/data-migration-with-binary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/deploy/data-migration-with-binary/</guid>
      <description>使用 DM binary 部署 DM 集群 本文将介绍如何使用 DM binary 快速部署 DM 集群。
准备工作 下载官方 binary，链接地址：DM 下载。
下载的文件中包括子目录 bin 和 conf。bin 目录下包含 dm-master、dm-worker、dmctl 以及 Mydumper 的二进制文件。conf 目录下有相关的示例配置文件。
使用样例 假设在两台服务器上部署 MySQL，在一台服务器上部署 TiDB（mocktikv 模式），另外在三台服务器上部署两个 DM-worker 实例和一个 DM-master 实例。各个节点的信息如下：
   实例 服务器地址     MySQL1 192.168.0.1   MySQL2 192.168.0.2   TiDB 192.168.0.3   DM-master 192.168.0.4   DM-worker1 192.168.0.5   DM-worker2 192.168.0.6    MySQL1 和 MySQL2 中需要开启 binlog。DM-worker1 负责同步 MySQL1 的数据，DM-worker2 负责同步 MySQL2 的数据。下面以此为例，说明如何部署 DM。</description>
    </item>
    
    <item>
      <title>使用 DM binary 部署 DM 集群</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/deploy/data-migration-with-binary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/deploy/data-migration-with-binary/</guid>
      <description>使用 DM binary 部署 DM 集群 本文将介绍如何使用 DM binary 快速部署 DM 集群。
准备工作 下载官方 binary，链接地址：DM 下载。
下载的文件中包括子目录 bin 和 conf。bin 目录下包含 dm-master、dm-worker、dmctl 以及 Mydumper 的二进制文件。conf 目录下有相关的示例配置文件。
使用样例 假设在两台服务器上部署 MySQL，在一台服务器上部署 TiDB（mocktikv 模式），另外在三台服务器上部署两个 DM-worker 实例和一个 DM-master 实例。各个节点的信息如下：
   实例 服务器地址     MySQL1 192.168.0.1   MySQL2 192.168.0.2   TiDB 192.168.0.3   DM-master 192.168.0.4   DM-worker1 192.168.0.5   DM-worker2 192.168.0.6    MySQL1 和 MySQL2 中需要开启 binlog。DM-worker1 负责同步 MySQL1 的数据，DM-worker2 负责同步 MySQL2 的数据。下面以此为例，说明如何部署 DM。</description>
    </item>
    
    <item>
      <title>使用 DM binary 部署 DM 集群</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/deploy/data-migration-with-binary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/deploy/data-migration-with-binary/</guid>
      <description>使用 DM binary 部署 DM 集群 本文将介绍如何使用 DM binary 快速部署 DM 集群。
准备工作 下载官方 binary，链接地址：DM 下载。
下载的文件中包括子目录 bin 和 conf。bin 目录下包含 dm-master、dm-worker、dmctl 以及 Mydumper 的二进制文件。conf 目录下有相关的示例配置文件。
使用样例 假设在两台服务器上部署 MySQL，在一台服务器上部署 TiDB（mocktikv 模式），另外在三台服务器上部署两个 DM-worker 实例和一个 DM-master 实例。各个节点的信息如下：
   实例 服务器地址     MySQL1 192.168.0.1   MySQL2 192.168.0.2   TiDB 192.168.0.3   DM-master 192.168.0.4   DM-worker1 192.168.0.5   DM-worker2 192.168.0.6    MySQL1 和 MySQL2 中需要开启 binlog。DM-worker1 负责同步 MySQL1 的数据，DM-worker2 负责同步 MySQL2 的数据。下面以此为例，说明如何部署 DM。</description>
    </item>
    
    <item>
      <title>使用 DM binary 部署 DM 集群</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/deploy/data-migration-with-binary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/deploy/data-migration-with-binary/</guid>
      <description>使用 DM binary 部署 DM 集群 本文将介绍如何使用 DM binary 快速部署 DM 集群。
准备工作 下载官方 binary，链接地址：DM 下载。
下载的文件中包括子目录 bin 和 conf。bin 目录下包含 dm-master、dm-worker、dmctl 以及 Mydumper 的二进制文件。conf 目录下有相关的示例配置文件。
使用样例 假设在两台服务器上部署 MySQL，在一台服务器上部署 TiDB（mocktikv 模式），另外在三台服务器上部署两个 DM-worker 实例和一个 DM-master 实例。各个节点的信息如下：
   实例 服务器地址     MySQL1 192.168.0.1   MySQL2 192.168.0.2   TiDB 192.168.0.3   DM-master 192.168.0.4   DM-worker1 192.168.0.5   DM-worker2 192.168.0.6    MySQL1 和 MySQL2 中需要开启 binlog。DM-worker1 负责同步 MySQL1 的数据，DM-worker2 负责同步 MySQL2 的数据。下面以此为例，说明如何部署 DM。</description>
    </item>
    
    <item>
      <title>使用 DM 同步数据</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/deploy/</guid>
      <description>使用 DM 同步数据 本文介绍如何使用 DM (Data Migration) 同步数据。
第 1 步：部署 DM 集群 目前推荐使用 DM-Ansible 部署 DM 集群，具体部署方法参照 使用 DM-Ansible 部署 DM 集群；也可以使用 binary 部署 DM 集群用于体验或者测试，具体部署方法参照使用 DM binary 部署 DM 集群。
 注意：
 在 DM 所有的配置文件中，数据库的密码要使用 dmctl 加密后的密文。如果数据库密码为空，则不需要加密。关于如何使用 dmctl 加密明文密码，参考使用 dmctl 加密上游 MySQL 用户密码。 上下游数据库用户必须拥有相应的读写权限。   第 2 步：检查集群信息 使用 DM-Ansible 部署 DM 集群后，相关配置信息如下：
  DM 集群相关组件配置信息
   组件 主机 端口     dm_worker1 172.</description>
    </item>
    
    <item>
      <title>使用 DM 同步数据</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/deploy/</guid>
      <description>使用 DM 同步数据 本文介绍如何使用 DM (Data Migration) 同步数据。
第 1 步：部署 DM 集群 目前推荐使用 DM-Ansible 部署 DM 集群，具体部署方法参照 使用 DM-Ansible 部署 DM 集群；也可以使用 binary 部署 DM 集群用于体验或者测试，具体部署方法参照使用 DM binary 部署 DM 集群。
 注意：
 在 DM 所有的配置文件中，数据库的密码要使用 dmctl 加密后的密文。如果数据库密码为空，则不需要加密。关于如何使用 dmctl 加密明文密码，参考使用 dmctl 加密上游 MySQL 用户密码。 上下游数据库用户必须拥有相应的读写权限。   第 2 步：检查集群信息 使用 DM-Ansible 部署 DM 集群后，相关配置信息如下：
  DM 集群相关组件配置信息
   组件 主机 端口     dm_worker1 172.</description>
    </item>
    
    <item>
      <title>使用 DM 同步数据</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/deploy/</guid>
      <description>使用 DM 同步数据 本文介绍如何使用 DM (Data Migration) 同步数据。
第 1 步：部署 DM 集群 目前推荐使用 DM-Ansible 部署 DM 集群，具体部署方法参照 使用 DM-Ansible 部署 DM 集群；也可以使用 binary 部署 DM 集群用于体验或者测试，具体部署方法参照使用 DM binary 部署 DM 集群。
 注意：
 在 DM 所有的配置文件中，数据库的密码要使用 dmctl 加密后的密文。如果数据库密码为空，则不需要加密。关于如何使用 dmctl 加密明文密码，参考使用 dmctl 加密上游 MySQL 用户密码。 上下游数据库用户必须拥有相应的读写权限。   第 2 步：检查集群信息 使用 DM-Ansible 部署 DM 集群后，相关配置信息如下：
  DM 集群相关组件配置信息
   组件 主机 端口     dm_worker1 172.</description>
    </item>
    
    <item>
      <title>使用 DM 同步数据</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/deploy/</guid>
      <description>使用 DM 同步数据 本文介绍如何使用 DM (Data Migration) 同步数据。
第 1 步：部署 DM 集群 目前推荐使用 DM-Ansible 部署 DM 集群，具体部署方法参照 使用 DM-Ansible 部署 DM 集群；也可以使用 binary 部署 DM 集群用于体验或者测试，具体部署方法参照使用 DM binary 部署 DM 集群。
 注意：
 在 DM 所有的配置文件中，数据库的密码要使用 dmctl 加密后的密文。如果数据库密码为空，则不需要加密。关于如何使用 dmctl 加密明文密码，参考使用 dmctl 加密上游 MySQL 用户密码。 上下游数据库用户必须拥有相应的读写权限。   第 2 步：检查集群信息 使用 DM-Ansible 部署 DM 集群后，相关配置信息如下：
  DM 集群相关组件配置信息
   组件 主机 端口     dm_worker1 172.</description>
    </item>
    
    <item>
      <title>使用 DM-Ansible 部署 DM 集群</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/deploy/data-migration-with-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/deploy/data-migration-with-ansible/</guid>
      <description>使用 DM-Ansible 部署 DM 集群 DM-Ansible 是 PingCAP 基于 Ansible 的 Playbooks 研发的 DM (Data Migration) 集群部署工具。本文将介绍如何使用 DM-Ansible 快速部署 DM 集群。
准备工作 在开始之前，先确保您准备好了以下配置的机器：
  部署目标机器若干，配置如下：
 CentOS 7.3 (64-bit) 或更高版本，x86_64 架构（AMD64） 机器之间内网互通 关闭防火墙，或开放服务端口    一台中控机，配置如下：
 包含 Python 2.7 的 CentOS 7.3（64-bit）或更高版本 Ansible 2.5 或更高版本 互联网访问    第 1 步：在中控机上安装依赖包  注意：
请确保使用 root 账户登录中控机。
 根据中控机的操作系统版本，运行相应命令如下：
  CentOS 7：
 yum -y install epel-release git curl sshpass &amp;amp;&amp;amp; yum -y install python-pip   Ubuntu：</description>
    </item>
    
    <item>
      <title>使用 DM-Ansible 部署 DM 集群</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/deploy/data-migration-with-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/deploy/data-migration-with-ansible/</guid>
      <description>使用 DM-Ansible 部署 DM 集群 DM-Ansible 是 PingCAP 基于 Ansible 的 Playbooks 研发的 DM (Data Migration) 集群部署工具。本文将介绍如何使用 DM-Ansible 快速部署 DM 集群。
准备工作 在开始之前，先确保您准备好了以下配置的机器：
  部署目标机器若干，配置如下：
 CentOS 7.3 (64-bit) 或更高版本，x86_64 架构（AMD64） 机器之间内网互通 关闭防火墙，或开放服务端口    一台中控机，配置如下：
 包含 Python 2.7 的 CentOS 7.3（64-bit）或更高版本 Ansible 2.5 或更高版本 互联网访问    第 1 步：在中控机上安装依赖包  注意：
请确保使用 root 账户登录中控机。
 根据中控机的操作系统版本，运行相应命令如下：
  CentOS 7：
 yum -y install epel-release git curl sshpass &amp;amp;&amp;amp; \ yum -y install python-pip   Ubuntu：</description>
    </item>
    
    <item>
      <title>使用 DM-Ansible 部署 DM 集群</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/deploy/data-migration-with-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/deploy/data-migration-with-ansible/</guid>
      <description>使用 DM-Ansible 部署 DM 集群 DM-Ansible 是 PingCAP 基于 Ansible 的 Playbooks 研发的 DM (Data Migration) 集群部署工具。本文将介绍如何使用 DM-Ansible 快速部署 DM 集群。
准备工作 在开始之前，先确保您准备好了以下配置的机器：
  部署目标机器若干，配置如下：
 CentOS 7.3 (64-bit) 或更高版本，x86_64 架构（AMD64） 机器之间内网互通 关闭防火墙，或开放服务端口    一台中控机，配置如下：
 包含 Python 2.7 的 CentOS 7.3（64-bit）或更高版本 Ansible 2.5 或更高版本 互联网访问    第 1 步：在中控机上安装依赖包  注意：
请确保使用 root 账户登录中控机。
 根据中控机的操作系统版本，运行相应命令如下：
  CentOS 7：
# yum -y install epel-release git curl sshpass # yum -y install python-pip   Ubuntu：</description>
    </item>
    
    <item>
      <title>使用 DM-Ansible 部署 DM 集群</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/deploy/data-migration-with-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/deploy/data-migration-with-ansible/</guid>
      <description>使用 DM-Ansible 部署 DM 集群 DM-Ansible 是 PingCAP 基于 Ansible 的 Playbooks 研发的 DM (Data Migration) 集群部署工具。本文将介绍如何使用 DM-Ansible 快速部署 DM 集群。
准备工作 在开始之前，先确保您准备好了以下配置的机器：
  部署目标机器若干，配置如下：
 CentOS 7.3 (64-bit) 或更高版本，x86_64 架构（AMD64） 机器之间内网互通 关闭防火墙，或开放服务端口    一台中控机，配置如下：
 包含 Python 2.7 的 CentOS 7.3（64-bit）或更高版本 Ansible 2.5 或更高版本 互联网访问    第 1 步：在中控机上安装依赖包  注意：
请确保使用 root 账户登录中控机。
 根据中控机的操作系统版本，运行相应命令如下：
  CentOS 7：
 yum -y install epel-release git curl sshpass &amp;amp;&amp;amp; \ yum -y install python-pip   Ubuntu：</description>
    </item>
    
    <item>
      <title>使用 Docker Compose 快速构建 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/get-started/deploy-tidb-from-docker-compose/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/get-started/deploy-tidb-from-docker-compose/</guid>
      <description>使用 Docker Compose 快速构建 TiDB 集群 本文档介绍如何在单机上通过 Docker Compose 快速一键部署一套 TiDB 测试集群。Docker Compose 可以通过一个 YAML 文件定义多个容器的应用服务，然后一键启动或停止。
 警告：
对于生产环境，不要使用 Docker Compose 进行部署，而应使用 Ansible 部署 TiDB 集群。
 准备环境 确保你的机器上已安装：
 Docker（17.06.0 及以上版本） Docker Compose Git  快速部署   下载 tidb-docker-compose
 git clone https://github.com/pingcap/tidb-docker-compose.git   创建并启动集群
获取最新 Docker 镜像：
 cd tidb-docker-compose &amp;amp;&amp;amp; docker-compose pull &amp;amp;&amp;amp; docker-compose up -d   访问集群
 mysql -h 127.0.0.1 -P 4000 -u root 访问集群 Grafana 监控页面：http://localhost:3000 默认用户名和密码均为 admin。</description>
    </item>
    
    <item>
      <title>使用 Docker Compose 快速构建 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/get-started/deploy-tidb-from-docker-compose/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/get-started/deploy-tidb-from-docker-compose/</guid>
      <description>使用 Docker Compose 快速构建 TiDB 集群 本文档介绍如何在单机上通过 Docker Compose 快速一键部署一套 TiDB 测试集群。Docker Compose 可以通过一个 YAML 文件定义多个容器的应用服务，然后一键启动或停止。
 警告：
对于生产环境，不要使用 Docker Compose 进行部署，而应使用 Ansible 部署 TiDB 集群。
 准备环境 确保你的机器上已安装：
 Docker（17.06.0 及以上版本） Docker Compose Git  快速部署   下载 tidb-docker-compose
 git clone https://github.com/pingcap/tidb-docker-compose.git   创建并启动集群
获取最新 Docker 镜像：
 cd tidb-docker-compose &amp;amp;&amp;amp; docker-compose pull &amp;amp;&amp;amp; docker-compose up -d   访问集群
 mysql -h 127.0.0.1 -P 4000 -u root 访问集群 Grafana 监控页面：http://localhost:3000 默认用户名和密码均为 admin。</description>
    </item>
    
    <item>
      <title>使用 Docker Compose 快速构建 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/get-started/deploy-tidb-from-docker-compose/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/get-started/deploy-tidb-from-docker-compose/</guid>
      <description>使用 Docker Compose 快速构建 TiDB 集群 本文档介绍如何在单机上通过 Docker Compose 快速一键部署一套 TiDB 测试集群。Docker Compose 可以通过一个 YAML 文件定义多个容器的应用服务，然后一键启动或停止。
 注意：
对于生产环境，不要使用 Docker Compose 进行部署，而应使用 Ansible 部署 TiDB 集群。
 准备环境 确保你的机器上已安装：
 Docker（17.06.0 及以上版本） Docker Compose Git  快速部署   下载 tidb-docker-compose
git clone https://github.com/pingcap/tidb-docker-compose.git   创建并启动集群
cd tidb-docker-compose &amp;amp;&amp;amp; docker-compose pull # Get the latest Docker images docker-compose up -d   访问集群
mysql -h 127.0.0.1 -P 4000 -u root 访问集群 Grafana 监控页面：http://localhost:3000 默认用户名和密码均为 admin。</description>
    </item>
    
    <item>
      <title>使用 Docker Compose 快速构建 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/get-started/deploy-tidb-from-docker-compose/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/get-started/deploy-tidb-from-docker-compose/</guid>
      <description>使用 Docker Compose 快速构建 TiDB 集群 本文档介绍如何在单机上通过 Docker Compose 快速一键部署一套 TiDB 测试集群。Docker Compose 可以通过一个 YAML 文件定义多个容器的应用服务，然后一键启动或停止。
 警告：
对于生产环境，不要使用 Docker Compose 进行部署，而应使用 Ansible 部署 TiDB 集群。
 准备环境 确保你的机器上已安装：
 Docker（17.06.0 及以上版本） Docker Compose Git  快速部署   下载 tidb-docker-compose
 git clone https://github.com/pingcap/tidb-docker-compose.git   创建并启动集群
获取最新 Docker 镜像：
 cd tidb-docker-compose &amp;amp;&amp;amp; docker-compose pull &amp;amp;&amp;amp; docker-compose up -d   访问集群
 mysql -h 127.0.0.1 -P 4000 -u root 访问集群 Grafana 监控页面：http://localhost:3000 默认用户名和密码均为 admin。</description>
    </item>
    
    <item>
      <title>使用 Grafana 监控 TiDB 的最佳实践</title>
      <link>https://pingcap.com/docs-cn/dev/reference/best-practices/grafana-monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/best-practices/grafana-monitor/</guid>
      <description>了解高效利用 Grafana 监控 TiDB 的七个技巧。</description>
    </item>
    
    <item>
      <title>使用 Grafana 监控 TiDB 的最佳实践</title>
      <link>https://pingcap.com/docs-cn/stable/reference/best-practices/grafana-monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/best-practices/grafana-monitor/</guid>
      <description>了解高效利用 Grafana 监控 TiDB 的七个技巧。</description>
    </item>
    
    <item>
      <title>使用 Grafana 监控 TiDB 的最佳实践</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/best-practices/grafana-monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/best-practices/grafana-monitor/</guid>
      <description>了解高效利用 Grafana 监控 TiDB 的七个技巧。</description>
    </item>
    
    <item>
      <title>使用 Grafana 监控 TiDB 的最佳实践</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/best-practices/grafana-monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/best-practices/grafana-monitor/</guid>
      <description>了解高效利用 Grafana 监控 TiDB 的七个技巧。</description>
    </item>
    
    <item>
      <title>使用 Index Merge 方式访问表</title>
      <link>https://pingcap.com/docs-cn/dev/reference/performance/index-merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/performance/index-merge/</guid>
      <description>使用 Index Merge 方式访问表 IndexMerge 是在 TiDB 4.0 引入的一种对表的新访问方式。在 IndexMerge 访问方式下，优化器可以选择对一张表使用多个索引，并将每个索引的返回结果进行合并。在某些场景下，这种访问方式能够减少大量不必要的数据扫描，提升查询的执行效率。
本文介绍了 IndexMerge 的适用场景、实际用例以及开启方法。
适用场景 对于 SQL 查询中涉及的每一张表，以前的 TiDB 优化器在物理优化阶段，会根据代价估算从以下三种表访问方式中选择一种：
 TableScan：以 _tidb_rowid 为 key 对表数据进行扫描； IndexScan：以索引列的值为 key 对索引数据进行扫描； IndexLookUp：先用索引列的值为 key 从索引获取到 _tidb_rowid 集合，再回表取出对应的数据行；  这三种方式对每张表最多只能使用一个索引，在有些情况下选出的执行计划并不是最优的，比如：
 create table t(a int, b int, c int, unique key(a), unique key(b)); explain select * from t where a = 1 or b = 1; 由于查询的过滤条件是一个通过 OR 连接的表达式，我们在只能对每张表使用一个索引的限制下，无法将 a = 1 下推到索引 a 上，或将 b = 1 下推到索引 b 上，因此为了保证结果正确性，对这个查询只能生成 TableScan 的执行计划：</description>
    </item>
    
    <item>
      <title>使用 kind 在 Kubernetes 上部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-kind/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-kind/</guid>
      <description>使用 kind 在 Kubernetes 上部署 TiDB 集群。</description>
    </item>
    
    <item>
      <title>使用 kind 在 Kubernetes 上部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-kind/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-kind/</guid>
      <description>使用 kind 在 Kubernetes 上部署 TiDB 集群。</description>
    </item>
    
    <item>
      <title>使用 kind 在 Kubernetes 上部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-kind/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-kind/</guid>
      <description>使用 kind 在 Kubernetes 上部署 TiDB 集群。</description>
    </item>
    
    <item>
      <title>使用 Mydumper/TiDB Lightning 进行备份与恢复</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/maintain/backup-and-restore/mydumper-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/maintain/backup-and-restore/mydumper-lightning/</guid>
      <description>使用 Mydumper/TiDB Lightning 进行备份与恢复 本文档将详细介绍如何使用 Mydumper/TiDB Lightning 对 TiDB 进行全量备份与恢复。增量备份与恢复可使用 TiDB Binlog。
这里假定 TiDB 服务信息如下：
   Name Address Port User Password     TiDB 127.0.0.1 4000 root *    在这个备份恢复过程中，会用到下面的工具：
 Mydumper 从 TiDB 导出数据 TiDB Lightning 导入数据到 TiDB  使用 Mydumper/TiDB Lightning 全量备份恢复数据 mydumper 是一个强大的数据备份工具，具体可以参考 maxbube/mydumper。
可使用 Mydumper 从 TiDB 导出数据进行备份，然后用 TiDB Lightning 将其导入到 TiDB 里面进行恢复。
 注意：
PingCAP 研发团队对 mydumper 进行了针对 TiDB 的适配性改造，建议使用 PingCAP 官方提供的 Mydumper。由于使用 mysqldump 进行数据备份和恢复都要耗费许多时间，这里也并不推荐。</description>
    </item>
    
    <item>
      <title>使用 Mydumper/TiDB Lightning 进行备份与恢复</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/maintain/backup-and-restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/maintain/backup-and-restore/</guid>
      <description>使用 Mydumper/TiDB Lightning 进行备份与恢复 本文档将详细介绍如何使用 Mydumper/TiDB Lightning 对 TiDB 进行全量备份与恢复。增量备份与恢复可使用 TiDB Binlog。
这里假定 TiDB 服务信息如下：
   Name Address Port User Password     TiDB 127.0.0.1 4000 root *    在这个备份恢复过程中，会用到下面的工具：
 Mydumper 从 TiDB 导出数据 TiDB Lightning 导入数据到 TiDB  使用 Mydumper/TiDB Lightning 全量备份恢复数据 mydumper 是一个强大的数据备份工具，具体可以参考 maxbube/mydumper。
可使用 Mydumper 从 TiDB 导出数据进行备份，然后用 TiDB Lightning 将其导入到 TiDB 里面进行恢复。
 注意：
PingCAP 研发团队对 mydumper 进行了针对 TiDB 的适配性改造，建议使用 PingCAP 官方提供的 Mydumper。由于使用 mysqldump 进行数据备份和恢复都要耗费许多时间，这里也并不推荐。</description>
    </item>
    
    <item>
      <title>使用 Mydumper/TiDB Lightning 进行备份与恢复</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/maintain/backup-and-restore/mydumper-lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/maintain/backup-and-restore/mydumper-lightning/</guid>
      <description>使用 Mydumper/TiDB Lightning 进行备份与恢复 本文档将详细介绍如何使用 Mydumper/TiDB Lightning 对 TiDB 进行全量备份与恢复。增量备份与恢复可使用 TiDB Binlog。
这里假定 TiDB 服务信息如下：
   Name Address Port User Password     TiDB 127.0.0.1 4000 root *    在这个备份恢复过程中，会用到下面的工具：
 Mydumper 从 TiDB 导出数据 TiDB Lightning 导入数据到 TiDB  使用 Mydumper/TiDB Lightning 全量备份恢复数据 mydumper 是一个强大的数据备份工具，具体可以参考 maxbube/mydumper。
可使用 Mydumper 从 TiDB 导出数据进行备份，然后用 TiDB Lightning 将其导入到 TiDB 里面进行恢复。
 注意：
PingCAP 研发团队对 mydumper 进行了针对 TiDB 的适配性改造，建议使用 PingCAP 官方提供的 Mydumper。由于使用 mysqldump 进行数据备份和恢复都要耗费许多时间，这里也并不推荐。</description>
    </item>
    
    <item>
      <title>使用 SQL 语句检查 TiDB 集群状态</title>
      <link>https://pingcap.com/docs-cn/dev/reference/performance/check-cluster-status-using-sql-statements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/performance/check-cluster-status-using-sql-statements/</guid>
      <description>使用 SQL 语句检查 TiDB 集群状态 为了方便排查问题，TiDB 提供了一些 SQL 语句和系统表以查询一些有用的信息。
INFORMATION_SCHEMA 中提供了如下几个系统表，用于查询集群状态，诊断常见的集群问题。
 TABLES TIDB_INDEXES ANALYZE_STATUS TIDB_HOT_REGIONS TIKV_STORE_STATUS TIKV_REGION_STATUS TIKV_REGION_PEERS  除此之外，执行下列语句也可获得对排查问题或查询集群状态有用的信息：
 ADMIN SHOW DDL 可以获得是 DDL owner 角色的 TiDB 的 ID 及 IP:PORT 等具体信息。 SHOW ANALYZE STATUS 和 ANALYZE_STATUS 表的功能相同。 特殊的 EXPLAIN 语句：  EXPLAIN ANALYZE 语句可以获得一个 SQL 语句执行中的一些具体信息。 EXPLAIN FOR CONNECTION 可以获得一个连接中最后执行的查询的执行计划。可以配合 SHOW PROCESSLIST 使用。 关于 EXPLAIN 相关的更具体的信息，参考文档理解 TiDB 执行计划。    </description>
    </item>
    
    <item>
      <title>使用 SQL 语句检查 TiDB 集群状态</title>
      <link>https://pingcap.com/docs-cn/stable/reference/performance/check-cluster-status-using-sql-statements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/performance/check-cluster-status-using-sql-statements/</guid>
      <description>使用 SQL 语句检查 TiDB 集群状态 为了方便排查问题，TiDB 提供了一些 SQL 语句和系统表以查询一些有用的信息。
INFORMATION\_SCHEMA 中提供了如下几个系统表，用于查询集群状态，诊断常见的集群问题。
 TABLES TIDB_INDEXES ANALYZE_STATUS TIDB_HOT_REGIONS TIKV_STORE_STATUS TIKV_REGION_STATUS TIKV_REGION_PEERS  除此之外，执行下列语句也可获得对排查问题或查询集群状态有用的信息：
 ADMIN SHOW DDL 可以获得是 DDL owner 角色的 TiDB 的 ID 及 IP:PORT 等具体信息。 SHOW ANALYZE STATUS 和 ANALYZE_STATUS 表的功能相同。 特殊的 EXPLAIN 语句：  EXPLAIN ANALYZE 语句可以获得一个 SQL 语句执行中的一些具体信息。 EXPLAIN FOR CONNECTION 可以获得一个连接中最后执行的查询的执行计划。可以配合 SHOW PROCESSLIST 使用。 关于 EXPLAIN 相关的更具体的信息，参考文档理解 TiDB 执行计划。    </description>
    </item>
    
    <item>
      <title>使用 SQL 语句检查 TiDB 集群状态</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/performance/check-cluster-status-using-sql-statements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/performance/check-cluster-status-using-sql-statements/</guid>
      <description>使用 SQL 语句检查 TiDB 集群状态 为了方便排查问题，TiDB 提供了一些 SQL 语句和系统表以查询一些有用的信息。
INFORMATION\_SCHEMA 中提供了如下几个系统表，用于查询集群状态，诊断常见的集群问题。
 TABLES TIDB_INDEXES ANALYZE_STATUS TIDB_HOT_REGIONS TIKV_STORE_STATUS TIKV_REGION_STATUS TIKV_REGION_PEERS  除此之外，执行下列语句也可获得对排查问题或查询集群状态有用的信息：
 ADMIN SHOW DDL 可以获得是 DDL owner 角色的 TiDB 的 ID 及 IP:PORT 等具体信息。 SHOW ANALYZE STATUS 和 ANALYZE_STATUS 表的功能相同。 特殊的 EXPLAIN 语句：  EXPLAIN ANALYZE 语句可以获得一个 SQL 语句执行中的一些具体信息。 EXPLAIN FOR CONNECTION 可以获得一个连接中最后执行的查询的执行计划。可以配合 SHOW PROCESSLIST 使用。 关于 EXPLAIN 相关的更具体的信息，参考文档理解 TiDB 执行计划。    </description>
    </item>
    
    <item>
      <title>使用 TiDB Ansible 扩容缩容 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/scale/with-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/scale/with-ansible/</guid>
      <description>使用 TiDB Ansible 扩容缩容 TiDB 集群 TiDB 集群可以在不影响线上服务的情况下进行扩容和缩容。
 注意：
以下缩容示例中，被移除的节点没有混合部署其他服务；如果混合部署了其他服务，不能按如下操作。
 假设拓扑结构如下所示：
   Name Host IP Services     node1 172.16.10.1 PD1   node2 172.16.10.2 PD2   node3 172.16.10.3 PD3, Monitor   node4 172.16.10.4 TiDB1   node5 172.16.10.5 TiDB2   node6 172.16.10.6 TiKV1   node7 172.16.10.7 TiKV2   node8 172.16.10.8 TiKV3   node9 172.16.10.9 TiKV4    扩容 TiDB/TiKV 节点 例如，如果要添加两个 TiDB 节点（node101、node102），IP 地址为 172.</description>
    </item>
    
    <item>
      <title>使用 TiDB Ansible 扩容缩容 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/scale/with-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/scale/with-ansible/</guid>
      <description>使用 TiDB Ansible 扩容缩容 TiDB 集群 TiDB 集群可以在不影响线上服务的情况下进行扩容和缩容。
 注意：
以下缩容示例中，被移除的节点没有混合部署其他服务；如果混合部署了其他服务，不能按如下操作。
 假设拓扑结构如下所示：
   Name Host IP Services     node1 172.16.10.1 PD1   node2 172.16.10.2 PD2   node3 172.16.10.3 PD3, Monitor   node4 172.16.10.4 TiDB1   node5 172.16.10.5 TiDB2   node6 172.16.10.6 TiKV1   node7 172.16.10.7 TiKV2   node8 172.16.10.8 TiKV3   node9 172.16.10.9 TiKV4    扩容 TiDB/TiKV 节点 例如，如果要添加两个 TiDB 节点（node101、node102），IP 地址为 172.</description>
    </item>
    
    <item>
      <title>使用 TiDB Ansible 扩容缩容 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/scale/with-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/scale/with-ansible/</guid>
      <description>使用 TiDB Ansible 扩容缩容 TiDB 集群 TiDB 集群可以在不影响线上服务的情况下进行扩容和缩容。
 注意：
以下缩容示例中，被移除的节点没有混合部署其他服务；如果混合部署了其他服务，不能按如下操作。
 假设拓扑结构如下所示：
   Name Host IP Services     node1 172.16.10.1 PD1   node2 172.16.10.2 PD2   node3 172.16.10.3 PD3, Monitor   node4 172.16.10.4 TiDB1   node5 172.16.10.5 TiDB2   node6 172.16.10.6 TiKV1   node7 172.16.10.7 TiKV2   node8 172.16.10.8 TiKV3   node9 172.16.10.9 TiKV4    扩容 TiDB/TiKV 节点 例如，如果要添加两个 TiDB 节点（node101、node102），IP 地址为 172.</description>
    </item>
    
    <item>
      <title>使用 TiDB Ansible 扩容缩容 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/scale/with-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/scale/with-ansible/</guid>
      <description>使用 TiDB Ansible 扩容缩容 TiDB 集群 TiDB 集群可以在不影响线上服务的情况下进行扩容和缩容。
 注意：
以下缩容示例中，被移除的节点没有混合部署其他服务；如果混合部署了其他服务，不能按如下操作。
 假设拓扑结构如下所示：
   Name Host IP Services     node1 172.16.10.1 PD1   node2 172.16.10.2 PD2   node3 172.16.10.3 PD3, Monitor   node4 172.16.10.4 TiDB1   node5 172.16.10.5 TiDB2   node6 172.16.10.6 TiKV1   node7 172.16.10.7 TiKV2   node8 172.16.10.8 TiKV3   node9 172.16.10.9 TiKV4    扩容 TiDB/TiKV 节点 例如，如果要添加两个 TiDB 节点（node101、node102），IP 地址为 172.</description>
    </item>
    
    <item>
      <title>使用 TiDB Ansible 部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/deploy/orchestrated/ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/deploy/orchestrated/ansible/</guid>
      <description>使用 TiDB Ansible 部署 TiDB 集群 概述 Ansible 是一款自动化运维工具，TiDB Ansible 是 PingCAP 基于 Ansible playbook 功能编写的集群部署工具。本文档介绍如何使用 TiDB Ansible 部署一个完整的 TiDB 集群。
本部署工具可以通过配置文件设置集群拓扑，完成以下各项运维工作：
 初始化操作系统参数 部署 TiDB 集群（包括 PD、TiDB、TiKV 等组件和监控组件） 启动集群 关闭集群 变更组件配置 集群扩容缩容 升级组件版本 集群开启 binlog 清除集群数据 销毁集群   注意：
对于生产环境，须使用 TiDB Ansible 部署 TiDB 集群。如果只是用于测试 TiDB 或体验 TiDB 的特性，建议使用 Docker Compose 在单机上快速部署 TiDB 集群。
 准备机器   部署目标机器若干
 建议 4 台及以上，TiKV 至少 3 实例，且与 TiDB、PD 模块不位于同一主机，详见部署建议。 我们支持 x86_64 (AMD64) 和 ARM64 两种架构。在 AMD64 架构下，建议使用 CentOS 7.</description>
    </item>
    
    <item>
      <title>使用 TiDB Ansible 部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/deploy/orchestrated/ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/deploy/orchestrated/ansible/</guid>
      <description>使用 TiDB Ansible 部署 TiDB 集群 概述 Ansible 是一款自动化运维工具，TiDB Ansible 是 PingCAP 基于 Ansible playbook 功能编写的集群部署工具。本文档介绍如何使用 TiDB Ansible 部署一个完整的 TiDB 集群。
本部署工具可以通过配置文件设置集群拓扑，完成以下各项运维工作：
 初始化操作系统参数 部署 TiDB 集群（包括 PD、TiDB、TiKV 等组件和监控组件） 启动集群 关闭集群 变更组件配置 集群扩容缩容 升级组件版本 集群开启 binlog 清除集群数据 销毁集群   注意：
对于生产环境，须使用 TiDB Ansible 部署 TiDB 集群。如果只是用于测试 TiDB 或体验 TiDB 的特性，建议使用 Docker Compose 在单机上快速部署 TiDB 集群。
 准备机器   部署目标机器若干
 建议 4 台及以上，TiKV 至少 3 实例，且与 TiDB、PD 模块不位于同一主机，详见部署建议。 推荐安装 CentOS 7.</description>
    </item>
    
    <item>
      <title>使用 TiDB Ansible 部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/deploy/orchestrated/ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/deploy/orchestrated/ansible/</guid>
      <description>使用 TiDB Ansible 部署 TiDB 集群 概述 Ansible 是一款自动化运维工具，TiDB Ansible 是 PingCAP 基于 Ansible playbook 功能编写的集群部署工具。本文档介绍如何使用 TiDB Ansible 部署一个完整的 TiDB 集群。
本部署工具可以通过配置文件设置集群拓扑，完成以下各项运维工作：
 初始化操作系统参数 部署 TiDB 集群（包括 PD、TiDB、TiKV 等组件和监控组件） 启动集群 关闭集群 变更组件配置 集群扩容缩容 升级组件版本 集群开启 binlog 清除集群数据 销毁集群   注意：
对于生产环境，须使用 TiDB Ansible 部署 TiDB 集群。如果只是用于测试 TiDB 或体验 TiDB 的特性，建议使用 Docker Compose 在单机上快速部署 TiDB 集群。
 准备机器   部署目标机器若干
 建议 4 台及以上，TiKV 至少 3 实例，且与 TiDB、PD 模块不位于同一主机，详见部署建议。 推荐安装 CentOS 7.</description>
    </item>
    
    <item>
      <title>使用 TiDB Ansible 部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/deploy/orchestrated/ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/deploy/orchestrated/ansible/</guid>
      <description>使用 TiDB Ansible 部署 TiDB 集群 概述 Ansible 是一款自动化运维工具，TiDB Ansible 是 PingCAP 基于 Ansible playbook 功能编写的集群部署工具。本文档介绍如何使用 TiDB Ansible 部署一个完整的 TiDB 集群。
本部署工具可以通过配置文件设置集群拓扑，完成以下各项运维工作：
 初始化操作系统参数 部署 TiDB 集群（包括 PD、TiDB、TiKV 等组件和监控组件） 启动集群 关闭集群 变更组件配置 集群扩容缩容 升级组件版本 集群开启 binlog 清除集群数据 销毁集群   注意：
对于生产环境，须使用 TiDB Ansible 部署 TiDB 集群。如果只是用于测试 TiDB 或体验 TiDB 的特性，建议使用 Docker Compose 在单机上快速部署 TiDB 集群。
 准备机器   部署目标机器若干
 建议 4 台及以上，TiKV 至少 3 实例，且与 TiDB、PD 模块不位于同一主机，详见部署建议。 推荐安装 CentOS 7.</description>
    </item>
    
    <item>
      <title>使用加密连接</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/secure/enable-tls-clients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/secure/enable-tls-clients/</guid>
      <description>使用加密连接 TiDB 服务端默认采用非加密连接，因而具备监视信道流量能力的第三方可以知悉 TiDB 服务端与客户端之间发送和接受的数据，包括但不限于查询语句内容、查询结果等。若信道是不可信的，例如客户端是通过公网连接到 TiDB 服务端的，则非加密连接容易造成信息泄露，建议使用加密连接确保安全性。
TiDB 服务端支持启用基于 TLS（传输层安全）协议的加密连接，协议与 MySQL 加密连接一致，现有 MySQL 客户端如 MySQL 运维工具和 MySQL 驱动等能直接支持。TLS 的前身是 SSL，因而 TLS 有时也被称为 SSL，但由于 SSL 协议有已知安全漏洞，TiDB 实际上并未支持。TiDB 支持的 TLS/SSL 协议版本为 TLS 1.0、TLS 1.1、TLS 1.2。
使用加密连接后，连接将具有以下安全性质：
 保密性：流量明文无法被窃听； 完整性：流量明文无法被篡改； 身份验证（可选）：客户端和服务端能验证双方身份，避免中间人攻击。  TiDB 的加密连接支持默认是关闭的，必须在 TiDB 服务端通过配置开启加密连接的支持后，才能在客户端中使用加密连接。另外，与 MySQL 一致，TiDB 加密连接是以单个连接为单位的，并且是可选的，因而对于开启了加密连接支持的 TiDB 服务端，客户端既可以选择通过加密连接安全地连接到该 TiDB 服务端，也可以选择使用普通的非加密连接。大部分 MySQL 客户端默认不采用加密连接，因此一般还要显式地要求客户端使用加密连接。
简单来说，要使用加密连接必须同时满足以下两个条件：
 TiDB 服务端配置开启加密连接的支持 客户端指定使用加密连接  配置 TiDB 启用加密连接支持 在启动 TiDB 时，至少需要在配置文件中同时指定 ssl-cert 和 ssl-key 参数，才能使 TiDB 服务端接受加密连接。还可以指定 ssl-ca 参数进行客户端身份验证（请参见配置启用身份验证章节）。</description>
    </item>
    
    <item>
      <title>使用加密连接</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/secure/enable-tls-clients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/secure/enable-tls-clients/</guid>
      <description>使用加密连接 TiDB 服务端默认采用非加密连接，因而具备监视信道流量能力的第三方可以知悉 TiDB 服务端与客户端之间发送和接受的数据，包括但不限于查询语句内容、查询结果等。若信道是不可信的，例如客户端是通过公网连接到 TiDB 服务端的，则非加密连接容易造成信息泄露，建议使用加密连接确保安全性。
TiDB 服务端支持启用基于 TLS（传输层安全）协议的加密连接，协议与 MySQL 加密连接一致，现有 MySQL 客户端如 MySQL 运维工具和 MySQL 驱动等能直接支持。TLS 的前身是 SSL，因而 TLS 有时也被称为 SSL，但由于 SSL 协议有已知安全漏洞，TiDB 实际上并未支持。TiDB 支持的 TLS/SSL 协议版本为 TLS 1.0、TLS 1.1、TLS 1.2。
使用加密连接后，连接将具有以下安全性质：
 保密性：流量明文无法被窃听； 完整性：流量明文无法被篡改； 身份验证（可选）：客户端和服务端能验证双方身份，避免中间人攻击。  TiDB 的加密连接支持默认是关闭的，必须在 TiDB 服务端通过配置开启加密连接的支持后，才能在客户端中使用加密连接。另外，与 MySQL 一致，TiDB 加密连接是以单个连接为单位的，并且是可选的，因而对于开启了加密连接支持的 TiDB 服务端，客户端既可以选择通过加密连接安全地连接到该 TiDB 服务端，也可以选择使用普通的非加密连接。大部分 MySQL 客户端默认不采用加密连接，因此一般还要显式地要求客户端使用加密连接。
简单来说，要使用加密连接必须同时满足以下两个条件：
 TiDB 服务端配置开启加密连接的支持 客户端指定使用加密连接  配置 TiDB 启用加密连接支持 在启动 TiDB 时，至少需要在配置文件中同时指定 ssl-cert 和 ssl-key 参数，才能使 TiDB 服务端接受加密连接。还可以指定 ssl-ca 参数进行客户端身份验证（请参见配置启用身份验证章节）。</description>
    </item>
    
    <item>
      <title>使用加密连接</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/secure/enable-tls-clients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/secure/enable-tls-clients/</guid>
      <description>使用加密连接 TiDB 服务端默认采用非加密连接，因而具备监视信道流量能力的第三方可以知悉 TiDB 服务端与客户端之间发送和接受的数据，包括但不限于查询语句内容、查询结果等。若信道是不可信的，例如客户端是通过公网连接到 TiDB 服务端的，则非加密连接容易造成信息泄露，建议使用加密连接确保安全性。
TiDB 服务端支持启用基于 TLS（传输层安全）协议的加密连接，协议与 MySQL 加密连接一致，现有 MySQL 客户端如 MySQL 运维工具和 MySQL 驱动等能直接支持。TLS 的前身是 SSL，因而 TLS 有时也被称为 SSL，但由于 SSL 协议有已知安全漏洞，TiDB 实际上并未支持。TiDB 支持的 TLS/SSL 协议版本为 TLS 1.0、TLS 1.1、TLS 1.2。
使用加密连接后，连接将具有以下安全性质：
 保密性：流量明文无法被窃听； 完整性：流量明文无法被篡改； 身份验证（可选）：客户端和服务端能验证双方身份，避免中间人攻击。  TiDB 的加密连接支持默认是关闭的，必须在 TiDB 服务端通过配置开启加密连接的支持后，才能在客户端中使用加密连接。另外，与 MySQL 一致，TiDB 加密连接是以单个连接为单位的，并且是可选的，因而对于开启了加密连接支持的 TiDB 服务端，客户端既可以选择通过加密连接安全地连接到该 TiDB 服务端，也可以选择使用普通的非加密连接。大部分 MySQL 客户端默认不采用加密连接，因此一般还要显式地要求客户端使用加密连接。
简单来说，要使用加密连接必须同时满足以下两个条件：
 TiDB 服务端配置开启加密连接的支持 客户端指定使用加密连接  配置 TiDB 启用加密连接支持 在启动 TiDB 时，至少需要在配置文件中同时指定 ssl-cert 和 ssl-key 参数，才能使 TiDB 服务端接受加密连接。还可以指定 ssl-ca 参数进行客户端身份验证（请参见配置启用身份验证章节）。</description>
    </item>
    
    <item>
      <title>使用加密连接</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/secure/enable-tls-clients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/secure/enable-tls-clients/</guid>
      <description>使用加密连接 TiDB 服务端默认采用非加密连接，因而具备监视信道流量能力的第三方可以知悉 TiDB 服务端与客户端之间发送和接受的数据，包括但不限于查询语句内容、查询结果等。若信道是不可信的，例如客户端是通过公网连接到 TiDB 服务端的，则非加密连接容易造成信息泄露，建议使用加密连接确保安全性。
TiDB 服务端支持启用基于 TLS（传输层安全）协议的加密连接，协议与 MySQL 加密连接一致，现有 MySQL 客户端如 MySQL 运维工具和 MySQL 驱动等能直接支持。TLS 的前身是 SSL，因而 TLS 有时也被称为 SSL，但由于 SSL 协议有已知安全漏洞，TiDB 实际上并未支持。TiDB 支持的 TLS/SSL 协议版本为 TLS 1.0、TLS 1.1、TLS 1.2。
使用加密连接后，连接将具有以下安全性质：
 保密性：流量明文无法被窃听； 完整性：流量明文无法被篡改； 身份验证（可选）：客户端和服务端能验证双方身份，避免中间人攻击。  TiDB 的加密连接支持默认是关闭的，必须在 TiDB 服务端通过配置开启加密连接的支持后，才能在客户端中使用加密连接。另外，与 MySQL 一致，TiDB 加密连接是以单个连接为单位的，并且是可选的，因而对于开启了加密连接支持的 TiDB 服务端，客户端既可以选择通过加密连接安全地连接到该 TiDB 服务端，也可以选择使用普通的非加密连接。大部分 MySQL 客户端默认不采用加密连接，因此一般还要显式地要求客户端使用加密连接。
简单来说，要使用加密连接必须同时满足以下两个条件：
 TiDB 服务端配置开启加密连接的支持 客户端指定使用加密连接  配置 TiDB 启用加密连接支持 在启动 TiDB 时，至少需要在配置文件中同时指定 ssl-cert 和 ssl-key 参数，才能使 TiDB 服务端接受加密连接。还可以指定 ssl-ca 参数进行客户端身份验证（请参见配置启用身份验证章节）。</description>
    </item>
    
    <item>
      <title>信息函数</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/information-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/information-functions/</guid>
      <description>信息函数 TiDB 支持使用 MySQL 5.7 中提供的大部分信息函数。
支持的函数    函数名 功能描述     BENCHMARK() 循环执行一个表达式   CONNECTION_ID() 返回当前连接的连接 ID (线程 ID)   CURRENT_USER(), CURRENT_USER 返回当前用户的用户名和主机名   DATABASE() 返回默认(当前)的数据库名   FOUND_ROWS() 该函数返回对于一个包含 LIMIT 的 SELECT 查询语句，在不包含 LIMIT 的情况下回返回的记录数   LAST_INSERT_ID() 返回最后一条 INSERT 语句中自增列的值   ROW_COUNT() 影响的行数   SCHEMA() 与 DATABASE() 同义   SESSION_USER() 与 USER() 同义   SYSTEM_USER() 与 USER() 同义   USER() 返回客户端提供的用户名和主机名   VERSION() 返回当前 MySQL 服务器的版本信息   TIDB_VERSION() 返回当前 TiDB 服务器的版本信息    不支持的函数  CHARSET() COERCIBILITY() COLLATION()  </description>
    </item>
    
    <item>
      <title>信息函数</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/information-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/information-functions/</guid>
      <description>信息函数 TiDB 支持使用 MySQL 5.7 中提供的大部分信息函数。
支持的函数    函数名 功能描述     BENCHMARK() 循环执行一个表达式   CONNECTION_ID() 返回当前连接的连接 ID (线程 ID)   CURRENT_USER(), CURRENT_USER 返回当前用户的用户名和主机名   DATABASE() 返回默认(当前)的数据库名   FOUND_ROWS() 该函数返回对于一个包含 LIMIT 的 SELECT 查询语句，在不包含 LIMIT 的情况下回返回的记录数   LAST_INSERT_ID() 返回最后一条 INSERT 语句中自增列的值   ROW_COUNT() 影响的行数   SCHEMA() 与 DATABASE() 同义   SESSION_USER() 与 USER() 同义   SYSTEM_USER() 与 USER() 同义   USER() 返回客户端提供的用户名和主机名   VERSION() 返回当前 MySQL 服务器的版本信息   TIDB_VERSION() 返回当前 TiDB 服务器的版本信息    不支持的函数  CHARSET() COERCIBILITY() COLLATION()  </description>
    </item>
    
    <item>
      <title>信息函数</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/information-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/information-functions/</guid>
      <description>信息函数 TiDB 中信息函数的使用方法与 MySQL 基本一致，详情参见：Information Functions。
信息函数表    函数名 功能描述     CONNECTION_ID() 返回当前连接的连接 ID (线程 ID)   CURRENT_USER(), CURRENT_USER 返回当前用户的用户名和主机名   DATABASE() 返回默认(当前)的数据库名   FOUND_ROWS() 该函数返回对于一个包含 LIMIT 的 SELECT 查询语句，在不包含 LIMIT 的情况下回返回的记录数   LAST_INSERT_ID() 返回最后一条 INSERT 语句中自增列的值   SCHEMA() 与 DATABASE() 同义   SESSION_USER() 与 USER() 同义   SYSTEM_USER() 与 USER() 同义   USER() 返回客户端提供的用户名和主机名   VERSION() 返回当前 MySQL 服务器的版本信息   TIDB_VERSION() 返回当前 TiDB 服务器的版本信息    </description>
    </item>
    
    <item>
      <title>信息函数</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/information-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/information-functions/</guid>
      <description>信息函数 TiDB 支持使用 MySQL 5.7 中提供的大部分信息函数。
支持的函数    函数名 功能描述     BENCHMARK() 循环执行一个表达式   CONNECTION_ID() 返回当前连接的连接 ID (线程 ID)   CURRENT_USER(), CURRENT_USER 返回当前用户的用户名和主机名   DATABASE() 返回默认(当前)的数据库名   FOUND_ROWS() 该函数返回对于一个包含 LIMIT 的 SELECT 查询语句，在不包含 LIMIT 的情况下回返回的记录数   LAST_INSERT_ID() 返回最后一条 INSERT 语句中自增列的值   ROW_COUNT() 影响的行数   SCHEMA() 与 DATABASE() 同义   SESSION_USER() 与 USER() 同义   SYSTEM_USER() 与 USER() 同义   USER() 返回客户端提供的用户名和主机名   VERSION() 返回当前 MySQL 服务器的版本信息   TIDB_VERSION() 返回当前 TiDB 服务器的版本信息    不支持的函数  CHARSET() COERCIBILITY() COLLATION()  </description>
    </item>
    
    <item>
      <title>全量数据导入过程常见报错处理</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/error-case-handling/load-misuse-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/error-case-handling/load-misuse-handling/</guid>
      <description>全量数据导入过程常见报错处理 本文介绍了使用 Loader 或者 TiDB Data Migration（以下简称为 DM）进行全量数据导入过程中常见的因为使用造成的出错场景，以及这些错误发生的原因和处理方式。
报错：Try adjusting the `max_allowed_packet` variable 在全量数据导入过程中遇到下面的报错
packet for query is too large. Try adjusting the &amp;#39;max_allowed_packet&amp;#39; variable 原因  MySQL client 和 MySQL/TiDB Server 都有 max_allowed_packet 配额的限制，如果在使用过程中违反其中任何一个 max_allowed_packet 配额，客户端程序就会收到对应的报错。目前最新版本的 Syncer、Loader、DM 和 TiDB Server 的默认 max_allowed_packet 配额都为 64M。  请使用最新版本，或者最新稳定版本的工具。下载页面。   Loader 或 DM 的全量数据导入处理模块不支持对 dump sqls 文件进行切分，原因是 Mydumper 采用了最简单的编码实现，正如 Mydumper 代码注释 /* Poor man&#39;s data dump code */ 所言。如果在 Loader 或 DM 实现文件切分，那么需要在 TiDB parser 基础上实现一个完备的解析器才能正确的处理数据切分，但是随之会带来以下的问题：  工作量大 复杂度高，不容易保证正确性 性能的极大降低    解决方案   依据上面的原因，在代码层面不能简单的解决这个困扰，我们推荐的方式是：利用 Mydumper 提供的控制 Insert Statement 大小的功能 -s, --statement-size: Attempted size of INSERT statement in bytes, default 1000000。</description>
    </item>
    
    <item>
      <title>全量数据导入过程常见报错处理</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/error-case-handling/load-misuse-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/error-case-handling/load-misuse-handling/</guid>
      <description>全量数据导入过程常见报错处理 本文介绍了使用 Loader 或者 TiDB Data Migration（以下简称为 DM）进行全量数据导入过程中常见的因为使用造成的出错场景，以及这些错误发生的原因和处理方式。
报错：Try adjusting the `max_allowed_packet` variable 在全量数据导入过程中遇到下面的报错
packet for query is too large. Try adjusting the &amp;#39;max_allowed_packet&amp;#39; variable 原因  MySQL client 和 MySQL/TiDB Server 都有 max_allowed_packet 配额的限制，如果在使用过程中违反其中任何一个 max_allowed_packet 配额，客户端程序就会收到对应的报错。目前最新版本的 Syncer、Loader、DM 和 TiDB Server 的默认 max_allowed_packet 配额都为 64M。  请使用最新版本，或者最新稳定版本的工具。下载页面。   Loader 或 DM 的全量数据导入处理模块不支持对 dump sqls 文件进行切分，原因是 Mydumper 采用了最简单的编码实现，正如 Mydumper 代码注释 /* Poor man&#39;s data dump code */ 所言。如果在 Loader 或 DM 实现文件切分，那么需要在 TiDB parser 基础上实现一个完备的解析器才能正确的处理数据切分，但是随之会带来以下的问题：  工作量大 复杂度高,不容易保证正确性 性能的极大降低    解决方案   依据上面的原因，在代码层面不能简单的解决这个困扰，我们推荐的方式是：利用 Mydumper 提供的控制 Insert Statement 大小的功能 -s, --statement-size: Attempted size of INSERT statement in bytes, default 1000000&amp;quot;。</description>
    </item>
    
    <item>
      <title>全量数据导入过程常见报错处理</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/error-case-handling/load-misuse-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/error-case-handling/load-misuse-handling/</guid>
      <description>全量数据导入过程常见报错处理 本文介绍了使用 Loader 或者 TiDB Data Migration（以下简称为 DM）进行全量数据导入过程中常见的因为使用造成的出错场景，以及这些错误发生的原因和处理方式。
报错：Try adjusting the `max_allowed_packet` variable 在全量数据导入过程中遇到下面的报错
packet for query is too large. Try adjusting the &amp;#39;max_allowed_packet&amp;#39; variable 原因  MySQL client 和 MySQL/TiDB Server 都有 max_allowed_packet 配额的限制，如果在使用过程中违反其中任何一个 max_allowed_packet 配额，客户端程序就会收到对应的报错。目前最新版本的 Syncer、Loader、DM 和 TiDB Server 的默认 max_allowed_packet 配额都为 64M。  请使用最新版本，或者最新稳定版本的工具。下载页面。   Loader 或 DM 的全量数据导入处理模块不支持对 dump sqls 文件进行切分，原因是 Mydumper 采用了最简单的编码实现，正如 Mydumper 代码注释 /* Poor man&#39;s data dump code */ 所言。如果在 Loader 或 DM 实现文件切分，那么需要在 TiDB parser 基础上实现一个完备的解析器才能正确的处理数据切分，但是随之会带来以下的问题：  工作量大 复杂度高,不容易保证正确性 性能的极大降低    解决方案   依据上面的原因，在代码层面不能简单的解决这个困扰，我们推荐的方式是：利用 Mydumper 提供的控制 Insert Statement 大小的功能 -s, --statement-size: Attempted size of INSERT statement in bytes, default 1000000&amp;quot;。</description>
    </item>
    
    <item>
      <title>全量数据迁移</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/migrate/from-mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/migrate/from-mysql/</guid>
      <description>全量数据迁移 mydumper 是一个强大的数据迁移工具，具体可以参考 maxbube/mydumper。你可以使用 mydumper 从 MySQL 导出数据，然后用 loader 将其导入到 TiDB。
 注意：
虽然 TiDB 也支持使用 MySQL 官方的 mysqldump 工具来进行数据的迁移工作，但相比于 mydumper/loader，性能会慢很多，大量数据的迁移会花费很多时间，这里我们并不推荐。
 mydumper/loader 全量导入数据最佳实践 为了快速的迁移数据 (特别是数据量巨大的库)，可以参考以下建议：
 Mydumper 导出数据至少要拥有 SELECT，RELOAD，LOCK TABLES 权限 使用 Mydumper 导出来的数据文件尽可能的小，最好不要超过 64M，可以设置参数 -F 64 loader的 -t 参数可以根据 TiKV 的实例个数以及负载进行评估调整，例如 3个 TiKV 的场景，此值可以设为 3 *（1 ～ n)；当 TiKV 负载过高，loader 以及 TiDB 日志中出现大量 backoffer.maxSleep 15000ms is exceeded 可以适当调小该值，当 TiKV 负载不是太高的时候，可以适当调大该值。  导入示例及相关配置：
 Mydumper 导出后总数据量 214G，单表 8 列，20 亿行数据 集群拓扑  TiKV * 12 TiDB * 4 PD * 3   Mydumper -F 设置为 16，Loader -t 参数设置为 64  结果：导入时间 11 小时左右，19.</description>
    </item>
    
    <item>
      <title>关键字和保留字</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/language-structure/keywords-and-reserved-words/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/language-structure/keywords-and-reserved-words/</guid>
      <description>关键字和保留字 关键字在 SQL 中有特殊的意义， 例如 SELECT，UPDATE，DELETE，在作为表名跟函数名的时候，需要特殊对待，例如作为表名，保留字需要被反引号包住：
 CREATE TABLE select (a INT); ERROR 1105 (HY000): line 0 column 19 near &amp;#34; (a INT)&amp;#34; (total length 27)  CREATE TABLE `select` (a INT); Query OK, 0 rows affected (0.09 sec) BEGIN 和 END 是关键字， 但不是保留字，所以不需要反引号：
 CREATE TABLE `select` (BEGIN int, END int); Query OK, 0 rows affected (0.09 sec) 有一种特殊情况， 如果使用了限定符 .，那么也不需要用反引号：
 CREATE TABLE test.select (BEGIN int, END int); Query OK, 0 rows affected (0.</description>
    </item>
    
    <item>
      <title>关键字和保留字</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/language-structure/keywords-and-reserved-words/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/language-structure/keywords-and-reserved-words/</guid>
      <description>关键字和保留字 关键字在 SQL 中有特殊的意义， 例如 SELECT，UPDATE，DELETE，在作为表名跟函数名的时候，需要特殊对待，例如作为表名，保留字需要被反引号包住：
 CREATE TABLE select (a INT); ERROR 1105 (HY000): line 0 column 19 near &amp;#34; (a INT)&amp;#34; (total length 27)  CREATE TABLE `select` (a INT); Query OK, 0 rows affected (0.09 sec) BEGIN 和 END 是关键字， 但不是保留字，所以不需要反引号：
 CREATE TABLE `select` (BEGIN int, END int); Query OK, 0 rows affected (0.09 sec) 有一种特殊情况， 如果使用了限定符 .，那么也不需要用反引号：
 CREATE TABLE test.select (BEGIN int, END int); Query OK, 0 rows affected (0.</description>
    </item>
    
    <item>
      <title>关键字和保留字</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/language-structure/keywords-and-reserved-words/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/language-structure/keywords-and-reserved-words/</guid>
      <description>关键字和保留字 关键字在 SQL 中有特殊的意义， 例如 SELECT，UPDATE，DELETE，在作为表名跟函数名的时候，需要特殊对待，例如作为表名，保留字需要被反引号包住：
mysql&amp;gt; CREATE TABLE select (a INT); ERROR 1105 (HY000): line 0 column 19 near &amp;#34;(a INT)&amp;#34; (total length 27) mysql&amp;gt; CREATE TABLE `select` (a INT); Query OK, 0 rows affected (0.09 sec) BEGIN 和 END 是关键字， 但不是保留字，所以不需要反引号：
mysql&amp;gt; CREATE TABLE `select` (BEGIN int, END int); Query OK, 0 rows affected (0.09 sec) 有一种特殊情况， 如果使用了限定符 .，那么也不需要用反引号：
mysql&amp;gt; CREATE TABLE test.select (BEGIN int, END int); Query OK, 0 rows affected (0.</description>
    </item>
    
    <item>
      <title>关键字和保留字</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/language-structure/keywords-and-reserved-words/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/language-structure/keywords-and-reserved-words/</guid>
      <description>关键字和保留字 关键字在 SQL 中有特殊的意义， 例如 SELECT，UPDATE，DELETE，在作为表名跟函数名的时候，需要特殊对待，例如作为表名，保留字需要被反引号包住：
 CREATE TABLE select (a INT); ERROR 1105 (HY000): line 0 column 19 near &amp;#34; (a INT)&amp;#34; (total length 27)  CREATE TABLE `select` (a INT); Query OK, 0 rows affected (0.09 sec) BEGIN 和 END 是关键字， 但不是保留字，所以不需要反引号：
 CREATE TABLE `select` (BEGIN int, END int); Query OK, 0 rows affected (0.09 sec) 有一种特殊情况， 如果使用了限定符 .，那么也不需要用反引号：
 CREATE TABLE test.select (BEGIN int, END int); Query OK, 0 rows affected (0.</description>
    </item>
    
    <item>
      <title>其他函数</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/miscellaneous-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/miscellaneous-functions/</guid>
      <description>其他函数 TiDB 支持使用 MySQL 5.7 中提供的大部分其他函数。
支持的函数    函数名 功能描述     ANY_VALUE() 在 ONLY_FULL_GROUP_BY 模式下，防止带有 GROUP BY 的语句报错   DEFAULT() 返回表的某一列的默认值   INET_ATON() 将 IP 地址转换为数值   INET_NTOA() 将数值转换为 IP 地址   INET6_ATON() 将 IPv6 地址转换为数值   INET6_NTOA() 将数值转换为 IPv6 地址   IS_IPV4() 判断参数是否为 IPv4 地址   IS_IPV4_COMPAT() 判断参数是否为兼容 IPv4 的地址   IS_IPV4_MAPPED() 判断参数是否为 IPv4 映射的地址   IS_IPV6() 判断参数是否为 IPv6 地址   NAME_CONST() 可以用于重命名列名   SLEEP() 让语句暂停执行几秒时间   UUID() 返回一个通用唯一识别码 (UUID)   VALUES() 定义 INSERT 语句使用的值    不支持的函数    函数名 功能描述     GET_LOCK() 获取命名锁，详见 TiDB #10929   RELEASE_LOCK() 释放命名锁，详见 TiDB #10929   UUID_SHORT() 基于特定假设提供唯一的 UUID，目前这些假设在 TiDB 中不存在，详见 TiDB #4620   MASTER_WAIT_POS() 与 MySQL 同步相关    </description>
    </item>
    
    <item>
      <title>其他函数</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/miscellaneous-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/miscellaneous-functions/</guid>
      <description>其他函数 TiDB 支持使用 MySQL 5.7 中提供的大部分其他函数。
支持的函数    函数名 功能描述     ANY_VALUE() 在 ONLY_FULL_GROUP_BY 模式下，防止带有 GROUP BY 的语句报错   DEFAULT() 返回表的某一列的默认值   INET_ATON() 将 IP 地址转换为数值   INET_NTOA() 将数值转换为 IP 地址   INET6_ATON() 将 IPv6 地址转换为数值   INET6_NTOA() 将数值转换为 IPv6 地址   IS_IPV4() 判断参数是否为 IPv4 地址   IS_IPV4_COMPAT() 判断参数是否为兼容 IPv4 的地址   IS_IPV4_MAPPED() 判断参数是否为 IPv4 映射的地址   IS_IPV6() 判断参数是否为 IPv6 地址   NAME_CONST() 可以用于重命名列名   SLEEP() 让语句暂停执行几秒时间   UUID() 返回一个通用唯一识别码 (UUID)   VALUES() 定义 INSERT 语句使用的值    不支持的函数    函数名 功能描述     GET_LOCK() 获取命名锁，详见 TiDB #10929   RELEASE_LOCK() 释放命名锁，详见 TiDB #10929   UUID_SHORT() 基于特定假设提供唯一的 UUID，目前这些假设在 TiDB 中不存在，详见 TiDB #4620   MASTER_WAIT_POS() 与 MySQL 同步相关    </description>
    </item>
    
    <item>
      <title>其他函数</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/miscellaneous-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/miscellaneous-functions/</guid>
      <description>其他函数    函数名 功能描述     ANY_VALUE() 在 ONLY_FULL_GROUP_BY 模式下，防止带有 GROUP BY 的语句报错   SLEEP() 休眠指定秒数   UUID() 返回通用唯一识别码 (UUID)   VALUES() 定义 INSERT 过程中要用到的值   INET_ATON() 将 IP 地址转换为数值   INET_NTOA() 将数值转换为 IP 地址   INET6_ATON() 将 IPv6 地址转换为数值   INET6_NTOA() 将数值转换为 IPv6 地址   IS_IPV4() 判断参数是否为 IPv4 地址   IS_IPV4_COMPAT() 判断参数是否为兼容 IPv4 的地址   IS_IPV4_MAPPED() 判断参数是否为 IPv4 映射的地址   IS_IPV6() 判断参数是否为 IPv6 地址   GET_LOCK() 获取命名锁，TiDB 出于兼容性支持这个函数，实际上不会做任何操作，这点和 MySQL 有区别   RELEASE_LOCK() 释放命名锁    </description>
    </item>
    
    <item>
      <title>其他函数</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/miscellaneous-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/miscellaneous-functions/</guid>
      <description>其他函数 TiDB 支持使用 MySQL 5.7 中提供的大部分其他函数。
支持的函数    函数名 功能描述     ANY_VALUE() 在 ONLY_FULL_GROUP_BY 模式下，防止带有 GROUP BY 的语句报错   DEFAULT() 返回表的某一列的默认值   INET_ATON() 将 IP 地址转换为数值   INET_NTOA() 将数值转换为 IP 地址   INET6_ATON() 将 IPv6 地址转换为数值   INET6_NTOA() 将数值转换为 IPv6 地址   IS_IPV4() 判断参数是否为 IPv4 地址   IS_IPV4_COMPAT() 判断参数是否为兼容 IPv4 的地址   IS_IPV4_MAPPED() 判断参数是否为 IPv4 映射的地址   IS_IPV6() 判断参数是否为 IPv6 地址   NAME_CONST() 可以用于重命名列名   SLEEP() 让语句暂停执行几秒时间   UUID() 返回一个通用唯一识别码 (UUID)   VALUES() 定义 INSERT 语句使用的值    不支持的函数    函数名 功能描述     GET_LOCK() 获取命名锁，详见 TiDB #10929   RELEASE_LOCK() 释放命名锁，详见 TiDB #10929   UUID_SHORT() 基于特定假设提供唯一的 UUID，目前这些假设在 TiDB 中不存在，详见 TiDB #4620   MASTER_WAIT_POS() 与 MySQL 同步相关    </description>
    </item>
    
    <item>
      <title>函数和操作符概述</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/reference/</guid>
      <description>函数和操作符概述 TiDB 中函数和操作符使用方法与 MySQL 基本一致，详情参见: Functions and Operators。
在 SQL 语句中，表达式可用于诸如 SELECT 语句的 ORDER BY 或 HAVING 子句，SELECT/DELETE/UPDATE 语句的 WHERE 子句，或 SET 语句之类的地方。
可使用字面值，列名，NULL，内置函数，操作符等来书写表达式。其中有些表达式下推到 TiKV 上执行，详见下推到 TiKV 的表达式列表。</description>
    </item>
    
    <item>
      <title>函数和操作符概述</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/reference/</guid>
      <description>函数和操作符概述 TiDB 中函数和操作符使用方法与 MySQL 基本一致，详情参见: Functions and Operators。
在 SQL 语句中，表达式可用于诸如 SELECT 语句的 ORDER BY 或 HAVING 子句，SELECT/DELETE/UPDATE 语句的 WHERE 子句，或 SET 语句之类的地方。
可使用字面值，列名，NULL，内置函数，操作符等来书写表达式。其中有些表达式下推到 TiKV 上执行，详见下推到 TiKV 的表达式列表。</description>
    </item>
    
    <item>
      <title>函数和操作符概述</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/reference/</guid>
      <description>函数和操作符概述 TiDB 中函数和操作符使用方法与 MySQL 基本一致，详情参见: Functions and Operators。
在 SQL 语句中，表达式可用于诸如 SELECT 语句的 ORDER BY 或 HAVING 子句，SELECT/DELETE/UPDATE 语句的 WHERE 子句，或 SET 语句之类的地方。
可使用字面值，列名，NULL，内置函数，操作符等来书写表达式。</description>
    </item>
    
    <item>
      <title>函数和操作符概述</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/reference/</guid>
      <description>函数和操作符概述 TiDB 中函数和操作符使用方法与 MySQL 基本一致，详情参见: Functions and Operators。
在 SQL 语句中，表达式可用于诸如 SELECT 语句的 ORDER BY 或 HAVING 子句，SELECT/DELETE/UPDATE 语句的 WHERE 子句，或 SET 语句之类的地方。
可使用字面值，列名，NULL，内置函数，操作符等来书写表达式。其中有些表达式下推到 TiKV 上执行，详见下推到 TiKV 的表达式列表。</description>
    </item>
    
    <item>
      <title>分公司行政主管</title>
      <link>https://pingcap.com/about-cn/recruit/general-administrative/office-admin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/general-administrative/office-admin/</guid>
      <description>分公司行政主管 岗位职责：
  负责 Office 日常事务性工作，保障办公区域日常运转；
  负责 Office 内部环境维护以及到访人员的接待；
  负责公司办公场地租赁费用，水、电、宽带网络等费用结算、管理工作；
  负责组织公司活动、对活动所需物品进行询价对比、采购工作；
  负责 Office 相关人事工作，如新员工入离职手续办理，五险一金缴纳等；
  完成上级领导安排的其他事项。
  任职要求:
  本科及以上学历，2 年以上互联网 / 软件 / IT企业人事行政相关经验；
  学习能力强，工作细致认真，有较强的责任感；
  可以接受周末 Oncall。
  待遇：
5K - 10K，13薪 + 奖金，优秀者可面议
联系方式：
hire@pingcap.com
工作地点：
杭州，深圳</description>
    </item>
    
    <item>
      <title>分区表</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/partitioning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/partitioning/</guid>
      <description>分区表 本文介绍 TiDB 的分区表。
分区类型 本节介绍在 TiDB 中的分区类型。当前支持的类型包括 Range 分区和 Hash 分区。Range 分区可以用于解决业务中大量删除带来的性能问题，支持快速删除分区。Hash 分区则可以用于大量写入场景下的数据打散。
Range 分区 一个表按 range 分区是指，对于表的每个分区中包含的所有行，按分区表达式计算的值都落在给定的范围内。Range 必须是连续的，并且不能有重叠，通过使用 VALUES LESS THAN 操作进行定义。
下列场景中，假设你要创建一个人事记录的表：
 CREATE TABLE employees ( id INT NOT NULL, fname VARCHAR(30), lname VARCHAR(30), hired DATE NOT NULL DEFAULT &amp;#39;1970-01-01&amp;#39;, separated DATE NOT NULL DEFAULT &amp;#39;9999-12-31&amp;#39;, job_code INT NOT NULL, store_id INT NOT NULL ); 你可以根据需求按各种方式进行 range 分区。其中一种方式是按 store_id 列进行分区。你可以这样做：
 CREATE TABLE employees ( id INT NOT NULL, fname VARCHAR(30), lname VARCHAR(30), hired DATE NOT NULL DEFAULT &amp;#39;1970-01-01&amp;#39;, separated DATE NOT NULL DEFAULT &amp;#39;9999-12-31&amp;#39;, job_code INT NOT NULL, store_id INT NOT NULL ) PARTITION BY RANGE (store_id) ( PARTITION p0 VALUES LESS THAN (6), PARTITION p1 VALUES LESS THAN (11), PARTITION p2 VALUES LESS THAN (16), PARTITION p3 VALUES LESS THAN (21) ); 在这个分区模式中，所有 store_id 为 1 到 5 的员工，都存储在分区 p0 里面，store_id 为 6 到 10 的员工则存储在分区 p1 里面。range 分区要求，分区的定义必须是有序的，按从小到大递增。</description>
    </item>
    
    <item>
      <title>分区表</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/partitioning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/partitioning/</guid>
      <description>分区表 本文介绍 TiDB 的分区表。
分区类型 本节介绍在 TiDB 中的分区类型。当前支持的类型包括 Range 分区和 Hash 分区。Range 分区可以用于解决业务中大量删除带来的性能问题，支持快速删除分区。Hash 分区则可以用于大量写入场景下的数据打散。
Range 分区 一个表按 range 分区是指，对于表的每个分区中包含的所有行，按分区表达式计算的值都落在给定的范围内。Range 必须是连续的，并且不能有重叠，通过使用 VALUES LESS THAN 操作进行定义。
下列场景中，假设你要创建一个人事记录的表：
 CREATE TABLE employees ( id INT NOT NULL, fname VARCHAR(30), lname VARCHAR(30), hired DATE NOT NULL DEFAULT &amp;#39;1970-01-01&amp;#39;, separated DATE NOT NULL DEFAULT &amp;#39;9999-12-31&amp;#39;, job_code INT NOT NULL, store_id INT NOT NULL ); 你可以根据需求按各种方式进行 range 分区。其中一种方式是按 store_id 列进行分区。你可以这样做：
 CREATE TABLE employees ( id INT NOT NULL, fname VARCHAR(30), lname VARCHAR(30), hired DATE NOT NULL DEFAULT &amp;#39;1970-01-01&amp;#39;, separated DATE NOT NULL DEFAULT &amp;#39;9999-12-31&amp;#39;, job_code INT NOT NULL, store_id INT NOT NULL ) PARTITION BY RANGE (store_id) ( PARTITION p0 VALUES LESS THAN (6), PARTITION p1 VALUES LESS THAN (11), PARTITION p2 VALUES LESS THAN (16), PARTITION p3 VALUES LESS THAN (21) ); 在这个分区模式中，所有 store_id 为 1 到 5 的员工，都存储在分区 p0 里面，store_id 为 6 到 10 的员工则存储在分区 p1 里面。range 分区要求，分区的定义必须是有序的，按从小到大递增。</description>
    </item>
    
    <item>
      <title>分区表</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/partitioning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/partitioning/</guid>
      <description>分区表 本文介绍 TiDB 的分区表。
分区类型 本节介绍在 TiDB 中的分区类型。当前支持的类型包括 Range 分区和 Hash 分区。Range 分区可以用于解决业务中大量删除带来的性能问题，支持快速删除分区。Hash 分区则可以用于大量写入场景下的数据打散。
Range 分区 一个表按 range 分区是指，对于表的每个分区中包含的所有行，按分区表达式计算的值都落在给定的范围内。Range 必须是连续的，并且不能有重叠，通过使用 VALUES LESS THAN 操作进行定义。
下列场景中，假设你要创建一个人事记录的表：
 CREATE TABLE employees ( id INT NOT NULL, fname VARCHAR(30), lname VARCHAR(30), hired DATE NOT NULL DEFAULT &amp;#39;1970-01-01&amp;#39;, separated DATE NOT NULL DEFAULT &amp;#39;9999-12-31&amp;#39;, job_code INT NOT NULL, store_id INT NOT NULL ); 你可以根据需求按各种方式进行 range 分区。其中一种方式是按 store_id 列进行分区。你可以这样做：
 CREATE TABLE employees ( id INT NOT NULL, fname VARCHAR(30), lname VARCHAR(30), hired DATE NOT NULL DEFAULT &amp;#39;1970-01-01&amp;#39;, separated DATE NOT NULL DEFAULT &amp;#39;9999-12-31&amp;#39;, job_code INT NOT NULL, store_id INT NOT NULL ) PARTITION BY RANGE (store_id) ( PARTITION p0 VALUES LESS THAN (6), PARTITION p1 VALUES LESS THAN (11), PARTITION p2 VALUES LESS THAN (16), PARTITION p3 VALUES LESS THAN (21) ); 在这个分区模式中，所有 store_id 为 1 到 5 的员工，都存储在分区 p0 里面，store_id 为 6 到 10 的员工则存储在分区 p1 里面。range 分区要求，分区的定义必须是有序的，按从小到大递增。</description>
    </item>
    
    <item>
      <title>分库分表合并同步</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/features/shard-merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/features/shard-merge/</guid>
      <description>分库分表合并同步 本文介绍了 DM 提供的分库分表合并同步功能。此功能用于将上游 MySQL/MariaDB 实例中结构相同的表同步到下游 TiDB 的同一个表中。DM 不仅支持同步上游的 DML 数据，也支持协调同步多个上游分表的 DDL 表结构变更。
 注意：
要执行分库分表合并同步任务，必须在任务配置文件中设置 is-sharding: true。
 使用限制 DM 进行分表 DDL 的同步有以下几点使用限制：
  在一个逻辑 sharding group（需要合并同步到下游同一个表的所有分表组成的 group）内，所有上游分表必须以相同的顺序执行相同的 DDL 语句（库名和表名可以不同），并且只有在所有分表执行完当前一条 DDL 语句后，下一条 DDL 语句才能执行。
 比如，如果在 table_1 表中先增加列 a 后再增加列 b，则在 table_2 表中就不能先增加列 b 后再增加列 a，因为 DM 不支持以不同的顺序来执行相同的 DDL 语句。    对于每个逻辑 sharding group，推荐使用一个独立的任务进行同步。
 如果一个任务内存在多个 sharding group，则必须等待一个 sharding group 的 DDL 语句同步完成后，才能开始对其他 sharding group 执行 DDL 语句。    在一个逻辑 sharding group 内，所有上游分表都应该执行对应的 DDL 语句。</description>
    </item>
    
    <item>
      <title>分库分表合并同步</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/features/shard-merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/features/shard-merge/</guid>
      <description>分库分表合并同步 本文介绍了 DM 提供的分库分表合并同步功能。此功能用于将上游 MySQL/MariaDB 实例中结构相同的表同步到下游 TiDB 的同一个表中。DM 不仅支持同步上游的 DML 数据，也支持协调同步多个上游分表的 DDL 表结构变更。
 注意：
要执行分库分表合并同步任务，必须在任务配置文件中设置 is-sharding: true。
 使用限制 DM 进行分表 DDL 的同步有以下几点使用限制：
  在一个逻辑 sharding group（需要合并同步到下游同一个表的所有分表组成的 group）内，所有上游分表必须以相同的顺序执行相同的 DDL 语句（库名和表名可以不同），并且只有在所有分表执行完当前一条 DDL 语句后，下一条 DDL 语句才能执行。
 比如，如果在 table_1 表中先增加列 a 后再增加列 b，则在 table_2 表中就不能先增加列 b 后再增加列 a，因为 DM 不支持以不同的顺序来执行相同的 DDL 语句。    对于每个逻辑 sharding group，推荐使用一个独立的任务进行同步。
 如果一个任务内存在多个 sharding group，则必须等待一个 sharding group 的 DDL 语句同步完成后，才能开始对其他 sharding group 执行 DDL 语句。    在一个逻辑 sharding group 内，所有上游分表都应该执行对应的 DDL 语句。</description>
    </item>
    
    <item>
      <title>分库分表合并同步</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/features/shard-merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/features/shard-merge/</guid>
      <description>分库分表合并同步 本文介绍了 DM 提供的分库分表合并同步功能。此功能用于将上游 MySQL/MariaDB 实例中结构相同的表同步到下游 TiDB 的同一个表中。DM 不仅支持同步上游的 DML 数据，也支持协调同步多个上游分表的 DDL 表结构变更。
 注意：
要执行分库分表合并同步任务，必须在任务配置文件中设置 is-sharding: true。
 使用限制 DM 进行分表 DDL 的同步有以下几点使用限制：
  在一个逻辑 sharding group（需要合并同步到下游同一个表的所有分表组成的 group）内，所有上游分表必须以相同的顺序执行相同的 DDL 语句（库名和表名可以不同），并且只有在所有分表执行完当前一条 DDL 语句后，下一条 DDL 语句才能执行。
 比如，如果在 table_1 表中先增加列 a 后再增加列 b，则在 table_2 表中就不能先增加列 b 后再增加列 a，因为 DM 不支持以不同的顺序来执行相同的 DDL 语句。    对于每个逻辑 sharding group，推荐使用一个独立的任务进行同步。
 如果一个任务内存在多个 sharding group，则必须等待一个 sharding group 的 DDL 语句同步完成后，才能开始对其他 sharding group 执行 DDL 语句。    在一个逻辑 sharding group 内，所有上游分表都应该执行对应的 DDL 语句。</description>
    </item>
    
    <item>
      <title>分库分表合并同步</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/features/shard-merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/features/shard-merge/</guid>
      <description>分库分表合并同步 本文介绍了 DM 提供的分库分表合并同步功能。此功能用于将上游 MySQL/MariaDB 实例中结构相同的表同步到下游 TiDB 的同一个表中。DM 不仅支持同步上游的 DML 数据，也支持协调同步多个上游分表的 DDL 表结构变更。
 注意：
要执行分库分表合并同步任务，必须在任务配置文件中设置 is-sharding: true。
 使用限制 DM 进行分表 DDL 的同步有以下几点使用限制：
  在一个逻辑 sharding group（需要合并同步到下游同一个表的所有分表组成的 group）内，所有上游分表必须以相同的顺序执行相同的 DDL 语句（库名和表名可以不同），并且只有在所有分表执行完当前一条 DDL 语句后，下一条 DDL 语句才能执行。
 比如，如果在 table_1 表中先增加列 a 后再增加列 b，则在 table_2 表中就不能先增加列 b 后再增加列 a，因为 DM 不支持以不同的顺序来执行相同的 DDL 语句。    对于每个逻辑 sharding group，推荐使用一个独立的任务进行同步。
 如果一个任务内存在多个 sharding group，则必须等待一个 sharding group 的 DDL 语句同步完成后，才能开始对其他 sharding group 执行 DDL 语句。    在一个逻辑 sharding group 内，所有上游分表都应该执行对应的 DDL 语句。</description>
    </item>
    
    <item>
      <title>分库分表场景下的数据校验</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/sync-diff-inspector/shard-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/sync-diff-inspector/shard-diff/</guid>
      <description>分库分表场景下的数据校验 sync-diff-inspector 支持对分库分表场景进行数据校验。例如有两个 MySQL 实例，使用同步工具 DM 同步到一个 TiDB 中，场景如图所示：
则需要为 table-0 在 table-config 中进行特殊配置，设置 is-sharding=true，并且在 table-config.source-tables 中配置上游表信息。完整的示例配置如下：
# Diff Configuration. ######################### Global config ######################### # 日志级别，可以设置为 info、debug log-level = &amp;#34;info&amp;#34; # sync-diff-inspector 根据主键／唯一键／索引将数据划分为多个 chunk， # 对每一个 chunk 的数据进行对比。使用 chunk-size 设置 chunk 的大小 chunk-size = 1000 # 检查数据的线程数量 check-thread-count = 4 # 抽样检查的比例，如果设置为 100 则检查全部数据 sample-percent = 100 # 通过计算 chunk 的 checksum 来对比数据，如果不开启则逐行对比数据 use-checksum = true # 如果设置为 true 则只会通过计算 checksum 来校验数据，如果上下游的 checksum 不一致也不会查出数据再进行校验 only-use-checksum = false # 是否使用上次校验的 checkpoint，如果开启，则只校验上次未校验以及校验失败的 chunk use-checkpoint = true # 不对比数据 ignore-data-check = false # 不对比表结构 ignore-struct-check = false # 保存用于修复数据的 sql 的文件名称 fix-sql-file = &amp;#34;fix.</description>
    </item>
    
    <item>
      <title>分库分表场景下的数据校验</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/sync-diff-inspector/shard-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/sync-diff-inspector/shard-diff/</guid>
      <description>分库分表场景下的数据校验 sync-diff-inspector 支持对分库分表场景进行数据校验。例如有两个 MySQL 实例，使用同步工具 DM 同步到一个 TiDB 中，场景如图所示：
则需要为 table-0 在 table-config 中进行特殊配置，设置 is-sharding=true，并且在 table-config.source-tables 中配置上游表信息。完整的示例配置如下：
# Diff Configuration. ######################### Global config ######################### # 日志级别，可以设置为 info、debug log-level = &amp;#34;info&amp;#34; # sync-diff-inspector 根据主键／唯一键／索引将数据划分为多个 chunk， # 对每一个 chunk 的数据进行对比。使用 chunk-size 设置 chunk 的大小 chunk-size = 1000 # 检查数据的线程数量 check-thread-count = 4 # 抽样检查的比例，如果设置为 100 则检查全部数据 sample-percent = 100 # 通过计算 chunk 的 checksum 来对比数据，如果不开启则逐行对比数据 use-checksum = true # 如果设置为 true 则只会通过计算 checksum 来校验数据，如果上下游的 checksum 不一致也不会查出数据再进行校验 only-use-checksum = false # 是否使用上次校验的 checkpoint，如果开启，则只校验上次未校验以及校验失败的 chunk use-checkpoint = true # 不对比数据 ignore-data-check = false # 不对比表结构 ignore-struct-check = false # 保存用于修复数据的 sql 的文件名称 fix-sql-file = &amp;#34;fix.</description>
    </item>
    
    <item>
      <title>分库分表场景下的数据校验</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/sync-diff-inspector/shard-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/sync-diff-inspector/shard-diff/</guid>
      <description>分库分表场景下的数据校验 sync-diff-inspector 支持对分库分表场景进行数据校验。例如有两个 MySQL 实例，使用同步工具 DM 同步到一个 TiDB 中，场景如图所示：
则需要为 table-0 在 table-config 中进行特殊配置，设置 is-sharding=true，并且在 table-config.source-tables 中配置上游表信息。完整的示例配置如下：
# Diff Configuration. ######################### Global config ######################### # 日志级别，可以设置为 info、debug log-level = &amp;#34;info&amp;#34; # sync-diff-inspector 根据主键／唯一键／索引将数据划分为多个 chunk， # 对每一个 chunk 的数据进行对比。使用 chunk-size 设置 chunk 的大小 chunk-size = 1000 # 检查数据的线程数量 check-thread-count = 4 # 抽样检查的比例，如果设置为 100 则检查全部数据 sample-percent = 100 # 通过计算 chunk 的 checksum 来对比数据，如果不开启则逐行对比数据 use-checksum = true # 如果设置为 true 则只会通过计算 checksum 来校验数据，如果上下游的 checksum 不一致也不会查出数据再进行校验 only-use-checksum = false # 是否使用上次校验的 checkpoint，如果开启，则只校验上次未校验以及校验失败的 chunk use-checkpoint = true # 不对比数据 ignore-data-check = false # 不对比表结构 ignore-struct-check = false # 保存用于修复数据的 sql 的文件名称 fix-sql-file = &amp;#34;fix.</description>
    </item>
    
    <item>
      <title>分库分表场景下的数据校验</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/sync-diff-inspector/shard-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/sync-diff-inspector/shard-diff/</guid>
      <description>分库分表场景下的数据校验 sync-diff-inspector 支持对分库分表场景进行数据校验。例如有两个 MySQL 实例，使用同步工具 DM 同步到一个 TiDB 中，场景如图所示：
则需要为 table-0 在 table-config 中进行特殊配置，设置 is-sharding=true，并且在 table-config.source-tables 中配置上游表信息。完整的示例配置如下：
# Diff Configuration. ######################### Global config ######################### # 日志级别，可以设置为 info、debug log-level = &amp;#34;info&amp;#34; # sync-diff-inspector 根据主键／唯一键／索引将数据划分为多个 chunk， # 对每一个 chunk 的数据进行对比。使用 chunk-size 设置 chunk 的大小 chunk-size = 1000 # 检查数据的线程数量 check-thread-count = 4 # 抽样检查的比例，如果设置为 100 则检查全部数据 sample-percent = 100 # 通过计算 chunk 的 checksum 来对比数据，如果不开启则逐行对比数据 use-checksum = true # 如果设置为 true 则只会通过计算 checksum 来校验数据，如果上下游的 checksum 不一致也不会查出数据再进行校验 only-use-checksum = false # 是否使用上次校验的 checkpoint，如果开启，则只校验上次未校验以及校验失败的 chunk use-checkpoint = true # 不对比数据 ignore-data-check = false # 不对比表结构 ignore-struct-check = false # 保存用于修复数据的 sql 的文件名称 fix-sql-file = &amp;#34;fix.</description>
    </item>
    
    <item>
      <title>分表合并数据迁移最佳实践</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/usage-scenarios/best-practice-dm-shard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/usage-scenarios/best-practice-dm-shard/</guid>
      <description>使用 DM 对分库分表进行合并迁移时的最佳实践。</description>
    </item>
    
    <item>
      <title>分表合并数据迁移最佳实践</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/usage-scenarios/best-practice-dm-shard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/usage-scenarios/best-practice-dm-shard/</guid>
      <description>使用 DM 对分库分表进行合并迁移时的最佳实践。</description>
    </item>
    
    <item>
      <title>分表合并数据迁移最佳实践</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/usage-scenarios/best-practice-dm-shard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/usage-scenarios/best-practice-dm-shard/</guid>
      <description>使用 DM 对分库分表进行合并迁移时的最佳实践。</description>
    </item>
    
    <item>
      <title>分表合并数据迁移最佳实践</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/usage-scenarios/best-practice-dm-shard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/usage-scenarios/best-practice-dm-shard/</guid>
      <description>使用 DM 对分库分表进行合并迁移时的最佳实践。</description>
    </item>
    
    <item>
      <title>切换 DM-worker 与上游 MySQL 实例的连接</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/usage-scenarios/master-slave-switch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/usage-scenarios/master-slave-switch/</guid>
      <description>了解如何切换 DM-worker 与上游 MySQL 实例的连接。</description>
    </item>
    
    <item>
      <title>切换 DM-worker 与上游 MySQL 实例的连接</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/usage-scenarios/master-slave-switch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/usage-scenarios/master-slave-switch/</guid>
      <description>了解如何切换 DM-worker 与上游 MySQL 实例的连接。</description>
    </item>
    
    <item>
      <title>切换 DM-worker 与上游 MySQL 实例的连接</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/usage-scenarios/master-slave-switch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/usage-scenarios/master-slave-switch/</guid>
      <description>了解如何切换 DM-worker 与上游 MySQL 实例的连接。</description>
    </item>
    
    <item>
      <title>切换 DM-worker 与上游 MySQL 实例的连接</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/usage-scenarios/master-slave-switch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/usage-scenarios/master-slave-switch/</guid>
      <description>了解如何切换 DM-worker 与上游 MySQL 实例的连接。</description>
    </item>
    
    <item>
      <title>前端开发工程师</title>
      <link>https://pingcap.com/about-cn/recruit/engineering/fe-engineer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/engineering/fe-engineer/</guid>
      <description>前端开发工程师 岗位职责：
  负责 TiDB 商业产品前端研发，构建功能丰富且流畅易用的 UI 系统，持续提升产品的用户体验；
  前端组件设计和开发，框架定制和保证快速迭代的效率和质量
  探索前端开发新规范和模式。
  任职要求：
  三年以上相关领域开发经验，扎实的编程基础；
  优秀的发现和解决问题能力，良好的沟通能力和团队合作精神；
  熟悉 JavaScript、TypeScript 和新语言规范和语法特性，如 ES2015 等；
  精通 Webpack 构建，Node 脚本开发和常用 Prettier、ESLint、Babel 等配置；
  熟悉 React/Angular/Vue 等现代 Web 前端框架使用和实现原理；
  熟悉富应用 SPA 开发模式，如单向数据流 Flux/Redux，响应式编程 rxjs/cyclejs。
  加分项：
  拥抱开源，对前沿技术有浓厚的热情和探索欲望，有开源项目经历；
  良好的适应和学习能力对自己不设限，挑战如：数据可视化、监控告警 DevOPS；
  喜欢 SaaS 产品，乐于商业化和工具产品设计等方向；
  其他例如，您熟悉 Electron、看过 Chromium 源代码、写过一些关于 JavaScript 技术的博客文章等。具体不限，我们愿闻其详。</description>
    </item>
    
    <item>
      <title>加密和压缩函数</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/encryption-and-compression-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/encryption-and-compression-functions/</guid>
      <description>加密和压缩函数 TiDB 支持使用 MySQL 5.7 中提供的大部分加密和压缩函数。
支持的函数    函数名 功能描述     MD5()  计算字符串的 MD5 校验和    PASSWORD() 计算并返回密码字符串   RANDOM_BYTES() 返回随机字节向量   SHA1(), SHA()  计算 SHA-1 160 位校验和    SHA2()  计算 SHA-2 校验和    AES_DECRYPT() 使用 AES 解密   AES_ENCRYPT() 使用 AES 加密   COMPRESS() 返回经过压缩的二进制字符串   UNCOMPRESS() 解压缩字符串   UNCOMPRESSED_LENGTH()  返回字符串解压后的长度   CREATE_ASYMMETRIC_PRIV_KEY() 创建私钥   CREATE_ASYMMETRIC_PUB_KEY() 创建公钥   CREATE_DH_PARAMETERS() 创建 DH 共享密钥   CREATE_DIGEST() 从字符串创建摘要   ASYMMETRIC_DECRYPT() 使用公钥或私钥解密密文   ASYMMETRIC_DERIVE() 从非对称密钥导出对称密钥   ASYMMETRIC_ENCRYPT() 使用公钥或私钥加密明文   ASYMMETRIC_SIGN() 从摘要创建签名   ASYMMETRIC_VERIFY() 验证签名字符串是否匹配摘要字符串    不支持的函数  DES_DECRYPT()、DES_ENCRYPT()、OLD_PASSWORD() 和 ENCRYPT()：这些函数在 MySQL 5.</description>
    </item>
    
    <item>
      <title>加密和压缩函数</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/encryption-and-compression-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/encryption-and-compression-functions/</guid>
      <description>加密和压缩函数 TiDB 支持使用 MySQL 5.7 中提供的大部分加密和压缩函数。
支持的函数    函数名 功能描述     MD5()  计算字符串的 MD5 校验和    PASSWORD() 计算并返回密码字符串   RANDOM_BYTES() 返回随机字节向量   SHA1(), SHA()  计算 SHA-1 160 位校验和    SHA2()  计算 SHA-2 校验和    AES_DECRYPT() 使用 AES 解密   AES_ENCRYPT() 使用 AES 加密   COMPRESS() 返回经过压缩的二进制字符串   UNCOMPRESS() 解压缩字符串   UNCOMPRESSED_LENGTH()  返回字符串解压后的长度   CREATE_ASYMMETRIC_PRIV_KEY() 创建私钥   CREATE_ASYMMETRIC_PUB_KEY() 创建公钥   CREATE_DH_PARAMETERS() 创建 DH 共享密钥   CREATE_DIGEST() 从字符串创建摘要   ASYMMETRIC_DECRYPT() 使用公钥或私钥解密密文   ASYMMETRIC_DERIVE() 从非对称密钥导出对称密钥   ASYMMETRIC_ENCRYPT() 使用公钥或私钥加密明文   ASYMMETRIC_SIGN() 从摘要创建签名   ASYMMETRIC_VERIFY() 验证签名字符串是否匹配摘要字符串    不支持的函数  DES_DECRYPT()、DES_ENCRYPT()、OLD_PASSWORD() 和 ENCRYPT()：这些函数在 MySQL 5.</description>
    </item>
    
    <item>
      <title>加密和压缩函数</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/encryption-and-compression-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/encryption-and-compression-functions/</guid>
      <description>加密和压缩函数    函数名 功能描述     MD5()  计算字符串的 MD5 校验和    PASSWORD() 计算并返回密码字符串   RANDOM_BYTES() 返回随机字节向量   SHA1(), SHA()  计算 SHA-1 160 位校验和    SHA2()  计算 SHA-2 校验和    AES_DECRYPT() 使用 AES 解密   AES_ENCRYPT() 使用 AES 加密   COMPRESS() 返回经过压缩的二进制字符串   UNCOMPRESS() 解压缩字符串   UNCOMPRESSED_LENGTH()  返回字符串解压后的长度   CREATE_ASYMMETRIC_PRIV_KEY() 创建私钥   CREATE_ASYMMETRIC_PUB_KEY() 创建公钥   CREATE_DH_PARAMETERS() 创建 DH 共享密钥   CREATE_DIGEST() 从字符串创建摘要   ASYMMETRIC_DECRYPT() 使用公钥或私钥解密密文   ASYMMETRIC_DERIVE() 从非对称密钥导出对称密钥   ASYMMETRIC_ENCRYPT() 使用公钥或私钥加密明文   ASYMMETRIC_SIGN() 从摘要创建签名   ASYMMETRIC_VERIFY() 验证签名字符串是否匹配摘要字符串    </description>
    </item>
    
    <item>
      <title>加密和压缩函数</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/encryption-and-compression-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/encryption-and-compression-functions/</guid>
      <description>加密和压缩函数 TiDB 支持使用 MySQL 5.7 中提供的大部分加密和压缩函数。
支持的函数    函数名 功能描述     MD5()  计算字符串的 MD5 校验和    PASSWORD() 计算并返回密码字符串   RANDOM_BYTES() 返回随机字节向量   SHA1(), SHA()  计算 SHA-1 160 位校验和    SHA2()  计算 SHA-2 校验和    AES_DECRYPT() 使用 AES 解密   AES_ENCRYPT() 使用 AES 加密   COMPRESS() 返回经过压缩的二进制字符串   UNCOMPRESS() 解压缩字符串   UNCOMPRESSED_LENGTH()  返回字符串解压后的长度   CREATE_ASYMMETRIC_PRIV_KEY() 创建私钥   CREATE_ASYMMETRIC_PUB_KEY() 创建公钥   CREATE_DH_PARAMETERS() 创建 DH 共享密钥   CREATE_DIGEST() 从字符串创建摘要   ASYMMETRIC_DECRYPT() 使用公钥或私钥解密密文   ASYMMETRIC_DERIVE() 从非对称密钥导出对称密钥   ASYMMETRIC_ENCRYPT() 使用公钥或私钥加密明文   ASYMMETRIC_SIGN() 从摘要创建签名   ASYMMETRIC_VERIFY() 验证签名字符串是否匹配摘要字符串    不支持的函数  DES_DECRYPT()、DES_ENCRYPT()、OLD_PASSWORD() 和 ENCRYPT()：这些函数在 MySQL 5.</description>
    </item>
    
    <item>
      <title>升级 TiDB Operator</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/upgrade/tidb-operator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/upgrade/tidb-operator/</guid>
      <description>升级 TiDB Operator 本文介绍如何升级 TiDB Operator。升级 TiDB Operator 和自定义 TiDB Operator 类似，修改 values.yaml 中的镜像版本，然后执行 helm upgrade：
 helm upgrade tidb-operator pingcap/tidb-operator --version=&amp;lt;chart-version&amp;gt; -f /home/tidb/tidb-operator/values-tidb-operator.yaml 当新版本 tidb-operator 发布，只要更新 values.yaml 中的 operatorImage 然后执行上述命令就可以。但是安全起见，最好从新版本 tidb-operator chart 中获取新版本 values.yaml 并和旧版本 values.yaml 合并生成新的 values.yaml，然后升级。
TiDB Operator 是用来管理 TiDB 集群的，也就是说，如果 TiDB 集群已经启动并正常运行，你甚至可以停掉 TiDB Operator，而 TiDB 集群仍然能正常工作，直到你需要维护 TiDB 集群，比如伸缩、升级等等。
升级 Kubernetes 当你的 Kubernetes 集群有版本升级，请确保 kubeSchedulerImageTag 与之匹配。默认情况下，这个值是由 Helm 在安装或者升级过程中生成的，要修改它你需要执行 helm upgrade。</description>
    </item>
    
    <item>
      <title>升级 TiDB Operator</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/upgrade/tidb-operator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/upgrade/tidb-operator/</guid>
      <description>升级 TiDB Operator 本文介绍如何升级 TiDB Operator。升级 TiDB Operator 和自定义 TiDB Operator 类似，修改 values.yaml 中的镜像版本，然后执行 helm upgrade：
 helm upgrade tidb-operator pingcap/tidb-operator --version=&amp;lt;chart-version&amp;gt; -f /home/tidb/tidb-operator/values-tidb-operator.yaml 当新版本 tidb-operator 发布，只要更新 values.yaml 中的 operatorImage 然后执行上述命令就可以。但是安全起见，最好从新版本 tidb-operator chart 中获取新版本 values.yaml 并和旧版本 values.yaml 合并生成新的 values.yaml，然后升级。
TiDB Operator 是用来管理 TiDB 集群的，也就是说，如果 TiDB 集群已经启动并正常运行，你甚至可以停掉 TiDB Operator，而 TiDB 集群仍然能正常工作，直到你需要维护 TiDB 集群，比如伸缩、升级等等。
升级 Kubernetes 当你的 Kubernetes 集群有版本升级，请确保 kubeSchedulerImageTag 与之匹配。默认情况下，这个值是由 Helm 在安装或者升级过程中生成的，要修改它你需要执行 helm upgrade。</description>
    </item>
    
    <item>
      <title>升级 TiDB Operator</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/upgrade/tidb-operator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/upgrade/tidb-operator/</guid>
      <description>升级 TiDB Operator 本文介绍如何升级 TiDB Operator。升级 TiDB Operator 和自定义 TiDB Operator 类似，修改 values.yaml 中的镜像版本，然后执行 helm upgrade：
 helm upgrade tidb-operator pingcap/tidb-operator --version=&amp;lt;chart-version&amp;gt; -f /home/tidb/tidb-operator/values-tidb-operator.yaml 当新版本 tidb-operator 发布，只要更新 values.yaml 中的 operatorImage 然后执行上述命令就可以。但是安全起见，最好从新版本 tidb-operator chart 中获取新版本 values.yaml 并和旧版本 values.yaml 合并生成新的 values.yaml，然后升级。
TiDB Operator 是用来管理 TiDB 集群的，也就是说，如果 TiDB 集群已经启动并正常运行，你甚至可以停掉 TiDB Operator，而 TiDB 集群仍然能正常工作，直到你需要维护 TiDB 集群，比如伸缩、升级等等。
升级 Kubernetes 当你的 Kubernetes 集群有版本升级，请确保 kubeSchedulerImageTag 与之匹配。默认情况下，这个值是由 Helm 在安装或者升级过程中生成的，要修改它你需要执行 helm upgrade。</description>
    </item>
    
    <item>
      <title>升级后常见问题</title>
      <link>https://pingcap.com/docs-cn/dev/faq/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/faq/upgrade/</guid>
      <description>升级后常见问题 本文列出了一些升级后可能会遇到的问题与解决办法。
执行 DDL 操作时遇到的字符集 (charset) 问题 TiDB 在 v2.1.0 以及之前版本（包括 v2.0 所有版本）中，默认字符集是 UTF8。从 v2.1.1 开始，默认字符集变更为 UTF8MB4。如果在 v2.1.0 及之前版本中，建表时显式指定了 table 的 charset 为 UTF8，那么升级到 v2.1.1 之后，执行 DDL 操作可能会失败。
要避免该问题，需注意以下两个要点：
  在 v2.1.3 之前，TiDB 不支持修改 column 的 charset。所以，执行 DDL 操作时，新 column 的 charset 需要和旧 column 的 charset 保持一致。
  在 v2.1.3 之前，即使 column 的 charset 和 table 的 charset 不一样，show create table 也不会显示 column 的 charset，但可以通过 HTTP API 获取 table 的元信息来查看 column 的 charset，下文提供了示例。</description>
    </item>
    
    <item>
      <title>升级后常见问题</title>
      <link>https://pingcap.com/docs-cn/stable/faq/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/faq/upgrade/</guid>
      <description>升级后常见问题 本文列出了一些升级后可能会遇到的问题与解决办法。
执行 DDL 操作时遇到的字符集 (charset) 问题 TiDB 在 v2.1.0 以及之前版本（包括 v2.0 所有版本）中，默认字符集是 UTF8。从 v2.1.1 开始，默认字符集变更为 UTF8MB4。如果在 v2.1.0 及之前版本中，建表时显式指定了 table 的 charset 为 UTF8，那么升级到 v2.1.1 之后，执行 DDL 操作可能会失败。
要避免该问题，需注意以下两个要点：
  在 v2.1.3 之前，TiDB 不支持修改 column 的 charset。所以，执行 DDL 操作时，新 column 的 charset 需要和旧 column 的 charset 保持一致。
  在 v2.1.3 之前，即使 column 的 charset 和 table 的 charset 不一样，show create table 也不会显示 column 的 charset，但可以通过 HTTP API 获取 table 的元信息来查看 column 的 charset，下文提供了示例。</description>
    </item>
    
    <item>
      <title>升级后常见问题</title>
      <link>https://pingcap.com/docs-cn/v2.1/faq/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/faq/upgrade/</guid>
      <description>升级后常见问题 本文列出了一些升级后可能会遇到的问题与解决办法。
执行 DDL 操作时遇到的字符集 (charset) 问题 TiDB 在 v2.1.0 以及之前版本（包括 v2.0 所有版本）中，默认字符集是 UTF8。从 v2.1.1 开始，默认字符集变更为 UTF8MB4。如果在 v2.1.0 及之前版本中，建表时显式指定了 table 的 charset 为 UTF8，那么升级到 v2.1.1 之后，执行 DDL 操作可能会失败。
要避免该问题，需注意以下两个要点：
  在 v2.1.3 之前，TiDB 不支持修改 column 的 charset。所以，执行 DDL 操作时，新 column 的 charset 需要和旧 column 的 charset 保持一致。
  在 v2.1.3 之前，即使 column 的 charset 和 table 的 charset 不一样，show create table 也不会显示 column 的 charset，但可以通过 HTTP API 获取 table 的元信息来查看 column 的 charset，下文提供了示例。</description>
    </item>
    
    <item>
      <title>升级后常见问题</title>
      <link>https://pingcap.com/docs-cn/v3.1/faq/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/faq/upgrade/</guid>
      <description>升级后常见问题 本文列出了一些升级后可能会遇到的问题与解决办法。
执行 DDL 操作时遇到的字符集 (charset) 问题 TiDB 在 v2.1.0 以及之前版本（包括 v2.0 所有版本）中，默认字符集是 UTF8。从 v2.1.1 开始，默认字符集变更为 UTF8MB4。如果在 v2.1.0 及之前版本中，建表时显式指定了 table 的 charset 为 UTF8，那么升级到 v2.1.1 之后，执行 DDL 操作可能会失败。
要避免该问题，需注意以下两个要点：
  在 v2.1.3 之前，TiDB 不支持修改 column 的 charset。所以，执行 DDL 操作时，新 column 的 charset 需要和旧 column 的 charset 保持一致。
  在 v2.1.3 之前，即使 column 的 charset 和 table 的 charset 不一样，show create table 也不会显示 column 的 charset，但可以通过 HTTP API 获取 table 的元信息来查看 column 的 charset，下文提供了示例。</description>
    </item>
    
    <item>
      <title>在 AWS EKS 上部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/deploy/aws-eks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/deploy/aws-eks/</guid>
      <description>在 AWS EKS 上部署 TiDB 集群 本文介绍了如何使用个人电脑（Linux 或 macOS 系统）在 AWS EKS (Elastic Kubernetes Service) 上部署 TiDB 集群。
环境配置准备 部署前，请确认已安装以下软件并完成配置：
  awscli &amp;gt;= 1.16.73，控制 AWS 资源
要与 AWS 交互，必须配置 awscli。最快的方式是使用 aws configure 命令:
 aws configure 替换下面的 AWS Access Key ID 和 AWS Secret Access Key：
AWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLE AWS Secret Access Key [None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY Default region name [None]: us-west-2 Default output format [None]: json  注意：</description>
    </item>
    
    <item>
      <title>在 AWS EKS 上部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/deploy/aws-eks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/deploy/aws-eks/</guid>
      <description>在 AWS EKS 上部署 TiDB 集群 本文介绍了如何使用个人电脑（Linux 或 macOS 系统）在 AWS EKS (Elastic Kubernetes Service) 上部署 TiDB 集群。
环境配置准备 部署前，请确认已安装以下软件并完成配置：
  awscli &amp;gt;= 1.16.73，控制 AWS 资源
要与 AWS 交互，必须配置 awscli。最快的方式是使用 aws configure 命令:
 aws configure 替换下面的 AWS Access Key ID 和 AWS Secret Access Key：
AWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLE AWS Secret Access Key [None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY Default region name [None]: us-west-2 Default output format [None]: json  注意：</description>
    </item>
    
    <item>
      <title>在 AWS EKS 上部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/deploy/aws-eks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/deploy/aws-eks/</guid>
      <description>在 AWS EKS 上部署 TiDB 集群 本文介绍了如何使用个人电脑（Linux 或 macOS 系统）在 AWS EKS (Elastic Kubernetes Service) 上部署 TiDB 集群。
环境配置准备 部署前，请确认已安装以下软件并完成配置：
  awscli &amp;gt;= 1.16.73，控制 AWS 资源
要与 AWS 交互，必须配置 awscli。最快的方式是使用 aws configure 命令:
 aws configure 替换下面的 AWS Access Key ID 和 AWS Secret Access Key：
AWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLE AWS Secret Access Key [None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY Default region name [None]: us-west-2 Default output format [None]: json  注意：</description>
    </item>
    
    <item>
      <title>在 GCP GKE 上部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/deploy/gcp-gke/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/deploy/gcp-gke/</guid>
      <description>了解如何在 GCP GKE 上部署 TiDB 集群。</description>
    </item>
    
    <item>
      <title>在 GCP GKE 上部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/deploy/gcp-gke/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/deploy/gcp-gke/</guid>
      <description>了解如何在 GCP GKE 上部署 TiDB 集群。</description>
    </item>
    
    <item>
      <title>在 GCP GKE 上部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/deploy/gcp-gke/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/deploy/gcp-gke/</guid>
      <description>了解如何在 GCP GKE 上部署 TiDB 集群。</description>
    </item>
    
    <item>
      <title>在 GCP 上通过 Kubernetes 部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-gke/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-gke/</guid>
      <description>在 GCP 上通过 Kubernetes 部署 TiDB 集群教程</description>
    </item>
    
    <item>
      <title>在 GCP 上通过 Kubernetes 部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-gke/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-gke/</guid>
      <description>在 GCP 上通过 Kubernetes 部署 TiDB 集群教程</description>
    </item>
    
    <item>
      <title>在 GCP 上通过 Kubernetes 部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-gke/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-gke/</guid>
      <description>在 GCP 上通过 Kubernetes 部署 TiDB 集群教程</description>
    </item>
    
    <item>
      <title>在 Kubernetes 上部署 TiDB Operator</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/deploy/tidb-operator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/deploy/tidb-operator/</guid>
      <description>了解如何在 Kubernetes 上部署 TiDB Operator</description>
    </item>
    
    <item>
      <title>在 Kubernetes 上部署 TiDB Operator</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/deploy/tidb-operator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/deploy/tidb-operator/</guid>
      <description>了解如何在 Kubernetes 上部署 TiDB Operator</description>
    </item>
    
    <item>
      <title>在 Kubernetes 上部署 TiDB Operator</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/deploy/tidb-operator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/deploy/tidb-operator/</guid>
      <description>了解如何在 Kubernetes 上部署 TiDB Operator</description>
    </item>
    
    <item>
      <title>在 Minikube 集群上部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-minikube/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-minikube/</guid>
      <description>在 Minikube 集群上部署 TiDB 集群</description>
    </item>
    
    <item>
      <title>在 Minikube 集群上部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-minikube/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-minikube/</guid>
      <description>在 Minikube 集群上部署 TiDB 集群</description>
    </item>
    
    <item>
      <title>在 Minikube 集群上部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-minikube/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/get-started/deploy-tidb-from-kubernetes-minikube/</guid>
      <description>在 Minikube 集群上部署 TiDB 集群</description>
    </item>
    
    <item>
      <title>在标准 Kubernetes 上部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/deploy/general-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/deploy/general-kubernetes/</guid>
      <description>在标准 Kubernetes 上部署 TiDB 集群 本文主要描述了如何在标准的 Kubernetes 集群上通过 TiDB Operator 部署 TiDB 集群。
前置条件  参考 TiDB Operator 完成集群中的 TiDB Operator 部署； 参考 使用 Helm 安装 Helm 并配置 PingCAP 官方 chart 仓库。  配置 TiDB 集群 通过下面命令获取待安装的 tidb-cluster chart 的 values.yaml 配置文件：
 mkdir -p /home/tidb/&amp;lt;release-name&amp;gt; &amp;amp;&amp;amp; \ helm inspect values pingcap/tidb-cluster --version=&amp;lt;chart-version&amp;gt; &amp;gt; /home/tidb/&amp;lt;release-name&amp;gt;/values-&amp;lt;release-name&amp;gt;.yaml  注意：
 /home/tidb 可以替换为你想用的目录。 release-name 将会作为 Kubernetes 相关资源（例如 Pod，Service 等）的前缀名，可以起一个方便记忆的名字，要求全局唯一，通过 helm ls -q 可以查看集群中已经有的 release-name。 chart-version 是 tidb-cluster chart 发布的版本，可以通过 helm search -l tidb-cluster 查看当前支持的版本。 下文会用 values.</description>
    </item>
    
    <item>
      <title>在标准 Kubernetes 上部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/deploy/general-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/deploy/general-kubernetes/</guid>
      <description>在标准 Kubernetes 上部署 TiDB 集群 本文主要描述了如何在标准的 Kubernetes 集群上通过 TiDB Operator 部署 TiDB 集群。
前置条件  参考 TiDB Operator 完成集群中的 TiDB Operator 部署； 参考 使用 Helm 安装 Helm 并配置 PingCAP 官方 chart 仓库。  配置 TiDB 集群 通过下面命令获取待安装的 tidb-cluster chart 的 values.yaml 配置文件：
 mkdir -p /home/tidb/&amp;lt;release-name&amp;gt; &amp;amp;&amp;amp; \ helm inspect values pingcap/tidb-cluster --version=&amp;lt;chart-version&amp;gt; &amp;gt; /home/tidb/&amp;lt;release-name&amp;gt;/values-&amp;lt;release-name&amp;gt;.yaml  注意：
 /home/tidb 可以替换为你想用的目录。 release-name 将会作为 Kubernetes 相关资源（例如 Pod，Service 等）的前缀名，可以起一个方便记忆的名字，要求全局唯一，通过 helm ls -q 可以查看集群中已经有的 release-name。 chart-version 是 tidb-cluster chart 发布的版本，可以通过 helm search -l tidb-cluster 查看当前支持的版本。 下文会用 values.</description>
    </item>
    
    <item>
      <title>在标准 Kubernetes 上部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/deploy/general-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/deploy/general-kubernetes/</guid>
      <description>在标准 Kubernetes 上部署 TiDB 集群 本文主要描述了如何在标准的 Kubernetes 集群上通过 TiDB Operator 部署 TiDB 集群。
前置条件  参考 TiDB Operator 完成集群中的 TiDB Operator 部署； 参考 使用 Helm 安装 Helm 并配置 PingCAP 官方 chart 仓库。  配置 TiDB 集群 通过下面命令获取待安装的 tidb-cluster chart 的 values.yaml 配置文件：
 mkdir -p /home/tidb/&amp;lt;release-name&amp;gt; &amp;amp;&amp;amp; \ helm inspect values pingcap/tidb-cluster --version=&amp;lt;chart-version&amp;gt; &amp;gt; /home/tidb/&amp;lt;release-name&amp;gt;/values-&amp;lt;release-name&amp;gt;.yaml  注意：
 /home/tidb 可以替换为你想用的目录。 release-name 将会作为 Kubernetes 相关资源（例如 Pod，Service 等）的前缀名，可以起一个方便记忆的名字，要求全局唯一，通过 helm ls -q 可以查看集群中已经有的 release-name。 chart-version 是 tidb-cluster chart 发布的版本，可以通过 helm search -l tidb-cluster 查看当前支持的版本。 下文会用 values.</description>
    </item>
    
    <item>
      <title>在阿里云上部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/deploy/alibaba-cloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/deploy/alibaba-cloud/</guid>
      <description>在阿里云上部署 TiDB 集群 本文介绍了如何使用个人电脑（Linux 或 macOS 系统）在阿里云上部署 TiDB 集群。
环境需求   aliyun-cli &amp;gt;= 3.0.15 并且配置 aliyun-cli
 注意：
Access Key 需要具有操作相应资源的权限。
   kubectl &amp;gt;= 1.12
  helm &amp;gt;= 2.9.1 且 &amp;lt;= 2.11.0
  jq &amp;gt;= 1.6
  terraform 0.12.*
  你可以使用阿里云的云命令行服务来进行操作，云命令行中已经预装并配置好了所有工具。
权限 完整部署集群需要具备以下权限：
 AliyunECSFullAccess AliyunESSFullAccess AliyunVPCFullAccess AliyunSLBFullAccess AliyunCSFullAccess AliyunEIPFullAccess AliyunECIFullAccess AliyunVPNGatewayFullAccess AliyunNATGatewayFullAccess  概览 默认配置下，会创建：
 一个新的 VPC 一台 ECS 实例作为堡垒机 一个托管版 ACK（阿里云 Kubernetes）集群以及一系列 worker 节点：  属于一个伸缩组的 2 台 ECS 实例（2 核 2 GB）托管版 Kubernetes 的默认伸缩组中必须至少有两台实例，用于承载整个的系统服务，例如 CoreDNS 属于一个伸缩组的 3 台 ecs.</description>
    </item>
    
    <item>
      <title>在阿里云上部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/deploy/alibaba-cloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/deploy/alibaba-cloud/</guid>
      <description>在阿里云上部署 TiDB 集群 本文介绍了如何使用个人电脑（Linux 或 macOS 系统）在阿里云上部署 TiDB 集群。
环境需求   aliyun-cli &amp;gt;= 3.0.15 并且配置 aliyun-cli
 注意：
Access Key 需要具有操作相应资源的权限。
   kubectl &amp;gt;= 1.12
  helm &amp;gt;= 2.9.1 且 &amp;lt;= 2.11.0
  jq &amp;gt;= 1.6
  terraform 0.12.*
  你可以使用阿里云的云命令行服务来进行操作，云命令行中已经预装并配置好了所有工具。
权限 完整部署集群需要具备以下权限：
 AliyunECSFullAccess AliyunESSFullAccess AliyunVPCFullAccess AliyunSLBFullAccess AliyunCSFullAccess AliyunEIPFullAccess AliyunECIFullAccess AliyunVPNGatewayFullAccess AliyunNATGatewayFullAccess  概览 默认配置下，会创建：
 一个新的 VPC 一台 ECS 实例作为堡垒机 一个托管版 ACK（阿里云 Kubernetes）集群以及一系列 worker 节点：  属于一个伸缩组的 2 台 ECS 实例（2 核 2 GB）托管版 Kubernetes 的默认伸缩组中必须至少有两台实例，用于承载整个的系统服务，例如 CoreDNS 属于一个伸缩组的 3 台 ecs.</description>
    </item>
    
    <item>
      <title>在阿里云上部署 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/deploy/alibaba-cloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/deploy/alibaba-cloud/</guid>
      <description>在阿里云上部署 TiDB 集群 本文介绍了如何使用个人电脑（Linux 或 macOS 系统）在阿里云上部署 TiDB 集群。
环境需求   aliyun-cli &amp;gt;= 3.0.15 并且配置 aliyun-cli
 注意：
Access Key 需要具有操作相应资源的权限。
   kubectl &amp;gt;= 1.12
  helm &amp;gt;= 2.9.1 且 &amp;lt;= 2.11.0
  jq &amp;gt;= 1.6
  terraform 0.12.*
  你可以使用阿里云的云命令行服务来进行操作，云命令行中已经预装并配置好了所有工具。
权限 完整部署集群需要具备以下权限：
 AliyunECSFullAccess AliyunESSFullAccess AliyunVPCFullAccess AliyunSLBFullAccess AliyunCSFullAccess AliyunEIPFullAccess AliyunECIFullAccess AliyunVPNGatewayFullAccess AliyunNATGatewayFullAccess  概览 默认配置下，会创建：
 一个新的 VPC 一台 ECS 实例作为堡垒机 一个托管版 ACK（阿里云 Kubernetes）集群以及一系列 worker 节点：  属于一个伸缩组的 2 台 ECS 实例（2 核 2 GB）托管版 Kubernetes 的默认伸缩组中必须至少有两台实例，用于承载整个的系统服务，例如 CoreDNS 属于一个伸缩组的 3 台 ecs.</description>
    </item>
    
    <item>
      <title>基于 Helm Charts 实现的 TiDB 集群备份恢复</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/backup-and-restore/charts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/backup-and-restore/charts/</guid>
      <description>基于 Helm Charts 实现的 TiDB 集群备份与恢复 本文详细描述了如何对 Kubernetes 上的 TiDB 集群进行数据备份和数据恢复。本文使用的备份恢复方式是基于 Helm Charts 实现的。
TiDB Operator 1.1 及以上版本推荐使用基于 CustomResourceDefinition (CRD) 实现的备份恢复方式实现，详情可参阅以下文档：
 备份 TiDB 集群到 GCS 恢复 GCS 上的备份数据 备份 TiDB 集群到兼容 S3 的存储 恢复 S3 兼容存储上的备份数据  Kubernetes 上的 TiDB 集群支持两种备份策略：
 全量备份（定时执行或 Ad-hoc）：使用 mydumper 获取集群的逻辑备份； 增量备份：使用 TiDB Binlog 将 TiDB 集群的数据实时复制到其它数据库中或实时获得增量数据备份；  目前，Kubernetes 上的 TiDB 集群只对 mydumper 获取的全量备份数据提供自动化的数据恢复操作。恢复 TiDB-Binlog 获取的增量数据需要手动进行。
全量备份 全量备份使用 mydumper 来获取 TiDB 集群的逻辑备份数据。全量备份任务会创建一个 PVC (PersistentVolumeClaim) 来存储数据。</description>
    </item>
    
    <item>
      <title>基于 Helm Charts 实现的 TiDB 集群备份恢复</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/backup-and-restore/charts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/backup-and-restore/charts/</guid>
      <description>基于 Helm Charts 实现的 TiDB 集群备份与恢复 本文详细描述了如何对 Kubernetes 上的 TiDB 集群进行数据备份和数据恢复。本文使用的备份和恢复方式是基于 Helm Charts 实现的。
TiDB Operator 1.1 及以上版本推荐使用基于 CRD 的备份和恢复方式，详情可参阅以下文档：
 备份 TiDB 集群到 GCS 恢复 GCS 上的备份数据 备份 TiDB 集群到兼容 S3 的存储 恢复 S3 兼容存储上的备份数据  Kubernetes 上的 TiDB 集群支持两种备份策略：
 全量备份（定时执行或 Ad-hoc）：使用 mydumper 获取集群的逻辑备份； 增量备份：使用 TiDB Binlog 将 TiDB 集群的数据实时复制到其它数据库中或实时获得增量数据备份；  目前，Kubernetes 上的 TiDB 集群只对 mydumper 获取的全量备份数据提供自动化的数据恢复操作。恢复 TiDB-Binlog 获取的增量数据需要手动进行。
全量备份 全量备份使用 mydumper 来获取 TiDB 集群的逻辑备份数据。全量备份任务会创建一个 PVC (PersistentVolumeClaim) 来存储数据。</description>
    </item>
    
    <item>
      <title>基于 Helm Charts 实现的 TiDB 集群备份恢复</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/backup-and-restore/charts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/backup-and-restore/charts/</guid>
      <description>基于 Helm Charts 实现的 TiDB 集群备份与恢复 本文详细描述了如何对 Kubernetes 上的 TiDB 集群进行数据备份和数据恢复。本文使用的备份和恢复方式是基于 Helm Charts 实现的。
TiDB Operator 1.1 及以上版本推荐使用基于 CRD 的实现的备份和恢复方式，详情可参阅以下文档：
 备份 TiDB 集群到 GCS 恢复 GCS 上的备份数据 备份 TiDB 集群到兼容 S3 的存储 恢复 S3 兼容存储上的备份数据  Kubernetes 上的 TiDB 集群支持两种备份策略：
 全量备份（定时执行或 Ad-hoc）：使用 mydumper 获取集群的逻辑备份； 增量备份：使用 TiDB Binlog 将 TiDB 集群的数据实时复制到其它数据库中或实时获得增量数据备份；  目前，Kubernetes 上的 TiDB 集群只对 mydumper 获取的全量备份数据提供自动化的数据恢复操作。恢复 TiDB-Binlog 获取的增量数据需要手动进行。
全量备份 全量备份使用 mydumper 来获取 TiDB 集群的逻辑备份数据。全量备份任务会创建一个 PVC (PersistentVolumeClaim) 来存储数据。</description>
    </item>
    
    <item>
      <title>基于角色的访问控制</title>
      <link>https://pingcap.com/docs-cn/dev/reference/security/role-based-access-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/security/role-based-access-control/</guid>
      <description>基于角色的访问控制 TiDB 的基于角色的访问控制 (RBAC) 系统的实现类似于 MySQL 8.0 的 RBAC 系统。TiDB 兼容大部分 MySQL RBAC 系统的语法。
本文档主要介绍 TiDB 基于角色的访问控制相关操作及实现。
角色访问控制相关操作 角色是一系列权限的集合。用户可以创建角色、删除角色、将权限赋予角色；也可以将角色授予给其他用户，被授予的用户在启用角色后，可以得到角色所包含的权限。
创建角色 创建角色 r_1 和 r_2：
 CREATE ROLE `r_1`@`%`, `r_2`@`%`; 角色名的格式和规范可以参考 TiDB 用户账户管理。
角色会被保存在 mysql.user 表中，如果表中有同名角色或用户，角色会创建失败并报错。 创建角色的用户需要拥有 CREATE ROLE 或 CREATE USER 权限。
删除角色 删除角色 r_1 和 r_2：
 DROP ROLE `r_1`@`%`, `r_2`@`%`; 这个操作会清除角色在 mysql.user 表里面的记录项，并且清除在授权表里面的相关记录，解除和其相关的授权关系。 执行删除角色的用户需要拥有 DROP ROLE 或 DROP USER 权限。
授予角色权限 为角色授予权限和为用户授予权限操作相同，可参考 TiDB 权限管理。
为 analyst 角色授予数据库 test 的读权限：</description>
    </item>
    
    <item>
      <title>基于角色的访问控制</title>
      <link>https://pingcap.com/docs-cn/stable/reference/security/role-based-access-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/security/role-based-access-control/</guid>
      <description>基于角色的访问控制 TiDB 的基于角色的访问控制 (RBAC) 系统的实现类似于 MySQL 8.0 的 RBAC 系统。TiDB 兼容大部分 MySQL RBAC 系统的语法。
本文档主要介绍 TiDB 基于角色的访问控制相关操作及实现。
角色访问控制相关操作 角色是一系列权限的集合。用户可以创建角色、删除角色、将权限赋予角色；也可以将角色授予给其他用户，被授予的用户在启用角色后，可以得到角色所包含的权限。
创建角色 创建角色 r_1 和 r_2：
 CREATE ROLE `r_1`@`%`, `r_2`@`%`; 角色名的格式和规范可以参考 TiDB 用户账户管理。
角色会被保存在 mysql.user 表中，如果表中有同名角色或用户，角色会创建失败并报错。 创建角色的用户需要拥有 CREATE ROLE 或 CREATE USER 权限。
删除角色 删除角色 r_1 和 r_2：
 DROP ROLE `r_1`@`%`, `r_2`@`%`; 这个操作会清除角色在 mysql.user 表里面的记录项，并且清除在授权表里面的相关记录，解除和其相关的授权关系。 执行删除角色的用户需要拥有 DROP ROLE 或 DROP USER 权限。
授予角色权限 为角色授予权限和为用户授予权限操作相同，可参考 TiDB 权限管理。
为 analyst 角色授予数据库 test 的读权限：</description>
    </item>
    
    <item>
      <title>基于角色的访问控制</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/security/role-based-access-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/security/role-based-access-control/</guid>
      <description>基于角色的访问控制 TiDB 的基于角色的访问控制 (RBAC) 系统的实现类似于 MySQL 8.0 的 RBAC 系统。TiDB 兼容大部分 MySQL RBAC 系统的语法。
本文档主要介绍 TiDB 基于角色的访问控制相关操作及实现。
角色访问控制相关操作 角色是一系列权限的集合。用户可以创建角色、删除角色、将权限赋予角色；也可以将角色授予给其他用户，被授予的用户在启用角色后，可以得到角色所包含的权限。
创建角色 创建角色 r_1 和 r_2：
 CREATE ROLE `r_1`@`%`, `r_2`@`%`; 角色名的格式和规范可以参考 TiDB 用户账户管理。
角色会被保存在 mysql.user 表中，如果表中有同名角色或用户，角色会创建失败并报错。 创建角色的用户需要拥有 CREATE ROLE 或 CREATE USER 权限。
删除角色 删除角色 r_1 和 r_2：
 DROP ROLE `r_1`@`%`, `r_2`@`%`; 这个操作会清除角色在 mysql.user 表里面的记录项，并且清除在授权表里面的相关记录，解除和其相关的授权关系。 执行删除角色的用户需要拥有 DROP ROLE 或 DROP USER 权限。
授予角色权限 为角色授予权限和为用户授予权限操作相同，可参考 TiDB 权限管理。
为 analyst 角色授予数据库 test 的读权限：</description>
    </item>
    
    <item>
      <title>增量数据复制</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/migrate/incrementally-from-mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/migrate/incrementally-from-mysql/</guid>
      <description>增量数据复制 全量迁移文档中介绍了如何使用 mydumper/loader 将 MySQL 的数据全量导入到 TiDB，但如果后续 MySQL 的数据有更新，仍然希望快速导入，就不适合使用全量的方式。因此，TiDB 提供了 syncer 工具，可以方便地将 MySQL 的数据增量的导入到 TiDB 里面。
syncer 属于 TiDB 企业版工具集，如何获取可以参考 下载 TiDB 企业版工具集。
下载 TiDB 企业版工具集 (Linux) # 下载 tool 压缩包 wget https://download.pingcap.org/tidb-enterprise-tools-latest-linux-amd64.tar.gz wget https://download.pingcap.org/tidb-enterprise-tools-latest-linux-amd64.sha256 # 检查文件完整性，返回 ok 则正确 sha256sum -c tidb-enterprise-tools-latest-linux-amd64.sha256 # 解开压缩包 tar -xzf tidb-enterprise-tools-latest-linux-amd64.tar.gz cd tidb-enterprise-tools-latest-linux-amd64 假设我们之前已经使用 mydumper/loader 导入了 t1 和 t2 两张表的一些数据，现在我们希望这两张表的任何更新，都是实时的同步到 TiDB 上面。
获取同步 position 如上文所提，Mydumper 导出的数据目录里面有一个 metadata 文件，里面就包含了我们所需的 position 信息。
medadata 文件信息内容举例：
Started dump at: 2017-04-28 10:48:10 SHOW MASTER STATUS: Log: mysql-bin.</description>
    </item>
    
    <item>
      <title>备份 TiDB 集群到 GCS</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/backup-and-restore/backup-gcs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/backup-and-restore/backup-gcs/</guid>
      <description>备份 TiDB 集群到 GCS 本文档详细描述了如何将 Kubernetes 上 TiDB 集群的数据备份到 Google Cloud Storage (GCS) 上。本文档中的“备份”，均是指全量备份（Ad-hoc 全量备份和定时全量备份），底层通过使用 mydumper 获取集群的逻辑备份，然后再将备份数据上传到远端 GCS。
本文使用的备份方式基于 TiDB Operator 新版（v1.1 及以上）的 CustomResourceDefinition (CRD) 实现。基于 Helm Charts 的备份和恢复方式可参考基于 Helm Charts 实现的 TiDB 集群备份与恢复。
Ad-hoc 全量备份 Ad-hoc 全量备份通过创建一个自定义的 Backup custom resource (CR) 对象来描述一次备份。TiDB Operator 根据这个 Backup 对象来完成具体的备份过程。如果备份过程中出现错误，程序不会自动重试，此时需要手动处理。
为了更好地描述备份的使用方式，本文档提供如下备份示例。示例假设对部署在 Kubernetes test1 这个 namespace 中的 TiDB 集群 demo1 进行数据备份，下面是具体操作过程。
Ad-hoc 全量备份环境准备   下载文件 backup-rbac.yaml，并执行以下命令在 test1 这个 namespace 中创建备份需要的 RBAC 相关资源：
 kubectl apply -f backup-rbac.</description>
    </item>
    
    <item>
      <title>备份 TiDB 集群到 GCS</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/backup-and-restore/backup-gcs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/backup-and-restore/backup-gcs/</guid>
      <description>备份 TiDB 集群到 GCS 本文档详细描述了如何将 Kubernetes 上 TiDB 集群的数据备份到 Google Cloud Storage (GCS) 上。本文档中的“备份”，均是指全量备份（Ad-hoc 全量备份和定时全量备份），底层通过使用 mydumper 获取集群的逻辑备份，然后再将备份数据上传到远端 GCS。
本文使用的备份方式基于 TiDB Operator 新版（v1.1 及以上）的 CustomResourceDefinition (CRD) 实现。基于 Helm Charts 的备份和恢复方式可参考基于 Helm Charts 实现的 TiDB 集群备份与恢复。
Ad-hoc 全量备份 Ad-hoc 全量备份通过创建一个自定义的 Backup custom resource (CR) 对象来描述一次备份。TiDB Operator 根据这个 Backup 对象来完成具体的备份过程。如果备份过程中出现错误，程序不会自动重试，此时需要手动处理。
为了更好地描述备份的使用方式，本文档提供如下备份示例。示例假设对部署在 Kubernetes test1 这个 namespace 中的 TiDB 集群 demo1 进行数据备份，下面是具体操作过程。
Ad-hoc 全量备份环境准备   下载文件 backup-rbac.yaml，并执行以下命令在 test1 这个 namespace 中创建备份需要的 RBAC 相关资源：
 kubectl apply -f backup-rbac.</description>
    </item>
    
    <item>
      <title>备份 TiDB 集群到 GCS</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/backup-and-restore/backup-gcs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/backup-and-restore/backup-gcs/</guid>
      <description>备份 TiDB 集群到 GCS 本文档详细描述了如何将 Kubernetes 上 TiDB 集群的数据备份到 Google Cloud Storage (GCS) 上。本文档中的“备份”，均是指全量备份（Ad-hoc 全量备份和定时全量备份），底层通过使用 mydumper 获取集群的逻辑备份，然后再将备份数据上传到远端 GCS。
本文使用的备份方式基于 TiDB Operator 新版（v1.1 及以上）的 CustomResourceDefinition (CRD) 实现。基于 Helm Charts 的备份和恢复方式可参考基于 Helm Charts 实现的 TiDB 集群备份与恢复。
Ad-hoc 全量备份 Ad-hoc 全量备份通过创建一个自定义的 Backup custom resource (CR) 对象来描述一次备份。TiDB Operator 根据这个 Backup 对象来完成具体的备份过程。如果备份过程中出现错误，程序不会自动重试，此时需要手动处理。
为了更好地描述备份的使用方式，本文档提供如下备份示例。示例假设对部署在 Kubernetes test1 这个 namespace 中的 TiDB 集群 demo1 进行数据备份，下面是具体操作过程。
Ad-hoc 全量备份环境准备   下载文件 backup-rbac.yaml，并执行以下命令在 test1 这个 namespace 中创建备份需要的 RBAC 相关资源：
 kubectl apply -f backup-rbac.</description>
    </item>
    
    <item>
      <title>备份 TiDB 集群到兼容 S3 的存储</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/backup-and-restore/backup-s3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/backup-and-restore/backup-s3/</guid>
      <description>备份 TiDB 集群到兼容 S3 的存储 本文详细描述了如何将 Kubernetes 上的 TiDB 集群数据备份到兼容 S3 的存储上。本文档中的“备份”，均是指全量备份（Ad-hoc 全量备份和定时全量备份）。底层通过使用 mydumper 获取集群的逻辑备份，然后在将备份数据上传到兼容 S3 的存储上。
本文使用的备份方式基于 TiDB Operator 新版（v1.1 及以上）的 CustomResourceDefinition (CRD) 实现。基于 Helm Charts 实现的备份和恢复方式可参考基于 Helm Charts 实现的 TiDB 集群备份与恢复。
Ad-hoc 全量备份 Ad-hoc 全量备份通过创建一个自定义的 Backup custom resource (CR) 对象来描述一次备份。TiDB Operator 根据这个 Backup 对象来完成具体的备份过程。如果备份过程中出现错误，程序不会自动重试，此时需要手动处理。
目前兼容 S3 的存储中，Ceph 和 Amazon S3 经测试可正常工作。下文对 Ceph 和 Amazon S3 这两种存储的使用进行描述。本文档提供如下备份示例。示例假设对部署在 Kubernetes test1 这个 namespace 中的 TiDB 集群 demo1 进行数据备份，下面是具体操作过程。
Ad-hoc 全量备份环境准备   下载文件 backup-rbac.</description>
    </item>
    
    <item>
      <title>备份 TiDB 集群到兼容 S3 的存储</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/backup-and-restore/backup-s3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/backup-and-restore/backup-s3/</guid>
      <description>备份 TiDB 集群到兼容 S3 的存储 本文详细描述了如何将 Kubernetes 上的 TiDB 集群数据备份到兼容 S3 的存储上。本文档中的“备份”，均是指全量备份（Ad-hoc 全量备份和定时全量备份）。底层通过使用 mydumper 获取集群的逻辑备份，然后在将备份数据上传到兼容 S3 的存储上。
本文使用的备份方式基于 TiDB Operator 新版（v1.1 及以上）的 CustomResourceDefinition (CRD) 实现。基于 Helm Charts 实现的备份和恢复方式可参考基于 Helm Charts 实现的 TiDB 集群备份与恢复。
Ad-hoc 全量备份 Ad-hoc 全量备份通过创建一个自定义的 Backup custom resource (CR) 对象来描述一次备份。TiDB Operator 根据这个 Backup 对象来完成具体的备份过程。如果备份过程中出现错误，程序不会自动重试，此时需要手动处理。
目前兼容 S3 的存储中，Ceph 和 Amazon S3 经测试可正常工作。下文对 Ceph 和 Amazon S3 这两种存储的使用进行描述。本文档提供如下备份示例。示例假设对部署在 Kubernetes test1 这个 namespace 中的 TiDB 集群 demo1 进行数据备份，下面是具体操作过程。
Ad-hoc 全量备份环境准备   下载文件 backup-rbac.</description>
    </item>
    
    <item>
      <title>备份 TiDB 集群到兼容 S3 的存储</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/backup-and-restore/backup-s3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/backup-and-restore/backup-s3/</guid>
      <description>备份 TiDB 集群到兼容 S3 的存储 本文详细描述了如何将 Kubernetes 上的 TiDB 集群数据备份到兼容 S3 的存储上。本文档中的“备份”，均是指全量备份（Ad-hoc 全量备份和定时全量备份）。底层通过使用 mydumper 获取集群的逻辑备份，然后在将备份数据上传到兼容 S3 的存储上。
本文使用的备份方式基于 TiDB Operator 新版（v1.1 及以上）的 CustomResourceDefinition (CRD) 实现。基于 Helm Charts 实现的备份和恢复方式可参考基于 Helm Charts 实现的 TiDB 集群备份与恢复。
Ad-hoc 全量备份 Ad-hoc 全量备份通过创建一个自定义的 Backup custom resource (CR) 对象来描述一次备份。TiDB Operator 根据这个 Backup 对象来完成具体的备份过程。如果备份过程中出现错误，程序不会自动重试，此时需要手动处理。
目前兼容 S3 的存储中，Ceph 和 Amazon S3 经测试可正常工作。下文对 Ceph 和 Amazon S3 这两种存储的使用进行描述。本文档提供如下备份示例。示例假设对部署在 Kubernetes test1 这个 namespace 中的 TiDB 集群 demo1 进行数据备份，下面是具体操作过程。
Ad-hoc 全量备份环境准备   下载文件 backup-rbac.</description>
    </item>
    
    <item>
      <title>备份与恢复</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/maintain/backup-and-restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/maintain/backup-and-restore/</guid>
      <description>备份与恢复 本文档将详细介绍如何对 TiDB 进行全量备份与恢复。增量备份与恢复可使用 TiDB Binlog。
这里我们假定 TiDB 服务信息如下：
   Name Address Port User Password     TiDB 127.0.0.1 4000 root *    在这个备份恢复过程中，我们会用到下面的工具：
 Mydumper 从 TiDB 导出数据 Loader 导入数据到 TiDB  下载 TiDB 工具集 (Linux) 下载 tool 压缩包：
 wget https://download.pingcap.org/tidb-enterprise-tools-latest-linux-amd64.tar.gz &amp;amp;&amp;amp; \ wget https://download.pingcap.org/tidb-enterprise-tools-latest-linux-amd64.sha256 检查文件完整性，返回 ok 则正确：
 sha256sum -c tidb-enterprise-tools-latest-linux-amd64.sha256 解开压缩包：
 tar -xzf tidb-enterprise-tools-latest-linux-amd64.tar.gz &amp;amp;&amp;amp; \ cd tidb-enterprise-tools-latest-linux-amd64 使用 mydumper/loader 全量备份恢复数据 mydumper 是一个强大的数据备份工具，具体可以参考 maxbube/mydumper。</description>
    </item>
    
    <item>
      <title>如何对 TiDB 进行 TPC-C 测试</title>
      <link>https://pingcap.com/docs-cn/dev/benchmark/how-to-run-tpcc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/benchmark/how-to-run-tpcc/</guid>
      <description>如何对 TiDB 进行 TPC-C 测试 本文介绍如何对 TiDB 进行 TPC-C 测试。
准备测试程序 TPC-C 是一个对 OLTP（联机交易处理）系统进行测试的规范，使用一个商品销售模型对 OLTP 系统进行测试，其中包含五类事务：
 NewOrder – 新订单的生成 Payment – 订单付款 OrderStatus – 最近订单查询 Delivery – 配送 StockLevel – 库存缺货状态分析  在测试开始前，TPC-C Benchmark 规定了数据库的初始状态，也就是数据库中数据生成的规则，其中 ITEM 表中固定包含 10 万种商品，仓库的数量可进行调整，假设 WAREHOUSE 表中有 W 条记录，那么：
 STOCK 表中应有 W * 10 万条记录（每个仓库对应 10 万种商品的库存数据） DISTRICT 表中应有 W * 10 条记录（每个仓库为 10 个地区提供服务） CUSTOMER 表中应有 W * 10 * 3000 条记录（每个地区有 3000 个客户） HISTORY 表中应有 W * 10 * 3000 条记录（每个客户一条交易历史） ORDER 表中应有 W * 10 * 3000 条记录（每个地区 3000 个订单），并且最后生成的 900 个订单被添加到 NEW-ORDER 表中，每个订单随机生成 5 ~ 15 条 ORDER-LINE 记录。  我们将以 1000 WAREHOUSE 为例进行测试。</description>
    </item>
    
    <item>
      <title>如何对 TiDB 进行 TPC-C 测试</title>
      <link>https://pingcap.com/docs-cn/stable/benchmark/how-to-run-tpcc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/benchmark/how-to-run-tpcc/</guid>
      <description>如何对 TiDB 进行 TPC-C 测试 本文介绍如何对 TiDB 进行 TPC-C 测试。
准备测试程序 TPC-C 是一个对 OLTP（联机交易处理）系统进行测试的规范，使用一个商品销售模型对 OLTP 系统进行测试，其中包含五类事务：
 NewOrder – 新订单的生成 Payment – 订单付款 OrderStatus – 最近订单查询 Delivery – 配送 StockLevel – 库存缺货状态分析  在测试开始前，TPC-C Benchmark 规定了数据库的初始状态，也就是数据库中数据生成的规则，其中 ITEM 表中固定包含 10 万种商品，仓库的数量可进行调整，假设 WAREHOUSE 表中有 W 条记录，那么：
 STOCK 表中应有 W * 10 万条记录（每个仓库对应 10 万种商品的库存数据） DISTRICT 表中应有 W * 10 条记录（每个仓库为 10 个地区提供服务） CUSTOMER 表中应有 W * 10 * 3000 条记录（每个地区有 3000 个客户） HISTORY 表中应有 W * 10 * 3000 条记录（每个客户一条交易历史） ORDER 表中应有 W * 10 * 3000 条记录（每个地区 3000 个订单），并且最后生成的 900 个订单被添加到 NEW-ORDER 表中，每个订单随机生成 5 ~ 15 条 ORDER-LINE 记录。  我们将以 1000 WAREHOUSE 为例进行测试。</description>
    </item>
    
    <item>
      <title>如何对 TiDB 进行 TPC-C 测试</title>
      <link>https://pingcap.com/docs-cn/v3.1/benchmark/how-to-run-tpcc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/benchmark/how-to-run-tpcc/</guid>
      <description>如何对 TiDB 进行 TPC-C 测试 本文介绍如何对 TiDB 进行 TPC-C 测试。
准备测试程序 TPC-C 是一个对 OLTP（联机交易处理）系统进行测试的规范，使用一个商品销售模型对 OLTP 系统进行测试，其中包含五类事务：
 NewOrder – 新订单的生成 Payment – 订单付款 OrderStatus – 最近订单查询 Delivery – 配送 StockLevel – 库存缺货状态分析  在测试开始前，TPC-C Benchmark 规定了数据库的初始状态，也就是数据库中数据生成的规则，其中 ITEM 表中固定包含 10 万种商品，仓库的数量可进行调整，假设 WAREHOUSE 表中有 W 条记录，那么：
 STOCK 表中应有 W * 10 万条记录（每个仓库对应 10 万种商品的库存数据） DISTRICT 表中应有 W * 10 条记录（每个仓库为 10 个地区提供服务） CUSTOMER 表中应有 W * 10 * 3000 条记录（每个地区有 3000 个客户） HISTORY 表中应有 W * 10 * 3000 条记录（每个客户一条交易历史） ORDER 表中应有 W * 10 * 3000 条记录（每个地区 3000 个订单），并且最后生成的 900 个订单被添加到 NEW-ORDER 表中，每个订单随机生成 5 ~ 15 条 ORDER-LINE 记录。  我们将以 1000 WAREHOUSE 为例进行测试。</description>
    </item>
    
    <item>
      <title>如何用 Sysbench 测试 TiDB</title>
      <link>https://pingcap.com/docs-cn/dev/benchmark/how-to-run-sysbench/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/benchmark/how-to-run-sysbench/</guid>
      <description>如何用 Sysbench 测试 TiDB 本次测试使用的是 TiDB 3.0 Beta 和 Sysbench 1.0.14。建议使用 Sysbench 1.0 或之后的更新版本，可在 Sysbench Release 1.0.14 页面下载。
测试环境   硬件要求
  参考 TiDB 部署文档部署 TiDB 集群。在 3 台服务器的条件下，建议每台机器部署 1 个 TiDB，1 个 PD，和 1 个 TiKV 实例。关于磁盘，以 32 张表、每张表 10M 行数据为例，建议 TiKV 的数据目录所在的磁盘空间大于 512 GB。 对于单个 TiDB 的并发连接数，建议控制在 500 以内，如需增加整个系统的并发压力，可以增加 TiDB 实例，具体增加的 TiDB 个数视测试压力而定。
  IDC 机器：
   类别 名称     OS Linux (CentOS 7.</description>
    </item>
    
    <item>
      <title>如何用 Sysbench 测试 TiDB</title>
      <link>https://pingcap.com/docs-cn/stable/benchmark/how-to-run-sysbench/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/benchmark/how-to-run-sysbench/</guid>
      <description>如何用 Sysbench 测试 TiDB 本次测试使用的是 TiDB 3.0 Beta 和 Sysbench 1.0.14。建议使用 Sysbench 1.0 或之后的更新版本，可在 Sysbench Release 1.0.14 页面下载。
测试环境   硬件要求
  参考 TiDB 部署文档部署 TiDB 集群。在 3 台服务器的条件下，建议每台机器部署 1 个 TiDB，1 个 PD，和 1 个 TiKV 实例。关于磁盘，以 32 张表、每张表 10M 行数据为例，建议 TiKV 的数据目录所在的磁盘空间大于 512 GB。 对于单个 TiDB 的并发连接数，建议控制在 500 以内，如需增加整个系统的并发压力，可以增加 TiDB 实例，具体增加的 TiDB 个数视测试压力而定。
  IDC 机器：
   类别 名称     OS Linux (CentOS 7.</description>
    </item>
    
    <item>
      <title>如何用 Sysbench 测试 TiDB</title>
      <link>https://pingcap.com/docs-cn/v2.1/benchmark/how-to-run-sysbench/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/benchmark/how-to-run-sysbench/</guid>
      <description>如何用 Sysbench 测试 TiDB 本次测试使用的是 TiDB 3.0 Beta 和 Sysbench 1.0.14。建议使用 Sysbench 1.0 或之后的更新版本，可在 Sysbench Release 1.0.14 页面下载。
测试环境   硬件要求
  参考 TiDB 部署文档部署 TiDB 集群。在 3 台服务器的条件下，建议每台机器部署 1 个 TiDB，1 个 PD，和 1 个 TiKV 实例。关于磁盘，以 32 张表、每张表 10M 行数据为例，建议 TiKV 的数据目录所在的磁盘空间大于 512 GB。 对于单个 TiDB 的并发连接数，建议控制在 500 以内，如需增加整个系统的并发压力，可以增加 TiDB 实例，具体增加的 TiDB 个数视测试压力而定。
  IDC 机器：
   类别 名称     OS Linux (CentOS 7.</description>
    </item>
    
    <item>
      <title>如何用 Sysbench 测试 TiDB</title>
      <link>https://pingcap.com/docs-cn/v3.1/benchmark/how-to-run-sysbench/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/benchmark/how-to-run-sysbench/</guid>
      <description>如何用 Sysbench 测试 TiDB 本次测试使用的是 TiDB 3.0 Beta 和 Sysbench 1.0.14。建议使用 Sysbench 1.0 或之后的更新版本，可在 Sysbench Release 1.0.14 页面下载。
测试环境   硬件要求
  参考 TiDB 部署文档部署 TiDB 集群。在 3 台服务器的条件下，建议每台机器部署 1 个 TiDB，1 个 PD，和 1 个 TiKV 实例。关于磁盘，以 32 张表、每张表 10M 行数据为例，建议 TiKV 的数据目录所在的磁盘空间大于 512 GB。 对于单个 TiDB 的并发连接数，建议控制在 500 以内，如需增加整个系统的并发压力，可以增加 TiDB 实例，具体增加的 TiDB 个数视测试压力而定。
  IDC 机器：
   类别 名称     OS Linux (CentOS 7.</description>
    </item>
    
    <item>
      <title>字符串函数</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/string-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/string-functions/</guid>
      <description>字符串函数 TiDB 支持使用 MySQL 5.7 中提供的大部分字符串函数。
支持的函数    函数名 功能描述     ASCII() 返回最左字符的数值   BIN() 返回一个数的二进制值的字符串表示   BIT_LENGTH() 返回字符串的位长度   CHAR()  返回由整数的代码值所给出的字符组成的字符串   CHAR_LENGTH() 返回字符串的字符长度   CHARACTER_LENGTH() 与 CHAR_LENGTH() 功能相同   CONCAT() 返回连接的字符串   CONCAT_WS() 返回由分隔符连接的字符串   ELT() 返回指定位置的字符串   EXPORT_SET() 返回一个字符串，其中值位中设置的每个位，可以得到一个 on 字符串，而每个未设置的位，可以得到一个 off 字符串   FIELD() 返回参数在后续参数中出现的第一个位置   FIND_IN_SET() 返回第一个参数在第二个参数中出现的位置   FORMAT() 返回指定小数位数格式的数字   FROM_BASE64() 解码 base-64 表示的字符串，并返回结果   HEX() 返回一个十进制数或字符串值的 16 进制表示   INSERT() 在指定位置插入一个子字符串，最多不超过指定字符数   INSTR() 返回第一次出现的子字符串的索引   LCASE() 与 LOWER() 功能相同   LEFT() 返回最左侧指定长度的字符   LENGTH() 返回字符串长度，单位为字节   LIKE 进行简单模式匹配   LOCATE() 返回第一次出现的子字符串的位置   LOWER() 返回全小写的参数   LPAD() 返回字符串参数，左侧添加指定字符串   LTRIM() 去掉前缀空格   MAKE_SET() 返回一组用逗号分隔的字符串，这些字符串的位数与给定的 bits 参数对应   MID() 返回一个以指定位置开始的子字符串   NOT LIKE 否定简单模式匹配   NOT REGEXP REGEXP 的否定形式   OCT() 返回一个数值的八进制表示，形式为字符串   OCTET_LENGTH() 与 LENGTH() 功能相同   ORD() 返回该参数最左侧字符的字符编码   POSITION() 与 LOCATE() 功能相同   QUOTE() 使参数逃逸，为了在 SQL 语句中使用   REGEXP 使用正则表达式匹配模式   REPEAT() 以指定次数重复一个字符串   REPLACE() 替换所有出现的指定字符串   REVERSE() 反转字符串里的所有字符   RIGHT() 返回指定数量的最右侧的字符   RLIKE 与 REGEXP 功能相同   RPAD() 以指定次数添加字符串   RTRIM() 去掉后缀空格   SPACE() 返回指定数量的空格，形式为字符串   STRCMP() 比较两个字符串   SUBSTR() 返回指定的子字符串   SUBSTRING() 返回指定的子字符串   SUBSTRING_INDEX() 从一个字符串中返回指定出现次数的定界符之前的子字符串   TO_BASE64() 返回转化为 base-64 表示的字符串参数   TRIM() 去掉前缀和后缀空格   UCASE() 与 UPPER() 功能相同   UNHEX() 返回一个数的十六进制表示，形式为字符串   UPPER() 参数转换为大写形式    不支持的函数  LOAD_FILE() MATCH SOUNDEX() SOUNDS LIKE WEIGHT_STRING()  </description>
    </item>
    
    <item>
      <title>字符串函数</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/string-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/string-functions/</guid>
      <description>字符串函数 TiDB 支持使用 MySQL 5.7 中提供的大部分字符串函数。
支持的函数    函数名 功能描述     ASCII() 返回最左字符的数值   BIN() 返回一个数的二进制值的字符串表示   BIT_LENGTH() 返回字符串的位长度   CHAR()  返回由整数的代码值所给出的字符组成的字符串   CHAR_LENGTH() 返回字符串的字符长度   CHARACTER_LENGTH() 与 CHAR_LENGTH() 功能相同   CONCAT() 返回连接的字符串   CONCAT_WS() 返回由分隔符连接的字符串   ELT() 返回指定位置的字符串   EXPORT_SET() 返回一个字符串，其中值位中设置的每个位，可以得到一个 on 字符串，而每个未设置的位，可以得到一个 off 字符串   FIELD() 返回参数在后续参数中出现的第一个位置   FIND_IN_SET() 返回第一个参数在第二个参数中出现的位置   FORMAT() 返回指定小数位数格式的数字   FROM_BASE64() 解码 base-64 表示的字符串，并返回结果   HEX() 返回一个十进制数或字符串值的 16 进制表示   INSERT() 在指定位置插入一个子字符串，最多不超过指定字符数   INSTR() 返回第一次出现的子字符串的索引   LCASE() 与 LOWER() 功能相同   LEFT() 返回最左侧指定长度的字符   LENGTH() 返回字符串长度，单位为字节   LIKE 进行简单模式匹配   LOCATE() 返回第一次出现的子字符串的位置   LOWER() 返回全小写的参数   LPAD() 返回字符串参数，左侧添加指定字符串   LTRIM() 去掉前缀空格   MAKE_SET() 返回一组用逗号分隔的字符串，这些字符串的位数与给定的 bits 参数对应   MID() 返回一个以指定位置开始的子字符串   NOT LIKE 否定简单模式匹配   NOT REGEXP REGEXP 的否定形式   OCT() 返回一个数值的八进制表示，形式为字符串   OCTET_LENGTH() 与 LENGTH() 功能相同   ORD() 返回该参数最左侧字符的字符编码   POSITION() 与 LOCATE() 功能相同   QUOTE() 使参数逃逸，为了在 SQL 语句中使用   REGEXP 使用正则表达式匹配模式   REPEAT() 以指定次数重复一个字符串   REPLACE() 替换所有出现的指定字符串   REVERSE() 反转字符串里的所有字符   RIGHT() 返回指定数量的最右侧的字符   RLIKE 与 REGEXP 功能相同   RPAD() 以指定次数添加字符串   RTRIM() 去掉后缀空格   SPACE() 返回指定数量的空格，形式为字符串   STRCMP() 比较两个字符串   SUBSTR() 返回指定的子字符串   SUBSTRING() 返回指定的子字符串   SUBSTRING_INDEX() 从一个字符串中返回指定出现次数的定界符之前的子字符串   TO_BASE64() 返回转化为 base-64 表示的字符串参数   TRIM() 去掉前缀和后缀空格   UCASE() 与 UPPER() 功能相同   UNHEX() 返回一个数的十六进制表示，形式为字符串   UPPER() 参数转换为大写形式    不支持的函数  LOAD_FILE() MATCH SOUNDEX() SOUNDS LIKE WEIGHT_STRING()  </description>
    </item>
    
    <item>
      <title>字符串函数</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/string-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/string-functions/</guid>
      <description>字符串函数    函数名 功能描述     ASCII() 返回最左字符的数值   CHAR()  返回由整数的代码值所给出的字符组成的字符串    BIN() 返回一个数的二进制值的字符串表示   HEX() 返回十进制值或字符串值的十六进制表示   OCT() 返回一个数的八进制值的字符串表示   UNHEX() 返回 HEX 表示的数字所代表的字符串   TO_BASE64() 返回转换为 BASE64 的字符串参数   FROM_BASE64() 解码为 BASE64 的字符串并返回结果   LOWER() 返回小写字母的字符   LCASE() 与 LOWER() 功能相同   UPPER() 返回大写字母的字符   UCASE() 与 UPPER() 功能相同   LPAD()  返回左边由指定字符串填充的字符串参数    RPAD()  返回右边由指定字符串填充的字符串参数    TRIM() 删除字符串的前缀和后缀   LTRIM()  删除前面的空格字符    RTRIM() 删除结尾的空格字符   BIT_LENGTH()  返回字符串的位长度    CHAR_LENGTH()  返回字符串的字符长度    CHARACTER_LENGTH() 与 CHAR_LENGTH() 功能相同   LENGTH()  返回字符串的字节长度    OCTET_LENGTH() 与 LENGTH() 功能相同   INSERT() 在指定位置插入一个子字符串，直到指定的字符数   REPLACE() 替换指定的字符串   SUBSTR() 返回指定的子字符串   SUBSTRING() 返回指定的子字符串   SUBSTRING_INDEX() 返回最终定界符左边或右边的子字符串   MID() 返回从指定位置开始的子字符串   LEFT() 返回指定的最左字符   RIGHT() 返回指定的最右字符   INSTR() 返回子字符串的第一个出现位置   LOCATE() 返回子字符串的第一个出现位置，与 INSTR() 的参数位置相反   POSITION() 与 LOCATE() 功能相同   REPEAT() 返回重复指定次数的字符串   CONCAT() 返回连接的字符串   CONCAT_WS() 返回由分隔符连接的字符串   REVERSE() 返回和字符顺序相反的字符串   SPACE() 返回指定数目的空格组成的字符串   FIELD() 返回参数在后续参数中出现的第一个位置   ELT() 返回指定位置的字符串   EXPORT_SET()  返回一个字符串，其中值位中设置的每个位，可以得到一个 on 字符串，而每个未设置的位，可以得到一个 off 字符串    MAKE_SET()  返回一组逗号分隔的字符串，由位集合中具有相应位的字符串组成    FIND_IN_SET() 返回第一个参数在第二个参数中出现的位置   FORMAT() 返回指定小数位数格式的数字   ORD() 返回参数中最左字符的字符代码   QUOTE()  引用一个字符串，返回一个在 SQL 语句中可用作正确转义的数据值的结果     字符串比较函数    函数名 功能描述     LIKE 进行简单模式匹配   NOT LIKE 否定简单模式匹配   STRCMP() 比较两个字符串    正则表达式    表达式名 功能描述     REGEXP 使用正则表达式进行模式匹配   RLIKE 与 REGEXP 功能相同   NOT REGEXP 否定 REGEXP    </description>
    </item>
    
    <item>
      <title>字符串函数</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/string-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/string-functions/</guid>
      <description>字符串函数 TiDB 支持使用 MySQL 5.7 中提供的大部分字符串函数。
支持的函数    函数名 功能描述     ASCII() 返回最左字符的数值   BIN() 返回一个数的二进制值的字符串表示   BIT_LENGTH() 返回字符串的位长度   CHAR()  返回由整数的代码值所给出的字符组成的字符串   CHAR_LENGTH() 返回字符串的字符长度   CHARACTER_LENGTH() 与 CHAR_LENGTH() 功能相同   CONCAT() 返回连接的字符串   CONCAT_WS() 返回由分隔符连接的字符串   ELT() 返回指定位置的字符串   EXPORT_SET() 返回一个字符串，其中值位中设置的每个位，可以得到一个 on 字符串，而每个未设置的位，可以得到一个 off 字符串   FIELD() 返回参数在后续参数中出现的第一个位置   FIND_IN_SET() 返回第一个参数在第二个参数中出现的位置   FORMAT() 返回指定小数位数格式的数字   FROM_BASE64() 解码 base-64 表示的字符串，并返回结果   HEX() 返回一个十进制数或字符串值的 16 进制表示   INSERT() 在指定位置插入一个子字符串，最多不超过指定字符数   INSTR() 返回第一次出现的子字符串的索引   LCASE() 与 LOWER() 功能相同   LEFT() 返回最左侧指定长度的字符   LENGTH() 返回字符串长度，单位为字节   LIKE 进行简单模式匹配   LOCATE() 返回第一次出现的子字符串的位置   LOWER() 返回全小写的参数   LPAD() 返回字符串参数，左侧添加指定字符串   LTRIM() 去掉前缀空格   MAKE_SET() 返回一组用逗号分隔的字符串，这些字符串的位数与给定的 bits 参数对应   MID() 返回一个以指定位置开始的子字符串   NOT LIKE 否定简单模式匹配   NOT REGEXP REGEXP 的否定形式   OCT() 返回一个数值的八进制表示，形式为字符串   OCTET_LENGTH() 与 LENGTH() 功能相同   ORD() 返回该参数最左侧字符的字符编码   POSITION() 与 LOCATE() 功能相同   QUOTE() 使参数逃逸，为了在 SQL 语句中使用   REGEXP 使用正则表达式匹配模式   REPEAT() 以指定次数重复一个字符串   REPLACE() 替换所有出现的指定字符串   REVERSE() 反转字符串里的所有字符   RIGHT() 返回指定数量的最右侧的字符   RLIKE 与 REGEXP 功能相同   RPAD() 以指定次数添加字符串   RTRIM() 去掉后缀空格   SPACE() 返回指定数量的空格，形式为字符串   STRCMP() 比较两个字符串   SUBSTR() 返回指定的子字符串   SUBSTRING() 返回指定的子字符串   SUBSTRING_INDEX() 从一个字符串中返回指定出现次数的定界符之前的子字符串   TO_BASE64() 返回转化为 base-64 表示的字符串参数   TRIM() 去掉前缀和后缀空格   UCASE() 与 UPPER() 功能相同   UNHEX() 返回一个数的十六进制表示，形式为字符串   UPPER() 参数转换为大写形式    不支持的函数  LOAD_FILE() MATCH SOUNDEX() SOUNDS LIKE WEIGHT_STRING()  </description>
    </item>
    
    <item>
      <title>字符串类型</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/data-types/string/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/data-types/string/</guid>
      <description>字符串类型 TiDB 支持 MySQL 所有的字符串类型，包括 CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM 以及 SET，完整信息参考这篇文档。
类型定义 CHAR 类型 定长字符串。CHAR 列的长度固定为创建表时声明的长度。长度可以为从 0 到 255 的任何值。当保存 CHAR 值时，在它们的右边填充空格以达到指定的长度。
 [NATIONAL] CHAR[(M)] [CHARACTER SET charset_name] [COLLATE collation_name] VARCHAR 类型 变长字符串。M 表示最大列长度，范围是 0 到 65535。VARCHAR 的最大实际长度由最长的行的大小和使用的字符集确定。
 [NATIONAL] VARCHAR(M) [CHARACTER SET charset_name] [COLLATE collation_name] TEXT 类型 文本串。M 表示最大列长度，范围是 0 到 65535。TEXT 的最大实际长度由最长的行的大小和使用的字符集确定。
 TEXT[(M)] [CHARACTER SET charset_name] [COLLATE collation_name] TINYTEXT 类型 类似于 TEXT，区别在于最大列长度为 255。
 TINYTEXT [CHARACTER SET charset_name] [COLLATE collation_name] MEDIUMTEXT 类型 类似于 TEXT，区别在于最大列长度为 16,777,215。</description>
    </item>
    
    <item>
      <title>字符串类型</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/data-types/string/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/data-types/string/</guid>
      <description>字符串类型 TiDB 支持 MySQL 所有的字符串类型，包括 CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM 以及 SET，完整信息参考这篇文档。
类型定义 CHAR 类型 定长字符串。CHAR 列的长度固定为创建表时声明的长度。长度可以为从 0 到 255 的任何值。当保存 CHAR 值时，在它们的右边填充空格以达到指定的长度。
 [NATIONAL] CHAR[(M)] [CHARACTER SET charset_name] [COLLATE collation_name] VARCHAR 类型 变长字符串。M 表示最大列长度，范围是 0 到 65535。VARCHAR 的最大实际长度由最长的行的大小和使用的字符集确定。
 [NATIONAL] VARCHAR(M) [CHARACTER SET charset_name] [COLLATE collation_name] TEXT 类型 文本串。M 表示最大列长度，范围是 0 到 65535。TEXT 的最大实际长度由最长的行的大小和使用的字符集确定。
 TEXT[(M)] [CHARACTER SET charset_name] [COLLATE collation_name] TINYTEXT 类型 类似于 TEXT，区别在于最大列长度为 255。
 TINYTEXT [CHARACTER SET charset_name] [COLLATE collation_name] MEDIUMTEXT 类型 类似于 TEXT，区别在于最大列长度为 16,777,215。</description>
    </item>
    
    <item>
      <title>字符串类型</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/data-types/string/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/data-types/string/</guid>
      <description>字符串类型 TiDB 支持 MySQL 所有的字符串类型，包括 CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM 以及 SET，完整信息参考这篇文档。
类型定义 CHAR 类型 定长字符串。CHAR 列的长度固定为创建表时声明的长度。长度可以为从 0 到 255 的任何值。当保存 CHAR 值时，在它们的右边填充空格以达到指定的长度。
 [NATIONAL] CHAR[(M)] [CHARACTER SET charset_name] [COLLATE collation_name] VARCHAR 类型 变长字符串。M 表示最大列长度，范围是 0 到 65535。VARCHAR 的最大实际长度由最长的行的大小和使用的字符集确定。
 [NATIONAL] VARCHAR(M) [CHARACTER SET charset_name] [COLLATE collation_name] TEXT 类型 文本串。M 表示最大列长度，范围是 0 到 65535。TEXT 的最大实际长度由最长的行的大小和使用的字符集确定。
 TEXT[(M)] [CHARACTER SET charset_name] [COLLATE collation_name] TINYTEXT 类型 类似于 TEXT，区别在于最大列长度为 255。
 TINYTEXT [CHARACTER SET charset_name] [COLLATE collation_name] MEDIUMTEXT 类型 类似于 TEXT，区别在于最大列长度为 16,777,215。</description>
    </item>
    
    <item>
      <title>字符串类型</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/data-types/string/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/data-types/string/</guid>
      <description>字符串类型 TiDB 支持 MySQL 所有的字符串类型，包括 CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM 以及 SET，完整信息参考这篇文档。
类型定义 CHAR 类型 定长字符串。CHAR 列的长度固定为创建表时声明的长度。长度可以为从 0 到 255 的任何值。当保存 CHAR 值时，在它们的右边填充空格以达到指定的长度。
 [NATIONAL] CHAR[(M)] [CHARACTER SET charset_name] [COLLATE collation_name] VARCHAR 类型 变长字符串。M 表示最大列长度，范围是 0 到 65535。VARCHAR 的最大实际长度由最长的行的大小和使用的字符集确定。
 [NATIONAL] VARCHAR(M) [CHARACTER SET charset_name] [COLLATE collation_name] TEXT 类型 文本串。M 表示最大列长度，范围是 0 到 65535。TEXT 的最大实际长度由最长的行的大小和使用的字符集确定。
 TEXT[(M)] [CHARACTER SET charset_name] [COLLATE collation_name] TINYTEXT 类型 类似于 TEXT，区别在于最大列长度为 255。
 TINYTEXT [CHARACTER SET charset_name] [COLLATE collation_name] MEDIUMTEXT 类型 类似于 TEXT，区别在于最大列长度为 16,777,215。</description>
    </item>
    
    <item>
      <title>字符集支持</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/character-set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/character-set/</guid>
      <description>字符集支持 名词解释，下面的阐述中会交错使用中文或者英文，请互相对照：
 Character Set：字符集 Collation：排序规则  目前 TiDB 支持以下字符集：
 SHOW CHARACTER SET; +---------|---------------|-------------------|--------+ | Charset | Description | Default collation | Maxlen | +---------|---------------|-------------------|--------+ | utf8 | UTF-8 Unicode | utf8_bin | 3 | | utf8mb4 | UTF-8 Unicode | utf8mb4_bin | 4 | | ascii | US ASCII | ascii_bin | 1 | | latin1 | Latin1 | latin1_bin | 1 | | binary | binary | binary | 1 | +---------|---------------|-------------------|--------+ 5 rows in set (0.</description>
    </item>
    
    <item>
      <title>字符集支持</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/character-set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/character-set/</guid>
      <description>字符集支持 名词解释，下面的阐述中会交错使用中文或者英文，请互相对照：
 Character Set：字符集 Collation：排序规则  目前 TiDB 支持以下字符集：
 SHOW CHARACTER SET; +---------|---------------|-------------------|--------+ | Charset | Description | Default collation | Maxlen | +---------|---------------|-------------------|--------+ | utf8 | UTF-8 Unicode | utf8_bin | 3 | | utf8mb4 | UTF-8 Unicode | utf8mb4_bin | 4 | | ascii | US ASCII | ascii_bin | 1 | | latin1 | Latin1 | latin1_bin | 1 | | binary | binary | binary | 1 | +---------|---------------|-------------------|--------+ 5 rows in set (0.</description>
    </item>
    
    <item>
      <title>字符集支持</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/character-set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/character-set/</guid>
      <description>字符集支持 名词解释，下面的阐述中会交错使用中文或者英文，请互相对照：
 Character Set：字符集 Collation：排序规则  目前 TiDB 支持以下字符集：
mysql&amp;gt; SHOW CHARACTER SET; +---------|---------------|-------------------|--------+ | Charset | Description | Default collation | Maxlen | +---------|---------------|-------------------|--------+ | utf8 | UTF-8 Unicode | utf8_bin | 3 | | utf8mb4 | UTF-8 Unicode | utf8mb4_bin | 4 | | ascii | US ASCII | ascii_bin | 1 | | latin1 | Latin1 | latin1_bin | 1 | | binary | binary | binary | 1 | +---------|---------------|-------------------|--------+ 5 rows in set (0.</description>
    </item>
    
    <item>
      <title>字符集支持</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/character-set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/character-set/</guid>
      <description>字符集支持 名词解释，下面的阐述中会交错使用中文或者英文，请互相对照：
 Character Set：字符集 Collation：排序规则  目前 TiDB 支持以下字符集：
 SHOW CHARACTER SET; +---------|---------------|-------------------|--------+ | Charset | Description | Default collation | Maxlen | +---------|---------------|-------------------|--------+ | utf8 | UTF-8 Unicode | utf8_bin | 3 | | utf8mb4 | UTF-8 Unicode | utf8mb4_bin | 4 | | ascii | US ASCII | ascii_bin | 1 | | latin1 | Latin1 | latin1_bin | 1 | | binary | binary | binary | 1 | +---------|---------------|-------------------|--------+ 5 rows in set (0.</description>
    </item>
    
    <item>
      <title>字面值</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/language-structure/literal-values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/language-structure/literal-values/</guid>
      <description>字面值 String Literals String Literals 是一个 bytes 或者 characters 的序列，两端被单引号 &#39; 或者双引号 &amp;quot; 包围，例如：
&amp;#39;example string&amp;#39; &amp;#34;example string&amp;#34; 如果字符串是连续的，会被合并为一个独立的 string。以下表示是一样的：
&amp;#39;a string&amp;#39; &amp;#39;a&amp;#39; &amp;#39; &amp;#39; &amp;#39;string&amp;#39; &amp;#34;a&amp;#34; &amp;#39; &amp;#39; &amp;#34;string&amp;#34; 如果 ANSI_QUOTES SQL MODE 开启了，那么只有单引号内的会被认为是 String Literals，对于双引号内的字符串，会被认为是一个 identifier。
binary string 是一串 bytes 组成的字符串，每一个 binary string 有一个叫做 binary 的 character set 和 collation。一个非二进制的字符串是一个由字符组成的字符串，它有除 binary 外的 character set和与之兼容的 collation。
对于两种字符串类型，比较都是基于每个字符的数值。对于 binary string 而言，比较单元就是字节，对于非二进制的字符串，那么单元就是字符，而有的字符集支持多字节字符。
一个 String Literal 可以拥有一个可选的 character set introducer 和 COLLATE clause，可以用来指派特定的字符集跟 collation（TiDB 对此只是做了语法上的兼容，并不实质做处理)。</description>
    </item>
    
    <item>
      <title>字面值</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/language-structure/literal-values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/language-structure/literal-values/</guid>
      <description>字面值 String Literals String Literals 是一个 bytes 或者 characters 的序列，两端被单引号 &#39; 或者双引号 &amp;quot; 包围，例如：
&amp;#39;example string&amp;#39; &amp;#34;example string&amp;#34; 如果字符串是连续的，会被合并为一个独立的 string。以下表示是一样的：
&amp;#39;a string&amp;#39; &amp;#39;a&amp;#39; &amp;#39; &amp;#39; &amp;#39;string&amp;#39; &amp;#34;a&amp;#34; &amp;#39; &amp;#39; &amp;#34;string&amp;#34; 如果 ANSI_QUOTES SQL MODE 开启了，那么只有单引号内的会被认为是 String Literals，对于双引号内的字符串，会被认为是一个 identifier。
binary string 是一串 bytes 组成的字符串，每一个 binary string 有一个叫做 binary 的 character set 和 collation。一个非二进制的字符串是一个由字符组成的字符串，它有除 binary 外的 character set和与之兼容的 collation。
对于两种字符串类型，比较都是基于每个字符的数值。对于 binary string 而言，比较单元就是字节，对于非二进制的字符串，那么单元就是字符，而有的字符集支持多字节字符。
一个 String Literal 可以拥有一个可选的 character set introducer 和 COLLATE clause，可以用来指派特定的字符集跟 collation（TiDB 对此只是做了语法上的兼容，并不实质做处理)。</description>
    </item>
    
    <item>
      <title>字面值</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/language-structure/literal-values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/language-structure/literal-values/</guid>
      <description>字面值 String Literals String Literals 是一个 bytes 或者 characters 的序列，两端被单引号 &#39; 或者双引号 &amp;quot; 包围，例如：
&amp;#39;example string&amp;#39; &amp;#34;example string&amp;#34; 如果字符串是连续的，会被合并为一个独立的 string。以下表示是一样的：
&amp;#39;a string&amp;#39; &amp;#39;a&amp;#39; &amp;#39; &amp;#39; &amp;#39;string&amp;#39; &amp;#34;a&amp;#34; &amp;#39; &amp;#39; &amp;#34;string&amp;#34; 如果 ANSI_QUOTES SQL MODE 开启了，那么只有单引号内的会被认为是 String Literals，对于双引号内的字符串，会被认为是一个 identifier。
binary string 是一串 bytes 组成的字符串，每一个 binary string 有一个叫做 binary 的 character set 和 collation。一个非二进制的字符串是一个由字符组成的字符串，它有除 binary 外的 character set和与之兼容的 collation。
对于两种字符串类型，比较都是基于每个字符的数值。对于 binary string 而言，比较单元就是字节，对于非二进制的字符串，那么单元就是字符，而有的字符集支持多字节字符。
一个 String Literal 可以拥有一个可选的 character set introducer 和 COLLATE clause，可以用来指派特定的字符集跟 collation（TiDB 对此只是做了语法上的兼容，并不实质做处理)。</description>
    </item>
    
    <item>
      <title>字面值</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/language-structure/literal-values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/language-structure/literal-values/</guid>
      <description>字面值 String Literals String Literals 是一个 bytes 或者 characters 的序列，两端被单引号 &#39; 或者双引号 &amp;quot; 包围，例如：
&amp;#39;example string&amp;#39; &amp;#34;example string&amp;#34; 如果字符串是连续的，会被合并为一个独立的 string。以下表示是一样的：
&amp;#39;a string&amp;#39; &amp;#39;a&amp;#39; &amp;#39; &amp;#39; &amp;#39;string&amp;#39; &amp;#34;a&amp;#34; &amp;#39; &amp;#39; &amp;#34;string&amp;#34; 如果 ANSI_QUOTES SQL MODE 开启了，那么只有单引号内的会被认为是 String Literals，对于双引号内的字符串，会被认为是一个 identifier。
binary string 是一串 bytes 组成的字符串，每一个 binary string 有一个叫做 binary 的 character set 和 collation。一个非二进制的字符串是一个由字符组成的字符串，它有除 binary 外的 character set和与之兼容的 collation。
对于两种字符串类型，比较都是基于每个字符的数值。对于 binary string 而言，比较单元就是字节，对于非二进制的字符串，那么单元就是字符，而有的字符集支持多字节字符。
一个 String Literal 可以拥有一个可选的 character set introducer 和 COLLATE clause，可以用来指派特定的字符集跟 collation（TiDB 对此只是做了语法上的兼容，并不实质做处理)。</description>
    </item>
    
    <item>
      <title>定位消耗系统资源多的查询</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/maintain/identify-abnormal-queries/identify-expensive-queries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/maintain/identify-abnormal-queries/identify-expensive-queries/</guid>
      <description>定位消耗系统资源多的查询 TiDB 会将执行时间超过 tidb_expensive_query_time_threshold 限制（默认值为 60s），或使用内存超过 mem-quota-query 限制（默认值为 1 GB）的语句输出到 tidb-server 日志文件（默认文件为 “tidb.log”）中，用于在语句执行结束前定位消耗系统资源多的查询语句（以下简称为 expensive query），帮助用户分析和解决语句执行的性能问题。
注意，expensive query 日志和慢查询日志的区别是，慢查询日志是在语句执行完后才打印，expensive query 日志可以将正在执行的语句的相关信息打印出来。当一条语句在执行过程中达到资源使用阈值时（执行时间/使用内存量），TiDB 会即时将这条语句的相关信息写入日志。
Expensive query 日志示例 [2020/02/05 15:32:25.096 +08:00] [WARN] [expensivequery.go:167] [expensive_query] [cost_time=60.008338935s] [wait_time=0s] [request_count=1] [total_keys=70] [process_keys=65] [num_cop_tasks=1] [process_avg_time=0s] [process_p90_time=0s] [process_max_time=0s] [process_max_addr=10.0.1.9:20160] [wait_avg_time=0.002s] [wait_p90_time=0.002s] [wait_max_time=0.002s] [wait_max_addr=10.0.1.9:20160] [stats=t:pseudo] [conn_id=60026] [user=root] [database=test] [table_ids=&amp;#34;[122]&amp;#34;] [txn_start_ts=414420273735139329] [mem_max=&amp;#34;1035 Bytes (1.0107421875 KB)&amp;#34;] [sql=&amp;#34;insert into t select sleep(1) from t&amp;#34;] 字段含义说明 基本字段：
 cost_time：日志打印时语句已经花费的执行时间。 stats：语句涉及到的表或索引使用的统计信息版本。值为 pesudo 时表示无可用统计信息，需要对表或索引进行 analyze。 table_ids：语句涉及到的表的 ID。 txn_start_ts：事务的开始时间戳，也是事务的唯一 ID，可以用这个值在 TiDB 日志中查找事务相关的其他日志。 sql：SQL 语句。  和内存使用相关的字段：</description>
    </item>
    
    <item>
      <title>定位消耗系统资源多的查询</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/maintain/identify-abnormal-queries/identify-expensive-queries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/maintain/identify-abnormal-queries/identify-expensive-queries/</guid>
      <description>定位消耗系统资源多的查询 TiDB 会将执行时间超过 tidb_expensive_query_time_threshold（默认值为 60s），或使用内存超过 mem-quota-query（默认值为 32 GB）的语句输出到 tidb-server 日志文件（默认文件为：“tidb.log”）中，用于在语句执行结束前定位消耗系统资源多的查询语句（以下简称为 expensive query），帮助用户分析和解决语句执行的性能问题。
注意，expensive query 日志和慢查询日志的区别是，慢查询日志是在语句执行完后才打印，expensive query 日志可以将正在执行的语句的相关信息打印出来。当一条语句在执行过程中达到资源使用阈值时（执行时间/使用内存量），TiDB 会即时将这条语句的相关信息写入日志。
Expensive query 日志示例 [2020/02/05 15:32:25.096 +08:00] [WARN] [expensivequery.go:167] [expensive_query] [cost_time=60.008338935s] [wait_time=0s] [request_count=1] [total_keys=70] [process_keys=65] [num_cop_tasks=1] [process_avg_time=0s] [process_p90_time=0s] [process_max_time=0s] [process_max_addr=10.0.1.9:20160] [wait_avg_time=0.002s] [wait_p90_time=0.002s] [wait_max_time=0.002s] [wait_max_addr=10.0.1.9:20160] [stats=t:pseudo] [conn_id=60026] [user=root] [database=test] [table_ids=&amp;#34;[122]&amp;#34;] [txn_start_ts=414420273735139329] [mem_max=&amp;#34;1035 Bytes (1.0107421875 KB)&amp;#34;] [sql=&amp;#34;insert into t select sleep(1) from t&amp;#34;] 字段含义说明 基本字段：
 cost_time：日志打印时语句已经花费的执行时间。 stats：语句涉及到的表或索引使用的统计信息版本。值为 pesudo 时表示无可用统计信息，需要对表或索引进行 analyze。 table_ids：语句涉及到的表的 ID。 txn_start_ts：事务的开始时间戳，也是事务的唯一 ID，可以用这个值在 TiDB 日志中查找事务相关的其他日志。 sql：SQL 语句。  和内存使用相关的字段：</description>
    </item>
    
    <item>
      <title>定位消耗系统资源多的查询</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/maintain/identify-abnormal-queries/identify-expensive-queries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/maintain/identify-abnormal-queries/identify-expensive-queries/</guid>
      <description>定位消耗系统资源多的查询 TiDB 会将执行时间超过 tidb_expensive_query_time_threshold（默认值为 60s），或使用内存超过 mem-quota-query（默认值为 32 GB）的语句输出到 tidb-server 日志文件（默认文件为：“tidb.log”）中，用于在语句执行结束前定位消耗系统资源多的查询语句（以下简称为 expensive query），帮助用户分析和解决语句执行的性能问题。
注意，expensive query 日志和慢查询日志的区别是，慢查询日志是在语句执行完后才打印，expensive query 日志可以将正在执行的语句的相关信息打印出来。当一条语句在执行过程中达到资源使用阈值时（执行时间/使用内存量），TiDB 会即时将这条语句的相关信息写入日志。
Expensive query 日志示例 [2020/02/05 15:32:25.096 +08:00] [WARN] [expensivequery.go:167] [expensive_query] [cost_time=60.008338935s] [wait_time=0s] [request_count=1] [total_keys=70] [process_keys=65] [num_cop_tasks=1] [process_avg_time=0s] [process_p90_time=0s] [process_max_time=0s] [process_max_addr=10.0.1.9:20160] [wait_avg_time=0.002s] [wait_p90_time=0.002s] [wait_max_time=0.002s] [wait_max_addr=10.0.1.9:20160] [stats=t:pseudo] [conn_id=60026] [user=root] [database=test] [table_ids=&amp;#34;[122]&amp;#34;] [txn_start_ts=414420273735139329] [mem_max=&amp;#34;1035 Bytes (1.0107421875 KB)&amp;#34;] [sql=&amp;#34;insert into t select sleep(1) from t&amp;#34;] 字段含义说明 基本字段：
 cost_time：日志打印时语句已经花费的执行时间。 stats：语句涉及到的表或索引使用的统计信息版本。值为 pesudo 时表示无可用统计信息，需要对表或索引进行 analyze。 table_ids：语句涉及到的表的 ID。 txn_start_ts：事务的开始时间戳，也是事务的唯一 ID，可以用这个值在 TiDB 日志中查找事务相关的其他日志。 sql：SQL 语句。  和内存使用相关的字段：</description>
    </item>
    
    <item>
      <title>工程效率研发工程师</title>
      <link>https://pingcap.com/about-cn/recruit/engineering/engineering-efficiency-engineer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/engineering/engineering-efficiency-engineer/</guid>
      <description>工程效率研发工程师 岗位职责：
  构建自动化流程及工具，解决研发、测试与产品运维中遇到的各种效率问题；
  负责公司内部 DevOps 平台的开发和维护；
  负责 CI/CD 相关基础设施的调优及维护；
  负责 tidb-ansible 部署工具的功能开发及维护。
  任职要求：
  三年以上运维开发或内部工程效率工具开发相关领域经验；
  熟悉 Go/Python 一种编程语言，熟悉 Shell 和 Linux 常用操作；
  对容器编排系统有较深入的理解及相关开发或使用经验；
  对并发编程有较深入的理解；
  熟悉 Docker 原理及 Docker 的常规操作；
  具有探索精神，有强烈的责任感及合作精神，具备优秀的学习能力和创新能力。
  加分项：
  有分布式系统的测试相关经验；
  有云平台如 AWS/Azure 等的开发经验；
  熟悉 K8s/Docker 代码；
  有 tidb 及其生态工具的使用经验。</description>
    </item>
    
    <item>
      <title>平面视觉设计师</title>
      <link>https://pingcap.com/about-cn/recruit/product-design/graphic-designer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/product-design/graphic-designer/</guid>
      <description>平面视觉设计师 岗位职责：
  参与并支持线下物料的平面视觉设计，例如易拉宝、海报、Banner、宣传册、T恤、周边等；
  参与并支持线上产品的 UI 设计，如 Web 端和移动端的界面设计、以及 UI 相关的视觉优化和规范建立、对用户体验有一定把握和了解；
  支持其他各业务部门的设计需求以及沟通；
  参与日常的 design critique.
  任职要求：
  本科以上学历，多媒体艺术设计、工业设计等相关对口专业，有 2 年以上互联网行业视觉设计相关经验者优先；
  具备扎实的 UI 视觉设计基础知识，持续关注并了解前沿的设计趋势，有自己的设计作品集；
  熟练使用平面设计软件如 Illustrator、Xd、Photoshop、Sketch 等工具；
  良好的沟通和理解能力，思维开阔，有想法，有创意
  自学能力强，有良好的时间管理能力
  具备团队合作精神，耐心倾听他人意见，工作态度积极有责任心
  待遇：
10K - 30K，13薪 + 奖金，优秀者可面议
联系方式：
hire@pingcap.com
工作地点：
北京，上海</description>
    </item>
    
    <item>
      <title>开发 Java 应用使用 TiDB 的最佳实践</title>
      <link>https://pingcap.com/docs-cn/dev/reference/best-practices/java-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/best-practices/java-app/</guid>
      <description>开发 Java 应用使用 TiDB 的最佳实践 本文主要介绍如何开发 Java 应用程序以更好地使用 TiDB，包括开发中的常见问题与最佳实践。
Java 应用中的数据库相关组件 通常 Java 应用中和数据库相关的常用组件有：
 网络协议：客户端通过标准 MySQL 协议和 TiDB 进行网络交互。 JDBC API 及实现：Java 应用通常使用 JDBC (Java Database Connectivity) 来访问数据库。JDBC 定义了访问数据库 API，而 JDBC 实现完成标准 API 到 MySQL 协议的转换，常见的 JDBC 实现是 MySQL Connector/J，此外有些用户可能使用 MariaDB Connector/J。 数据库连接池：为了避免每次创建连接，通常应用会选择使用数据库连接池来复用连接，JDBC DataSource 定义了连接池 API，开发者可根据实际需求选择使用某种开源连接池实现。 数据访问框架：应用通常选择通过数据访问框架 (MyBatis, Hibernate) 的封装来进一步简化和管理数据库访问操作。 业务实现：业务逻辑控制着何时发送和发送什么指令到数据库，其中有些业务会使用 Spring Transaction 切面来控制管理事务的开始和提交逻辑。  如上图所示，应用可能使用 Spring Transaction 来管理控制事务非手工启停，通过类似 MyBatis 的数据访问框架管理生成和执行 SQL，通过连接池获取已池化的长连接，最后通过 JDBC 接口调用实现通过 MySQL 协议和 TiDB 完成交互。
接下来将分别介绍使用各个组件时可能需要关注的问题。</description>
    </item>
    
    <item>
      <title>开发 Java 应用使用 TiDB 的最佳实践</title>
      <link>https://pingcap.com/docs-cn/stable/reference/best-practices/java-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/best-practices/java-app/</guid>
      <description>开发 Java 应用使用 TiDB 的最佳实践 本文主要介绍如何开发 Java 应用程序以更好地使用 TiDB，包括开发中的常见问题与最佳实践。
Java 应用中的数据库相关组件 通常 Java 应用中和数据库相关的常用组件有：
 网络协议：客户端通过标准 MySQL 协议和 TiDB 进行网络交互。 JDBC API 及实现：Java 应用通常使用 JDBC (Java Database Connectivity) 来访问数据库。JDBC 定义了访问数据库 API，而 JDBC 实现完成标准 API 到 MySQL 协议的转换，常见的 JDBC 实现是 MySQL Connector/J，此外有些用户可能使用 MariaDB Connector/J。 数据库连接池：为了避免每次创建连接，通常应用会选择使用数据库连接池来复用连接，JDBC DataSource 定义了连接池 API，开发者可根据实际需求选择使用某种开源连接池实现。 数据访问框架：应用通常选择通过数据访问框架 (MyBatis, Hibernate) 的封装来进一步简化和管理数据库访问操作。 业务实现：业务逻辑控制着何时发送和发送什么指令到数据库，其中有些业务会使用 Spring Transaction 切面来控制管理事务的开始和提交逻辑。  如上图所示，应用可能使用 Spring Transaction 来管理控制事务非手工启停，通过类似 MyBatis 的数据访问框架管理生成和执行 SQL，通过连接池获取已池化的长连接，最后通过 JDBC 接口调用实现通过 MySQL 协议和 TiDB 完成交互。
接下来将分别介绍使用各个组件时可能需要关注的问题。</description>
    </item>
    
    <item>
      <title>开发 Java 应用使用 TiDB 的最佳实践</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/best-practices/java-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/best-practices/java-app/</guid>
      <description>开发 Java 应用使用 TiDB 的最佳实践 本文主要介绍如何开发 Java 应用程序以更好地使用 TiDB，包括开发中的常见问题与最佳实践。
Java 应用中的数据库相关组件 通常 Java 应用中和数据库相关的常用组件有：
 网络协议：客户端通过标准 MySQL 协议和 TiDB 进行网络交互。 JDBC API 及实现：Java 应用通常使用 JDBC (Java Database Connectivity) 来访问数据库。JDBC 定义了访问数据库 API，而 JDBC 实现完成标准 API 到 MySQL 协议的转换，常见的 JDBC 实现是 MySQL Connector/J，此外有些用户可能使用 MariaDB Connector/J。 数据库连接池：为了避免每次创建连接，通常应用会选择使用数据库连接池来复用连接，JDBC DataSource 定义了连接池 API，开发者可根据实际需求选择使用某种开源连接池实现。 数据访问框架：应用通常选择通过数据访问框架 (MyBatis, Hibernate) 的封装来进一步简化和管理数据库访问操作。 业务实现：业务逻辑控制着何时发送和发送什么指令到数据库，其中有些业务会使用 Spring Transaction 切面来控制管理事务的开始和提交逻辑。  如上图所示，应用可能使用 Spring Transaction 来管理控制事务非手工启停，通过类似 MyBatis 的数据访问框架管理生成和执行 SQL，通过连接池获取已池化的长连接，最后通过 JDBC 接口调用实现通过 MySQL 协议和 TiDB 完成交互。
接下来将分别介绍使用各个组件时可能需要关注的问题。</description>
    </item>
    
    <item>
      <title>开发 Java 应用使用 TiDB 的最佳实践</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/best-practices/java-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/best-practices/java-app/</guid>
      <description>开发 Java 应用使用 TiDB 的最佳实践 本文主要介绍如何开发 Java 应用程序以更好地使用 TiDB，包括开发中的常见问题与最佳实践。
Java 应用中的数据库相关组件 通常 Java 应用中和数据库相关的常用组件有：
 网络协议：客户端通过标准 MySQL 协议和 TiDB 进行网络交互。 JDBC API 及实现：Java 应用通常使用 JDBC (Java Database Connectivity) 来访问数据库。JDBC 定义了访问数据库 API，而 JDBC 实现完成标准 API 到 MySQL 协议的转换，常见的 JDBC 实现是 MySQL Connector/J，此外有些用户可能使用 MariaDB Connector/J。 数据库连接池：为了避免每次创建连接，通常应用会选择使用数据库连接池来复用连接，JDBC DataSource 定义了连接池 API，开发者可根据实际需求选择使用某种开源连接池实现。 数据访问框架：应用通常选择通过数据访问框架 (MyBatis, Hibernate) 的封装来进一步简化和管理数据库访问操作。 业务实现：业务逻辑控制着何时发送和发送什么指令到数据库，其中有些业务会使用 Spring Transaction 切面来控制管理事务的开始和提交逻辑。  如上图所示，应用可能使用 Spring Transaction 来管理控制事务非手工启停，通过类似 MyBatis 的数据访问框架管理生成和执行 SQL，通过连接池获取已池化的长连接，最后通过 JDBC 接口调用实现通过 MySQL 协议和 TiDB 完成交互。
接下来将分别介绍使用各个组件时可能需要关注的问题。</description>
    </item>
    
    <item>
      <title>恢复 GCS 上的备份数据</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/backup-and-restore/restore-gcs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/backup-and-restore/restore-gcs/</guid>
      <description>恢复 GCS 上的备份数据 本文描述了将 Kubernetes 上通过 TiDB Operator 备份的数据恢复到 TiDB 集群的操作过程。底层通过使用 loader 来进行集群恢复。
本文使用的恢复方式基于 TiDB Operator 新版（v1.1 及以上）的 CustomResourceDefinition (CRD) 实现。基于 Helm Charts 实现的备份和恢复方式可参考基于 Helm Charts 实现的 TiDB 集群备份与恢复。
以下示例将存储在 Google Cloud Storage (GCS) 上指定路径上的集群备份数据恢复到 TiDB 集群。
环境准备   下载文件 backup-rbac.yaml，并执行以下命令在 test2 这个 namespace 中创建恢复所需的 RBAC 相关资源：
 kubectl apply -f backup-rbac.yaml -n test2   创建 restore-demo2-tidb-secret secret，该 secret 存放用来访问 TiDB 集群的 root 账号和密钥：
 kubectl create secret generic restore-demo2-tidb-secret --from-literal=user=root --from-literal=password=&amp;lt;password&amp;gt; --namespace=test2   将指定备份数据恢复到 TiDB 集群   创建 restore custom resource (CR)，将指定的备份数据恢复至 TiDB 集群：</description>
    </item>
    
    <item>
      <title>恢复 GCS 上的备份数据</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/backup-and-restore/restore-gcs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/backup-and-restore/restore-gcs/</guid>
      <description>恢复 GCS 上的备份数据 本文描述了将 Kubernetes 上通过 TiDB Operator 备份的数据恢复到 TiDB 集群的操作过程。底层通过使用 loader 来进行集群恢复。
本文使用的恢复方式基于 TiDB Operator 新版（v1.1 及以上）的 CustomResourceDefinition (CRD) 实现。基于 Helm Charts 实现的备份和恢复方式可参考基于 Helm Charts 实现的 TiDB 集群备份与恢复。
以下示例将存储在 Google Cloud Storage (GCS) 上指定路径上的集群备份数据恢复到 TiDB 集群。
环境准备   下载文件 backup-rbac.yaml，并执行以下命令在 test2 这个 namespace 中创建恢复所需的 RBAC 相关资源：
 kubectl apply -f backup-rbac.yaml -n test2   创建 restore-demo2-tidb-secret secret，该 secret 存放用来访问 TiDB 集群的 root 账号和密钥：
 kubectl create secret generic restore-demo2-tidb-secret --from-literal=user=root --from-literal=password=&amp;lt;password&amp;gt; --namespace=test2   将指定备份数据恢复到 TiDB 集群   创建 restore custom resource (CR)，将指定的备份数据恢复至 TiDB 集群：</description>
    </item>
    
    <item>
      <title>恢复 GCS 上的备份数据</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/backup-and-restore/restore-gcs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/backup-and-restore/restore-gcs/</guid>
      <description>恢复 GCS 上的备份数据 本文描述了将 Kubernetes 上通过 TiDB Operator 备份的数据恢复到 TiDB 集群的操作过程。底层通过使用 loader 来进行集群恢复。
本文使用的恢复方式基于 TiDB Operator 新版（v1.1 及以上）的 CustomResourceDefinition (CRD) 实现。基于 Helm Charts 实现的备份和恢复方式可参考基于 Helm Charts 实现的 TiDB 集群备份与恢复。
以下示例将存储在 Google Cloud Storage (GCS) 上指定路径上的集群备份数据恢复到 TiDB 集群。
环境准备   下载文件 backup-rbac.yaml，并执行以下命令在 test2 这个 namespace 中创建恢复所需的 RBAC 相关资源：
 kubectl apply -f backup-rbac.yaml -n test2   创建 restore-demo2-tidb-secret secret，该 secret 存放用来访问 TiDB 集群的 root 账号和密钥：
 kubectl create secret generic restore-demo2-tidb-secret --from-literal=user=root --from-literal=password=&amp;lt;password&amp;gt; --namespace=test2   将指定备份数据恢复到 TiDB 集群   创建 restore custom resource (CR)，将指定的备份数据恢复至 TiDB 集群：</description>
    </item>
    
    <item>
      <title>恢复 Kubernetes 上的 TiDB 集群数据</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/backup-and-restore/lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/backup-and-restore/lightning/</guid>
      <description>使用 TiDB Lightning 快速恢复 Kubernetes 上的 TiDB 集群数据。</description>
    </item>
    
    <item>
      <title>恢复 Kubernetes 上的 TiDB 集群数据</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/backup-and-restore/lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/backup-and-restore/lightning/</guid>
      <description>使用 TiDB Lightning 快速恢复 Kubernetes 上的 TiDB 集群数据。</description>
    </item>
    
    <item>
      <title>恢复 Kubernetes 上的 TiDB 集群数据</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/backup-and-restore/lightning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/backup-and-restore/lightning/</guid>
      <description>使用 TiDB Lightning 快速恢复 Kubernetes 上的 TiDB 集群数据。</description>
    </item>
    
    <item>
      <title>恢复 S3 兼容存储上的备份数据</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/backup-and-restore/restore-s3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/backup-and-restore/restore-s3/</guid>
      <description>恢复 S3 兼容存储上的备份数据 本文描述了将 Kubernetes 上通过 TiDB Operator 备份的数据恢复到 TiDB 集群的操作过程。底层通过使用 loader 来恢复数据。
本文使用的恢复方式基于 TiDB Operator 新版（v1.1 及以上）的 CustomResourceDefinition (CRD) 实现。基于 Helm Charts 实现的备份和恢复方式可参考基于 Helm Charts 实现的 TiDB 集群备份恢复。
以下示例将兼容 S3 的存储（指定路径）上的备份数据恢复到 TiDB 集群。
环境准备   下载文件 backup-rbac.yaml，并在 test2 这个 namespace 中创建恢复所需的 RBAC 资源，所需命令如下：
 kubectl apply -f backup-rbac.yaml -n test2   创建 restore-demo2-tidb-secret secret，该 secret 存放用来访问 TiDB 集群的 root 账号和密钥：
 kubectl create secret generic restore-demo2-tidb-secret --from-literal=user=root --from-literal=password=&amp;lt;password&amp;gt; --namespace=test2   将指定备份数据恢复到 TiDB 集群   创建 restore custom resource (CR)，将指定的备份数据恢复至 TiDB 集群：</description>
    </item>
    
    <item>
      <title>恢复 S3 兼容存储上的备份数据</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/backup-and-restore/restore-s3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/backup-and-restore/restore-s3/</guid>
      <description>恢复 S3 兼容存储上的备份数据 本文描述了将 Kubernetes 上通过 TiDB Operator 备份的数据恢复到 TiDB 集群的操作过程。底层通过使用 loader 来恢复数据。
本文使用的恢复方式基于 TiDB Operator 新版（v1.1 及以上）的 CustomResourceDefinition (CRD) 实现。基于 Helm Charts 实现的备份和恢复方式可参考基于 Helm Charts 实现的 TiDB 集群备份恢复。
以下示例将兼容 S3 的存储（指定路径）上的备份数据恢复到 TiDB 集群。
环境准备   下载文件 backup-rbac.yaml，并在 test2 这个 namespace 中创建恢复所需的 RBAC 资源，所需命令如下：
 kubectl apply -f backup-rbac.yaml -n test2   创建 restore-demo2-tidb-secret secret，该 secret 存放用来访问 TiDB 集群的 root 账号和密钥：
 kubectl create secret generic restore-demo2-tidb-secret --from-literal=user=root --from-literal=password=&amp;lt;password&amp;gt; --namespace=test2   将指定备份数据恢复到 TiDB 集群   创建 restore custom resource (CR)，将指定的备份数据恢复至 TiDB 集群：</description>
    </item>
    
    <item>
      <title>恢复 S3 兼容存储上的备份数据</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/backup-and-restore/restore-s3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/backup-and-restore/restore-s3/</guid>
      <description>恢复 S3 兼容存储上的备份数据 本文描述了将 Kubernetes 上通过 TiDB Operator 备份的数据恢复到 TiDB 集群的操作过程。底层通过使用 loader 来恢复数据。
本文使用的恢复方式基于 TiDB Operator 新版（v1.1 及以上）的 CustomResourceDefinition (CRD) 实现。基于 Helm Charts 实现的备份和恢复方式可参考基于 Helm Charts 实现的 TiDB 集群备份恢复。
以下示例将兼容 S3 的存储（指定路径）上的备份数据恢复到 TiDB 集群。
环境准备   下载文件 backup-rbac.yaml，并在 test2 这个 namespace 中创建恢复所需的 RBAC 资源，所需命令如下：
 kubectl apply -f backup-rbac.yaml -n test2   创建 restore-demo2-tidb-secret secret，该 secret 存放用来访问 TiDB 集群的 root 账号和密钥：
 kubectl create secret generic restore-demo2-tidb-secret --from-literal=user=root --from-literal=password=&amp;lt;password&amp;gt; --namespace=test2   将指定备份数据恢复到 TiDB 集群   创建 restore custom resource (CR)，将指定的备份数据恢复至 TiDB 集群：</description>
    </item>
    
    <item>
      <title>慢查询日志</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/maintain/identify-abnormal-queries/identify-slow-queries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/maintain/identify-abnormal-queries/identify-slow-queries/</guid>
      <description>慢查询日志 TiDB 会将执行时间超过 slow-threshold（默认值为 300 毫秒）的语句输出到 slow-query-file（默认值：&amp;ldquo;tidb-slow.log&amp;rdquo;）日志文件中，用于帮助用户定位慢查询语句，分析和解决 SQL 执行的性能问题。
TiDB 默认启用慢查询日志，可以修改配置 enable-slow-log 来启用或禁用它。
日志示例 # Time: 2019-08-14T09:26:59.487776265+08:00 # Txn_start_ts: 410450924122144769 # User: root@127.0.0.1 # Conn_ID: 3086 # Query_time: 1.527627037 # Parse_time: 0.000054933 # Compile_time: 0.000129729 # Process_time: 0.07 Request_count: 1 Total_keys: 131073 Process_keys: 131072 Prewrite_time: 0.335415029 Commit_time: 0.032175429 Get_commit_ts_time: 0.000177098 Local_latch_wait_time: 0.106869448 Write_keys: 131072 Write_size: 3538944 Prewrite_region: 1 # DB: test # Is_internal: false # Digest: 50a2e32d2abbd6c1764b1b7f2058d428ef2712b029282b776beb9506a365c0f1 # Stats: t:pseudo # Num_cop_tasks: 1 # Cop_proc_avg: 0.</description>
    </item>
    
    <item>
      <title>慢查询日志</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/maintain/identify-abnormal-queries/identify-slow-queries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/maintain/identify-abnormal-queries/identify-slow-queries/</guid>
      <description>慢查询日志 TiDB 会将执行时间超过 slow-threshold（默认值为 300 毫秒）的语句输出到 slow-query-file（默认值：&amp;ldquo;tidb-slow.log&amp;rdquo;）日志文件中，用于帮助用户定位慢查询语句，分析和解决 SQL 执行的性能问题。
日志示例 # Time: 2019-08-14T09:26:59.487776265+08:00 # Txn_start_ts: 410450924122144769 # User: root@127.0.0.1 # Conn_ID: 3086 # Query_time: 1.527627037 # Parse_time: 0.000054933 # Compile_time: 0.000129729 # Process_time: 0.07 Request_count: 1 Total_keys: 131073 Process_keys: 131072 Prewrite_time: 0.335415029 Commit_time: 0.032175429 Get_commit_ts_time: 0.000177098 Local_latch_wait_time: 0.106869448 Write_keys: 131072 Write_size: 3538944 Prewrite_region: 1 # DB: test # Is_internal: false # Digest: 50a2e32d2abbd6c1764b1b7f2058d428ef2712b029282b776beb9506a365c0f1 # Stats: t:pseudo # Num_cop_tasks: 1 # Cop_proc_avg: 0.</description>
    </item>
    
    <item>
      <title>慢查询日志</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/maintain/identify-slow-queries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/maintain/identify-slow-queries/</guid>
      <description>慢查询日志 TiDB 会将执行时间超过 slow-threshold（默认值为 300 毫秒）的语句输出到 slow-query-file（默认值：&amp;ldquo;tidb-slow.log&amp;rdquo;）日志文件中，用于帮助用户定位慢查询语句，分析和解决 SQL 执行的性能问题。
日志示例 # Time: 2019-08-14T09:26:59.487776265+08:00 # Txn_start_ts: 410450924122144769 # User: root@127.0.0.1 # Conn_ID: 3086 # Query_time: 1.527627037 # Process_time: 0.07 Request_count: 1 Total_keys: 131073 Process_keys: 131072 Prewrite_time: 0.335415029 Commit_time: 0.032175429 Get_commit_ts_time: 0.000177098 Local_latch_wait_time: 0.106869448 Write_keys: 131072 Write_size: 3538944 Prewrite_region: 1 # DB: test # Is_internal: false # Digest: 50a2e32d2abbd6c1764b1b7f2058d428ef2712b029282b776beb9506a365c0f1 # Stats: t:pseudo # Num_cop_tasks: 1 # Cop_proc_avg: 0.07 Cop_proc_p90: 0.07 Cop_proc_max: 0.07 Cop_proc_addr: 172.</description>
    </item>
    
    <item>
      <title>慢查询日志</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/maintain/identify-abnormal-queries/identify-slow-queries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/maintain/identify-abnormal-queries/identify-slow-queries/</guid>
      <description>慢查询日志 TiDB 会将执行时间超过 slow-threshold（默认值为 300 毫秒）的语句输出到 slow-query-file（默认值：&amp;ldquo;tidb-slow.log&amp;rdquo;）日志文件中，用于帮助用户定位慢查询语句，分析和解决 SQL 执行的性能问题。
日志示例 # Time: 2019-08-14T09:26:59.487776265+08:00 # Txn_start_ts: 410450924122144769 # User: root@127.0.0.1 # Conn_ID: 3086 # Query_time: 1.527627037 # Parse_time: 0.000054933 # Compile_time: 0.000129729 # Process_time: 0.07 Request_count: 1 Total_keys: 131073 Process_keys: 131072 Prewrite_time: 0.335415029 Commit_time: 0.032175429 Get_commit_ts_time: 0.000177098 Local_latch_wait_time: 0.106869448 Write_keys: 131072 Write_size: 3538944 Prewrite_region: 1 # DB: test # Is_internal: false # Digest: 50a2e32d2abbd6c1764b1b7f2058d428ef2712b029282b776beb9506a365c0f1 # Stats: t:pseudo # Num_cop_tasks: 1 # Cop_proc_avg: 0.</description>
    </item>
    
    <item>
      <title>成为贡献者</title>
      <link>https://pingcap.com/docs-cn/dev/contribute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/contribute/</guid>
      <description>成为贡献者 成为 TiDB 的贡献者 我们推荐您先尝试解决带 help-wanted 标签的现有 Issue，这些问题非常适合新的贡献者。
一旦您提交给 TiDB/TiKV/TiSpark/PD/TiDB Operator/Docs/Docs-cn 项目的 PR (Pull Request) 被批准且合并，您即成为 TiDB 的贡献者。
在提交 PR 之前，请先签署 CLA。
如果您想实践一个影响范围相对较小的新想法，请遵循以下步骤：
 提交新 Issue，描述您对相关仓库的更改建议。 相关仓库的负责人将及时回复您的 Issue。 如果您的更改建议被接受，您需要先签署 CLA，便可以在您的克隆仓库 (fork) 里开始工作了。 在测试过所做的更改后，您便可以提交包含更改的 PR 了。  我们欢迎并非常感谢您的贡献。有关提交补丁和贡献流程的详细信息，请参阅贡献者指南。
改进文档 我们欢迎更多贡献者来帮助改进文档！
TiDB 文档使用 Markdown 语言，并参考了 Google 开发者文档风格指南进行编写。如果这些概念对您来说比较陌生，请不要担心，我们很乐意为您提供指导。
如要对文档仓库进行贡献，请先 fork docs-cn 仓库，再提交您的 PR。</description>
    </item>
    
    <item>
      <title>成为贡献者</title>
      <link>https://pingcap.com/docs-cn/stable/contribute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/contribute/</guid>
      <description>成为贡献者 成为 TiDB 的贡献者 我们推荐您先尝试解决带 help-wanted 标签的现有 Issue，这些问题非常适合新的贡献者。
一旦您提交给 TiDB/TiKV/TiSpark/PD/TiDB Operator/Docs/Docs-cn 项目的 PR (Pull Request) 被批准且合并，您即成为 TiDB 的贡献者。
在提交 PR 之前，请先签署 CLA。
如果您想实践一个影响范围相对较小的新想法，请遵循以下步骤：
 提交新 Issue，描述您对相关仓库的更改建议。 相关仓库的负责人将及时回复您的 Issue。 如果您的更改建议被接受，您需要先签署 CLA，便可以在您的克隆仓库 (fork) 里开始工作了。 在测试过所做的更改后，您便可以提交包含更改的 PR 了。  我们欢迎并非常感谢您的贡献。有关提交补丁和贡献流程的详细信息，请参阅贡献者指南。
改进文档 我们欢迎更多贡献者来帮助改进文档！
TiDB 文档使用 Markdown 语言，并参考了 Google 开发者文档风格指南进行编写。如果这些概念对您来说比较陌生，请不要担心，我们很乐意为您提供指导。
如要对文档仓库进行贡献，请先 fork docs-cn 仓库，再提交您的 PR。</description>
    </item>
    
    <item>
      <title>成为贡献者</title>
      <link>https://pingcap.com/docs-cn/v2.1/contribute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/contribute/</guid>
      <description>成为贡献者 成为 TiDB 的贡献者 我们推荐您先尝试解决带 help-wanted 标签的现有 Issue，这些问题非常适合新的贡献者。
一旦您提交给 TiDB/TiKV/TiSpark/PD/Docs/Docs-cn 项目的 PR (Pull Request) 被批准且合并，您即成为 TiDB 的贡献者。
在提交 PR 之前，请先签署 CLA。
如果您想实践一个影响范围相对较小的新想法，请遵循以下步骤：
 提交新 Issue，描述您对相关仓库的更改建议。 相关仓库的负责人将及时回复您的 Issue。 如果您的更改建议被接受，您需要先签署 CLA，便可以在您的克隆仓库 (fork) 里开始工作了。 在测试过所做的更改后，您便可以提交包含更改的 PR 了。  我们欢迎并非常感谢您的贡献。有关提交补丁和贡献流程的详细信息，请参阅贡献者指南。
改进文档 我们欢迎更多贡献者来帮助改进文档！
TiDB 文档使用 Markdown 语言，并参考了 Google 开发者文档风格指南进行编写。如果这些概念对您来说比较陌生，请不要担心，我们很乐意为您提供指导。
如要对文档仓库进行贡献，请先 fork docs-cn 仓库，再提交您的 PR。</description>
    </item>
    
    <item>
      <title>成为贡献者</title>
      <link>https://pingcap.com/docs-cn/v3.1/contribute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/contribute/</guid>
      <description>成为贡献者 成为 TiDB 的贡献者 我们推荐您先尝试解决带 help-wanted 标签的现有 Issue，这些问题非常适合新的贡献者。
一旦您提交给 TiDB/TiKV/TiSpark/PD/TiDB Operator/Docs/Docs-cn 项目的 PR (Pull Request) 被批准且合并，您即成为 TiDB 的贡献者。
在提交 PR 之前，请先签署 CLA。
如果您想实践一个影响范围相对较小的新想法，请遵循以下步骤：
 提交新 Issue，描述您对相关仓库的更改建议。 相关仓库的负责人将及时回复您的 Issue。 如果您的更改建议被接受，您需要先签署 CLA，便可以在您的克隆仓库 (fork) 里开始工作了。 在测试过所做的更改后，您便可以提交包含更改的 PR 了。  我们欢迎并非常感谢您的贡献。有关提交补丁和贡献流程的详细信息，请参阅贡献者指南。
改进文档 我们欢迎更多贡献者来帮助改进文档！
TiDB 文档使用 Markdown 语言，并参考了 Google 开发者文档风格指南进行编写。如果这些概念对您来说比较陌生，请不要担心，我们很乐意为您提供指导。
如要对文档仓库进行贡献，请先 fork docs-cn 仓库，再提交您的 PR。</description>
    </item>
    
    <item>
      <title>手动处理 Sharding DDL Lock</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/features/manually-handling-sharding-ddl-locks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/features/manually-handling-sharding-ddl-locks/</guid>
      <description>手动处理 Sharding DDL Lock DM (Data Migration) 使用 sharding DDL lock 来确保分库分表的 DDL 操作可以正确执行。绝大多数情况下，该锁定机制可自动完成；但在部分异常情况发生时，需要使用 unlock-ddl-lock/break-ddl-lock 手动处理异常的 DDL lock。
 注意：
 不要轻易使用 unlock-ddl-lock/break-ddl-lock 命令，除非完全明确当前场景下使用这些命令可能会造成的影响，并能接受这些影响。 在手动处理异常的 DDL lock 前，请确保已经了解 DM 的分库分表合并同步原理。   命令介绍 show-ddl-locks 该命令用于查询当前 DM-master 上存在的 DDL lock 信息。
命令示例  show-ddl-locks [--worker=127.0.0.1:8262] [task-name] 参数解释   worker：
 flag 参数，string，--worker，可选 不指定时，查询所有 DM-worker 相关的 lock 信息；指定时，仅查询与这组 DM-worker 相关的 lock 信息，可重复多次指定    task-name：
 非 flag 参数，string，可选 不指定时，查询与所有任务相关的 lock 信息；指定时，仅查询特定任务相关的 lock 信息    返回结果示例  show-ddl-locks test { &amp;#34;result&amp;#34;: true, # 查询 lock 操作本身是否成功 &amp;#34;msg&amp;#34;: &amp;#34;&amp;#34;, # 查询 lock 操作失败时的原因或其它描述信息（如不存在任务 lock） &amp;#34;locks&amp;#34;: [ # DM-master 上存在的 lock 信息列表 { &amp;#34;ID&amp;#34;: &amp;#34;test-`shard_db`.</description>
    </item>
    
    <item>
      <title>手动处理 Sharding DDL Lock</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/features/manually-handling-sharding-ddl-locks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/features/manually-handling-sharding-ddl-locks/</guid>
      <description>手动处理 Sharding DDL Lock DM (Data Migration) 使用 sharding DDL lock 来确保分库分表的 DDL 操作可以正确执行。绝大多数情况下，该锁定机制可自动完成；但在部分异常情况发生时，需要使用 unlock-ddl-lock/break-ddl-lock 手动处理异常的 DDL lock。
 注意：
 不要轻易使用 unlock-ddl-lock/break-ddl-lock 命令，除非完全明确当前场景下使用这些命令可能会造成的影响，并能接受这些影响。 在手动处理异常的 DDL lock 前，请确保已经了解 DM 的分库分表合并同步原理。   命令介绍 show-ddl-locks 该命令用于查询当前 DM-master 上存在的 DDL lock 信息。
命令示例  show-ddl-locks [--worker=127.0.0.1:8262] [task-name] 参数解释   worker：
 flag 参数，string，--worker，可选 不指定时，查询所有 DM-worker 相关的 lock 信息；指定时，仅查询与这组 DM-worker 相关的 lock 信息，可重复多次指定    task-name：
 非 flag 参数，string，可选 不指定时，查询与所有任务相关的 lock 信息；指定时，仅查询特定任务相关的 lock 信息    返回结果示例  » show-ddl-locks test { &amp;#34;result&amp;#34;: true, # 查询 lock 操作本身是否成功 &amp;#34;msg&amp;#34;: &amp;#34;&amp;#34;, # 查询 lock 操作失败时的原因或其它描述信息（如不存在任务 lock） &amp;#34;locks&amp;#34;: [ # DM-master 上存在的 lock 信息列表 { &amp;#34;ID&amp;#34;: &amp;#34;test-`shard_db`.</description>
    </item>
    
    <item>
      <title>手动处理 Sharding DDL Lock</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/features/manually-handling-sharding-ddl-locks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/features/manually-handling-sharding-ddl-locks/</guid>
      <description>手动处理 Sharding DDL Lock DM (Data Migration) 使用 sharding DDL lock 来确保分库分表的 DDL 操作可以正确执行。绝大多数情况下，该锁定机制可自动完成；但在部分异常情况发生时，需要使用 unlock-ddl-lock/break-ddl-lock 手动处理异常的 DDL lock。
 注意：
 不要轻易使用 unlock-ddl-lock/break-ddl-lock 命令，除非完全明确当前场景下使用这些命令可能会造成的影响，并能接受这些影响。 在手动处理异常的 DDL lock 前，请确保已经了解 DM 的分库分表合并同步原理。   命令介绍 show-ddl-locks 该命令用于查询当前 DM-master 上存在的 DDL lock 信息。
命令示例 show-ddl-locks [--worker=127.0.0.1:8262] [task-name] 参数解释   worker：
 flag 参数，string，--worker，可选 不指定时，查询所有 DM-worker 相关的 lock 信息；指定时，仅查询与这组 DM-worker 相关的 lock 信息，可重复多次指定    task-name：
 非 flag 参数，string，可选 不指定时，查询与所有任务相关的 lock 信息；指定时，仅查询特定任务相关的 lock 信息    返回结果示例 » show-ddl-locks test { &amp;#34;result&amp;#34;: true, # 查询 lock 操作本身是否成功 &amp;#34;msg&amp;#34;: &amp;#34;&amp;#34;, # 查询 lock 操作失败时的原因或其它描述信息（如不存在任务 lock） &amp;#34;locks&amp;#34;: [ # DM-master 上存在的 lock 信息列表 { &amp;#34;ID&amp;#34;: &amp;#34;test-`shard_db`.</description>
    </item>
    
    <item>
      <title>手动处理 Sharding DDL Lock</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/features/manually-handling-sharding-ddl-locks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/features/manually-handling-sharding-ddl-locks/</guid>
      <description>手动处理 Sharding DDL Lock DM (Data Migration) 使用 sharding DDL lock 来确保分库分表的 DDL 操作可以正确执行。绝大多数情况下，该锁定机制可自动完成；但在部分异常情况发生时，需要使用 unlock-ddl-lock/break-ddl-lock 手动处理异常的 DDL lock。
 注意：
 不要轻易使用 unlock-ddl-lock/break-ddl-lock 命令，除非完全明确当前场景下使用这些命令可能会造成的影响，并能接受这些影响。 在手动处理异常的 DDL lock 前，请确保已经了解 DM 的分库分表合并同步原理。   命令介绍 show-ddl-locks 该命令用于查询当前 DM-master 上存在的 DDL lock 信息。
命令示例  show-ddl-locks [--worker=127.0.0.1:8262] [task-name] 参数解释   worker：
 flag 参数，string，--worker，可选 不指定时，查询所有 DM-worker 相关的 lock 信息；指定时，仅查询与这组 DM-worker 相关的 lock 信息，可重复多次指定    task-name：
 非 flag 参数，string，可选 不指定时，查询与所有任务相关的 lock 信息；指定时，仅查询特定任务相关的 lock 信息    返回结果示例  » show-ddl-locks test { &amp;#34;result&amp;#34;: true, # 查询 lock 操作本身是否成功 &amp;#34;msg&amp;#34;: &amp;#34;&amp;#34;, # 查询 lock 操作失败时的原因或其它描述信息（如不存在任务 lock） &amp;#34;locks&amp;#34;: [ # DM-master 上存在的 lock 信息列表 { &amp;#34;ID&amp;#34;: &amp;#34;test-`shard_db`.</description>
    </item>
    
    <item>
      <title>执行计划绑定</title>
      <link>https://pingcap.com/docs-cn/dev/reference/performance/execution-plan-bind/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/performance/execution-plan-bind/</guid>
      <description>执行计划绑定 在优化器 Hints 中介绍了可以通过 Hint 的方式选择指定的执行计划，但有的时候需要在不修改 SQL 语句的情况下干预执行计划的选择。执行计划绑定提供了一系列功能使得可以在不修改 SQL 语句的情况下选择指定的执行计划。
语法 创建绑定  CREATE [GLOBAL | SESSION] BINDING FOR SelectStmt USING SelectStmt; 该语句可以在 GLOBAL 或者 SESSION 作用域内为 SQL 绑定执行计划。在不指定作用域时，隐式作用域为 SESSION。被绑定的 SQL 会被参数化后存储到系统表中。在处理 SQL 查询时，只要参数化后的 SQL 和系统表中某个被绑定的 SQL 语句一致，并且系统变量 tidb_use_plan_baselines 的值为 on（其默认值为 on），即可使用相应的优化器 Hint。如果存在多个可匹配的执行计划，优化器会从中选择代价最小的一个进行绑定。
参数化：把 SQL 中的常量变成变量参数，并对 SQL 中的空格和换行符等做标准化处理。例如：
select * from t where a &amp;gt; 1 -- 参数化后： select * from t where a &amp;gt; ？ 需要注意的是原始 SQL 和绑定 SQL 在参数化以及去掉 Hint 后文本必须相同，否则创建会失败，例如：</description>
    </item>
    
    <item>
      <title>执行计划绑定</title>
      <link>https://pingcap.com/docs-cn/stable/reference/performance/execution-plan-bind/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/performance/execution-plan-bind/</guid>
      <description>执行计划绑定 在优化器 Hints 中介绍了可以通过 Hint 的方式选择指定的执行计划，但有的时候需要在不修改 SQL 语句的情况下干预执行计划的选择。执行计划绑定提供了一系列功能使得可以在不修改 SQL 语句的情况下选择指定的执行计划。
语法 创建绑定  CREATE [GLOBAL | SESSION] BINDING FOR SelectStmt USING SelectStmt; 该语句可以在 GLOBAL 或者 SESSION 作用域内为 SQL 绑定执行计划。在不指定作用域时，隐式作用域为 SESSION。被绑定的 SQL 会被参数化后存储到系统表中。在处理 SQL 查询时，只要参数化后的 SQL 和系统表中某个被绑定的 SQL 一致即可使用相应的优化器 Hint。
参数化：把 SQL 中的常量变成变量参数，并对 SQL 中的空格和换行符等做标准化处理。例如：
select * from t where a &amp;gt; 1 -- 参数化后： select * from t where a &amp;gt; ？ 需要注意的是原始 SQL 和绑定 SQL 在参数化以及去掉 Hint 后文本必须相同，否则创建会失败，例如：
 CREATE BINDING FOR SELECT * FROM t WHERE a &amp;gt; 1 USING SELECT * FROM t use index(idx) WHERE a &amp;gt; 2; 可以创建成功，因为原始 SQL 和绑定 SQL 在参数化以及去掉 Hint 后文本都是 select * from t where a &amp;gt; ?</description>
    </item>
    
    <item>
      <title>执行计划绑定</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/performance/execution-plan-bind/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/performance/execution-plan-bind/</guid>
      <description>执行计划绑定 在优化器 Hints 中介绍了可以通过 Hint 的方式选择指定的执行计划，但有的时候需要在不修改 SQL 语句的情况下干预执行计划的选择。执行计划绑定提供了一系列功能使得可以在不修改 SQL 语句的情况下选择指定的执行计划。
语法 创建绑定  CREATE [GLOBAL | SESSION] BINDING FOR SelectStmt USING SelectStmt; 该语句可以在 GLOBAL 或者 SESSION 作用域内为 SQL 绑定执行计划。在不指定作用域时，隐式作用域为 SESSION。被绑定的 SQL 会被参数化后存储到系统表中。在处理 SQL 查询时，只要参数化后的 SQL 和系统表中某个被绑定的 SQL 一致即可使用相应的优化器 Hint。
参数化：把 SQL 中的常量变成变量参数，并对 SQL 中的空格和换行符等做标准化处理。例如：
select * from t where a &amp;gt; 1 -- 参数化后： select * from t where a &amp;gt; ？ 需要注意的是原始 SQL 和绑定 SQL 在参数化以及去掉 Hint 后文本必须相同，否则创建会失败，例如：
 CREATE BINDING FOR SELECT * FROM t WHERE a &amp;gt; 1 USING SELECT * FROM t use index(idx) WHERE a &amp;gt; 2; 可以创建成功，因为原始 SQL 和绑定 SQL 在参数化以及去掉 Hint 后文本都是 select * from t where a &amp;gt; ?</description>
    </item>
    
    <item>
      <title>招聘主管</title>
      <link>https://pingcap.com/about-cn/recruit/general-administrative/hr-manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/general-administrative/hr-manager/</guid>
      <description>招聘主管 岗位职责：
  负责公司招聘渠道的开拓和维护；
  实施招聘工作，发布招聘广告、进行简历筛选、组织面试，评估候选人并提供初步面试报告，出具综合评价意见；
  负责设计优化招聘流程、面试标准、面试题库，组织实施招聘；
  对招聘渠道开发、维护、拓展，保证人才信息量大、层次丰富、质量高，确保招聘渠道能有效满足公司的用人需求；
  总结招聘工作中存在的问题，提出优化招聘制度和流程的合理化建议；
  总结和统计招聘工作各项数据，完成招聘分析报告；
  配合完成其它人力资源工作。
  任职要求：
  本科以上学历，人力资源相关专业，2 年以上招聘工作经验；
  熟悉 IT 软件、互联网、相关行业人才渠道，有销售类职位猎头招聘经验优先；
  丰富的招聘经验和技巧，熟悉国家相关法律法规；
  良好的职业道德及团队合作意识，良好的亲和力；
  优秀的语言表达能力、沟通协调能力和分析判断力。
  待遇：
10K - 30K，13薪 + 奖金，优秀者可面议
联系方式：
hire@pingcap.com
工作地点：
北京，上海，广州，杭州，成都</description>
    </item>
    
    <item>
      <title>控制流程函数</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/control-flow-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/control-flow-functions/</guid>
      <description>控制流程函数 TiDB 支持使用 MySQL 5.7 中提供的所有控制流程函数。
   函数名 功能描述     CASE Case 操作符   IF() 构建 if/else   IFNULL() 构建 Null if/else   NULLIF() 如果 expr1 = expr2，返回 NULL    </description>
    </item>
    
    <item>
      <title>控制流程函数</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/control-flow-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/control-flow-functions/</guid>
      <description>控制流程函数 TiDB 支持使用 MySQL 5.7 中提供的所有控制流程函数。
   函数名 功能描述     CASE Case 操作符   IF() 构建 if/else   IFNULL() 构建 Null if/else   NULLIF() 如果 expr1 = expr2，返回 NULL    </description>
    </item>
    
    <item>
      <title>控制流程函数</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/control-flow-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/control-flow-functions/</guid>
      <description>控制流程函数    函数名 功能描述     CASE Case 操作符   IF() 构建 if/else   IFNULL() 构建 Null if/else   NULLIF() 如果 expr1 = expr2，返回 NULL    </description>
    </item>
    
    <item>
      <title>控制流程函数</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/control-flow-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/control-flow-functions/</guid>
      <description>控制流程函数 TiDB 支持使用 MySQL 5.7 中提供的所有控制流程函数。
   函数名 功能描述     CASE Case 操作符   IF() 构建 if/else   IFNULL() 构建 Null if/else   NULLIF() 如果 expr1 = expr2，返回 NULL    </description>
    </item>
    
    <item>
      <title>提交 Issue</title>
      <link>https://pingcap.com/docs-cn/dev/report-issue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/report-issue/</guid>
      <description>提交 Issue 我们正在努力使 TiDB 与 MySQL 5.7 兼容。如果您发现了任何未记录在文档中的表现差异、bug 或奇怪的性能特征，请在 GitHub 中提交新的 Issue。
在 GitHub 上提交的新 Issue 分为以下几种：
 错误报告 (Bug Reports) 功能请求 (Feature Requests) 常规问题 (General Questions) 性能问题 (Performance Questions)  请确保您完全按照 Issue 模板进行填写，以便我们迅速定位问题并作出回应。</description>
    </item>
    
    <item>
      <title>提交 Issue</title>
      <link>https://pingcap.com/docs-cn/stable/report-issue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/report-issue/</guid>
      <description>提交 Issue 我们正在努力使 TiDB 与 MySQL 5.7 兼容。如果您发现了任何未记录在文档中的表现差异、bug 或奇怪的性能特征，请在 GitHub 中提交新的 Issue。
在 GitHub 上提交的新 Issue 分为以下几种：
 错误报告 (Bug Reports) 功能请求 (Feature Requests) 常规问题 (General Questions) 性能问题 (Performance Questions)  请确保您完全按照 Issue 模板进行填写，以便我们迅速定位问题并作出回应。</description>
    </item>
    
    <item>
      <title>提交 Issue</title>
      <link>https://pingcap.com/docs-cn/v2.1/report-issue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/report-issue/</guid>
      <description>提交 Issue 我们正在努力使 TiDB 与 MySQL 5.7 兼容。如果您发现了任何未记录在文档中的表现差异、bug 或奇怪的性能特征，请在 GitHub 中提交新的 Issue。
在 GitHub 上提交的新 Issue 分为以下几种：
 错误报告 (Bug Reports) 功能请求 (Feature Requests) 常规问题 (General Questions) 性能问题 (Performance Questions)  请确保您完全按照 Issue 模板进行填写，以便我们迅速定位问题并作出回应。</description>
    </item>
    
    <item>
      <title>提交 Issue</title>
      <link>https://pingcap.com/docs-cn/v3.1/report-issue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/report-issue/</guid>
      <description>提交 Issue 我们正在努力使 TiDB 与 MySQL 5.7 兼容。如果您发现了任何未记录在文档中的表现差异、bug 或奇怪的性能特征，请在 GitHub 中提交新的 Issue。
在 GitHub 上提交的新 Issue 分为以下几种：
 错误报告 (Bug Reports) 功能请求 (Feature Requests) 常规问题 (General Questions) 性能问题 (Performance Questions)  请确保您完全按照 Issue 模板进行填写，以便我们迅速定位问题并作出回应。</description>
    </item>
    
    <item>
      <title>操作符</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/operators/</guid>
      <description>操作符    操作符名 功能描述     AND, &amp;amp;&amp;amp; 逻辑与   = 赋值 (可用于 SET 语句中, 或用于 UPDATE 语句的 SET 中 )   := 赋值   BETWEEN ... AND ... 判断值满足范围   BINARY 将一个字符串转换为一个二进制字符串   &amp;amp; 位与   ~ 位非   \| 位或   ^ 按位异或   CASE case 操作符   DIV 整数除   / 除法   = 相等比较   &amp;lt;=&amp;gt; 空值安全型相等比较   &amp;gt; 大于   &amp;gt;= 大于或等于   IS 判断一个值是否等于一个布尔值   IS NOT 判断一个值是否不等于一个布尔值   IS NOT NULL 非空判断   IS NULL 空值判断   &amp;lt;&amp;lt; 左移   &amp;lt; 小于   &amp;lt;= 小于或等于   LIKE 简单模式匹配   - 减   %, MOD 求余   NOT, !</description>
    </item>
    
    <item>
      <title>操作符</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/operators/</guid>
      <description>操作符    操作符名 功能描述     AND, &amp;amp;&amp;amp; 逻辑与   = 赋值 (可用于 SET 语句中, 或用于 UPDATE 语句的 SET 中 )   := 赋值   BETWEEN ... AND ... 判断值满足范围   BINARY 将一个字符串转换为一个二进制字符串   &amp;amp; 位与   ~ 位非   \| 位或   ^ 按位异或   CASE case 操作符   DIV 整数除   / 除法   = 相等比较   &amp;lt;=&amp;gt; 空值安全型相等比较   &amp;gt; 大于   &amp;gt;= 大于或等于   IS 判断一个值是否等于一个布尔值   IS NOT 判断一个值是否不等于一个布尔值   IS NOT NULL 非空判断   IS NULL 空值判断   &amp;lt;&amp;lt; 左移   &amp;lt; 小于   &amp;lt;= 小于或等于   LIKE 简单模式匹配   - 减   %, MOD 求余   NOT, !</description>
    </item>
    
    <item>
      <title>操作符</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/operators/</guid>
      <description>操作符    操作符名 功能描述     AND, &amp;amp;&amp;amp; 逻辑与   = 赋值 (可用于 SET 语句中, 或用于 UPDATE 语句的 SET 中 )   := 赋值   BETWEEN ... AND ... 判断值满足范围   BINARY 将一个字符串转换为一个二进制字符串   &amp;amp; 位与   ~ 位非   \| 位或   ^ 按位异或   CASE case 操作符   DIV 整数除   / 除法   = 相等比较   &amp;lt;=&amp;gt; 空值安全型相等比较   &amp;gt; 大于   &amp;gt;= 大于或等于   IS 判断一个值是否等于一个布尔值   IS NOT 判断一个值是否不等于一个布尔值   IS NOT NULL 非空判断   IS NULL 空值判断   &amp;lt;&amp;lt; 左移   &amp;lt; 小于   &amp;lt;= 小于或等于   LIKE 简单模式匹配   - 减   %, MOD 求余   NOT, !</description>
    </item>
    
    <item>
      <title>操作符</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/operators/</guid>
      <description>操作符    操作符名 功能描述     AND, &amp;amp;&amp;amp; 逻辑与   = 赋值 (可用于 SET 语句中, 或用于 UPDATE 语句的 SET 中 )   := 赋值   BETWEEN ... AND ... 判断值满足范围   BINARY 将一个字符串转换为一个二进制字符串   &amp;amp; 位与   ~ 位非   \| 位或   ^ 按位异或   CASE case 操作符   DIV 整数除   / 除法   = 相等比较   &amp;lt;=&amp;gt; 空值安全型相等比较   &amp;gt; 大于   &amp;gt;= 大于或等于   IS 判断一个值是否等于一个布尔值   IS NOT 判断一个值是否不等于一个布尔值   IS NOT NULL 非空判断   IS NULL 空值判断   &amp;lt;&amp;lt; 左移   &amp;lt; 小于   &amp;lt;= 小于或等于   LIKE 简单模式匹配   - 减   %, MOD 求余   NOT, !</description>
    </item>
    
    <item>
      <title>支持资源</title>
      <link>https://pingcap.com/docs-cn/dev/support-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/support-resources/</guid>
      <description>支持资源 您可以通过以下任何一种方式找到我们的社区成员：
 Slack Channel: https://pingcap.com/tidbslack Stack Overflow: https://stackoverflow.com/questions/tagged/tidb Reddit: https://www.reddit.com/r/TiDB GitHub: https://github.com/pingcap/tidb/issues  有关企业支持合作的信息，请联系我们。</description>
    </item>
    
    <item>
      <title>支持资源</title>
      <link>https://pingcap.com/docs-cn/stable/support-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/support-resources/</guid>
      <description>支持资源 您可以通过以下任何一种方式找到我们的社区成员：
 Slack Channel: https://pingcap.com/tidbslack Stack Overflow: https://stackoverflow.com/questions/tagged/tidb Reddit: https://www.reddit.com/r/TiDB GitHub: https://github.com/pingcap/tidb/issues  有关企业支持合作的信息，请联系我们。</description>
    </item>
    
    <item>
      <title>支持资源</title>
      <link>https://pingcap.com/docs-cn/v2.1/support-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/support-resources/</guid>
      <description>支持资源 您可以通过以下任何一种方式找到我们的社区成员：
 Slack Channel: https://pingcap.com/tidbslack Stack Overflow: https://stackoverflow.com/questions/tagged/tidb Reddit: https://www.reddit.com/r/TiDB GitHub: https://github.com/pingcap/tidb/issues  有关企业支持合作的信息，请联系我们。</description>
    </item>
    
    <item>
      <title>支持资源</title>
      <link>https://pingcap.com/docs-cn/v3.1/support-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/support-resources/</guid>
      <description>支持资源 您可以通过以下任何一种方式找到我们的社区成员：
 Slack Channel: https://pingcap.com/tidbslack Stack Overflow: https://stackoverflow.com/questions/tagged/tidb Reddit: https://www.reddit.com/r/TiDB GitHub: https://github.com/pingcap/tidb/issues  有关企业支持合作的信息，请联系我们。</description>
    </item>
    
    <item>
      <title>数值函数与操作符</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/numeric-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/numeric-functions-and-operators/</guid>
      <description>数值函数与操作符 TiDB 支持使用 MySQL 5.7 中提供的所有数值函数与操作符。
算术操作符    操作符名 功能描述     + 加号   - 减号   * 乘号   / 除号   DIV 整数除法   %, MOD 模运算，取余   - 更改参数符号    数学函数    函数名 功能描述     POW() 返回参数的指定乘方的结果值   POWER() 返回参数的指定乘方的结果值   EXP() 返回 e（自然对数的底）的指定乘方后的值   SQRT() 返回非负数的二次方根   LN() 返回参数的自然对数   LOG() 返回第一个参数的自然对数   LOG2() 返回参数以 2 为底的对数   LOG10() 返回参数以 10 为底的对数   PI() 返回 pi 的值   TAN() 返回参数的正切值   COT() 返回参数的余切值   SIN() 返回参数的正弦值   COS() 返回参数的余弦值   ATAN() 返回参数的反正切值   ATAN2(), ATAN() 返回两个参数的反正切值   ASIN() 返回参数的反正弦值   ACOS() 返回参数的反余弦值   RADIANS() 返回由度转化为弧度的参数   DEGREES() 返回由弧度转化为度的参数   MOD() 返回余数   ABS() 返回参数的绝对值   CEIL() 返回不小于参数的最小整数值   CEILING() 返回不小于参数的最小整数值   FLOOR() 返回不大于参数的最大整数值   ROUND() 返回参数最近似的整数或指定小数位数的数值   RAND() 返回一个随机浮点值   SIGN() 返回参数的符号   CONV() 不同数基间转换数字，返回数字的字符串表示   TRUNCATE() 返回被舍位至指定小数位数的数字   CRC32()  计算循环冗余码校验值并返回一个 32 位无符号值     </description>
    </item>
    
    <item>
      <title>数值函数与操作符</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/numeric-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/numeric-functions-and-operators/</guid>
      <description>数值函数与操作符 TiDB 支持使用 MySQL 5.7 中提供的所有数值函数与操作符。
算术操作符    操作符名 功能描述     + 加号   - 减号   * 乘号   / 除号   DIV 整数除法   %, MOD 模运算，取余   - 更改参数符号    数学函数    函数名 功能描述     POW() 返回参数的指定乘方的结果值   POWER() 返回参数的指定乘方的结果值   EXP() 返回 e（自然对数的底）的指定乘方后的值   SQRT() 返回非负数的二次方根   LN() 返回参数的自然对数   LOG() 返回第一个参数的自然对数   LOG2() 返回参数以 2 为底的对数   LOG10() 返回参数以 10 为底的对数   PI() 返回 pi 的值   TAN() 返回参数的正切值   COT() 返回参数的余切值   SIN() 返回参数的正弦值   COS() 返回参数的余弦值   ATAN() 返回参数的反正切值   ATAN2(), ATAN() 返回两个参数的反正切值   ASIN() 返回参数的反正弦值   ACOS() 返回参数的反余弦值   RADIANS() 返回由度转化为弧度的参数   DEGREES() 返回由弧度转化为度的参数   MOD() 返回余数   ABS() 返回参数的绝对值   CEIL() 返回不小于参数的最小整数值   CEILING() 返回不小于参数的最小整数值   FLOOR() 返回不大于参数的最大整数值   ROUND() 返回参数最近似的整数或指定小数位数的数值   RAND() 返回一个随机浮点值   SIGN() 返回参数的符号   CONV() 不同数基间转换数字，返回数字的字符串表示   TRUNCATE() 返回被舍位至指定小数位数的数字   CRC32()  计算循环冗余码校验值并返回一个 32 位无符号值     </description>
    </item>
    
    <item>
      <title>数值函数与操作符</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/numeric-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/numeric-functions-and-operators/</guid>
      <description>数值函数与操作符 算术操作符    操作符名 功能描述     + 加号   - 减号   * 乘号   / 除号   DIV 整数除法   %, MOD 模运算，取余   - 更改参数符号    数学函数    函数名 功能描述     POW() 返回参数的指定乘方的结果值   POWER() 返回参数的指定乘方的结果值   EXP() 返回 e（自然对数的底）的指定乘方后的值   SQRT() 返回非负数的二次方根   LN() 返回参数的自然对数   LOG() 返回第一个参数的自然对数   LOG2() 返回参数以 2 为底的对数   LOG10() 返回参数以 10 为底的对数   PI() 返回 pi 的值   TAN() 返回参数的正切值   COT() 返回参数的余切值   SIN() 返回参数的正弦值   COS() 返回参数的余弦值   ATAN() 返回参数的反正切值   ATAN2(), ATAN() 返回两个参数的反正切值   ASIN() 返回参数的反正弦值   ACOS() 返回参数的反余弦值   RADIANS() 返回由度转化为弧度的参数   DEGREES() 返回由弧度转化为度的参数   MOD() 返回余数   ABS() 返回参数的绝对值   CEIL() 返回不小于参数的最小整数值   CEILING() 返回不小于参数的最小整数值   FLOOR() 返回不大于参数的最大整数值   ROUND() 返回参数最近似的整数或指定小数位数的数值   RAND() 返回一个随机浮点值   SIGN() 返回参数的符号   CONV() 不同数基间转换数字，返回数字的字符串表示   TRUNCATE() 返回被舍位至指定小数位数的数字   CRC32()  计算循环冗余码校验值并返回一个 32 位无符号值     </description>
    </item>
    
    <item>
      <title>数值函数与操作符</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/numeric-functions-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/numeric-functions-and-operators/</guid>
      <description>数值函数与操作符 TiDB 支持使用 MySQL 5.7 中提供的所有数值函数与操作符。
算术操作符    操作符名 功能描述     + 加号   - 减号   * 乘号   / 除号   DIV 整数除法   %, MOD 模运算，取余   - 更改参数符号    数学函数    函数名 功能描述     POW() 返回参数的指定乘方的结果值   POWER() 返回参数的指定乘方的结果值   EXP() 返回 e（自然对数的底）的指定乘方后的值   SQRT() 返回非负数的二次方根   LN() 返回参数的自然对数   LOG() 返回第一个参数的自然对数   LOG2() 返回参数以 2 为底的对数   LOG10() 返回参数以 10 为底的对数   PI() 返回 pi 的值   TAN() 返回参数的正切值   COT() 返回参数的余切值   SIN() 返回参数的正弦值   COS() 返回参数的余弦值   ATAN() 返回参数的反正切值   ATAN2(), ATAN() 返回两个参数的反正切值   ASIN() 返回参数的反正弦值   ACOS() 返回参数的反余弦值   RADIANS() 返回由度转化为弧度的参数   DEGREES() 返回由弧度转化为度的参数   MOD() 返回余数   ABS() 返回参数的绝对值   CEIL() 返回不小于参数的最小整数值   CEILING() 返回不小于参数的最小整数值   FLOOR() 返回不大于参数的最大整数值   ROUND() 返回参数最近似的整数或指定小数位数的数值   RAND() 返回一个随机浮点值   SIGN() 返回参数的符号   CONV() 不同数基间转换数字，返回数字的字符串表示   TRUNCATE() 返回被舍位至指定小数位数的数字   CRC32()  计算循环冗余码校验值并返回一个 32 位无符号值     </description>
    </item>
    
    <item>
      <title>数值类型</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/data-types/numeric/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/data-types/numeric/</guid>
      <description>数值类型 TiDB 支持 MySQL 所有的数值类型，按照精度可以分为:
 整数类型（精确值) 浮点类型（近似值) 定点类型（精确值)  整数类型 TiDB 支持 MySQL 所有的整数类型，包括 INTEGER/INT、TINYINT、SMALLINT、MEDIUMINT 以及 BIGINT，完整信息参考这篇文档。
字段说明：
   语法元素 说明     M 类型显示宽度，可选   UNSIGNED 无符号数，如果不加这个标识，则为有符号数   ZEROFILL 补零标识，如果有这个标识，TiDB 会自动给类型增加 UNSIGNED 标识，但是没有做补零的操作    类型定义 BIT 类型 比特值类型。M 表示比特位的长度，取值范围从1到64，其默认值是1。
 BIT[(M)] BOOLEAN 类型 布尔类型，别名为 BOOL，和 TINYINT(1) 等价。零值被认为是 False，非零值认为是 True。在 TiDB 内部，True 存储为 1，False 存储为 0。
 BOOLEAN TINYINT 类型 TINYINT 类型。有符号数的范围是 [-128, 127]。无符号数的范围是 [0, 255]。</description>
    </item>
    
    <item>
      <title>数值类型</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/data-types/numeric/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/data-types/numeric/</guid>
      <description>数值类型 TiDB 支持 MySQL 所有的数值类型，按照精度可以分为:
 整数类型（精确值) 浮点类型（近似值) 定点类型（精确值)  整数类型 TiDB 支持 MySQL 所有的整数类型，包括 INTEGER/INT、TINYINT、SMALLINT、MEDIUMINT 以及 BIGINT，完整信息参考这篇文档。
字段说明：
   语法元素 说明     M 类型显示宽度，可选   UNSIGNED 无符号数，如果不加这个标识，则为有符号数   ZEROFILL 补零标识，如果有这个标识，TiDB 会自动给类型增加 UNSIGNED 标识，但是没有做补零的操作    类型定义 BIT 类型 比特值类型。M 表示比特位的长度，取值范围从1到64，其默认值是1。
 BIT[(M)] BOOLEAN 类型 布尔类型，别名为 BOOL，和 TINYINT(1) 等价。零值被认为是 False，非零值认为是 True。在 TiDB 内部，True 存储为 1，False 存储为 0。
 BOOLEAN TINYINT 类型 TINYINT 类型。有符号数的范围是 [-128, 127]。无符号数的范围是 [0, 255]。</description>
    </item>
    
    <item>
      <title>数值类型</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/data-types/numeric/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/data-types/numeric/</guid>
      <description>数值类型 TiDB 支持 MySQL 所有的数值类型，按照精度可以分为:
 整数类型（精确值) 浮点类型（近似值) 定点类型（精确值)  整数类型 TiDB 支持 MySQL 所有的整数类型，包括 INTEGER/INT、TINYINT、SMALLINT、MEDIUMINT 以及 BIGINT，完整信息参考这篇文档。
字段说明：
   语法元素 说明     M 类型显示宽度，可选   UNSIGNED 无符号数，如果不加这个标识，则为有符号数   ZEROFILL 补零标识，如果有这个标识，TiDB 会自动给类型增加 UNSIGNED 标识，但是没有做补零的操作    类型定义 BIT 类型 比特值类型。M 表示比特位的长度，取值范围从1到64，其默认值是1。
 BIT[(M)] BOOLEAN 类型 布尔类型，别名为 BOOL，和 TINYINT(1) 等价。零值被认为是 False，非零值认为是 True。在 TiDB 内部，True 存储为 1，False 存储为 0。
 BOOLEAN TINYINT 类型 TINYINT 类型。有符号数的范围是 [-128, 127]。无符号数的范围是 [0, 255]。</description>
    </item>
    
    <item>
      <title>数值类型</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/data-types/numeric/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/data-types/numeric/</guid>
      <description>数值类型 TiDB 支持 MySQL 所有的数值类型，按照精度可以分为:
 整数类型（精确值) 浮点类型（近似值) 定点类型（精确值)  整数类型 TiDB 支持 MySQL 所有的整数类型，包括 INTEGER/INT、TINYINT、SMALLINT、MEDIUMINT 以及 BIGINT，完整信息参考这篇文档。
字段说明：
   语法元素 说明     M 类型显示宽度，可选   UNSIGNED 无符号数，如果不加这个标识，则为有符号数   ZEROFILL 补零标识，如果有这个标识，TiDB 会自动给类型增加 UNSIGNED 标识，但是没有做补零的操作    类型定义 BIT 类型 比特值类型。M 表示比特位的长度，取值范围从1到64，其默认值是1。
 BIT[(M)] BOOLEAN 类型 布尔类型，别名为 BOOL，和 TINYINT(1) 等价。零值被认为是 False，非零值认为是 True。在 TiDB 内部，True 存储为 1，False 存储为 0。
 BOOLEAN TINYINT 类型 TINYINT 类型。有符号数的范围是 [-128, 127]。无符号数的范围是 [0, 255]。</description>
    </item>
    
    <item>
      <title>数据同步功能</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/features/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/features/overview/</guid>
      <description>DM 提供的功能及其配置介绍</description>
    </item>
    
    <item>
      <title>数据同步功能</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/features/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/features/overview/</guid>
      <description>DM 提供的功能及其配置介绍</description>
    </item>
    
    <item>
      <title>数据同步功能</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/features/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/features/overview/</guid>
      <description>DM 提供的功能及其配置介绍</description>
    </item>
    
    <item>
      <title>数据同步功能</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/features/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/features/overview/</guid>
      <description>DM 提供的功能及其配置介绍</description>
    </item>
    
    <item>
      <title>数据库产品经理</title>
      <link>https://pingcap.com/about-cn/recruit/product-design/database-product-manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/product-design/database-product-manager/</guid>
      <description>数据库产品经理 岗位职责：
  负责制定 TiDB / 工具 / 管理平台的产品规划，产品设计，产品阶段性目标制定，对产品负责；
  负责跟踪业界动态，完成竞品分析，持续改产品，提升用户体验；
  负责市场调研，收集外部用户、公司内部售前、售后支持、解决方案架构师、研发等团队的需求，完成需求排序，原型设计，BRD、MRD、PRD、原型图文档的编写；
  负责协调推动后端各种资源合作及执行达成产品目标；
  负责产品生命周期管理，协同售前、售后支持、解决方案架构师、研发、运营等团队共同完成产品商业目标。
  任职要求：
  3 年以上产品经理相关工作经验，有大型云计算服务商产品经理经验者优先；
  具备较强产品规划、设计、整合能力；
  熟悉常用的设计方法，流程，项目管理，协同团队能较好的控制项目进度及质量；
  熟悉 1 种以上 Relational DBMS / NOSQL / 分析型数据库，了解市场上主流的数据库产品；
  善于沟通，做事认真、细致，逻辑性强，有责任心和团队合作精神，具备优秀的学习能力和创新能力；
  具备较强的产品 owner 意识，主动优化产品，执行力强，能承受业务发展带来的压力。
  加分项：
  对 TiDB / TiSPark / 周边生态工具等有贡献者优先；
  有数据库 / 大数据 / 技术型产品经理工作经验者优先；</description>
    </item>
    
    <item>
      <title>数据库开发实习生</title>
      <link>https://pingcap.com/about-cn/recruit/campus/infrastructure-engineer-intern/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/campus/infrastructure-engineer-intern/</guid>
      <description>数据库开发实习生 职位描述：
你能从工作中学习到什么？
  如何构建一个分布式关系数据库；
  如何将其包装成为一套完整的商业产品；
  亲身参与以上过程，并实践你所掌握的开发技术；
  任职要求：
  熟悉常用的开发语言，熟悉 Golang/Rust 优先；
  熟悉分布式系统/数据库系统优先；
  有开源项目实践经历优先；
  实习优秀者有机会转正，并有机会获得期权。
  待遇
300 元/8 小时，餐补，水果零食，生日会，Team Building
联系方式：
hire@pingcap.com
工作地点
北京，上海，广州，杭州，成都</description>
    </item>
    
    <item>
      <title>数据类型概述</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/data-types/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/data-types/overview/</guid>
      <description>数据类型概述 TiDB 支持除空间类型 (SPATIAL) 之外的所有 MySQL 数据类型，包括数值型类型、字符串类型、时间和日期类型、JSON 类型。
数据类型定义一般为 T(M[, D])，其中：
 T 表示具体的类型。 M 在整数类型中表示最大显示长度；在浮点数或者定点数中表示精度；在字符类型中表示最大长度。M 的最大值取决于具体的类型。 D 表示浮点数、定点数的小数位长度。 fsp 在时间和日期类型里的 TIME、DATETIME 以及 TIMESTAMP 中表示秒的精度，其取值范围是 0 到 6。值为 0 表示没有小数部分。如果省略，则默认精度为 0。  </description>
    </item>
    
    <item>
      <title>数据类型概述</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/data-types/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/data-types/overview/</guid>
      <description>数据类型概述 TiDB 支持除空间类型 (SPATIAL) 之外的所有 MySQL 数据类型，包括数值型类型、字符串类型、时间和日期类型、JSON 类型。
数据类型定义一般为 T(M[, D])，其中：
 T 表示具体的类型。 M 在整数类型中表示最大显示长度；在浮点数或者定点数中表示精度；在字符类型中表示最大长度。M 的最大值取决于具体的类型。 D 表示浮点数、定点数的小数位长度。 fsp 在时间和日期类型里的 TIME、DATETIME 以及 TIMESTAMP 中表示秒的精度，其取值范围是 0 到 6。值为 0 表示没有小数部分。如果省略，则默认精度为 0。  </description>
    </item>
    
    <item>
      <title>数据类型概述</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/data-types/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/data-types/overview/</guid>
      <description>数据类型概述 TiDB 支持除空间类型 (SPATIAL) 之外的所有 MySQL 数据类型，包括数值型类型、字符串类型、时间和日期类型、JSON 类型。
数据类型定义一般为 T(M[, D])，其中：
 T 表示具体的类型。 M 在整数类型中表示最大显示长度；在浮点数或者定点数中表示精度；在字符类型中表示最大长度。M 的最大值取决于具体的类型。 D 表示浮点数、定点数的小数位长度。 fsp 在时间和日期类型里的 TIME、DATETIME 以及 TIMESTAMP 中表示秒的精度，其取值范围是 0 到 6。值为 0 表示没有小数部分。如果省略，则默认精度为 0。  </description>
    </item>
    
    <item>
      <title>数据类型概述</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/data-types/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/data-types/overview/</guid>
      <description>数据类型概述 TiDB 支持除空间类型 (SPATIAL) 之外的所有 MySQL 数据类型，包括数值型类型、字符串类型、时间和日期类型、JSON 类型。
数据类型定义一般为 T(M[, D])，其中：
 T 表示具体的类型。 M 在整数类型中表示最大显示长度；在浮点数或者定点数中表示精度；在字符类型中表示最大长度。M 的最大值取决于具体的类型。 D 表示浮点数、定点数的小数位长度。 fsp 在时间和日期类型里的 TIME、DATETIME 以及 TIMESTAMP 中表示秒的精度，其取值范围是 0 到 6。值为 0 表示没有小数部分。如果省略，则默认精度为 0。  </description>
    </item>
    
    <item>
      <title>数据类型的默认值</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/data-types/default-values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/data-types/default-values/</guid>
      <description>数据类型的默认值 在一个数据类型描述中的 DEFAULT value 段描述了一个列的默认值。这个默认值必须是常量，不可以是一个函数或者是表达式。但是对于时间类型，可以例外的使用 NOW、CURRENT_TIMESTAMP、LOCALTIME、LOCALTIMESTAMP 等函数作为 DATETIME 或者 TIMESTAMP 的默认值。
BLOB、TEXT 以及 JSON 不可以设置默认值。
如果一个列的定义中没有 DEFAULT 的设置。TiDB 按照如下的规则决定:
 如果该类型可以使用 NULL 作为值，那么这个列会在定义时添加隐式的默认值设置 DEFAULT NULL。 如果该类型无法使用 NULL 作为值，那么这个列在定义时不会添加隐式的默认值设置。  对于一个设置了 NOT NULL 但是没有显式设置 DEFAULT 的列，当 INSERT、REPLACE 没有涉及到该列的值时，TiDB 根据当时的 SQL_MODE 进行不同的行为：
 如果此时是 strict sql mode，在事务中的语句会导致事务失败并回滚，非事务中的语句会直接报错。 如果此时不是 strict sql mode，TiDB 会为这列赋值为列数据类型的隐式默认值。  此时隐式默认值的设置按照如下规则：
 对于数值类型，它们的默认值是 0。当有 AUTO_INCREMENT 参数时，默认值会按照增量情况赋予正确的值。 对于除了时间戳外的日期时间类型，默认值会是该类型的“零值”。时间戳类型的默认值会是当前的时间。 对于除枚举以外的字符串类型，默认值会是空字符串。对于枚举类型，默认值是枚举中的第一个值。  </description>
    </item>
    
    <item>
      <title>数据类型的默认值</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/data-types/default-values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/data-types/default-values/</guid>
      <description>数据类型的默认值 在一个数据类型描述中的 DEFAULT value 段描述了一个列的默认值。这个默认值必须是常量，不可以是一个函数或者是表达式。但是对于时间类型，可以例外的使用 NOW、CURRENT_TIMESTAMP、LOCALTIME、LOCALTIMESTAMP 等函数作为 DATETIME 或者 TIMESTAMP 的默认值。
BLOB、TEXT 以及 JSON 不可以设置默认值。
如果一个列的定义中没有 DEFAULT 的设置。TiDB 按照如下的规则决定:
 如果该类型可以使用 NULL 作为值，那么这个列会在定义时添加隐式的默认值设置 DEFAULT NULL。 如果该类型无法使用 NULL 作为值，那么这个列在定义时不会添加隐式的默认值设置。  对于一个设置了 NOT NULL 但是没有显式设置 DEFAULT 的列，当 INSERT、REPLACE 没有涉及到该列的值时，TiDB 根据当时的 SQL_MODE 进行不同的行为：
 如果此时是 strict sql mode，在事务中的语句会导致事务失败并回滚，非事务中的语句会直接报错。 如果此时不是 strict sql mode，TiDB 会为这列赋值为列数据类型的隐式默认值。  此时隐式默认值的设置按照如下规则：
 对于数值类型，它们的默认值是 0。当有 AUTO_INCREMENT 参数时，默认值会按照增量情况赋予正确的值。 对于除了时间戳外的日期时间类型，默认值会是该类型的“零值”。时间戳类型的默认值会是当前的时间。 对于除枚举以外的字符串类型，默认值会是空字符串。对于枚举类型，默认值是枚举中的第一个值。  </description>
    </item>
    
    <item>
      <title>数据类型的默认值</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/data-types/default-values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/data-types/default-values/</guid>
      <description>数据类型的默认值 在一个数据类型描述中的 DEFAULT value 段描述了一个列的默认值。这个默认值必须是常量，不可以是一个函数或者是表达式。但是对于时间类型，可以例外的使用 NOW、CURRENT_TIMESTAMP、LOCALTIME、LOCALTIMESTAMP 等函数作为 DATETIME 或者 TIMESTAMP 的默认值。
BLOB、TEXT 以及 JSON 不可以设置默认值。
如果一个列的定义中没有 DEFAULT 的设置。TiDB 按照如下的规则决定:
 如果该类型可以使用 NULL 作为值，那么这个列会在定义时添加隐式的默认值设置 DEFAULT NULL。 如果该类型无法使用 NULL 作为值，那么这个列在定义时不会添加隐式的默认值设置。  对于一个设置了 NOT NULL 但是没有显式设置 DEFAULT 的列，当 INSERT、REPLACE 没有涉及到该列的值时，TiDB 根据当时的 SQL_MODE 进行不同的行为：
 如果此时是 strict sql mode，在事务中的语句会导致事务失败并回滚，非事务中的语句会直接报错。 如果此时不是 strict sql mode，TiDB 会为这列赋值为列数据类型的隐式默认值。  此时隐式默认值的设置按照如下规则：
 对于数值类型，它们的默认值是 0。当有 AUTO_INCREMENT 参数时，默认值会按照增量情况赋予正确的值。 对于除了时间戳外的日期时间类型，默认值会是该类型的“零值”。时间戳类型的默认值会是当前的时间。 对于除枚举以外的字符串类型，默认值会是空字符串。对于枚举类型，默认值是枚举中的第一个值。  </description>
    </item>
    
    <item>
      <title>数据类型的默认值</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/data-types/default-values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/data-types/default-values/</guid>
      <description>数据类型的默认值 在一个数据类型描述中的 DEFAULT value 段描述了一个列的默认值。这个默认值必须是常量，不可以是一个函数或者是表达式。但是对于时间类型，可以例外的使用 NOW、CURRENT_TIMESTAMP、LOCALTIME、LOCALTIMESTAMP 等函数作为 DATETIME 或者 TIMESTAMP 的默认值。
BLOB、TEXT 以及 JSON 不可以设置默认值。
如果一个列的定义中没有 DEFAULT 的设置。TiDB 按照如下的规则决定:
 如果该类型可以使用 NULL 作为值，那么这个列会在定义时添加隐式的默认值设置 DEFAULT NULL。 如果该类型无法使用 NULL 作为值，那么这个列在定义时不会添加隐式的默认值设置。  对于一个设置了 NOT NULL 但是没有显式设置 DEFAULT 的列，当 INSERT、REPLACE 没有涉及到该列的值时，TiDB 根据当时的 SQL_MODE 进行不同的行为：
 如果此时是 strict sql mode，在事务中的语句会导致事务失败并回滚，非事务中的语句会直接报错。 如果此时不是 strict sql mode，TiDB 会为这列赋值为列数据类型的隐式默认值。  此时隐式默认值的设置按照如下规则：
 对于数值类型，它们的默认值是 0。当有 AUTO_INCREMENT 参数时，默认值会按照增量情况赋予正确的值。 对于除了时间戳外的日期时间类型，默认值会是该类型的“零值”。时间戳类型的默认值会是当前的时间。 对于除枚举以外的字符串类型，默认值会是空字符串。对于枚举类型，默认值是枚举中的第一个值。  </description>
    </item>
    
    <item>
      <title>数据迁移概述</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/migrate/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/migrate/overview/</guid>
      <description>数据迁移概述 本文档介绍了 TiDB 提供的数据迁移工具，以及不同迁移场景下如何选择迁移工具，从而将数据从 MySQL 或 CSV 数据源迁移到 TiDB。
迁移工具 在上述数据迁移过程中会用到如下工具：
 Mydumper：用于从 MySQL 导出数据。建议使用 Mydumper，而非 mysqldump。 Loader：用于将 Mydumper 导出格式的数据导入到 TiDB。 Syncer：用于将数据从 MySQL 增量同步到 TiDB。 DM (Data Migration)：集成了 Mydumper、Loader、Syncer 的功能，支持 MySQL 数据的全量导出和到 TiDB 的全量导入，还支持 MySQL binlog 数据到 TiDB 的增量同步。 TiDB Lightning：用于将全量数据高速导入到 TiDB 集群。例如，如果要导入超过 1TiB 的数据，使用 Loader 往往需花费几十个小时，而使用 TiDB-Lightning 的导入速度至少是 Loader 的三倍。  迁移场景 本小节将通过几个示例场景来说明如何选择和使用 TiDB 的迁移工具。
MySQL 数据的全量迁移 要将数据从 MySQL 全量迁移至 TiDB，可以采用以下三种方案中一种：
 Mydumper + Loader：先使用 Mydumper 将数据从 MySQL 导出，然后使用 Loader 将数据导入至 TiDB。 Mydumper + TiDB Lightning：先使用 Mydumper 将数据从 MySQL 导出，然后使用 TiDB Lightning 将数据导入至 TiDB。 DM：直接使用 DM 将数据从 MySQL 导出，然后将数据导入至 TiDB。  详细操作参见 MySQL 数据到 TiDB 的全量迁移。</description>
    </item>
    
    <item>
      <title>新闻报道</title>
      <link>https://pingcap.com/about-cn/news/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/news/</guid>
      <description>最新技术观点、产品发展路径、企业动态、媒体对话，展现 TiDB 研发背后的真实思考过程。</description>
    </item>
    
    <item>
      <title>日志收集</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/log-collecting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/log-collecting/</guid>
      <description>日志收集 系统与程序的运行日志对排查问题以及实现一些自动化操作可能非常有用。本文将简要说明收集 TiDB 及相关组件日志的方法。
TiDB 与 Kubernetes 组件运行日志 通过 TiDB Operator 部署的 TiDB 各组件默认将日志输出在容器的 stdout 和 stderr 中。对于 Kubernetes 而言，这些日志会被存放在宿主机的 /var/log/containers 目录下，并且文件名中包含了 Pod 和容器名称等信息。因此，对容器中应用的日志收集可以直接在宿主机上完成。
如果在你的现有基础设施中已经有用于收集日志的系统，只需要通过常规方法将 Kubernetes 所在的宿主机上的 /var/log/containers/*.log 文件加入采集范围即可；如果没有可用的日志收集系统，或者希望部署一套独立的系统用于收集相关日志，也可以使用你熟悉的任意日志收集系统或方案。
Kubernetes 官方文档中提供了 ElasticSearch 和 Stackdriver 两种日志收集方案可供参考。
常见的可用于收集 Kubernetes 日志的开源工具有：
 Fluentd Fluent-bit Filebeat Logstash  收集到的日志通常可以汇总存储在某一特定的服务器上，或存放到 ElasticSearch 等专用的存储、分析系统当中。
一些云服务商或专门的性能监控服务提供商也有各自的免费或收费的日志收集方案可以选择。
如果不通过单独的日志收集工具汇总日志，你也可以直接使用 kubectl 工具查看某个容器的运行日志，但这一方法无法查看已销毁容器的日志：
 kubectl logs -n &amp;lt;namespace&amp;gt; &amp;lt;tidbPodName&amp;gt; 若需查看容器重启之前的日志，可以在执行上述命令时添加 -p 参数。
如果需要从多个 Pod 获取日志，可以使用 stern：
 stern -n &amp;lt;namespace&amp;gt; tidb -c slowlog TiDB 慢查询日志 对于 3.</description>
    </item>
    
    <item>
      <title>日志收集</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/log-collecting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/log-collecting/</guid>
      <description>日志收集 系统与程序的运行日志对排查问题以及实现一些自动化操作可能非常有用。本文将简要说明收集 TiDB 及相关组件日志的方法。
TiDB 与 Kubernetes 组件运行日志 通过 TiDB Operator 部署的 TiDB 各组件默认将日志输出在容器的 stdout 和 stderr 中。对于 Kubernetes 而言，这些日志会被存放在宿主机的 /var/log/containers 目录下，并且文件名中包含了 Pod 和容器名称等信息。因此，对容器中应用的日志收集可以直接在宿主机上完成。
如果在你的现有基础设施中已经有用于收集日志的系统，只需要通过常规方法将 Kubernetes 所在的宿主机上的 /var/log/containers/*.log 文件加入采集范围即可；如果没有可用的日志收集系统，或者希望部署一套独立的系统用于收集相关日志，也可以使用你熟悉的任意日志收集系统或方案。
Kubernetes 官方文档中提供了 ElasticSearch 和 Stackdriver 两种日志收集方案可供参考。
常见的可用于收集 Kubernetes 日志的开源工具有：
 Fluentd Fluent-bit Filebeat Logstash  收集到的日志通常可以汇总存储在某一特定的服务器上，或存放到 ElasticSearch 等专用的存储、分析系统当中。
一些云服务商或专门的性能监控服务提供商也有各自的免费或收费的日志收集方案可以选择。
如果不通过单独的日志收集工具汇总日志，你也可以直接使用 kubectl 工具查看某个容器的运行日志，但这一方法无法查看已销毁容器的日志：
 kubectl logs -n &amp;lt;namespace&amp;gt; &amp;lt;tidbPodName&amp;gt; 若需查看容器重启之前的日志，可以在执行上述命令时添加 -p 参数。
如果需要从多个 Pod 获取日志，可以使用 stern：
 stern -n &amp;lt;namespace&amp;gt; tidb -c slowlog TiDB 慢查询日志 对于 3.</description>
    </item>
    
    <item>
      <title>日志收集</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/log-collecting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/log-collecting/</guid>
      <description>日志收集 系统与程序的运行日志对排查问题以及实现一些自动化操作可能非常有用。本文将简要说明收集 TiDB 及相关组件日志的方法。
TiDB 与 Kubernetes 组件运行日志 通过 TiDB Operator 部署的 TiDB 各组件默认将日志输出在容器的 stdout 和 stderr 中。对于 Kubernetes 而言，这些日志会被存放在宿主机的 /var/log/containers 目录下，并且文件名中包含了 Pod 和容器名称等信息。因此，对容器中应用的日志收集可以直接在宿主机上完成。
如果在你的现有基础设施中已经有用于收集日志的系统，只需要通过常规方法将 Kubernetes 所在的宿主机上的 /var/log/containers/*.log 文件加入采集范围即可；如果没有可用的日志收集系统，或者希望部署一套独立的系统用于收集相关日志，也可以使用你熟悉的任意日志收集系统或方案。
Kubernetes 官方文档中提供了 ElasticSearch 和 Stackdriver 两种日志收集方案可供参考。
常见的可用于收集 Kubernetes 日志的开源工具有：
 Fluentd Fluent-bit Filebeat Logstash  收集到的日志通常可以汇总存储在某一特定的服务器上，或存放到 ElasticSearch 等专用的存储、分析系统当中。
一些云服务商或专门的性能监控服务提供商也有各自的免费或收费的日志收集方案可以选择。
如果不通过单独的日志收集工具汇总日志，你也可以直接使用 kubectl 工具查看某个容器的运行日志，但这一方法无法查看已销毁容器的日志：
 kubectl logs -n &amp;lt;namespace&amp;gt; &amp;lt;tidbPodName&amp;gt; 若需查看容器重启之前的日志，可以在执行上述命令时添加 -p 参数。
如果需要从多个 Pod 获取日志，可以使用 stern：
 stern -n &amp;lt;namespace&amp;gt; tidb -c slowlog TiDB 慢查询日志 对于 3.</description>
    </item>
    
    <item>
      <title>日期和时间函数</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/date-and-time-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/date-and-time-functions/</guid>
      <description>日期和时间函数 TiDB 支持使用 MySQL 5.7 中提供的所有日期和时间函数。
日期时间函数表    函数名 功能描述     ADDDATE() 将时间间隔添加到日期上   ADDTIME() 时间数值相加   CONVERT_TZ() 转换时区   CURDATE() 返回当前日期   CURRENT_DATE(), CURRENT_DATE 与 CURDATE() 同义   CURRENT_TIME(), CURRENT_TIME 与 CURTIME() 同义   CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP 与 NOW() 同义   CURTIME() 返回当前时间   DATE() 从日期或日期/时间表达式中提取日期部分   DATE_ADD() 将时间间隔添加到日期上   DATE_FORMAT() 返回满足指定格式的日期/时间   DATE_SUB() 从日期减去指定的时间间隔   DATEDIFF() 返回两个日期间隔的天数   DAY() 与 DAYOFMONTH() 同义   DAYNAME() 返回星期名称   DAYOFMONTH() 返回参数对应的天数部分(1-31)   DAYOFWEEK() 返回参数对应的星期下标   DAYOFYEAR() 返回参数代表一年的哪一天 (1-366)   EXTRACT() 提取日期/时间中的单独部分   FROM_DAYS() 将天数转化为日期   FROM_UNIXTIME() 将 Unix 时间戳格式化为日期   GET_FORMAT() 返回满足日期格式的字符串   HOUR() 提取日期/时间表达式中的小时部分   LAST_DAY 返回参数中月份的最后一天   LOCALTIME(), LOCALTIME 与 NOW() 同义   LOCALTIMESTAMP, LOCALTIMESTAMP() 与 NOW() 同义   MAKEDATE() 根据给定的年份和一年中的天数生成一个日期   MAKETIME() 根据给定的时、分、秒生成一个时间   MICROSECOND() 返回参数的微秒部分   MINUTE() 返回参数的分钟部分   MONTH() 返回参数的月份部分   MONTHNAME() 返回参数的月份名称   NOW() 返回当前日期和时间   PERIOD_ADD() 在年-月表达式上添加一段时间(数个月)   PERIOD_DIFF() 返回间隔的月数   QUARTER() 返回参数对应的季度(1-4)   SEC_TO_TIME() 将秒数转化为 &amp;lsquo;HH:MM:SS&amp;rsquo; 的格式   SECOND() 返回秒数(0-59)   STR_TO_DATE() 将字符串转化为日期   SUBDATE() 当传入三个参数时作为 DATE_SUB() 的同义   SUBTIME() 从一个时间中减去一段时间   SYSDATE() 返回该方法执行时的时间   TIME() 返回参数的时间表达式部分   TIME_FORMAT() 格式化时间   TIME_TO_SEC() 返回参数对应的秒数   TIMEDIFF() 返回时间间隔   TIMESTAMP() 传入一个参数时候,该方法返回日期或日期/时间表达式, 传入两个参数时候, 返回参数的和   TIMESTAMPADD() 在日期/时间表达式上增加一段时间间隔   TIMESTAMPDIFF() 从日期/时间表达式中减去一段时间间隔   TO_DAYS() 将参数转化对应的天数(从第 0 年开始)   TO_SECONDS() 将日期或日期/时间参数转化为秒数(从第 0 年开始)   UNIX_TIMESTAMP() 返回一个 Unix 时间戳   UTC_DATE() 返回当前的 UTC 日期   UTC_TIME() 返回当前的 UTC 时间   UTC_TIMESTAMP() 返回当前的 UTC 日期和时间   WEEK() 返回参数所在的一年中的星期数   WEEKDAY() 返回星期下标   WEEKOFYEAR() 返回参数在日历中对应的一年中的星期数   YEAR() 返回参数对应的年数   YEARWEEK() 返回年数和星期数    </description>
    </item>
    
    <item>
      <title>日期和时间函数</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/date-and-time-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/date-and-time-functions/</guid>
      <description>日期和时间函数 TiDB 支持使用 MySQL 5.7 中提供的所有日期和时间函数。
日期时间函数表    函数名 功能描述     ADDDATE() 将时间间隔添加到日期上   ADDTIME() 时间数值相加   CONVERT_TZ() 转换时区   CURDATE() 返回当前日期   CURRENT_DATE(), CURRENT_DATE 与 CURDATE() 同义   CURRENT_TIME(), CURRENT_TIME 与 CURTIME() 同义   CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP 与 NOW() 同义   CURTIME() 返回当前时间   DATE() 从日期或日期/时间表达式中提取日期部分   DATE_ADD() 将时间间隔添加到日期上   DATE_FORMAT() 返回满足指定格式的日期/时间   DATE_SUB() 从日期减去指定的时间间隔   DATEDIFF() 返回两个日期间隔的天数   DAY() 与 DAYOFMONTH() 同义   DAYNAME() 返回星期名称   DAYOFMONTH() 返回参数对应的天数部分(1-31)   DAYOFWEEK() 返回参数对应的星期下标   DAYOFYEAR() 返回参数代表一年的哪一天 (1-366)   EXTRACT() 提取日期/时间中的单独部分   FROM_DAYS() 将天数转化为日期   FROM_UNIXTIME() 将 Unix 时间戳格式化为日期   GET_FORMAT() 返回满足日期格式的字符串   HOUR() 提取日期/时间表达式中的小时部分   LAST_DAY 返回参数中月份的最后一天   LOCALTIME(), LOCALTIME 与 NOW() 同义   LOCALTIMESTAMP, LOCALTIMESTAMP() 与 NOW() 同义   MAKEDATE() 根据给定的年份和一年中的天数生成一个日期   MAKETIME() 根据给定的时、分、秒生成一个时间   MICROSECOND() 返回参数的微秒部分   MINUTE() 返回参数的分钟部分   MONTH() 返回参数的月份部分   MONTHNAME() 返回参数的月份名称   NOW() 返回当前日期和时间   PERIOD_ADD() 在年-月表达式上添加一段时间(数个月)   PERIOD_DIFF() 返回间隔的月数   QUARTER() 返回参数对应的季度(1-4)   SEC_TO_TIME() 将秒数转化为 &amp;lsquo;HH:MM:SS&amp;rsquo; 的格式   SECOND() 返回秒数(0-59)   STR_TO_DATE() 将字符串转化为日期   SUBDATE() 当传入三个参数时作为 DATE_SUB() 的同义   SUBTIME() 从一个时间中减去一段时间   SYSDATE() 返回该方法执行时的时间   TIME() 返回参数的时间表达式部分   TIME_FORMAT() 格式化时间   TIME_TO_SEC() 返回参数对应的秒数   TIMEDIFF() 返回时间间隔   TIMESTAMP() 传入一个参数时候,该方法返回日期或日期/时间表达式, 传入两个参数时候, 返回参数的和   TIMESTAMPADD() 在日期/时间表达式上增加一段时间间隔   TIMESTAMPDIFF() 从日期/时间表达式中减去一段时间间隔   TO_DAYS() 将参数转化对应的天数(从第 0 年开始)   TO_SECONDS() 将日期或日期/时间参数转化为秒数(从第 0 年开始)   UNIX_TIMESTAMP() 返回一个 Unix 时间戳   UTC_DATE() 返回当前的 UTC 日期   UTC_TIME() 返回当前的 UTC 时间   UTC_TIMESTAMP() 返回当前的 UTC 日期和时间   WEEK() 返回参数所在的一年中的星期数   WEEKDAY() 返回星期下标   WEEKOFYEAR() 返回参数在日历中对应的一年中的星期数   YEAR() 返回参数对应的年数   YEARWEEK() 返回年数和星期数    </description>
    </item>
    
    <item>
      <title>日期和时间函数</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/date-and-time-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/date-and-time-functions/</guid>
      <description>日期和时间函数 TiDB 中日期和时间函数的使用方法与 MySQL 基本一致，详情参见: Date and Time Functions.
日期时间函数表    函数名 功能描述     ADDDATE() 将时间间隔添加到日期上   ADDTIME() 时间数值相加   CONVERT_TZ() 转换时区   CURDATE() 返回当前日期   CURRENT_DATE(), CURRENT_DATE 与 CURDATE() 同义   CURRENT_TIME(), CURRENT_TIME 与 CURTIME() 同义   CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP 与 NOW() 同义   CURTIME() 返回当前时间   DATE() 从日期或日期/时间表达式中提取日期部分   DATE_ADD() 将时间间隔添加到日期上   DATE_FORMAT() 返回满足指定格式的日期/时间   DATE_SUB() 从日期减去指定的时间间隔   DATEDIFF() 返回两个日期间隔的天数   DAY() 与 DAYOFMONTH() 同义   DAYNAME() 返回星期名称   DAYOFMONTH() 返回参数对应的天数部分(1-31)   DAYOFWEEK() 返回参数对应的星期下标   DAYOFYEAR() 返回参数代表一年的哪一天 (1-366)   EXTRACT() 提取日期/时间中的单独部分   FROM_DAYS() 将天数转化为日期   FROM_UNIXTIME() 将 Unix 时间戳格式化为日期   GET_FORMAT() 返回满足日期格式的字符串   HOUR() 提取日期/时间表达式中的小时部分   LAST_DAY 返回参数中月份的最后一天   LOCALTIME(), LOCALTIME 与 NOW() 同义   LOCALTIMESTAMP, LOCALTIMESTAMP() 与 NOW() 同义   MAKEDATE() 根据给定的年份和一年中的天数生成一个日期   MAKETIME() 根据给定的时、分、秒生成一个时间   MICROSECOND() 返回参数的微秒部分   MINUTE() 返回参数的分钟部分   MONTH() 返回参数的月份部分   MONTHNAME() 返回参数的月份名称   NOW() 返回当前日期和时间   PERIOD_ADD() 在年-月表达式上添加一段时间(数个月)   PERIOD_DIFF() 返回间隔的月数   QUARTER() 返回参数对应的季度(1-4)   SEC_TO_TIME() 将秒数转化为 &amp;lsquo;HH:MM:SS&amp;rsquo; 的格式   SECOND() 返回秒数(0-59)   STR_TO_DATE() 将字符串转化为日期   SUBDATE() 当传入三个参数时作为 DATE_SUB() 的同义   SUBTIME() 从一个时间中减去一段时间   SYSDATE() 返回该方法执行时的时间   TIME() 返回参数的时间表达式部分   TIME_FORMAT() 格式化时间   TIME_TO_SEC() 返回参数对应的秒数   TIMEDIFF() 返回时间间隔   TIMESTAMP() 传入一个参数时候,该方法返回日期或日期/时间表达式, 传入两个参数时候, 返回参数的和   TIMESTAMPADD() 在日期/时间表达式上增加一段时间间隔   TIMESTAMPDIFF() 从日期/时间表达式中减去一段时间间隔   TO_DAYS() 将参数转化对应的天数(从第 0 年开始)   TO_SECONDS() 将日期或日期/时间参数转化为秒数(从第 0 年开始)   UNIX_TIMESTAMP() 返回一个 Unix 时间戳   UTC_DATE() 返回当前的 UTC 日期   UTC_TIME() 返回当前的 UTC 时间   UTC_TIMESTAMP() 返回当前的 UTC 日期和时间   WEEK() 返回参数所在的一年中的星期数   WEEKDAY() 返回星期下标   WEEKOFYEAR() 返回参数在日历中对应的一年中的星期数   YEAR() 返回参数对应的年数   YEARWEEK() 返回年数和星期数    </description>
    </item>
    
    <item>
      <title>日期和时间函数</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/date-and-time-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/date-and-time-functions/</guid>
      <description>日期和时间函数 TiDB 支持使用 MySQL 5.7 中提供的所有日期和时间函数。
日期时间函数表    函数名 功能描述     ADDDATE() 将时间间隔添加到日期上   ADDTIME() 时间数值相加   CONVERT_TZ() 转换时区   CURDATE() 返回当前日期   CURRENT_DATE(), CURRENT_DATE 与 CURDATE() 同义   CURRENT_TIME(), CURRENT_TIME 与 CURTIME() 同义   CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP 与 NOW() 同义   CURTIME() 返回当前时间   DATE() 从日期或日期/时间表达式中提取日期部分   DATE_ADD() 将时间间隔添加到日期上   DATE_FORMAT() 返回满足指定格式的日期/时间   DATE_SUB() 从日期减去指定的时间间隔   DATEDIFF() 返回两个日期间隔的天数   DAY() 与 DAYOFMONTH() 同义   DAYNAME() 返回星期名称   DAYOFMONTH() 返回参数对应的天数部分(1-31)   DAYOFWEEK() 返回参数对应的星期下标   DAYOFYEAR() 返回参数代表一年的哪一天 (1-366)   EXTRACT() 提取日期/时间中的单独部分   FROM_DAYS() 将天数转化为日期   FROM_UNIXTIME() 将 Unix 时间戳格式化为日期   GET_FORMAT() 返回满足日期格式的字符串   HOUR() 提取日期/时间表达式中的小时部分   LAST_DAY 返回参数中月份的最后一天   LOCALTIME(), LOCALTIME 与 NOW() 同义   LOCALTIMESTAMP, LOCALTIMESTAMP() 与 NOW() 同义   MAKEDATE() 根据给定的年份和一年中的天数生成一个日期   MAKETIME() 根据给定的时、分、秒生成一个时间   MICROSECOND() 返回参数的微秒部分   MINUTE() 返回参数的分钟部分   MONTH() 返回参数的月份部分   MONTHNAME() 返回参数的月份名称   NOW() 返回当前日期和时间   PERIOD_ADD() 在年-月表达式上添加一段时间(数个月)   PERIOD_DIFF() 返回间隔的月数   QUARTER() 返回参数对应的季度(1-4)   SEC_TO_TIME() 将秒数转化为 &amp;lsquo;HH:MM:SS&amp;rsquo; 的格式   SECOND() 返回秒数(0-59)   STR_TO_DATE() 将字符串转化为日期   SUBDATE() 当传入三个参数时作为 DATE_SUB() 的同义   SUBTIME() 从一个时间中减去一段时间   SYSDATE() 返回该方法执行时的时间   TIME() 返回参数的时间表达式部分   TIME_FORMAT() 格式化时间   TIME_TO_SEC() 返回参数对应的秒数   TIMEDIFF() 返回时间间隔   TIMESTAMP() 传入一个参数时候,该方法返回日期或日期/时间表达式, 传入两个参数时候, 返回参数的和   TIMESTAMPADD() 在日期/时间表达式上增加一段时间间隔   TIMESTAMPDIFF() 从日期/时间表达式中减去一段时间间隔   TO_DAYS() 将参数转化对应的天数(从第 0 年开始)   TO_SECONDS() 将日期或日期/时间参数转化为秒数(从第 0 年开始)   UNIX_TIMESTAMP() 返回一个 Unix 时间戳   UTC_DATE() 返回当前的 UTC 日期   UTC_TIME() 返回当前的 UTC 时间   UTC_TIMESTAMP() 返回当前的 UTC 日期和时间   WEEK() 返回参数所在的一年中的星期数   WEEKDAY() 返回星期下标   WEEKOFYEAR() 返回参数在日历中对应的一年中的星期数   YEAR() 返回参数对应的年数   YEARWEEK() 返回年数和星期数    </description>
    </item>
    
    <item>
      <title>日期和时间类型</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/data-types/date-and-time/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/data-types/date-and-time/</guid>
      <description>日期和时间类型 TiDB 支持 MySQL 所有的日期和时间类型，包括 DATE、DATETIME、TIMESTAMP、TIME 以及 YEAR，完整信息参考这篇文档。
类型定义 DATE 类型 DATE 类型的格式为 YYYY-MM-DD，支持的范围是 1000-01-01 到 9999-12-31。
 DATE TIME 类型 TIME 类型的格式为 HH:MM:SS[.fraction]，支持的范围是 -838:59:59.000000 到 838:59:59.000000。TIME 不仅可用于指示一天内的时间，还可用于指两个事件之间的时间间隔。fsp 参数表示秒精度，取值范围为：0 ~ 6，默认值为 0。
 TIME[(fsp)]  注意：
注意 TIME 的缩写形式。例如，&amp;lsquo;11:12&amp;rsquo; 表示 &amp;lsquo;11:12:00&amp;rsquo; 而不是 &amp;lsquo;00:11:12&amp;rsquo;。但是，&amp;lsquo;1112&amp;rsquo; 表示 &amp;lsquo;00:11:12&amp;rsquo;。这些差异取决于 : 字符的存在与否。
 DATETIME 类型 DATETIME 类型是日期和时间的组合，格式为 YYYY-MM-DD HH:MM:SS[.fraction]。支持的范围是 1000-01-01 00:00:00.000000 到 9999-12-31 23:59:59.000000。fsp 参数表示秒精度，取值范围为 0~6，默认值为 0。
 DATETIME[(fsp)] TIMESTAMP 类型 TIMESTAMP 类型包含日期和时间，支持的范围是 1970-01-01 00:00:01.000000 到 2038-01-19 03:14:07.</description>
    </item>
    
    <item>
      <title>日期和时间类型</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/data-types/date-and-time/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/data-types/date-and-time/</guid>
      <description>日期和时间类型 TiDB 支持 MySQL 所有的日期和时间类型，包括 DATE、DATETIME、TIMESTAMP、TIME 以及 YEAR，完整信息参考这篇文档。
类型定义 DATE 类型 DATE 类型的格式为 YYYY-MM-DD，支持的范围是 1000-01-01 到 9999-12-31。
 DATE TIME 类型 TIME 类型的格式为 HH:MM:SS[.fraction]，支持的范围是 -838:59:59.000000 到 838:59:59.000000。TIME 不仅可用于指示一天内的时间，还可用于指两个事件之间的时间间隔。fsp 参数表示秒精度，取值范围为：0 ~ 6，默认值为 0。
 TIME[(fsp)]  注意：
注意 TIME 的缩写形式。例如，&amp;lsquo;11:12&amp;rsquo; 表示 &amp;lsquo;11:12:00&amp;rsquo; 而不是 &amp;lsquo;00:11:12&amp;rsquo;。但是，&amp;lsquo;1112&amp;rsquo; 表示 &amp;lsquo;00:11:12&amp;rsquo;。这些差异取决于 : 字符的存在与否。
 DATETIME 类型 DATETIME 类型是日期和时间的组合，格式为 YYYY-MM-DD HH:MM:SS[.fraction]。支持的范围是 1000-01-01 00:00:00.000000 到 9999-12-31 23:59:59.000000。fsp 参数表示秒精度，取值范围为 0~6，默认值为 0。
 DATETIME[(fsp)] TIMESTAMP 类型 TIMESTAMP 类型包含日期和时间，支持的范围是 1970-01-01 00:00:01.000000 到 2038-01-19 03:14:07.</description>
    </item>
    
    <item>
      <title>日期和时间类型</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/data-types/date-and-time/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/data-types/date-and-time/</guid>
      <description>日期和时间类型 TiDB 支持 MySQL 所有的日期和时间类型，包括 DATE、DATETIME、TIMESTAMP、TIME 以及 YEAR，完整信息参考这篇文档。
类型定义 DATE 类型 DATE 类型的格式为 YYYY-MM-DD，支持的范围是 1000-01-01 到 9999-12-31。
 DATE TIME 类型 TIME 类型的格式为 HH:MM:SS[.fraction]，支持的范围是 -838:59:59.000000 到 838:59:59.000000。TIME 不仅可用于指示一天内的时间，还可用于指两个事件之间的时间间隔。fsp 参数表示秒精度，取值范围为：0 ~ 6，默认值为 0。
 TIME[(fsp)]  注意：
注意 TIME 的缩写形式。例如，&amp;lsquo;11:12&amp;rsquo; 表示 &amp;lsquo;11:12:00&amp;rsquo; 而不是 &amp;lsquo;00:11:12&amp;rsquo;。但是，&amp;lsquo;1112&amp;rsquo; 表示 &amp;lsquo;00:11:12&amp;rsquo;。这些差异取决于 : 字符的存在与否。
 DATETIME 类型 DATETIME 类型是日期和时间的组合，格式为 YYYY-MM-DD HH:MM:SS[.fraction]。支持的范围是 1000-01-01 00:00:00.000000 到 9999-12-31 23:59:59.000000。fsp 参数表示秒精度，取值范围为 0~6，默认值为 0。
 DATETIME[(fsp)] TIMESTAMP 类型 TIMESTAMP 类型包含日期和时间，支持的范围是 1970-01-01 00:00:01.000000 到 2038-01-19 03:14:07.</description>
    </item>
    
    <item>
      <title>日期和时间类型</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/data-types/date-and-time/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/data-types/date-and-time/</guid>
      <description>日期和时间类型 TiDB 支持 MySQL 所有的日期和时间类型，包括 DATE、DATETIME、TIMESTAMP、TIME 以及 YEAR，完整信息参考这篇文档。
类型定义 DATE 类型 DATE 类型的格式为 YYYY-MM-DD，支持的范围是 1000-01-01 到 9999-12-31。
 DATE TIME 类型 TIME 类型的格式为 HH:MM:SS[.fraction]，支持的范围是 -838:59:59.000000 到 838:59:59.000000。TIME 不仅可用于指示一天内的时间，还可用于指两个事件之间的时间间隔。fsp 参数表示秒精度，取值范围为：0 ~ 6，默认值为 0。
 TIME[(fsp)]  注意：
注意 TIME 的缩写形式。例如，&amp;lsquo;11:12&amp;rsquo; 表示 &amp;lsquo;11:12:00&amp;rsquo; 而不是 &amp;lsquo;00:11:12&amp;rsquo;。但是，&amp;lsquo;1112&amp;rsquo; 表示 &amp;lsquo;00:11:12&amp;rsquo;。这些差异取决于 : 字符的存在与否。
 DATETIME 类型 DATETIME 类型是日期和时间的组合，格式为 YYYY-MM-DD HH:MM:SS[.fraction]。支持的范围是 1000-01-01 00:00:00.000000 到 9999-12-31 23:59:59.000000。fsp 参数表示秒精度，取值范围为 0~6，默认值为 0。
 DATETIME[(fsp)] TIMESTAMP 类型 TIMESTAMP 类型包含日期和时间，支持的范围是 1970-01-01 00:00:01.000000 到 2038-01-19 03:14:07.</description>
    </item>
    
    <item>
      <title>时区支持</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/configure/time-zone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/configure/time-zone/</guid>
      <description>时区支持 TiDB 使用的时区由 time_zone 全局变量和 session 变量决定。time_zone 的默认值是 System，System 对应的实际时区在 TiDB 集群 bootstrap 初始化时设置。具体逻辑如下:
 优先使用 TZ 环境变量 如果失败，则从 /etc/localtime 的实际软链地址提取。 如果上面两种都失败则使用 UTC 作为系统时区。  在运行过程中可以修改全局时区：
 SET GLOBAL time_zone = timezone; TiDB 还可以通过设置 session 变量 time_zone 为每个连接维护各自的时区。默认条件下，这个值取的是全局变量 time_zone 的值。修改 session 使用的时区：
 SET time_zone = timezone; 查看当前使用的时区的值：
 SELECT @@global.time_zone, @@session.time_zone; 设置 time_zone 的值的格式：
 &amp;lsquo;SYSTEM&amp;rsquo; 表明使用系统时间 相对于 UTC 时间的偏移，比如 &amp;lsquo;+10:00&amp;rsquo; 或者 &amp;lsquo;-6:00&amp;rsquo; 某个时区的名字，比如 &amp;lsquo;Europe/Helsinki&amp;rsquo;， &amp;lsquo;US/Eastern&amp;rsquo; 或 &amp;lsquo;MET&amp;rsquo;  NOW() 和 CURTIME() 的返回值都受到时区设置的影响。</description>
    </item>
    
    <item>
      <title>时区支持</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/configure/time-zone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/configure/time-zone/</guid>
      <description>时区支持 TiDB 使用的时区由 time_zone 全局变量和 session 变量决定。time_zone 的默认值是 System，System 对应的实际时区在 TiDB 集群 bootstrap 初始化时设置。具体逻辑如下:
 优先使用 TZ 环境变量 如果失败，则从 /etc/localtime 的实际软链地址提取。 如果上面两种都失败则使用 UTC 作为系统时区。  在运行过程中可以修改全局时区：
 SET GLOBAL time_zone = timezone; TiDB 还可以通过设置 session 变量 time_zone 为每个连接维护各自的时区。默认条件下，这个值取的是全局变量 time_zone 的值。修改 session 使用的时区：
 SET time_zone = timezone; 查看当前使用的时区的值：
 SELECT @@global.time_zone, @@session.time_zone; 设置 time_zone 的值的格式：
 &amp;lsquo;SYSTEM&amp;rsquo; 表明使用系统时间 相对于 UTC 时间的偏移，比如 &amp;lsquo;+10:00&amp;rsquo; 或者 &amp;lsquo;-6:00&amp;rsquo; 某个时区的名字，比如 &amp;lsquo;Europe/Helsinki&amp;rsquo;， &amp;lsquo;US/Eastern&amp;rsquo; 或 &amp;lsquo;MET&amp;rsquo;  NOW() 和 CURTIME() 的返回值都受到时区设置的影响。</description>
    </item>
    
    <item>
      <title>时区支持</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/configure/time-zone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/configure/time-zone/</guid>
      <description>时区支持 TiDB 使用的时区由 time_zone 全局变量和 session 变量决定。time_zone 的默认值是 System，System 对应的实际时区在 TiDB 集群 bootstrap 初始化时设置。具体逻辑如下:
 优先使用 TZ 环境变量 如果失败，则从 /etc/localtime 的实际软链地址提取。 如果上面两种都失败则使用 UTC 作为系统时区。  在运行过程中可以修改全局时区：
mysql&amp;gt; SET GLOBAL time_zone = timezone; TiDB 还可以通过设置 session 变量 time_zone 为每个连接维护各自的时区。默认条件下，这个值取的是全局变量 time_zone 的值。修改 session 使用的时区：
mysql&amp;gt; SET time_zone = timezone; 查看当前使用的时区的值：
mysql&amp;gt; SELECT @@global.time_zone, @@session.time_zone; 设置 time_zone 的值的格式：
 &amp;lsquo;SYSTEM&amp;rsquo; 表明使用系统时间 相对于 UTC 时间的偏移，比如 &amp;lsquo;+10:00&amp;rsquo; 或者 &amp;lsquo;-6:00&amp;rsquo; 某个时区的名字，比如 &amp;lsquo;Europe/Helsinki&amp;rsquo;， &amp;lsquo;US/Eastern&amp;rsquo; 或 &amp;lsquo;MET&amp;rsquo;  NOW() 和 CURTIME() 的返回值都受到时区设置的影响。</description>
    </item>
    
    <item>
      <title>时区支持</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/configure/time-zone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/configure/time-zone/</guid>
      <description>时区支持 TiDB 使用的时区由 time_zone 全局变量和 session 变量决定。time_zone 的默认值是 System，System 对应的实际时区在 TiDB 集群 bootstrap 初始化时设置。具体逻辑如下:
 优先使用 TZ 环境变量 如果失败，则从 /etc/localtime 的实际软链地址提取。 如果上面两种都失败则使用 UTC 作为系统时区。  在运行过程中可以修改全局时区：
 SET GLOBAL time_zone = timezone; TiDB 还可以通过设置 session 变量 time_zone 为每个连接维护各自的时区。默认条件下，这个值取的是全局变量 time_zone 的值。修改 session 使用的时区：
 SET time_zone = timezone; 查看当前使用的时区的值：
 SELECT @@global.time_zone, @@session.time_zone; 设置 time_zone 的值的格式：
 &amp;lsquo;SYSTEM&amp;rsquo; 表明使用系统时间 相对于 UTC 时间的偏移，比如 &amp;lsquo;+10:00&amp;rsquo; 或者 &amp;lsquo;-6:00&amp;rsquo; 某个时区的名字，比如 &amp;lsquo;Europe/Helsinki&amp;rsquo;， &amp;lsquo;US/Eastern&amp;rsquo; 或 &amp;lsquo;MET&amp;rsquo;  NOW() 和 CURTIME() 的返回值都受到时区设置的影响。</description>
    </item>
    
    <item>
      <title>术语表</title>
      <link>https://pingcap.com/docs-cn/dev/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/glossary/</guid>
      <description>了解 TiDB 相关术语。</description>
    </item>
    
    <item>
      <title>术语表</title>
      <link>https://pingcap.com/docs-cn/stable/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/glossary/</guid>
      <description>了解 TiDB 相关术语。</description>
    </item>
    
    <item>
      <title>术语表</title>
      <link>https://pingcap.com/docs-cn/v2.1/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/glossary/</guid>
      <description>了解 TiDB 相关术语。</description>
    </item>
    
    <item>
      <title>术语表</title>
      <link>https://pingcap.com/docs-cn/v3.1/glossary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/glossary/</guid>
      <description>了解 TiDB 相关术语。</description>
    </item>
    
    <item>
      <title>权限管理</title>
      <link>https://pingcap.com/docs-cn/dev/reference/security/privilege-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/security/privilege-system/</guid>
      <description>权限管理 TiDB 的权限管理系统按照 MySQL 的权限管理进行实现，TiDB 支持大部分的 MySQL 的语法和权限类型。
本文档主要介绍 TiDB 权限相关操作、各项操作需要的权限以及权限系统的实现。
权限相关操作 授予权限 授予 xxx 用户对数据库 test 的读权限：
 GRANT SELECT ON test.* TO &amp;#39;xxx&amp;#39;@&amp;#39;%&amp;#39;; 为 xxx 用户授予所有数据库，全部权限：
 GRANT ALL PRIVILEGES ON *.* TO &amp;#39;xxx&amp;#39;@&amp;#39;%&amp;#39;; GRANT 为一个不存在的用户授予权限时，默认并不会自动创建用户。该行为受 SQL Mode 中的 NO_AUTO_CREATE_USER 控制。 如果从 SQL Mode 中去掉 NO_AUTO_CREATE_USER，当 GRANT 的目标用户不存在时，TiDB 会自动创建用户。
 select @@sql_mode; | @@sql_mode | +-------------------------------------------------------------------------------------------------------------------------------------------+ | ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION | +-------------------------------------------------------------------------------------------------------------------------------------------+ 1 row in set (0.00 sec)  set @@sql_mode=&amp;#39;ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION&amp;#39;; Query OK, 0 rows affected (0.</description>
    </item>
    
    <item>
      <title>权限管理</title>
      <link>https://pingcap.com/docs-cn/stable/reference/security/privilege-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/security/privilege-system/</guid>
      <description>权限管理 TiDB 的权限管理系统按照 MySQL 的权限管理进行实现，TiDB 支持大部分的 MySQL 的语法和权限类型。
本文档主要介绍 TiDB 权限相关操作、各项操作需要的权限以及权限系统的实现。
权限相关操作 授予权限 授予 xxx 用户对数据库 test 的读权限：
 GRANT SELECT ON test.* TO &amp;#39;xxx&amp;#39;@&amp;#39;%&amp;#39;; 为 xxx 用户授予所有数据库，全部权限：
 GRANT ALL PRIVILEGES ON *.* TO &amp;#39;xxx&amp;#39;@&amp;#39;%&amp;#39;; GRANT 为一个不存在的用户授予权限时，默认并不会自动创建用户。该行为受 SQL Mode 中的 NO_AUTO_CREATE_USER 控制。 如果从 SQL Mode 中去掉 NO_AUTO_CREATE_USER，当 GRANT 的目标用户不存在时，TiDB 会自动创建用户。
 mysql&amp;gt; select @@sql_mode; | @@sql_mode | +-------------------------------------------------------------------------------------------------------------------------------------------+ | ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION | +-------------------------------------------------------------------------------------------------------------------------------------------+ 1 row in set (0.00 sec)  set @@sql_mode=&amp;#39;ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION&amp;#39;; Query OK, 0 rows affected (0.</description>
    </item>
    
    <item>
      <title>权限管理</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/security/privilege-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/security/privilege-system/</guid>
      <description>权限管理 TiDB 的权限管理系统按照 MySQL 的权限管理进行实现，TiDB 支持大部分的 MySQL 的语法和权限类型。
本文档主要介绍 TiDB 权限相关操作、各项操作需要的权限以及权限系统的实现。
权限相关操作 授予权限 授予 xxx 用户对数据库 test 的读权限：
 GRANT SELECT ON test.* TO &amp;#39;xxx&amp;#39;@&amp;#39;%&amp;#39;; 为 xxx 用户授予所有数据库，全部权限：
 GRANT ALL PRIVILEGES ON *.* TO &amp;#39;xxx&amp;#39;@&amp;#39;%&amp;#39;; GRANT 为一个不存在的用户授予权限时，默认并不会自动创建用户。该行为受 SQL Mode 中的 NO_AUTO_CREATE_USER 控制。 如果从 SQL Mode 中去掉 NO_AUTO_CREATE_USER，当 GRANT 的目标用户不存在时，TiDB 会自动创建用户。
 mysql&amp;gt; select @@sql_mode; | @@sql_mode | +-------------------------------------------------------------------------------------------------------------------------------------------+ | ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION | +-------------------------------------------------------------------------------------------------------------------------------------------+ 1 row in set (0.00 sec)  set @@sql_mode=&amp;#39;ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION&amp;#39;; Query OK, 0 rows affected (0.</description>
    </item>
    
    <item>
      <title>权限管理</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/security/privilege-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/security/privilege-system/</guid>
      <description>权限管理 TiDB 的权限管理系统按照 MySQL 的权限管理进行实现，TiDB 支持大部分的 MySQL 的语法和权限类型。
本文档主要介绍 TiDB 权限相关操作、各项操作需要的权限以及权限系统的实现。
权限相关操作 授予权限 授予 xxx 用户对数据库 test 的读权限：
 GRANT SELECT ON test.* TO &amp;#39;xxx&amp;#39;@&amp;#39;%&amp;#39;; 为 xxx 用户授予所有数据库，全部权限：
 GRANT ALL PRIVILEGES ON *.* TO &amp;#39;xxx&amp;#39;@&amp;#39;%&amp;#39;; GRANT 为一个不存在的用户授予权限时，默认并不会自动创建用户。该行为受 SQL Mode 中的 NO_AUTO_CREATE_USER 控制。 如果从 SQL Mode 中去掉 NO_AUTO_CREATE_USER，当 GRANT 的目标用户不存在时，TiDB 会自动创建用户。
 mysql&amp;gt; select @@sql_mode; | @@sql_mode | +-------------------------------------------------------------------------------------------------------------------------------------------+ | ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION | +-------------------------------------------------------------------------------------------------------------------------------------------+ 1 row in set (0.00 sec)  set @@sql_mode=&amp;#39;ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION&amp;#39;; Query OK, 0 rows affected (0.</description>
    </item>
    
    <item>
      <title>案例</title>
      <link>https://pingcap.com/cases-cn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/cases-cn/</guid>
      <description>作为一款定位于在线事务处理/在线分析处理的融合型数据库产品，TiDB 现已被 500 余家不同行业的领先企业应用在实际生产环境。</description>
    </item>
    
    <item>
      <title>注释语法</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/language-structure/comment-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/language-structure/comment-syntax/</guid>
      <description>注释语法 TiDB 支持三种注释风格：
 用 # 注释一行 用 -- 注释一行，用 -- 注释必须要在其之后留出至少一个空格。 用 /* */ 注释一块，可以注释多行。  例：
 SELECT 1+1; # 注释文字 +------+ | 1+1 | +------+ | 2 | +------+ 1 row in set (0.00 sec)  SELECT 1+1; -- 注释文字 +------+ | 1+1 | +------+ | 2 | +------+ 1 row in set (0.00 sec)  SELECT 1 /*这是行内注释文字 */ + 1; +--------+ | 1 + 1 | +--------+ | 2 | +--------+ 1 row in set (0.</description>
    </item>
    
    <item>
      <title>注释语法</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/language-structure/comment-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/language-structure/comment-syntax/</guid>
      <description>注释语法 TiDB 支持三种注释风格：
 用 # 注释一行 用 -- 注释一行，用 -- 注释必须要在其之后留出至少一个空格。 用 /* */ 注释一块，可以注释多行。  例：
 SELECT 1+1; # 注释文字 +------+ | 1+1 | +------+ | 2 | +------+ 1 row in set (0.00 sec)  SELECT 1+1; -- 注释文字 +------+ | 1+1 | +------+ | 2 | +------+ 1 row in set (0.00 sec)  SELECT 1 /*这是行内注释文字 */ + 1; +--------+ | 1 + 1 | +--------+ | 2 | +--------+ 1 row in set (0.</description>
    </item>
    
    <item>
      <title>注释语法</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/language-structure/comment-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/language-structure/comment-syntax/</guid>
      <description>注释语法 TiDB 支持三种注释风格：
 用 # 注释一行 用 -- 注释一行，用 -- 注释必须要在其之后留出至少一个空格。 用 /* */ 注释一块，可以注释多行。  例：
mysql&amp;gt; SELECT 1+1; # This comment continues to the end of line +------+ | 1+1 | +------+ | 2 | +------+ 1 row in set (0.00 sec) mysql&amp;gt; SELECT 1+1; -- This comment continues to the end of line +------+ | 1+1 | +------+ | 2 | +------+ 1 row in set (0.</description>
    </item>
    
    <item>
      <title>注释语法</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/language-structure/comment-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/language-structure/comment-syntax/</guid>
      <description>注释语法 TiDB 支持三种注释风格：
 用 # 注释一行 用 -- 注释一行，用 -- 注释必须要在其之后留出至少一个空格。 用 /* */ 注释一块，可以注释多行。  例：
 SELECT 1+1; # 注释文字 +------+ | 1+1 | +------+ | 2 | +------+ 1 row in set (0.00 sec)  SELECT 1+1; -- 注释文字 +------+ | 1+1 | +------+ | 2 | +------+ 1 row in set (0.00 sec)  SELECT 1 /*这是行内注释文字 */ + 1; +--------+ | 1 + 1 | +--------+ | 2 | +--------+ 1 row in set (0.</description>
    </item>
    
    <item>
      <title>海量 Region 集群调优最佳实践</title>
      <link>https://pingcap.com/docs-cn/dev/reference/best-practices/massive-regions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/best-practices/massive-regions/</guid>
      <description>了解海量 Region 导致性能问题的原因和优化方法。</description>
    </item>
    
    <item>
      <title>海量 Region 集群调优最佳实践</title>
      <link>https://pingcap.com/docs-cn/stable/reference/best-practices/massive-regions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/best-practices/massive-regions/</guid>
      <description>了解海量 Region 导致性能问题的原因和优化方法。</description>
    </item>
    
    <item>
      <title>海量 Region 集群调优最佳实践</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/best-practices/massive-regions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/best-practices/massive-regions/</guid>
      <description>了解海量 Region 导致性能问题的原因和优化方法。</description>
    </item>
    
    <item>
      <title>海量 Region 集群调优最佳实践</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/best-practices/massive-regions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/best-practices/massive-regions/</guid>
      <description>了解海量 Region 导致性能问题的原因和优化方法。</description>
    </item>
    
    <item>
      <title>滚动升级 Kubernetes 上的 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/upgrade/tidb-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/upgrade/tidb-cluster/</guid>
      <description>滚动升级 Kubernetes 上的 TiDB 集群 滚动更新 TiDB 集群时，会按 PD、TiKV、TiDB 的顺序，串行删除 Pod，并创建新版本的 Pod，当新版本的 Pod 正常运行后，再处理下一个 Pod。
滚动升级过程会自动处理 PD、TiKV 的 Leader 迁移与 TiDB 的 DDL Owner 迁移。因此，在多节点的部署拓扑下（最小环境：PD * 3、TiKV * 3、TiDB * 2），滚动更新 TiKV、PD 不会影响业务正常运行。
对于有连接重试功能的客户端，滚动更新 TiDB 同样不会影响业务。对于无法进行重试的客户端，滚动更新 TiDB 则会导致连接到被关闭节点的数据库连接失效，造成部分业务请求失败。对于这类业务，推荐在客户端添加重试功能或在低峰期进行 TiDB 的滚动升级操作。
滚动更新可以用于升级 TiDB 版本，也可以用于更新集群配置。
升级 TiDB 版本   修改集群的 values.yaml 文件中的 tidb.image、tikv.image、pd.image 的值为新版本镜像；
  执行 helm upgrade 命令进行升级：
 helm upgrade &amp;lt;release-name&amp;gt; pingcap/tidb-cluster -f values.yaml --version=&amp;lt;chart-version&amp;gt;   查看升级进度：</description>
    </item>
    
    <item>
      <title>滚动升级 Kubernetes 上的 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/upgrade/tidb-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/upgrade/tidb-cluster/</guid>
      <description>滚动升级 Kubernetes 上的 TiDB 集群 滚动更新 TiDB 集群时，会按 PD、TiKV、TiDB 的顺序，串行删除 Pod，并创建新版本的 Pod，当新版本的 Pod 正常运行后，再处理下一个 Pod。
滚动升级过程会自动处理 PD、TiKV 的 Leader 迁移与 TiDB 的 DDL Owner 迁移。因此，在多节点的部署拓扑下（最小环境：PD * 3、TiKV * 3、TiDB * 2），滚动更新 TiKV、PD 不会影响业务正常运行。
对于有连接重试功能的客户端，滚动更新 TiDB 同样不会影响业务。对于无法进行重试的客户端，滚动更新 TiDB 则会导致连接到被关闭节点的数据库连接失效，造成部分业务请求失败。对于这类业务，推荐在客户端添加重试功能或在低峰期进行 TiDB 的滚动升级操作。
滚动更新可以用于升级 TiDB 版本，也可以用于更新集群配置。
升级 TiDB 版本   修改集群的 values.yaml 文件中的 tidb.image、tikv.image、pd.image 的值为新版本镜像；
  执行 helm upgrade 命令进行升级：
 helm upgrade &amp;lt;release-name&amp;gt; pingcap/tidb-cluster -f values.yaml --version=&amp;lt;chart-version&amp;gt;   查看升级进度：</description>
    </item>
    
    <item>
      <title>滚动升级 Kubernetes 上的 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/upgrade/tidb-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/upgrade/tidb-cluster/</guid>
      <description>滚动升级 Kubernetes 上的 TiDB 集群 滚动更新 TiDB 集群时，会按 PD、TiKV、TiDB 的顺序，串行删除 Pod，并创建新版本的 Pod，当新版本的 Pod 正常运行后，再处理下一个 Pod。
滚动升级过程会自动处理 PD、TiKV 的 Leader 迁移与 TiDB 的 DDL Owner 迁移。因此，在多节点的部署拓扑下（最小环境：PD * 3、TiKV * 3、TiDB * 2），滚动更新 TiKV、PD 不会影响业务正常运行。
对于有连接重试功能的客户端，滚动更新 TiDB 同样不会影响业务。对于无法进行重试的客户端，滚动更新 TiDB 则会导致连接到被关闭节点的数据库连接失效，造成部分业务请求失败。对于这类业务，推荐在客户端添加重试功能或在低峰期进行 TiDB 的滚动升级操作。
滚动更新可以用于升级 TiDB 版本，也可以用于更新集群配置。
升级 TiDB 版本   修改集群的 values.yaml 文件中的 tidb.image、tikv.image、pd.image 的值为新版本镜像；
  执行 helm upgrade 命令进行升级：
 helm upgrade &amp;lt;release-name&amp;gt; pingcap/tidb-cluster -f values.yaml --version=&amp;lt;chart-version&amp;gt;   查看升级进度：</description>
    </item>
    
    <item>
      <title>理解 TiDB 执行计划</title>
      <link>https://pingcap.com/docs-cn/dev/reference/performance/understanding-the-query-execution-plan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/performance/understanding-the-query-execution-plan/</guid>
      <description>理解 TiDB 执行计划 TiDB 优化器会根据当前数据表的实际情况来选择最优的执行计划，执行计划由一系列的算子构成。本文将详细解释 TiDB 中 EXPLAIN 语句返回的执行计划信息。
使用 EXPLAIN 来优化 SQL 语句 EXPLAIN 语句的返回结果提供了 TiDB 执行 SQL 查询的详细信息：
 EXPLAIN 可以和 SELECT，DELETE 语句一起使用； 执行 EXPLAIN，TiDB 会返回被 EXPLAIN 的 SQL 语句经过优化器后的最终物理执行计划。也就是说，EXPLAIN 展示了 TiDB 执行该 SQL 语句的完整信息，比如以什么样的顺序，什么方式 JOIN 两个表，表达式树长什么样等等。详见 EXPLAIN 输出格式； TiDB 支持 EXPLAIN [options] FOR CONNECTION connection_id，但与 MySQL 的 EXPLAIN FOR 有一些区别，请参见 EXPLAIN FOR CONNECTION。  通过观察 EXPLAIN 的结果，你可以知道如何给数据表添加索引使得执行计划使用索引从而加速 SQL 语句的执行速度；你也可以使用 EXPLAIN 来检查优化器是否选择了最优的顺序来 JOIN 数据表。
EXPLAIN 输出格式 目前 TiDB 的 EXPLAIN 会输出 4 列，分别是：id，count，task，operator info。执行计划中每个算子都由这 4 列属性来描述，EXPLAIN 结果中每一行描述一个算子。每个属性的具体含义如下：</description>
    </item>
    
    <item>
      <title>理解 TiDB 执行计划</title>
      <link>https://pingcap.com/docs-cn/stable/reference/performance/understanding-the-query-execution-plan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/performance/understanding-the-query-execution-plan/</guid>
      <description>理解 TiDB 执行计划 TiDB 优化器会根据当前数据表的实际情况来选择最优的执行计划，执行计划由一系列的算子构成。本文将详细解释 TiDB 中 EXPLAIN 语句返回的执行计划信息。
使用 EXPLAIN 来优化 SQL 语句 EXPLAIN 语句的返回结果提供了 TiDB 执行 SQL 查询的详细信息：
 EXPLAIN 可以和 SELECT，DELETE 语句一起使用； 执行 EXPLAIN，TiDB 会返回被 EXPLAIN 的 SQL 语句经过优化器后的最终物理执行计划。也就是说，EXPLAIN 展示了 TiDB 执行该 SQL 语句的完整信息，比如以什么样的顺序，什么方式 JOIN 两个表，表达式树长什么样等等。详见 EXPLAIN 输出格式； TiDB 支持 EXPLAIN [options] FOR CONNECTION connection_id，但与 MySQL 的 EXPLAIN FOR 有一些区别，请参见 EXPLAIN FOR CONNECTION。  通过观察 EXPLAIN 的结果，你可以知道如何给数据表添加索引使得执行计划使用索引从而加速 SQL 语句的执行速度；你也可以使用 EXPLAIN 来检查优化器是否选择了最优的顺序来 JOIN 数据表。
EXPLAIN 输出格式 目前 TiDB 的 EXPLAIN 会输出 4 列，分别是：id，count，task，operator info。执行计划中每个算子都由这 4 列属性来描述，EXPLAIN 结果中每一行描述一个算子。每个属性的具体含义如下：</description>
    </item>
    
    <item>
      <title>理解 TiDB 执行计划</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/performance/understanding-the-query-execution-plan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/performance/understanding-the-query-execution-plan/</guid>
      <description>理解 TiDB 执行计划 TiDB 优化器会根据当前数据表的实际情况来选择最优的执行计划，执行计划由一系列的算子构成。本文将详细解释 TiDB 中 EXPLAIN 语句返回的执行计划信息。
使用 EXPLAIN 来优化 SQL 语句 EXPLAIN 语句的返回结果提供了 TiDB 执行 SQL 查询的详细信息：
 EXPLAIN 可以和 SELECT，DELETE 语句一起使用； 执行 EXPLAIN，TiDB 会返回被 EXPLAIN 的 SQL 语句经过优化器后的最终物理执行计划。也就是说，EXPLAIN 展示了 TiDB 执行该 SQL 语句的完整信息，比如以什么样的顺序，什么方式 JOIN 两个表，表达式树长什么样等等。详见 EXPLAIN 输出格式； TiDB 支持 EXPLAIN [options] FOR CONNECTION connection_id，但与 MySQL 的 EXPLAIN FOR 有一些区别，请参见 EXPLAIN FOR CONNECTION。  通过观察 EXPLAIN 的结果，你可以知道如何给数据表添加索引使得执行计划使用索引从而加速 SQL 语句的执行速度；你也可以使用 EXPLAIN 来检查优化器是否选择了最优的顺序来 JOIN 数据表。
EXPLAIN 输出格式 目前 TiDB 的 EXPLAIN 会输出 4 列，分别是：id，count，task，operator info。执行计划中每个算子都由这 4 列属性来描述，EXPLAIN 结果中每一行描述一个算子。每个属性的具体含义如下：</description>
    </item>
    
    <item>
      <title>理解 TiDB 执行计划</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/performance/understanding-the-query-execution-plan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/performance/understanding-the-query-execution-plan/</guid>
      <description>理解 TiDB 执行计划 TiDB 优化器会根据当前数据表的实际情况来选择最优的执行计划，执行计划由一系列的算子构成。本文将详细解释 TiDB 中 EXPLAIN 语句返回的执行计划信息。
使用 EXPLAIN 来优化 SQL 语句 EXPLAIN 语句的返回结果提供了 TiDB 执行 SQL 查询的详细信息：
 EXPLAIN 可以和 SELECT，DELETE 语句一起使用； 执行 EXPLAIN，TiDB 会返回被 EXPLAIN 的 SQL 语句经过优化器后的最终物理执行计划。也就是说，EXPLAIN 展示了 TiDB 执行该 SQL 语句的完整信息，比如以什么样的顺序，什么方式 JOIN 两个表，表达式树长什么样等等。详见 EXPLAIN 输出格式； TiDB 支持 EXPLAIN [options] FOR CONNECTION connection_id，但与 MySQL 的 EXPLAIN FOR 有一些区别，请参见 EXPLAIN FOR CONNECTION。  通过观察 EXPLAIN 的结果，你可以知道如何给数据表添加索引使得执行计划使用索引从而加速 SQL 语句的执行速度；你也可以使用 EXPLAIN 来检查优化器是否选择了最优的顺序来 JOIN 数据表。
EXPLAIN 输出格式 目前 TiDB 的 EXPLAIN 会输出 4 列，分别是：id，count，task，operator info。执行计划中每个算子都由这 4 列属性来描述，EXPLAIN 结果中每一行描述一个算子。每个属性的具体含义如下：</description>
    </item>
    
    <item>
      <title>生成列</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/generated-columns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/generated-columns/</guid>
      <description>生成列 为了在功能上兼容 MySQL 5.7，TiDB 支持生成列 (generated column)。生成列的主要的作用之一：从 JSON 数据类型中解出数据，并为该数据建立索引。
使用 generated column 对 JSON 建索引 MySQL 5.7 及 TiDB 都不能直接为 JSON 类型的列添加索引，即不支持如下表结构：
 CREATE TABLE person ( id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, address_info JSON, KEY (address_info) ); 为 JSON 列添加索引之前，首先必须抽取该列为 generated column。
以 city generated stored column 为例，你可以添加索引：
 CREATE TABLE person ( id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, address_info JSON, city VARCHAR(64) AS (JSON_UNQUOTE(JSON_EXTRACT(address_info, &amp;#39;$.</description>
    </item>
    
    <item>
      <title>生成列</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/generated-columns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/generated-columns/</guid>
      <description>生成列 为了在功能上兼容 MySQL 5.7，TiDB 支持生成列 (generated column)。生成列的主要的作用之一：从 JSON 数据类型中解出数据，并为该数据建立索引。
使用 generated column 对 JSON 建索引 MySQL 5.7 及 TiDB 都不能直接为 JSON 类型的列添加索引，即不支持如下表结构：
 CREATE TABLE person ( id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, address_info JSON, KEY (address_info) ); 为 JSON 列添加索引之前，首先必须抽取该列为 generated column。
以 city generated stored column 为例，你可以添加索引：
 CREATE TABLE person ( id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, address_info JSON, city VARCHAR(64) AS (JSON_UNQUOTE(JSON_EXTRACT(address_info, &amp;#39;$.</description>
    </item>
    
    <item>
      <title>生成列</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/generated-columns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/generated-columns/</guid>
      <description>生成列 为了在功能上兼容 MySQL 5.7，TiDB 支持生成列 (generated column)。生成列的主要的作用之一：从 JSON 数据类型中解出数据，并为该数据建立索引。
使用 generated stored column 对 JSON 建索引 MySQL 5.7 及 TiDB 都不能直接为 JSON 类型的列添加索引，即不支持如下表结构：
CREATE TABLE person ( id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, address_info JSON, KEY (address_info) ); 为 JSON 列添加索引之前，首先必须抽取该列为 generated stored column。
 注意：
必须是 generated stored column 上建立的索引才能被优化器使用到，如果在 generated virtual column 上建立索引，优化器目前将无法使用这个索引，会在后续版本中改进（ISSUE #5189）。
 以 city generated stored column 为例，你可以添加索引：
CREATE TABLE person ( id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, address_info JSON, city VARCHAR(64) AS (JSON_UNQUOTE(JSON_EXTRACT(address_info, &amp;#39;$.</description>
    </item>
    
    <item>
      <title>生成列</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/generated-columns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/generated-columns/</guid>
      <description>生成列 为了在功能上兼容 MySQL 5.7，TiDB 支持生成列 (generated column)。生成列的主要的作用之一：从 JSON 数据类型中解出数据，并为该数据建立索引。
使用 generated column 对 JSON 建索引 MySQL 5.7 及 TiDB 都不能直接为 JSON 类型的列添加索引，即不支持如下表结构：
 CREATE TABLE person ( id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, address_info JSON, KEY (address_info) ); 为 JSON 列添加索引之前，首先必须抽取该列为 generated column。
以 city generated stored column 为例，你可以添加索引：
 CREATE TABLE person ( id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, address_info JSON, city VARCHAR(64) AS (JSON_UNQUOTE(JSON_EXTRACT(address_info, &amp;#39;$.</description>
    </item>
    
    <item>
      <title>生成自签名证书</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/secure/generate-self-signed-certificates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/secure/generate-self-signed-certificates/</guid>
      <description>生成自签名证书 概述 本文档提供使用 cfssl 生成自签名证书的示例。
假设实例集群拓扑如下：
   Name Host IP Services     node1 172.16.10.1 PD1, TiDB1   node2 172.16.10.2 PD2, TiDB2   node3 172.16.10.3 PD3   node4 172.16.10.4 TiKV1   node5 172.16.10.5 TiKV2   node6 172.16.10.6 TiKV3    下载 cfssl 假设使用 x86_64 Linux 主机：
 mkdir ~/bin &amp;amp;&amp;amp; curl -s -L -o ~/bin/cfssl https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 &amp;amp;&amp;amp; curl -s -L -o ~/bin/cfssljson https://pkg.</description>
    </item>
    
    <item>
      <title>生成自签名证书</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/secure/generate-self-signed-certificates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/secure/generate-self-signed-certificates/</guid>
      <description>生成自签名证书 概述 本文档提供使用 cfssl 生成自签名证书的示例。
假设实例集群拓扑如下：
   Name Host IP Services     node1 172.16.10.1 PD1, TiDB1   node2 172.16.10.2 PD2, TiDB2   node3 172.16.10.3 PD3   node4 172.16.10.4 TiKV1   node5 172.16.10.5 TiKV2   node6 172.16.10.6 TiKV3    下载 cfssl 假设使用 x86_64 Linux 主机：
 mkdir ~/bin &amp;amp;&amp;amp; curl -s -L -o ~/bin/cfssl https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 &amp;amp;&amp;amp; curl -s -L -o ~/bin/cfssljson https://pkg.</description>
    </item>
    
    <item>
      <title>生成自签名证书</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/secure/generate-self-signed-certificates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/secure/generate-self-signed-certificates/</guid>
      <description>生成自签名证书 概述 本文档提供使用 cfssl 生成自签名证书的示例。
假设实例集群拓扑如下：
   Name Host IP Services     node1 172.16.10.1 PD1, TiDB1   node2 172.16.10.2 PD2, TiDB2   node3 172.16.10.3 PD3   node4 172.16.10.4 TiKV1   node5 172.16.10.5 TiKV2   node6 172.16.10.6 TiKV3    下载 cfssl 假设使用 x86_64 Linux 主机：
mkdir ~/bin curl -s -L -o ~/bin/cfssl https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 curl -s -L -o ~/bin/cfssljson https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 chmod +x ~/bin/{cfssl,cfssljson} export PATH=$PATH:~/bin 初始化证书颁发机构 生成 cfssl 的默认配置，以便于之后修改：</description>
    </item>
    
    <item>
      <title>生成自签名证书</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/secure/generate-self-signed-certificates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/secure/generate-self-signed-certificates/</guid>
      <description>生成自签名证书 概述 本文档提供使用 cfssl 生成自签名证书的示例。
假设实例集群拓扑如下：
   Name Host IP Services     node1 172.16.10.1 PD1, TiDB1   node2 172.16.10.2 PD2, TiDB2   node3 172.16.10.3 PD3   node4 172.16.10.4 TiKV1   node5 172.16.10.5 TiKV2   node6 172.16.10.6 TiKV3    下载 cfssl 假设使用 x86_64 Linux 主机：
 mkdir ~/bin &amp;amp;&amp;amp; curl -s -L -o ~/bin/cfssl https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 &amp;amp;&amp;amp; curl -s -L -o ~/bin/cfssljson https://pkg.</description>
    </item>
    
    <item>
      <title>用户寄语</title>
      <link>https://pingcap.com/user-words/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/user-words/</guid>
      <description>我们邀请了 47 位用户代表，汇成了这份“非官方使用指南”，这些实操中闯过的关和踩过的坑，创造了 TiDB 的更多可能。</description>
    </item>
    
    <item>
      <title>用户生态技术运营</title>
      <link>https://pingcap.com/about-cn/recruit/user-ecosystem/user-ecosystem-technical-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/user-ecosystem/user-ecosystem-technical-operations/</guid>
      <description>用户生态技术运营 岗位职责：
  对开源生态、数据库或大数据领域有深度理解，负责制定有效、合理的运营策略，促进 TiDB 在广大用户中的应用深度，培养 TiDB 用户的使用热情，技术传播；
  建立用户生态运营体系，制定有效、合理的运营推广方案，并快速推动方案落地，具备一定顶层策划思维；
  有很好的亲和力，具有或者能快速融入数据库或大数据技术圈子，进行各种线上、线下 User Group 的活动策划、组织；
  内部协调资源，辅助完成 TiDB 培训教学、认证考试等工作。
  任职要求：
  熟悉数据库或者大数据领域，高度认同 NewSQL 技术方向；
  三年以上技术产品用户社区运营、管理经验；
  有较强的活动策划，有一定的技术沙龙组织经验；
  具备较好逻辑思维能力和创新能力，具备较好的数据分析能力；
  高度责任感，具备较强的理解能力和执行力，愿意接受挑战，重视结果；
  有 DBA 等技术背景者优先；
  混迹各种 MySQL、Oracle、HBase、MongoDB 等圈子的人优先。
  待遇：
10K - 35K ， 13 薪 + 奖金，优秀者可面议
工作地点：
北京，上海</description>
    </item>
    
    <item>
      <title>用户自定义变量</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/language-structure/user-defined-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/language-structure/user-defined-variables/</guid>
      <description>用户自定义变量 用户自定义变量格式为 @var_name。var_name 目前只支持字母，数字，_$组成。用户自定义变量是大小写不敏感的。
用户自定义变量是跟 session 绑定的，也就是说只有当前连接可以看见设置的用户变量，其他客户端连接无法查看到。
用 SET 语句可以设置用户自定义变量：
 SET @var_name = expr [, @var_name = expr] ...; 或
 SET @var_name := expr; 对于 SET 语句，赋值操作符可以是 = 也可以是 :=
例：
 SET @a1=1, @a2=2, @a3:=4;  SELECT @a1, @a2, @t3, @a4 := @a1+@a2+@a3; +------+------+------+--------------------+ | @a1 | @a2 | @a3 | @a4 := @a1+@a2+@a3 | +------+------+------+--------------------+ | 1 | 2 | 4 | 7 | +------+------+------+--------------------+ 如果设置用户变量用了 HEX 或者 BIT 值，TiDB会把它当成二进制字符串。如果你要将其设置成数字，那么需要手动加上 CAST转换: CAST(.</description>
    </item>
    
    <item>
      <title>用户自定义变量</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/language-structure/user-defined-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/language-structure/user-defined-variables/</guid>
      <description>用户自定义变量 用户自定义变量格式为 @var_name。var_name 目前只支持字母，数字，_$组成。用户自定义变量是大小写不敏感的。
用户自定义变量是跟 session 绑定的，也就是说只有当前连接可以看见设置的用户变量，其他客户端连接无法查看到。
用 SET 语句可以设置用户自定义变量：
 SET @var_name = expr [, @var_name = expr] ...; 或
 SET @var_name := expr; 对于 SET 语句，赋值操作符可以是 = 也可以是 :=
例：
 SET @a1=1, @a2=2, @a3:=4;  SELECT @a1, @a2, @t3, @a4 := @a1+@a2+@a3; +------+------+------+--------------------+ | @a1 | @a2 | @a3 | @a4 := @a1+@a2+@a3 | +------+------+------+--------------------+ | 1 | 2 | 4 | 7 | +------+------+------+--------------------+ 如果设置用户变量用了 HEX 或者 BIT 值，TiDB会把它当成二进制字符串。如果你要将其设置成数字，那么需要手动加上 CAST转换: CAST(.</description>
    </item>
    
    <item>
      <title>用户自定义变量</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/language-structure/user-defined-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/language-structure/user-defined-variables/</guid>
      <description>用户自定义变量 用户自定义变量格式为 @var_name。var_name 目前只支持字母，数字，_$组成。用户自定义变量是大小写不敏感的。
用户自定义变量是跟 session 绑定的，也就是说只有当前连接可以看见设置的用户变量，其他客户端连接无法查看到。
用 SET 语句可以设置用户自定义变量：
SET @var_name = expr [, @var_name = expr] ... 或 SET @var_name := expr 对于 SET 语句，赋值操作符可以是 = 也可以是 :=
例：
mysql&amp;gt; SET @a1=1, @a2=2, @a3:=4; mysql&amp;gt; SELECT @a1, @a2, @t3, @a4 := @a1+@a2+@a3; +------+------+------+--------------------+ | @a1 | @a2 | @a3 | @a4 := @a1+@a2+@a3 | +------+------+------+--------------------+ | 1 | 2 | 4 | 7 | +------+------+------+--------------------+ 如果设置用户变量用了 HEX 或者 BIT 值，TiDB会把它当成二进制字符串。如果你要将其设置成数字，那么需要手动加上 CAST转换: CAST(.</description>
    </item>
    
    <item>
      <title>用户自定义变量</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/language-structure/user-defined-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/language-structure/user-defined-variables/</guid>
      <description>用户自定义变量 用户自定义变量格式为 @var_name。var_name 目前只支持字母，数字，_$组成。用户自定义变量是大小写不敏感的。
用户自定义变量是跟 session 绑定的，也就是说只有当前连接可以看见设置的用户变量，其他客户端连接无法查看到。
用 SET 语句可以设置用户自定义变量：
 SET @var_name = expr [, @var_name = expr] ...; 或
 SET @var_name := expr; 对于 SET 语句，赋值操作符可以是 = 也可以是 :=
例：
 SET @a1=1, @a2=2, @a3:=4;  SELECT @a1, @a2, @t3, @a4 := @a1+@a2+@a3; +------+------+------+--------------------+ | @a1 | @a2 | @a3 | @a4 := @a1+@a2+@a3 | +------+------+------+--------------------+ | 1 | 2 | 4 | 7 | +------+------+------+--------------------+ 如果设置用户变量用了 HEX 或者 BIT 值，TiDB会把它当成二进制字符串。如果你要将其设置成数字，那么需要手动加上 CAST转换: CAST(.</description>
    </item>
    
    <item>
      <title>社区运营</title>
      <link>https://pingcap.com/about-cn/recruit/market/community-operation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/market/community-operation/</guid>
      <description>社区运营 岗位职责：
  社区活动的维护运营，包括活动的主题策划、内容统筹、人员沟通、现场执行等运营工作；
  企业自媒体平台的日常运营，包括内容编辑、发布、维护、管理、互动、提高影响力和关注度；
  了解技术社区用户需求，收集反馈，根据运营数据挖掘和分析用户需求；
  资料的搜集与编辑整理。
  任职要求：
  对 ToB 的商业和市场具备一定的感知，了解 ToB 或技术社区类运营的特点和调性；
  有亲和力，具有较强的表达与理解能力以及极强的团队合作意识，善于主动发现问题并及时沟通并解决；
  认真负责，逻辑清晰，有良好的文字和语言表达能力；
  性格开朗，积极热情，能够快速学习。
  待遇：
8K -20K，13薪 + 奖金，优秀者可面议
工作地点：
北京</description>
    </item>
    
    <item>
      <title>离线 TiDB Ansible 部署方案</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/deploy/orchestrated/offline-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/deploy/orchestrated/offline-ansible/</guid>
      <description>离线 TiDB Ansible 部署方案 准备机器   下载机一台
 该机器需开放外网访问，用于下载 TiDB Ansible、TiDB 及相关软件安装包。 推荐安装 CentOS 7.3 及以上版本 Linux 操作系统。    部署目标机器若干及部署中控机一台
 系统要求及配置参考准备机器。 可以无法访问外网。    在中控机上安装系统依赖包   在下载机上下载系统依赖离线安装包，然后上传至中控机。该离线包仅支持 CentOS 7 系统，包含 pip 及 sshpass。
  在中控机上安装系统依赖包：
 tar -xzvf ansible-system-rpms.el7.tar.gz &amp;amp;&amp;amp; cd ansible-system-rpms.el7 &amp;amp;&amp;amp; chmod u+x install_ansible_system_rpms.sh &amp;amp;&amp;amp; ./install_ansible_system_rpms.sh   安装完成后，可通过 pip -V 验证 pip 是否安装成功：
 pip -V pip 8.1.2 from /usr/lib/python2.7/site-packages (python 2.</description>
    </item>
    
    <item>
      <title>离线 TiDB Ansible 部署方案</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/deploy/orchestrated/offline-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/deploy/orchestrated/offline-ansible/</guid>
      <description>离线 TiDB Ansible 部署方案 准备机器   下载机一台
 该机器需开放外网访问，用于下载 TiDB Ansible、TiDB 及相关软件安装包。 推荐安装 CentOS 7.3 及以上版本 Linux 操作系统。    部署目标机器若干及部署中控机一台
 系统要求及配置参考准备机器。 可以无法访问外网。    在中控机上安装系统依赖包   在下载机上下载系统依赖离线安装包，然后上传至中控机。该离线包仅支持 CentOS 7 系统，包含 pip 及 sshpass。
  在中控机上安装系统依赖包：
 tar -xzvf ansible-system-rpms.el7.tar.gz &amp;amp;&amp;amp; cd ansible-system-rpms.el7 &amp;amp;&amp;amp; chmod u+x install_ansible_system_rpms.sh &amp;amp;&amp;amp; ./install_ansible_system_rpms.sh   安装完成后，可通过 pip -V 验证 pip 是否安装成功：
 pip -V pip 8.1.2 from /usr/lib/python2.7/site-packages (python 2.</description>
    </item>
    
    <item>
      <title>离线 TiDB Ansible 部署方案</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/deploy/orchestrated/offline-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/deploy/orchestrated/offline-ansible/</guid>
      <description>离线 TiDB Ansible 部署方案 准备机器   下载机一台
 该机器需开放外网访问，用于下载 TiDB Ansible、TiDB 及相关软件安装包。 推荐安装 CentOS 7.3 及以上版本 Linux 操作系统。    部署目标机器若干及部署中控机一台
 系统要求及配置参考准备机器。 可以无法访问外网。    在中控机上安装系统依赖包   在下载机上下载系统依赖离线安装包，然后上传至中控机。该离线包仅支持 CentOS 7 系统，包含 pip 及 sshpass。
  在中控机上安装系统依赖包：
 tar -xzvf ansible-system-rpms.el7.tar.gz &amp;amp;&amp;amp; cd ansible-system-rpms.el7 &amp;amp;&amp;amp; chmod u+x install_ansible_system_rpms.sh &amp;amp;&amp;amp; ./install_ansible_system_rpms.sh   安装完成后，可通过 pip -V 验证 pip 是否安装成功：
 pip -V pip 8.1.2 from /usr/lib/python2.7/site-packages (python 2.</description>
    </item>
    
    <item>
      <title>离线 TiDB Ansible 部署方案</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/deploy/orchestrated/offline-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/deploy/orchestrated/offline-ansible/</guid>
      <description>离线 TiDB Ansible 部署方案 准备机器   下载机一台
 该机器需开放外网访问，用于下载 TiDB Ansible、TiDB 及相关软件安装包。 推荐安装 CentOS 7.3 及以上版本 Linux 操作系统。    部署目标机器若干及部署中控机一台
 系统要求及配置参考准备机器。 可以无法访问外网。    在中控机上安装系统依赖包   在下载机上下载系统依赖离线安装包，然后上传至中控机。该离线包仅支持 CentOS 7 系统，包含 pip 及 sshpass。
  在中控机上安装系统依赖包：
 tar -xzvf ansible-system-rpms.el7.tar.gz &amp;amp;&amp;amp; cd ansible-system-rpms.el7 &amp;amp;&amp;amp; chmod u+x install_ansible_system_rpms.sh &amp;amp;&amp;amp; ./install_ansible_system_rpms.sh   安装完成后，可通过 pip -V 验证 pip 是否安装成功：
 pip -V pip 8.1.2 from /usr/lib/python2.7/site-packages (python 2.</description>
    </item>
    
    <item>
      <title>窗口函数</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/window-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/window-functions/</guid>
      <description>窗口函数 TiDB 中窗口函数的使用方法与 MySQL 8.0 基本一致，详情可参见 MySQL 窗口函数。由于窗口函数会使用一些保留关键字，可能导致原先可以正常执行的 SQL 语句在升级 TiDB 后无法被解析语法，此时可以将 tidb_enable_window_function 设置为 0，该参数的默认值为 1。
TiDB 支持的窗口函数如下所示：
   函数名 功能描述     CUME_DIST() 返回一组值中的累积分布   DENSE_RANK() 返回分区中当前行的排名，并且排名是连续的   FIRST_VALUE() 当前窗口中第一行的表达式值   LAG() 分区中当前行前面第 N 行的表达式值   LAST_VALUE() 当前窗口中最后一行的表达式值   LEAD() 分区中当前行后面第 N 行的表达式值   NTH_VALUE() 当前窗口中第 N 行的表达式值   NTILE() 将分区划分为 N 桶，为分区中的每一行分配桶号   PERCENT_RANK() 返回分区中小于当前行的百分比   RANK() 返回分区中当前行的排名，排名可能不连续   ROW_NUMBER() 返回分区中当前行的编号    </description>
    </item>
    
    <item>
      <title>窗口函数</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/window-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/window-functions/</guid>
      <description>窗口函数 TiDB 中窗口函数的使用方法与 MySQL 8.0 基本一致，详情可参见 MySQL 窗口函数。由于窗口函数会使用一些保留关键字，可能导致原先可以正常执行的 SQL 语句在升级 TiDB 后无法被解析语法，此时可以将 tidb_enable_window_function 设置为 0，该参数的默认值为 1。
TiDB 支持的窗口函数如下所示：
   函数名 功能描述     CUME_DIST() 返回一组值中的累积分布   DENSE_RANK() 返回分区中当前行的排名，并且排名是连续的   FIRST_VALUE() 当前窗口中第一行的表达式值   LAG() 分区中当前行前面第 N 行的表达式值   LAST_VALUE() 当前窗口中最后一行的表达式值   LEAD() 分区中当前行后面第 N 行的表达式值   NTH_VALUE() 当前窗口中第 N 行的表达式值   NTILE() 将分区划分为 N 桶，为分区中的每一行分配桶号   PERCENT_RANK() 返回分区中小于当前行的百分比   RANK() 返回分区中当前行的排名，排名可能不连续   ROW_NUMBER() 返回分区中当前行的编号    </description>
    </item>
    
    <item>
      <title>窗口函数</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/window-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/window-functions/</guid>
      <description>窗口函数 TiDB 中窗口函数的使用方法与 MySQL 8.0 基本一致，详情可参见 MySQL 窗口函数。由于窗口函数会使用一些保留关键字，可能导致原先可以正常执行的 SQL 语句在升级 TiDB 后无法被解析语法，此时可以将 tidb_enable_window_function 设置为 0，该参数的默认值为 1。
TiDB 支持的窗口函数如下所示：
   函数名 功能描述     CUME_DIST() 返回一组值中的累积分布   DENSE_RANK() 返回分区中当前行的排名，并且排名是连续的   FIRST_VALUE() 当前窗口中第一行的表达式值   LAG() 分区中当前行前面第 N 行的表达式值   LAST_VALUE() 当前窗口中最后一行的表达式值   LEAD() 分区中当前行后面第 N 行的表达式值   NTH_VALUE() 当前窗口中第 N 行的表达式值   NTILE() 将分区划分为 N 桶，为分区中的每一行分配桶号   PERCENT_RANK() 返回分区中小于当前行的百分比   RANK() 返回分区中当前行的排名，排名可能不连续   ROW_NUMBER() 返回分区中当前行的编号    </description>
    </item>
    
    <item>
      <title>管理数据同步任务</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/manage-tasks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/manage-tasks/</guid>
      <description>管理数据同步任务 本文介绍了如何使用 dmctl 组件来进行数据同步任务的管理和维护。对于用 DM-Ansible 部署的 DM 集群，dmctl 二进制文件路径为 dm-ansible/dmctl。
dmctl 支持交互模式用于人工操作，同时也支持命令模式用于脚本。
dmctl 交互模式 本部分描述了在交互模式下一些 dmctl 命令的基本用法。
dmctl 使用帮助  ./dmctl --help Usage of dmctl: -V prints version and exit -config string path to config file # 按照 DM 提供的加密方法加密数据库密码，用于 DM 的配置文件 -encrypt string encrypt plaintext to ciphertext # DM-master 访问地址，dmctl 与 DM-master 交互以完成任务管理操作 -master-addr string master API server addr -rpc-timeout string rpc timeout, default is 10m (default &amp;#34;10m&amp;#34;) 加密数据库密码 在 DM 相关配置文件中，要求必须使用经 dmctl 加密后的密码，否则会报错。对于同一个原始密码，每次加密后密码不同。</description>
    </item>
    
    <item>
      <title>管理数据同步任务</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/manage-tasks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/manage-tasks/</guid>
      <description>管理数据同步任务 本文介绍了如何使用 dmctl 组件来进行数据同步任务的管理和维护。对于用 DM-Ansible 部署的 DM 集群，dmctl 二进制文件路径为 dm-ansible/dmctl。
dmctl 支持交互模式用于人工操作，同时也支持命令模式用于脚本。
dmctl 交互模式 本部分描述了在交互模式下一些 dmctl 命令的基本用法。
dmctl 使用帮助  ./dmctl --help Usage of dmctl: -V prints version and exit -config string path to config file # 按照 DM 提供的加密方法加密数据库密码，用于 DM 的配置文件 -encrypt string encrypt plaintext to ciphertext # DM-master 访问地址，dmctl 与 DM-master 交互以完成任务管理操作 -master-addr string master API server addr -rpc-timeout string rpc timeout, default is 10m (default &amp;#34;10m&amp;#34;) 加密数据库密码 在 DM 相关配置文件中，要求必须使用经 dmctl 加密后的密码，否则会报错。对于同一个原始密码，每次加密后密码不同。</description>
    </item>
    
    <item>
      <title>管理数据同步任务</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/manage-tasks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/manage-tasks/</guid>
      <description>管理数据同步任务 本文介绍了如何使用 dmctl 组件来进行数据同步任务的管理和维护。对于用 DM-Ansible 部署的 DM 集群，dmctl 二进制文件路径为 dm-ansible/dmctl。
dmctl 支持交互模式用于人工操作，同时也支持命令模式用于脚本。
dmctl 交互模式 本部分描述了在交互模式下一些 dmctl 命令的基本用法。
dmctl 使用帮助  ./dmctl --help Usage of dmctl: -V prints version and exit -config string path to config file # 按照 DM 提供的加密方法加密数据库密码，用于 DM 的配置文件 -encrypt string encrypt plaintext to ciphertext # DM-master 访问地址，dmctl 与 DM-master 交互以完成任务管理操作 -master-addr string master API server addr -rpc-timeout string rpc timeout, default is 10m (default &amp;#34;10m&amp;#34;) 加密数据库密码 在 DM 相关配置文件中，要求必须使用经 dmctl 加密后的密码，否则会报错。对于同一个原始密码，每次加密后密码不同。</description>
    </item>
    
    <item>
      <title>管理数据同步任务</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/manage-tasks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/manage-tasks/</guid>
      <description>管理数据同步任务 本文介绍了如何使用 dmctl 组件来进行数据同步任务的管理和维护。对于用 DM-Ansible 部署的 DM 集群，dmctl 二进制文件路径为 dm-ansible/dmctl。
dmctl 支持交互模式用于人工操作，同时也支持命令模式用于脚本。
dmctl 交互模式 本部分描述了在交互模式下一些 dmctl 命令的基本用法。
dmctl 使用帮助  ./dmctl --help Usage of dmctl: -V prints version and exit -config string path to config file # 按照 DM 提供的加密方法加密数据库密码，用于 DM 的配置文件 -encrypt string encrypt plaintext to ciphertext # DM-master 访问地址，dmctl 与 DM-master 交互以完成任务管理操作 -master-addr string master API server addr -rpc-timeout string rpc timeout, default is 10m (default &amp;#34;10m&amp;#34;) 加密数据库密码 在 DM 相关配置文件中，要求必须使用经 dmctl 加密后的密码，否则会报错。对于同一个原始密码，每次加密后密码不同。</description>
    </item>
    
    <item>
      <title>管理集群和同步任务</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/ticdc/manage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/ticdc/manage/</guid>
      <description>管理集群和同步任务 目前 TiCDC 提供命令行工具 cdc cli 和 HTTP 接口两种方式来管理集群和同步任务。
使用 cdc cli 工具来管理集群状态和数据同步 以下内容介绍如何使用 cdc cli 工具来管理集群状态和数据同步。
管理TiCDC 服务进程 (capture)  查询 capture 列表：   cdc cli capture list [ { &amp;#34;id&amp;#34;: &amp;#34;6d92386a-73fc-43f3-89de-4e337a42b766&amp;#34;, &amp;#34;is-owner&amp;#34;: true }, { &amp;#34;id&amp;#34;: &amp;#34;b293999a-4168-4988-a4f4-35d9589b226b&amp;#34;, &amp;#34;is-owner&amp;#34;: false } ] 管理同步任务 (changefeed)  创建 changefeed：   cdc cli changefeed create --sink-uri=&amp;#34;mysql://root:123456@127.0.0.1:3306/&amp;#34; create changefeed ID: 28c43ffc-2316-4f4f-a70b-d1a7c59ba79f info {&amp;#34;sink-uri&amp;#34;:&amp;#34;mysql://root:123456@127.0.0.1:3306/&amp;#34;,&amp;#34;opts&amp;#34;:{},&amp;#34;create-time&amp;#34;:&amp;#34;2020-03-12T22:04:08.103600025+08:00&amp;#34;,&amp;#34;start-ts&amp;#34;:415241823337054209,&amp;#34;target-ts&amp;#34;:0,&amp;#34;admin-job-type&amp;#34;:0,&amp;#34;config&amp;#34;:{&amp;#34;filter-case-sensitive&amp;#34;:false,&amp;#34;filter-rules&amp;#34;:null,&amp;#34;ignore-txn-commit-ts&amp;#34;:null}}  查询 changefeed 列表：   cdc cli changefeed list [ { &amp;#34;id&amp;#34;: &amp;#34;28c43ffc-2316-4f4f-a70b-d1a7c59ba79f&amp;#34; } ]  查询特定 changefeed，对应于某个同步任务的信息和状态：   cdc cli changefeed query --changefeed-id=28c43ffc-2316-4f4f-a70b-d1a7c59ba79f { &amp;#34;info&amp;#34;: { &amp;#34;sink-uri&amp;#34;: &amp;#34;mysql://root:123456@127.</description>
    </item>
    
    <item>
      <title>精度数学</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/precision-math/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/precision-math/</guid>
      <description>精度数学 TiDB 中精度数学计算与 MySQL 中基本一致, 详情请参见: Precision Math.
 数值类型 DECIMAL 数据类型的特性  数值类型 精确数值运算的范围包括精确值数据类型(整型和 DECIMAL 类型), 以及精确值数字字面量. 近似值数据类型和近似值数字字面量被作为浮点数来处理.
精确值数字字面量包含整数部分或小数部分, 或二者都包含. 精确值数字字面量可以包含符号位. 例如: 1, .2, 3.4, -5, -6.78, +9.10.
近似值数字字面量以一个包含尾数和指数的科学计数法表示(基数为 10). 其中尾数和指数可以分别或同时带有符号位. 例如: 1.2E3, 1.2E-3, -1.2E3, -1.2E-3.
两个看起来相似的数字可能会被以不同的方式进行处理. 例如, 2.34 是精确值(定点数), 而 2.3E0 是近似值(浮点数).
DECIMAL 数据类型是定点数类型, 其运算是精确计算. FLOAT 和 DOUBLE 数据类型是浮点类型, 其运算是近似计算.
DECIMAL 数据类型的特性 本节讨论 DECIMAL 数据类型的特性, 主要涉及以下几点:
 最大位数 存储格式 存储要求  DECIMAL 列的声明语法为 DECIMAL(M, D). 其中参数值意义及其范围如下:
 M 表示最大的数字位数 (精度).</description>
    </item>
    
    <item>
      <title>精度数学</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/precision-math/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/precision-math/</guid>
      <description>精度数学 TiDB 中精度数学计算与 MySQL 中基本一致, 详情请参见: Precision Math.
 数值类型 DECIMAL 数据类型的特性  数值类型 精确数值运算的范围包括精确值数据类型(整型和 DECIMAL 类型), 以及精确值数字字面量. 近似值数据类型和近似值数字字面量被作为浮点数来处理.
精确值数字字面量包含整数部分或小数部分, 或二者都包含. 精确值数字字面量可以包含符号位. 例如: 1, .2, 3.4, -5, -6.78, +9.10.
近似值数字字面量以一个包含尾数和指数的科学计数法表示(基数为 10). 其中尾数和指数可以分别或同时带有符号位. 例如: 1.2E3, 1.2E-3, -1.2E3, -1.2E-3.
两个看起来相似的数字可能会被以不同的方式进行处理. 例如, 2.34 是精确值(定点数), 而 2.3E0 是近似值(浮点数).
DECIMAL 数据类型是定点数类型, 其运算是精确计算. FLOAT 和 DOUBLE 数据类型是浮点类型, 其运算是近似计算.
DECIMAL 数据类型的特性 本节讨论 DECIMAL 数据类型的特性, 主要涉及以下几点:
 最大位数 存储格式 存储要求  DECIMAL 列的声明语法为 DECIMAL(M, D). 其中参数值意义及其范围如下:
 M 表示最大的数字位数 (精度).</description>
    </item>
    
    <item>
      <title>精度数学</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/precision-math/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/precision-math/</guid>
      <description>精度数学 TiDB 中精度数学计算与 MySQL 中基本一致, 详情请参见: Precision Math.
 数值类型 DECIMAL 数据类型的特性  数值类型 精确数值运算的范围包括精确值数据类型(整型和 DECIMAL 类型), 以及精确值数字字面量. 近似值数据类型和近似值数字字面量被作为浮点数来处理.
精确值数字字面量包含整数部分或小数部分, 或二者都包含. 精确值数字字面量可以包含符号位. 例如: 1, .2, 3.4, -5, -6.78, +9.10.
近似值数字字面量以一个包含尾数和指数的科学计数法表示(基数为 10). 其中尾数和指数可以分别或同时带有符号位. 例如: 1.2E3, 1.2E-3, -1.2E3, -1.2E-3.
两个看起来相似的数字可能会被以不同的方式进行处理. 例如, 2.34 是精确值(定点数), 而 2.3E0 是近似值(浮点数).
DECIMAL 数据类型是定点数类型, 其运算是精确计算. FLOAT 和 DOUBLE 数据类型是浮点类型, 其运算是近似计算.
DECIMAL 数据类型的特性 本节讨论 DECIMAL 数据类型的特性, 主要涉及以下几点:
 最大位数 存储格式 存储要求  DECIMAL 列的声明语法为 DECIMAL(M, D). 其中参数值意义及其范围如下:
 M 表示最大的数字位数 (精度).</description>
    </item>
    
    <item>
      <title>精度数学</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/precision-math/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/precision-math/</guid>
      <description>精度数学 TiDB 中精度数学计算与 MySQL 中基本一致, 详情请参见: Precision Math.
 数值类型 DECIMAL 数据类型的特性  数值类型 精确数值运算的范围包括精确值数据类型(整型和 DECIMAL 类型), 以及精确值数字字面量. 近似值数据类型和近似值数字字面量被作为浮点数来处理.
精确值数字字面量包含整数部分或小数部分, 或二者都包含. 精确值数字字面量可以包含符号位. 例如: 1, .2, 3.4, -5, -6.78, +9.10.
近似值数字字面量以一个包含尾数和指数的科学计数法表示(基数为 10). 其中尾数和指数可以分别或同时带有符号位. 例如: 1.2E3, 1.2E-3, -1.2E3, -1.2E-3.
两个看起来相似的数字可能会被以不同的方式进行处理. 例如, 2.34 是精确值(定点数), 而 2.3E0 是近似值(浮点数).
DECIMAL 数据类型是定点数类型, 其运算是精确计算. FLOAT 和 DOUBLE 数据类型是浮点类型, 其运算是近似计算.
DECIMAL 数据类型的特性 本节讨论 DECIMAL 数据类型的特性, 主要涉及以下几点:
 最大位数 存储格式 存储要求  DECIMAL 列的声明语法为 DECIMAL(M, D). 其中参数值意义及其范围如下:
 M 表示最大的数字位数 (精度).</description>
    </item>
    
    <item>
      <title>系统变量</title>
      <link>https://pingcap.com/docs-cn/dev/reference/configuration/tidb-server/mysql-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/configuration/tidb-server/mysql-variables/</guid>
      <description>系统变量 MySQL 系统变量 (System Variables) 是一些系统参数，用于调整数据库运行时的行为，根据变量的作用范围分为全局范围有效（Global Scope）以及会话级别有效（Session Scope）。TiDB 支持 MySQL5.7 的所有系统变量，大部分变量仅仅是为了兼容性而支持，不会影响运行时行为。
设置系统变量 通过 SET 语句可以修改系统变量的值。进行修改时，还要考虑变量可修改的范围，不是所有的变量都能在全局/会话范围内进行修改。具体的可修改范围参考 MySQL 动态变量文档。
全局范围值   在变量名前加 GLOBAL 关键词或者是使用 @@global. 作为修饰符:
 SET GLOBAL autocommit = 1;  SET @@global.autocommit = 1;    注意：
在分布式 TiDB 中，GLOBAL 变量的设置会持久化到存储层中，单个 TiDB 实例每 2 秒会主动进行一次全变量的获取并形成 gvc (global variables cache) 缓存，该缓存有效时间最多可持续 2 秒。在设置 GLOBAL 变量之后，为了保证新会话的有效性，请确保两个操作之间的间隔大于 2 秒。相关细节可以查看 Issue #14531。
 会话范围值   在变量名前加 SESSION 关键词或者是使用 @@session. 作为修饰符，或者是不加任何修饰符:</description>
    </item>
    
    <item>
      <title>系统变量</title>
      <link>https://pingcap.com/docs-cn/stable/reference/configuration/tidb-server/mysql-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/configuration/tidb-server/mysql-variables/</guid>
      <description>系统变量 MySQL 系统变量 (System Variables) 是一些系统参数，用于调整数据库运行时的行为，根据变量的作用范围分为全局范围有效（Global Scope）以及会话级别有效（Session Scope）。TiDB 支持 MySQL5.7 的所有系统变量，大部分变量仅仅是为了兼容性而支持，不会影响运行时行为。
设置系统变量 通过 SET 语句 可以修改系统变量的值。进行修改时，还要考虑变量可修改的范围，不是所有的变量都能在全局/会话范围内进行修改。具体的可修改范围参考 MySQL 动态变量文档。
全局范围值   在变量名前加 GLOBAL 关键词或者是使用 @@global. 作为修饰符:
 SET GLOBAL autocommit = 1;  SET @@global.autocommit = 1;    注意：
在分布式 TiDB 中，GLOBAL 变量的设置会持久化到存储层中，单个 TiDB 实例每 2 秒会主动进行一次全变量的获取并形成 gvc (global variables cache) 缓存，该缓存有效时间最多可持续 2 秒。在设置 GLOBAL 变量之后，为了保证新会话的有效性，请确保两个操作之间的间隔大于 2 秒。相关细节可以查看 Issue #14531。
 会话范围值   在变量名前加 SESSION 关键词或者是使用 @@session. 作为修饰符，或者是不加任何修饰符:</description>
    </item>
    
    <item>
      <title>系统变量</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/configuration/tidb-server/mysql-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/configuration/tidb-server/mysql-variables/</guid>
      <description>系统变量 MySQL 系统变量 (System Variables) 是一些系统参数，用于调整数据库运行时的行为，根据变量的作用范围分为全局范围有效（Global Scope）以及会话级别有效（Session Scope）。TiDB 支持 MySQL5.7 的所有系统变量，大部分变量仅仅是为了兼容性而支持，不会影响运行时行为。
设置系统变量 通过 SET 语句 可以修改系统变量的值。进行修改时，还要考虑变量可修改的范围，不是所有的变量都能在全局/会话范围内进行修改。具体的可修改范围参考 MySQL 动态变量文档。
全局范围值   在变量名前加 GLOBAL 关键词或者是使用 @@global. 作为修饰符:
SET GLOBAL autocommit = 1; SET @@global.autocommit = 1;    注意：
在分布式 TiDB 中，GLOBAL 变量的设置会持久化到存储层中，单个 TiDB 实例每 2 秒会主动进行一次全变量的获取并形成 gvc (global variables cache) 缓存，该缓存有效时间最多可持续 2 秒。在设置 GLOBAL 变量之后，为了保证新会话的有效性，请确保两个操作之间的间隔大于 2 秒。相关细节可以查看 Issue #14531。
 会话范围值   在变量名前加 SESSION 关键词或者是使用 @@session. 作为修饰符，或者是不加任何修饰符:
SET SESSION autocommit = 1; SET @@session.</description>
    </item>
    
    <item>
      <title>系统变量</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/configuration/tidb-server/mysql-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/configuration/tidb-server/mysql-variables/</guid>
      <description>系统变量 MySQL 系统变量 (System Variables) 是一些系统参数，用于调整数据库运行时的行为，根据变量的作用范围分为全局范围有效（Global Scope）以及会话级别有效（Session Scope）。TiDB 支持 MySQL5.7 的所有系统变量，大部分变量仅仅是为了兼容性而支持，不会影响运行时行为。
设置系统变量 通过 SET 语句 可以修改系统变量的值。进行修改时，还要考虑变量可修改的范围，不是所有的变量都能在全局/会话范围内进行修改。具体的可修改范围参考 MySQL 动态变量文档。
全局范围值   在变量名前加 GLOBAL 关键词或者是使用 @@global. 作为修饰符:
 SET GLOBAL autocommit = 1;  SET @@global.autocommit = 1;    注意：
在分布式 TiDB 中，GLOBAL 变量的设置会持久化到存储层中，单个 TiDB 实例每 2 秒会主动进行一次全变量的获取并形成 gvc (global variables cache) 缓存，该缓存有效时间最多可持续 2 秒。在设置 GLOBAL 变量之后，为了保证新会话的有效性，请确保两个操作之间的间隔大于 2 秒。相关细节可以查看 Issue #14531。
 会话范围值   在变量名前加 SESSION 关键词或者是使用 @@session. 作为修饰符，或者是不加任何修饰符:</description>
    </item>
    
    <item>
      <title>约束</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/constraints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/constraints/</guid>
      <description>约束 TiDB 支持的基本约束与 MySQL 的基本相同，但有以下区别：
  默认对唯一约束进行惰性检查。通过在事务提交时再进行批量检查，TiDB 能够减少网络开销、提升性能。您可通过设置 tidb_constraint_check_in_place 为 TRUE 改变此行为。
  TiDB 支持创建外键约束，但不会在 DML 语句中对外键进行约束（即外键约束不生效）。
  外键约束 目前，TiDB 支持创建外键。例如：
CREATE TABLE users ( id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, doc JSON ); CREATE TABLE orders ( id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, user_id INT NOT NULL, doc JSON, FOREIGN KEY fk_user_id (user_id) REFERENCES users(id) );  SELECT table_name, column_name, constraint_name, referenced_table_name, referenced_column_name FROM information_schema.</description>
    </item>
    
    <item>
      <title>约束</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/constraints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/constraints/</guid>
      <description>约束 TiDB 支持的基本约束与 MySQL 的基本相同，但有以下区别：
  默认对唯一约束进行惰性检查。通过在事务提交时再进行批量检查，TiDB 能够减少网络开销、提升性能。您可通过设置 tidb_constraint_check_in_place 为 TRUE 改变此行为。
  TiDB 支持创建外键约束，但不会在 DML 语句中对外键进行约束（即外键约束不生效）。
  外键约束 目前，TiDB 支持创建外键。例如：
CREATE TABLE users ( id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, doc JSON ); CREATE TABLE orders ( id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, user_id INT NOT NULL, doc JSON, FOREIGN KEY fk_user_id (user_id) REFERENCES users(id) );  SELECT table_name, column_name, constraint_name, referenced_table_name, referenced_column_name FROM information_schema.</description>
    </item>
    
    <item>
      <title>约束</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/constraints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/constraints/</guid>
      <description>约束 TiDB 支持的基本约束与 MySQL 的基本相同，但有以下区别：
  默认对唯一约束进行惰性检查。通过在事务提交时再进行批量检查，TiDB 能够减少网络开销、提升性能。您可通过设置 tidb_constraint_check_in_place 为 TRUE 改变此行为。
  TiDB 支持创建外键约束，但不会在 DML 语句中对外键进行约束（即外键约束不生效）。
  外键约束 目前，TiDB 支持创建外键。例如：
CREATE TABLE users ( id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, doc JSON ); CREATE TABLE orders ( id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, user_id INT NOT NULL, doc JSON, FOREIGN KEY fk_user_id (user_id) REFERENCES users(id) ); mysql&amp;gt; SELECT table_name, column_name, constraint_name, referenced_table_name, referenced_column_name FROM information_schema.</description>
    </item>
    
    <item>
      <title>约束</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/constraints/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/constraints/</guid>
      <description>约束 TiDB 支持的基本约束与 MySQL 的基本相同，但有以下区别：
  默认对唯一约束进行惰性检查。通过在事务提交时再进行批量检查，TiDB 能够减少网络开销、提升性能。您可通过设置 tidb_constraint_check_in_place 为 TRUE 改变此行为。
  TiDB 支持创建外键约束，但不会在 DML 语句中对外键进行约束（即外键约束不生效）。
  外键约束 目前，TiDB 支持创建外键。例如：
CREATE TABLE users ( id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, doc JSON ); CREATE TABLE orders ( id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, user_id INT NOT NULL, doc JSON, FOREIGN KEY fk_user_id (user_id) REFERENCES users(id) );  SELECT table_name, column_name, constraint_name, referenced_table_name, referenced_column_name FROM information_schema.</description>
    </item>
    
    <item>
      <title>线上负载与 `ADD INDEX` 相互影响测试</title>
      <link>https://pingcap.com/docs-cn/dev/benchmark/add-index-with-load/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/benchmark/add-index-with-load/</guid>
      <description>线上负载与 ADD INDEX 相互影响测试 测试目的 测试 OLTP 场景下，ADD INDEX 与线上负载的相互影响。
测试版本、时间、地点 TiDB 版本：v3.0.1
时间：2019 年 7 月
地点：北京
测试环境 测试在 Kubernetes 集群上进行，部署了 3 个 TiDB 实例，3 个 TiKV 实例和 3 个 PD 实例。
版本信息    组件 GitHash     TiDB 9e4e8da3c58c65123db5f26409759fe1847529f8   TiKV 4151dc8878985df191b47851d67ca21365396133   PD 811ce0b9a1335d1b2a049fd97ef9e186f1c9efc1    Sysbench 版本：1.0.17
TiDB 参数配置 TiDB、TiKV 和 PD 均使用 TiDB Operator 默认配置。
集群拓扑    机器 IP 部署实例     172.</description>
    </item>
    
    <item>
      <title>线上负载与 `ADD INDEX` 相互影响测试</title>
      <link>https://pingcap.com/docs-cn/stable/benchmark/add-index-with-load/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/benchmark/add-index-with-load/</guid>
      <description>线上负载与 ADD INDEX 相互影响测试 测试目的 测试 OLTP 场景下，ADD INDEX 与线上负载的相互影响。
测试版本、时间、地点 TiDB 版本：v3.0.1
时间：2019 年 7 月
地点：北京
测试环境 测试在 Kubernetes 集群上进行，部署了 3 个 TiDB 实例，3 个 TiKV 实例和 3 个 PD 实例。
版本信息    组件 GitHash     TiDB 9e4e8da3c58c65123db5f26409759fe1847529f8   TiKV 4151dc8878985df191b47851d67ca21365396133   PD 811ce0b9a1335d1b2a049fd97ef9e186f1c9efc1    Sysbench 版本：1.0.17
TiDB 参数配置 TiDB、TiKV 和 PD 均使用 TiDB Operator 默认配置。
集群拓扑    机器 IP 部署实例     172.</description>
    </item>
    
    <item>
      <title>线上负载与 `ADD INDEX` 相互影响测试</title>
      <link>https://pingcap.com/docs-cn/v3.1/benchmark/add-index-with-load/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/benchmark/add-index-with-load/</guid>
      <description>线上负载与 ADD INDEX 相互影响测试 测试目的 测试 OLTP 场景下，ADD INDEX 与线上负载的相互影响。
测试版本、时间、地点 TiDB 版本：v3.0.1
时间：2019 年 7 月
地点：北京
测试环境 测试在 Kubernetes 集群上进行，部署了 3 个 TiDB 实例，3 个 TiKV 实例和 3 个 PD 实例。
版本信息    组件 GitHash     TiDB 9e4e8da3c58c65123db5f26409759fe1847529f8   TiKV 4151dc8878985df191b47851d67ca21365396133   PD 811ce0b9a1335d1b2a049fd97ef9e186f1c9efc1    Sysbench 版本：1.0.17
TiDB 参数配置 TiDB、TiKV 和 PD 均使用 TiDB Operator 默认配置。
集群拓扑    机器 IP 部署实例     172.</description>
    </item>
    
    <item>
      <title>统计信息简介</title>
      <link>https://pingcap.com/docs-cn/dev/reference/performance/statistics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/performance/statistics/</guid>
      <description>统计信息简介 TiDB 优化器会根据统计信息来选择最优的执行计划。统计信息收集了表级别和列级别的信息，表的统计信息包括总行数和修改的行数。列的统计信息包括不同值的数量、NULL 的数量、直方图、列上出现次数最多的值 TOPN 以及该列的 Count-Min Sketch 信息。
统计信息的收集 手动收集 可以通过执行 ANALYZE 语句来收集统计信息。
全量收集  注意：
在 TiDB 中执行 ANALYZE TABLE 语句比在 MySQL 或 InnoDB 中耗时更长。InnoDB 采样的只是少量页面，但 TiDB 会完全重构一系列统计信息。适用于 MySQL 的脚本会误以为执行 ANALYZE TABLE 耗时较短。
如需更快的分析速度，可将 tidb_enable_fast_analyze 设置为 1 来打开快速分析功能。该参数的默认值为 0。
快速分析功能开启后，TiDB 会随机采样约 10000 行的数据来构建统计信息。因此在数据分布不均匀或者数据量比较少的情况下，统计信息的准确度会比较差。可能导致执行计划不优，比如选错索引。如果可以接受普通 ANALYZE 语句的执行时间，则推荐关闭快速分析功能。
 可以通过以下几种语法进行全量收集。
收集 TableNameList 中所有表的统计信息：
 ANALYZE TABLE TableNameList [WITH NUM BUCKETS|TOPN|CMSKETCH DEPTH|CMSKETCH WIDTH|SAMPLES];  WITH NUM BUCKETS 用于指定生成直方图的桶数量上限。 WITH NUM TOPN 用于指定生成 TOPN 数目的上限。 WITH NUM CMSKETCH DEPTH 用于指定 CM Sketch 的长。 WITH NUM CMSKETCH WIDTH 用于指定 CM Sketch 的宽。 WITH NUM SAMPLES 用于指定采样的数目。  收集 TableName 中所有的 IndexNameList 中的索引列的统计信息：</description>
    </item>
    
    <item>
      <title>统计信息简介</title>
      <link>https://pingcap.com/docs-cn/stable/reference/performance/statistics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/performance/statistics/</guid>
      <description>统计信息简介 TiDB 优化器会根据统计信息来选择最优的执行计划。统计信息收集了表级别和列级别的信息，表的统计信息包括总行数和修改的行数。列的统计信息包括不同值的数量、NULL 的数量、直方图、列上出现次数最多的值 TOPN 以及该列的 Count-Min Sketch 信息。
统计信息的收集 手动收集 可以通过执行 ANALYZE 语句来收集统计信息。
全量收集  注意：
在 TiDB 中执行 ANALYZE TABLE 语句比在 MySQL 或 InnoDB 中耗时更长。InnoDB 采样的只是少量页面，但 TiDB 会完全重构一系列统计信息。适用于 MySQL 的脚本会误以为执行 ANALYZE TABLE 耗时较短。
如需更快的分析速度，可将 tidb_enable_fast_analyze 设置为 1 来打开快速分析功能。该参数的默认值为 0。
快速分析功能开启后，TiDB 会随机采样约 10000 行的数据来构建统计信息。因此在数据分布不均匀或者数据量比较少的情况下，统计信息的准确度会比较差。可能导致执行计划不优，比如选错索引。如果可以接受普通 ANALYZE 语句的执行时间，则推荐关闭快速分析功能。
 可以通过以下几种语法进行全量收集。
收集 TableNameList 中所有表的统计信息：
 ANALYZE TABLE TableNameList [WITH NUM BUCKETS]; WITH NUM BUCKETS 可以用来指定生成直方图的桶数量上限。
收集 TableName 中所有的 IndexNameList 中的索引列的统计信息：
 ANALYZE TABLE TableName INDEX [IndexNameList] [WITH NUM BUCKETS]; IndexNameList 为空时会收集所有索引列的统计信息。</description>
    </item>
    
    <item>
      <title>统计信息简介</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/performance/statistics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/performance/statistics/</guid>
      <description>统计信息简介 TiDB 优化器会根据统计信息来选择最优的执行计划。统计信息收集了表级别和列级别的信息，表的统计信息包括总行数和修改的行数。列的统计信息包括不同值的数量、NULL 的数量、直方图，以及该列的 Count-Min Sketch 信息。
统计信息的收集 手动收集 可以通过执行 ANALYZE 语句来收集统计信息。
 注意：
在 TiDB 中执行 ANALYZE TABLE 语句比在 MySQL 或 InnoDB 中耗时更长。InnoDB 采样的只是少量页面，但 TiDB 会完全重构一系列统计信息。适用于 MySQL 的脚本会误以为执行 ANALYZE TABLE 耗时较短。
 语法：
ANALYZE TABLE TableNameList [WITH NUM BUCKETS] &amp;gt; 该语句会收集 TableNameList 中所有表的统计信息。 &amp;gt; WITH NUM BUCKETS 可以用来指定生成直方图的桶数量上限。 ANALYZE TABLE TableName INDEX [IndexNameList] [WITH NUM BUCKETS] &amp;gt; 该语句会收集 TableName 中所有的 IndexNameList 中的索引列的统计信息。 &amp;gt; IndexNameList 为空时会收集所有索引列的统计信息。 ANALYZE TABLE TableName PARTITION PartitionNameList [WITH NUM BUCKETS] &amp;gt; 该语句会收集 TableName 中所有的 PartitionNameList 中分区的统计信息。 ANALYZE TABLE TableName PARTITION PartitionNameList [IndexNameList] [WITH NUM BUCKETS] &amp;gt; 该语句会收集 TableName 中所有的 PartitionNameList 中分区的索引列统计信息。 自动更新 在发生增加，删除以及修改语句时，TiDB 会自动更新表的总行数以及修改的行数。这些信息会定期持久化下来， 更新的周期是 20 * stats-lease，stats-lease 的默认值是 3s，如果将其指定为 0，那么将不会自动更新。</description>
    </item>
    
    <item>
      <title>统计信息简介</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/performance/statistics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/performance/statistics/</guid>
      <description>统计信息简介 TiDB 优化器会根据统计信息来选择最优的执行计划。统计信息收集了表级别和列级别的信息，表的统计信息包括总行数和修改的行数。列的统计信息包括不同值的数量、NULL 的数量、直方图、列上出现次数最多的值 TOPN 以及该列的 Count-Min Sketch 信息。
统计信息的收集 手动收集 可以通过执行 ANALYZE 语句来收集统计信息。
全量收集  注意：
在 TiDB 中执行 ANALYZE TABLE 语句比在 MySQL 或 InnoDB 中耗时更长。InnoDB 采样的只是少量页面，但 TiDB 会完全重构一系列统计信息。适用于 MySQL 的脚本会误以为执行 ANALYZE TABLE 耗时较短。
如需更快的分析速度，可将 tidb_enable_fast_analyze 设置为 1 来打开快速分析功能。该参数的默认值为 0。
快速分析功能开启后，TiDB 会随机采样约 10000 行的数据来构建统计信息。因此在数据分布不均匀或者数据量比较少的情况下，统计信息的准确度会比较差。可能导致执行计划不优，比如选错索引。如果可以接受普通 ANALYZE 语句的执行时间，则推荐关闭快速分析功能。
 可以通过以下几种语法进行全量收集。
收集 TableNameList 中所有表的统计信息：
 ANALYZE TABLE TableNameList [WITH NUM BUCKETS]; WITH NUM BUCKETS 可以用来指定生成直方图的桶数量上限。
收集 TableName 中所有的 IndexNameList 中的索引列的统计信息：
 ANALYZE TABLE TableName INDEX [IndexNameList] [WITH NUM BUCKETS]; IndexNameList 为空时会收集所有索引列的统计信息。</description>
    </item>
    
    <item>
      <title>维护 TiDB 集群所在的 Kubernetes 节点</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/kubernetes-node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/kubernetes-node/</guid>
      <description>维护 TiDB 集群所在的 Kubernetes 节点 TiDB 是高可用数据库，可以在部分数据库节点下线的情况下正常运行，因此，我们可以安全地对底层 Kubernetes 节点进行停机维护。在具体操作时，针对 PD、TiKV 和 TiDB 实例的不同特性，我们需要采取不同的操作策略。
本文档将详细介绍如何对 Kubernetes 节点进行临时或长期的维护操作。
环境准备：
 kubectl tkctl jq   注意：
长期维护节点前，需要保证 Kubernetes 集群的剩余资源足够运行 TiDB 集群。
 维护 PD 和 TiDB 实例所在节点 PD 和 TiDB 实例的迁移较快，可以采取主动驱逐实例到其它节点上的策略进行节点维护：
  检查待维护节点上是否有 TiKV 实例：
 kubectl get pod --all-namespaces -o wide | grep &amp;lt;node-name&amp;gt; 假如存在 TiKV 实例，请参考维护 TiKV 实例所在节点。
  使用 kubectl cordon 命令防止新的 Pod 调度到待维护节点上：
 kubectl cordon &amp;lt;node-name&amp;gt;   使用 kubectl drain 命令将待维护节点上的数据库实例迁移到其它节点上：</description>
    </item>
    
    <item>
      <title>维护 TiDB 集群所在的 Kubernetes 节点</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/kubernetes-node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/kubernetes-node/</guid>
      <description>维护 TiDB 集群所在的 Kubernetes 节点 TiDB 是高可用数据库，可以在部分数据库节点下线的情况下正常运行，因此，我们可以安全地对底层 Kubernetes 节点进行停机维护。在具体操作时，针对 PD、TiKV 和 TiDB 实例的不同特性，我们需要采取不同的操作策略。
本文档将详细介绍如何对 Kubernetes 节点进行临时或长期的维护操作。
环境准备：
 kubectl tkctl jq   注意：
长期维护节点前，需要保证 Kubernetes 集群的剩余资源足够运行 TiDB 集群。
 维护 PD 和 TiDB 实例所在节点 PD 和 TiDB 实例的迁移较快，可以采取主动驱逐实例到其它节点上的策略进行节点维护：
  检查待维护节点上是否有 TiKV 实例：
 kubectl get pod --all-namespaces -o wide | grep &amp;lt;node-name&amp;gt; 假如存在 TiKV 实例，请参考维护 TiKV 实例所在节点。
  使用 kubectl cordon 命令防止新的 Pod 调度到待维护节点上：
 kubectl cordon &amp;lt;node-name&amp;gt;   使用 kubectl drain 命令将待维护节点上的数据库实例迁移到其它节点上：</description>
    </item>
    
    <item>
      <title>维护 TiDB 集群所在的 Kubernetes 节点</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/kubernetes-node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/kubernetes-node/</guid>
      <description>维护 TiDB 集群所在的 Kubernetes 节点 TiDB 是高可用数据库，可以在部分数据库节点下线的情况下正常运行，因此，我们可以安全地对底层 Kubernetes 节点进行停机维护。在具体操作时，针对 PD、TiKV 和 TiDB 实例的不同特性，我们需要采取不同的操作策略。
本文档将详细介绍如何对 Kubernetes 节点进行临时或长期的维护操作。
环境准备：
 kubectl tkctl jq   注意：
长期维护节点前，需要保证 Kubernetes 集群的剩余资源足够运行 TiDB 集群。
 维护 PD 和 TiDB 实例所在节点 PD 和 TiDB 实例的迁移较快，可以采取主动驱逐实例到其它节点上的策略进行节点维护：
  检查待维护节点上是否有 TiKV 实例：
 kubectl get pod --all-namespaces -o wide | grep &amp;lt;node-name&amp;gt; 假如存在 TiKV 实例，请参考维护 TiKV 实例所在节点。
  使用 kubectl cordon 命令防止新的 Pod 调度到待维护节点上：
 kubectl cordon &amp;lt;node-name&amp;gt;   使用 kubectl drain 命令将待维护节点上的数据库实例迁移到其它节点上：</description>
    </item>
    
    <item>
      <title>网站产品经理</title>
      <link>https://pingcap.com/about-cn/recruit/product-design/website-product-manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/product-design/website-product-manager/</guid>
      <description>网站产品经理 岗位职责：
  负责公司官网（包括：论坛，培训等）的规划工作；
  负责公司官网（包括：论坛，培训等）业务逻辑，用户体验优化；
  负责用户调研，收集内外部用户需求，完成需求排序，原型设计、BRD、MRD、PRD、原型图文档的编写；
  负责协调推动后端各种资源合作及执行达成产品目标。
  任职要求：
  2 年以上产品经理相关工作经验，对当前国内外流行的互联网产品有深入理解；
  有大型网站工作经验者优先；
  具备较好的交互设计能力；
  善于沟通，做事认真、细致、逻辑性强，有责任心和团队合作精神，具备优秀的学习能力和创新能力；
  具备较强的产品 owner 意识，主动优化产品，执行力强，能承受业务发展带来的压力。
  待遇：
15K - 45K + 期权，13薪 + 奖金，优秀者可面议
联系方式：
hire@pingcap.com
工作地点：
北京，上海，广州，杭州，成都，深圳</description>
    </item>
    
    <item>
      <title>联合解决方案</title>
      <link>https://pingcap.com/solutions/intel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/solutions/intel/</guid>
      <description>进入 PingCAP 官网，分享创新的联合解决方案，体验全新的分布式 HTAP 数据库。</description>
    </item>
    
    <item>
      <title>表达式求值的类型转换</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/type-conversion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/functions-and-operators/type-conversion/</guid>
      <description>表达式求值的类型转换 TiDB 中表达式求值的类型转换与 MySQL 基本一致，详情参见 MySQL 表达式求值的类型转换。</description>
    </item>
    
    <item>
      <title>表达式求值的类型转换</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/type-conversion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/functions-and-operators/type-conversion/</guid>
      <description>表达式求值的类型转换 TiDB 中表达式求值的类型转换与 MySQL 基本一致，详情参见 MySQL 表达式求值的类型转换。</description>
    </item>
    
    <item>
      <title>表达式求值的类型转换</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/type-conversion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/functions-and-operators/type-conversion/</guid>
      <description>表达式求值的类型转换 TiDB 中表达式求值的类型转换与 MySQL 基本一致，详情参见 MySQL 表达式求值的类型转换。</description>
    </item>
    
    <item>
      <title>表达式求值的类型转换</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/type-conversion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/functions-and-operators/type-conversion/</guid>
      <description>表达式求值的类型转换 TiDB 中表达式求值的类型转换与 MySQL 基本一致，详情参见 MySQL 表达式求值的类型转换。</description>
    </item>
    
    <item>
      <title>表达式语法</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/language-structure/expression-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/language-structure/expression-syntax/</guid>
      <description>表达式语法 (Expression Syntax) 在 TiDB 中，以下规则是表达式的语法，你可以在 parser/parser.y 中找到定义。TiDB 的语法解析是基于 yacc 的。
Expression: singleAtIdentifier assignmentEq Expression | Expression logOr Expression | Expression &amp;#34;XOR&amp;#34; Expression | Expression logAnd Expression | &amp;#34;NOT&amp;#34; Expression | Factor IsOrNotOp trueKwd | Factor IsOrNotOp falseKwd | Factor IsOrNotOp &amp;#34;UNKNOWN&amp;#34; | Factor Factor: Factor IsOrNotOp &amp;#34;NULL&amp;#34; | Factor CompareOp PredicateExpr | Factor CompareOp singleAtIdentifier assignmentEq PredicateExpr | Factor CompareOp AnyOrAll SubSelect | PredicateExpr PredicateExpr: PrimaryFactor InOrNotOp &amp;#39;(&amp;#39; ExpressionList &amp;#39;)&amp;#39; | PrimaryFactor InOrNotOp SubSelect | PrimaryFactor BetweenOrNotOp PrimaryFactor &amp;#34;AND&amp;#34; PredicateExpr | PrimaryFactor LikeOrNotOp PrimaryExpression LikeEscapeOpt | PrimaryFactor RegexpOrNotOp PrimaryExpression | PrimaryFactor PrimaryFactor: PrimaryFactor &amp;#39;|&amp;#39; PrimaryFactor | PrimaryFactor &amp;#39;&amp;amp;&amp;#39; PrimaryFactor | PrimaryFactor &amp;#34;&amp;lt;&amp;lt;&amp;#34; PrimaryFactor | PrimaryFactor &amp;#34;&amp;gt;&amp;gt;&amp;#34; PrimaryFactor | PrimaryFactor &amp;#39;+&amp;#39; PrimaryFactor | PrimaryFactor &amp;#39;-&amp;#39; PrimaryFactor | PrimaryFactor &amp;#39;*&amp;#39; PrimaryFactor | PrimaryFactor &amp;#39;/&amp;#39; PrimaryFactor | PrimaryFactor &amp;#39;%&amp;#39; PrimaryFactor | PrimaryFactor &amp;#34;DIV&amp;#34; PrimaryFactor | PrimaryFactor &amp;#34;MOD&amp;#34; PrimaryFactor | PrimaryFactor &amp;#39;^&amp;#39; PrimaryFactor | PrimaryExpression PrimaryExpression: Operand | FunctionCallKeyword | FunctionCallNonKeyword | FunctionCallAgg | FunctionCallGeneric | Identifier jss stringLit | Identifier juss stringLit | SubSelect | &amp;#39;!</description>
    </item>
    
    <item>
      <title>表达式语法</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/language-structure/expression-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/language-structure/expression-syntax/</guid>
      <description>表达式语法 (Expression Syntax) 在 TiDB 中，以下规则是表达式的语法，你可以在 parser/parser.y 中找到定义。TiDB 的语法解析是基于 yacc 的。
Expression: singleAtIdentifier assignmentEq Expression | Expression logOr Expression | Expression &amp;#34;XOR&amp;#34; Expression | Expression logAnd Expression | &amp;#34;NOT&amp;#34; Expression | Factor IsOrNotOp trueKwd | Factor IsOrNotOp falseKwd | Factor IsOrNotOp &amp;#34;UNKNOWN&amp;#34; | Factor Factor: Factor IsOrNotOp &amp;#34;NULL&amp;#34; | Factor CompareOp PredicateExpr | Factor CompareOp singleAtIdentifier assignmentEq PredicateExpr | Factor CompareOp AnyOrAll SubSelect | PredicateExpr PredicateExpr: PrimaryFactor InOrNotOp &amp;#39;(&amp;#39; ExpressionList &amp;#39;)&amp;#39; | PrimaryFactor InOrNotOp SubSelect | PrimaryFactor BetweenOrNotOp PrimaryFactor &amp;#34;AND&amp;#34; PredicateExpr | PrimaryFactor LikeOrNotOp PrimaryExpression LikeEscapeOpt | PrimaryFactor RegexpOrNotOp PrimaryExpression | PrimaryFactor PrimaryFactor: PrimaryFactor &amp;#39;|&amp;#39; PrimaryFactor | PrimaryFactor &amp;#39;&amp;amp;&amp;#39; PrimaryFactor | PrimaryFactor &amp;#34;&amp;lt;&amp;lt;&amp;#34; PrimaryFactor | PrimaryFactor &amp;#34;&amp;gt;&amp;gt;&amp;#34; PrimaryFactor | PrimaryFactor &amp;#39;+&amp;#39; PrimaryFactor | PrimaryFactor &amp;#39;-&amp;#39; PrimaryFactor | PrimaryFactor &amp;#39;*&amp;#39; PrimaryFactor | PrimaryFactor &amp;#39;/&amp;#39; PrimaryFactor | PrimaryFactor &amp;#39;%&amp;#39; PrimaryFactor | PrimaryFactor &amp;#34;DIV&amp;#34; PrimaryFactor | PrimaryFactor &amp;#34;MOD&amp;#34; PrimaryFactor | PrimaryFactor &amp;#39;^&amp;#39; PrimaryFactor | PrimaryExpression PrimaryExpression: Operand | FunctionCallKeyword | FunctionCallNonKeyword | FunctionCallAgg | FunctionCallGeneric | Identifier jss stringLit | Identifier juss stringLit | SubSelect | &amp;#39;!</description>
    </item>
    
    <item>
      <title>表达式语法</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/sql/language-structure/expression-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/sql/language-structure/expression-syntax/</guid>
      <description>表达式语法 (Expression Syntax) 在 TiDB 中，以下规则是表达式的语法，你可以在 parser/parser.y 中找到定义。TiDB 的语法解析是基于 yacc 的。
Expression: singleAtIdentifier assignmentEq Expression | Expression logOr Expression | Expression &amp;#34;XOR&amp;#34; Expression | Expression logAnd Expression | &amp;#34;NOT&amp;#34; Expression | Factor IsOrNotOp trueKwd | Factor IsOrNotOp falseKwd | Factor IsOrNotOp &amp;#34;UNKNOWN&amp;#34; | Factor Factor: Factor IsOrNotOp &amp;#34;NULL&amp;#34; | Factor CompareOp PredicateExpr | Factor CompareOp singleAtIdentifier assignmentEq PredicateExpr | Factor CompareOp AnyOrAll SubSelect | PredicateExpr PredicateExpr: PrimaryFactor InOrNotOp &amp;#39;(&amp;#39; ExpressionList &amp;#39;)&amp;#39; | PrimaryFactor InOrNotOp SubSelect | PrimaryFactor BetweenOrNotOp PrimaryFactor &amp;#34;AND&amp;#34; PredicateExpr | PrimaryFactor LikeOrNotOp PrimaryExpression LikeEscapeOpt | PrimaryFactor RegexpOrNotOp PrimaryExpression | PrimaryFactor PrimaryFactor: PrimaryFactor &amp;#39;|&amp;#39; PrimaryFactor | PrimaryFactor &amp;#39;&amp;amp;&amp;#39; PrimaryFactor | PrimaryFactor &amp;#34;&amp;lt;&amp;lt;&amp;#34; PrimaryFactor | PrimaryFactor &amp;#34;&amp;gt;&amp;gt;&amp;#34; PrimaryFactor | PrimaryFactor &amp;#39;+&amp;#39; PrimaryFactor | PrimaryFactor &amp;#39;-&amp;#39; PrimaryFactor | PrimaryFactor &amp;#39;*&amp;#39; PrimaryFactor | PrimaryFactor &amp;#39;/&amp;#39; PrimaryFactor | PrimaryFactor &amp;#39;%&amp;#39; PrimaryFactor | PrimaryFactor &amp;#34;DIV&amp;#34; PrimaryFactor | PrimaryFactor &amp;#34;MOD&amp;#34; PrimaryFactor | PrimaryFactor &amp;#39;^&amp;#39; PrimaryFactor | PrimaryExpression PrimaryExpression: Operand | FunctionCallKeyword | FunctionCallNonKeyword | FunctionCallAgg | FunctionCallGeneric | Identifier jss stringLit | Identifier juss stringLit | SubSelect | &amp;#39;!</description>
    </item>
    
    <item>
      <title>表达式语法</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/language-structure/expression-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/language-structure/expression-syntax/</guid>
      <description>表达式语法 (Expression Syntax) 在 TiDB 中，以下规则是表达式的语法，你可以在 parser/parser.y 中找到定义。TiDB 的语法解析是基于 yacc 的。
Expression: singleAtIdentifier assignmentEq Expression | Expression logOr Expression | Expression &amp;#34;XOR&amp;#34; Expression | Expression logAnd Expression | &amp;#34;NOT&amp;#34; Expression | Factor IsOrNotOp trueKwd | Factor IsOrNotOp falseKwd | Factor IsOrNotOp &amp;#34;UNKNOWN&amp;#34; | Factor Factor: Factor IsOrNotOp &amp;#34;NULL&amp;#34; | Factor CompareOp PredicateExpr | Factor CompareOp singleAtIdentifier assignmentEq PredicateExpr | Factor CompareOp AnyOrAll SubSelect | PredicateExpr PredicateExpr: PrimaryFactor InOrNotOp &amp;#39;(&amp;#39; ExpressionList &amp;#39;)&amp;#39; | PrimaryFactor InOrNotOp SubSelect | PrimaryFactor BetweenOrNotOp PrimaryFactor &amp;#34;AND&amp;#34; PredicateExpr | PrimaryFactor LikeOrNotOp PrimaryExpression LikeEscapeOpt | PrimaryFactor RegexpOrNotOp PrimaryExpression | PrimaryFactor PrimaryFactor: PrimaryFactor &amp;#39;|&amp;#39; PrimaryFactor | PrimaryFactor &amp;#39;&amp;amp;&amp;#39; PrimaryFactor | PrimaryFactor &amp;#34;&amp;lt;&amp;lt;&amp;#34; PrimaryFactor | PrimaryFactor &amp;#34;&amp;gt;&amp;gt;&amp;#34; PrimaryFactor | PrimaryFactor &amp;#39;+&amp;#39; PrimaryFactor | PrimaryFactor &amp;#39;-&amp;#39; PrimaryFactor | PrimaryFactor &amp;#39;*&amp;#39; PrimaryFactor | PrimaryFactor &amp;#39;/&amp;#39; PrimaryFactor | PrimaryFactor &amp;#39;%&amp;#39; PrimaryFactor | PrimaryFactor &amp;#34;DIV&amp;#34; PrimaryFactor | PrimaryFactor &amp;#34;MOD&amp;#34; PrimaryFactor | PrimaryFactor &amp;#39;^&amp;#39; PrimaryFactor | PrimaryExpression PrimaryExpression: Operand | FunctionCallKeyword | FunctionCallNonKeyword | FunctionCallAgg | FunctionCallGeneric | Identifier jss stringLit | Identifier juss stringLit | SubSelect | &amp;#39;!</description>
    </item>
    
    <item>
      <title>视图</title>
      <link>https://pingcap.com/docs-cn/dev/reference/sql/view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/sql/view/</guid>
      <description>视图 TiDB 支持视图，视图是一张虚拟表，该虚拟表的结构由创建视图时的 SELECT 语句定义。使用视图一方面可以对用户只暴露安全的字段及数据，进而保证底层表的敏感字段及数据的安全。另一方面，将频繁出现的复杂查询定义为视图，可以使复杂查询更加简单便捷。
查询视图 查询一个视图和查询一张普通表类似。但是 TiDB 在真正执行查询视图时，会将视图展开成创建视图时定义的 SELECT 语句，进而执行展开后的查询语句。
样例 以下例子将创建一个视图，并在该视图上进行查询，最后删除该视图。
 create table t(a int, b int); Query OK, 0 rows affected (0.01 sec)  insert into t values(1, 1),(2,2),(3,3); Query OK, 3 rows affected (0.00 sec) Records: 3 Duplicates: 0 Warnings: 0  create table s(a int); Query OK, 0 rows affected (0.01 sec)  insert into s values(2),(3); Query OK, 2 rows affected (0.01 sec) Records: 2 Duplicates: 0 Warnings: 0  create view v as select s.</description>
    </item>
    
    <item>
      <title>视图</title>
      <link>https://pingcap.com/docs-cn/stable/reference/sql/view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/sql/view/</guid>
      <description>视图 TiDB 支持视图，视图是一张虚拟表，该虚拟表的结构由创建视图时的 SELECT 语句定义。使用视图一方面可以对用户只暴露安全的字段及数据，进而保证底层表的敏感字段及数据的安全。另一方面，将频繁出现的复杂查询定义为视图，可以使复杂查询更加简单便捷。
查询视图 查询一个视图和查询一张普通表类似。但是 TiDB 在真正执行查询视图时，会将视图展开成创建视图时定义的 SELECT 语句，进而执行展开后的查询语句。
样例 以下例子将创建一个视图，并在该视图上进行查询，最后删除该视图。
 create table t(a int, b int); Query OK, 0 rows affected (0.01 sec)  insert into t values(1, 1),(2,2),(3,3); Query OK, 3 rows affected (0.00 sec) Records: 3 Duplicates: 0 Warnings: 0  create table s(a int); Query OK, 0 rows affected (0.01 sec)  insert into s values(2),(3); Query OK, 2 rows affected (0.01 sec) Records: 2 Duplicates: 0 Warnings: 0  create view v as select s.</description>
    </item>
    
    <item>
      <title>视图</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/sql/view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/sql/view/</guid>
      <description>视图 TiDB 支持视图，视图是一张虚拟表，该虚拟表的结构由创建视图时的 SELECT 语句定义。使用视图一方面可以对用户只暴露安全的字段及数据，进而保证底层表的敏感字段及数据的安全。另一方面，将频繁出现的复杂查询定义为视图，可以使复杂查询更加简单便捷。
查询视图 查询一个视图和查询一张普通表类似。但是 TiDB 在真正执行查询视图时，会将视图展开成创建视图时定义的 SELECT 语句，进而执行展开后的查询语句。
样例 以下例子将创建一个视图，并在该视图上进行查询，最后删除该视图。
 create table t(a int, b int); Query OK, 0 rows affected (0.01 sec)  insert into t values(1, 1),(2,2),(3,3); Query OK, 3 rows affected (0.00 sec) Records: 3 Duplicates: 0 Warnings: 0  create table s(a int); Query OK, 0 rows affected (0.01 sec)  insert into s values(2),(3); Query OK, 2 rows affected (0.01 sec) Records: 2 Duplicates: 0 Warnings: 0  create view v as select s.</description>
    </item>
    
    <item>
      <title>访问 Kubernetes 上的 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/deploy/access-tidb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/deploy/access-tidb/</guid>
      <description>访问 Kubernetes 上的 TiDB 集群 在 Kubernetes 集群内访问 TiDB 时，使用 TiDB service 域名 &amp;lt;release-name&amp;gt;-tidb.&amp;lt;namespace&amp;gt; 即可。若需要在集群外访问，则需将 TiDB 服务端口暴露出去。在 tidb-cluster Helm chart 中，通过 values.yaml 文件中的 tidb.service 字段进行配置：
 tidb: service: type: NodePort # externalTrafficPolicy: Cluster # annotations: # cloud.google.com/load-balancer-type: Internal NodePort 在没有 LoadBalancer 时，可选择通过 NodePort 暴露。NodePort 有两种模式：
  externalTrafficPolicy=Cluster：集群所有的机器都会给 TiDB 分配 TCP 端口，此为默认值
使用 Cluster 模式时，可以通过任意一台机器的 IP 加同一个端口访问 TiDB 服务，如果该机器上没有 TiDB Pod，则相应请求会转发到有 TiDB Pod 的机器上。
 注意：
该模式下 TiDB 服务获取到的请求源 IP 是主机 IP，并不是真正的客户端源 IP，所以基于客户端源 IP 的访问权限控制在该模式下不可用。</description>
    </item>
    
    <item>
      <title>访问 Kubernetes 上的 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/deploy/access-tidb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/deploy/access-tidb/</guid>
      <description>访问 Kubernetes 上的 TiDB 集群 在 Kubernetes 集群内访问 TiDB 时，使用 TiDB service 域名 &amp;lt;release-name&amp;gt;-tidb.&amp;lt;namespace&amp;gt; 即可。若需要在集群外访问，则需将 TiDB 服务端口暴露出去。在 tidb-cluster Helm chart 中，通过 values.yaml 文件中的 tidb.service 字段进行配置：
 tidb: service: type: NodePort # externalTrafficPolicy: Cluster # annotations: # cloud.google.com/load-balancer-type: Internal NodePort 在没有 LoadBalancer 时，可选择通过 NodePort 暴露。NodePort 有两种模式：
  externalTrafficPolicy=Cluster：集群所有的机器都会给 TiDB 分配 TCP 端口，此为默认值
使用 Cluster 模式时，可以通过任意一台机器的 IP 加同一个端口访问 TiDB 服务，如果该机器上没有 TiDB Pod，则相应请求会转发到有 TiDB Pod 的机器上。
 注意：
该模式下 TiDB 服务获取到的请求源 IP 是主机 IP，并不是真正的客户端源 IP，所以基于客户端源 IP 的访问权限控制在该模式下不可用。</description>
    </item>
    
    <item>
      <title>访问 Kubernetes 上的 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/deploy/access-tidb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/deploy/access-tidb/</guid>
      <description>访问 Kubernetes 上的 TiDB 集群 在 Kubernetes 集群内访问 TiDB 时，使用 TiDB service 域名 &amp;lt;release-name&amp;gt;-tidb.&amp;lt;namespace&amp;gt; 即可。若需要在集群外访问，则需将 TiDB 服务端口暴露出去。在 tidb-cluster Helm chart 中，通过 values.yaml 文件中的 tidb.service 字段进行配置：
 tidb: service: type: NodePort # externalTrafficPolicy: Cluster # annotations: # cloud.google.com/load-balancer-type: Internal NodePort 在没有 LoadBalancer 时，可选择通过 NodePort 暴露。NodePort 有两种模式：
  externalTrafficPolicy=Cluster：集群所有的机器都会给 TiDB 分配 TCP 端口，此为默认值
使用 Cluster 模式时，可以通过任意一台机器的 IP 加同一个端口访问 TiDB 服务，如果该机器上没有 TiDB Pod，则相应请求会转发到有 TiDB Pod 的机器上。
 注意：
该模式下 TiDB 服务获取到的请求源 IP 是主机 IP，并不是真正的客户端源 IP，所以基于客户端源 IP 的访问权限控制在该模式下不可用。</description>
    </item>
    
    <item>
      <title>读取历史数据</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/get-started/read-historical-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/get-started/read-historical-data/</guid>
      <description>读取历史数据 本文档介绍 TiDB 如何读取历史版本数据，包括具体的操作流程以及历史数据的保存策略。
功能说明 TiDB 实现了通过标准 SQL 接口读取历史数据功能，无需特殊的 client 或者 driver。当数据被更新、删除后，依然可以通过 SQL 接口将更新/删除前的数据读取出来。
另外即使在更新数据之后，表结构发生了变化，TiDB 依旧能用旧的表结构将数据读取出来。
操作流程 为支持读取历史版本数据， 引入了一个新的 system variable: tidb_snapshot ，这个变量是 Session 范围有效，可以通过标准的 Set 语句修改其值。其值为文本，能够存储 TSO 和日期时间。TSO 即是全局授时的时间戳，是从 PD 端获取的; 日期时间的格式可以为： “2016-10-08 16:45:26.999”，一般来说可以只写到秒，比如”2016-10-08 16:45:26”。 当这个变量被设置时，TiDB 会用这个时间戳建立 Snapshot（没有开销，只是创建数据结构），随后所有的 Select 操作都会在这个 Snapshot 上读取数据。
 注意：
TiDB 的事务是通过 PD 进行全局授时，所以存储的数据版本也是以 PD 所授时间戳作为版本号。在生成 Snapshot 时，是以 tidb_snapshot 变量的值作为版本号，如果 TiDB Server 所在机器和 PD Server 所在机器的本地时间相差较大，需要以 PD 的时间为准。
 当读取历史版本操作结束后，可以结束当前 Session 或者是通过 Set 语句将 tidb_snapshot 变量的值设为 &amp;ldquo;&amp;quot;，即可读取最新版本的数据。</description>
    </item>
    
    <item>
      <title>读取历史数据</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/get-started/read-historical-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/get-started/read-historical-data/</guid>
      <description>读取历史数据 本文档介绍 TiDB 如何读取历史版本数据，包括具体的操作流程以及历史数据的保存策略。
功能说明 TiDB 实现了通过标准 SQL 接口读取历史数据功能，无需特殊的 client 或者 driver。当数据被更新、删除后，依然可以通过 SQL 接口将更新/删除前的数据读取出来。
另外即使在更新数据之后，表结构发生了变化，TiDB 依旧能用旧的表结构将数据读取出来。
操作流程 为支持读取历史版本数据， 引入了一个新的 system variable: tidb_snapshot ，这个变量是 Session 范围有效，可以通过标准的 Set 语句修改其值。其值为文本，能够存储 TSO 和日期时间。TSO 即是全局授时的时间戳，是从 PD 端获取的; 日期时间的格式可以为： “2016-10-08 16:45:26.999”，一般来说可以只写到秒，比如”2016-10-08 16:45:26”。 当这个变量被设置时，TiDB 会用这个时间戳建立 Snapshot（没有开销，只是创建数据结构），随后所有的 Select 操作都会在这个 Snapshot 上读取数据。
 注意：
TiDB 的事务是通过 PD 进行全局授时，所以存储的数据版本也是以 PD 所授时间戳作为版本号。在生成 Snapshot 时，是以 tidb_snapshot 变量的值作为版本号，如果 TiDB Server 所在机器和 PD Server 所在机器的本地时间相差较大，需要以 PD 的时间为准。
 当读取历史版本操作结束后，可以结束当前 Session 或者是通过 Set 语句将 tidb_snapshot 变量的值设为 &amp;ldquo;&amp;quot;，即可读取最新版本的数据。</description>
    </item>
    
    <item>
      <title>读取历史数据</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/get-started/read-historical-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/get-started/read-historical-data/</guid>
      <description>读取历史数据 本文档介绍 TiDB 如何读取历史版本数据，包括具体的操作流程以及历史数据的保存策略。
功能说明 TiDB 实现了通过标准 SQL 接口读取历史数据功能，无需特殊的 client 或者 driver。当数据被更新、删除后，依然可以通过 SQL 接口将更新/删除前的数据读取出来。
另外即使在更新数据之后，表结构发生了变化，TiDB 依旧能用旧的表结构将数据读取出来。
操作流程 为支持读取历史版本数据， 引入了一个新的 system variable: tidb_snapshot ，这个变量是 Session 范围有效，可以通过标准的 Set 语句修改其值。其值为文本，能够存储 TSO 和日期时间。TSO 即是全局授时的时间戳，是从 PD 端获取的; 日期时间的格式可以为： “2016-10-08 16:45:26.999”，一般来说可以只写到秒，比如”2016-10-08 16:45:26”。 当这个变量被设置时，TiDB 会用这个时间戳建立 Snapshot（没有开销，只是创建数据结构），随后所有的 Select 操作都会在这个 Snapshot 上读取数据。
 注意：
TiDB 的事务是通过 PD 进行全局授时，所以存储的数据版本也是以 PD 所授时间戳作为版本号。在生成 Snapshot 时，是以 tidb_snapshot 变量的值作为版本号，如果 TiDB Server 所在机器和 PD Server 所在机器的本地时间相差较大，需要以 PD 的时间为准。
 当读取历史版本操作结束后，可以结束当前 Session 或者是通过 Set 语句将 tidb_snapshot 变量的值设为 &amp;ldquo;&amp;quot;，即可读取最新版本的数据。</description>
    </item>
    
    <item>
      <title>读取历史数据</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/get-started/read-historical-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/get-started/read-historical-data/</guid>
      <description>读取历史数据 本文档介绍 TiDB 如何读取历史版本数据，包括具体的操作流程以及历史数据的保存策略。
功能说明 TiDB 实现了通过标准 SQL 接口读取历史数据功能，无需特殊的 client 或者 driver。当数据被更新、删除后，依然可以通过 SQL 接口将更新/删除前的数据读取出来。
另外即使在更新数据之后，表结构发生了变化，TiDB 依旧能用旧的表结构将数据读取出来。
操作流程 为支持读取历史版本数据， 引入了一个新的 system variable: tidb_snapshot ，这个变量是 Session 范围有效，可以通过标准的 Set 语句修改其值。其值为文本，能够存储 TSO 和日期时间。TSO 即是全局授时的时间戳，是从 PD 端获取的; 日期时间的格式可以为： “2016-10-08 16:45:26.999”，一般来说可以只写到秒，比如”2016-10-08 16:45:26”。 当这个变量被设置时，TiDB 会用这个时间戳建立 Snapshot（没有开销，只是创建数据结构），随后所有的 Select 操作都会在这个 Snapshot 上读取数据。
 注意：
TiDB 的事务是通过 PD 进行全局授时，所以存储的数据版本也是以 PD 所授时间戳作为版本号。在生成 Snapshot 时，是以 tidb_snapshot 变量的值作为版本号，如果 TiDB Server 所在机器和 PD Server 所在机器的本地时间相差较大，需要以 PD 的时间为准。
 当读取历史版本操作结束后，可以结束当前 Session 或者是通过 Set 语句将 tidb_snapshot 变量的值设为 &amp;ldquo;&amp;quot;，即可读取最新版本的数据。</description>
    </item>
    
    <item>
      <title>资深/高级/中级 TiDB DBA</title>
      <link>https://pingcap.com/about-cn/recruit/user-ecosystem/tidb-dba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/user-ecosystem/tidb-dba/</guid>
      <description>资深/高级/中级 TiDB DBA 岗位职责：
  负责对客户进行 TiDB 技术支持（线上为主），包括配置管理、升级、扩容、备份、数据迁移等工作。
  负责用户 TiDB 集群监控、故障响应、问题跟踪及性能分析处理。
  负责与用户进行需求沟通、技术培训，介绍 TiDB 的原理、使用方式、最佳实践等。
  研究 TiDB，对某细分方向，如 TiDB 自动化管理、SQL 优化、故障诊断、数据迁移等有持续产出、贡献。
  对各种数据库、大数据库技术栈进行调研、测试，对数据库生态工具（如数据迁移等）进行调研、测试，方案落地。
  （可选）Ansible 开发，Docker &amp;amp; Kubernetes 的维护，脚本开发等 DevOps 工作。
  任职要求：
  3 年以上 DBA 相关工作经验（MySQL、Oracle、PostgreSQL 等），或者 3 年以上大数据工作经验（Hadoop、HBase、MongoDB 等）。
  精通一种关系型数据库的（如 MySQL ）配置、备份、优化、监控、管理。
  熟悉 Linux 操作系统，如常用命令、文件系统、系统配置等，具有较强的故障定位和问题解决能力，有丰富处理重大故障的经历。
  熟悉 shell、python、perl 等脚本语言，有 DevOPS 工作经验，或对 Ansible、Cloud、Docker、Prometheus 等技术领域有一定使用经验。</description>
    </item>
    
    <item>
      <title>资深/高级/中级 TiDB 交付 DBA</title>
      <link>https://pingcap.com/about-cn/recruit/business/tidb-delivery-dba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/business/tidb-delivery-dba/</guid>
      <description>资深/高级/中级 TiDB 交付 DBA 岗位职责：
  负责客户 POC ，TiDB 项目落地、客户关系、项目管理；
  负责与用户进行需求沟通、技术培训，介绍 TiDB 的原理、使用方式、最佳实践等；
  负责客户技术支持，包括配置管理、升级、扩容、备份、数据迁移等工作；
  负责用户 TiDB 集群监控、故障响应、问题跟踪及性能分析处理；
  负责 POC 相关文档编写、流程建设、优化；
  研究 TiDB，对某细分方向，如 TiDB 自动化管理、SQL 优化、故障诊断等有持续产出、贡献。
  任职要求：
  3 年以上 DBA 或者 大数据工程师 相关工作经验（MySQL、Oracle、Hadoop等），2 年以上的企业服务工作经验；
  精通一种关系型数据库的（如 MySQL ）配置、备份、优化、监控、管理；
  熟悉 Linux 操作系统，如常用命令、文件系统、系统配置等，具有较强的故障定位和问题解决能力，有丰富处理重大故障的经历；
  丰富的项目管理、项目实施经验，能够独立完成数据库架构设计，标准化建设及 POC 文档编写；
  良好的沟通、技术演讲、资源协调能力，高度的责任心和团队合作精神；
  对某一行业比较熟悉，有丰富的企业服务、管理经验。
  待遇：</description>
    </item>
    
    <item>
      <title>资深互联网架构师</title>
      <link>https://pingcap.com/about-cn/recruit/user-ecosystem/internet-architect/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/user-ecosystem/internet-architect/</guid>
      <description>资深互联网架构师 岗位职责：
  负责 TiDB 技术推广，布道；
  负责互联网用户的技术交流、数据库架构设计；
  作为桥梁连通 TiDB 用户与开发，反馈、整理用户需求，调研主流技术和方案；
  与社区、市场部门密切配合，负责相关的沟通、技术支持、技术文档撰写等工作。
  任职要求：
  5 年以上主流互联网公司数据库、大数据等领域工作经历；
  精通至少两种以上的数据库、大数据产品（如 MySQL、Oracle、各种 NoSQL 等）；
  对云计算、大数据及数据库前沿领域有深入的认识和实践；
  熟悉互联网行业，对互联网业务发展、技术演变有比较深刻的理解；
  优秀的技术演讲，技术文章编写，方案设计、用户交流经验；
  工作条理性强，具有很强的责任心和团队合作精神。
  待遇：
Base 20K - 40K，13薪 + 期权 + 丰厚的业绩奖金，优秀者可面议
工作地点：
北京，上海，杭州</description>
    </item>
    
    <item>
      <title>资深售前技术总监</title>
      <link>https://pingcap.com/about-cn/recruit/business/presales-director/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/business/presales-director/</guid>
      <description>资深售前技术总监 岗位职责：
  负责组织制定公司数据库产品、数据库解决方案的技术方案编写、标书的准备、讲解及用户答疑等工作；
  负责用户的技术交流、技术支持、POC 等工作，及合作伙伴厂商的技术交流；
  和产品、市场部门密切配合，负责相关的沟通、技术支持、技术文档撰写等工作。
  任职要求：
  5 年以上 IT 领域售前工作经验；
  熟悉传统商业数据库（如 Oracle）及开源数据库，对云计算、大数据及数据库前沿领域有深入的认识和实践；
  熟悉 1~2个行业，熟悉行业发展方向、技术趋势、商务模式、行业主流 IT 供应商等，熟悉金融行业尤佳；
  丰富的方案设计、标书应答、用户交流经验，良好的写作和口才、良好的沟通能力；
  工作条理性强，具有很强的责任心和团队合作精神。
  待遇：
Base 20K - 40K，12薪 + 期权 + 丰厚的业绩奖金，优秀者可面议
工作地点：
北京，上海，杭州，广州，深圳，成都</description>
    </item>
    
    <item>
      <title>资深商务经理</title>
      <link>https://pingcap.com/about-cn/recruit/business/senior-business-manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/business/senior-business-manager/</guid>
      <description>资深商务经理 岗位职责：
  配合法务部负责合同模板 / 标准制定及迭代，负责商务合同全流程管理和优化，部门内外协调沟通；
  负责项目投标至合同签署的相关商务工作，包括商务、资质及报价等文档的制作，及投标进度管控；
  商业流程优化及商业流程审批（授权）；
  商业报表统计和分析等 sales operation 工作。
  任职要求：
  5 年以上工作经验，工作细致，熟悉销售及销售运营管理等业务流程
  有丰富的企业服务软件类公司工作经验。
  具备极强的责任感、工作热情以及优秀的组织、沟通、协调能力和团队精神。
  待遇：
10K - 25K，13 薪 + 奖金，优秀者可面议
工作地点：
北京</description>
    </item>
    
    <item>
      <title>资深渠道合作总监</title>
      <link>https://pingcap.com/about-cn/recruit/business/channel-sales-director/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/business/channel-sales-director/</guid>
      <description>资深渠道合作总监 岗位职责：
  根据公司产品（分布式数据库），负责相关合作伙伴的建立、维护、发展与管理；
  制定相关合作伙伴的拓展计划，执行并完成相关合作伙伴拓展计划和销售任务；
  配合销售及市场部门完成相关工作。
  任职要求：
  5 年以上软件行业渠道销售经验；
  与主要 IT 系统集成商、行业应用软件开发商具有良好的合作关系，金融行业尤佳；
  具有良好的渠道拓展能力和丰富的渠道资源和渠道管理经验；
  具有数据库软件等基础软件渠道销售经验者优先，有技术背景优先；
  强烈的责任心、良好的沟通能力、团队协作能力。
  待遇：
Base 20K - 40K，期权 + 丰厚的业绩奖金，优秀者可面议
工作地点：
北京</description>
    </item>
    
    <item>
      <title>资深行业销售总监</title>
      <link>https://pingcap.com/about-cn/recruit/business/sales-director/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/business/sales-director/</guid>
      <description>资深行业销售总监 岗位职责：
  负责分布式数据库产品的业务拓展、合作及销售；
  完成整体业绩指标，包括销售额和回款额。
  任职要求：
  5 年以上 IT 软件产品（通用软件/行业应用软件）销售经验，出色的过往销售业绩；
  有特定政企行业的客户和渠道资源，比如金融、制造业、电信等；
  出众的沟通表达能力、抗压能力、管理能力，具有敬业精神及团队合作意识；
  如有数据库技术经验或售前经验有加分。
  待遇：
Base 20K - 40K，期权 + 丰厚的业绩奖金，优秀者可面议
工作地点：
北京，上海，杭州，广州，深圳，成都</description>
    </item>
    
    <item>
      <title>跨数据中心部署方案</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/deploy/geographic-redundancy/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/deploy/geographic-redundancy/overview/</guid>
      <description>跨数据中心部署方案 作为 NewSQL 数据库，TiDB 兼顾了传统关系型数据库的优秀特性以及 NoSQL 数据库可扩展性，以及跨数据中心（下文简称“中心”）场景下的高可用。本文档旨在介绍跨数据中心部署的不同解决方案。
三中心部署方案 TiDB, TiKV, PD 分别分布在 3 个不同的中心，这是最常规，可用性最高的方案。
优点 所有数据的副本分布在三个数据中心，任何一个数据中心失效后，另外两个数据中心会自动发起 leader election，并在合理长的时间内（通常情况 20s 以内）恢复服务，并且不会产生数据丢失。
缺点 性能受网络延迟影响。
 对于写入的场景，所有写入的数据需要同步复制到至少 2 个数据中心，由于 TiDB 写入过程使用两阶段提交，故写入延迟至少需要 2 倍数据中心间的延迟。 对于读请求来说，如果数据 leader 与发起读取的 TiDB 节点不在同一个数据中心，也会受网络延迟影响。 TiDB 中的每个事务都需要向 PD leader 获取 TSO，当 TiDB 与 PD leader 不在同一个数据中心时，它上面运行的事务也会因此受网络延迟影响，每个有写入的事务会获取两次 TSO。  读性能优化 如果不需要每个数据中心同时对外提供服务，可以将业务流量全部派发到一个数据中心，并通过调度策略把 Region leader 和 PD leader 都迁移到同一个数据中心（我们在上文所述的测试中也做了这个优化）。这样一来，不管是从 PD 获取 TSO 还是读取 Region 都不受数据中心间网络的影响。当该数据中心失效后，PD leader 和 Region leader 会自动在其它数据中心选出，只需要把业务流量转移至其他存活的数据中心即可。
两地三中心部署方案 两地三中心的方案与三数据中心类似，算是三机房方案根据业务特点进行的优化，区别是其中有两个数据中心距离很近（通常在同一个城市），网络延迟相对很小。这种场景下，我们可以把业务流量同时派发到同城的两个数据中心，同时控制 Region leader 和 PD leader 也分布在同城的两个数据中心。</description>
    </item>
    
    <item>
      <title>跨数据中心部署方案</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/deploy/geographic-redundancy/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/deploy/geographic-redundancy/overview/</guid>
      <description>跨数据中心部署方案 作为 NewSQL 数据库，TiDB 兼顾了传统关系型数据库的优秀特性以及 NoSQL 数据库可扩展性，以及跨数据中心（下文简称“中心”）场景下的高可用。本文档旨在介绍跨数据中心部署的不同解决方案。
三中心部署方案 TiDB, TiKV, PD 分别分布在 3 个不同的中心，这是最常规，可用性最高的方案。
优点 所有数据的副本分布在三个数据中心，任何一个数据中心失效后，另外两个数据中心会自动发起 leader election，并在合理长的时间内（通常情况 20s 以内）恢复服务，并且不会产生数据丢失。
缺点 性能受网络延迟影响。
 对于写入的场景，所有写入的数据需要同步复制到至少 2 个数据中心，由于 TiDB 写入过程使用两阶段提交，故写入延迟至少需要 2 倍数据中心间的延迟。 对于读请求来说，如果数据 leader 与发起读取的 TiDB 节点不在同一个数据中心，也会受网络延迟影响。 TiDB 中的每个事务都需要向 PD leader 获取 TSO，当 TiDB 与 PD leader 不在同一个数据中心时，它上面运行的事务也会因此受网络延迟影响，每个有写入的事务会获取两次 TSO。  读性能优化 如果不需要每个数据中心同时对外提供服务，可以将业务流量全部派发到一个数据中心，并通过调度策略把 Region leader 和 PD leader 都迁移到同一个数据中心（我们在上文所述的测试中也做了这个优化）。这样一来，不管是从 PD 获取 TSO 还是读取 Region 都不受数据中心间网络的影响。当该数据中心失效后，PD leader 和 Region leader 会自动在其它数据中心选出，只需要把业务流量转移至其他存活的数据中心即可。
两地三中心部署方案 两地三中心的方案与三数据中心类似，算是三机房方案根据业务特点进行的优化，区别是其中有两个数据中心距离很近（通常在同一个城市），网络延迟相对很小。这种场景下，我们可以把业务流量同时派发到同城的两个数据中心，同时控制 Region leader 和 PD leader 也分布在同城的两个数据中心。</description>
    </item>
    
    <item>
      <title>跨数据中心部署方案</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/deploy/geographic-redundancy/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/deploy/geographic-redundancy/overview/</guid>
      <description>跨数据中心部署方案 作为 NewSQL 数据库，TiDB 兼顾了传统关系型数据库的优秀特性以及 NoSQL 数据库可扩展性，以及跨数据中心（下文简称“中心”）场景下的高可用。本文档旨在介绍跨数据中心部署的不同解决方案。
三中心部署方案 TiDB, TiKV, PD 分别分布在 3 个不同的中心，这是最常规，可用性最高的方案。
优点 所有数据的副本分布在三个数据中心，任何一个数据中心失效后，另外两个数据中心会自动发起 leader election，并在合理长的时间内（通常情况 20s 以内）恢复服务，并且不会产生数据丢失。
缺点 性能受网络延迟影响。
 对于写入的场景，所有写入的数据需要同步复制到至少 2 个数据中心，由于 TiDB 写入过程使用两阶段提交，故写入延迟至少需要 2 倍数据中心间的延迟。 对于读请求来说，如果数据 leader 与发起读取的 TiDB 节点不在同一个数据中心，也会受网络延迟影响。 TiDB 中的每个事务都需要向 PD leader 获取 TSO，当 TiDB 与 PD leader 不在同一个数据中心时，它上面运行的事务也会因此受网络延迟影响，每个有写入的事务会获取两次 TSO。  读性能优化 如果不需要每个数据中心同时对外提供服务，可以将业务流量全部派发到一个数据中心，并通过调度策略把 Region leader 和 PD leader 都迁移到同一个数据中心（我们在上文所述的测试中也做了这个优化）。这样一来，不管是从 PD 获取 TSO 还是读取 Region 都不受数据中心间网络的影响。当该数据中心失效后，PD leader 和 Region leader 会自动在其它数据中心选出，只需要把业务流量转移至其他存活的数据中心即可。
两地三中心部署方案 两地三中心的方案与三数据中心类似，算是三机房方案根据业务特点进行的优化，区别是其中有两个数据中心距离很近（通常在同一个城市），网络延迟相对很小。这种场景下，我们可以把业务流量同时派发到同城的两个数据中心，同时控制 Region leader 和 PD leader 也分布在同城的两个数据中心。</description>
    </item>
    
    <item>
      <title>跨数据中心部署方案</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/deploy/geographic-redundancy/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/deploy/geographic-redundancy/overview/</guid>
      <description>跨数据中心部署方案 作为 NewSQL 数据库，TiDB 兼顾了传统关系型数据库的优秀特性以及 NoSQL 数据库可扩展性，以及跨数据中心（下文简称“中心”）场景下的高可用。本文档旨在介绍跨数据中心部署的不同解决方案。
三中心部署方案 TiDB, TiKV, PD 分别分布在 3 个不同的中心，这是最常规，可用性最高的方案。
优点 所有数据的副本分布在三个数据中心，任何一个数据中心失效后，另外两个数据中心会自动发起 leader election，并在合理长的时间内（通常情况 20s 以内）恢复服务，并且不会产生数据丢失。
缺点 性能受网络延迟影响。
 对于写入的场景，所有写入的数据需要同步复制到至少 2 个数据中心，由于 TiDB 写入过程使用两阶段提交，故写入延迟至少需要 2 倍数据中心间的延迟。 对于读请求来说，如果数据 leader 与发起读取的 TiDB 节点不在同一个数据中心，也会受网络延迟影响。 TiDB 中的每个事务都需要向 PD leader 获取 TSO，当 TiDB 与 PD leader 不在同一个数据中心时，它上面运行的事务也会因此受网络延迟影响，每个有写入的事务会获取两次 TSO。  读性能优化 如果不需要每个数据中心同时对外提供服务，可以将业务流量全部派发到一个数据中心，并通过调度策略把 Region leader 和 PD leader 都迁移到同一个数据中心（我们在上文所述的测试中也做了这个优化）。这样一来，不管是从 PD 获取 TSO 还是读取 Region 都不受数据中心间网络的影响。当该数据中心失效后，PD leader 和 Region leader 会自动在其它数据中心选出，只需要把业务流量转移至其他存活的数据中心即可。
两地三中心部署方案 两地三中心的方案与三数据中心类似，算是三机房方案根据业务特点进行的优化，区别是其中有两个数据中心距离很近（通常在同一个城市），网络延迟相对很小。这种场景下，我们可以把业务流量同时派发到同城的两个数据中心，同时控制 Region leader 和 PD leader 也分布在同城的两个数据中心。</description>
    </item>
    
    <item>
      <title>跳过 (skip) 或替代执行 (replace) 异常的 SQL 语句</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/skip-replace-sqls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/data-migration/skip-replace-sqls/</guid>
      <description>跳过 (skip) 或替代执行 (replace) 异常的 SQL 语句 本文介绍了如何使用 DM 来处理异常的 SQL 语句。
目前，TiDB 并不完全兼容所有的 MySQL 语法（详见 TiDB 已支持的 DDL 语句）。当使用 DM 从 MySQL 同步数据到 TiDB 时，如果 TiDB 不支持对应的 SQL 语句，可能会造成错误并中断同步任务。在这种情况下，DM 提供以下两种方式来恢复同步：
  使用 dmctl 来手动跳过该 SQL 语句对应的 binlog event。
  使用 dmctl 来手动指定其他 SQL 语句来替代该 SQL 语句对应的 binlog event，并向下游执行。
  如果提前预知将要同步 TiDB 不支持的 SQL 语句，也可以使用 dmctl 来手动预设跳过/替代执行操作。当 DM 尝试将该 SQL 语句对应的 binlog event 同步到下游时，该预设的操作将自动执行，从而避免同步过程被中断。
使用限制   跳过/替代执行操作只适合用于一次性跳过/替代执行下游 TiDB 不支持执行的 SQL 语句，其它同步错误请不要使用此方式进行处理。</description>
    </item>
    
    <item>
      <title>跳过 (skip) 或替代执行 (replace) 异常的 SQL 语句</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/skip-replace-sqls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tools/data-migration/skip-replace-sqls/</guid>
      <description>跳过 (skip) 或替代执行 (replace) 异常的 SQL 语句 本文介绍了如何使用 DM 来处理异常的 SQL 语句。
目前，TiDB 并不完全兼容所有的 MySQL 语法。当使用 DM 从 MySQL 同步数据到 TiDB 时，如果 TiDB 不支持对应的 SQL 语句，可能会造成错误并中断同步任务。在这种情况下，DM 提供以下两种方式来恢复同步：
  使用 dmctl 来手动跳过该 SQL 语句对应的 binlog event。
  使用 dmctl 来手动指定其他 SQL 语句来替代该 SQL 语句对应的 binlog event，并向下游执行。
  如果提前预知将要同步 TiDB 不支持的 SQL 语句，也可以使用 dmctl 来手动预设跳过/替代执行操作。当 DM 尝试将该 SQL 语句对应的 binlog event 同步到下游时，该预设的操作将自动执行，从而避免同步过程被中断。
使用限制   跳过/替代执行操作只适合用于一次性跳过/替代执行下游 TiDB 不支持执行的 SQL 语句，其它同步错误请不要使用此方式进行处理。</description>
    </item>
    
    <item>
      <title>跳过 (skip) 或替代执行 (replace) 异常的 SQL 语句</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/skip-replace-sqls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/tools/data-migration/skip-replace-sqls/</guid>
      <description>跳过 (skip) 或替代执行 (replace) 异常的 SQL 语句 本文介绍了如何使用 DM 来处理异常的 SQL 语句。
目前，TiDB 并不完全兼容所有的 MySQL 语法。当使用 DM 从 MySQL 同步数据到 TiDB 时，如果 TiDB 不支持对应的 SQL 语句，可能会造成错误并中断同步任务。在这种情况下，DM 提供以下两种方式来恢复同步：
 使用 dmctl 来手动跳过该 SQL 语句对应的 binlog event。 使用 dmctl 来手动指定其他 SQL 语句来替代该 SQL 语句对应的 binlog event，并向下游执行。  如果提前预知将要同步 TiDB 不支持的 SQL 语句，也可以使用 dmctl 来手动预设跳过/替代执行操作。当 DM 尝试将该 SQL 语句对应的 binlog event 同步到下游时，该预设的操作将自动执行，从而避免同步过程被中断。
使用限制   跳过/替代执行操作只适合用于一次性跳过/替代执行下游 TiDB 不支持执行的 SQL 语句，其它同步错误请不要使用此方式进行处理。
 其它同步错误可尝试使用 black &amp;amp; white table lists 或 binlog event filter。    如果业务不能接受下游 TiDB 跳过异常的 DDL 语句，也不接受使用其他 DDL 语句作为替代，则不适合使用此方式进行处理。</description>
    </item>
    
    <item>
      <title>跳过 (skip) 或替代执行 (replace) 异常的 SQL 语句</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/skip-replace-sqls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tools/data-migration/skip-replace-sqls/</guid>
      <description>跳过 (skip) 或替代执行 (replace) 异常的 SQL 语句 本文介绍了如何使用 DM 来处理异常的 SQL 语句。
目前，TiDB 并不完全兼容所有的 MySQL 语法。当使用 DM 从 MySQL 同步数据到 TiDB 时，如果 TiDB 不支持对应的 SQL 语句，可能会造成错误并中断同步任务。在这种情况下，DM 提供以下两种方式来恢复同步：
  使用 dmctl 来手动跳过该 SQL 语句对应的 binlog event。
  使用 dmctl 来手动指定其他 SQL 语句来替代该 SQL 语句对应的 binlog event，并向下游执行。
  如果提前预知将要同步 TiDB 不支持的 SQL 语句，也可以使用 dmctl 来手动预设跳过/替代执行操作。当 DM 尝试将该 SQL 语句对应的 binlog event 同步到下游时，该预设的操作将自动执行，从而避免同步过程被中断。
使用限制   跳过/替代执行操作只适合用于一次性跳过/替代执行下游 TiDB 不支持执行的 SQL 语句，其它同步错误请不要使用此方式进行处理。</description>
    </item>
    
    <item>
      <title>运维工程师</title>
      <link>https://pingcap.com/about-cn/recruit/engineering/sa-engineer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/engineering/sa-engineer/</guid>
      <description>运维工程师 岗位职责：
  保障服务稳定可靠：SA 负责从硬件到网络，从基础服务到各内外部应用的正常运行；
  协调沟通第三方服务：从调研、协调、到使用第三方服务，诸如 CDN、公有云；
  响应开发团队需求：访问控制，资源调度，环境准备，服务搭建等；
  负责 IDC 和所有公有云资源的管理、分配、维护及安全加固；
  负责监控报警体系建设、错误收集、后续处理及持续改进；
  不断的用自动化工具优化以上这些流程；
  任职要求：
  能独立完成运维监控报警体系建设，并熟悉常见监控和报警相关工具，如 Nagios/Zabbix/Graphite/Grafana/Prometheus 等；
  熟悉 Docker、K8s 容器化相关技术，有大规模生产环境使用经验；
  喜欢尝试 DevOps 等自动化运维相关领域的新技术新产品；
  熟悉 Shell/Python/Golang 中一种或多种；
  有强大的抗压能力、成本意识和责任感；
  本科学历及以上（条件优秀者，大专学历亦可）
  加分项：
  熟悉虚拟化、容器化相关技术（如 Docker/K8S）；
  有设计过较大型 IDC 网络（1000+台物理机网络）的经验；
  具备 Cisco、Juniper、华为高级认证水平者优先。
  待遇：</description>
    </item>
    
    <item>
      <title>连接器和 API</title>
      <link>https://pingcap.com/docs-cn/dev/reference/supported-clients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/supported-clients/</guid>
      <description>连接器和 API 数据库连接器为客户端提供了连接数据库服务端的方式，APIs 提供了使用 MySQL 协议和资源的底层接口。无论是连接器还是 API，都可以用来在不同的语言和环境内连接服务器并执行 sql 语句，包括 odbc、java(jdbc)、Perl、Python、PHP、Ruby 和 C。
TiDB 兼容 MySQL(5.6、5.7) 的所有连接器和 API，包括：
 MySQL Connector/C++ MySQL Connector/J MySQL Connector/Net MySQL Connector/ODBC MySQL Connector/Python MySQL C API MySQL PHP API MySQL Perl API MySQL Python API MySQL Ruby APIs MySQL Tcl API MySQL Eiffel Wrapper Mysql Go API  使用 MySQL 连接器连接 TiDB Oracle 官方提供了以下 API，TiDB 可以兼容所有这些 API。
 MySQL Connector/C++：C++ 语言的客户端库 MySQL Connector/J：Java 语言的客户端库，基于标准 JDBC 接口 MySQL Connector/Net：.</description>
    </item>
    
    <item>
      <title>连接器和 API</title>
      <link>https://pingcap.com/docs-cn/stable/reference/supported-clients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/supported-clients/</guid>
      <description>连接器和 API 数据库连接器为客户端提供了连接数据库服务端的方式，APIs 提供了使用 MySQL 协议和资源的底层接口。无论是连接器还是 API，都可以用来在不同的语言和环境内连接服务器并执行 sql 语句，包括 odbc、java(jdbc)、Perl、Python、PHP、Ruby 和 C。
TiDB 兼容 MySQL(5.6、5.7) 的所有连接器和 API，包括：
 MySQL Connector/C++ MySQL Connector/J MySQL Connector/Net MySQL Connector/ODBC MySQL Connector/Python MySQL C API MySQL PHP API MySQL Perl API MySQL Python API MySQL Ruby APIs MySQL Tcl API MySQL Eiffel Wrapper Mysql Go API  使用 MySQL 连接器连接 TiDB Oracle 官方提供了以下 API，TiDB 可以兼容所有这些 API。
 MySQL Connector/C++：C++ 语言的客户端库 MySQL Connector/J：Java 语言的客户端库，基于标准 JDBC 接口 MySQL Connector/Net：.</description>
    </item>
    
    <item>
      <title>连接器和 API</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/supported-clients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/supported-clients/</guid>
      <description>连接器和 API 数据库连接器为客户端提供了连接数据库服务端的方式，APIs 提供了使用 MySQL 协议和资源的底层接口。无论是连接器还是 API，都可以用来在不同的语言和环境内连接服务器并执行 sql 语句，包括 odbc、java(jdbc)、Perl、Python、PHP、Ruby 和 C。
TiDB 兼容 MySQL(5.6、5.7) 的所有连接器和 API，包括：
 MySQL Connector/C++ MySQL Connector/J MySQL Connector/Net MySQL Connector/ODBC MySQL Connector/Python MySQL C API MySQL PHP API MySQL Perl API MySQL Python API MySQL Ruby APIs MySQL Tcl API MySQL Eiffel Wrapper Mysql Go API  使用 MySQL 连接器连接 TiDB Oracle 官方提供了以下 API，TiDB 可以兼容所有这些 API。
 MySQL Connector/C++：C++ 语言的客户端库 MySQL Connector/J：Java 语言的客户端库，基于标准 JDBC 接口 MySQL Connector/Net：.</description>
    </item>
    
    <item>
      <title>连接器和 API</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/supported-clients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/supported-clients/</guid>
      <description>连接器和 API 数据库连接器为客户端提供了连接数据库服务端的方式，APIs 提供了使用 MySQL 协议和资源的底层接口。无论是连接器还是 API，都可以用来在不同的语言和环境内连接服务器并执行 sql 语句，包括 odbc、java(jdbc)、Perl、Python、PHP、Ruby 和 C。
TiDB 兼容 MySQL(5.6、5.7) 的所有连接器和 API，包括：
 MySQL Connector/C++ MySQL Connector/J MySQL Connector/Net MySQL Connector/ODBC MySQL Connector/Python MySQL C API MySQL PHP API MySQL Perl API MySQL Python API MySQL Ruby APIs MySQL Tcl API MySQL Eiffel Wrapper Mysql Go API  使用 MySQL 连接器连接 TiDB Oracle 官方提供了以下 API，TiDB 可以兼容所有这些 API。
 MySQL Connector/C++：C++ 语言的客户端库 MySQL Connector/J：Java 语言的客户端库，基于标准 JDBC 接口 MySQL Connector/Net：.</description>
    </item>
    
    <item>
      <title>部署和使用 TiCDC</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tools/ticdc/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tools/ticdc/deploy/</guid>
      <description>部署和使用 TiCDC 本文介绍如何部署和使用 TiCDC 进行增量数据同步
第 1 步：部署 TiCDC 集群 假设 PD 集群有一个可以提供服务的 PD 节点 client-url=10.0.10.25:2379。若要部署三个 TiCDC 节点，可以按照以下命令启动集群。只需要指定相同的 PD 地址，新启动的节点就可以自动加入 TiCDC 集群。
 cdc server --pd=http://10.0.10.25:2379 --log-file=ticdc_1.log --status-addr=127.0.0.1:8301 cdc server --pd=http://10.0.10.25:2379 --log-file=ticdc_2.log --status-addr=127.0.0.1:8302 cdc server --pd=http://10.0.10.25:2379 --log-file=ticdc_3.log --status-addr=127.0.0.1:8303 第 2 步：创建同步任务 假设需要将上游所有的库表（系统表除外）同步到下游的 MySQL，可以通过以下命令创建同步任务：
 cdc cli changefeed create --pd=http://10.0.10.25:2379 --start-ts=415238226621235200 --sink-uri=&amp;#34;mysql://root:123456@127.0.0.1:3306/&amp;#34; 以上命令中的选项解释如下：
 pd: PD client 的 URL。 start-ts: 指定开始同步的 TSO，不指定或指定为 0 时将使用当前 TSO 作为同步的起始 TSO。 sink-uri: sink 地址，目前支持 mysql/tidb 和 kafka。关于 sink URI 的写法请参考 sink URI 配置规则 config: 同步任务的配置。目前提供黑白名单配置和跳过特定 commit-ts 的事务。  执行该命令后，TiCDC 就会从指定的 start-ts (415238226621235200) 开始同步数据到下游 MySQL (127.</description>
    </item>
    
    <item>
      <title>重启 Kubernetes 上的 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/restart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/restart/</guid>
      <description>了解如何重启 Kubernetes 集群上的 TiDB 集群。</description>
    </item>
    
    <item>
      <title>重启 Kubernetes 上的 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/restart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/restart/</guid>
      <description>了解如何重启 Kubernetes 集群上的 TiDB 集群。</description>
    </item>
    
    <item>
      <title>重启 Kubernetes 上的 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/restart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/restart/</guid>
      <description>了解如何重启 Kubernetes 集群上的 TiDB 集群。</description>
    </item>
    
    <item>
      <title>销毁 Kubernetes 上的 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/destroy-tidb-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/tidb-in-kubernetes/maintain/destroy-tidb-cluster/</guid>
      <description>销毁 Kubernetes 上的 TiDB 集群 本文描述了如何销毁 Kubernetes 集群上的 TiDB 集群
要销毁 TiDB 集群，执行以下命令：
 helm delete &amp;lt;release-name&amp;gt; --purge 上述命令只是删除运行的 Pod，数据仍然会保留。如果你不再需要那些数据，可以通过下面命令清除数据：
 警告：
下列命令会彻底删除数据，务必考虑清楚再执行。
  kubectl delete pvc -n &amp;lt;namespace&amp;gt; -l app.kubernetes.io/instance=&amp;lt;release-name&amp;gt;,app.kubernetes.io/managed-by=tidb-operator  kubectl get pv -l app.kubernetes.io/namespace=&amp;lt;namespace&amp;gt;,app.kubernetes.io/managed-by=tidb-operator,app.kubernetes.io/instance=&amp;lt;release-name&amp;gt; -o name | xargs -I {} kubectl patch {} -p &amp;#39;{&amp;#34;spec&amp;#34;:{&amp;#34;persistentVolumeReclaimPolicy&amp;#34;:&amp;#34;Delete&amp;#34;}}&amp;#39; </description>
    </item>
    
    <item>
      <title>销毁 Kubernetes 上的 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/destroy-tidb-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/tidb-in-kubernetes/maintain/destroy-tidb-cluster/</guid>
      <description>销毁 Kubernetes 上的 TiDB 集群 本文描述了如何销毁 Kubernetes 集群上的 TiDB 集群
要销毁 TiDB 集群，执行以下命令：
 helm delete &amp;lt;release-name&amp;gt; --purge 上述命令只是删除运行的 Pod，数据仍然会保留。如果你不再需要那些数据，可以通过下面命令清除数据：
 警告：
下列命令会彻底删除数据，务必考虑清楚再执行。
  kubectl delete pvc -n &amp;lt;namespace&amp;gt; -l app.kubernetes.io/instance=&amp;lt;release-name&amp;gt;,app.kubernetes.io/managed-by=tidb-operator  kubectl get pv -l app.kubernetes.io/namespace=&amp;lt;namespace&amp;gt;,app.kubernetes.io/managed-by=tidb-operator,app.kubernetes.io/instance=&amp;lt;release-name&amp;gt; -o name | xargs -I {} kubectl patch {} -p &amp;#39;{&amp;#34;spec&amp;#34;:{&amp;#34;persistentVolumeReclaimPolicy&amp;#34;:&amp;#34;Delete&amp;#34;}}&amp;#39; </description>
    </item>
    
    <item>
      <title>销毁 Kubernetes 上的 TiDB 集群</title>
      <link>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/destroy-tidb-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/tidb-in-kubernetes/maintain/destroy-tidb-cluster/</guid>
      <description>销毁 Kubernetes 上的 TiDB 集群 本文描述了如何销毁 Kubernetes 集群上的 TiDB 集群
要销毁 TiDB 集群，执行以下命令：
 helm delete &amp;lt;release-name&amp;gt; --purge 上述命令只是删除运行的 Pod，数据仍然会保留。如果你不再需要那些数据，可以通过下面命令清除数据：
 警告：
下列命令会彻底删除数据，务必考虑清楚再执行。
  kubectl delete pvc -n &amp;lt;namespace&amp;gt; -l app.kubernetes.io/instance=&amp;lt;release-name&amp;gt;,app.kubernetes.io/managed-by=tidb-operator  kubectl get pv -l app.kubernetes.io/namespace=&amp;lt;namespace&amp;gt;,app.kubernetes.io/managed-by=tidb-operator,app.kubernetes.io/instance=&amp;lt;release-name&amp;gt; -o name | xargs -I {} kubectl patch {} -p &amp;#39;{&amp;#34;spec&amp;#34;:{&amp;#34;persistentVolumeReclaimPolicy&amp;#34;:&amp;#34;Delete&amp;#34;}}&amp;#39; </description>
    </item>
    
    <item>
      <title>错误码与故障诊断</title>
      <link>https://pingcap.com/docs-cn/dev/reference/error-codes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/error-codes/</guid>
      <description>错误码与故障诊断 本篇文档描述在使用 TiDB 过程中会遇到的问题以及解决方法。
错误码 TiDB 兼容 MySQL 的错误码，在大多数情况下，返回和 MySQL 一样的错误码。另外还有一些特有的错误码：
   错误码 说明     8001 请求使用的内存超过 TiDB 内存使用的阈值限制   8002 带有 SELECT FOR UPDATE 语句的事务，在遇到写入冲突时，为保证一致性无法进行重试，事务将进行回滚并返回该错误   8003 ADMIN CHECK TABLE 命令在遇到行数据跟索引不一致的时候返回该错误   8004 单个事务过大，原因及解决方法请参考这里   8005 事务在 TiDB 中遇到了写入冲突，原因及解决方法请参考这里   8018 插件无法重新载入，原因是没有载入过   8019 重新载入的插件版本与之前不同，无法重新载入   8020 表被锁   8021 key 不存在   8022 事务提交失败，但可以进行重试   8023 不能设置空值   8024 非法的事务   8025 写入的单条键值对过大   8026 没有实现的接口   8027 表结构版本过期   8028 表结构发生了变化   8029 错误值   8030 转变为带符号正整数时发生了越界，显示为负数   8031 负数转变为无符号数时，被转变为正数   8032 非法的 year 格式   8033 非法的 year 值   8034 不正确的 datetime 值   8036 非法的 time 格式   8037 非法的 week 格式   8038 字段无法获取到默认值   8039 索引的偏移量超出范围   8042 表结构的状态为不存在   8043 列信息的状态为不存在   8044 索引的状态为不存在   8045 非法的表数据   8046 列信息的状态为不可见   8047 设置了不支持的系统变量值，通常在用户设置了数据库不支持的变量值后的告警信息里出现   8048 设置了不支持的数据库隔离级别   8049 载入权限相关表失败   8050 设置了不支持的权限类型   8051 未知的字段类型   8052 来自客户端的数据包的序列号错误   8053 获取到了非法的自增列值   8055 当前快照过旧，数据可能已经被 GC   8056 非法的表 ID   8057 非法的字段类型   8058 申请了不存在的自动变量类型   8059 获取自动随机量失败   8060 非法的自增列偏移量   8061 不支持的 SQL Hint   8062 SQL Hint 中使用了非法的 token，与 Hint 的保留字冲突   8063 SQL Hint 中限制内存使用量超过系统设置的上限，设置被忽略   8064 解析 SQL Hint 失败   8065 SQL Hint 中使用了非法的整数   8066 JSON_OBJECTAGG 函数的第二个参数是非法参数   8101 插件 ID 格式错误，正确的格式是 [name]-[version] 并且 name 和 version 中不能带有 &amp;lsquo;-&amp;rsquo;   8102 无法读取插件定义信息   8103 插件名称错误   8104 插件版本不匹配   8105 插件被重复载入   8106 插件定义的系统变量名称没有以插件名作为开头   8107 载入的插件未指定版本或指定的版本过低   8108 不支持的执行计划类型   8109 analyze 索引时找不到指定的索引   8110 不能进行笛卡尔积运算，需要将配置文件里的 cross-join 设置为 true   8111 execute 语句执行时找不到对应的 prepare 语句   8112 execute 语句的参数个数与 prepare 语句不符合   8113 execute 语句涉及的表结构在 prepare 语句执行后发生了变化   8114 未知的执行计划类型   8115 不支持 prepare 多行语句   8116 不支持 prepare DDL 语句   8118 构建执行器失败   8120 获取不到事务的 start tso   8121 权限检查失败   8122 指定了通配符，但是找不到对应的表名   8123 带聚合函数的 SQL 中返回非聚合的列，违反了 only_full_group_by 模式   8200 尚不支持的 DDL 语法   8201 当前 TiDB 不是 DDL owner   8202 不能对该索引解码   8203 非法的 DDL worker   8204 非法的 DDL job   8205 非法的 DDL job 标志   8206 DDL 的 Reorg 阶段执行超时   8207 非法的存储节点   8210 非法的 DDL 状态   8211 DDL 的 Reorg 阶段发生了 panic   8212 非法的 region 切分范围   8213 非法的 DDL job 版本   8214 DDL 操作被终止   8215 Admin Repair 表失败   8216 非法的自动随机列   8221 Key 编码错误   8222 索引 Key 编码错误   8223 检测出数据与索引不一致的错误   8224 找不到 DDL job   8225 DDL 已经完成，无法被取消   8226 DDL 几乎要完成了，无法被取消   8227 创建 Sequence 时使用了不支持的选项   9001 请求 PD 超时，请检查 PD Server 状态/监控/日志以及 TiDB Server 与 PD Server 之间的网络   9002 请求 TiKV 超时，请检查 TiKV Server 状态/监控/日志以及 TiDB Server 与 TiKV Server 之间的网络   9003 TiKV 操作繁忙，一般出现在数据库负载比较高时，请检查 TiKV Server 状态/监控/日志   9004 当数据库上承载的业务存在大量的事务冲突时，会遇到这种错误，请检查业务代码   9005 某个 Raft Group 不可用，如副本数目不足，出现在 TiKV 比较繁忙或者是 TiKV 节点停机的时候，请检查 TiKV Server 状态/监控/日志   9006 GC Life Time 间隔时间过短，长事务本应读到的数据可能被清理了，应增加 GC Life Time   9007 事务在 TiKV 中遇到了写入冲突，原因及解决方法请参考这里   9008 同时向 TiKV 发送的请求过多，超过了限制    故障诊断 参见故障诊断文档以及 FAQ。</description>
    </item>
    
    <item>
      <title>错误码与故障诊断</title>
      <link>https://pingcap.com/docs-cn/stable/reference/error-codes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/error-codes/</guid>
      <description>错误码与故障诊断 本篇文档描述在使用 TiDB 过程中会遇到的问题以及解决方法。
错误码 TiDB 兼容 MySQL 的错误码，在大多数情况下，返回和 MySQL 一样的错误码。另外还有一些特有的错误码：
   错误码 说明     8001 请求使用的内存超过 TiDB 内存使用的阈值限制   8002 带有 SELECT FOR UPDATE 语句的事务，在遇到写入冲突时，为保证一致性无法进行重试，事务将进行回滚并返回该错误   8003 ADMIN CHECK TABLE 命令在遇到行数据跟索引不一致的时候返回该错误   8004 单个事务过大，原因及解决方法请参考这里   8005 事务在 TiDB 中遇到了写入冲突，原因及解决方法请参考这里   9001 请求 PD 超时，请检查 PD Server 状态/监控/日志以及 TiDB Server 与 PD Server 之间的网络   9002 请求 TiKV 超时，请检查 TiKV Server 状态/监控/日志以及 TiDB Server 与 TiKV Server 之间的网络   9003 TiKV 操作繁忙，一般出现在数据库负载比较高时，请检查 TiKV Server 状态/监控/日志   9004 当数据库上承载的业务存在大量的事务冲突时，会遇到这种错误，请检查业务代码   9005 某个 Raft Group 不可用，如副本数目不足，出现在 TiKV 比较繁忙或者是 TiKV 节点停机的时候，请检查 TiKV Server 状态/监控/日志   9006 GC Life Time 间隔时间过短，长事务本应读到的数据可能被清理了，应增加 GC Life Time   9007 事务在 TiKV 中遇到了写入冲突，原因及解决方法请参考这里    故障诊断 参见故障诊断文档以及 FAQ。</description>
    </item>
    
    <item>
      <title>错误码与故障诊断</title>
      <link>https://pingcap.com/docs-cn/v2.1/reference/error-codes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/reference/error-codes/</guid>
      <description>错误码与故障诊断 本篇文档描述在使用 TiDB 过程中会遇到的问题以及解决方法。
错误码 TiDB 兼容 MySQL 的错误码，在大多数情况下，返回和 MySQL 一样的错误码。另外还有一些特有的错误码：
   错误码 说明     8001 请求使用的内存超过 TiDB 内存使用的阈值限制   8002 带有 SELECT FOR UPDATE 语句的事务，在遇到写入冲突时，为保证一致性无法进行重试，事务将进行回滚并返回该错误   8003 ADMIN CHECK TABLE 命令在遇到行数据跟索引不一致的时候返回该错误   8004 单个事务过大，原因及解决方法请参考这里   8005 事务在 TiDB 中遇到了写入冲突，原因及解决方法请参考这里   9001 请求 PD 超时，请检查 PD Server 状态/监控/日志以及 TiDB Server 与 PD Server 之间的网络   9002 请求 TiKV 超时，请检查 TiKV Server 状态/监控/日志以及 TiDB Server 与 TiKV Server 之间的网络   9003 TiKV 操作繁忙，一般出现在数据库负载比较高时，请检查 TiKV Server 状态/监控/日志   9004 当数据库上承载的业务存在大量的事务冲突时，会遇到这种错误，请检查业务代码   9005 某个 Raft Group 不可用，如副本数目不足，出现在 TiKV 比较繁忙或者是 TiKV 节点停机的时候，请检查 TiKV Server 状态/监控/日志   9006 GC Life Time 间隔时间过短，长事务本应读到的数据可能被清理了，应增加 GC Life Time   9007 事务在 TiKV 中遇到了写入冲突，原因及解决方法请参考这里    故障诊断 参见故障诊断文档以及 FAQ。</description>
    </item>
    
    <item>
      <title>错误码与故障诊断</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/error-codes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/error-codes/</guid>
      <description>错误码与故障诊断 本篇文档描述在使用 TiDB 过程中会遇到的问题以及解决方法。
错误码 TiDB 兼容 MySQL 的错误码，在大多数情况下，返回和 MySQL 一样的错误码。另外还有一些特有的错误码：
   错误码 说明     8001 请求使用的内存超过 TiDB 内存使用的阈值限制   8002 带有 SELECT FOR UPDATE 语句的事务，在遇到写入冲突时，为保证一致性无法进行重试，事务将进行回滚并返回该错误   8003 ADMIN CHECK TABLE 命令在遇到行数据跟索引不一致的时候返回该错误   8004 单个事务过大，原因及解决方法请参考这里   8005 事务在 TiDB 中遇到了写入冲突，原因及解决方法请参考这里   9001 请求 PD 超时，请检查 PD Server 状态/监控/日志以及 TiDB Server 与 PD Server 之间的网络   9002 请求 TiKV 超时，请检查 TiKV Server 状态/监控/日志以及 TiDB Server 与 TiKV Server 之间的网络   9003 TiKV 操作繁忙，一般出现在数据库负载比较高时，请检查 TiKV Server 状态/监控/日志   9004 当数据库上承载的业务存在大量的事务冲突时，会遇到这种错误，请检查业务代码   9005 某个 Raft Group 不可用，如副本数目不足，出现在 TiKV 比较繁忙或者是 TiKV 节点停机的时候，请检查 TiKV Server 状态/监控/日志   9006 GC Life Time 间隔时间过短，长事务本应读到的数据可能被清理了，应增加 GC Life Time   9007 事务在 TiKV 中遇到了写入冲突，原因及解决方法请参考这里    故障诊断 参见故障诊断文档以及 FAQ。</description>
    </item>
    
    <item>
      <title>集群拓扑信息配置</title>
      <link>https://pingcap.com/docs-cn/dev/how-to/deploy/geographic-redundancy/location-awareness/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/how-to/deploy/geographic-redundancy/location-awareness/</guid>
      <description>集群拓扑信息配置 概述 PD 能够根据 TiKV 集群的拓扑结构进行调度，使得 TiKV 的容灾能力最大化。
阅读本章前，请先确保阅读 Ansible 部署方案 和 Docker 部署方案。
TiKV 上报拓扑信息 可以通过 TiKV 的启动参数或者配置文件来让 TiKV 上报拓扑信息给 PD。
假设拓扑结构分为三级：zone &amp;gt; rack &amp;gt; host，可以通过 labels 来指定这些信息。
启动参数：
tikv-server --labels zone=&amp;lt;zone&amp;gt;,rack=&amp;lt;rack&amp;gt;,host=&amp;lt;host&amp;gt; 配置文件：
 [server] labels = &amp;#34;zone=&amp;lt;zone&amp;gt;,rack=&amp;lt;rack&amp;gt;,host=&amp;lt;host&amp;gt;&amp;#34; PD 理解 TiKV 拓扑结构 可以通过 PD 的配置文件让 PD 理解 TiKV 集群的拓扑结构。
 [replication] max-replicas = 3 location-labels = [&amp;#34;zone&amp;#34;, &amp;#34;rack&amp;#34;, &amp;#34;host&amp;#34;] 其中 location-labels 需要与 TiKV 的 labels 名字对应，这样 PD 才能知道这些 labels 代表了 TiKV 的拓扑结构。</description>
    </item>
    
    <item>
      <title>集群拓扑信息配置</title>
      <link>https://pingcap.com/docs-cn/stable/how-to/deploy/geographic-redundancy/location-awareness/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/how-to/deploy/geographic-redundancy/location-awareness/</guid>
      <description>集群拓扑信息配置 概述 PD 能够根据 TiKV 集群的拓扑结构进行调度，使得 TiKV 的容灾能力最大化。
阅读本章前，请先确保阅读 Ansible 部署方案 和 Docker 部署方案。
TiKV 上报拓扑信息 可以通过 TiKV 的启动参数或者配置文件来让 TiKV 上报拓扑信息给 PD。
假设拓扑结构分为三级：zone &amp;gt; rack &amp;gt; host，可以通过 labels 来指定这些信息。
启动参数：
tikv-server --labels zone=&amp;lt;zone&amp;gt;,rack=&amp;lt;rack&amp;gt;,host=&amp;lt;host&amp;gt; 配置文件：
 [server] labels = &amp;#34;zone=&amp;lt;zone&amp;gt;,rack=&amp;lt;rack&amp;gt;,host=&amp;lt;host&amp;gt;&amp;#34; PD 理解 TiKV 拓扑结构 可以通过 PD 的配置文件让 PD 理解 TiKV 集群的拓扑结构。
 [replication] max-replicas = 3 location-labels = [&amp;#34;zone&amp;#34;, &amp;#34;rack&amp;#34;, &amp;#34;host&amp;#34;] 其中 location-labels 需要与 TiKV 的 labels 名字对应，这样 PD 才能知道这些 labels 代表了 TiKV 的拓扑结构。</description>
    </item>
    
    <item>
      <title>集群拓扑信息配置</title>
      <link>https://pingcap.com/docs-cn/v2.1/how-to/deploy/geographic-redundancy/location-awareness/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v2.1/how-to/deploy/geographic-redundancy/location-awareness/</guid>
      <description>集群拓扑信息配置 概述 PD 能够根据 TiKV 集群的拓扑结构进行调度，使得 TiKV 的容灾能力最大化。
阅读本章前，请先确保阅读 Ansible 部署方案 和 Docker 部署方案。
TiKV 上报拓扑信息 可以通过 TiKV 的启动参数或者配置文件来让 TiKV 上报拓扑信息给 PD。
假设拓扑结构分为三级：zone &amp;gt; rack &amp;gt; host，可以通过 labels 来指定这些信息。
启动参数：
tikv-server --labels zone=&amp;lt;zone&amp;gt;,rack=&amp;lt;rack&amp;gt;,host=&amp;lt;host&amp;gt; 配置文件：
[server] labels = &amp;#34;zone=&amp;lt;zone&amp;gt;,rack=&amp;lt;rack&amp;gt;,host=&amp;lt;host&amp;gt;&amp;#34; PD 理解 TiKV 拓扑结构 可以通过 PD 的配置文件让 PD 理解 TiKV 集群的拓扑结构。
[replication] max-replicas = 3 location-labels = [&amp;#34;zone&amp;#34;, &amp;#34;rack&amp;#34;, &amp;#34;host&amp;#34;] 其中 location-labels 需要与 TiKV 的 labels 名字对应，这样 PD 才能知道这些 labels 代表了 TiKV 的拓扑结构。</description>
    </item>
    
    <item>
      <title>集群拓扑信息配置</title>
      <link>https://pingcap.com/docs-cn/v3.1/how-to/deploy/geographic-redundancy/location-awareness/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/how-to/deploy/geographic-redundancy/location-awareness/</guid>
      <description>集群拓扑信息配置 概述 PD 能够根据 TiKV 集群的拓扑结构进行调度，使得 TiKV 的容灾能力最大化。
阅读本章前，请先确保阅读 Ansible 部署方案 和 Docker 部署方案。
TiKV 上报拓扑信息 可以通过 TiKV 的启动参数或者配置文件来让 TiKV 上报拓扑信息给 PD。
假设拓扑结构分为三级：zone &amp;gt; rack &amp;gt; host，可以通过 labels 来指定这些信息。
启动参数：
tikv-server --labels zone=&amp;lt;zone&amp;gt;,rack=&amp;lt;rack&amp;gt;,host=&amp;lt;host&amp;gt; 配置文件：
 [server] labels = &amp;#34;zone=&amp;lt;zone&amp;gt;,rack=&amp;lt;rack&amp;gt;,host=&amp;lt;host&amp;gt;&amp;#34; PD 理解 TiKV 拓扑结构 可以通过 PD 的配置文件让 PD 理解 TiKV 集群的拓扑结构。
 [replication] max-replicas = 3 location-labels = [&amp;#34;zone&amp;#34;, &amp;#34;rack&amp;#34;, &amp;#34;host&amp;#34;] 其中 location-labels 需要与 TiKV 的 labels 名字对应，这样 PD 才能知道这些 labels 代表了 TiKV 的拓扑结构。</description>
    </item>
    
    <item>
      <title>集群间双向同步</title>
      <link>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/bi-repl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/dev/reference/tidb-binlog/bi-repl/</guid>
      <description>集群间双向同步 本文档介绍如何将一个 TiDB 集群的数据双向同步到另一个 TiDB 集群、双向同步的实现原理、如何开启双向同步、以及如何同步 DDL 操作。
使用场景 当用户需要在两个 TiDB 集群之间双向同步数据时，可使用 TiDB Binlog 进行操作。例如要将集群 A 的数据同步到集群 B，而且要将集群 B 的数据同步到集群 A。
 注意：
写入两个集群的数据无冲突，即不会在两个集群修改表的同一主键或者唯一索引的行。
 使用场景示例图如下：
实现原理 在 A 和 B 两个集群间开启双向同步，则写入集群 A 的数据会同步到集群 B 中，然后这部分数据又会继续同步到集群 A，这样就会出现无限循环同步的情况。如上图所示，在同步数据的过程中 Drainer 对 binlog 加上标记，通过过滤掉有标记的 binlog 来避免循环同步。详细的实现流程如下：
 为两个集群分别启动 TiDB Binlog 同步程序。 待同步的事务经过 A 的 Drainer 时，Drainer 为事务加入 _drainer_repl_mark 标识表，并在表中写入本次 DML event 更新，将事务同步至集群 B。 集群 B 向集群 A 返回带有 _drainer_repl_mark 标识表的 binlog event。集群 B 的 Drainer 在解析该 binlog event 时发现带有 DML event 的标识表，放弃同步该 binlog event 到集群 A。  将集群 B 中的数据同步到 集群 A 的流程与以上流程相同，两个集群可以互为上下游。</description>
    </item>
    
    <item>
      <title>集群间双向同步</title>
      <link>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/bi-repl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/stable/reference/tidb-binlog/bi-repl/</guid>
      <description>集群间双向同步 本文档介绍如何将一个 TiDB 集群的数据双向同步到另一个 TiDB 集群、双向同步的实现原理、如何开启双向同步、以及如何同步 DDL 操作。
使用场景 当用户需要在两个 TiDB 集群之间双向同步数据时，可使用 TiDB Binlog 进行操作。例如要将集群 A 的数据同步到集群 B，而且要将集群 B 的数据同步到集群 A。
 注意：
写入两个集群的数据无冲突，即不会在两个集群修改表的同一主键或者唯一索引的行。
 使用场景示例图如下：
实现原理 在 A 和 B 两个集群间开启双向同步，则写入集群 A 的数据会同步到集群 B 中，然后这部分数据又会继续同步到集群 A，这样就会出现无限循环同步的情况。如上图所示，在同步数据的过程中 Drainer 对 binlog 加上标记，通过过滤掉有标记的 binlog 来避免循环同步。详细的实现流程如下：
 为两个集群分别启动 TiDB Binlog 同步程序。 待同步的事务经过 A 的 Drainer 时，Drainer 为事务加入 _drainer_repl_mark 标识表，并在表中写入本次 DML event 更新，将事务同步至集群 B。 集群 B 向集群 A 返回带有 _drainer_repl_mark 标识表的 binlog event。集群 B 的 Drainer 在解析该 binlog event 时发现带有 DML event 的标识表，放弃同步该 binlog event 到集群 A。  将集群 B 中的数据同步到 集群 A 的流程与以上流程相同，两个集群可以互为上下游。</description>
    </item>
    
    <item>
      <title>集群间双向同步</title>
      <link>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/bi-repl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/docs-cn/v3.1/reference/tidb-binlog/bi-repl/</guid>
      <description>集群间双向同步 本文档介绍如何将一个 TiDB 集群的数据双向同步到另一个 TiDB 集群、双向同步的实现原理、如何开启双向同步、以及如何同步 DDL 操作。
使用场景 当用户需要在两个 TiDB 集群之间双向同步数据时，可使用 TiDB Binlog 进行操作。例如要将集群 A 的数据同步到集群 B，而且要将集群 B 的数据同步到集群 A。
 注意：
写入两个集群的数据无冲突，即不会在两个集群修改表的同一主键或者唯一索引的行。
 使用场景示例图如下：
实现原理 在 A 和 B 两个集群间开启双向同步，则写入集群 A 的数据会同步到集群 B 中，然后这部分数据又会继续同步到集群 A，这样就会出现无限循环同步的情况。如上图所示，在同步数据的过程中 Drainer 对 binlog 加上标记，通过过滤掉有标记的 binlog 来避免循环同步。详细的实现流程如下：
 为两个集群分别启动 TiDB Binlog 同步程序。 待同步的事务经过 A 的 Drainer 时，Drainer 为事务加入 _drainer_repl_mark 标识表，并在表中写入本次 DML event 更新，将事务同步至集群 B。 集群 B 向集群 A 返回带有 _drainer_repl_mark 标识表的 binlog event。集群 B 的 Drainer 在解析该 binlog event 时发现带有 DML event 的标识表，放弃同步该 binlog event 到集群 A。  将集群 B 中的数据同步到 集群 A 的流程与以上流程相同，两个集群可以互为上下游。</description>
    </item>
    
    <item>
      <title>首席项目经理</title>
      <link>https://pingcap.com/about-cn/recruit/business/chief-project-manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/about-cn/recruit/business/chief-project-manager/</guid>
      <description>首席项目经理 岗位职责：
  设计产品 POC 和项目实施交付的相关标准化流程，并根据实际情况不断迭代优化；
  提升产品 POC 和项目实施交付的效率和质量，提升客户满意度，赢得客户信赖；
  对实施交付相关项目管理工作负责，以承接需求为起点，产品服务顺利交付到客户为终点，实现端到端的交付业务管理；
  对项目所涉及的技术方案、规划设计方案、交付方案、合同相关条款等关键点和风险点进行评审把关；
  以科学的数据管理手段为驱动；
  通过培训，提升技术支持服务员工的项目管理能力。
  任职要求：
  全日制本科及以上学历，至少 5 年 IT 背景或软件开发、集成项目工作经验；
  三年以上大型传统企业软件项目实施、交付管理经验；
  熟悉项目管理流程和方法论，具有良好的技术能力和客户服务意识，较强团队管理能力和组织协调能力，能够独立承担项目，解决项目过程中出现的问题；
  有强烈的责任心和时间观念，能够根据项目实际情况制定、推进、分解计划，善于协调各方资源，共同完成目标；
  有 PMP 证书、信息产业部系统集成项目经理证书等优先；
  熟悉数据库领域优先。
  待遇：
Base 20K - 40K，13薪 + 丰厚的年终奖金，优秀者可面议
工作地点：
北京</description>
    </item>
    
    <item>
      <title>首页</title>
      <link>https://pingcap.com/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pingcap.com/</guid>
      <description>进入 PingCAP 官网，体验全新的分布式 HTAP 数据库。</description>
    </item>
    
  </channel>
</rss>